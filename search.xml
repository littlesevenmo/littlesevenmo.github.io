<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>01背包算法笔记</title>
      <link href="//posts/b07a74da/"/>
      <url>//posts/b07a74da/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h1><p>&#x7ED9;&#x5B9A;&#x4E00;&#x7EC4;&#x7269;&#x54C1;&#xFF0C;&#x4E00;&#x5171;<span class="math inline">\(n\)</span>&#x4E2A;&#xFF0C;&#x6BCF;&#x4EF6;&#x7269;&#x54C1;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x91CD;&#x91CF;&#xFF08;<span class="math inline">\(weight\)</span>&#xFF09;&#x548C;&#x4EF7;&#x503C;&#xFF08;<span class="math inline">\(value\)</span>&#xFF09;&#xFF0C;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x627F;&#x91CD;&#x4E3A;<span class="math inline">\(C\)</span>&#x7684;&#x80CC;&#x5305;&#xFF0C;&#x6BCF;&#x4E2A;&#x7269;&#x54C1;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x62FF;&#x6216;&#x8005;&#x4E0D;&#x62FF;&#xFF0C;&#x95EE;&#x8FD9;&#x4E2A;&#x80CC;&#x5305;&#x6700;&#x591A;&#x80FD;&#x5E26;&#x8D70;&#x7684;&#x6700;&#x591A;&#x7684;&#x7269;&#x54C1;&#x603B;&#x4EF7;&#x503C;&#x662F;&#x591A;&#x5C11;</p><h1 id="&#x95EE;&#x9898;&#x5206;&#x6790;">&#x95EE;&#x9898;&#x5206;&#x6790;</h1><p>&#x8D2A;&#x5A6A;&#x7B97;&#x6CD5;&#x662F;&#x65E0;&#x6CD5;&#x6C42;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x3002;</p><p>&#x80CC;&#x5305;&#x95EE;&#x9898;&#x5177;&#x6709;&#x6700;&#x4F18;&#x5B50;&#x7ED3;&#x6784;&#x6027;&#x8D28;&#xFF0C;&#x6240;&#x8C13;&#x6700;&#x4F18;&#x5B50;&#x7ED3;&#x6784;&#x6027;&#x8D28;&#x662F;&#x6307;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x6700;&#x4F18;&#x89E3;&#x4E2D;&#x6240;&#x5305;&#x542B;&#x7684;&#x6240;&#x6709;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x90FD;&#x662F;&#x6700;&#x4F18;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x6C42;&#x89E3;&#x3002;</p><p>&#x5B9A;&#x4E49;&#x5B50;&#x95EE;&#x9898;<span class="math inline">\(P(i, W)\)</span>&#x4E3A;&#x5728;&#x524D;<span class="math inline">\(i\)</span>&#x4E2A;&#x7269;&#x54C1;&#x603B;&#x6311;&#x9009;&#x603B;&#x91CD;&#x91CF;&#x4E0D;&#x8D85;&#x8FC7;<span class="math inline">\(W\)</span>&#x7684;&#x7269;&#x54C1;&#xFF0C;&#x6BCF;&#x79CD;&#x7269;&#x54C1;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x9009;&#x4E00;&#x4E2A;&#xFF0C;&#x4F7F;&#x603B;&#x4EF7;&#x503C;&#x6700;&#x5927;&#x3002;</p><p>&#x8003;&#x8651;&#x7B2C;<span class="math inline">\(i\)</span>&#x4E2A;&#x7269;&#x54C1;&#xFF0C;&#x5C31;&#x4E24;&#x4E2A;&#x9009;&#x62E9;&#xFF1A;&#x9009;&#x6216;&#x8005;&#x4E0D;&#x9009;&#x3002;</p><p>&#x4E0D;&#x9009;&#x7684;&#x8BDD;&#xFF0C;&#x80CC;&#x5305;&#x7684;&#x5BB9;&#x91CF;&#x4E0D;&#x53D8;&#xFF0C;&#x53D8;&#x6210;&#x5B50;&#x95EE;&#x9898;&#xFF1A;<span class="math inline">\(P(i-1, W)\)</span></p><p>&#x9009;&#x7684;&#x8BDD;&#xFF0C;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x53D8;&#x5C0F;&#xFF0C;&#x53D8;&#x6210;&#x5B50;&#x95EE;&#x9898;&#xFF1A;<span class="math inline">\(P(i-1, W-w_i)\)</span>&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x6B64;&#x65F6;&#x80CC;&#x5305;&#x5185;&#x7684;&#x5546;&#x54C1;&#x4EF7;&#x503C;&#x53D8;&#x9AD8;&#x3002;</p><p>&#x6700;&#x4F18;&#x7684;&#x65B9;&#x6848;&#x5C31;&#x662F;&#x6BD4;&#x8F83;&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6848;&#xFF0C;&#x54EA;&#x4E2A;&#x80CC;&#x5305;&#x91CC;&#x9762;&#x7684;&#x4EF7;&#x503C;&#x66F4;&#x9AD8;&#x3002;</p><p>&#x5B9A;&#x4E49;<span class="math inline">\(m(i, W)\)</span>&#x4E3A;&#x5728;<span class="math inline">\(P(i, W)\)</span>&#x4E0B;&#x7684;&#x6700;&#x5927;&#x4EF7;&#x503C;&#x3002;&#x90A3;&#x4E48;&#x6709;&#xFF1A;</p><p><span class="math display">\[m(i, W)=max(m(i-1,W),m(i-1,W-w_i)+v_i)\]</span></p><p><img src="/posts/b07a74da/v2-1d8090c991ca13cee3cb43c027b72304_r.jpg"></p><p>&#x53E6;&#x5916;&#x8003;&#x8651;&#x5230;&#x8FB9;&#x754C;&#x60C5;&#x51B5;&#xFF0C;&#x6700;&#x540E;&#x5F97;&#x5230;&#x7684;&#x89E3;&#x9898;&#x516C;&#x5F0F;&#x662F;&#xFF1A; <span class="math display">\[m(i, W)=\left\{\begin{array}{ll}0 &amp; \text { if } i=0 \\ 0 &amp; \text { if } W=0 \\ m(i-1, W) &amp; \text { if } w_{i}&gt;W \\ \max \left\{m(i-1, W), v_{i}+m\left(i-1, W-w_{i}\right)\right\} &amp; \text { otherwise }\end{array}\right.\]</span></p><h1 id="&#x4F8B;">&#x4F8B;</h1><p>&#x6709;5&#x4E2A;&#x7269;&#x54C1;&#xFF0C;&#xFF08;&#x91CD;&#x91CF;&#xFF0C;&#x4EF7;&#x503C;&#xFF09;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#xFF08;5&#xFF0C;12&#xFF09;&#xFF0C;&#xFF08;4&#xFF0C;3&#xFF09;&#xFF0C;&#xFF08;7&#xFF0C;10&#xFF09;&#xFF0C;&#xFF08;2&#xFF0C;3&#xFF09;&#xFF0C;&#xFF08;6&#xFF0C;6&#xFF09;&#x3002;</p><p>&#x6709;&#x5982;&#x4E0B;&#x9012;&#x63A8;&#x8868;&#x683C;&#xFF1A;</p><table><thead><tr class="header"><th>&#x80CC;&#x5305;&#x5BB9;&#x91CF;</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th></tr></thead><tbody><tr class="odd"><td>&#x6700;&#x591A;&#x653E;5&#x4EF6;</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>6</td><td>12</td><td>12</td><td>15</td><td>15</td><td>18</td><td>22</td><td>22</td><td>25</td><td>25</td></tr><tr class="even"><td>&#x6700;&#x591A;&#x653E;4&#x4EF6;</td><td>0</td><td>0</td><td>3</td><td>3</td><td>3</td><td>3</td><td>3</td><td>12</td><td>12</td><td>15</td><td>15</td><td>18</td><td>22</td><td>22</td><td>25</td><td>25</td></tr><tr class="odd"><td>&#x6700;&#x591A;&#x653E;3&#x4EF6;</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>12</td><td>12</td><td>15</td><td>15</td><td>15</td><td>22</td><td>22</td><td>22</td><td>22</td></tr><tr class="even"><td>&#x6700;&#x591A;&#x653E;2&#x4EF6;</td><td>0</td><td>0</td><td>0</td><td>0</td><td>3</td><td>12</td><td>12</td><td>12</td><td>12</td><td>15</td><td>15</td><td>15</td><td>15</td><td>15</td><td>15</td><td>15</td></tr><tr class="odd"><td>&#x6700;&#x591A;&#x653E;1&#x4EF6;</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>12</td><td>12</td><td>12</td><td>12</td><td>12</td><td>12</td><td>12</td><td>12</td><td>12</td><td>12</td><td>12</td></tr></tbody></table><p>&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> w[<span class="number">6</span>] = { <span class="number">0</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">6</span> };</span><br><span class="line">    <span class="keyword">int</span> v[<span class="number">6</span>] = { <span class="number">0</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">6</span> };</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">5</span>;<span class="comment">//&#x6709;5&#x4E2A;&#x7269;&#x54C1;</span></span><br><span class="line">    <span class="keyword">int</span> C = <span class="number">15</span>;<span class="comment">//&#x5047;&#x5B9A;&#x80CC;&#x5305;&#x7684;&#x6700;&#x5927;&#x5BB9;&#x91CF;&#x4E3A;15</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; dp(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n+<span class="number">1</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        dp[i].resize(C + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= C; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (j &lt; w[i])<span class="comment">//&#x653E;&#x4E0D;&#x4E0B;</span></span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                dp[i][j] = max(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - w[i]] + v[i]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dp[n][C] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF1A;<span class="math inline">\(O(Cn)\)</span>&#xFF0C;<span class="math inline">\(C\)</span>&#x8868;&#x793A;&#x80CC;&#x5305;&#x7684;&#x5BB9;&#x91CF;&#xFF0C;<span class="math inline">\(n\)</span>&#x8868;&#x793A;&#x7269;&#x54C1;&#x7684;&#x6570;&#x91CF;&#x3002;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E0D;&#x80FD;&#x5728;&#x4F18;&#x5316;&#x4E86;</p><p>&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF1A;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x662F;&#x53EF;&#x4EE5;&#x4F18;&#x5316;&#x5230;<span class="math inline">\(O(C)\)</span></p><p>&#x5728;&#x4F18;&#x5316;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x80AF;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x4E3B;&#x5FAA;&#x73AF;<span class="math inline">\(i=1...n\)</span>&#xFF0C;&#x6BCF;&#x6B21;&#x7B97;&#x51FA;&#x6765;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;<span class="math inline">\(dp[i][0...C]\)</span>&#x7684;&#x6240;&#x6709;&#x503C;&#x3002;&#x5982;&#x679C;&#x60F3;&#x53EA;&#x7528;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x90A3;&#x4E48;&#x9700;&#x8981;&#x4FDD;&#x8BC1;&#x7B2C;<span class="math inline">\(i\)</span>&#x6B21;&#x5FAA;&#x73AF;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#xFF0C;<span class="math inline">\(dp\)</span>&#x4E2D;&#x4FDD;&#x5B58;&#x7684;&#x662F;<span class="math inline">\(dp[i]\)</span>&#x3002;</p><p>&#x53C8;&#x7531;&#x4E8E;<span class="math inline">\(dp[i][j]\)</span>&#x662F;&#x7531;<span class="math inline">\(dp[i-1][j]\)</span>&#x548C;<span class="math inline">\(dp[i-1][j-w[i]]\)</span>&#x8FD9;&#x4E24;&#x4E2A;&#x5B50;&#x95EE;&#x9898;&#x9012;&#x63A8;&#x800C;&#x6765;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x4E00;&#x4F4D;&#x6570;&#x7EC4;&#xFF0C;&#x4F46;&#x662F;&#x4ECE;<span class="math inline">\(C...0\)</span>&#x7684;&#x987A;&#x5E8F;&#x9012;&#x63A8;<span class="math inline">\(dp[i]\)</span>&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x8BA1;&#x7B97;<span class="math inline">\(dp[i]\)</span>&#x65F6;&#xFF0C;<span class="math inline">\(dp[i]\)</span>&#x73B0;&#x6709;&#x7684;&#x503C;&#x662F;<span class="math inline">\(dp[i-1][j]\)</span>&#xFF0C;<span class="math inline">\(dp[j-w[i]]\)</span>&#x662F;<span class="math inline">\(dp[i-1][j-w[i]]\)</span>&#x3002;</p><p>&#x6240;&#x4EE5;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> w[<span class="number">6</span>] = { <span class="number">0</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">6</span> };</span><br><span class="line">    <span class="keyword">int</span> v[<span class="number">6</span>] = { <span class="number">0</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">6</span> };</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">5</span>;<span class="comment">//&#x6709;5&#x4E2A;&#x7269;&#x54C1;</span></span><br><span class="line">    <span class="keyword">int</span> C = <span class="number">15</span>;<span class="comment">//&#x5047;&#x5B9A;&#x80CC;&#x5305;&#x7684;&#x6700;&#x5927;&#x5BB9;&#x91CF;&#x4E3A;15</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; dp(C + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = C; j &gt; w[i]; j--)</span><br><span class="line">        {</span><br><span class="line">            dp[j] = max(dp[j], dp[j - w[i]] + v[i]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dp[C] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5173;&#x4E8E;01&#x80CC;&#x5305;&#x95EE;&#x9898;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x95EE;&#x6CD5;&#xFF1A;&#x8981;&#x6C42;&#x6070;&#x597D;&#x88C5;&#x6EE1;&#x80CC;&#x5305;&#xFF0C;&#x6216;&#x8005;&#x53EA;&#x662F;&#x5E0C;&#x671B;&#x4EF7;&#x503C;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x5927;&#x3002;</p><p>&#x5982;&#x679C;&#x662F;&#x6070;&#x597D;&#x88C5;&#x6EE1;&#x80CC;&#x5305;&#xFF0C;&#x5219;&#x5728;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8981;&#x628A;&#x9664;&#x4E86;<span class="math inline">\(dp[0]=0\)</span>&#x5176;&#x4ED6;&#x7684;<span class="math inline">\(dp[1...C]= -&#x221E;\)</span>&#x3002;</p><p>&#x5982;&#x679C;&#x662F;&#x4EF7;&#x503C;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x5927;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;<span class="math inline">\(dp[0...C]=0\)</span></p>]]></content>
      
      <categories>
          
          <category> 背包问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 背包问题 </tag>
            
            <tag> 01背包 </tag>
            
            <tag> 算法笔记 </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浅谈DNS智能解析</title>
      <link href="//posts/204f772a/"/>
      <url>//posts/204f772a/</url>
      <content type="html"><![CDATA[<p>&#x5982;&#x4F55;&#x8BA9;DNS&#x89E3;&#x6790;&#x66F4;&#x52A0;&#x667A;&#x80FD;&#xFF1F;</p><a id="more"></a><h1 id="&#x667A;&#x80FD;&#x89E3;&#x6790;&#x6240;&#x9700;&#x7684;&#x529F;&#x80FD;">&#x667A;&#x80FD;&#x89E3;&#x6790;&#x6240;&#x9700;&#x7684;&#x529F;&#x80FD;</h1><p>&#x667A;&#x80FD;&#x89E3;&#x6790;&#x5E94;&#x8BE5;&#x5305;&#x62EC;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A;</p><ul><li>&#x57FA;&#x4E8E;IP&#x5730;&#x5740;&#x6BB5;&#x667A;&#x80FD;&#x9012;&#x5F52;&#x67E5;&#x8BE2;&#x9009;&#x62E9;&#xFF0C;&#x5373;&#x8BB0;&#x5F55;&#x57FA;&#x4E8E;&#x4E0D;&#x540C;IP&#x5730;&#x5740;&#x6BB5;&#x667A;&#x80FD;&#x9009;&#x62E9;&#x9012;&#x5F52;&#x67E5;&#x8BE2;&#x8BBE;&#x5907;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x5B9E;&#x73B0;&#x5BF9;&#x9012;&#x5F52;&#x67E5;&#x8BE2;&#x8BF7;&#x6C42;&#x7684;&#x5206;&#x6D41;&#x3001;&#x51CF;&#x8377;&#x548C;&#x5F15;&#x5BFC;&#x3002;</li><li>&#x57FA;&#x4E8E;&#x533A;&#x57DF;&#x667A;&#x80FD;&#x57DF;&#x540D;&#x89E3;&#x6790;&#xFF0C;&#x8BB0;&#x5F55;DNS&#x8BF7;&#x6C42;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x533A;&#x57DF;&#x8FD4;&#x56DE;&#x6700;&#x4F18;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x7684;&#x8FC7;&#x7A0B;&#xFF1B;</li><li>&#x57FA;&#x4E8E;&#x7528;&#x6237;&#x7FA4;&#x667A;&#x80FD;&#x57DF;&#x540D;&#x89E3;&#x6790;&#xFF0C;&#x8BB0;&#x5F55;DNS&#x8BF7;&#x6C42;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7528;&#x6237;&#x7FA4;&#x8FD4;&#x56DE;&#x6700;&#x4F18;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x7684;&#x8FC7;&#x7A0B;&#xFF1B;</li><li>&#x57FA;&#x4E8E;&#x7F51;&#x7EDC;&#x667A;&#x80FD;&#x57DF;&#x540D;&#x89E3;&#x6790;&#xFF0C;&#x8BB0;&#x5F55;&#x5F53;&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x6709;&#x591A;&#x4E2A;&#x7ED3;&#x679C;IP&#x5730;&#x5740;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F7F;&#x7528;&#x57FA;&#x4E8E;&#x7F51;&#x7EDC;&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#xFF0C;&#x80FD;&#x628A;&#x5C5E;&#x4E8E;&#x672C;&#x7F51;&#x7684;&#x7ED3;&#x679C;IP&#x5730;&#x5740;&#x4F18;&#x5148;&#x8FD4;&#x56DE;&#x7ED9;&#x7528;&#x6237;&#x3002;</li></ul><p>DNS&#x670D;&#x52A1;&#x8282;&#x70B9;&#x5185;&#x5305;&#x62EC;DNS&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x3001;DNS&#x9012;&#x5F52;&#x8BBE;&#x5907;&#x4E24;&#x79CD;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x5907;&#x3002;&#x5176;&#x4E2D;&#xFF0C;&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x5668;&#x7F13;&#x5B58;&#x4E92;&#x8054;&#x7F51; &#x57DF;&#x540D;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#xFF0C;&#x76F4;&#x63A5;&#x9762;&#x5411;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#xFF1B;&#x5728;&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x7CFB;&#x7EDF;&#x4E2D;&#x672A;&#x67E5;&#x627E;&#x5230;&#x7F13;&#x5B58;&#x5E94;&#x7B54;&#x7ED3;&#x679C;&#x7684;DNS&#x8BF7;&#x6C42;&#xFF0C;&#x5C31;&#x4F1A;&#x5C06;&#x5176;&#x900F;&#x4F20;&#x7ED9;&#x9012;&#x5F52;&#x8BBE;&#x5907;&#xFF0C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x5411;ICP&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x57DF;&#x540D;&#x67E5;&#x8BE2;&#x5E76;&#x5C06;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x5B58;&#x5165;DNS&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x5668;&#x3002;DNS&#x670D;&#x52A1;&#x8282;&#x70B9;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x7684;&#x903B;&#x8F91;&#x529F;&#x80FD;&#x5982;&#x56FE;&#x6240;&#x793A;&#x3002;</p><p><img src="/posts/204f772a/1595652678054.png"></p><h1 id="&#x5173;&#x952E;&#x6280;&#x672F;">&#x5173;&#x952E;&#x6280;&#x672F;</h1><h2 id="&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x5173;&#x952E;&#x6280;&#x672F;">&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x5173;&#x952E;&#x6280;&#x672F;</h2><p>DNS&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x9762;&#x5411;&#x8BBF;&#x95EE;&#x7528;&#x6237;&#xFF0C;&#x4E3A;&#x5176;&#x63D0;&#x4F9B;&#x76F4;&#x63A5;&#x7684;DNS&#x57FA;&#x672C;&#x89E3;&#x6790;&#x670D;&#x52A1;&#xFF0C;&#x6309;&#x7167;&#x670D;&#x52A1;&#x5BF9;&#x8C61;&#x7684;&#x7C7B;&#x578B;&#x5212;&#x5206;&#x7F13;&#x5B58;&#x89C6;&#x56FE;&#x5206;&#x533A;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x89C6;&#x56FE;&#x63D0;&#x4F9B;&#x4E0D;&#x540C;&#x7684;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x3002;&#x670D;&#x52A1;&#x5BF9;&#x8C61;&#x901A;&#x5E38;&#x6709;&#x4EE5;&#x4E0B;&#x7C7B;&#x578B;&#xFF1A;&#x56FA;&#x7F51;&#x7528;&#x6237;&#x3001;&#x79FB;&#x52A8;&#x7F51;&#x7528;&#x6237;&#x3001;&#x9AD8;&#x8D28;&#x91CF;&#x7528;&#x6237;&#x3001;&#x7279;&#x5B9A;&#x7684;&#x533A;&#x57DF;&#x7528;&#x6237;&#x3002;&#x670D;&#x52A1;&#x7528;&#x6237;&#x7684;&#x5C5E;&#x6027;&#x76EE;&#x524D;&#x4EE5;&#x7528;&#x6237;&#x7684;IP&#x5730;&#x5740;&#x6BB5;&#x8FDB;&#x884C;&#x533A;&#x5206;&#xFF0C;&#x5373;&#x4E8B;&#x5148;&#x6839;&#x636E;&#x7528;&#x6237;IP&#x5730;&#x5740;&#x6BB5;&#x5212;&#x5206;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x7EC4;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x7F51;&#x7EDC;&#x8FD0;&#x8425;&#x8005;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#x5B9A;&#x4E49;&#xFF0C;&#x4EE5;IP&#x5730;&#x5740;&#x6BB5;&#x533A;&#x5206;&#x56FA;&#x7F51;&#x7528;&#x6237;&#x3001;&#x79FB;&#x52A8;&#x7528;&#x6237;&#x3001;&#x67D0;&#x5730;&#x5E02;&#x533A;&#x57DF;&#x7528;&#x6237;&#x7B49;&#x3002;</p><p>&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x4E3B;&#x8981;&#x901A;&#x8FC7;&#x7F13;&#x5B58;&#x89C6;&#x56FE;&#x5B9E;&#x73B0;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x6280;&#x672F;&#x3002;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x89C6;&#x56FE;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x518D;&#x5C06;&#x7528;&#x6237;&#x7EC6;&#x5316;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x7EC4;&#x4E2D;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x7EC4;&#x8FD4;&#x56DE;&#x4E0D;&#x540C;&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5BF9;&#x4E8E;&#x666E;&#x901A;&#x7684;&#x56FA;&#x7F51;&#x7528;&#x6237;&#xFF0C;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x7701;&#x4EFD;&#x6216;&#x8005;&#x6240;&#x5C5E;&#x8FD0;&#x8425;&#x5546;&#x7B49;&#x4E0D;&#x540C;&#x7684;&#x7EF4;&#x5EA6;&#xFF0C;&#x7EC6;&#x5316;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x7EC4;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x7EC4;&#x6309;&#x7167;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x7B56;&#x7565;&#x4F18;&#x5148;&#x8FD4;&#x56DE;&#x4E0D;&#x540C;&#x7684;&#x89E3;&#x6790;&#x7ED3;&#x679C;</p><p>&#x4E3B;&#x8981;&#x6280;&#x672F;&#x65B9;&#x6848;&#x5982;&#x4E0B;&#xFF1A;</p><ol type="1"><li>&#x57FA;&#x4E8E;&#x533A;&#x57DF;&#x667A;&#x80FD;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x53EF;&#x4EE5;&#x5BF9;&#x67D0;&#x57DF;&#x540D;&#x7684;DNS&#x8BF7;&#x6C42;&#x6309;&#x7167;&#x4E0D;&#x540C;&#x7684;&#x7F51;&#x7EDC;&#x533A;&#x57DF;&#x8303;&#x56F4;&#xFF0C;&#x8FD4;&#x56DE;&#x6700;&#x4F18;&#x7684;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#xFF0C;&#x4EE5;&#x63D0;&#x9AD8;&#x89E3;&#x6790;&#x901F;&#x5EA6;&#x53CA;&#x7528;&#x6237;&#x4E1A;&#x52A1;&#x4F53;&#x9A8C;&#x3002;</li><li>&#x57FA;&#x4E8E;&#x7528;&#x6237;&#x7FA4;&#x667A;&#x80FD;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x53EF;&#x4EE5;&#x5BF9;&#x67D0;&#x57DF;&#x540D;&#x7684;DNS&#x8BF7;&#x6C42;&#x6309;&#x7167;&#x7528;&#x6237;&#x7FA4;&#x8FD4;&#x56DE;&#x4E0D;&#x540C;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;QQ&#x7B49;&#x7F51;&#x7AD9;&#x4E3A;&#x57FA;&#x672C;&#x5BBD;&#x5E26;&#x7528;&#x6237;&#x7FA4;&#x548C;4G&#x7528;&#x6237;&#x7FA4;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;&#x7F51;&#x7AD9;&#xFF0C;&#x7CFB;&#x7EDF;&#x53EF;&#x4EE5;&#x57FA;&#x4E8E;&#x57FA;&#x672C;&#x5BBD;&#x5E26;&#x7528;&#x6237;&#x7FA4;&#x548C;4G&#x7528;&#x6237;&#x7FA4;&#x8FD4;&#x56DE;&#x4E0D;&#x540C;&#x7684;&#x670D;&#x52A1;&#x5730;&#x5740;&#xFF0C;&#x4EE5;&#x63D0;&#x9AD8;&#x7528;&#x6237;&#x7684;&#x4E1A;&#x52A1;&#x4F53;&#x9A8C;&#x3002;</li><li>&#x57FA;&#x4E8E;&#x7F51;&#x7EDC;&#x667A;&#x80FD;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x5F53;&#x89E3;&#x6790;&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x8FD4;&#x56DE;&#x591A;&#x4E2A;&#x7ED3;&#x679C;&#x65F6;&#xFF0C;&#x53EF;&#x80FD;&#x5305;&#x62EC;&#x5916;&#x7701;&#x6216;&#x5176;&#x4ED6;&#x8FD0;&#x8425;&#x5546;&#x7684;IP&#x5730;&#x5740;&#xFF0C;&#x8FD9;&#x65F6;&#x5E0C;&#x671B;&#x603B;&#x662F;&#x628A;&#x672C;&#x7F51;&#x7684;IP&#x5730;&#x5740;&#x8FD4;&#x56DE;&#x7ED9;&#x7528;&#x6237;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x57FA;&#x4E8E;&#x7F51;&#x7EDC;&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#xFF0C;&#x628A;&#x672C;&#x7F51;&#x7684;IP&#x5730;&#x5740;&#x4F18;&#x5148;&#x8FD4;&#x56DE;&#x7ED9;&#x7528;&#x6237;&#x3002;</li><li>&#x5168;&#x5C40;&#x6216;IP&#x5730;&#x5740;&#x6BB5;&#x5F3A;&#x5236;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x5F3A;&#x5236;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x529F;&#x80FD;&#xFF08;&#x5206;&#x4E3A;&#x5168;&#x5C40;&#x5F3A;&#x5236;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x548C;IP&#x5730;&#x5740;&#x6BB5;&#x5F3A;&#x5236;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x4E24;&#x79CD;&#xFF09;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5BF9;&#x6E90;&#x4E3A;&#x5168;&#x5C40;IP&#x5730;&#x5740;&#x6216;&#x7279;&#x5B9A;IP&#x5730;&#x5740;&#x6BB5;&#x7684;&#x5728;&#x67E5;&#x8BE2;&#x67D0;&#x4E9B;&#x7279;&#x6B8A;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x8FD4;&#x56DE;&#x9884;&#x8BBE;&#x7684;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#xFF0C;&#x65E2;&#x4E0D;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x67E5;&#x8BE2;&#xFF0C;&#x4E5F;&#x4E0D;&#x8FDB;&#x884C;&#x540E;&#x7AEF;&#x67E5;&#x8BE2;&#x548C;proxy&#x67E5;&#x8BE2;&#xFF0C;&#x4ECE;&#x800C;&#x52A0;&#x5FEB;&#x670D;&#x52A1;&#x5668;&#x7684;&#x89E3;&#x6790;&#x901F;&#x5EA6;&#xFF0C;&#x63D0;&#x9AD8;&#x4E86;&#x670D;&#x52A1;&#x5668;&#x7684;&#x6709;&#x6548;&#x8D1F;&#x8F7D;&#xFF0C;&#x89E3;&#x51B3;&#x4E86;&#x5B89;&#x5168;&#x9690;&#x60A3;&#x95EE;&#x9898;&#x3002;</li><li>&#x6CDB;&#x5730;&#x5740;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x6CDB;&#x5730;&#x5740;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x529F;&#x80FD;&#x5C06;&#x524D;&#x7F00;&#x4E0D;&#x786E;&#x5B9A;&#x7684;&#x57DF;&#x540D;&#x7EDF;&#x4E00;&#x89E3;&#x6790;&#x6210;&#x9884;&#x8BBE;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x4E3A;DNS&#x7F51;&#x7BA1;&#x4EBA;&#x5458;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x4FBF;&#x6377;&#x3001;&#x9AD8;&#x6548;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x80FD;&#x5BF9;&#x76F8;&#x5E94;&#x90E8;&#x95E8;&#x53D1;&#x73B0;&#x7684;&#x6709;&#x95EE;&#x9898;&#x57DF;&#x540D;&#x8FDB;&#x884C;&#x5C01;&#x5835;&#xFF08;&#x5982;&#x4E0D;&#x6CD5;&#x5206;&#x5B50;&#x5229;&#x7528;DNS&#x53D1;&#x5E03;&#x5BF9;&#x56FD;&#x5BB6;&#x6709;&#x5BB3;&#x7684;&#x4FE1;&#x606F;&#x3001;&#x7F51;&#x4E0A;&#x8D4C;&#x535A;&#x3001;&#x57DF;&#x540D;&#x653B;&#x51FB;&#x884C;&#x4E3A;&#x7B49;&#xFF09;&#x3002;</li></ol><h2 id="&#x9012;&#x5F52;&#x8BBE;&#x5907;&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x5173;&#x952E;&#x6280;&#x672F;">&#x9012;&#x5F52;&#x8BBE;&#x5907;&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x5173;&#x952E;&#x6280;&#x672F;</h2><p>DNS&#x8282;&#x70B9;&#x4E2D;&#xFF0C;&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x548C;&#x9012;&#x5F52;&#x8BBE;&#x5907;&#x662F;&#x7D27;&#x8026;&#x5408;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x9012;&#x5F52;&#x8BBE;&#x5907;&#x4E3A;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x670D;&#x52A1;&#xFF0C;&#x5728;&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x7CFB;&#x7EDF;&#x4E2D;&#x672A;&#x67E5;&#x627E;&#x5230;&#x7F13;&#x5B58;&#x5E94;&#x7B54;&#x7ED3;&#x679C;&#x7684;DNS&#x8BF7;&#x6C42;&#xFF0C;&#x5C31;&#x4F1A;&#x5C06;&#x5176;&#x900F;&#x4F20;&#x7ED9;&#x9012;&#x5F52;&#x8BBE;&#x5907;&#x3002;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x8D1F;&#x8D23;&#x67E5;&#x8BE2;ICP&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x6216;&#x8054;&#x7CFB;&#x5176;&#x4ED6;DNS&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5E76;&#x968F;&#x540E;&#x5C06;&#x8FD4;&#x56DE;&#x7684;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x5B58;&#x5165;DNS&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x5668;&#x3002;&#x9012;&#x5F52;&#x8BBE;&#x5907;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x5B9E;&#x73B0;&#x7684;&#x5173;&#x952E;&#x6280;&#x672F;&#x529F;&#x80FD;&#x4E3B;&#x8981;&#x5982;&#x4E0B;&#x3002;</p><ol type="1"><li>&#x57FA;&#x4E8E;IP&#x5730;&#x5740;&#x6BB5;&#x667A;&#x80FD;&#x9012;&#x5F52;&#x9009;&#x62E9;&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x6839;&#x636E;&#x57DF;&#x540D;&#x67E5;&#x8BE2;&#x7684;&#x7528;&#x6237;&#x5C5E;&#x6027;&#xFF0C;&#x5C06;&#x4E0D;&#x540C;&#x7528;&#x6237;&#x7684;DNS&#x8BF7;&#x6C42;&#x667A;&#x80FD;&#x8C03;&#x5EA6;&#x5230;&#x76F8;&#x5173;&#x7684;&#x9012;&#x5F52;&#x8BBE;&#x5907;&#x4E2D;&#x3002;&#x5B9E;&#x73B0;&#x5BF9;&#x9012;&#x5F52;&#x67E5;&#x8BE2;&#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x5206;&#x6D41;&#x548C;&#x5F15;&#x5BFC;&#xFF0C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x91C7;&#x7528;&#x7279;&#x5B9A;&#x7684;&#x670D;&#x52A1;&#x5730;&#x5740;&#x5411;&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x9012;&#x5F52;&#x57DF;&#x540D;&#x67E5;&#x8BE2;&#xFF0C;&#x4ECE;&#x800C;&#x83B7;&#x53D6;&#x6700;&#x4F18;&#x7684;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x3002;</li><li>&#x9012;&#x5F52;&#x8BBE;&#x5907;&#x95F4;&#x7684;&#x667A;&#x80FD;&#x8C03;&#x5EA6;&#x5E94;&#x7528;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x7684;&#x667A;&#x80FD;&#x8C03;&#x5EA6;&#xFF0C;&#x9664;&#x4E86;&#x53EF;&#x4EE5;&#x5F88;&#x597D;&#x5730;&#x5B9E;&#x73B0;&#x5404;&#x4E2A;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x7684;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x5916;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x7ED3;&#x5408;&#x7F51;&#x7EDC;&#x8DDD;&#x79BB;&#x3001;&#x8FD0;&#x8425;&#x5546;&#x7B49;&#x7B56;&#x7565;&#xFF0C;&#x5B9E;&#x73B0;&#x7528;&#x6237;DNS&#x8BF7;&#x6C42;&#x7684;&#x5C31;&#x8FD1;&#x9012;&#x5F52;&#x89E3;&#x6790;&#x6216;&#x8005;&#x672C;&#x7F51;&#x9012;&#x5F52;&#x89E3;&#x6790;&#x7B49;&#x3002;</li></ol><h1 id="dns&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x4F18;&#x5316;&#x65B9;&#x6848;">DNS&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x4F18;&#x5316;&#x65B9;&#x6848;</h1><h2 id="&#x5229;&#x7528;&#x7F13;&#x5B58;&#x6A21;&#x5757;&#x5316;&#x89C6;&#x56FE;&#x6280;&#x672F;&#x8FDB;&#x884C;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x7684;&#x4F18;&#x5316;">&#x5229;&#x7528;&#x7F13;&#x5B58;&#x6A21;&#x5757;&#x5316;&#x89C6;&#x56FE;&#x6280;&#x672F;&#x8FDB;&#x884C;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x7684;&#x4F18;&#x5316;</h2><p>&#x9762;&#x5BF9;&#x65E5;&#x76CA;&#x590D;&#x6742;&#x7684;&#x5168;&#x7F51;&#x8D44;&#x6E90;&#x6309;&#x9700;&#x8C03;&#x5EA6;&#x9700;&#x8981;&#x4EE5;&#x53CA;&#x9AD8;&#x8D28;&#x91CF;&#x7528;&#x6237;&#x6240;&#x9700;&#x6C42;&#x7684;&#x9AD8;&#x8D28;&#x91CF;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#xFF0C;&#x91C7;&#x7528;&#x6A21;&#x5757;&#x5316;&#x56FE;&#x6280;&#x672F;&#xFF0C;&#x4EE5;&#x7528;&#x6237;&#x5C5E;&#x6027;&#x4E3A;&#x7EF4;&#x5EA6;&#xFF0C;&#x5212;&#x5206;&#x7F13;&#x5B58;&#x6A21;&#x5757;&#x89C6;&#x56FE;&#xFF0C;&#x4E0D;&#x540C;&#x7EF4;&#x5EA6;&#x7684;&#x7528;&#x6237;&#x7FA4;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x4E0D;&#x540C;&#x7684;DNS&#x5E94;&#x7B54;&#x7ED3;&#x679C;&#xFF0C;&#x6BCF;&#x4E2A;&#x7EF4;&#x5EA6;&#x5355;&#x72EC;&#x7EF4;&#x62A4;&#x81EA;&#x5DF1;&#x7684;DNS&#x7F13;&#x5B58;&#x7ED3;&#x679C;&#x3002;&#x7528;&#x6237;&#x5C5E;&#x6027;&#x8BC6;&#x522B;&#x901A;&#x8FC7;&#x7528;&#x6237;&#x7684;DNS&#x67E5;&#x8BE2;&#x62A5;&#x6587;&#x7684;&#x6E90;IP&#x5730;&#x5740;&#x8FDB;&#x884C;&#x533A;&#x5206;&#x3002;&#x5728;&#x5B9A;&#x5236;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x7B56;&#x7565;&#x524D;&#xFF0C;&#x9996;&#x5148;&#x9700;&#x8981;&#x5B9A;&#x4E49;&#x7528;&#x6237;&#x5C5E;&#x6027;&#x7684;&#x5206;&#x7EC4;&#xFF0C;&#x4EE5;&#x4E0D;&#x540C;&#x7528;&#x6237;&#x7684;&#x6E90;IP&#x5730;&#x5740;&#x6BB5;&#x4E3A;&#x4F9D;&#x636E;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#xFF0C;&#x4F8B;&#x5982;&#x5206;&#x7EC4;1&#x4E3A;&#x5E7F;&#x5DDE;&#x5E02;&#x7528;&#x6237;&#x3001;&#x5206;&#x7EC4;2&#x4E3A;&#x6DF1;&#x5733;&#x5E02;&#x7528;&#x6237;&#x3001;&#x5206;&#x7EC4;N&#x4E3A;&#x9AD8;&#x8D28;&#x91CF;&#x7528;&#x6237;&#x7B49;&#x3002;</p><p>DNS&#x6A21;&#x5757;&#x5316;&#x7F13;&#x5B58;&#x89C6;&#x56FE;&#x539F;&#x7406;&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x7528;&#x6237;&#x8BC6;&#x522B;&#x6A21;&#x5757;&#x5C06;DNS&#x57DF;&#x540D;&#x8BB0;&#x5F55;&#x6570;&#x636E;&#x4EE5;&#x7528;&#x6237;&#x5C5E;&#x6027;&#x4E3A;&#x7EF4;&#x5EA6;&#x5212;&#x5206;&#x4E0D;&#x540C;&#x7684;&#x7EC4;&#xFF0C;DNS&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x63A5;&#x6536;&#x5230;&#x7528;&#x6237;&#x7684;&#x62A5;&#x6587;&#x5373;&#x53EF;&#x4ECE;&#x6E90;IP&#x5730;&#x5740;&#x5224;&#x65AD;&#x5176;&#x6240;&#x5C5E;&#x5206;&#x7EC4;&#xFF1B;DNS&#x7F13;&#x5B58;&#x540C;&#x6837;&#x4EE5;&#x7528;&#x6237;&#x5206;&#x7EC4;&#x4E3A;&#x7EF4;&#x5EA6;&#xFF0C;&#x5BF9;&#x5E94;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x7247;&#x7F13;&#x5B58;&#xFF0C;&#x76F8;&#x540C;&#x57DF;&#x540D;&#x7684;&#x5206;&#x7247;&#x7F13;&#x5B58;&#x4EE5;&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x5F62;&#x5F0F;&#x5173;&#x8054;&#x5728;&#x4E00;&#x8D77;&#x3002;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x7247;&#x7F13;&#x5B58;&#x5B58;&#x50A8;&#x5BF9;&#x5E94;&#x7528;&#x6237;&#x5C5E;&#x6027;&#x7684;&#x6700;&#x4F18;DNS&#x5E94;&#x7B54;&#x7ED3;&#x679C;&#xFF0C;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x4E0D;&#x540C;&#x7528;&#x6237;&#x90FD;&#x80FD;&#x591F;&#x5F97;&#x5230;&#x6700;&#x4F18;&#x7684;&#x5E94;&#x7B54;&#x7ED3;&#x679C;&#xFF0C;&#x63D0;&#x9AD8;&#x7528;&#x6237;&#x7684;&#x4E0A;&#x7F51;&#x4F53;&#x9A8C;&#x3002;</p><p><img src="/posts/204f772a/1595652789955.png"></p><p>&#x6A21;&#x5757;&#x5316;&#x7F13;&#x5B58;&#x89C6;&#x56FE;&#x6280;&#x672F;&#x7684;&#x4E3B;&#x8981;&#x4F18;&#x52BF;&#x5982;&#x4E0B;&#x3002;</p><ol type="1"><li><p>&#x7B80;&#x5355;&#x6027;&#x6BCF;&#x4E00;&#x79CD;&#x5C5E;&#x6027;&#x7684;&#x7528;&#x6237;&#x7FA4;&#x6709;&#x5BF9;&#x5E94;&#x7684;&#x89C6;&#x56FE;&#x8FDB;&#x884C;&#x670D;&#x52A1;&#xFF0C;&#x5728;&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x5668;&#x7684;&#x529F;&#x80FD;&#x5B9E;&#x73B0;&#x548C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x65B9;&#x9762;&#x90FD;&#x5177;&#x6709;&#x53EF;&#x64CD;&#x4F5C;&#x6027;&#x3001;&#x6613;&#x4E8E;&#x7BA1;&#x7406;&#x7B49;&#x7279;&#x70B9;&#x3002;</p></li><li><p>&#x5B89;&#x5168;&#x6027;&#xFF1A;&#x901A;&#x8FC7;&#x89C6;&#x56FE;&#xFF0C;&#x7528;&#x6237;&#x53EA;&#x80FD;&#x770B;&#x5230;&#x548C;&#x67E5;&#x8BE2;&#x5B83;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x89C6;&#x56FE;&#x53CA;&#x57DF;&#x540D;&#x6570;&#x636E;&#xFF0C;&#x5BF9;&#x4E8E;&#x5176;&#x4ED6;&#x89C6;&#x56FE;&#xFF0C;&#x7528;&#x6237;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x7ED3;&#x679C;&#x3002;</p></li><li><p>&#x4E0D;&#x540C;&#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x5339;&#x914D;&#x4E0D;&#x540C;&#x7684;&#x5BF9;&#x5916;DNS&#x670D;&#x52A1;&#x5730;&#x5740;&#xFF1A;&#x4E3A;&#x4E86;&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x5347;&#x7F13;&#x5B58;&#x89C6;&#x56FE;&#x7684;&#x4E0D;&#x540C;&#x7EF4;&#x5EA6;&#x5206;&#x7EC4;&#x670D;&#x52A1;&#x80FD;&#x529B;&#xFF0C;&#x8FD0;&#x8425;&#x5546;&#x6240;&#x5E94;&#x7528;&#x7684;&#x7F13;&#x5B58;&#x89C6;&#x56FE;&#x6280;&#x672F;&#xFF0C;&#x4E0D;&#x4F46;&#x53EF;&#x4EE5;&#x5339;&#x914D;&#x7528;&#x6237;&#x6E90;&#x5730;&#x5740;&#x6BB5;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x4E0D;&#x540C;&#x5206;&#x7EC4;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5339;&#x914D;&#x7528;&#x6237;&#x6240;&#x8BBF;&#x95EE;&#x7684;&#x4E0D;&#x540C;DNS&#x670D;&#x52A1;&#x5730;&#x5740;&#xFF0C;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x7EC4;&#x5212;&#x5206;&#xFF0C;&#x5373;&#x540C;&#x4E00;&#x4E2A;DNS&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x591A;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x5BF9;&#x5916;&#x670D;&#x52A1;&#x5730;&#x5740;&#xFF0C;&#x591A;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740;&#x53EF;&#x4EE5;&#x5173;&#x8054;&#x5BF9;&#x5E94;&#x7684;&#x6A21;&#x5757;&#x5316;&#x89C6;&#x56FE;&#xFF08;&#x4F8B;&#x5982;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x5757;&#x5316;&#x89C6;&#x56FE;&#x53EF;&#x5206;&#x522B;&#x914D;&#x7F6E;118.118.118.1&#x548C;118.118.118.2&#x7684;&#x670D;&#x52A1;&#x5730;&#x5740;&#xFF09;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x7528;&#x6237;&#x7FA4;&#x53EF;&#x80FD;&#x4F1A;&#x8BBF;&#x95EE;&#x4E0D;&#x540C;&#x7684;&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740;&#xFF0C;&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x5668;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x7528;&#x6237;&#x8BBF;&#x95EE;&#x7684;&#x670D;&#x52A1;&#x5730;&#x5740;&#x5339;&#x914D;&#x5BF9;&#x5E94;&#x7684;&#x89C6;&#x56FE;&#x3002;</p></li></ol><h2 id="&#x5229;&#x7528;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x6309;&#x9700;&#x667A;&#x80FD;&#x9012;&#x5F52;&#x8C03;&#x5EA6;&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x4F18;&#x5316;">&#x5229;&#x7528;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x6309;&#x9700;&#x667A;&#x80FD;&#x9012;&#x5F52;&#x8C03;&#x5EA6;&#x7684;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x4F18;&#x5316;</h2><p>&#x4E3A;&#x4E86;&#x914D;&#x5408;&#x7F13;&#x5B58;&#x8BBE;&#x5907;&#x6A21;&#x5757;&#x89C6;&#x56FE;&#x7684;&#x89E3;&#x6790;&#x7CBE;&#x786E;&#x6027;&#xFF0C;&#x9700;&#x8981;&#x5BF9;&#x672C;&#x5730;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x6309;&#x9700;&#x667A;&#x80FD;&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#x8C03;&#x5EA6;&#xFF0C;&#x5C06;DNS&#x8BF7;&#x6C42;&#x6309;&#x9700;&#x5730;&#x8C03;&#x5EA6;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x5F97;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x5E94;&#x7B54;&#x7ED3;&#x679C;&#x3002;</p><p>&#x4F20;&#x7EDF;&#x7684;DNS&#x8F6C;&#x53D1;&#x7B56;&#x7565;&#x90FD;&#x662F;&#x91C7;&#x7528;&#x8F6E;&#x8BE2;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#xFF0C;&#x8F6E;&#x8BE2;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#x7684;&#x539F;&#x7406;&#x662F;&#x6BCF;&#x4E00;&#x6B21;&#x628A;&#x6765;&#x81EA;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#x8F6E;&#x6D41;&#x5206;&#x914D;&#x7ED9;DNS&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4ECE;&#x7B2C;1&#x4E2A;&#x5F00;&#x59CB;&#xFF0C;&#x76F4;&#x5230;&#x7B2C;N&#xFF08;&#x5185;&#x90E8;&#x670D;&#x52A1;&#x5668;&#x4E2A;&#x6570;&#xFF09;&#x4E2A;&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x65B0;&#x5F00;&#x59CB;&#x5FAA;&#x73AF;&#x3002;&#x8F6E;&#x8BE2;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#x7684;&#x4F18;&#x70B9;&#x662F;&#x7B80;&#x6D01;&#xFF0C;&#x65E0;&#x9700;&#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x6240;&#x6709;&#x8FDE;&#x63A5;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x6240;&#x4EE5;&#x662F;&#x4E00;&#x79CD;&#x65E0;&#x72B6;&#x6001;&#x8C03;&#x5EA6;&#x3002;</p><p>&#x8F6E;&#x8BE2;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#x524D;&#x63D0;&#x662F;&#x6240;&#x6709;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5904;&#x7406;&#x6027;&#x80FD;&#x90FD;&#x76F8;&#x540C;&#xFF0C;&#x4E0D;&#x5173;&#x6CE8;&#x6BCF;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5F53;&#x524D;&#x8FDE;&#x63A5;&#x6570;&#x548C;&#x54CD;&#x5E94;&#x901F;&#x5EA6;&#x3002;&#x5F53;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x95F4;&#x9694;&#x65F6;&#x95F4;&#x53D8;&#x5316;&#x6BD4;&#x8F83;&#x5927;&#x65F6;&#xFF0C;&#x8F6E;&#x8BE2;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#x5BB9;&#x6613;&#x5BFC;&#x81F4;&#x670D;&#x52A1;&#x5668;&#x95F4;&#x7684;&#x8D1F;&#x8F7D;&#x4E0D;&#x5E73;&#x8861;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6B64;&#x79CD;&#x5747;&#x8861;&#x7B97;&#x6CD5;&#x9002;&#x5408;&#x4E8E;&#x670D;&#x52A1;&#x5668;&#x7EC4;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x670D;&#x52A1;&#x5668;&#x90FD;&#x6709;&#x76F8;&#x540C;&#x7684;&#x8F6F;&#x786C;&#x4EF6;&#x914D;&#x7F6E;&#x5E76;&#x4E14;&#x5E73;&#x5747;&#x670D;&#x52A1;&#x8BF7;&#x6C42;&#x76F8;&#x5BF9;&#x5747;&#x8861;&#x7684;&#x60C5;&#x51B5;&#x3002;</p><p>DNS&#x667A;&#x80FD;&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#x8003;&#x8651;&#x5230;&#x4E0D;&#x540C;DNS&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x5904;&#x7406;&#x6027;&#x80FD;&#xFF0C;&#x91C7;&#x7528;&#x4E86;&#x57FA;&#x4E8E;&#x6743;&#x91CD;&#x7684;&#x8F6E;&#x8BE2;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#x3002;&#x7531;&#x4E8E;&#x6BCF;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x7684;&#x914D;&#x7F6E;&#x3001;&#x5B89;&#x88C5;&#x7684;&#x4E1A;&#x52A1;&#x5E94;&#x7528;&#x7B49;&#x4E0D;&#x540C;&#xFF0C;&#x5176;&#x5904;&#x7406;&#x80FD;&#x529B;&#x4F1A;&#x4E0D;&#x4E00;&#x6837;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6839;&#x636E;&#x670D;&#x52A1;&#x5668;&#x7684;&#x4E0D;&#x540C;&#x5904;&#x7406;&#x80FD;&#x529B;&#xFF0C;&#x7ED9;&#x6BCF;&#x4E2A;&#x670D;&#x52A1;&#x5668;&#x5206;&#x914D;&#x4E0D;&#x540C;&#x7684;&#x6743;&#x503C;&#xFF0C;&#x4F7F;&#x5176;&#x80FD;&#x591F;&#x63A5;&#x53D7;&#x76F8;&#x5E94;&#x6743;&#x503C;&#x6570;&#x7684;&#x670D;&#x52A1;&#x8BF7;&#x6C42;&#x3002;</p><p>&#x5047;&#x8BBE;&#x6709;&#x4E00;&#x7EC4;&#x670D;&#x52A1;&#x5668;S=&#xFF5B;S0&#xFF0C;S1&#xFF0C;&#x2026;&#xFF0C;Sn-1}&#xFF0C;W(Si)&#x8868;&#x793A;&#x670D;&#x52A1;&#x5668;Si&#x7684;&#x6743;&#x503C;&#xFF0C;&#x4E00;&#x4E2A;&#x6307;&#x793A;&#x53D8;&#x91CF;i&#x8868;&#x793A;&#x4E0A;&#x4E00;&#x6B21;&#x9009;&#x62E9;&#x7684;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x6307;&#x793A;&#x53D8;&#x91CF;cw&#x8868;&#x793A;&#x5F53;&#x524D;&#x8C03;&#x5EA6;&#x7684;&#x6743;&#x503C;&#xFF0C;max(S)&#x8868;&#x793A;&#x96C6;&#x5408;S&#x4E2D;&#x6240;&#x6709;&#x670D;&#x52A1;&#x5668;&#x7684;&#x6700;&#x5927;&#x6743;&#x503C;&#xFF0C;gcd(S)&#x8868;&#x793A;&#x96C6;&#x5408;S&#x4E2D;&#x6240;&#x6709;&#x670D;&#x52A1;&#x5668;&#x6743;&#x503C;&#x7684;&#x6700;&#x5927;&#x516C;&#x7EA6;&#x6570;&#x3002;&#x53D8;&#x91CF;i&#x521D;&#x59CB;&#x5316;&#x4E3A;-1&#xFF0C;cw&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x96F6;&#x3002;</p><p>&#x4E3B;&#x8981;&#x7B97;&#x6CD5;&#x6D41;&#x7A0B;&#x5982;&#x56FE;&#x6240;&#x793A;&#x3002;</p><p><img src="/posts/204f772a/1595652856874.png"></p><p>&#x901A;&#x8FC7;&#x667A;&#x80FD;&#x9012;&#x5F52;&#x6280;&#x672F;&#xFF0C;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x8C03;&#x52A8;&#x4E0D;&#x540C;&#x80FD;&#x529B;&#x7684;&#x670D;&#x52A1;&#x5668;&#x8D44;&#x6E90;&#x5411;&#x5916;&#x8FDB;&#x884C;DNS&#x9012;&#x5F52;&#x67E5;&#x8BE2;&#xFF0C;&#x5E76;&#x7ED3;&#x5408;&#x7F13;&#x5B58;&#x5206;&#x7247;&#x89C6;&#x56FE;&#x7684;&#x8054;&#x52A8;&#xFF0C;&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x9AD8;&#x4E86;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x7684;&#x51C6;&#x786E;&#x6027;&#x3001;&#x9AD8;&#x6548;&#x6027;&#x3001;&#x9AD8;&#x901F;&#x6027;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
            <tag> CDN </tag>
            
            <tag> DNS </tag>
            
            <tag> Web </tag>
            
            <tag> 智能解析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浅谈DNS解析</title>
      <link href="//posts/742bf6ac/"/>
      <url>//posts/742bf6ac/</url>
      <content type="html"><![CDATA[<p>&#x5F53;&#x4F60;&#x8BBF;&#x95EE;windsings.com&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E16;&#x754C;&#x90FD;&#x53D1;&#x751F;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F;</p><a id="more"></a><h1 id="&#x6700;&#x666E;&#x901A;&#x7684;DNS&#x89E3;&#x6790;"><a href="#&#x6700;&#x666E;&#x901A;&#x7684;DNS&#x89E3;&#x6790;" class="headerlink" title="&#x6700;&#x666E;&#x901A;&#x7684;DNS&#x89E3;&#x6790;"></a>&#x6700;&#x666E;&#x901A;&#x7684;DNS&#x89E3;&#x6790;</h1><p>&#x6839;&#x636E;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x8BFE;&#x672C;&#xFF0C;&#x8BBF;&#x95EE;&#x67D0;&#x4E2A;&#x57DF;&#x540D;&#xFF0C;&#x8FD9;&#x4E2A;&#x57DF;&#x540D;&#x600E;&#x4E48;&#x8DF3;&#x8F6C;&#x5230;&#x5177;&#x4F53;&#x7684;IP&#x4E0A;&#xFF0C;&#x662F;&#x4F7F;&#x7528;&#x4E86;DNS&#x89E3;&#x6790;&#x3002;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x4E3B;&#x673A;&#x5411;&#x672C;&#x5730;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x89E3;&#x6790;&#x7684;&#x8FC7;&#x7A0B;&#x91C7;&#x7528;&#x9012;&#x5F52;&#xFF0C;&#x800C;&#x672C;&#x5730;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x5411;&#x5176;&#x5B83;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x89E3;&#x6790;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9012;&#x5F52;&#x548C;&#x8FED;&#x4EE3;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x3002;</p><p>&#x8FED;&#x4EE3;&#x7684;&#x65B9;&#x5F0F;&#x4E0B;&#xFF0C;&#x672C;&#x5730;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x5411;&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x89E3;&#x6790;&#x8BF7;&#x6C42;&#x89E3;&#x6790;&#x4E4B;&#x540E;&#xFF0C;&#x7ED3;&#x679C;&#x8FD4;&#x56DE;&#x5230;&#x672C;&#x5730;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x7136;&#x540E;&#x672C;&#x5730;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x7EE7;&#x7EED;&#x5411;&#x5176;&#x5B83;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x8BF7;&#x6C42;&#x89E3;&#x6790;&#xFF1B;&#x800C;&#x9012;&#x5F52;&#x5730;&#x65B9;&#x5F0F;&#x4E0B;&#xFF0C;&#x7ED3;&#x679C;&#x4E0D;&#x662F;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x7EE7;&#x7EED;&#x5411;&#x524D;&#x8BF7;&#x6C42;&#x89E3;&#x6790;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x624D;&#x4F1A;&#x8FD4;&#x56DE;&#x3002;</p><p><img src="/posts/742bf6ac/clip_image001.jpg" alt=""></p><h1 id="&#x8BBE;&#x7F6E;&#x57DF;&#x540D;&#x89E3;&#x6790;"><a href="#&#x8BBE;&#x7F6E;&#x57DF;&#x540D;&#x89E3;&#x6790;" class="headerlink" title="&#x8BBE;&#x7F6E;&#x57DF;&#x540D;&#x89E3;&#x6790;"></a>&#x8BBE;&#x7F6E;&#x57DF;&#x540D;&#x89E3;&#x6790;</h1><p>&#x5F53;&#x6211;&#x4ECE;&#x67D0;&#x4E2A;&#x57DF;&#x540D;&#x5546;&#x90A3;&#x91CC;&#x4E70;&#x4E86;&#x67D0;&#x4E2A;&#x57DF;&#x540D;&#xFF0C;&#x8981;&#x5BF9;&#x57DF;&#x540D;&#x7684;&#x89E3;&#x6790;&#x8FDB;&#x884C;&#x8BBE;&#x7F6E;&#x3002;&#x963F;&#x91CC;&#x4E91;&#x4E2D;&#xFF0C;&#x6709;&#x5982;&#x4E0B;&#x7684;&#x8BBE;&#x7F6E;&#x65B9;&#x5F0F;&#xFF1A;</p><p><img src="/posts/742bf6ac/1595622690641.png" alt=""></p><p><img src="/posts/742bf6ac/1595622696669.png" alt=""></p><p>&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#xFF0C;&#x5E26;&#x6709;&#x516C;&#x7F51;IP&#x7684;VPS&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;A&#x89E3;&#x6790;&#x65B9;&#x5F0F;&#x3002;</p><p>&#x5728;linux&#x4E0B;&#xFF0C;&#x901A;&#x8FC7;dig&#x547D;&#x4EE4;&#xFF0C;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x4E3B;&#x673A;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x5982;&#x679C;&#x5E26;&#x6709;<code>+trace</code>&#x547D;&#x4EE4;&#xFF0C;&#x5219;&#x4F1A;&#x663E;&#x793A;&#x67E5;&#x8BE2;&#x7684;&#x8FC7;&#x7A0B;&#x3002;</p><p>&#x6BD4;&#x5982;&#x6211;&#x7684;&#x4E00;&#x4E2A;&#x670B;&#x53CB;&#x7684;&#x57DF;&#x540D;keyanjie.net&#xFF0C;&#x6709;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">intel@intel-pc:~$ dig +trace keyanjie.net</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Ubuntu &lt;&lt;&gt;&gt; +trace keyanjie.net</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.                       1023    IN      NS      g.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      h.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      l.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      j.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      k.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      b.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      a.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      f.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      d.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      c.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      e.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      i.root-servers.net.</span><br><span class="line">.                       1023    IN      NS      m.root-servers.net.</span><br><span class="line">;; Received 239 bytes from 127.0.1.1#53(127.0.1.1) in 5 ms</span><br><span class="line"></span><br><span class="line">net.                    172800  IN      NS      l.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      b.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      c.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      d.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      e.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      f.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      g.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      a.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      h.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      i.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      j.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      k.gtld-servers.net.</span><br><span class="line">net.                    172800  IN      NS      m.gtld-servers.net.</span><br><span class="line">net.                    86400   IN      DS      35886 8 2 7862B27F5F516EBE19680444D4CE5E762981931842C465F00236401D 8BD973EE</span><br><span class="line">net.                    86400   IN      RRSIG   DS 8 1 86400 20200806170000 20200724160000 46594 . Mn3fm45mYwBzvw8EuVABTXC269FVccFND9a6jaX/CfWye4E6YONViIkh Zs0fEBH3g2i6QKsTXliK+nYa3PfZAYO9VqheNxIvkdJO760Q29sd2BKa 6DooGoz3vqaC4aqSSKO1NHmNWSaEii++pVLNiggssxOJapdcv8scpo1R ebtASpz0fnOu6rO8MhYkz5aDLBWKEgWYyjfFK+ItwNoyc1+MYNtrMX6H QJRUtDY4b21ICLuDpp7nMNFIwnoScFf4e50qM413WP0ihVyCPuDD/aMx p/DcWdJUCpM9CTs5o0wIZnM9udZwXPJ2tAD6SyVpLmkgR7Sxwqy0SwCm E4+oMw==</span><br><span class="line">;; Received 1169 bytes from 192.203.230.10#53(e.root-servers.net) in 206 ms</span><br><span class="line"></span><br><span class="line">keyanjie.net.           172800  IN      NS      dns11.hichina.com.</span><br><span class="line">keyanjie.net.           172800  IN      NS      dns12.hichina.com.</span><br><span class="line">A1RT98BS5QGC9NFI51S9HCI47ULJG6JH.net. 86400 IN NSEC3 1 1 0 - A1RUUFFJKCT2Q54P78F8EJGJ8JBK7I8B NS SOA RRSIG DNSKEY NSEC3PARAM</span><br><span class="line">A1RT98BS5QGC9NFI51S9HCI47ULJG6JH.net. 86400 IN RRSIG NSEC3 8 2 86400 20200728064417 20200721053417 56519 net. B4N1ZLUcMCAkfgGNrmJfXylkUAbPnqxO31ZQ5ZwU0AecyChOkGGTelH/ 87eM7RtGM7mqrM6zU9CnGwsgheqg2HCbpX7n5Fvl1AclnJZBuFlF0hve jSO99rrLrLRaTWQtLyJwVQJWkMfgztCO5Mh2ngJfK6ZB1PLSxOFqVz0j 5MTYYp9QwdL1PvLIaBAw0kTgcm3o476wB0glMo6yzDbK2A==</span><br><span class="line">DMUULDLK9AHE90T3TVLM9UO0BL3FSD6H.net. 86400 IN NSEC3 1 1 0 - DMV0V678LC7UEC158TTU3M81UCSIPP21 NS DS RRSIG</span><br><span class="line">DMUULDLK9AHE90T3TVLM9UO0BL3FSD6H.net. 86400 IN RRSIG NSEC3 8 2 86400 20200730063155 20200723052155 56519 net. Nnwi6w5n3/C/sNwr5mMCP2i7Uv7Ki3KAI4dkigOMjFwpgLLN2egqyCqL QjLb/Dlk0fe4BjpzbPLMe67vsX8uJVcPXddgSh3EHa1LxhQROegMAFxJ QS2x/2gEI7a5lkLN2Jp7/F8c7q29LqERK8kFCw5sUC5/HHa+c/Pjk96r pfvFNfgj7doPCn7cZ0iXv3eGRxorZFIwemOVzrJfZ/IEiw==</span><br><span class="line">;; Received 641 bytes from 192.33.14.30#53(b.gtld-servers.net) in 157 ms</span><br><span class="line"></span><br><span class="line">keyanjie.net.           600     IN      A       101.132.113.74</span><br><span class="line">;; Received 57 bytes from 106.11.141.115#53(dns11.hichina.com) in 45 ms</span><br></pre></td></tr></table></figure><p>&#x6309;&#x524D;&#x6587;&#x6240;&#x8FF0;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x672C;&#x673A;&#x5411;&#x672C;&#x5730;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4EE5;&#x9012;&#x5F52;&#x7684;&#x65B9;&#x5F0F;&#x7533;&#x8BF7;&#x89E3;&#x6790;&#xFF0C;127.0.1.1&#x662F;&#x4EC0;&#x4E48;&#x4E1C;&#x897F;&#xFF1F;</p><p>&#x6211;&#x7684;&#x673A;&#x5668;&#x662F;ubuntu16.04&#xFF0C;ubuntu&#x4E0B;&#x6709;&#x4E2A;&#x672C;&#x5730;DNS&#x670D;&#x52A1;&#xFF0C;&#x53EB;dnsmasq&#xFF0C;&#x5B83;&#x662F;&#x7531;NetworkManager&#x63A7;&#x5236;&#x7684;&#x3002;</p><p>&#x5B83;&#x76D1;&#x542C;&#x7684;&#x672C;&#x5730;&#x5730;&#x5740;&#xFF0C;&#x2013;listen-address=127.0.1.1 (ubuntu12.04&#x53CA;&#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C; &#x662F; 127.0.0.1)&#xFF0C; &#x8FD9;&#x4E2A;&#x5730;&#x5740;&#x662F;&#x4E00;&#x4E2A;&#x672C;&#x5730;&#x56DE;&#x73AF;&#x5730;&#x5740;&#x3002; &#x800C;&#x771F;&#x5B9E;&#x7684;dns&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740;&#xFF0C;&#x662F;&#x88AB;&#x8FD9;&#x4E2A;&#x670D;&#x52A1;&#x7BA1;&#x7406;&#x7EF4;&#x62A4;&#x7740;&#x7684;&#x3002;</p><p>127.0.1.1&#x662F;&#x7528;&#x4E8E;&#x7AEF;&#x53E3;&#x6620;&#x5C04;&#xFF08;port forwarding&#xFF09;&#x7684;&#xFF0C;&#x6BD4;&#x5982;ISP&#x5206;&#x914D;&#x7684;DNS server&#x662F;123.123.123.123&#x3002;&#x5219;dnsmasq&#x4F1A;&#x5C06;&#x5BA2;&#x6237;&#x7AEF;&#x5411;127.0.1.1:53&#x53D1;&#x9001;&#x7684;DNS&#x8BF7;&#x6C42;&#xFF0C;&#x8F6C;&#x53D1;&#x5230;123.123.123.123:53&#x3002;</p><p>&#x5728;&#x963F;&#x91CC;&#x4E91;&#x7684;&#x89E3;&#x6790;&#x56FE;&#x793A;&#x4E2D;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;NS&#x8BB0;&#x5F55;&#x7C7B;&#x578B;&#xFF0C;&#x6807;&#x8BB0;&#x7740;&#x5C06;&#x57DF;&#x540D;&#x6307;&#x5B9A;&#x5176;&#x4ED6;DNS&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#x3002;&#x8FD9;&#x91CC;&#x7684;NS&#xFF0C;&#x5C31;&#x662F;<code>dig +trace</code>&#x5E94;&#x7B54;&#x8BB0;&#x5F55;&#x4E2D;&#x7684;NS&#x3002;</p><p>&#x5B83;&#x8FD4;&#x56DE;13&#x4E2A;&#x6839;&#x57DF;&#x540D;&#x7684;&#x5730;&#x5740;&#x3002;&#x6839;&#x636E;&#x5E94;&#x7B54;&#x7684;&#x7C7B;&#x578B;NS&#xFF0C;&#x4EA4;&#x7531;&#x5217;&#x51FA;&#x6765;&#x7684;.net&#x7684;&#x6743;&#x5A01;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF08;&#x5728;&#x6BCF;&#x4E2A;&#x57DF;&#x4E2D;&#xFF0C;&#x4F1A;&#x6709;&#x4E00;&#x53F0;&#x6216;&#x8005;&#x591A;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x6765;&#x4FDD;&#x5B58;&#x8FD9;&#x4E2A;&#x57DF;&#x540D;&#x7A7A;&#x95F4;&#x7684;&#x6240;&#x6709;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E14;&#x54CD;&#x5E94;&#x5173;&#x4E8E;&#x8BE5;&#x57DF;&#x540D;&#x7A7A;&#x95F4;&#x7684;&#x6240;&#x6709;&#x8BF7;&#x6C42;&#xFF0C;&#x8FD9;&#x79CD;&#x670D;&#x52A1;&#x5668;&#x5C31;&#x53EB;&#x8FD9;&#x4E2A;&#x57DF;&#x7684;&#x6743;&#x5A01;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x591A;&#x4E2A;&#x6743;&#x5A01;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x95F4;&#xFF0C;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x53F0;&#x662F;&#x4E3B;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x8FD9;&#x53F0;&#x4E3B;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x5411;&#x5176;&#x4ED6;&#x8F85;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x5206;&#x53D1;&#x57DF;&#x540D;&#x7A7A;&#x95F4;&#x7684;&#x66F4;&#x65B0;&#x4FE1;&#x606F;&#xFF09;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#x3002;</p><p>&#x540C;&#x6837;&#xFF0C;b.gtld-servers.net&#x8FD9;&#x4E2A;DNS&#x670D;&#x52A1;&#x5668;&#x8FD4;&#x56DE;NS&#x7C7B;&#x578B;&#x7684;&#x89E3;&#x6790;&#xFF0C;&#x4EA4;&#x7531;dns11.hichina.com&#x6216;dns12.hichina.com&#x8FDB;&#x884C;&#x89E3;&#x6790;&#x3002;</p><p>&#x9009;&#x62E9;&#x4E86;dns11.hichina.com&#xFF0C;&#x8FD4;&#x56DE;keyanjie.net&#x7684;&#x89E3;&#x6790;&#x8BB0;&#x5F55;&#xFF1A;A&#x7C7B;&#x578B;&#xFF0C;&#x5230;IP&#xFF1A;101.132.113.74&#x3002;</p><p>&#x8FD9;&#x65F6;&#xFF0C;&#x8BBF;&#x95EE;101.132.113.74&#x5C31;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5230;&#x4ED6;&#x7684;&#x535A;&#x5BA2;&#x3002;</p><h1 id="&#x4E00;&#x4E2A;IP&#x4E0B;&#x591A;&#x4E2A;&#x7F51;&#x7AD9;"><a href="#&#x4E00;&#x4E2A;IP&#x4E0B;&#x591A;&#x4E2A;&#x7F51;&#x7AD9;" class="headerlink" title="&#x4E00;&#x4E2A;IP&#x4E0B;&#x591A;&#x4E2A;&#x7F51;&#x7AD9;"></a>&#x4E00;&#x4E2A;IP&#x4E0B;&#x591A;&#x4E2A;&#x7F51;&#x7AD9;</h1><p>&#x8FD9;&#x662F;&#x6211;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x540C;&#x5B66;&#x7684;&#x535A;&#x5BA2;&#xFF1A;cjh.zone&#xFF0C;&#x5F53;dig cjh.zone&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6709;&#x5982;&#x4E0B;&#x7ED3;&#x679C;&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">intel@intel-pc:~$ dig cjh.zone</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Ubuntu &lt;&lt;&gt;&gt; cjh.zone</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 47702</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;cjh.zone.                      IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">cjh.zone.               300     IN      A       185.199.111.153</span><br><span class="line"></span><br><span class="line">;; Query time: 64 msec</span><br><span class="line">;; SERVER: 127.0.1.1#53(127.0.1.1)</span><br><span class="line">;; WHEN: Fri Jul 24 18:09:24 CST 2020</span><br><span class="line">;; MSG SIZE  rcvd: 42</span><br></pre></td></tr></table></figure><p>&#x5F53;&#x8BBF;&#x95EE;&#x8FD9;&#x4E2A;IP&#xFF1A;185.199.111.153 &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x51FA;&#x73B0;&#x4E86;github&#x7684;404&#x754C;&#x9762;&#xFF1A;</p><p><img src="/posts/742bf6ac/1595626403791.png" alt=""></p><p>&#x539F;&#x56E0;&#x662F;&#x8FD9;&#x4E2A;&#x4E3B;&#x673A;&#x4E0B;&#xFF0C;&#x6709;&#x591A;&#x4E2A;&#x7F51;&#x7AD9;&#x3002;</p><p>&#x90A3;&#x5F53;&#x6211;&#x8BBF;&#x95EE;cjh.zone&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E3B;&#x673A;&#x662F;&#x5982;&#x4F55;&#x6B63;&#x786E;&#x663E;&#x793A;&#x7F51;&#x7AD9;&#x7684;&#x5462;&#xFF1F;</p><p>&#x662F;&#x901A;&#x8FC7;&#x4E3B;&#x673A;&#x5934;&#xFF0C;</p><p>&#x5728;&#x77E5;&#x4E4E;&#x7684;&#x8FD9;&#x4E2A;&#x56DE;&#x7B54;&#x4E2D;&#xFF1A;</p><p><a href="https://www.zhihu.com/question/30105450/answer/1207087774" target="_blank" rel="noopener">&#x5728;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x9762;&#x600E;&#x4E48;&#x653E;&#x4E24;&#x4E2A;&#x7F51;&#x7AD9;&#x5440;&#xFF1F; - &#x725B;&#x5CB1;&#x7684;&#x56DE;&#x7B54; - &#x77E5;&#x4E4E; </a>&#x4E2D;&#xFF0C;&#x6709;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x7406;&#x89E3;&#x4E86;HTTP &#x534F;&#x8BAE;&#x4F60;&#x5C31;&#x77E5;&#x9053;&#xFF0C;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5668;&#x5B8C;&#x5168;&#x53EF;&#x4EE5; host &#x5F88;&#x591A;&#x7F51;&#x7AD9;&#xFF0C;&#x539F;&#x56E0;&#x5C31;&#x5728;&#x4E8E; HTTP request &#x91CC;&#x9762;&#x5305;&#x542B;&#x4E86; HOST &#x8FD9;&#x4E2A;&#x4FE1;&#x606F;&#x5934;&#x3002;</p><p>&#x867D;&#x7136;&#x4E24;&#x4E2A;&#x57DF;&#x540D;&#x90FD;&#x89E3;&#x6790;&#x5230;&#x540C;&#x4E00;&#x4E2A; IP&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x7528;&#x6237;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x4E24;&#x4E2A;&#x57DF;&#x540D;&#x5411;&#x4F60;&#x7684;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x51FA;&#x8BF7;&#x6C42;&#x7684;&#x65F6;&#x5019;&#xFF0C;HTTP Request &#x91CC;&#x9762;&#x7684; Host &#x5934;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x3002;</p><p>&#x5F53;&#x4F60;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x91CC;&#x8F93; <code>http://developer.mozilla.org</code>&#x7684;&#x65F6;&#x5019;&#xFF0C;server &#x6536;&#x5230;&#x7684; HTTP &#x62A5;&#x6587;&#x5934;&#x957F;&#x8FD9;&#x6837;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: developer.mozilla.org</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>&#x5F53;&#x4F60;&#x6362;&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6BD4;&#x5982; <code>http://developer.google.org</code>&#xFF0C;&#x62A5;&#x6587;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: developer.google.org</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>&#x5F88;&#x663E;&#x7136;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;host &#x6765;&#x628A;&#x8BF7;&#x6C42;&#x8F6C;&#x53D1;&#x5230;&#x76F8;&#x5E94;&#x7684;&#x670D;&#x52A1;&#x3002; &#x4E00;&#x822C;&#x7684;&#x5B9E;&#x8DF5;&#x505A;&#x6CD5;&#x7684;&#x8BDD;&#xFF0C;&#x63A8;&#x8350;&#x4F7F;&#x7528; nginx &#x4F5C;&#x4E3A; Gate&#xFF0C;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x91CC;&#x8FD9;&#x6837;&#x914D;&#x7F6E;&#x5373;&#x53EF;&#xFF1A;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">http {  </span><br><span class="line">   ...  </span><br><span class="line"> </span><br><span class="line">   server {  </span><br><span class="line">            listen 80;  </span><br><span class="line">            server_name developer.mozilla.org;  </span><br><span class="line">            root /var/www/html/mozilla;  </span><br><span class="line">            ...  </span><br><span class="line">   </span><br><span class="line">   }  </span><br><span class="line">   server {  </span><br><span class="line">            listen 80;  </span><br><span class="line">            server_name developer.google.com;  </span><br><span class="line">            root /var/www/html/google;  </span><br><span class="line">            ...  </span><br><span class="line">   </span><br><span class="line">   }  </span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x914D;&#x7F6E;&#x7684;&#x8BDD;&#xFF0C;&#x7528;&#x6237;&#x7528;&#x57DF;&#x540D;<code>http://developer.mozilla.org</code>&#x8BF7;&#x6C42;&#x7684;&#xFF0C;&#x5C31;&#x4F1A;&#x4ECE; /mozilla &#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939; serve &#x9759;&#x6001;&#x8D44;&#x6E90;&#xFF0C;&#x4ECE; <code>http://google.org</code>&#x8BF7;&#x6C42;&#x7684;&#xFF0C;&#x5C31;&#x4F1A;&#x4ECE; /google &#x6587;&#x4EF6;&#x5939; serve &#x9759;&#x6001;&#x8D44;&#x6E90;&#x3002; &#x4E00;&#x822C;&#x60C5;&#x51B5;&#x672C;&#x5730;&#x7684;&#x4E24;&#x4E2A;&#x7F51;&#x7AD9;&#x8FD8;&#x8981;&#x6709; serve &#x52A8;&#x6001;&#x8BF7;&#x6C42;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x5047;&#x5982;&#x4E00;&#x4E2A;&#x542F;&#x52A8;&#x540E;&#x76D1;&#x542C; 3000&#x7AEF;&#x53E3;&#xFF0C;&#x4E00;&#x4E2A;&#x76D1;&#x542C; 8000 &#x7AEF;&#x53E3;&#xFF0C;&#x90A3;&#x518D;&#x52A0;&#x4E0A;&#x5982;&#x4E0B;&#x914D;&#x7F6E;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">http {  </span><br><span class="line">       ...  </span><br><span class="line">       ...  </span><br><span class="line">  </span><br><span class="line">       server {  </span><br><span class="line">                listen 80;  </span><br><span class="line">                server_name developer.mozilla.org;  </span><br><span class="line">                root /var/www/html/mozilla;  </span><br><span class="line">                location /api {</span><br><span class="line">                    proxy_pass localhost:3000</span><br><span class="line">                }</span><br><span class="line">       </span><br><span class="line">       }  </span><br><span class="line">       server {  </span><br><span class="line">                listen 80;  </span><br><span class="line">                server_name developer.google.com;  </span><br><span class="line">                root /var/www/html/google;  </span><br><span class="line">                location /api {</span><br><span class="line">                    proxy_pass localhost:8000</span><br><span class="line">                }</span><br><span class="line">                ...  </span><br><span class="line">       </span><br><span class="line">       }  </span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#xFF0C;&#x5F62;&#x5982;<code>http://developer.mozilla.org/api/...</code> &#x7684;&#x8BF7;&#x6C42;&#x5C31;&#x4F1A;&#x8F6C;&#x53D1;&#x5230; localhost:3000&#xFF0C;&#x7136;&#x540E; nginx &#x518D;&#x628A; localhost:3000 &#x8FD4;&#x56DE;&#x7684;&#x518D;&#x8FD4;&#x56DE;&#x7ED9;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x5F53;&#x7136;&#x5982;&#x679C;&#x5E94;&#x7528;&#x4E0D;&#x662F;&#x5728;&#x548C; nginx &#x4E00;&#x4E2A;&#x4E3B;&#x673A;&#x4E0A;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x80FD;&#x8FD9;&#x4E2A;localhost:3000 &#x5C31;&#x662F;&#x79C1;&#x7F51;&#x7684;&#x5176;&#x5B83;&#x4E3B;&#x673A;ip&#xFF0C;&#x6216;&#x8005;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x516C;&#x7F51; ip&#xFF0C;&#x6216;&#x8005;&#x57DF;&#x540D;&#xFF0C;8000 &#x7684;&#x4E5F;&#x540C;&#x7406;&#x3002;</p><p>&#x8FD9;&#x6837;&#x914D;&#x7F6E;&#x7684;&#x8BDD;&#xFF0C;&#x4F60;&#x7684;&#x670D;&#x52A1;&#x5668;&#x5C31;&#x53EF;&#x4EE5; host &#x4E24;&#x4E2A;&#x7F51;&#x7AD9;&#x4E86;&#xFF0C;&#x540C;&#x7406;&#x8FD8;&#x53EF;&#x80FD;&#x662F;&#x5F88;&#x591A;&#x4E2A;&#x3002;</p><p>nginx &#x7684;&#x8BDD;&#xFF0C;&#x7528;&#x4F5C;&#x8FD9;&#x79CD; Gate &#x8F6C;&#x53D1;&#x8BF7;&#x6C42;&#x5E76;&#x9759;&#x6001;&#x6587;&#x4EF6; host &#x662F;&#x86EE;&#x65B9;&#x4FBF;&#x7684;&#x4E00;&#x79CD;&#x9009;&#x62E9;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x51E0;&#x884C;&#x7B80;&#x5355;&#x7684; json &#x914D;&#x7F6E;&#xFF0C;&#x5C31;&#x80FD;&#x7A33;&#x5B9A;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#xFF0C;&#x800C;&#x4E14;&#x57FA;&#x4E8E;&#x5F02;&#x6B65; I/O&#xFF0C;&#x5E76;&#x53D1;&#x6027;&#x80FD;&#x5F88;&#x597D;&#x3002;</p><p>&#x603B;&#x4E4B;&#x4E00;&#x53E5;&#x8BDD;&#xFF0C;Host &#x5934;&#x53EF;&#x4EE5;&#x8BA9;&#x8FC7;&#x6EE4;&#x8F6C;&#x53D1;&#x8BF7;&#x6C42;&#x3002;</p><h1 id="&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;IP"><a href="#&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;IP" class="headerlink" title="&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;IP"></a>&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;IP</h1><p>&#x5F53;&#x4F60;<code>dig +trace windsings.com</code>&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5BF9;&#x6211;&#x7684;&#x7F51;&#x7AD9;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x65F6;&#xFF0C;&#x4F1A;&#x53D1;&#x73B0;DNS&#x670D;&#x52A1;&#x5668;&#x8FD4;&#x56DE;&#x4E09;&#x4E2A;IP&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">intel@intel-pc:~$ dig +trace windsings.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Ubuntu &lt;&lt;&gt;&gt; +trace windsings.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.                       2983    IN      NS      a.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      b.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      c.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      d.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      e.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      f.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      g.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      h.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      i.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      j.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      k.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      l.root-servers.net.</span><br><span class="line">.                       2983    IN      NS      m.root-servers.net.</span><br><span class="line">;; Received 239 bytes from 127.0.1.1#53(127.0.1.1) in 7 ms</span><br><span class="line"></span><br><span class="line">com.                    172800  IN      NS      a.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      b.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      c.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      d.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      e.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      f.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      g.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      h.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      i.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      j.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      k.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      l.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      m.gtld-servers.net.</span><br><span class="line">com.                    86400   IN      DS      30909 8 2 E2D3C916F6DEEAC73294E8268FB5885044A833FC5459588F4A9184CF C41A5766</span><br><span class="line">com.                    86400   IN      RRSIG   DS 8 1 86400 20200806210000 20200724200000 46594 . iFLnO7of/tl4M23HkDFQ0sMsm5ONcS+Qg6l6QPKHo1xV0zslYX1M8WQ4 TU7kbX1eks3f44hXrtjJwNESdakmQd0XgKapTIiXsOMknfFjpj5lLprm B5x5k6JI5PKZsZ5OVtGF888BsUXYH1dAT7bfny6xw0kRJvk/ZJHbKC+g uczBRdilPuYfqEyVHEdCaWd3TL6clVIS85ZpaB3zzYZAHldD2ykBzWRR 46vmMFfk0EIpatpoOf9p6LQzmq0CqR7FcPo5EEOUnvpXkaMUjEenGIdw q8lm4/a43otwwq9g15CFabxN2o2mQlhlzuVBMmLIyUCKU4QzevhVnh7g AM6nyA==</span><br><span class="line">;; Received 1173 bytes from 198.41.0.4#53(a.root-servers.net) in 162 ms</span><br><span class="line"></span><br><span class="line">windsings.com.          172800  IN      NS      ns1.smartgslb.com.</span><br><span class="line">windsings.com.          172800  IN      NS      ns2.smartgslb.com.</span><br><span class="line">CK0POJMG874LJREF7EFN8430QVIT8BSM.com. 86400 IN NSEC3 1 1 0 - CK0Q1GIN43N1ARRC9OSM6QPQR81H5M9A NS SOA RRSIG DNSKEY NSEC3PARAM</span><br><span class="line">CK0POJMG874LJREF7EFN8430QVIT8BSM.com. 86400 IN RRSIG NSEC3 8 2 86400 20200728044213 20200721033213 24966 com. qoAss2VVxsBWG9+MAQ3giAmCnzf4dz7GppZsQfkt3b7cFIVgO3TiWPWk usb3BEbpsma2Q+x/TBLeeHYm6l1HWXMIl7zcYLsAXY0ZzoWaqNPTPH6Y NDAreZYP21UekBL7g710cndRk4oaJUNz5t8sGi3JaOJF046QcUz6gGg7 NLMvyGlJWzmftGbxgp9ovdOgwmirddESGOj33kuCfSJvWA==</span><br><span class="line">8HTEEKSHQDE7BN29IUEH9GCUG0BJA05S.com. 86400 IN NSEC3 1 1 0 - 8HTEUV6CJU94CB57CLPPJ7DS5EJ8OTUB NS DS RRSIG</span><br><span class="line">8HTEEKSHQDE7BN29IUEH9GCUG0BJA05S.com. 86400 IN RRSIG NSEC3 8 2 86400 20200731051909 20200724040909 24966 com. PqoClMMWAVeFX2+5EHMtxxS6MgOwOWIBrWYrnhdgy8SecgUvrpv5PhSH TKGR5F+dTpeYpCe8E6HPHEwxHtXaPhuepEzxWNAyREnAy5LMssix1Jnh WrjKiRFjK4tWWqfhDHBaGcgjm9r3SFl3OWneA3VG11RvlEkUTb6vHQRm zH/0ZPKSkpxGK1joaA/GDOIlNrNbKGzicXKDjBaJGFDdQw==</span><br><span class="line">;; Received 817 bytes from 192.54.112.30#53(h.gtld-servers.net) in 483 ms</span><br><span class="line"></span><br><span class="line">windsings.com.          60      IN      A       154.209.235.56</span><br><span class="line">windsings.com.          60      IN      A       45.137.10.76</span><br><span class="line">windsings.com.          60      IN      A       119.28.89.140</span><br><span class="line">;; Received 90 bytes from 172.104.121.39#53(ns1.smartgslb.com) in 65 ms</span><br></pre></td></tr></table></figure><p>&#x5F53;&#x8BB0;&#x5F55;&#x503C;&#x6709;&#x591A;&#x4E2A;IP&#x5730;&#x5740;&#x65F6;&#xFF0C;&#x57DF;&#x540D;&#x662F;&#x5982;&#x4F55;&#x89E3;&#x6790;&#x7684;&#xFF1F;</p><p>&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x8003;<a href="https://support.huaweicloud.com/dns_faq/dns_faq_023.html" target="_blank" rel="noopener">&#x534E;&#x4E3A;&#x4E91;&#xFF1A;&#x5F53;&#x8BB0;&#x5F55;&#x503C;&#x6709;&#x591A;&#x4E2A;IP&#x5730;&#x5740;&#x65F6;&#xFF0C;&#x57DF;&#x540D;&#x662F;&#x5982;&#x4F55;&#x89E3;&#x6790;&#x7684;&#xFF1F;</a></p><p>&#x5F53;&#x4E3A;&#x57DF;&#x540D;&#x6DFB;&#x52A0;A&#x7C7B;&#x578B;&#x6216;&#x8005;AAAA&#x7C7B;&#x578B;&#x89E3;&#x6790;&#x8BB0;&#x5F55;&#x65F6;&#xFF0C;&#x53C2;&#x6570;&#x201C;&#x503C;&#x201D;&#x652F;&#x6301;&#x586B;&#x5199;&#x591A;&#x4E2A;IP&#x5730;&#x5740;&#xFF0C;&#x5C06;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x5230;&#x591A;&#x4E2A;IP&#x5730;&#x5740;&#x3002;</p><p>&#x5F53;&#x89E3;&#x6790;&#x8BB0;&#x5F55;&#x7684;&#x201C;&#x503C;&#x201D;&#x5305;&#x542B;&#x591A;&#x4E2A;IP&#x5730;&#x5740;&#x65F6;&#xFF0C;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x4F1A;&#x8FD4;&#x56DE;&#x6240;&#x6709;&#x7684;IP&#x5730;&#x5740;&#xFF0C;&#x4F46;&#x8FD4;&#x56DE;IP&#x5730;&#x5740;&#x7684;&#x987A;&#x5E8F;&#x662F;&#x968F;&#x673A;&#x7684;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x9ED8;&#x8BA4;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x7684;IP&#x5730;&#x5740;&#x4F5C;&#x4E3A;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x3002;</p><p>&#x5176;&#x89E3;&#x6790;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p><ol><li>&#x7F51;&#x7AD9;&#x8BBF;&#x95EE;&#x8005;&#x901A;&#x8FC7;&#x6D4F;&#x89C8;&#x5668;&#x5411;Local DNS&#x53D1;&#x9001;&#x89E3;&#x6790;&#x8BF7;&#x6C42;&#x3002;</li><li>Local DNS&#x5C06;&#x89E3;&#x6790;&#x8BF7;&#x6C42;&#x9010;&#x7EA7;&#x8F6C;&#x53D1;&#x81F3;&#x6743;&#x5A01;DNS&#x3002;</li><li>&#x6743;&#x5A01;DNS&#x5728;&#x6536;&#x5230;&#x89E3;&#x6790;&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x5C06;&#x6240;&#x6709;IP&#x5730;&#x5740;&#x4EE5;&#x968F;&#x673A;&#x987A;&#x5E8F;&#x5168;&#x90E8;&#x8FD4;&#x56DE;Local DNS&#x3002;</li><li>Local DNS&#x5C06;&#x6240;&#x6709;IP&#x5730;&#x5740;&#x8FD4;&#x56DE;&#x6D4F;&#x89C8;&#x5668;&#x3002;</li><li>&#x7F51;&#x7AD9;&#x8BBF;&#x95EE;&#x8005;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;IP&#x5730;&#x5740;&#xFF0C;&#x901A;&#x5E38;&#x9009;&#x53D6;&#x8FD4;&#x56DE;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;IP&#x5730;&#x5740;&#x3002;</li></ol><p>&#x6839;&#x636E;&#x5927;&#x91CF;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x663E;&#x793A;&#xFF0C;&#x89E3;&#x6790;&#x5230;&#x5404;IP&#x5730;&#x5740;&#x7684;&#x6BD4;&#x4F8B;&#x63A5;&#x8FD1;&#x76F8;&#x7B49;&#x3002;</p><p>&#x4F8B;&#x5982;&#xFF0C;&#x67D0;&#x7F51;&#x7AD9;&#x7684;&#x57DF;&#x540D;&#x4E3A;&#x201C;example.com&#x201D;&#xFF0C;&#x90E8;&#x7F72;&#x4E86;3&#x53F0;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;IP&#x5730;&#x5740;&#x5206;&#x522B;&#x4E3A;&#xFF1A;192.168.1.1&#x3001;192.168.1.2&#x3001;192.168.1.3&#x3002;</p><p>&#x4E3A;&#x57DF;&#x540D;&#x201C;example.com&#x201D;&#x914D;&#x7F6E;&#x4E00;&#x6761;A&#x7C7B;&#x578B;&#x8BB0;&#x5F55;&#x96C6;&#xFF0C;&#x5C06;&#x8BB0;&#x5F55;&#x96C6;&#x503C;&#x8BBE;&#x7F6E;&#x4E3A;3&#x4E2A;IP&#x5730;&#x5740;&#x3002;<br><img src="/posts/742bf6ac/zh-cn_image_0253273506.png" alt=""></p><p>&#x4E0D;&#x540C;&#x7528;&#x6237;&#x8BBF;&#x95EE;&#x7F51;&#x7AD9;&#x65F6;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x5982;&#x4EE5;&#x4E0B;&#x6240;&#x793A;&#x3002;</p><table><thead><tr><th>&#x7528;&#x6237;</th><th>&#x8FD4;&#x56DE;&#x7ED3;&#x679C;</th><th>&#x89E3;&#x6790;&#x7ED3;&#x679C;</th></tr></thead><tbody><tr><td>&#x7528;&#x6237;A</td><td>192.168.1.1         192.168.1.2         192.168.1.3</td><td>192.168.1.1</td></tr><tr><td>&#x7528;&#x6237;B</td><td>192.168.1.2         192.168.1.1         192.168.1.3</td><td>192.168.1.2</td></tr><tr><td>&#x7528;&#x6237;C</td><td>192.168.1.3         192.168.1.1         192.168.1.2</td><td>192.168.1.3</td></tr></tbody></table><p>&#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x6253;&#x5370;&#x89E3;&#x6790;windsings.com &#x7684;&#x7ED3;&#x679C;&#xFF08;&#x5728;Linux&#x4E0B;&#xFF09;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netdb.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">hostent</span> *<span class="title">host</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">in_addr</span> <span class="title">h_addr</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((host = gethostbyname(<span class="string">&quot;windsings.com&quot;</span>)) != <span class="literal">NULL</span>) {</span><br><span class="line">        h_addr.s_addr = *((<span class="keyword">unsigned</span> <span class="keyword">long</span> *)host-&gt;h_addr);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, inet_ntoa(h_addr));</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(base) intel@intel-pc:~/Documents/CppCode$ gcc code1.cpp</span><br><span class="line">(base) intel@intel-pc:~/Documents/CppCode$ ls</span><br><span class="line">a.out  code1.cpp</span><br><span class="line">(base) intel@intel-pc:~/Documents/CppCode$ ./a.out </span><br><span class="line">119.28.89.140</span><br><span class="line">(base) intel@intel-pc:~/Documents/CppCode$ ./a.out </span><br><span class="line">45.137.10.76</span><br><span class="line">(base) intel@intel-pc:~/Documents/CppCode$ ./a.out </span><br><span class="line">119.28.89.140</span><br><span class="line">(base) intel@intel-pc:~/Documents/CppCode$ ./a.out </span><br><span class="line">154.209.235.56</span><br><span class="line">(base) intel@intel-pc:~/Documents/CppCode$</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x89C1;&#xFF0C;3&#x4E2A;IP&#x90FD;&#x88AB;&#x6253;&#x5370;&#x51FA;&#x6765;&#x4E86;&#x3002;</p><p>&#x5728;&#x8FFD;&#x8E2A;&#x7684;&#x89E3;&#x6790;&#x8BB0;&#x5F55;&#x4E2D;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;DNS&#x670D;&#x52A1;&#x5668;&#x7684;&#x57DF;&#x540D;&#x662F;smartgslb&#xFF0C;&#x81EA;&#x7136;&#x60F3;&#x5230;&#x4E86;&#x57FA;&#x4E8E;DNS&#x89E3;&#x6790;&#x7684;&#x5168;&#x5C40;&#x8D1F;&#x8F7D;&#x5747;&#x8861;GSLB&#xFF0C;&#x6211;&#x539A;&#x7740;&#x8138;&#x76AE;&#x53D1;&#x5DE5;&#x5355;&#x95EE;&#x5BA2;&#x670D;&#xFF0C;&#x8BE2;&#x95EE;&#x5230;&#x5B9E;&#x9645;&#x4E0A;&#x4E5F;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x80CC;&#x540E;&#x662F;&#x4E00;&#x4E2A;&#x53EB;&#x667A;&#x80FD;&#x89E3;&#x6790;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x5F53;&#x6211;&#x6D4B;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x7684;IP&#x5730;&#x5740;&#x5728;&#x4E9A;&#x6D32;&#xFF0C;&#x56E0;&#x6B64;&#x667A;&#x80FD;DNS&#x89E3;&#x6790;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4E9A;&#x6D32;&#x7684;IP&#x3002;&#x8FD9;&#x4E09;&#x4E2A;IP&#x7531;&#x6211;&#x7684;&#x7535;&#x8111;&#x81EA;&#x884C;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x8FDB;&#x884C;&#x8BBF;&#x95EE;&#xFF08;&#x4E00;&#x822C;&#x5C31;&#x662F;&#x8BBF;&#x95EE;&#x7B2C;&#x4E00;&#x4E2A;&#xFF09;&#xFF0C;&#x5173;&#x4E8E;&#x667A;&#x80FD;&#x89E3;&#x6790;&#xFF0C;&#x6211;&#x53E6;&#x5199;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x6765;&#x7B80;&#x8FF0;&#x3002;</p><p>&#x6211;&#x7684;&#x7F51;&#x7AD9;&#x4F7F;&#x7528;&#x4E86;CDN&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E09;&#x4E2A;IP&#x5176;&#x5B9E;&#x662F;CDN&#x670D;&#x52A1;&#x5668;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x5173;&#x4E8E;CDN&#xFF0C;&#x6211;&#x53E6;&#x5199;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x6765;&#x7B80;&#x8FF0;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
            <tag> CDN </tag>
            
            <tag> DNS </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ray源码分析-进程调度</title>
      <link href="//posts/33c2ca1a/"/>
      <url>//posts/33c2ca1a/</url>
      <content type="html"><![CDATA[<p>Ray version&#xFF1A;0.7.4&#x3002;&#x8FDB;&#x7A0B;&#x8C03;&#x5EA6;&#x90E8;&#x5206;&#x6E90;&#x7801;&#x5206;&#x6790;</p><p><a id="more"></a></p><p>&#x8C03;&#x5EA6;&#x90E8;&#x5206;&#x5305;&#x62EC;&#x516D;&#x4E2A;&#x6587;&#x4EF6;&#xFF1A;</p><ul><li>ray-releases-0.7.3/src/ray/raylet/scheduling_policy.h</li><li>ray-releases-0.7.3/src/ray/raylet/scheduling_policy.cc</li><li>ray-releases-0.7.3/src/ray/raylet/scheduling_queue.h</li><li>ray-releases-0.7.3/src/ray/raylet/scheduling_queue.cc</li><li>ray-releases-0.7.3/src/ray/common/task/scheduling_resources.h</li><li>ray-releases-0.7.3/src/ray/common/task/scheduling_resources.cc</li></ul><p>&#x5F88;&#x597D;&#x7406;&#x89E3;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x8C03;&#x5EA6;&#x7B56;&#x7565;&#xFF0C;&#x8C03;&#x5EA6;&#x961F;&#x5217;&#xFF0C;&#x8C03;&#x5EA6;&#x8D44;&#x6E90;&#x3002;</p><p>raylet&#x90E8;&#x5206;&#x4F7F;&#x7528;C++&#x5199;&#x7684;&#xFF0C;&#x901A;&#x8FC7;cython&#x4E0E;python&#x76F8;&#x8FDE;&#xFF0C;&#x6211;&#x8FD8;&#x4E0D;&#x4F1A;cython....</p><h1 id="&#x8C03;&#x5EA6;&#x7B56;&#x7565;">&#x8C03;&#x5EA6;&#x7B56;&#x7565;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ray-releases-0.7.3/src/ray/raylet/scheduling_policy.h</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> raylet {</span><br><span class="line"></span><br><span class="line"><span class="comment">/// \class SchedulingPolicy</span></span><br><span class="line"><span class="comment">/// \brief Implements a scheduling policy for the node manager.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SchedulingPolicy</span> {</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/// \brief SchedulingPolicy constructor.</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// \param scheduling_queue: reference to a scheduler queues object for access to</span></span><br><span class="line">  <span class="comment">/// tasks.</span></span><br><span class="line">  <span class="comment">/// \return Void.</span></span><br><span class="line">  SchedulingPolicy(<span class="keyword">const</span> SchedulingQueue &amp;scheduling_queue);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// \brief Perform a scheduling operation, given a set of cluster resources and</span></span><br><span class="line">  <span class="comment">/// producing a mapping of tasks to raylets.</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// \param cluster_resources: a set of cluster resources containing resource and load</span></span><br><span class="line">  <span class="comment">/// information for some subset of the cluster. For all client IDs in the returned</span></span><br><span class="line">  <span class="comment">/// placement map, the corresponding SchedulingResources::resources_load_ is</span></span><br><span class="line">  <span class="comment">/// incremented by the aggregate resource demand of the tasks assigned to it.</span></span><br><span class="line">  <span class="comment">/// \param local_client_id The ID of the node manager that owns this</span></span><br><span class="line">  <span class="comment">/// SchedulingPolicy object.</span></span><br><span class="line">  <span class="comment">/// \return Scheduling decision, mapping tasks to raylets for placement.</span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;TaskID, ClientID&gt; Schedule(</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;ClientID, SchedulingResources&gt; &amp;cluster_resources,</span><br><span class="line">      <span class="keyword">const</span> ClientID &amp;local_client_id);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// \brief Given a set of cluster resources perform a spill-over scheduling operation.</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// \param cluster_resources: a set of cluster resources containing resource and load</span></span><br><span class="line">  <span class="comment">/// information for some subset of the cluster. For all client IDs in the returned</span></span><br><span class="line">  <span class="comment">/// placement map, the corresponding SchedulingResources::resources_load_ is</span></span><br><span class="line">  <span class="comment">/// incremented by the aggregate resource demand of the tasks assigned to it.</span></span><br><span class="line">  <span class="comment">/// \return Scheduling decision, mapping tasks to raylets for placement.</span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;TaskID&gt; SpillOver(SchedulingResources &amp;remote_scheduling_resources) <span class="keyword">const</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// \brief SchedulingPolicy destructor.</span></span><br><span class="line">  <span class="keyword">virtual</span> ~SchedulingPolicy();</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">/// An immutable reference to the scheduling task queues.</span></span><br><span class="line">  <span class="keyword">const</span> SchedulingQueue &amp;scheduling_queue_;</span><br><span class="line">  <span class="comment">/// Internally maintained random number generator.</span></span><br><span class="line">  <span class="built_in">std</span>::mt19937_64 gen_;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8C03;&#x5EA6;&#x7B56;&#x7565;&#x7684;&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x63CF;&#x8FF0;&#x4E86;SchedulingPolicy&#x7C7B;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x5305;&#x62EC;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;Schedule&#x51FD;&#x6570;&#xFF08;&#x5173;&#x952E;&#x8C03;&#x5EA6;&#x51B3;&#x7B56;&#xFF09;&#x3002;</p><p>&#x6784;&#x9020;&#x51FD;&#x6570;&#x4F20;&#x5165;&#x9700;&#x8981;&#x8C03;&#x5EA6;&#x7684;&#x4EFB;&#x52A1;&#x961F;&#x5217;&#xFF0C;Schedule&#x51FD;&#x6570;&#x63A5;&#x53D7;&#x96C6;&#x7FA4;&#x8D44;&#x6E90;&#x7684;&#x4E00;&#x4E2A;<code>unordered_map</code>&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x8F93;&#x51FA;&#x4E3A;&#x8C03;&#x5EA6;&#x51B3;&#x7B56;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;<code>unordered_map</code>&#x3002;</p><p>Schedule&#x63A5;&#x53D7;&#x7684;&#x8F93;&#x5165;map&#x662F;&#x4EE5;ClientID&#x5373;&#x672C;&#x8282;&#x70B9;id&#x4E3A;key&#xFF0C;SchedulingResources&#x8C03;&#x5EA6;&#x8D44;&#x6E90;&#x4E3A;value&#xFF0C;&#x5373;&#x4E00;&#x4E2A;<code>&#x8282;&#x70B9;-&gt;&#x8D44;&#x6E90;</code>&#x7684;&#x6620;&#x5C04;&#x3002;</p><p>Schedule&#x8F93;&#x51FA;map&#x5219;&#x662F;&#x4EE5;TaskID&#x4E3A;&#x952E;&#xFF0C;ClientID&#x4E3A;&#x503C;&#xFF0C;&#x5373;&#x8868;&#x793A;TaskID&#x8868;&#x793A;&#x7684;Task&#x8C03;&#x5EA6;&#x5230;ClientID&#x4EE3;&#x8868;&#x7684;&#x8282;&#x70B9;&#x4E0A;&#x3002;</p><p>&#x7D2F;&#x7684;&#x6491;&#x4E0D;&#x4F4F;&#x4E86;&#xFF0C;&#x5F85;&#x7EED;..</p>]]></content>
      
      <categories>
          
          <category> Ray源码分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ray </tag>
            
            <tag> 分布式系统 </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> python </tag>
            
            <tag> 进程调度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ray源码分析-执行remote函数</title>
      <link href="//posts/6c39f779/"/>
      <url>//posts/6c39f779/</url>
      <content type="html"><![CDATA[<p>Ray version:0.7.4</p><p>&#x5F53;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;remote function&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;remote_func.remote()&#x6267;&#x884C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x53D1;&#x751F;&#x4EC0;&#x4E48;&#xFF1F;</p><a id="more"></a><p>&#x5F53;&#x6211;&#x4EEC;&#x8FD0;&#x884C;&#x4E86;&#x4FEE;&#x9970;&#x5668;@ray.remote&#x4E4B;&#x540E;&#xFF0C;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x8FDC;&#x7A0B;&#x51FD;&#x6570;remote function</p><p>&#x6700;&#x540E;&#x5728;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E3B;&#x8981;&#x5C31;&#x662F;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">invocation</span><span class="params">(args, kwargs)</span>:</span></span><br><span class="line">    args = ray.signature.extend_args(self._function_signature, args, kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> worker.mode == ray.worker.LOCAL_MODE:</span><br><span class="line">        object_ids = worker.local_mode_manager.execute(</span><br><span class="line">                    self._function, self._function_descriptor, args,</span><br><span class="line">                    num_return_vals)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        object_ids = worker.submit_task(</span><br><span class="line">                    self._function_descriptor,</span><br><span class="line">                    args,</span><br><span class="line">                    num_return_vals=num_return_vals,</span><br><span class="line">                    resources=resources)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(object_ids) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> object_ids[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">elif</span> len(object_ids) &gt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> object_ids</span><br></pre></td></tr></table></figure><p>&#x4E0D;&#x8003;&#x8651;LOCAL_MODE&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E3B;&#x8981;&#x5DE5;&#x4F5C;&#x5C31;&#x4FE9;&#xFF1A;<code>submit_task</code>&#x53D1;&#x5E03;&#x4EFB;&#x52A1;&#xFF0C;&#x548C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;<code>object_id</code>&#xFF0C;&#x4EE5;&#x4F9B;<code>ray.get(object_id)</code></p><p>&#x8FD9;&#x662F;submit_task&#x7684;&#x51FD;&#x6570;&#xFF1A;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">submit_task</span><span class="params">(...)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Submit a remote task to the scheduler.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Returns:</span></span><br><span class="line"><span class="string">The return object IDs for this task.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> profiling.profile(<span class="string">&quot;submit_task&quot;</span>):</span><br><span class="line">        ....</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Increment the worker&apos;s task index to track how many tasks</span></span><br><span class="line">        <span class="comment"># have been submitted by the current task so far.</span></span><br><span class="line">        self.task_context.task_index += <span class="number">1</span></span><br><span class="line">        <span class="comment"># The parent task must be set for the submitted task.</span></span><br><span class="line">        <span class="keyword">assert</span> <span class="keyword">not</span> self.current_task_id.is_nil()</span><br><span class="line">        <span class="comment"># Current driver id must not be nil when submitting a task.</span></span><br><span class="line">        <span class="comment"># Because every task must belong to a driver.</span></span><br><span class="line">        <span class="keyword">assert</span> <span class="keyword">not</span> self.current_job_id.is_nil()</span><br><span class="line">        <span class="comment"># Submit the task to raylet.</span></span><br><span class="line">        function_descriptor_list = (function_descriptor.get_function_descriptor_list())</span><br><span class="line"></span><br><span class="line">        ....</span><br><span class="line"></span><br><span class="line">        task = ray._raylet.TaskSpec( ...)</span><br><span class="line">        self.raylet_client.submit_task(task)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> task.returns()</span><br></pre></td></tr></table></figure><p>&#x5F53;&#x6211;&#x4EEC;&#x8FDB;&#x884C;&#x8C03;&#x5EA6;&#x7684;&#x65F6;&#x5019;&#xFF0C;Driver&#x4F1A;&#x63D0;&#x4EA4;N&#x4E2A;task&#x7ED9;local scheduler&#xFF0C;&#x7136;&#x540E;local scheduler&#x628A;&#x8FD9;&#x4E9B;task&#x5206;&#x7ED9;&#x5404;&#x4E2A;Worker&#x3002;</p><p>&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F1A;&#x542F;&#x52A8;&#x3010;CPU&#x6838;&#x5FC3;&#x6570;&#x3011;&#x4E2A;Worker&#x3002;</p>]]></content>
      
      <categories>
          
          <category> Ray源码分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ray </tag>
            
            <tag> 分布式系统 </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> python </tag>
            
            <tag> remote function </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ray源码分析-remote修饰器</title>
      <link href="//posts/e72d2e7a/"/>
      <url>//posts/e72d2e7a/</url>
      <content type="html"><![CDATA[<p>Ray version: 0.7.3</p><p><code>@ray.remote</code>&#x4FEE;&#x9970;&#x5668;&#x7684;&#x6E90;&#x7801;&#x5206;&#x6790;</p><a id="more"></a><p>&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#xFF1A;python&#x4E2D;&#x7684;&#x4FEE;&#x9970;&#x5668;&#xFF0C;python&#x4E2D;&#x7684;&#x4FEE;&#x9970;&#x5668;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x4EE5;&#x51FD;&#x6570;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x8FD4;&#x56DE;&#x51FD;&#x6570;&#x7684;&#x51FD;&#x6570;&#x3002;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x7684;&#x6DFB;&#x52A0;/&#x4FEE;&#x6539;&#x51FD;&#x6570;&#x7684;&#x4E00;&#x4E9B;&#x64CD;&#x4F5C;&#xFF0C;&#x5374;&#x4E0D;&#x60F3;&#x4FEE;&#x6539;&#x539F;&#x6709;&#x51FD;&#x6570;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><p>&#x89C1;&#xFF1A;<a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017451662295584" target="_blank" rel="noopener">&#x5ED6;&#x96EA;&#x5CF0;python-&#x4FEE;&#x9970;&#x5668;</a></p><p>&#x4E3B;&#x8981;&#x5B9A;&#x4E49;&#x4EE3;&#x7801;&#xFF1A;&#x5728;ray/python/ray/worker.py&#x4E2D;&#xFF1A;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remote</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">     ...&#x7B80;&#x4ECB;&#x7528;&#x6CD5;...</span><br><span class="line">    worker = get_global_worker()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(args) == <span class="number">1</span> <span class="keyword">and</span> len(kwargs) == <span class="number">0</span> <span class="keyword">and</span> callable(args[<span class="number">0</span>]):</span><br><span class="line">    <span class="comment"># &#x5982;&#x679C;&#x88C5;&#x9970;&#x5668;&#x4EC5;&#x4EC5;&#x662F;@ray.remote</span></span><br><span class="line">        <span class="keyword">return</span> make_decorator(worker=worker)(args[<span class="number">0</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># &#x5E26;&#x6709;&#x53C2;&#x6570;&#xFF0C;&#x89E3;&#x6790;&#x5173;&#x952E;&#x5B57;</span></span><br><span class="line">    .....</span><br><span class="line">    <span class="keyword">return</span> make_decorator(</span><br><span class="line">        num_return_vals=num_return_vals,</span><br><span class="line">        num_cpus=num_cpus,</span><br><span class="line">        num_gpus=num_gpus,</span><br><span class="line">        resources=resources,</span><br><span class="line">        max_calls=max_calls,</span><br><span class="line">        max_reconstructions=max_reconstructions,</span><br><span class="line">        worker=worker)</span><br></pre></td></tr></table></figure><p>&#x5728;ray/python/ray/worker.py&#x4E2D;&#xFF1A;make_decorator(...)</p><p>&#x4E3B;&#x8981;&#x903B;&#x8F91;&#xFF1A;&#x5224;&#x65AD;&#x662F;&#x751F;&#x6210;&#x4E00;&#x4E2A;remote function&#x8FD8;&#x662F;&#x4E00;&#x4E2A;Actor&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x53BB;&#x751F;&#x6210;&#x3002;</p><p>&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_decorator</span><span class="params">(num_return_vals=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                   num_cpus=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                   num_gpus=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                   resources=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                   max_calls=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                   max_reconstructions=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                   worker=None)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorator</span><span class="params">(function_or_class)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (inspect.isfunction(function_or_class) <span class="keyword">or</span> is_cython(function_or_class)):</span><br><span class="line">            <span class="comment"># Set the remote function default resources.</span></span><br><span class="line">            <span class="keyword">if</span> max_reconstructions <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">&quot;...&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ray.remote_function.RemoteFunction(</span><br><span class="line">                function_or_class, num_cpus, num_gpus, resources,</span><br><span class="line">                num_return_vals, max_calls)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> inspect.isclass(function_or_class):</span><br><span class="line">            <span class="keyword">if</span> num_return_vals <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">&quot;...&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> max_calls <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">&quot;...&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> worker.make_actor(function_or_class, num_cpus, num_gpus,</span><br><span class="line">                                     resources, max_reconstructions)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;...&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> decorator</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x91CC;&#x8FDB;&#x4E00;&#x6B65;&#x5224;&#x65AD;&#xFF0C;&#x5224;&#x65AD;&#x88C5;&#x9970;&#x5668;&#x4F20;&#x8FDB;&#x6765;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x662F;&#x8981;&#x751F;&#x6210;&#x4E00;&#x4E2A;remote function&#x8FD8;&#x662F;&#x8981;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5177;&#x6709;&#x8FDE;&#x7EED;&#x6267;&#x884C;&#x987A;&#x5E8F;&#x7684;Actor&#x3002;</p><p>&#x6211;&#x4EEC;&#x7684;&#x4F8B;&#x5B50;&#x91CC;&#x662F;&#x4E00;&#x4E2A;remote function&#xFF0C;&#x5728;<code>ray/python/ray/remote_function.py</code>&#x4E2D;</p><p>&#x6709;&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RemoteFunction</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;A remote function.</span></span><br><span class="line"><span class="string">    This is a decorated function. It can be used to spawn tasks.</span></span><br><span class="line"><span class="string">    &#x53C2;&#x6570;&#x4ECB;&#x7ECD;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, function, num_cpus, num_gpus, resources,</span></span></span><br><span class="line"><span class="function"><span class="params">                 num_return_vals, max_calls)</span>:</span></span><br><span class="line">        ....</span><br><span class="line">        <span class="comment"># Override task.remote&apos;s signature and docstring</span></span><br><span class="line"><span class="meta">        @wraps(function)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_remote_proxy</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> self._remote(args=args, kwargs=kwargs)</span><br><span class="line"></span><br><span class="line">        self.remote = _remote_proxy</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;Remote functions cannot be called directly. Instead &quot;</span></span><br><span class="line">                        <span class="string">&quot;of running &apos;{}()&apos;, try &apos;{}.remote()&apos;.&quot;</span>.format(</span><br><span class="line">                            self._function_name, self._function_name))</span><br><span class="line">    <span class="comment"># &#x5DF2;&#x7ECF;&#x5F03;&#x7528;&#x7684;&#x88C5;&#x9970;&#x5668;&#xFF0C;&#x5728;&#x5F15;&#x7528;&#x4E2D;&#x7684;&#x535A;&#x6587;&#x5206;&#x6790;&#x7684;&#x662F;0.4.0&#x7248;&#x672C;&#x7684;&#xFF0C;&#x90A3;&#x4E2A;&#x65F6;&#x5019;&#x8FD8;&#x5728;&#x7528;_submit</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_submit</span><span class="params">(self,</span></span></span><br><span class="line"><span class="function"><span class="params">                args=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                kwargs=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                num_return_vals=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                num_cpus=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                num_gpus=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                resources=None)</span>:</span></span><br><span class="line">        logger.warning(</span><br><span class="line">            <span class="string">&quot;WARNING: _submit() is being deprecated. Please use _remote().&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> self._remote(</span><br><span class="line">            args=args,</span><br><span class="line">            kwargs=kwargs,</span><br><span class="line">            num_return_vals=num_return_vals,</span><br><span class="line">            num_cpus=num_cpus,</span><br><span class="line">            num_gpus=num_gpus,</span><br><span class="line">            resources=resources)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_remote</span><span class="params">(self,</span></span></span><br><span class="line"><span class="function"><span class="params">                args=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                kwargs=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                num_return_vals=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                num_cpus=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                num_gpus=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                resources=None)</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;An experimental alternate way to submit remote functions.&quot;&quot;&quot;</span></span><br><span class="line">        worker = ray.worker.get_global_worker()</span><br><span class="line">        worker.check_connected()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self._last_export_session_and_job != worker.current_session_and_job:</span><br><span class="line">            <span class="comment"># If this function was not exported in this session and job,</span></span><br><span class="line">            <span class="comment"># we need to export this function again, because current GCS</span></span><br><span class="line">            <span class="comment"># doesn&apos;t have it.</span></span><br><span class="line">            <span class="comment"># &#x4E0E;Actor&#x6709;&#x5173;&#x7684;&#xFF0C;&#x9632;&#x6B62;&#x91CD;&#x590D;&#x53D1;&#x5E03;&#x7684;</span></span><br><span class="line">            self._last_export_session_and_job = worker.current_session_and_job</span><br><span class="line">            worker.function_actor_manager.export(self)</span><br><span class="line"></span><br><span class="line">        kwargs = {} <span class="keyword">if</span> kwargs <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">else</span> kwargs</span><br><span class="line">        args = [] <span class="keyword">if</span> args <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">else</span> args</span><br><span class="line"></span><br><span class="line">        ....</span><br><span class="line"></span><br><span class="line">        resources = ray.utils.resources_from_resource_arguments(</span><br><span class="line">            self._num_cpus, self._num_gpus, self._resources, num_cpus,</span><br><span class="line">            num_gpus, resources)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">invocation</span><span class="params">(args, kwargs)</span>:</span></span><br><span class="line">            args = ray.signature.extend_args(self._function_signature, args,</span><br><span class="line">                                             kwargs)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> worker.mode == ray.worker.LOCAL_MODE:</span><br><span class="line">                ...</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                object_ids = worker.submit_task(</span><br><span class="line">                    self._function_descriptor,</span><br><span class="line">                    args,</span><br><span class="line">                    num_return_vals=num_return_vals,</span><br><span class="line">                    resources=resources)</span><br><span class="line">            <span class="comment"># &#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line">            <span class="keyword">if</span> len(object_ids) == <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> object_ids[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">elif</span> len(object_ids) &gt; <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> object_ids</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self._decorator <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            invocation = self._decorator(invocation)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> invocation(args, kwargs)</span><br></pre></td></tr></table></figure><p>&#x81F3;&#x6B64;&#xFF0C;&#x8FD9;&#x4E2A;remote&#x4FEE;&#x9970;&#x5668;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x3002;</p><p>&#x6D41;&#x7A0B;&#x5206;&#x6790;&#xFF1A;</p><p>remote&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x7684;&#x88C5;&#x9970;&#x5668;&#xFF0C;&#x53EF;&#x4EE5;&#x88C5;&#x9970;&#x666E;&#x901A;&#x7684;Python&#x51FD;&#x6570;&#xFF0C;&#x6216;&#x8005;&#x662F;Python&#x7684;class&#x3002;</p><p>&#x8FDB;&#x5165;remote&#x88C5;&#x9970;&#x5668;&#x4F53;&#xFF0C;&#x9996;&#x5148;&#x5F97;&#x5230;&#x5168;&#x5C40;Worker&#x7136;&#x540E;&#x8C03;&#x7528;make_decorator&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x88C5;&#x9970;&#x5668;&#x5DE5;&#x5382;&#x51FD;&#x6570;&#x3002;&#x6839;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x521B;&#x5EFA;remote function&#x6216;&#x8005;Actor&#x3002;</p><p>&#x8FD9;&#x91CC;&#x521B;&#x5EFA;&#x7684;&#x662F;RemoteFunction()&#xFF0C;&#x9996;&#x5148;&#x5224;&#x65AD;&#x662F;&#x65E0;&#x53C2;&#x4FEE;&#x9970;&#x8FD8;&#x662F;&#x5E26;&#x53C2;&#x4FEE;&#x9970;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x65E0;&#x53C2;&#x4FEE;&#x9970;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x662F;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ray.remote</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">()</span>:</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>&#x7B49;&#x4EF7;&#x4E8E;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">()</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">f = ray.remote(f)</span><br></pre></td></tr></table></figure><p>&#x793A;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ray.remote</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">print(ray.get(f1.remote()))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">f2 = ray.remote(f2)</span><br><span class="line">result = f2.remote()</span><br><span class="line"></span><br><span class="line">print(ray.get(result))</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x662F;&#x5E26;&#x53C2;&#x4FEE;&#x9970;&#xFF0C;&#x793A;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ray.remote(num_cpus = 1)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remote_add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line"></span><br><span class="line">print(ray.get(remote_add.remote(<span class="number">1</span>,<span class="number">2</span>)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">local_add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line"></span><br><span class="line">change_to_remote = ray.remote(num_cpus = <span class="number">1</span>)(local_add)</span><br><span class="line">print(ray.get(change_to_remote.remote(<span class="number">1</span>,<span class="number">2</span>)))</span><br></pre></td></tr></table></figure><p>&#x81F3;&#x6B64;&#xFF0C;remote&#x4FEE;&#x9970;&#x5668;&#x5C31;&#x5B8C;&#x6210;&#x4E86;</p>]]></content>
      
      <categories>
          
          <category> Ray源码分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ray </tag>
            
            <tag> 分布式系统 </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> python </tag>
            
            <tag> 修饰器 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ray源码分析-init</title>
      <link href="//posts/ad6b7978/"/>
      <url>//posts/ad6b7978/</url>
      <content type="html"><![CDATA[<p>Ray version&#xFF1A;0.7.4&#x3002;<code>Ray.init()</code>&#x6E90;&#x7801;&#x5206;&#x6790;&#x3002;</p><a id="more"></a><h1 id="&#x4F8B;&#x7A0B;">&#x4F8B;&#x7A0B;</h1><p>&#x4EE5;&#x6700;&#x7B80;&#x5355;&#x7684;&#x201C;Hello World&#x201D;&#x7A0B;&#x5E8F;&#x4E3A;&#x4F8B;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ray</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">ray.init()</span><br><span class="line"><span class="meta">@ray.remote</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">()</span>:</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello World&quot;</span></span><br><span class="line"></span><br><span class="line">results = ray.get(f.remote())</span><br><span class="line">print(results)</span><br></pre></td></tr></table></figure><p>&#x6267;&#x884C;&#x540E;&#xFF0C;&#x8F93;&#x51FA;&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2020-07-21 07:06:50,948 INFO node.py:498 -- Process STDOUT and STDERR is being redirected to /tmp/ray/session_2020-07-21_07-06-50_947678_1170/logs.</span><br><span class="line">2020-07-21 07:06:51,054 INFO services.py:409 -- Waiting for redis server at 127.0.0.1:24634 to respond...</span><br><span class="line">2020-07-21 07:06:51,170 INFO services.py:409 -- Waiting for redis server at 127.0.0.1:35429 to respond...</span><br><span class="line">2020-07-21 07:06:51,174 INFO services.py:809 -- Starting Redis shard with 10.0 GB max memory.</span><br><span class="line">2020-07-21 07:06:51,195 INFO node.py:512 -- Process STDOUT and STDERR is being redirected to /tmp/ray/session_2020-07-21_07-06-50_947678_1170/logs.</span><br><span class="line">2020-07-21 07:06:51,197 WARNING services.py:1301 -- Warning: Capping object memory store to 20.0GB. To increase this further, specify `object_store_memory` when calling ray.init() or ray start.</span><br><span class="line">2020-07-21 07:06:51,197 INFO services.py:1475 -- Starting the Plasma object store with 20.0 GB memory using /dev/shm.</span><br><span class="line">Hello World</span><br></pre></td></tr></table></figure><h1 id="&#x903B;&#x8F91;&#x5206;&#x6790;">&#x903B;&#x8F91;&#x5206;&#x6790;</h1><p>&#x8FD9;&#x91CC;&#x5206;&#x6790;<code>ray.init()</code></p><p>&#x5728;ray/python/ray/worker.py&#x4E2D;</p><p>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6709;&#x4E24;&#x79CD;&#x7528;&#x6CD5;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x8FDE;&#x63A5;&#x5230;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;Ray&#x96C6;&#x7FA4;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;<code>ray.init(redis_address=&quot;123.45.67.89:123&quot;)</code></p><p>&#x4E00;&#x4E2A;&#x662F;&#x542F;&#x52A8;&#x4E00;&#x4E2A;Ray&#x96C6;&#x7FA4;&#xFF0C;&#x7136;&#x540E;&#x8FDE;&#x63A5;&#x5B83;&#x3002;&#x7528;&#x6CD5;&#x662F;ray.init()&#xFF0C;&#x4E0D;&#x5E26;&#x53C2;&#x6570;&#x3002;</p><p>&#x5177;&#x4F53;&#x53C2;&#x6570;&#x7565;&#xFF0C;&#x6E90;&#x7801;&#x548C;&#x6587;&#x6863;&#x4E2D;&#x90FD;&#x6709;&#x5F88;&#x6E05;&#x6670;&#x7684;&#x63CF;&#x8FF0;&#x3002;&#x8FD9;&#x91CC;&#x8BB0;&#x51E0;&#x4E2A;&#x91CD;&#x70B9;&#xFF1A;</p><p>Ray&#x4E2D;&#x6709;&#x4E09;&#x79CD;&#x6A21;&#x5F0F;&#xFF1A;SCRIPT_MODE&#xFF0C;WORKER_MODE&#xFF0C;LOCAL_MODE</p><p>&#x5728;ray/python/ray/worker.py--set_mode&#x4E2D;</p><ul><li>SCRIPT_MODE&#xFF1A;&#x5F53;&#x8FD9;&#x4E2A;Worker&#x662F;&#x4E00;&#x4E2A;Driver&#x65F6;&#xFF0C;&#x4E14;&#x8FD9;&#x4E2A;Driver&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x4E00;&#x4E2A;python&#x811A;&#x672C;&#x6216;&#x8005;&#x6B63;&#x5728;shell&#x4E2D;&#x4EA4;&#x4E92;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;SCRIPT_MODE&#xFF0C;&#x4F1A;&#x6253;&#x5370;&#x4FE1;&#x606F;&#xFF0C;&#x8F93;&#x51FA;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002;</li><li>WORKER_MODE&#xFF1A;&#x8FD9;&#x4E2A;Worker&#x4E0D;&#x662F;Driver&#x65F6;&#x4F7F;&#x7528;WORKER_MODE&#xFF0C;&#x4E0D;&#x4F1A;&#x6253;&#x5370;&#x5173;&#x4E8E;&#x4EFB;&#x52A1;&#x7684;&#x4FE1;&#x606F;&#x3002;</li><li>LOCAL_MODE&#xFF1A;&#x5982;&#x679C;&#x8981;&#x987A;&#x5E8F;&#x8FD0;&#x884C;&#x6216;&#x662F;&#x8C03;&#x8BD5;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;LOCAL_MODE&#xFF0C;&#x6B64;&#x65F6;&#x7684;Worker&#x5373;&#x662F;driver&#x3002;&#x6B64;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C;&#x4E0D;&#x4F1A;&#x53D1;&#x9001;remote&#x51FD;&#x6570;&#x5230;&#x8C03;&#x5EA6;&#x5668;&#xFF0C;&#x800C;&#x662F;&#x76F4;&#x63A5;&#x4EE5;&#x963B;&#x585E;&#x7684;&#x5F62;&#x5F0F;&#x6267;&#x884C;&#x3002;</li></ul><p><code>init</code>&#x7684;&#x8FD0;&#x884C;&#x903B;&#x8F91;&#xFF0C;&#x6211;&#x628A;&#x5173;&#x952E;&#x51FD;&#x6570;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x91CD;&#x65B0;&#x5199;&#x4E86;&#x4E00;&#x904D;&#x903B;&#x8F91;&#xFF0C;&#x6211;&#x611F;&#x89C9;&#x8FD9;&#x6837;&#x770B;&#x7684;&#x6E05;&#x9664;&#x4E00;&#x4E9B;&#xFF1A;</p><h2 id="&#x4ECE;&#x96F6;&#x542F;&#x52A8;ray&#x96C6;&#x7FA4;&#x7684;&#x903B;&#x8F91;">&#x4ECE;&#x96F6;&#x542F;&#x52A8;Ray&#x96C6;&#x7FA4;&#x7684;&#x903B;&#x8F91;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ray/python/ray/worker.py</span></span><br><span class="line"><span class="comment"># &#x5148;&#x52A0;&#x8F7D;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</span></span><br><span class="line"><span class="keyword">if</span> have_config:</span><br><span class="line">    setup_logger()</span><br><span class="line"></span><br><span class="line"><span class="comment"># set MODE</span></span><br><span class="line">driver_mode=XXX_MODE</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x68C0;&#x67E5;&#x6709;&#x6CA1;&#x6709;&#x7F3A;&#x5C11;&#x5305;&#xFF0C;&#x5982;&#x679C;&#x7F3A;&#x5C11;&#xFF0C;&#x62A5;&#x9519;&#xFF0C;&#x63D0;&#x793A;&#x5B89;&#x88C5;</span></span><br><span class="line"><span class="keyword">if</span> XXX <span class="keyword">is</span> Node:</span><br><span class="line">    logger.warning(<span class="string">&quot;pip install XXX&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x68C0;&#x67E5;&#x662F;&#x5426;&#x662F;&#x66FE;&#x7ECF;&#x521D;&#x59CB;&#x5316;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x662F;&#xFF0C;&#x62A5;&#x9519;</span></span><br><span class="line"><span class="keyword">if</span> global_worker.connected:</span><br><span class="line">    logger.error(<span class="string">&quot;calling ray.init() again after it has already been called.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x628A;&#x53C2;&#x6570;&#x4E2D;&#x7684;hostname&#x8F6C;&#x4E3A;&#x6570;&#x5B57;&#x5316;&#x7684;IP address</span></span><br><span class="line"><span class="keyword">if</span> node_ip_address <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">    node_ip_address = services.address_to_ip(node_ip_address)</span><br><span class="line"><span class="keyword">if</span> redis_address <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">    redis_address = services.address_to_ip(redis_address)</span><br><span class="line"></span><br><span class="line"><span class="comment"># LOCAL_MODE&#x7684;&#x90E8;&#x5206;&#x7565;&#x8FC7;&#xFF0C;&#x4E0D;&#x8868;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5982;&#x679C;&#x662F;&#x65B0;&#x5F00;&#x7684;&#x4E00;&#x4E2A;&#x96C6;&#x7FA4;&#xFF0C;redis_address&#x81EA;&#x7136;&#x662F;&#x7A7A;&#x7684;&#x5904;&#x7406;&#x903B;&#x8F91;&#x5982;&#x4E0B;&#xFF1A;</span></span><br><span class="line"><span class="comment"># &#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x5747;&#x524D;&#x63D0;&#x662F;redis_address = None</span></span><br><span class="line">load ray_params</span><br><span class="line"><span class="comment"># head=true&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x8282;&#x70B9;&#x8981;&#x505A;Master</span></span><br><span class="line">_global_node = ray.node.Node(head=<span class="keyword">True</span>, shutdown_at_exit=<span class="keyword">False</span>, ray_params=ray_params)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ray/python/ray/node.py  class Node</span></span><br><span class="line">redis_client = <span class="keyword">None</span></span><br><span class="line">date_str = XXX <span class="comment"># &#x6309;&#x4E00;&#x5B9A;&#x7684;&#x89C4;&#x5219;&#x751F;&#x6210;date_str</span></span><br><span class="line">session_name = XXX <span class="comment"># &#x6309;&#x4E00;&#x5B9A;&#x7684;&#x89C4;&#x5219;&#x751F;&#x6210;session_name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8BBE;&#x7F6E;plasma_store_socket_name&#x548C;_raylet_socket_name</span></span><br><span class="line">_plasma_store_socket_name = XXX</span><br><span class="line">_raylet_socket_name = XXX</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x66F4;&#x65B0;redis_shared&#x7684;&#x6570;&#x91CF;&#xFF0C;</span></span><br><span class="line">ray_params.update_if_absent(num_redis_shards=<span class="number">1</span>, include_webui=<span class="keyword">True</span>)</span><br><span class="line">self._webui_url = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x521D;&#x59CB;&#x5316;&#x6574;&#x4E2A;Ray&#x96C6;&#x7FA4;</span></span><br><span class="line">self.start_head_processes()    <span class="comment">#&#x542F;&#x52A8;Master&#x8282;&#x70B9;</span></span><br><span class="line">redis_client = self.create_redis_client()</span><br><span class="line">redis_client.set(<span class="string">&quot;session_name&quot;</span>, self.session_name)</span><br><span class="line">redis_client.set(<span class="string">&quot;session_dir&quot;</span>, self._session_dir)</span><br><span class="line">redis_client.set(<span class="string">&quot;temp_dir&quot;</span>, self._temp_dir)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x542F;&#x52A8;&#x8282;&#x70B9;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x8FDB;&#x7A0B;</span></span><br><span class="line">self.start_ray_processes()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x81F3;&#x6B64;&#xFF0C;&#x6574;&#x4E2A;Ray&#x96C6;&#x7FA4;&#x542F;&#x52A8;&#x5B8C;&#x6BD5;</span></span><br></pre></td></tr></table></figure><p>&#x518D;&#x628A;start_head_processes()&#x548C;start_ray_processes()&#x62FF;&#x51FA;&#x6765;&#x7EC6;&#x770B;&#xFF1A;</p><p><code>start_head_processes()</code>&#x90E8;&#x5206;&#xFF1A;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># start_head_processes()   &#x521D;&#x59CB;&#x5316;Master&#x7684;&#x6D41;&#x7A0B;</span></span><br><span class="line">start_redis()</span><br><span class="line">start_monitor()</span><br><span class="line">start_raylet_monitor()</span><br><span class="line">start_dashboard()</span><br></pre></td></tr></table></figure><p><code>start_ray_processes()</code>&#x90E8;&#x5206;&#xFF1A;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># start_ray_processes() &#x542F;&#x52A8;&#x8282;&#x70B9;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x8FDB;&#x7A0B;</span></span><br><span class="line">start_plasma_store()</span><br><span class="line">start_raylet()</span><br><span class="line">start_reporter()</span><br><span class="line">start_log_monitor()</span><br></pre></td></tr></table></figure><p>&#x5176;&#x4E2D;<code>start_raylet()</code>&#x662F;&#x542F;&#x52A8;ray&#x8282;&#x70B9;&#x7684;&#x5173;&#x952E;&#x51FD;&#x6570;&#xFF0C;node.py<code>&#x4E2D;&#x7684;</code>start_raylet()<code>&#x51FD;&#x6570;&#x8C03;&#x7528;</code>services.py&#x4E2D;&#x7684;<code>start_raylet()</code>&#x51FD;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x542F;&#x52A8;&#x4E00;&#x4E2A;raylet&#xFF0C;&#x4E00;&#x4E2A;raylet&#x5C31;&#x662F;&#x4E00;&#x4E2A;local scheduler&#x548C;object manager&#x7684;&#x7ED3;&#x5408;&#x4F53;&#x3002;&#x4E00;&#x4E2A;raylet&#x4E2D;&#xFF0C;&#x6709;&#x4E00;&#x5806;worker&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x662F;CPU&#x7684;&#x6838;&#x5FC3;&#x6570;&#x3002;local_scheduler&#x5C31;&#x662F;&#x8BBA;&#x6587;&#x4E2D;&#x7684;&#x672C;&#x5730;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#xFF0C;object manager&#x5BF9;&#x5E94;&#x8BBA;&#x6587;&#x67B6;&#x6784;&#x56FE;&#x4E2D;&#x7684;object store&#x3002;</p><h2 id="&#x52A0;&#x5165;&#x4E00;&#x4E2A;&#x96C6;&#x7FA4;&#x7684;&#x903B;&#x8F91;">&#x52A0;&#x5165;&#x4E00;&#x4E2A;&#x96C6;&#x7FA4;&#x7684;&#x903B;&#x8F91;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ray/python/ray/worker.py</span></span><br><span class="line"><span class="comment"># &#x5148;&#x52A0;&#x8F7D;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</span></span><br><span class="line"><span class="keyword">if</span> have_config:</span><br><span class="line">    setup_logger()</span><br><span class="line"></span><br><span class="line"><span class="comment"># set MODE</span></span><br><span class="line">driver_mode=XXX_MODE</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x68C0;&#x67E5;&#x6709;&#x6CA1;&#x6709;&#x7F3A;&#x5C11;&#x5305;&#xFF0C;&#x5982;&#x679C;&#x7F3A;&#x5C11;&#xFF0C;&#x62A5;&#x9519;&#xFF0C;&#x63D0;&#x793A;&#x5B89;&#x88C5;</span></span><br><span class="line"><span class="keyword">if</span> XXX <span class="keyword">is</span> Node:</span><br><span class="line">    logger.warning(<span class="string">&quot;pip install XXX&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x68C0;&#x67E5;&#x662F;&#x5426;&#x662F;&#x66FE;&#x7ECF;&#x521D;&#x59CB;&#x5316;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x662F;&#xFF0C;&#x62A5;&#x9519;</span></span><br><span class="line"><span class="keyword">if</span> global_worker.connected:</span><br><span class="line">    logger.error(<span class="string">&quot;calling ray.init() again after it has already been called.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x628A;&#x53C2;&#x6570;&#x4E2D;&#x7684;hostname&#x8F6C;&#x4E3A;&#x6570;&#x5B57;&#x5316;&#x7684;IP address</span></span><br><span class="line"><span class="keyword">if</span> node_ip_address <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">    node_ip_address = services.address_to_ip(node_ip_address)</span><br><span class="line"><span class="keyword">if</span> redis_address <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">    redis_address = services.address_to_ip(redis_address)</span><br><span class="line"></span><br><span class="line"><span class="comment"># LOCAL_MODE&#x7684;&#x90E8;&#x5206;&#x7565;&#x8FC7;&#xFF0C;&#x4E0D;&#x8868;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8FDE;&#x63A5;&#x5230;&#x4E00;&#x4E2A;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x96C6;&#x7FA4;&#xFF0C;redis_address&#x975E;&#x7A7A;&#xFF0C;&#x903B;&#x8F91;&#x5982;&#x4E0B;&#xFF1A;</span></span><br><span class="line"><span class="comment"># &#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x5747;&#x524D;&#x63D0;&#x662F;redis_address = XXX.XXX.XXX.<span class="doctag">XXX:</span>XXX&#x7684;&#x60C5;&#x51B5;&#x4E0B;</span></span><br><span class="line">load ray_params</span><br><span class="line"></span><br><span class="line"><span class="comment"># head=false&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x8282;&#x70B9;&#x8981;&#x505A;Slave</span></span><br><span class="line">_global_node = ray.node.Node(head=<span class="keyword">False</span>, shutdown_at_exit=<span class="keyword">False</span>, ray_params=ray_params)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ray/python/ray/node.py  class Node</span></span><br><span class="line">redis_client = create_redis_client()</span><br><span class="line">date_str = XXX <span class="comment"># &#x6309;&#x4E00;&#x5B9A;&#x7684;&#x89C4;&#x5219;&#x751F;&#x6210;date_str</span></span><br><span class="line">session_name = XXX <span class="comment"># &#x6309;&#x4E00;&#x5B9A;&#x7684;&#x89C4;&#x5219;&#x751F;&#x6210;session_name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x521D;&#x59CB;&#x5316;redis_client</span></span><br><span class="line">_init_temp(redis_client)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8BBE;&#x7F6E;plasma_store_socket_name&#x548C;_raylet_socket_name</span></span><br><span class="line">_plasma_store_socket_name = XXX</span><br><span class="line">_raylet_socket_name = XXX</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x66F4;&#x65B0;include_java&#x7684;&#x5730;&#x5740;&#x548C;webui&#x7684;&#x5730;&#x5740;&#xFF0C;</span></span><br><span class="line">ray_params.include_java = (ray.services.include_java_from_redis(redis_client))</span><br><span class="line">self._webui_url = ray.services.get_webui_url_from_redis(redis_client)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x542F;&#x52A8;&#x8FD9;&#x4E2A;&#x8282;&#x70B9;&#x4E0A;&#x7684;&#x6240;&#x6709;ray&#x7A0B;&#x5E8F;</span></span><br><span class="line">start_ray_processes()</span><br></pre></td></tr></table></figure><p>&#x6CE8;&#x610F;&#xFF1A;&#x6211;&#x770B;&#x7684;Ray&#x7684;&#x6E90;&#x7801;&#x7684;&#x7248;&#x672C;&#x53F7;&#x662F;0.7.3&#x3002;<strong>Ray&#x81EA;&#x4ECE;0.5.0&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x6CA1;&#x6709;Global Scheduler&#x4E86;&#x3002;</strong></p>]]></content>
      
      <categories>
          
          <category> Ray源码分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ray </tag>
            
            <tag> 分布式系统 </tag>
            
            <tag> 源码分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浅谈C++11 CAS</title>
      <link href="//posts/1823f825/"/>
      <url>//posts/1823f825/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>Ray论文解读</title>
      <link href="//posts/f158070c/"/>
      <url>//posts/f158070c/</url>
      <content type="html"><![CDATA[<p>Ray&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x6784;&#x5EFA;&#x548C;&#x6267;&#x884C;&#x5206;&#x5E03;&#x5F0F;&#x7A0B;&#x5E8F;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x662F;&#x5BF9;Ray&#x8BBA;&#x6587;&#x7684;&#x7B14;&#x8BB0;&#x3002;</p><p><a href="https://arxiv.org/abs/1712.05889" target="_blank" rel="noopener">Ray: A Distributed Framework for Emerging AI Applications</a></p><a id="more"></a><h1 id="&#x6458;&#x8981;&#x7B80;&#x4ECB;">&#x6458;&#x8981;&#xFF0C;&#x7B80;&#x4ECB;</h1><p>&#x7565;</p><h1 id="&#x52A8;&#x673A;&#x548C;&#x8981;&#x6C42;">&#x52A8;&#x673A;&#x548C;&#x8981;&#x6C42;</h1><p>&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x4E5F;&#x5C31;&#x662F;&#x9700;&#x6C42;&#x5206;&#x6790;&#x3002;</p><p><img src="/posts/f158070c/1595219766838.png"></p><p>&#x4E0A;&#x56FE;&#x662F;&#x4E00;&#x4E2A;&#x5F3A;&#x5316;&#x5B66;&#x4E60;&#x7CFB;&#x7EDF;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x5F3A;&#x5316;&#x5B66;&#x4E60;&#x7684;&#x6D41;&#x7A0B;&#x5C31;&#x662F;Agent&#x548C;Environment&#x8FDB;&#x884C;&#x4E92;&#x52A8;&#xFF0C;&#x91C7;&#x6837;&#x5F97;&#x5230;trajectory&#xFF0C;&#x7136;&#x540E;&#x8FDB;&#x884C;&#x8BAD;&#x7EC3;&#xFF0C;&#x6539;&#x8FDB;policy&#xFF0C;&#x83B7;&#x53D6;&#x66F4;&#x9AD8;&#x7684;reward&#x3002;</p><p>&#x6240;&#x8C13;policy&#xFF0C;&#x5C31;&#x662F;&#x4ECE;environment&#x5230;action&#x7684;&#x6620;&#x5C04;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x8FD1;&#x4F3C;&#x7406;&#x89E3;&#x4E3A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x3002;</p><p>environment&#x3001;agent&#x3001;state&#x3001;reward&#x7684;&#x5177;&#x4F53;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x662F;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x4E0D;&#x540C;&#x800C;&#x4E0D;&#x540C;&#x7684;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x662F;&#x5F3A;&#x5316;&#x5B66;&#x4E60;&#x7684;&#x91CD;&#x8981;&#x7684;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#x3002;</p><p>&#x4E3A;&#x4E86;&#x5B66;&#x4E60;&#x7B56;&#x7565;&#xFF0C;agent&#x901A;&#x5E38;&#x505A;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A;policy evaluation&#x548C;policy improvement&#x3002;</p><p>&#x4E3A;&#x4E86;policy evaluation&#xFF0C;agent&#x9700;&#x8981;&#x4E0E;environment&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x5217;&#x7684;&#x4EA4;&#x4E92;&#xFF0C;&#x751F;&#x6210;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#xFF08;state&#xFF0C;reward&#xFF09;&#xFF0C;&#x7EC4;&#x6210;trajectory&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;trajectory&#x6539;&#x8FDB;policy&#x3002;&#x76F4;&#x5230;&#x6536;&#x655B;&#x3002;</p><p>&#x4F2A;&#x4EE3;&#x7801;&#x662F;</p><p><img src="/posts/f158070c/1595219789946.png"></p><p>&#x8BAD;&#x7EC3;&#x901A;&#x5E38;&#x6D89;&#x53CA;&#x5728;&#x5206;&#x5E03;&#x5F0F;&#x73AF;&#x5883;&#x4E2D;&#x8FD0;&#x884C;&#x968F;&#x673A;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x4EE5;&#x66F4;&#x65B0;&#x7B56;&#x7565;&#xFF0C;&#x5206;&#x5E03;&#x5F0F;&#x7684;SGD&#x901A;&#x5E38;&#x4F9D;&#x8D56;&#x4E8E;allreduce aggregation step&#x6216;&#x8005;&#x4E00;&#x4E2A;parameter server.</p><p>&#x5728;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#x4E2D;&#xFF0C;training&#x548C;serving&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x7CFB;&#x7EDF;&#x4E2D;&#x5206;&#x522B;&#x5904;&#x7406;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x5F3A;&#x5316;&#x5B66;&#x4E60;&#x4E2D;&#xFF0C;training&#xFF0C;serving&#xFF0C;simulating&#x5FC5;&#x987B;&#x5728;&#x5355;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x7D27;&#x5BC6;&#x8026;&#x5408;&#x3002;</p><p>&#x603B;&#x7ED3;&#x4E0B;&#x6765;&#xFF0C;&#x6709;&#x4EE5;&#x4E0B;&#x9700;&#x6C42;&#xFF1A;</p><ol type="1"><li>&#x7EC6;&#x7C92;&#x5EA6;&#x7684;&#x5F02;&#x6784;&#x8BA1;&#x7B97;&#xFF0C;&#x8BA1;&#x7B97;&#x7684;&#x6301;&#x7EED;&#x65F6;&#x95F4;&#x53EF;&#x4EE5;&#x4ECE;&#x51E0;&#x6BEB;&#x79D2;&#x5230;&#x6570;&#x5C0F;&#x65F6;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x8BAD;&#x7EC3;&#x901A;&#x5E38;&#x9700;&#x8981;&#x5F02;&#x6784;&#x786C;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982;CPU&#xFF0C;GPU&#xFF0C;TPU&#x3002;</li><li>&#x7075;&#x6D3B;&#x7684;&#x8BA1;&#x7B97;&#x6A21;&#x578B;&#xFF0C;Flexible computation model</li><li>&#x52A8;&#x6001;&#x6267;&#x884C;&#x3002;</li></ol><h1 id="&#x7F16;&#x7A0B;&#x4E0E;&#x8BA1;&#x7B97;&#x6A21;&#x578B;">&#x7F16;&#x7A0B;&#x4E0E;&#x8BA1;&#x7B97;&#x6A21;&#x578B;</h1><h2 id="&#x7F16;&#x7A0B;&#x6A21;&#x578B;">&#x7F16;&#x7A0B;&#x6A21;&#x578B;</h2><p>Ray&#x5B9E;&#x73B0;&#x4E86;&#x52A8;&#x6001;&#x4EFB;&#x52A1;&#x56FE;&#xFF0C;Ray&#x63D0;&#x4F9B;&#x4E86;actor&#x548C;task&#x5E76;&#x884C;&#x6267;&#x884C;&#x7684;&#x62BD;&#x8C61;&#x3002;</p><h3 id="task">Task</h3><p>&#x4E00;&#x4E2A;task&#x8868;&#x793A;&#x5728;&#x4E00;&#x65E0;&#x72B6;&#x6001;&#x7684;worker&#x4E0A;&#xFF0C;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x8FDC;&#x7A0B;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x8C03;&#x7528;&#x4E00;&#x4E2A;remote function&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x7ACB;&#x5373;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;future&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;ray.get()&#x6765;&#x83B7;&#x53D6;&#x7ED3;&#x679C;&#x3002;Ray&#x7684;API&#x5927;&#x6982;&#x662F;&#x5982;&#x4E0B;&#x8868;&#x683C;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/posts/f158070c/1595219823912.png"></p><p>Ray.remote function&#x5728;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#xFF0C;stateless&#x7684;&#x5BF9;&#x8C61;&#x4E0A;&#x8FD0;&#x884C;&#xFF0C;&#x5E76;&#x4E14;&#x662F;&#x65E0;&#x526F;&#x4F5C;&#x7528;&#x7684;&#xFF0C;side-effect free&#xFF0C;&#x8F93;&#x51FA;&#x4EC5;&#x4EC5;&#x7531;&#x8F93;&#x5165;&#x51B3;&#x5B9A;&#xFF0C;&#x5373;&#xFF0C;&#x662F;&#x5E42;&#x7B49;&#x7684;&#x3002;&#x901A;&#x8FC7;&#x5728;&#x6545;&#x969C;&#x7684;&#x65F6;&#x5019;&#x518D;&#x6B21;&#x6267;&#x884C;&#x51FD;&#x6570;&#xFF0C;&#x6765;&#x5B9E;&#x73B0;&#x5BB9;&#x9519;&#x3002;</p><h3 id="actor">Actor</h3><p>&#x4E00;&#x4E2A;actor&#x4EE3;&#x4E00;&#x4E2A;&#x6709;&#x72B6;&#x6001;&#x7684;&#x8BA1;&#x7B97;&#xFF0C;&#x6BCF;&#x4E2A;actor&#x90FD;&#x516C;&#x5F00;&#x4E86;&#x53EF;&#x4EE5;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;&#x5E76;&#x4E14;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p><p>&#x4E00;&#x4E2A;actor&#x5185;&#xFF0C;&#x6240;&#x6709;&#x7684;method&#x7684;&#x6267;&#x884C;&#x662F;&#x53C8;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x7684;&#xFF0C;&#x65E0;&#x6CD5;&#x5E76;&#x884C;&#x3002;</p><p>&#x6267;&#x884C;&#x4E00;&#x4E2A;method&#x7C7B;&#x4F3C;&#x4E8E;&#x6267;&#x884C;&#x4E00;&#x4E2A;task&#xFF0C;&#x90FD;&#x662F;&#x8FDC;&#x7A0B;&#x6267;&#x884C;&#xFF0C;execute remotely&#xFF0C;&#x8FD4;&#x56DE;future&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#xFF0C;actor&#x662F;&#x5728;&#x6709;&#x72B6;&#x6001;&#x7684;worker&#x4E0A;&#x5DE5;&#x4F5C;&#x7684;&#xFF0C;&#x4E00;&#x4E2A;actor&#x7684;&#x53E5;&#x67C4;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x4F20;&#x9012;&#x7ED9;&#x5176;&#x4ED6;&#x7684;actor&#x6216;&#x8005;task&#x3002;&#x901A;&#x8FC7;&#x53E5;&#x67C4;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;actor&#x4E0A;&#x7684;method&#x3002;</p><h3 id="task&#x548C;actor&#x7684;&#x533A;&#x522B;">Task&#x548C;Actor&#x7684;&#x533A;&#x522B;</h3><p>&#x4E00;&#x4E2A;actor&#x4EE3;&#x4E00;&#x4E2A;&#x6709;&#x72B6;&#x6001;&#x7684;&#x8BA1;&#x7B97;&#xFF0C;&#x6BCF;&#x4E2A;actor&#x90FD;&#x516C;&#x5F00;&#x4E86;&#x53EF;&#x4EE5;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;&#x5E76;&#x4E14;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p><p>&#x4E00;&#x4E2A;actor&#x5185;&#xFF0C;&#x6240;&#x6709;&#x7684;method&#x7684;&#x6267;&#x884C;&#x662F;&#x6709;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x7684;&#xFF0C;&#x65E0;&#x6CD5;&#x5E76;&#x884C;&#x3002;</p><p>&#x6267;&#x884C;&#x4E00;&#x4E2A;method&#x7C7B;&#x4F3C;&#x4E8E;&#x6267;&#x884C;&#x4E00;&#x4E2A;task&#xFF0C;&#x90FD;&#x662F;&#x8FDC;&#x7A0B;&#x6267;&#x884C;&#xFF0C;execute remotely&#xFF0C;&#x8FD4;&#x56DE;future&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#xFF0C;actor&#x662F;&#x5728;&#x6709;&#x72B6;&#x6001;&#x7684;worker&#x4E0A;&#x5DE5;&#x4F5C;&#x7684;&#xFF0C;&#x4E00;&#x4E2A;actor&#x7684;&#x53E5;&#x67C4;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x4F20;&#x9012;&#x7ED9;&#x5176;&#x4ED6;&#x7684;actor&#x6216;&#x8005;task&#x3002;&#x901A;&#x8FC7;&#x53E5;&#x67C4;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;actor&#x4E0A;&#x7684;method&#x3002;</p><p>&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x5176;&#x4ED6;&#x7684;&#x533A;&#x522B;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="/posts/f158070c/1595219927291.png"></p><h2 id="&#x8BA1;&#x7B97;&#x6A21;&#x578B;">&#x8BA1;&#x7B97;&#x6A21;&#x578B;</h2><p>Ray&#x91C7;&#x7528;&#x52A8;&#x6001;&#x8BA1;&#x7B97;&#x56FE;&#x6A21;&#x578B;&#xFF0C;&#x8FD9;&#x4E00;&#x8282;&#x5206;&#x6790;&#x5982;&#x4F55;&#x4ECE;&#x7528;&#x6237;&#x7A0B;&#x5E8F;&#x6784;&#x9020;&#x8BA1;&#x7B97;&#x56FE;&#x3002;&#x4F7F;&#x7528;&#x7684;API&#x5C31;&#x662F;&#x524D;&#x6587;&#x7684;API&#x3002;</p><p>&#x5148;&#x4E0D;&#x8003;&#x8651;actor&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x56FE;&#x4E2D;&#x5C31;&#x6709;&#x4E24;&#x79CD;&#x8282;&#x70B9;&#xFF1A;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#xFF0C;&#x8FDC;&#x7A0B;&#x51FD;&#x6570;&#x8C03;&#x7528;&#xFF08;remote function invocation&#xFF0C;&#x4E5F;&#x5C31;&#x662F;task&#xFF09;&#x3002;&#x8FB9;&#x7684;&#x8BDD;&#xFF0C;&#x4E5F;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#x8FB9;&#xFF0C;&#x6570;&#x636E;&#x8FB9;(data edges)&#xFF0C;&#x63A7;&#x5236;&#x8FB9;(control edges)&#xFF0C;&#x6570;&#x636E;&#x8FB9;&#x6355;&#x83B7;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x548C;task&#x4E4B;&#x95F4;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002;</p><p>&#x5177;&#x4F53;&#x800C;&#x8A00;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x6570;&#x636E;&#x5BF9;&#x8C61;&#xFF0C;data object&#x7528;D&#x8868;&#x793A;&#xFF0C;task&#x7528;T&#x8868;&#x793A;&#x3002;</p><p>&#x5982;&#x679C;task T&#x8F93;&#x51FA;D&#xFF0C;&#x90A3;&#x4E48;T-&gt;D&#x5EFA;&#x7ACB;&#x4E00;&#x6761;&#x6570;&#x636E;&#x8FB9;&#x3002;</p><p>&#x5982;&#x679C;D&#x8F93;&#x5165;&#x5230;T&#x4E2D;&#xFF0C;&#x90A3;&#x4E48;D-&gt;T&#x7B80;&#x5386;&#x4E00;&#x6761;&#x6570;&#x636E;&#x8FB9;&#x3002;</p><p>&#x63A7;&#x5236;&#x8FB9;&#x6355;&#x83B7;&#x8BA1;&#x7B97;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x5982;&#x679C;T1&#x8C03;&#x7528;T2&#xFF0C;&#x90A3;&#x4E48;T1-&gt;T2&#x6DFB;&#x52A0;&#x4E00;&#x6761;&#x63A7;&#x5236;&#x8FB9;&#x3002;</p><p>&#x5728;&#x8003;&#x8651;actor&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x989D;&#x5916;&#x6DFB;&#x52A0;&#x4E00;&#x79CD;node&#xFF0C;&#x53EB;actor&#x7684;&#x65B9;&#x6CD5;&#xFF08;method&#xFF09;&#x3002;</p><p>&#x989D;&#x5916;&#x6DFB;&#x52A0;&#x4E00;&#x79CD;&#x8FB9;&#xFF0C;&#x53EB;&#x6709;&#x72B6;&#x6001;&#x8FB9;&#xFF08;stateful edge&#xFF09;&#xFF0C;&#x8868;&#x793A;&#x4E00;&#x4E2A;actor&#x4E0B;&#xFF0C;method&#x6267;&#x884C;&#x7684;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x3002;</p><p>&#x5728;&#x540C;&#x4E00;&#x4E2A;actor&#x4E2D;&#xFF0C;method&#x7684;&#x6267;&#x884C;&#x662F;&#x6709;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x7684;&#xFF0C;&#x65E0;&#x6CD5;&#x5E76;&#x884C;&#x3002;&#x5728;&#x540C;&#x4E00;&#x4E2A;actor&#x4E2D;&#xFF0C;&#x5982;&#x679C;Mj&#x662F;&#x5728;Mi&#x4E4B;&#x540E;&#x6267;&#x884C;&#xFF0C;&#x90A3;&#x4E48;Mi-&gt;Mj&#x6709;&#x4E00;&#x6761;&#x8FB9;&#x3002;</p><p>&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x540C;&#x4E00;&#x4E2A;actor&#x4E0A;&#xFF0C;&#x6240;&#x6709;&#x7684;method&#x8C03;&#x7528;&#x5F62;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x94FE;&#xFF0C;node&#x4E4B;&#x95F4;&#x7684;&#x8FDE;&#x63A5;&#x5C31;&#x662F;stateful edge&#xFF0C;&#x8FD9;&#x4E2A;&#x94FE;&#x5C31;&#x8868;&#x793A;&#x8C03;&#x7528;&#x7684;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x3002;</p><p>&#x4EE5;&#x5982;&#x4E0B;&#x6240;&#x793A;&#x7684;&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;</p><p><img src="/posts/f158070c/1595220018571.png"></p><p>&#x6700;&#x540E;&#x751F;&#x6210;&#x7684;&#x4EFB;&#x52A1;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="/posts/f158070c/1595220071465.png"></p><p>&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#x56FE;&#xFF0C;&#x5BF9;&#x5E94;&#x4E8E;&#x6267;&#x884C;&#x4E00;&#x6B21;train_policy.remote()&#xFF0C;remote function&#x548C;actor method&#x8C03;&#x7528;&#x5728;&#x4EFB;&#x52A1;&#x56FE;&#x4E2D;&#x7684;&#x5BF9;&#x5E94;&#x7684;task&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x56FE;&#x4E2D;&#x6709;&#x4E2A;&#x4E24;&#x4E2A;actor&#xFF0C;&#x6BCF;&#x4E2A;actor&#x7684;method&#x8C03;&#x7528;&#x4E4B;&#x95F4;&#x6709;stateful edge&#xFF0C;&#x4ECE;train_policy&#x5230;&#x5B83;&#x8C03;&#x7528;&#x7684;&#x4EFB;&#x52A1;&#x4E4B;&#x95F4;&#xFF0C;&#x6709;control edge&#x63A7;&#x5236;&#x8FB9;&#x3002;</p><p>&#x5982;&#x679C;&#x60F3;&#x5E76;&#x884C;&#x8BAD;&#x7EC3;&#x591A;&#x4E2A;policy&#xFF0C;&#x53EF;&#x4EE5;&#x591A;&#x6B21;&#x8C03;&#x7528;train_policy.remote()</p><h1 id="&#x7CFB;&#x7EDF;&#x67B6;&#x6784;">&#x7CFB;&#x7EDF;&#x67B6;&#x6784;</h1><p>Ray&#x8FD8;&#x662F;&#x7ECF;&#x5178;&#x7684;Master-Slave&#x67B6;&#x6784;</p><p>Ray&#x7684;&#x67B6;&#x6784;&#x5305;&#x62EC;&#x4E24;&#x65B9;&#x9762;&#xFF0C;&#x5E94;&#x7528;&#x5C42;&#xFF1A;&#x5B9E;&#x73B0;API&#xFF0C;&#x7CFB;&#x7EDF;&#x5C42;&#xFF1A;&#x63D0;&#x4F9B;&#x9AD8;&#x6269;&#x5C55;&#x6027;&#x53CA;&#x5BB9;&#x9519;&#x3002;</p><p><img src="/posts/f158070c/1595220103848.png"></p><h2 id="&#x5E94;&#x7528;&#x5C42;">&#x5E94;&#x7528;&#x5C42;</h2><p>&#x5E94;&#x7528;&#x5C42;&#x4E2D;&#x6709;&#x4E09;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;Driver&#xFF0C;Worker&#xFF0C;Actor&#x3002;</p><p>Driver&#xFF0C;&#x7528;&#x6765;&#x6267;&#x884C;&#x7528;&#x6237;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x5373;python XXX.py&#x4EA7;&#x751F;&#x7684;&#x8FDB;&#x7A0B;&#x3002;</p><p>Worker&#xFF0C;&#x7528;&#x6765;&#x6267;&#x884C;task&#xFF0C;&#x4E00;&#x822C;&#x800C;&#x8A00;&#xFF0C;&#x4E00;&#x4E2A;worker&#xFF0C;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;CPU&#x7684;&#x6838;&#x5FC3;&#x3002;Worker&#x662F;&#x65E0;&#x72B6;&#x6001;&#x7684;&#xFF0C;&#x7531;&#x7CFB;&#x7EDF;&#x5C42;&#x5206;&#x914D;&#x4EFB;&#x52A1;&#x3002;&#x5F53;&#x4E00;&#x4E2A;remote function&#x58F0;&#x660E;&#x540E;&#xFF0C;&#x4F1A;&#x53D1;&#x5E03;&#x7ED9;&#x6240;&#x6709;&#x7684;Worker&#x3002;</p><p>Actor&#xFF0C;Actor&#x662F;&#x4E00;&#x4E2A;&#x6709;&#x72B6;&#x6001;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x5728;&#x5176;method&#x88AB;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#x624D;&#x6267;&#x884C;&#xFF0C;Actor&#x662F;&#x7531;Worker/Driver&#x663E;&#x5F0F;&#x7684;&#x521D;&#x59CB;&#x5316;&#x6240;&#x5F97;&#x5230;&#x7684;&#xFF0C;&#x5373;&#x91C7;&#x7528;actor_name.remote()&#x7684;&#x65B9;&#x5F0F;&#x3002;Actor&#x4E00;&#x7ECF;&#x5728;&#x67D0;&#x4E2A;&#x8282;&#x70B9;&#xFF08;&#x6BD4;&#x5982;&#x96C6;&#x7FA4;&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x673A;&#x5668;&#xFF09;&#x4E0A;&#x542F;&#x52A8;&#xFF0C;&#x5219;&#x8D1F;&#x8D23;&#x6267;&#x884C;&#x6240;&#x6709;&#x8BE5;Actor&#x7684;method&#x8C03;&#x7528;&#x3002;&#x5728;&#x72B6;&#x6001;&#x4E0A;&#xFF0C;Worker&#x662F;&#x65E0;&#x72B6;&#x6001;&#x7684;&#xFF0C;&#x800C;Actor&#x662F;&#x987A;&#x5E8F;&#x6267;&#x884C;method&#xFF0C;Actor&#x6BCF;&#x4E2A;method&#x90FD;&#x53D6;&#x51B3;&#x4E8E;&#x5148;&#x524D;method&#x6240;&#x4EA7;&#x751F;&#x7684;&#x72B6;&#x6001;&#x3002;</p><h2 id="&#x7CFB;&#x7EDF;&#x5C42;">&#x7CFB;&#x7EDF;&#x5C42;</h2><p>&#x7CFB;&#x7EDF;&#x5C42;&#x4E3B;&#x8981;&#x6709;&#x4E09;&#x4E2A;&#x4E3B;&#x8981;&#x90E8;&#x4EF6;&#x7EC4;&#x6210;&#xFF0C;&#x5168;&#x5C40;&#x63A7;&#x5236;&#x5B58;&#x50A8;&#xFF08;Global Control Store&#xFF09;&#xFF0C;&#x5206;&#x5E03;&#x5F0F;&#x8C03;&#x5EA6;&#xFF08;distributed scheduler&#xFF09;&#xFF0C;&#x5206;&#x5E03;&#x5F0F;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#xFF08;distributed object store&#xFF09;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x7EC4;&#x4EF6;&#x90FD;&#x53EF;&#x4EE5;&#x6C34;&#x5E73;&#x6269;&#x5C55;&#x548C;&#x5BB9;&#x9519;&#x3002;</p><h3 id="global-control-store">Global Control Store</h3><p>&#x5168;&#x5C40;&#x63A7;&#x5236;&#x5B58;&#x50A8;&#x7EF4;&#x62A4;&#x7CFB;&#x7EDF;&#x7684;&#x6574;&#x4E2A;&#x63A7;&#x5236;&#x72B6;&#x6001;&#xFF0C;&#x662F;Ray&#x8BBE;&#x8BA1;&#x7684;&#x72EC;&#x7279;&#x4EAE;&#x70B9;&#x3002;GCS&#x662F;&#x4E00;&#x4E2A;&#x4E2D;&#x5FC3;&#x5316;&#x7684;&#x5B58;&#x50A8;&#xFF0C;&#x4F7F;&#x7528;redis&#x5B9E;&#x73B0;&#x3002;&#x8D1F;&#x8D23;&#x5B58;&#x50A8;task&#x63CF;&#x8FF0;&#xFF0C;remote&#x65B9;&#x6CD5;&#x4EE3;&#x7801;&#xFF0C;&#x8BA1;&#x7B97;&#x56FE;&#xFF0C;&#x5BF9;&#x8C61;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4EE5;&#x53CA;&#x6BCF;&#x4E2A;&#x8C03;&#x5EA6;&#x4E8B;&#x4EF6;&#x3002;</p><p>&#x5C06;&#x6240;&#x7528;&#x63A7;&#x5236;&#x72B6;&#x6001;&#x96C6;&#x4E2D;&#x5B58;&#x50A8;&#xFF0C;&#x6709;&#x8FD9;&#x4E48;&#x51E0;&#x4E2A;&#x597D;&#x5904;&#xFF1A;</p><ol type="1"><li>&#x4F7F;&#x5F97;&#x96C6;&#x7FA4;&#x4E2D;&#x5176;&#x4ED6;&#x7EC4;&#x4EF6;&#x3001;&#x8282;&#x70B9;&#x53EF;&#x4EE5;&#x65E0;&#x72B6;&#x6001;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x63D0;&#x5347;&#x6C34;&#x5E73;&#x6269;&#x5C55;&#x7684;&#x80FD;&#x529B;&#x3002;</li><li>&#x7B80;&#x5316;&#x4E86;&#x5BB9;&#x9519;&#x3002;</li><li>&#x65B9;&#x4FBF;&#x5BF9;&#x7A0B;&#x5E8F;debug&#xFF0C;profile&#x3002;</li></ol><p>&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x6027;&#x80FD;&#x74F6;&#x9888;&#xFF0C;&#x4F7F;&#x7528;&#x5206;&#x7247;&#xFF08;sharding&#xFF09;&#x6765;&#x7F13;&#x89E3;&#xFF0C;&#x5E76;&#x4E14;&#x4F7F;&#x7528;per-shard chain replication to provide fault tolerance.&#xFF08;&#x8FD9;&#x90E8;&#x5206;&#x6211;&#x8FD8;&#x4E0D;&#x61C2;&#xFF09;</p><p>Ray&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;task&#xFF0C;object&#xFF0C;method&#x90FD;&#x6709;&#x4E00;&#x4E2A;objectID&#x4E0E;&#x5176;&#x5BF9;&#x5E94;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4F7F;&#x5206;&#x7247;&#x95F4;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x5B9E;&#x73B0;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x3002;</p><h3 id="bottom-up-distributed-scheduler">Bottom-Up Distributed Scheduler</h3><p><img src="/posts/f158070c/1595220170983.png"></p><p>&#x81EA;&#x4E0B;&#x800C;&#x4E0A;&#x7684;&#x8C03;&#x5EA6;&#x793A;&#x4F8B;&#x56FE;&#xFF0C;Task&#x4ECE;Drivers&#x3001;Workers&#x5230;&#x672C;&#x5730;&#x8C03;&#x5EA6;local scheduler&#xFF0C;&#x8FDB;&#x800C;&#x63A8;&#x7ED9;global scheduler</p><p>&#x8FD9;&#x4E00;&#x5757;&#x662F;&#x81EA;&#x4E0B;&#x800C;&#x4E0A;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x8C03;&#x5EA6;&#x3002;</p><p>Ray&#x8BBE;&#x8BA1;&#x4E86;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x548C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x672C;&#x5730;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x5171;&#x540C;&#x8C03;&#x5EA6;&#x7684;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x4E8C;&#x7EA7;&#x5206;&#x5C42;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x3002;&#x5177;&#x4F53;&#x505A;&#x6CD5;&#x662F;&#xFF1A;</p><p>Ray&#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x4F1A;&#x542F;&#x52A8;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x7684;&#x8C03;&#x5EA6;&#x5668;global scheduler&#xFF0C;&#x5B9E;&#x73B0;&#x4E0A;&#x662F;&#x4E00;&#x4E2A;redis server&#xFF0C;&#x4F1A;&#x5728;&#x6BCF;&#x4E2A;&#x4ECE;&#x8282;&#x70B9;&#x4E0A;&#x542F;&#x52A8;&#x4E00;&#x4E2A;local scheduler&#xFF0C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x4E0A;&#x63D0;&#x4EA4;&#x7684;task&#x7387;&#x5148;&#x63D0;&#x4EA4;&#x7ED9;&#x5404;&#x81EA;&#x7684;local scheduler&#x8FDB;&#x884C;&#x8C03;&#x5EA6;&#xFF0C;&#x5982;&#x679C;local scheduler&#x8C03;&#x5EA6;&#x4E0D;&#x4E86;&#xFF08;&#x6BD4;&#x5982;&#x4EFB;&#x52A1;&#x961F;&#x5217;&#x91CC;&#x6709;&#x592A;&#x591A;&#x7684;task&#xFF0C;&#x6BD4;&#x5982;&#x65E0;&#x6CD5;&#x6EE1;&#x8DB3;&#x4EFB;&#x52A1;&#x9700;&#x6C42;&#xFF0C;eg&#xFF1A;&#x7F3A;GPU&#x7B49;&#xFF09;&#xFF0C;&#x5219;&#x4E0A;&#x63A8;&#x7ED9;global scheduler&#xFF0C;&#x8FDB;&#x884C;&#x96C6;&#x7FA4;&#x5168;&#x5C40;&#x8303;&#x56F4;&#x7684;&#x8C03;&#x5EA6;&#x3002;</p><p>&#x5728;&#x5224;&#x65AD;&#x4EFB;&#x52A1;&#x961F;&#x5217;&#x91CC;&#x662F;&#x5426;&#x6709;&#x592A;&#x591A;&#x7684;task&#xFF0C;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x9608;&#x503C;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x961F;&#x5217;&#x91CC;&#x7684;&#x4EFB;&#x52A1;&#x6570;&#x8D85;&#x8FC7;&#x9608;&#x503C;&#xFF0C;&#x5C31;&#x8BA4;&#x4E3A;&#x662F;&#x201C;&#x592A;&#x591A;&#x201D;&#xFF0C;&#x4EA4;&#x7531;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x5668;&#x6765;&#x8C03;&#x5EA6;&#x3002; &#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x9608;&#x503C;&#x6570;=0&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x662F;&#x6240;&#x6709;&#x7684;&#x7A0B;&#x5E8F;&#x90FD;&#x6709;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x5668;&#x6765;&#x8C03;&#x5EA6;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x9608;&#x503C;&#x6570;=&#x65E0;&#x7A77;&#x5927;&#xFF0C;&#x5219;&#x6240;&#x6709;&#x7684;&#x7A0B;&#x5E8F;&#x90FD;&#x5C3D;&#x53EF;&#x80FD;&#x7531;&#x672C;&#x5730;&#x8C03;&#x5EA6;&#x5668;&#x6765;&#x8C03;&#x5EA6;&#x3002;</p><p>Ray&#x8FD9;&#x6837;&#x8BBE;&#x8BA1;&#x7684;&#x76EE;&#x6807;&#x662F;&#x8C03;&#x5EA6;&#x53EF;&#x6269;&#x5C55;&#x6027;&#x4EE5;&#x53CA;&#x5FEB;&#x901F;&#xFF0C;&#x4F4E;&#x5EF6;&#x8FDF;&#x7684;&#x8C03;&#x5EA6;&#x3002;&#x8FD9;&#x6837;&#x8BBE;&#x8BA1;&#x5E26;&#x6765;&#x7684;&#x597D;&#x5904;&#x5C31;&#x662F;Ray&#x8C03;&#x5EA6;&#x4EFB;&#x52A1;&#x975E;&#x5E38;&#x4E4B;&#x5FEB;&#x3002;</p><p>&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x4F1A;&#x8003;&#x8651;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x8D1F;&#x8F7D;&#x548C;&#x4EFB;&#x52A1;&#x7EA6;&#x675F;&#xFF0C;&#x9996;&#x5148;&#x627E;&#x51FA;&#x6240;&#x6709;&#x80FD;&#x6EE1;&#x8DB3;task&#x6240;&#x9700;&#x8D44;&#x6E90;&#x7684;&#x8282;&#x70B9;&#x3002;&#x7136;&#x540E;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x9884;&#x8BA1;&#x7B49;&#x5F85;&#x65F6;&#xFF0C;estimated waiting time&#x3002;&#x7136;&#x540E;&#x9009;&#x62E9;&#x6709;&#x6700;&#x5C0F;&#x7684;&#x9884;&#x8BA1;&#x7B49;&#x5F85;&#x65F6;&#x7684;&#x8282;&#x70B9;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9884;&#x8BA1;&#x7B49;&#x5F85;&#x65F6;&#x7531;&#x4E24;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#xFF1A;</p><ol type="1"><li>&#x8BE5;&#x4EFB;&#x52A1;&#x5728;&#x8BE5;&#x8282;&#x70B9;&#x4E0A;&#x7684;&#x9884;&#x8BA1;&#x6392;&#x961F;&#x65F6;&#x95F4;&#xFF08;=&#x4EFB;&#x52A1;&#x961F;&#x5217;&#x7684;&#x957F;&#x5EA6;*&#x5E73;&#x5747;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x65F6;&#x95F4;&#xFF09;&#x3002;</li><li>&#x4EFB;&#x52A1;&#x7684;&#x8FDC;&#x7A0B;&#x8F93;&#x5165;&#x9884;&#x8BA1;&#x7528;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x7B49;&#x4E8E;&#x8FDC;&#x7A0B;&#x8F93;&#x5165;&#x7684;&#x603B;&#x5927;&#x5C0F;/&#x5E73;&#x5747;&#x5E26;&#x5BBD;&#x3002;</li></ol><p>&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x901A;&#x8FC7;&#x5FC3;&#x8DF3;&#x5305;&#xFF0C;&#x83B7;&#x53D6;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x4E0A;&#x7684;&#x4EFB;&#x52A1;&#x961F;&#x5217;&#x7684;&#x5927;&#x5C0F;&#x53CA;&#x53EF;&#x7528;&#x8D44;&#x6E90;&#x60C5;&#x51B5;&#x3002;&#x4ECE;GCS&#x4E2D;&#x83B7;&#x53D6;task&#x7684;&#x8F93;&#x5165;&#x7684;&#x5730;&#x5740;&#xFF0C;task&#x8F93;&#x5165;&#x7684;&#x5927;&#x5C0F;&#x3002;</p><p>&#x5728;&#x8BA1;&#x7B97;&#x5E73;&#x5747;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x7528;&#x65F6;&#x548C;&#x5E73;&#x5747;&#x5E26;&#x5BBD;&#x65F6;&#xFF0C;&#x91C7;&#x7528;&#x7B80;&#x5355;&#x7B97;&#x672F;&#x5E73;&#x5747;&#x3002;</p><p>&#x5728;&#x6027;&#x80FD;&#x65B9;&#x9762;&#xFF0C;&#x5982;&#x679C;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x6027;&#x80FD;&#x6210;&#x4E3A;&#x74F6;&#x9888;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x4F8B;&#x5316;&#x66F4;&#x591A;&#x7684;&#xFF0C;&#x5177;&#x6709;&#x76F8;&#x540C;&#x4FE1;&#x606F;&#x7684;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x7684;&#x526F;&#x672C;&#xFF0C;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x4ECE;GCS&#x4E2D;&#x83B7;&#x53D6;&#x3002;&#x5728;&#xFF08;&#x9700;&#x8981;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x5668;&#xFF09;&#x8C03;&#x5EA6;&#x65F6;&#xFF0C;&#x672C;&#x5730;&#x8C03;&#x5EA6;&#x5668;&#x968F;&#x673A;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x5668;&#xFF0C;&#x8F6C;&#x53D1;&#x4EFB;&#x52A1;&#xFF0C;&#x7533;&#x8BF7;&#x8C03;&#x5EA6;&#x3002;</p><p>&#x90A3;&#x4E48;Ray&#x8FD9;&#x6837;&#x8BBE;&#x8BA1;&#x7684;&#x7075;&#x611F;&#x6765;&#x81EA;&#x4E8E;&#x54EA;&#x91CC;&#x5462;&#xFF1F;</p><p>&#x901A;&#x5E38;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x96C6;&#x7FA4;&#x8BA1;&#x7B97;&#x6846;&#x67B6;&#x5B9E;&#x73B0;&#x7684;&#x90FD;&#x662F;&#x4E2D;&#x5FC3;&#x5316;&#xFF0C;&#x96C6;&#x4E2D;&#x5F0F;&#x7684;&#x8C03;&#x5EA6;&#xFF0C;&#x5982;Hadoop, Spark, CIEL, Dryad&#x7B49;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x867D;&#x7136;&#x7B80;&#x5316;&#x4E86;&#x8BBE;&#x8BA1;&#xFF0C;&#x4F46;&#x662F;&#x6269;&#x5C55;&#x6027;&#x4E0D;&#x597D;&#x3002;</p><p>&#x63D0;&#x5347;&#x8C03;&#x5EA6;&#x6269;&#x5C55;&#x6027;&#x6709;&#x51E0;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;</p><ol type="1"><li>&#x6279;&#x91CF;&#x8C03;&#x5EA6;&#x3002;&#x8C03;&#x5EA6;&#x5668;&#x6279;&#x91CF;&#x63D0;&#x4EA4;&#x4EFB;&#x52A1;&#x7ED9;worker&#x8282;&#x70B9;&#xFF0C;&#x4EE5;&#x644A;&#x9500;&#x63D0;&#x4EA4;&#x4EFB;&#x52A1;&#x5E26;&#x6765;&#x7684;&#x56FA;&#x5B9A;&#x5F00;&#x9500;&#x3002;Drizzle&#x6846;&#x67B6;&#x5B9E;&#x73B0;&#x7684;&#x5C31;&#x662F;&#x8FD9;&#x79CD;&#x3002;</li><li>&#x5C42;&#x6B21;&#x8C03;&#x5EA6;&#x3002;&#x5373;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x5668;(global scheduler)&#x5C06;&#x4EFB;&#x52A1;&#x56FE;&#x5212;&#x5206;&#x5230;&#x5404;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x672C;&#x5730;&#x8C03;&#x5EA6;&#x5668;(local scheduler)&#x3002;Canary&#x6846;&#x67B6;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x79CD;&#x8C03;&#x5EA6;&#x3002;</li><li>&#x5E76;&#x884C;&#x8C03;&#x5EA6;&#x3002;&#x591A;&#x4E2A;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x5668;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#x4EFB;&#x52A1;&#x8C03;&#x5EA6;&#x3002;&#x8FD9;&#x662F;Sparrow&#x6846;&#x67B6;&#x6240;&#x505A;&#x7684;&#x3002;</li></ol><p>&#x4F46;&#x662F;&#x4ED6;&#x4EEC;&#x90FD;&#x6709;&#x5404;&#x81EA;&#x7684;&#x7F3A;&#x9677;&#xFF1A;</p><ul><li>&#x6279;&#x91CF;&#x8C03;&#x5EA6;&#x4ECD;&#x7136;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x5668;&#x6765;&#x5904;&#x7406;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x3002;</li><li>&#x5C42;&#x6B21;&#x8C03;&#x5EA6;&#x5047;&#x8BBE;&#x4EFB;&#x52A1;&#x56FE;&#x662F;&#x5DF2;&#x77E5;&#x7684;&#xFF0C;&#x5373;&#x5047;&#x8BBE;&#x4EFB;&#x52A1;&#x56FE;&#x662F;&#x9759;&#x6001;&#x7684;&#x3002;</li><li>&#x5E76;&#x884C;&#x8C03;&#x5EA6;&#x5047;&#x8BBE;&#x6BCF;&#x4E2A;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x5668;&#x8C03;&#x5EA6;&#x72EC;&#x7ACB;&#x7684;&#x4F5C;&#x4E1A;&#x3002;</li></ul><p>Ray&#x5E0C;&#x671B;&#x505A;&#x5230;&#x7684;&#x662F;&#x9AD8;&#x53EF;&#x6269;&#x5C55;&#x6027;&#xFF0C;&#x5904;&#x7406;&#x52A8;&#x6001;&#x4EFB;&#x52A1;&#x56FE;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x80FD;&#x5904;&#x7406;&#x6765;&#x81EA;&#x540C;&#x4E00;&#x4E2A;&#x4F5C;&#x4E1A;&#x7684;&#x4EFB;&#x52A1;&#x3002;</p><p>&#x591A;&#x8BF4;&#x4E00;&#x53E5;&#xFF1A;&#x5728;&#x6211;&#x5199;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x65F6;&#xFF0C;&#x8DDD;&#x79BB;&#x8FD9;&#x7BC7;&#x6587;&#x8BBA;&#x53D1;&#x5E03;&#x5DF2;&#x7ECF;&#x5F88;&#x4E45;&#x4E86;&#xFF0C;&#x81EA;&#x4ECE;Ray0.5&#x7248;&#x672C;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x6CA1;&#x6709;Global Scheduler&#x4E86;</p><h3 id="in-memory-distributed-object-store">In-memory distributed Object Store</h3><p>Ray&#x8BBE;&#x8BA1;&#x4E86;&#x4E00;&#x4E2A;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x5B58;&#x50A8;&#x7CFB;&#x7EDF;&#xFF0C;&#x5B58;&#x50A8;&#x6240;&#x6709;task&#x7684;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x3002;&#x5728;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x4E0A;&#xFF0C;&#x901A;&#x8FC7;shared memory&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x5B9E;&#x73B0;&#x6570;&#x636E;&#x901A;&#x4FE1;&#xFF0C;&#x8FD9;&#x6837;&#x5728;&#x540C;&#x4E00;&#x8282;&#x70B9;&#x4E0A;&#x8FD0;&#x884C;&#x7684;task&#x5C31;&#x5B8C;&#x5168;&#x4E0D;&#x7528;&#x590D;&#x5236;&#x6570;&#x636E;&#x3002;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x91C7;&#x7528;&#x4E86;Apache Arrow&#x4E2D;&#x7684;plasma store&#x3002;</p><p>&#x5982;&#x679C;task&#x7684;&#x8F93;&#x5165;&#x4E0D;&#x5728;&#x672C;&#x5730;&#xFF0C;&#x90A3;&#x8F93;&#x5165;&#x7684;&#x6570;&#x636E;&#x4F1A;&#x5728;&#x6267;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x5B58;&#x5165;&#x5230;&#x5230;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x4E2D;&#x3002;&#x5728;&#x5BFB;&#x627E;&#x8F93;&#x5165;&#x7684;&#x5177;&#x4F53;&#x5730;&#x5740;&#x65F6;&#xFF0C;&#x662F;&#x901A;&#x8FC7;GCS&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x5728;&#x4E3B;&#x8282;&#x70B9;&#x4E2D;&#x7684;object Table&#x4E2D;&#x627E;&#x3002;</p><p>&#x540C;&#x6837;&#x7684;&#xFF0C;task&#x7684;&#x8F93;&#x51FA;&#x4E5F;&#x4F1A;&#x5B58;&#x50A8;&#x5728;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x4E2D;&#x3002;</p><p>Ray&#x7684;&#x8BBA;&#x6587;&#x4E2D;&#x8BF4;&#xFF0C;&#x8FD9;&#x79CD;&#x628A;&#x6570;&#x636E;&#x590D;&#x5236;&#x5230;&#x672C;&#x5730;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x7F13;&#x89E3;&#x70ED;&#x6570;&#x636E;&#xFF08;hot data&#xFF09;&#x5E26;&#x6765;&#x7684;&#x6027;&#x80FD;&#x74F6;&#x9888;&#x3002;&#x56E0;&#x4E3A;task&#x4EC5;&#x4EC5;&#x4ECE;&#x672C;&#x5730;&#x7684;&#x5185;&#x5B58;&#x4E2D;&#x8BFB;&#x5199;&#x6570;&#x636E;&#x3002;</p><p>&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x505A;&#x6CD5;&#x589E;&#x52A0;&#x4E86;&#x8BA1;&#x7B97;&#x5BC6;&#x96C6;&#x578B;&#x5DE5;&#x4F5C;&#x7684;&#x541E;&#x5410;&#x91CF;&#xFF0C;&#x4F46;&#x6CA1;&#x8F99;&#xFF0C;&#x8FD9;&#x662F;&#x8BB8;&#x591A;AI&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5171;&#x6709;&#x7684;&#x75DB;&#x70B9;&#x3002;</p><p>Ray&#x4E0D;&#x652F;&#x6301;&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#xFF0C;&#x6BD4;&#x5982;&#x4E00;&#x4E2A;&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x8D85;&#x5927;&#x77E9;&#x9635;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x81EA;&#x884C;&#x5B9E;&#x73B0;&#xFF0C;&#x6BD4;&#x5982;&#x901A;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x7684;future&#x3002;</p><p>&#x5728;plasma store&#x6EE1;&#x4E86;&#x4E4B;&#x540E;&#xFF0C;Ray&#x4F1A;&#x901A;&#x8FC7;LRU&#x673A;&#x5236;&#xFF0C;&#x5254;&#x9664;&#x9648;&#x65E7;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x653E;&#x5230;&#x786C;&#x76D8;&#x91CC;&#xFF0C;&#x4F46;&#x662F;&#x5177;&#x4F53;&#x6CA1;&#x8BF4;&#x653E;&#x5230;&#x786C;&#x76D8;&#x7684;&#x54EA;&#x4E2A;&#x4F4D;&#x7F6E;&#x3002;</p><p>&#x4E3A;&#x4E86;&#x7B80;&#x5316;&#x8BBE;&#x8BA1;&#xFF0C;&#x7B80;&#x5316;&#x5BB9;&#x9519;&#xFF0C;&#x6240;&#x6709;&#x5B58;&#x5230;object store&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x662F;&#x4E0D;&#x53EF;&#x4FEE;&#x6539;&#x7684;&#x3002;</p><p>&#x5728;Ray&#x4E2D;&#xFF0C;plasma store&#x5373;object store&#x6302;&#x8F7D;&#x5728;Linux&#x5C5E;&#x4E8E;tmpfs&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;/dev/shm&#x76EE;&#x5F55;&#x4E0A;&#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x4E0D;&#x5728;&#x78C1;&#x76D8;&#x4E0A;&#xFF0C;&#x800C;&#x5728;&#x5185;&#x5B58;&#x91CC;&#x3002;&#x5DF2;&#x7ECF;&#x5B58;&#x5165;/dev/shm&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x4E0D;&#x80FD;&#x88AB;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#xFF0C;&#x4F46;&#x662F;/dev/shm&#x6CA1;&#x88AB;&#x4F7F;&#x7528;&#x7684;&#x90E8;&#x5206;&#x53EF;&#x88AB;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x3002;</p><p>/dev/shm&#x533A;&#x57DF;&#x7684;&#x5927;&#x5C0F;&#x4E00;&#x822C;&#x662F;&#x603B;&#x5185;&#x5B58;&#x7684;1/2&#x3002;&#x5373;&#x5982;&#x679C;&#x4F60;&#x7684;&#x673A;&#x5668;&#x662F;64G&#x5185;&#x5B58;&#xFF0C;&#x90A3;&#x4E48;&#x6B64;&#x533A;&#x57DF;&#x53EA;&#x6709;32G&#x53EF;&#x7528;&#xFF0C;Ray&#x4F1A;&#x518D;&#x4FDD;&#x7559;&#x4E00;&#x70B9;&#x4F59;&#x91CF;&#xFF0C;&#x5927;&#x6982;&#x7528;&#x4E8E;object store&#x7684;&#x7A7A;&#x95F4;&#x53EA;&#x6709;26-27GB&#x5DE6;&#x53F3;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5982;&#x679C;Ray&#x5904;&#x7406;&#x7684;&#x6570;&#x636E;&#x8FC7;&#x5927;&#xFF0C;&#x5927;&#x5230;object store&#x90FD;&#x88C5;&#x4E0D;&#x4E0B;&#x6216;&#x8005;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x9700;&#x8981;&#x9891;&#x7E41;evict&#x751A;&#x81F3;evict&#x6389;&#x5176;&#x4ED6;&#x5FC5;&#x8981;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F80;&#x5F80;&#x7A0B;&#x5E8F;&#x5C31;&#x4F1A;&#x5D29;&#x6E83;&#x3002;</p><p>&#x5728;&#x8282;&#x70B9;&#x53D1;&#x751F;&#x6545;&#x969C;&#x7684;&#x65F6;&#x5019;&#xFF0C;Ray&#x901A;&#x8FC7;&#x4E16;&#x7CFB;&#x6765;&#x91CD;&#x65B0;&#x6267;&#x884C;&#xFF0C;&#x6062;&#x590D;&#x6240;&#x9700;&#x8981;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;Ray&#x8FD8;&#x652F;&#x6301;&#x6709;&#x72B6;&#x6001;&#x64CD;&#x4F5C;&#x7B97;&#x5B50;(Actor)&#x7684;&#x91CD;&#x5EFA;&#x3002;</p><p>&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x4E16;&#x7CFB;&#x4E2D;&#x5305;&#x542B;&#x6709;&#x72B6;&#x6001;&#x8FB9;&#xFF0C;&#x5219;&#x53EF;&#x80FD;&#x6D89;&#x53CA;&#x5230;Actor&#x7684;&#x91CD;&#x65B0;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x80FD;&#x6D89;&#x53CA;&#x5230;&#x5F88;&#x957F;&#x4E00;&#x6761;&#x4E16;&#x7CFB;&#x94FE;&#x7684;&#x91CD;&#x653E;&#x3002;&#x5BF9;&#x4E8E;&#x67D0;&#x4E9B;&#x5E94;&#x7528;&#xFF0C;Ray&#x4E3A;&#x4E86;&#x51CF;&#x5C11;Actor&#x7684;&#x91CD;&#x5EFA;&#x65F6;&#x95F4;&#xFF0C;&#x52A0;&#x5165;&#x4E86;checkpoint&#x673A;&#x5236;&#xFF0C;&#x4ECE;checkpoint&#x8FDB;&#x884C;&#x6062;&#x590D;&#x3002;</p><h1 id="&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;&#x793A;&#x4F8B;">&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;&#x793A;&#x4F8B;</h1><p><img src="/posts/f158070c/1595220342502.png"></p><p>a&#x56FE;&#x4EE5;a+b&#x4E3A;&#x4F8B;&#xFF0C;&#x8BF4;&#x660E;&#x4E86;Ray&#x7684;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#x3002;</p><ol type="1"><li>&#x4E00;&#x4E2A;remote function&#x8981;&#x5B58;&#x50A8;&#x5728;GCS&#x7684;Function Table&#x4E2D;&#xFF0C;&#x5728;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5206;&#x53D1;&#x7ED9;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;Worker&#x3002;</li><li>&#x7528;&#x4E8E;&#x6267;&#x884C;a+b&#x7684;&#x8F93;&#x5165;&#x6570;&#x636E;&#xFF0C;a&#x548C;b&#xFF0C;&#x5206;&#x522B;&#x5B58;&#x50A8;&#x5728;&#x4E2A;&#x8282;&#x70B9;N1&#x548C;N2&#x4E0A;&#xFF0C;&#x4F46;&#x662F;GCS&#x4E2D;&#x7684;Object Table&#x662F;&#x77E5;&#x9053;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x90FD;&#x5B58;&#x5728;&#x54EA;&#x91CC;&#x7684;&#x3002;Driver&#x5C06;&#x7A0B;&#x5E8F;&#x63D0;&#x4EA4;&#x7ED9;&#x672C;&#x5730;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#xFF0C;&#x53D1;&#x73B0;&#x7F3A;&#x5C11;&#x6570;&#x636E;&#xFF0C;&#x5E72;&#x4E0D;&#x4E86;&#x3002;</li><li>local scheduler&#x53D1;&#x73B0;&#x5E72;&#x4E0D;&#x4E86;&#x4E4B;&#x540E;&#xFF0C;&#x628A;&#x7A0B;&#x5E8F;&#x8F6C;&#x53D1;&#x7ED9;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#xFF0C;global scheduler</li><li>&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x5411;&#x67E5;&#x627E;add(a, b)&#x4E2D;&#x6240;&#x9700;&#x8981;&#x7684;&#x53C2;&#x6570;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;GCS&#x4E2D;&#x7684;Object Table&#x8FD4;&#x56DE;&#x53C2;&#x6570;&#x7684;&#x5177;&#x4F53;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</li><li>&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x51B3;&#x5B9A;&#x7531;N2&#x8282;&#x70B9;&#x6267;&#x884C;&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#x3002;</li><li>N2&#x8282;&#x70B9;&#x7684;&#x672C;&#x5730;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x68C0;&#x67E5;&#x672C;&#x5730;&#x7684;object store&#x662F;&#x5426;&#x6709;add(a, b)&#x7684;&#x6240;&#x9700;&#x7684;&#x6240;&#x6709;&#x53C2;&#x6570;&#x3002;</li><li>N2&#x53D1;&#x73B0;&#x7F3A;&#x5C11;&#x53C2;&#x6570;a&#xFF0C;&#x4E8E;&#x662F;&#x5411;GCS&#x8BE2;&#x95EE;&#x53C2;&#x6570;a&#x7684;&#x4F4D;&#x7F6E;&#x3002;GCS&#x8FD4;&#x56DE;a&#x7684;&#x4F4D;&#x7F6E;</li><li>N2&#x77E5;&#x9053;&#x53C2;&#x6570;a&#x5B58;&#x5728;&#x8282;&#x70B9;N1&#x4E0A;&#xFF0C;&#x5411;N1&#x7D22;&#x8981;&#x53C2;&#x6570;a&#xFF0C;&#x5E76;&#x8D4B;&#x503C;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x672C;&#x5730;&#x5B58;&#x50A8;&#x91CC;&#x3002;</li><li>&#x6240;&#x6709;&#x7684;&#x53C2;&#x6570;&#x90FD;&#x9F50;&#x6D3B;&#x4E86;&#xFF0C;&#x672C;&#x5730;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x8C03;&#x7528;add()&#x51FD;&#x6570;&#xFF0C;&#x8BA9;&#x672C;&#x5730;&#x7684;&#x4E00;&#x4E2A;worker&#x6267;&#x884C;</li><li>&#x672C;&#x5730;&#x7684;Worker&#x901A;&#x8FC7;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#xFF0C;&#x8BBF;&#x95EE;&#x53C2;&#x6570;&#x3002;</li></ol><p>&#x81F3;&#x6B64;&#xFF0C;add(a, b)&#x88AB;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x3002;&#x4E0B;&#x9762;&#x5206;&#x6790;&#x5982;&#x4F55;&#x83B7;&#x53D6;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x3002;</p><p>b&#x56FE;&#x8BF4;&#x660E;&#x4E86;&#x5728;N1&#x8282;&#x70B9;&#x4E0A;&#xFF0C;&#x901A;&#x8FC7;&#x8FD0;&#x884C;ray.get()&#x83B7;&#x53D6;&#x5728;N2&#x8282;&#x70B9;&#x4E0A;&#x8FD0;&#x884C;&#x7684;add(a, b)&#x7684;&#x7ED3;&#x679C;&#x3002;</p><ol type="1"><li>add(a, b)&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x7684;objectID&#x2014;&#x2014;idc&#xFF0C;&#x5728;&#x6267;&#x884C;ray.get(idc)&#x65F6;&#xFF0C;Driver&#x9996;&#x5148;&#x6839;&#x636E;ray.get(idc)&#x7684;&#x53C2;&#x6570;idc&#xFF0C;&#x68C0;&#x67E5;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x91CC;&#x6709;&#x6CA1;&#x6709;&#x6570;&#x636E;c&#x3002;</li><li>N1&#x7684;Driver&#x53D1;&#x73B0;&#x672C;&#x5730;&#x5B58;&#x50A8;&#x4E2D;&#x6CA1;&#x6709;c&#xFF0C;&#x4E8E;&#x662F;&#x5411;GCS&#x4E2D;&#x67E5;&#x627E;c&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x5047;&#x5B9A;add(a, b)&#x8FD8;&#x6CA1;&#x6709;&#x5728;N2&#x6267;&#x884C;&#x5B8C;&#xFF0C;&#x56E0;&#x6B64;GCS&#x4E2D;&#x4E5F;&#x6CA1;&#x6709;c&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x56E0;&#x4E3A;c&#x8FD8;&#x6CA1;&#x6709;&#x88AB;&#x521B;&#x5EFA;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;N1&#x7684;&#x672C;&#x5730;&#x5B58;&#x50A8;&#x5411;GCS&#x7684;Object Table&#x4E2D;&#x6CE8;&#x518C;&#x4E86;&#x4E00;&#x4E2A;&#x56DE;&#x8C03;&#xFF08;callback&#xFF09;&#xFF0C;&#x8BF4;&#xFF0C;&#x5F53;c&#x88AB;&#x521B;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x89E6;&#x53D1;&#x8FD9;&#x4E2A;callback&#xFF0C;&#x8FD4;&#x56DE;c&#x7684;&#x4FE1;&#x606F;&#x3002;</li><li>N2&#x6267;&#x884C;&#x5B8C;&#x4E86;add(a, b)&#xFF0C;&#x628A;&#x7ED3;&#x679C;c&#x5B58;&#x5728;N2&#x7684;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x4E2D;&#x3002;</li><li>&#x628A;c&#x7684;&#x5730;&#x5740;&#x5B58;&#x5230;GCS&#x4E2D;&#x3002;</li><li>GCS&#x89E6;&#x53D1;callback&#xFF0C;&#x628A;c&#x7684;&#x5730;&#x5740;&#x4FE1;&#x606F;&#x4F20;&#x9012;&#x7ED9;N1&#x7684;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x4E2D;&#x3002;</li><li>N1&#x4ECE;N2&#x4E2D;&#x590D;&#x5236;c&#x3002;</li><li>&#x8FD4;&#x56DE;c&#x7ED9;ray.get()&#x51FD;&#x6570;&#x3002;</li></ol><p>&#x81F3;&#x6B64;&#xFF0C;ray.get()&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x3002;</p><p>&#x5C3D;&#x7BA1;&#x4E0A;&#x8FF0;&#x8FC7;&#x7A0B;&#x6D89;&#x53CA;&#x4E86;&#x5927;&#x91CF;&#x7684;RPC&#xFF08;Remote Process Call&#xFF09;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5927;&#x591A;&#x6570;task&#x8FD8;&#x662F;&#x90FD;&#x5728;&#x672C;&#x5730;&#x5C31;&#x8C03;&#x5EA6;&#x5B8C;&#x4E86;&#xFF0C;&#x4E0D;&#x4F1A;&#x6709;&#x90A3;&#x4E48;&#x591A;&#x7684;RPC&#xFF0C;GCS&#x7684;&#x5E94;&#x7B54;&#x4E5F;&#x4F1A;&#x88AB;&#x5168;&#x5C40;&#x8C03;&#x5EA6;&#x548C;&#x672C;&#x5730;&#x8C03;&#x5EA6;&#x7F13;&#x5B58;&#x3002;</p><p>&#x540E;&#x9762;&#x7684;&#x8BD5;&#x9A8C;&#x8BC4;&#x4F30;&#x5C31;&#x7565;&#x3002;</p><h1 id="&#x5F15;&#x7528;">&#x5F15;&#x7528;</h1><p><a href="http://whatbeg.com/2018/03/15/ray-paper.html" class="uri" target="_blank" rel="noopener">http://whatbeg.com/2018/03/15/ray-paper.html</a></p>]]></content>
      
      <categories>
          
          <category> Ray </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ray </tag>
            
            <tag> python </tag>
            
            <tag> 分布式 </tag>
            
            <tag> 并行计算 </tag>
            
            <tag> 多进程 </tag>
            
            <tag> 论文笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++开发岗位面试笔记</title>
      <link href="//posts/93f579e6/"/>
      <url>//posts/93f579e6/</url>
      <content type="html"><![CDATA[<p>&#x77E5;&#x5176;&#x7136;&#x4E5F;&#x8981;&#x77E5;&#x5176;&#x6240;&#x4EE5;&#x7136;&#xFF0C;&#x4E0D;&#x8981;&#x53EA;&#x505A;&#x5C0F;&#x9547;&#x505A;&#x9898;&#x5BB6;&#x3002;</p><a id="more"></a><p><strong>C++&#x8BED;&#x8A00;&#x57FA;&#x7840;&#x77E5;&#x8BC6;</strong></p><h1 id="static&#x5173;&#x952E;&#x5B57;&#x7684;&#x4F5C;&#x7528;">static&#x5173;&#x952E;&#x5B57;&#x7684;&#x4F5C;&#x7528;</h1><ol type="1"><li><p>&#x5BF9;&#x4E8E;&#x53D8;&#x91CF;</p><p>&#x5728;&#x53D8;&#x91CF;&#x524D;&#x52A0;&#x4E0A;&#x5173;&#x952E;&#x5B57; static&#xFF0C;&#x53D8;&#x91CF;&#x5C31;&#x5B9A;&#x4E49;&#x6210;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x3002;&#x539F;&#x6765;&#x662F;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x7684;&#x53D8;&#x6210;&#x5168;&#x5C40;&#x9759;&#x6001;&#x53D8;&#x91CF;&#xFF0C;&#x539F;&#x6765;&#x662F;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x7684;&#x53D8;&#x6210;&#x5C40;&#x90E8;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x3002;&#x751F;&#x547D;&#x5468;&#x671F;&#x4E0D;&#x53D8;&#x3002;&#x53D8;&#x91CF;&#x4F1A;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E3A;0&#x3002;</p><p>&#x5168;&#x5C40;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x5728;&#x6587;&#x4EF6;&#x7684;&#x5B9A;&#x4E49;&#x5904;&#x5F00;&#x59CB;&#xFF0C;&#x5230;&#x6587;&#x4EF6;&#x7684;&#x7ED3;&#x5C3E;&#x3002;&#x5373;&#x4F7F;&#x5728;&#x522B;&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;<code>extern</code>&#xFF0C;&#x4E5F;&#x62FF;&#x4E0D;&#x5230;&#x8FD9;&#x4E2A;&#x5168;&#x5C40;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x3002;&#x5C40;&#x90E8;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x5C31;&#x5728;&#x5B9A;&#x4E49;&#x5B83;&#x7684;&#x51FD;&#x6570;&#x6216;&#x8005;&#x8BED;&#x5757;&#x91CC;&#x3002;</p><p>&#x53D8;&#x91CF;&#x5B58;&#x653E;&#x5728;&#x5728;&#x9759;&#x6001;&#x5B58;&#x50A8;&#x533A;&#xFF0C;&#x6574;&#x4E2A;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#xFF0C;&#x4E00;&#x76F4;&#x5B58;&#x5728;&#x3002;&#x5C40;&#x90E8;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x79BB;&#x5F00;&#x4F5C;&#x7528;&#x57DF;&#x4E4B;&#x540E;&#xFF0C;&#x5E76;&#x4E0D;&#x4F1A;&#x88AB;&#x9500;&#x6BC1;&#xFF0C;&#x800C;&#x662F;&#x4ECD;&#x7136;&#x9A7B;&#x7559;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x53EA;&#x662F;&#x4E0D;&#x80FD;&#x518D;&#x5BF9;&#x4ED6;&#x8FDB;&#x884C;&#x8BBF;&#x95EE;&#xFF0C;&#x76F4;&#x5230;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x518D;&#x6B21;&#x88AB;&#x8C03;&#x7528;&#x624D;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#xFF0C;&#x800C;&#x4E14;&#x503C;&#x4E0D;&#x53D8;&#x3002;</p><p>&#x666E;&#x901A;&#x7684;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x662F;&#x5206;&#x914D;&#x5728;&#x6808;&#x4E0A;&#xFF0C;&#x4F1A;&#x56E0;&#x4E3A;&#x51FD;&#x6570;&#x6808;&#x7684;&#x91CA;&#x653E;&#x800C;&#x88AB;&#x91CA;&#x653E;&#x3002;</p></li><li><p>&#x5BF9;&#x4E8E;&#x51FD;&#x6570;</p><p>&#x51FD;&#x6570;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x9759;&#x6001;&#x51FD;&#x6570;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x58F0;&#x660E;&#x548C;&#x5B9A;&#x4E49;&#x90FD;&#x662F;extern&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x9759;&#x6001;&#x51FD;&#x6570;&#x53EA;&#x662F;&#x5728;&#x58F0;&#x660E;&#x5B83;&#x7684;&#x6587;&#x4EF6;&#x5185;&#x53EF;&#x89C1;&#xFF0C;&#x4E0D;&#x80FD;&#x88AB;&#x5176;&#x4ED6;&#x6587;&#x4EF6;&#x4F7F;&#x7528;&#x3002;</p><p>&#x7F16;&#x7801;&#x4E60;&#x60EF;&#xFF1A;&#x4E0D;&#x80FD;&#x5728;cpp&#x5185;&#x58F0;&#x660E;&#x975E;static&#x7684;&#x5168;&#x5C40;&#x51FD;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x5728;&#x591A;&#x4E2A;cpp&#x6587;&#x4EF6;&#x91CC;&#x4F7F;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x5C31;&#x628A;&#x5B83;&#x7684;&#x751F;&#x547D;&#x63D0;&#x5230;&#x5934;&#x6587;&#x4EF6;&#x4E2D;&#x3002;</p></li><li><p>&#x5BF9;&#x4E8E;&#x7C7B;</p><ol type="1"><li><p>&#x7C7B;&#x7684;&#x9759;&#x6001;&#x6570;&#x636E;</p><p>&#x5728;&#x7C7B;&#x4E2D;&#xFF0C;&#x9759;&#x6001;&#x6210;&#x5458;&#x6570;&#x636E;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x591A;&#x4E2A;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x7684;&#x6570;&#x636E;&#x5171;&#x4EAB;&#xFF0C;&#x5E76;&#x4E14;&#x4F7F;&#x7528;&#x9759;&#x6001;&#x6570;&#x636E;&#x6210;&#x5458;&#x4E0D;&#x4F1A;&#x7834;&#x574F;&#x9690;&#x85CF;&#x7684;&#x539F;&#x5219;&#xFF0C;&#x4FDD;&#x8BC1;&#x4E86;&#x5B89;&#x5168;&#x6027;&#x3002;</p><p>&#x9759;&#x6001;&#x6210;&#x5458;&#x662F;&#x7C7B;&#x7684;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x4E2D;&#x5171;&#x4EAB;&#x7684;&#x6210;&#x5458;&#xFF0C;&#x800C;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x5458;&#x3002;&#x5728;&#x6709;&#x591A;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9759;&#x6001;&#x6570;&#x636E;&#x6210;&#x5458;&#x53EA;&#x5B58;&#x50A8;&#x5728;&#x4E00;&#x5904;&#xFF0C;&#x5E76;&#x4E14;&#x4F9B;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x5171;&#x7528;&#x3002;</p></li><li><p>&#x7C7B;&#x7684;&#x9759;&#x6001;&#x51FD;&#x6570;</p><p>&#x4E0E;&#x7C7B;&#x7684;&#x9759;&#x6001;&#x6570;&#x636E;&#x4E00;&#x6837;&#xFF0C;&#x90FD;&#x662F;&#x7C7B;&#x7684;&#x9759;&#x6001;&#x6210;&#x5458;&#xFF0C;&#x90FD;&#x4E0D;&#x662F;&#x5BF9;&#x8C61;&#x6210;&#x5458;&#x3002;</p><ol type="1"><li><p>&#x5F15;&#x7528;&#x65F6;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5BF9;&#x8C61;&#x540D;</p></li><li><p>&#x5B9E;&#x73B0;&#x4E2D;&#xFF0C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x996E;&#x7528;&#x7C7B;&#x4E2D;&#x58F0;&#x660E;&#x7684;&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x5F15;&#x7528;&#x7C7B;&#x4E2D;&#x58F0;&#x660E;&#x7684;&#x9759;&#x6001;&#x6210;&#x5458;&#x3002;&#x5728;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;&#x4E2D;&#x5F15;&#x7528;&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5BF9;&#x8C61;&#x6765;&#x5F15;&#x7528;&#x3002;</p></li><li><p>&#x8C03;&#x7528;&#x6210;&#x5458;&#x51FD;&#x6570;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x683C;&#x5F0F;</p><p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="class"><span class="keyword">class</span> <span class="title">name</span>&gt;:</span>:&lt;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;&#x540D;&gt;&#xFF08;&#x53C2;&#x6570;&#x8868;&#xFF09;</span><br></pre></td></tr></table></figure></p><p>&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x52A0;&#x4E86;static&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x6B64;&#x53D8;&#x91CF;/&#x51FD;&#x6570;&#x5C31;&#x6CA1;&#x6709;&#x4E86;<code>this</code>&#x6307;&#x9488;&#xFF0C;&#x5FC5;&#x987B;&#x901A;&#x8FC7;&#x7C7B;&#x540D;&#x624D;&#x80FD;&#x8BBF;&#x95EE;&#x3002;</p></li></ol></li></ol></li></ol><h1 id="&#x7C7B;&#x578B;&#x8F6C;&#x6362;">&#x7C7B;&#x578B;&#x8F6C;&#x6362;</h1><p>C++&#x4E2D;&#xFF0C;&#x56DB;&#x79CD;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x662F;static_cast, dynamic_cast, const_cast, reinterpret_cast</p><ol type="1"><li><p>const_cast</p><p>&#x7528;&#x4E8E;&#x5C06;const&#x53D8;&#x91CF;&#x8F6C;&#x4E3A;&#x975E;const</p></li><li><p>static_cast</p><p>&#x7528;&#x4E8E;&#x5404;&#x79CD;&#x9690;&#x5F0F;&#x8F6C;&#x6362;&#xFF0C;&#x6BD4;&#x5982;&#x975E; const &#x8F6C; const&#xFF0C;void*&#x8F6C;&#x6307;&#x9488;&#x7B49;, static_cast &#x80FD;&#x7528;&#x4E8E;&#x591A;&#x6001;&#x5411;&#x4E0A;&#x8F6C;&#x5316;&#xFF0C;&#x5982;&#x679C;&#x5411;&#x4E0B;&#x8F6C;&#x80FD;&#x6210;&#x529F;&#x4F46;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#xFF0C;&#x7ED3;&#x679C;&#x672A;&#x77E5;&#xFF1B;</p></li><li><p>dynamic_cast</p><p>&#x7528;&#x4E8E;&#x52A8;&#x6001;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x3002;<strong>&#x53EA;&#x80FD;&#x7528;&#x4E8E;&#x542B;&#x6709;&#x865A;&#x51FD;&#x6570;&#x7684;&#x7C7B;</strong>&#xFF0C;&#x7528;&#x4E8E;&#x7C7B;&#x5C42;&#x6B21;&#x95F4;&#x7684;&#x5411;&#x4E0A;&#x548C;&#x5411;&#x4E0B;&#x8F6C;&#x5316;&#x3002;&#x53EA;&#x80FD;&#x8F6C;&#x6307;&#x9488;&#x6216;&#x8005;&#x5F15;&#x7528;&#x3002;&#x5411;&#x4E0B;&#x8F6C;&#x5316;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x975E;&#x6CD5;&#x7684;&#xFF0C;&#x5BF9;&#x4E8E;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x8FD4;&#x56DE;NULL&#xFF0C;&#x5BF9;&#x4E8E;&#x5F15;&#x7528;&#x5219;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x3002;</p><p>&#x5411;&#x4E0A;&#x8F6C;&#x6362;&#xFF1A;&#x6307;&#x7684;&#x662F;&#x5B50;&#x7C7B;&#x5411;&#x57FA;&#x7C7B;&#x7684;&#x8F6C;&#x6362;</p><p>&#x5411;&#x4E0B;&#x8F6C;&#x6362;&#xFF1A;&#x6307;&#x7684;&#x662F;&#x57FA;&#x7C7B;&#x5411;&#x5B50;&#x7C7B;&#x7684;&#x8F6C;&#x6362;</p><p>&#x4ED6;&#x901A;&#x8FC7;&#x5224;&#x65AD;&#x5728;&#x6267;&#x884C;&#x5230;&#x8BE5;&#x8BED;&#x53E5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53D8;&#x91CF;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x7684;&#x7C7B;&#x578B;&#x548C;&#x8981;&#x8F6C;&#x6362;&#x7684;&#x7C7B;&#x578B;&#x662F;&#x5426;&#x76F8;&#x540C;&#x6765;&#x5224;&#x65AD;&#x80FD;&#x5426;&#x8FDB;&#x884C;&#x5411;&#x4E0B;&#x8F6C;&#x6362;&#x3002;</p></li><li><p>reinterpret_cast</p><p>&#x51E0;&#x4E4E;&#x4EC0;&#x4E48;&#x90FD;&#x53EF;&#x4EE5;&#x8F6C;&#xFF0C;&#x6BD4;&#x5982;&#x5C06;int&#x8F6C;&#x4E3A;&#x6307;&#x9488;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x95EE;&#x9898;&#xFF0C;&#x5C3D;&#x91CF;&#x5C11;&#x7528;&#x3002;</p></li><li><p>&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x7528;C&#x7684;&#x5F3A;&#x5236;&#x8F6C;&#x6362;&#xFF1F;</p><p>&#x8F6C;&#x6362;&#x4E0D;&#x591F;&#x660E;&#x786E;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x9519;&#x8BEF;&#x68C0;&#x67E5;&#xFF0C;&#x5BB9;&#x6613;&#x51FA;&#x9519;&#x3002;</p></li></ol><h1 id="&#x6307;&#x9488;&#x548C;&#x5F15;&#x7528;&#x7684;&#x533A;&#x522B;">&#x6307;&#x9488;&#x548C;&#x5F15;&#x7528;&#x7684;&#x533A;&#x522B;</h1><ol type="1"><li>&#x6307;&#x9488;&#x6709;&#x4E00;&#x5757;&#x81EA;&#x5DF1;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x5F15;&#x7528;&#x662F;&#x4E00;&#x4E2A;&#x522B;&#x540D;</li><li>&#x4F7F;&#x7528;sizeof&#x67E5;&#x770B;&#x5927;&#x5C0F;&#xFF0C;&#x6307;&#x9488;&#x7684;&#x5927;&#x5C0F;&#x662F;4&#x5B57;&#x8282;&#xFF08;32&#x4F4D;&#x673A;&#xFF09;&#xFF0C;&#x800C;&#x5F15;&#x7528;&#x5219;&#x662F;&#x88AB;&#x5F15;&#x7528;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x5927;&#x5C0F;&#x3002;</li><li>&#x6307;&#x9488;&#x53EF;&#x4EE5;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E3A;NULL&#xFF0C;&#x5F15;&#x7528;&#x5FC5;&#x987B;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x800C;&#x4E14;&#x5FC5;&#x987B;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x4E00;&#x4E2A;&#x5DF2;&#x6709;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x3002;</li><li>&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x65F6;&#xFF0C;&#x6307;&#x9488;&#x9700;&#x8981;&#x88AB;&#x89E3;&#x5F15;&#x7528;&#x624D;&#x53EF;&#x4EE5;&#x5BF9;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x5BF9;&#x5F15;&#x7528;&#x7684;&#x4FEE;&#x6539;&#x4F1A;&#x76F4;&#x63A5;&#x6539;&#x53D8;&#x5F15;&#x7528;&#x6240;&#x6307;&#x5411;&#x7684;&#x5BF9;&#x8C61;&#x3002;</li><li>&#x6709;const&#x6307;&#x9488;&#xFF0C;&#x6CA1;&#x6709;const&#x5F15;&#x7528;&#x3002;</li><li>&#x6307;&#x9488;&#x53EF;&#x4EE5;&#x91CD;&#x65B0;&#x6307;&#x5411;&#x5176;&#x4ED6;&#x5BF9;&#x8C61;&#xFF0C;&#x4F46;&#x662F;&#x5F15;&#x7528;&#x53EA;&#x80FD;&#x662F;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x4E0D;&#x80FD;&#x6539;&#x53D8;</li><li>&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x7EA7;&#x6307;&#x9488;&#xFF0C;&#x6307;&#x5411;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x6709;&#x5F15;&#x7528;&#x7684;&#x5F15;&#x7528;&#x3002;</li><li>&#x6307;&#x9488;&#x548C;&#x5F15;&#x7528;&#x4F7F;&#x7528;&#x7684;++&#x8FD0;&#x7B97;&#x7B26;&#x7684;&#x610F;&#x4E49;&#x4E0D;&#x4E00;&#x6837;&#x3002;&#x6307;&#x9488;++&#x662F;&#x64CD;&#x4F5C;&#x5730;&#x5740;&#xFF0C;&#x5F15;&#x7528;++&#x662F;&#x5BF9;&#x53D8;&#x91CF;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;</li><li>&#x5982;&#x679C;&#x8FD4;&#x56DE;&#x52A8;&#x6001;&#x5185;&#x5B58;&#x5206;&#x914D;&#x7684;&#x5BF9;&#x8C61;&#x6216;&#x8005;&#x5185;&#x5B58;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x6307;&#x9488;&#xFF0C;&#x5F15;&#x7528;&#x53EF;&#x80FD;&#x5F15;&#x8D77;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002;</li><li>&#x5237;&#x9898;&#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x5728;&#x4F20;&#x53C2;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x53D8;&#x91CF;&#x4E0D;&#x4F1A;&#x88AB;&#x4FEE;&#x6539;&#xFF0C;&#x4F7F;&#x7528;&#x5F15;&#x7528;&#x4F1A;&#x5927;&#x5E45;&#x5EA6;&#x51CF;&#x5C11;&#x8017;&#x65F6;&#x3002;</li></ol><h1 id="&#x667A;&#x80FD;&#x6307;&#x9488;">&#x667A;&#x80FD;&#x6307;&#x9488;</h1><p>&#x4E00;&#x5171;&#x6709;4&#x4E2A;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;auto_ptr, shared_ptr, weak_ptr, unique_ptr&#x3002;&#x540E;&#x4E09;&#x4E2A;&#x662F;C++ 11&#x652F;&#x6301;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x5DF2;&#x88AB;C++11&#x5F03;&#x7528;&#x3002;</p><p>&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x7BA1;&#x7406;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x9632;&#x6B62;&#x7533;&#x8BF7;&#x7684;&#x7A7A;&#x95F4;&#x5728;&#x51FD;&#x6570;&#x7ED3;&#x675F;&#x65F6;&#x5FD8;&#x8BB0;&#x91CA;&#x653E;&#xFF0C;&#x9020;&#x6210;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002;</p><p>&#x667A;&#x80FD;&#x6307;&#x9488;&#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x5F53;&#x8D85;&#x51FA;&#x4E86;&#x7C7B;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x65F6;&#xFF0C;&#x7C7B;&#x4F1A;&#x81EA;&#x52A8;&#x8C03;&#x7528;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4F1A;&#x81EA;&#x52A8;&#x91CA;&#x653E;&#x8D44;&#x6E90;&#x3002;&#x6240;&#x4EE5;&#x53EA;&#x80FD;&#x6307;&#x9488;&#x7684;&#x539F;&#x7406;&#x662F;&#x5728;&#x51FD;&#x6570;&#x7ED3;&#x675F;&#x65F6;&#x81EA;&#x52A8;&#x91CA;&#x653E;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x624B;&#x52A8;&#x91CA;&#x653E;&#x5185;&#x5B58;&#x3002;</p><ol type="1"><li><p>auto_ptr</p><p>&#x4F1A;&#x6709;&#x6F5C;&#x5728;&#x7684;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x95EE;&#x9898;&#x3002;</p><p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">auto_ptr</span>&lt; <span class="built_in">string</span>&gt; p1 (<span class="keyword">new</span> <span class="built_in">string</span> (<span class="string">&quot;www.windsings.com&#x201D; ));</span></span><br><span class="line"><span class="string">auto_ptr&lt;string&gt; p2;</span></span><br><span class="line"><span class="string">p2 = p1; //auto_ptr &#x4E0D;&#x4F1A;&#x62A5;&#x9519;.</span></span><br></pre></td></tr></table></figure></p><p>&#x6B64;&#x65F6;&#xFF0C;&#x8BBF;&#x95EE;p1&#x4F1A;&#x51FA;&#x9519;&#x3002;</p></li><li><p>unique_ptr&#xFF08;&#x66FF;&#x6362;auto_ptr&#xFF09;</p><p>unique_ptr&#x91C7;&#x7528;&#x72EC;&#x5360;&#x5F0F;&#x62E5;&#x6709;&#xFF0C;&#x4FDD;&#x8BC1;&#x540C;&#x4E00;&#x65F6;&#x95F4;&#x5185;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x667A;&#x80FD;&#x6307;&#x9488;&#x4F1A;&#x6307;&#x5411;&#x8BE5;&#x5BF9;&#x8C61;&#x3002;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x907F;&#x514D;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;new&#x4E4B;&#x540E;&#xFF0C;&#x5FD8;&#x8BB0;delete&#x3002;</p><p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; p3 (<span class="keyword">new</span> <span class="built_in">string</span> (<span class="string">&quot;www.windsings.com&quot;</span>)); <span class="comment">//#4</span></span><br><span class="line"><span class="built_in">unique_ptr</span>&lt;<span class="built_in">string</span>&gt; p4&#xFF1B; <span class="comment">//#5</span></span><br><span class="line">p4 = p3;<span class="comment">//&#x6B64;&#x65F6;&#x4F1A;&#x62A5;&#x9519;&#xFF01; &#xFF01;</span></span><br></pre></td></tr></table></figure></p><p>&#x7F16;&#x8BD1;&#x5668;&#x8BA4;&#x4E3A;<code>p4=p3</code>&#x975E;&#x6CD5;&#x3002;&#x6BD4;&#x904D;&#x4E86;<code>p3</code>&#x4E0D;&#x518D;&#x6307;&#x5411;&#x6709;&#x6548;&#x6570;&#x636E;&#x7684;&#x95EE;&#x9898;&#x3002;</p><p><code>unique_ptr</code>&#x4F18;&#x70B9;2&#xFF1A;&#x5F53;&#x7A0B;&#x5E8F;&#x8BD5;&#x56FE;&#x8BB2;&#x4E00;&#x4E2A;<code>unique_ptr</code>&#x8D4B;&#x503C;&#x7ED9;&#x53E6;&#x4E00;&#x4E2A;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x6E90;<code>unique_ptr</code>&#x662F;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x53F3;&#x503C;&#xFF0C;&#x5219;&#x7F16;&#x8BD1;&#x5668;&#x5141;&#x8BB8;&#x3002;&#x5982;&#x679C;&#x6E90;<code>unique_ptr</code>&#x5B58;&#x5728;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x5C06;&#x7981;&#x6B62;&#x3002;</p></li><li><p>shared_ptr</p><p>shared_ptr&#x662F;&#x5171;&#x4EAB;&#x5F0F;&#x62E5;&#x6709;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x591A;&#x4E2A;&#x667A;&#x80FD;&#x6307;&#x9488;&#x53EF;&#x4EE5;&#x6307;&#x5411;&#x76F8;&#x540C;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x548C;&#x5176;&#x76F8;&#x5173;&#x8D44;&#x6E90;&#x4F1A;&#x5728;&#x201C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x88AB;&#x9500;&#x6BC1;&#x65F6;&#x201D;&#x91CA;&#x653E;&#x3002;</p><p>&#x673A;&#x5236;&#xFF1A;&#x4F7F;&#x7528;&#x8BA1;&#x6570;&#x673A;&#x5236;&#x6765;&#x8868;&#x540D;&#x8D44;&#x6E90;&#x88AB;&#x51E0;&#x4E2A;&#x6307;&#x9488;&#x5171;&#x4EAB;&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6210;&#x5458;&#x51FD;&#x6570;<code>use_count()</code>&#x67E5;&#x770B;&#x8D44;&#x6E90;&#x6240;&#x6709;&#x8005;&#x7684;&#x4E2A;&#x6570;&#x3002;&#x9664;&#x4E86;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;new&#x6765;&#x6784;&#x9020;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F20;&#x5165;<code>auto_ptr</code>,<code>unique_ptr</code>,<code>weak_ptr</code>&#x6765;&#x6784;&#x9020;&#x3002;&#x5F53;&#x8C03;&#x7528;<code>release()</code>&#x65F6;&#xFF0C;&#x5F53;&#x524D;&#x6307;&#x9488;&#x4F1A;&#x91CA;&#x653E;&#x8D44;&#x6E90;&#x7684;&#x6240;&#x6709;&#x6743;&#xFF0C;&#x8BA1;&#x6570;&#x51CF;&#x4E00;&#x3002;&#x5F53;&#x8BA1;&#x6570;&#x662F;0&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8D44;&#x6E90;&#x4F1A;&#x88AB;&#x91CA;&#x653E;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x548C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x91CC;&#x9762;&#xFF0C;&#x57FA;&#x4E8E;&#x7D22;&#x5F15;&#x8282;&#x70B9;&#x7684;&#x5171;&#x4EAB;&#x65B9;&#x5F0F;&#x7C7B;&#x4F3C;&#x3002;</p><p>&#x6210;&#x5458;&#x51FD;&#x6570;&#xFF1A;</p><ol type="1"><li><code>use_count</code>&#xFF0C;&#x8FD4;&#x56DE;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x4E2A;&#x6570;</li><li><code>unique</code>&#xFF0C;&#x8FD4;&#x56DE;&#x662F;&#x5426;&#x662F;&#x72EC;&#x5360;&#x6240;&#x6709;&#x6743;&#xFF08;<code>use_count==1</code></li><li><code>swap</code>&#xFF0C;&#x4EA4;&#x6362;&#x4E24;&#x4E2A;<code>shared_ptr</code>&#x5BF9;&#x8C61;&#xFF0C;&#x5373;&#x4EA4;&#x6362;&#x6240;&#x62E5;&#x6709;&#x7684;&#x5BF9;&#x8C61;&#x3002;</li><li><code>reset</code>&#xFF0C;&#x653E;&#x5F03;&#x5185;&#x90E8;&#x5BF9;&#x8C61;&#x7684;&#x6240;&#x6709;&#x6743;&#xFF0C;&#x4F1A;&#x5F15;&#x8D77;&#x539F;&#x6709;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x51CF;&#x5C11;</li><li><code>get</code>&#xFF0C;&#x8FD4;&#x56DE;&#x5185;&#x90E8;&#x5BF9;&#x8C61;&#x3002;&#x548C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x5BF9;&#x8C61;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;&#x83B7;&#x53D6;&#x5185;&#x90E8;&#x7684;&#x6307;&#x9488;</li></ol></li><li><p>weak_ptr</p><p>&#x662F;&#x4E00;&#x79CD;&#x4E0D;&#x53D7;&#x63A7;&#x5236;&#x5BF9;&#x8C61;&#x751F;&#x547D;&#x5468;&#x671F;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;&#x6307;&#x5411;&#x4E00;&#x4E2A;<code>shared_ptr</code>&#x7BA1;&#x7406;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x8FDB;&#x884C;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x662F;&#x5F3A;&#x5F15;&#x7528;&#x7684;<code>shared_ptr</code>&#xFF0C;<code>weak_ptr</code>&#x503C;&#x63D0;&#x4F9B;&#x4E86;&#x5BF9;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;&#x7684;&#x4E00;&#x4E2A;&#x8BBF;&#x95EE;&#x624B;&#x6BB5;&#x3002;<code>weak_ptr</code>&#x8BBE;&#x8BA1;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x914D;&#x5408;<code>shared_ptr</code>&#x800C;&#x5F15;&#x5165;&#x7684;&#x4E00;&#x79CD;&#x667A;&#x80FD;&#x6307;&#x9488;&#x6765;&#x534F;&#x52A9;<code>shared_ptr</code>&#x5DE5;&#x4F5C;, &#x5B83;&#x53EA;&#x53EF;&#x4EE5;&#x4ECE;&#x4E00;&#x4E2A; <code>shared_ptr</code> &#x6216;&#x53E6;&#x4E00;&#x4E2A; <code>weak_ptr</code>&#x5BF9;&#x8C61;&#x6784;&#x9020;&#xFF0C;&#x5B83;&#x7684;&#x6784;&#x9020;&#x548C;&#x6790;&#x6784;&#x4E0D;&#x4F1A;&#x5F15;&#x8D77;&#x5F15;&#x7528;&#x8BB0;&#x6570;&#x7684;&#x589E;&#x52A0;&#x6216;&#x51CF;&#x5C11;&#x3002; <code>weak_ptr</code> &#x662F;&#x7528;&#x6765;&#x89E3;&#x51B3; <code>shared_ptr</code>&#x76F8;&#x4E92;&#x5F15;&#x7528;&#x65F6;&#x7684;&#x6B7B;&#x9501;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x8BF4;&#x4E24;&#x4E2A;<code>shared_ptr</code>&#x76F8;&#x4E92;&#x5F15;&#x7528;,&#x90A3;&#x4E48;&#x8FD9;&#x4E24;&#x4E2A;&#x6307;&#x9488;&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x6C38;&#x8FDC;&#x4E0D;&#x53EF;&#x80FD;&#x4E0B;&#x964D;&#x4E3A; 0,&#x8D44;&#x6E90;&#x6C38;&#x8FDC;&#x4E0D;&#x4F1A;&#x91CA;&#x653E;&#x3002; &#x5B83;&#x662F;&#x5BF9;&#x5BF9;&#x8C61;&#x7684;&#x4E00;&#x79CD;&#x5F31;&#x5F15;&#x7528;&#xFF0C;&#x4E0D;&#x4F1A;&#x589E;&#x52A0;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x548C;<code>shared_ptr</code>&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x76F8;&#x4E92;&#x8F6C;&#x5316;&#xFF0C;<code>shared_ptr</code>&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8D4B;&#x503C;&#x7ED9;&#x5B83;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;<code>lock</code>&#x51FD;&#x6570;&#x6765;&#x83B7;&#x5F97;<code>shared_ptr</code>&#x3002;</p></li><li><p>&#x53EA;&#x80FD;&#x6307;&#x9488;&#x4E5F;&#x6709;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5F53;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x4E92;&#x76F8;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;<code>shared_ptr</code>&#x6210;&#x5458;&#x53D8;&#x91CF;&#x6307;&#x5411;&#x5BF9;&#x65B9;&#xFF0C;&#x5C31;&#x4F1A;&#x9020;&#x6210;&#x5FAA;&#x73AF;&#x5F15;&#x7528;&#xFF0C;&#x4F7F;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5668;&#x5931;&#x6548;&#xFF0C;&#x4ECE;&#x800C;&#x5BFC;&#x81F4;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF1A;&#x4F7F;&#x7528;<code>weak_ptr</code>&#x3002;</p></li></ol><h1 id="&#x6570;&#x7EC4;&#x548C;&#x6307;&#x9488;&#x7684;&#x533A;&#x522B;">&#x6570;&#x7EC4;&#x548C;&#x6307;&#x9488;&#x7684;&#x533A;&#x522B;</h1><table><thead><tr class="header"><th style="text-align: center;">&#x6307;&#x9488;</th><th style="text-align: center;">&#x6570;&#x7EC4;</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x7684;&#x5730;&#x5740;</td><td style="text-align: center;">&#x4FDD;&#x5B58;&#x6570;&#x636E;</td></tr><tr class="even"><td style="text-align: center;">&#x95F4;&#x63A5;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#xFF0C;&#x5148;&#x83B7;&#x5F97;&#x6307;&#x9488;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x7136;&#x540E;&#x8BBF;&#x95EE;&#x5176;&#x5730;&#x5740;&#xFF0C;&#x4ECE;&#x5730;&#x5740;&#x4E2D;&#x63D0;&#x53D6;&#x6570;&#x636E;</td><td style="text-align: center;">&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x6570;&#x636E;</td></tr><tr class="odd"><td style="text-align: center;">&#x901A;&#x5E38;&#x7528;&#x8BED;&#x52A8;&#x6001;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;</td><td style="text-align: center;">&#x901A;&#x5E38;&#x7528;&#x8BED;&#x56FA;&#x5B9A;&#x6570;&#x76EE;&#x4E14;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x76F8;&#x540C;&#x7684;&#x5143;&#x7D20;</td></tr><tr class="even"><td style="text-align: center;">&#x901A;&#x8FC7;malloc/free&#x5206;&#x914D;&#x548C;&#x91CA;&#x653E;&#x5185;&#x5B58;</td><td style="text-align: center;">&#x9690;&#x5F0F;&#x7684;&#x5206;&#x914D;&#x548C;&#x5220;&#x9664;</td></tr><tr class="odd"><td style="text-align: center;">&#x901A;&#x5E38;&#x6307;&#x5411;&#x533F;&#x540D;&#x6570;&#x636E;&#xFF0C;&#x64CD;&#x4F5C;&#x533F;&#x540D;&#x51FD;&#x6570;</td><td style="text-align: center;">&#x81EA;&#x8EAB;&#x5373;&#x4E3A;&#x6570;&#x636E;&#x540D;</td></tr></tbody></table><h1 id="&#x4E3A;&#x4EC0;&#x4E48;&#x6790;&#x6784;&#x51FD;&#x6570;&#x5FC5;&#x987B;&#x662F;&#x865A;&#x51FD;&#x6570;&#x4E3A;&#x4EC0;&#x4E48;c&#x9ED8;&#x8BA4;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E0D;&#x662F;&#x865A;&#x51FD;&#x6570;">&#x4E3A;&#x4EC0;&#x4E48;&#x6790;&#x6784;&#x51FD;&#x6570;&#x5FC5;&#x987B;&#x662F;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;C++&#x9ED8;&#x8BA4;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E0D;&#x662F;&#x865A;&#x51FD;&#x6570;</h1><p>&#x5C06;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x7EE7;&#x627F;&#x7684;&#x7236;&#x7C7B;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x8BBE;&#x7F6E;&#x4E3A;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x5F53;new&#x4E00;&#x4E2A;&#x5B50;&#x7C7B;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x57FA;&#x7C7B;&#x6307;&#x9488;&#x6307;&#x5411;&#x8BE5;&#x5B50;&#x7C7B;&#x5BF9;&#x8C61;&#xFF0C;&#x91CA;&#x653E;&#x57FA;&#x7C7B;&#x6307;&#x9488;&#x65F6;&#x53EF;&#x4EE5;&#x91CA;&#x653E;&#x6389;&#x5B50;&#x7C7B;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x623F;&#x5B50;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002;</p><p>C++&#x9ED8;&#x8BA4;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E0D;&#x662F;&#x865A;&#x51FD;&#x6570;&#x662F;&#x56E0;&#x4E3A;&#x865A;&#x51FD;&#x6570;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x865A;&#x51FD;&#x6570;&#x8868;&#x548C;&#x865A;&#x8868;&#x6307;&#x9488;&#xFF0C;&#x5360;&#x7528;&#x989D;&#x5916;&#x7684;&#x5185;&#x5B58;&#x3002;&#x5BF9;&#x4E8E;&#x4E0D;&#x4F1A;&#x88AB;&#x7EE7;&#x627F;&#x7684;&#x7C7B;&#x6765;&#x8BF4;&#xFF0C;&#x5176;&#x6790;&#x6784;&#x51FD;&#x6570;&#x5982;&#x679C;&#x662F;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x4F1A;&#x6D6A;&#x8D39;&#x5185;&#x5B58;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;C++&#x9ED8;&#x8BA4;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E0D;&#x662F;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x53EA;&#x6709;&#x5F53;&#x9700;&#x8981;&#x5F53;&#x505A;&#x7236;&#x7C7B;&#x65F6;&#xFF0C;&#x624D;&#x8BBE;&#x7F6E;&#x4E3A;&#x865A;&#x51FD;&#x6570;&#x3002;</p><h1 id="&#x51FD;&#x6570;&#x6307;&#x9488;">&#x51FD;&#x6570;&#x6307;&#x9488;</h1><p>&#x51FD;&#x6570;&#x6307;&#x9488;&#x662F;&#x6307;&#x5411;&#x51FD;&#x6570;&#x7684;&#x6307;&#x9488;&#x53D8;&#x91CF;&#x3002;&#x51FD;&#x6570;&#x6307;&#x9488;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x53D8;&#x91CF;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7684;&#x51FD;&#x6570;&#x3002;</p><p>&#x5728;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x5165;&#x53E3;&#x5730;&#x5740;&#xFF0C;&#x8BE5;&#x5165;&#x53E3;&#x5730;&#x5740;&#x662F;&#x51FD;&#x6570;&#x6307;&#x9488;&#x6240;&#x6307;&#x5411;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x901A;&#x8FC7;&#x6307;&#x5411;&#x51FD;&#x6570;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x88AB;&#x6307;&#x5411;&#x7684;&#x51FD;&#x6570;&#x3002;</p><p>&#x793A;&#x4F8B;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WindSings</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dayin</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> (*p)(<span class="keyword">int</span>);</span><br><span class="line">    p = dayin;</span><br><span class="line">    <span class="keyword">int</span> b=p(<span class="number">123</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x51FA;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="fork&#x51FD;&#x6570;">fork&#x51FD;&#x6570;</h1><p>Fork&#xFF1A;&#x6362;&#x5C06;&#x4E00;&#x4E2A;&#x548C;&#x5F53;&#x524D;&#x8FDB;&#x7A0B;&#x6620;&#x50CF;&#x4E00;&#x6837;&#x7684;&#x8FDB;&#x7A0B;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="keyword">pid_t</span> fork(<span class="keyword">void</span>);</span><br></pre></td></tr></table></figure><p>&#x6210;&#x529F;&#x8C03;&#x7528;<code>fork()</code>&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x51E0;&#x4E4E;&#x4E0E;&#x8C03;&#x7528;<code>fork()</code>&#x7684;&#x8FDB;&#x7A0B;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#x3002;&#x8FD9;&#x4E24;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x5C06;&#x4F1A;&#x7EE7;&#x7EED;&#x8FD0;&#x884C;&#x3002;&#x5728;&#x5B50;&#x8FDB;&#x7A0B;&#x4E2D;&#xFF0C;&#x6210;&#x529F;&#x7684;<code>fork()</code>&#x4F1A;&#x8FD4;&#x56DE;0&#xFF0C;&#x5728;&#x7236;&#x8FDB;&#x7A0B;&#x4E2D;&#xFF0C;<code>fork()</code>&#x8FD4;&#x56DE;&#x5B50;&#x8FDB;&#x7A0B;&#x7684;PID&#x3002;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x9519;&#x8BEF;&#xFF0C;<code>fork&#xFF08;&#xFF09;</code>&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x8D1F;&#x7684;&#x503C;&#x3002;</p><h1 id="&#x6790;&#x6784;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;">&#x6790;&#x6784;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;</h1><p>&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E0E;&#x6784;&#x9020;&#x51FD;&#x6570;&#x76F8;&#x5BF9;&#x5E94;&#xFF0C;&#x5F53;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x7ED3;&#x675F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7CFB;&#x7EDF;&#x81EA;&#x52A8;&#x6267;&#x884C;&#x6790;&#x6784;&#x51FD;&#x6570;&#x3002;</p><p>&#x6790;&#x6784;&#x51FD;&#x6570;&#x7684;&#x51FD;&#x6570;&#x540D;&#x4E0E;&#x7C7B;&#x540D;&#x76F8;&#x540C;&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x524D;&#x9762;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;<code>~</code>&#xFF0C;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x53C2;&#x6570;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#x3002;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x4E14;&#x4E0D;&#x80FD;&#x91CD;&#x8F7D;&#x3002;</p><p>&#x4E0D;&#x7BA1;&#x7528;&#x6237;&#x6709;&#x6CA1;&#x6709;&#x7F16;&#x5199;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x7F16;&#x8BD1;&#x7CFB;&#x7EDF;&#x4F1A;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x81EA;&#x5B9A;&#x4E49;&#x4E86;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x5728;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x5148;&#x8C03;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x518D;&#x8C03;&#x7528;&#x7CFB;&#x7EDF;&#x751F;&#x6210;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x3002;&#x7CFB;&#x7EDF;&#x751F;&#x6210;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x4EFB;&#x4F55;&#x7684;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7C7B;&#x4E2D;&#x6709;&#x6307;&#x9488;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x52A8;&#x6001;&#x7684;&#x7533;&#x8BF7;&#x4E86;&#x5185;&#x5B58;&#xFF0C;&#x6700;&#x597D;&#x7528;&#x6237;&#x663E;&#x5F0F;&#x7684;&#x6784;&#x9020;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x9500;&#x6BC1;&#x7C7B;&#x4E4B;&#x524D;&#xFF0C;&#x91CA;&#x653E;&#x6389;&#x7533;&#x8BF7;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002;</p><p>&#x6790;&#x6784;&#x987A;&#x5E8F;&#xFF1A;</p><ol type="1"><li>&#x6D3E;&#x751F;&#x7C7B;&#x672C;&#x8EAB;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;</li><li>&#x5BF9;&#x8C61;&#x6210;&#x5458;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;</li><li>&#x57FA;&#x7C7B;&#x6790;&#x6784;&#x51FD;&#x6570;</li></ol><h1 id="&#x9759;&#x6001;&#x51FD;&#x6570;&#x4E0E;&#x865A;&#x51FD;&#x6570;&#x7684;&#x533A;&#x522B;">&#x9759;&#x6001;&#x51FD;&#x6570;&#x4E0E;&#x865A;&#x51FD;&#x6570;&#x7684;&#x533A;&#x522B;</h1><p>&#x9759;&#x6001;&#x51FD;&#x6570;&#x5728;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x5DF2;&#x7ECF;&#x786E;&#x5B9A;&#x4E86;&#x8FD0;&#x884C;&#x65F6;&#x673A;&#xFF0C;&#x865A;&#x51FD;&#x6570;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#x52A8;&#x6001;&#x7ED1;&#x5B9A;&#x3002;&#x865A;&#x51FD;&#x6570;&#x56E0;&#x4E3A;&#x4F7F;&#x7528;&#x4E86;&#x865A;&#x51FD;&#x6570;&#x8868;&#xFF0C;&#x6240;&#x4EE5;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x589E;&#x52A0;&#x4E00;&#x6B21;&#x5185;&#x5B58;&#x5F00;&#x9500;&#x3002;</p><h1 id="&#x91CD;&#x8F7D;&#x91CD;&#x5199;&#x548C;&#x91CD;&#x5B9A;&#x4E49;">&#x91CD;&#x8F7D;&#xFF0C;&#x91CD;&#x5199;&#x548C;&#x91CD;&#x5B9A;&#x4E49;</h1><p>&#x91CD;&#x8F7D;overload&#xFF1A;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x540D;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x662F;&#x53C2;&#x6570;&#x5217;&#x8868;&#x4E0D;&#x540C;&#xFF08;&#x4E2A;&#x6570;&#xFF0C;&#x7C7B;&#x578B;&#xFF0C;&#x987A;&#x5E8F;&#xFF0C;&#x4E09;&#x8005;&#x5FC5;&#x6709;&#x5176;&#x4E00;&#xFF09;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x6CA1;&#x6709;&#x8981;&#x6C42;&#xFF0C;&#x5728;&#x540C;&#x4E00;&#x4F5C;&#x7528;&#x57DF;&#x4E2D;&#x3002;</p><p>&#x91CD;&#x5199;&#xFF08;=&#x8986;&#x76D6;&#xFF0C;override&#xFF09;&#xFF0C;&#x5B50;&#x7C7B;&#x7EE7;&#x627F;&#x4E86;&#x7236;&#x7C7B;&#xFF0C;&#x7236;&#x7C7B;&#x4E2D;&#x7684;&#x51FD;&#x6570;&#x662F;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x5728;&#x5B50;&#x7C7B;&#x4E2D;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x4E86;&#x8FD9;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x662F;&#x8986;&#x76D6;&#xFF08;=&#x8986;&#x76D6;&#xFF0C;override&#xFF09;&#x3002;&#x6709;&#x51E0;&#x4E2A;&#x8981;&#x6C42;&#xFF1A;</p><ol type="1"><li>&#x88AB;&#x91CD;&#x5199;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5FC5;&#x987B;&#x662F;virtual&#x7684;&#x3002;</li><li>&#x8986;&#x76D6;&#x51FD;&#x6570;&#x5FC5;&#x987B;&#x6709;&#x76F8;&#x540C;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x540D;&#x79F0;&#x548C;&#x53C2;&#x6570;&#x5217;&#x8868;&#x3002;</li><li>&#x8986;&#x76D6;&#x51FD;&#x6570;&#x7684;&#x8BBF;&#x95EE;&#x4FEE;&#x9970;&#x7B26;&#x53EF;&#x4EE5;&#x4E0D;&#x540C;</li></ol><p>&#x91CD;&#x5B9A;&#x4E49;&#xFF1A;</p><ol type="1"><li>&#x4E0D;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x4F5C;&#x7528;&#x57DF;&#x5185;&#xFF0C;&#xFF08;&#x5206;&#x522B;&#x4F4D;&#x4E8E;&#x6D3E;&#x751F;&#x7C7B;&#x4E0E;&#x57FA;&#x7C7B;&#xFF09;</li><li>&#x51FD;&#x6570;&#x540D;&#x5B57;&#x76F8;&#x540C;&#x3002;</li><li>&#x8FD4;&#x56DE;&#x503C;&#x53EF;&#x4EE5;&#x4E0D;&#x540C;</li><li>&#x53C2;&#x6570;&#x4E0D;&#x540C;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x4E0D;&#x8BBA;&#x57FA;&#x7C7B;&#x6709;&#x6CA1;&#x6709;virtual&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x57FA;&#x7C7B;&#x7684;&#x51FD;&#x6570;&#x5C06;&#x4F1A;&#x88AB;&#x9690;&#x85CF;&#x3002;</li><li>&#x53C2;&#x6570;&#x76F8;&#x540C;&#xFF0C;&#x4E14;&#x57FA;&#x7C7B;&#x51FD;&#x6570;&#x6CA1;&#x6709;<code>virtual</code>&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x57FA;&#x7C7B;&#x7684;&#x51FD;&#x6570;&#x88AB;&#x9690;&#x85CF;&#x3002;</li></ol><h1 id="&#x865A;&#x51FD;&#x6570;&#x548C;&#x591A;&#x6001;">&#x865A;&#x51FD;&#x6570;&#x548C;&#x591A;&#x6001;</h1><p>&#x591A;&#x6001;&#x7684;&#x5B9E;&#x73B0;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x9759;&#x6001;&#x591A;&#x6001;&#x548C;&#x52A8;&#x6001;&#x591A;&#x6001;&#xFF0C;&#x9759;&#x6001;&#x591A;&#x6001;&#x4E3B;&#x8981;&#x662F;<strong>&#x91CD;&#x8F7D;</strong>&#xFF0C;<strong>&#x5728;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x5DF2;&#x7ECF;&#x786E;&#x5B9A;</strong>&#xFF1B; <strong>&#x52A8;&#x6001;&#x591A;&#x6001;&#x662F;&#x7528;&#x865A;&#x51FD;&#x6570;&#x673A;&#x5236;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x5728;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x52A8;&#x6001;&#x7ED1;&#x5B9A;&#x3002;</strong> &#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;&#x4E00;&#x4E2A;&#x7236;&#x7C7B;&#x7C7B;&#x578B;&#x7684;&#x6307;&#x9488;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x5B50;&#x7C7B;&#x5BF9;&#x8C61;&#x65F6;&#x5019;&#xFF0C;&#x4F7F;&#x7528;&#x7236;&#x7C7B;&#x7684;&#x6307;&#x9488;&#x53BB;&#x8C03;&#x7528;&#x5B50;&#x7C7B;&#x4E2D;&#x91CD;&#x5199;&#x4E86;&#x7684;&#x7236;&#x7C7B;&#x4E2D;&#x7684;&#x865A;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;&#x5B50;&#x7C7B;&#x91CD;&#x5199;&#x8FC7;&#x540E;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5728;&#x7236;&#x7C7B;&#x4E2D;&#x58F0;&#x660E;&#x4E3A;&#x52A0;&#x4E86; virtual &#x5173;&#x952E;&#x5B57;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5728;&#x5B50;&#x7C7B;&#x4E2D;&#x91CD;&#x5199;&#x65F6;&#x5019;&#x4E0D;&#x9700;&#x8981;&#x52A0; virtual&#x4E5F;&#x662F;&#x865A;&#x51FD;&#x6570;&#x3002; &#x865A;&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#xFF1A;&#x5728;&#x6709;&#x865A;&#x51FD;&#x6570;&#x7684;&#x7C7B;&#x4E2D;&#xFF0C;&#x7C7B;&#x7684;&#x6700;&#x5F00;&#x59CB;&#x90E8;&#x5206;&#x662F;&#x4E00;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#x8868;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x8FD9;&#x4E2A;&#x6307;&#x9488;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#x8868;&#xFF0C;&#x8868;&#x4E2D;&#x653E;&#x4E86;&#x865A;&#x51FD;&#x6570;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x5B9E;&#x9645;&#x7684;&#x865A;&#x51FD;&#x6570;&#x5728;&#x4EE3;&#x7801;&#x6BB5;(.text)&#x4E2D;&#x3002; &#x5F53;&#x5B50;&#x7C7B;&#x7EE7;&#x627F;&#x4E86;&#x7236;&#x7C7B;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x4F1A;&#x7EE7;&#x627F;&#x5176;&#x865A;&#x51FD;&#x6570;&#x8868;&#xFF0C;&#x5F53;&#x5B50;&#x7C7B;&#x91CD;&#x5199;&#x7236;&#x7C7B;&#x4E2D;&#x865A;&#x51FD;&#x6570;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x5C06;&#x5176;&#x7EE7;&#x627F;&#x5230;&#x7684;&#x865A;&#x51FD;&#x6570;&#x8868;&#x4E2D;&#x7684;&#x5730;&#x5740;&#x66FF;&#x6362;&#x4E3A;&#x91CD;&#x65B0;&#x5199;&#x7684;&#x51FD;&#x6570;&#x5730;&#x5740;&#x3002; &#x4F7F;&#x7528;&#x4E86;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x4F1A;&#x589E;&#x52A0;&#x8BBF;&#x95EE;&#x5185;&#x5B58;&#x5F00;&#x9500;&#xFF0C;&#x964D;&#x4F4E;&#x6548;&#x7387;&#x3002;</p><h1 id="&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;c&#x7684;&#x591A;&#x6001;">&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;C++&#x7684;&#x591A;&#x6001;</h1><p>C++&#x7684;&#x591A;&#x6001;&#x5177;&#x4F53;&#x4F53;&#x73B0;&#x5728;&#x7F16;&#x8BD1;&#x548C;&#x8FD0;&#x884C;&#x7684;&#x4E24;&#x4E2A;&#x9636;&#x6BB5;&#x3002;&#x7F16;&#x8BD1;&#x65F6;&#x591A;&#x6001;&#x662F;&#x9759;&#x6001;&#x591A;&#x6001;&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x5C31;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x4F7F;&#x7528;&#x7684;&#x63A5;&#x53E3;&#x3002;&#x8FD0;&#x884C;&#x65F6;&#x591A;&#x6001;&#x662F;&#x52A8;&#x6001;&#x591A;&#x6001;&#xFF0C;&#x5177;&#x4F53;&#x5F15;&#x7528;&#x7684;&#x63A5;&#x53E3;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x624D;&#x80FD;&#x786E;&#x5B9A;&#x3002;</p><p><img src="/posts/93f579e6/1594385184172.png"></p><p>&#x9759;&#x6001;&#x591A;&#x6001;&#x548C;&#x52A8;&#x6001;&#x591A;&#x6001;&#x7684;&#x533A;&#x522B;&#x5176;&#x5B9E;&#x53EA;&#x662F;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x5C06;&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x548C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5173;&#x8054;&#x8D77;&#x6765;&#xFF0C;&#x662F;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x671F;&#x8FD8;&#x662F;&#x8FD0;&#x884C;&#x65F6;&#x671F;&#xFF0C;&#x5373;&#x51FD;&#x6570;&#x5730;&#x5740;&#x662F;&#x65E9;&#x7ED1;&#x5B9A;&#x8FD8;&#x662F;&#x665A;&#x7ED1;&#x5B9A;&#x7684;&#x3002;&#x9759;&#x6001;&#x591A;&#x6001;&#x662F;&#x6307;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x95F4;&#x5C31;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x5730;&#x5740;&#xFF0C;&#x5E76;&#x751F;&#x4EA7;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x9759;&#x6001;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5730;&#x5740;&#x662F;&#x65E9;&#x7ED1;&#x5B9A;&#x3002;&#x9759;&#x6001;&#x591A;&#x6001;&#x5F80;&#x5F80;&#x4E5F;&#x88AB;&#x53EB;&#x505A;&#x9759;&#x6001;&#x8054;&#x7F16;&#x3002; &#x52A8;&#x6001;&#x591A;&#x6001;&#x5219;&#x662F;&#x6307;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x5730;&#x5740;&#x4E0D;&#x80FD;&#x5728;&#x7F16;&#x8BD1;&#x5668;&#x671F;&#x95F4;&#x786E;&#x5B9A;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x786E;&#x5B9A;&#xFF0C;&#x5C5E;&#x4E8E;&#x665A;&#x7ED1;&#x5B9A;&#xFF0C;&#x52A8;&#x6001;&#x591A;&#x6001;&#x5F80;&#x5F80;&#x4E5F;&#x88AB;&#x53EB;&#x505A;&#x52A8;&#x6001;&#x8054;&#x7F16;&#x3002;</p><p><strong>&#x591A;&#x6001;&#x7684;&#x4F5C;&#x7528;</strong></p><p>&#x5C01;&#x88C5;&#x53EF;&#x4EE5;&#x4F7F;&#x5F97;&#x4EE3;&#x7801;&#x6A21;&#x5757;&#x5316;&#xFF0C;&#x7EE7;&#x627F;&#x53EF;&#x4EE5;&#x6269;&#x5C55;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x76EE;&#x7684;&#x90FD;&#x662F;&#x4E3A;&#x4E86;&#x4EE3;&#x7801;&#x91CD;&#x7528;&#x3002;&#x800C;&#x591A;&#x6001;&#x7684;&#x76EE;&#x7684;&#x5219;&#x662F;&#x4E3A;&#x4E86;&#x63A5;&#x53E3;&#x91CD;&#x7528;&#x3002;&#x9759;&#x6001;&#x591A;&#x6001;&#xFF0C;&#x5C06;&#x540C;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x6839;&#x636E;&#x4F20;&#x5165;&#x4E0D;&#x540C;&#x7684;&#x53C2;&#x6570;&#xFF08;&#x4E2A;&#x6570;&#x6216;&#x7C7B;&#x578B;&#x4E0D;&#x540C;&#xFF09;&#x8C03;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x73B0;&#x3002;&#x52A8;&#x6001;&#x591A;&#x6001;&#xFF0C;&#x5219;&#x4E0D;&#x8BBA;&#x4F20;&#x9012;&#x8FC7;&#x6765;&#x7684;&#x54EA;&#x4E2A;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x51FD;&#x6570;&#x90FD;&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x540C;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x8C03;&#x7528;&#x5230;&#x5404;&#x81EA;&#x5BF9;&#x8C61;&#x5B9E;&#x73B0;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p><p><strong>&#x9759;&#x6001;&#x591A;&#x6001;</strong></p><p>&#x9759;&#x6001;&#x591A;&#x6001;&#x5F80;&#x5F80;&#x901A;&#x8FC7;&#x51FD;&#x6570;&#x91CD;&#x8F7D;&#x548C;&#x6A21;&#x7248;&#xFF08;&#x6CDB;&#x578B;&#x7F16;&#x7A0B;&#xFF09;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x6240;&#x793A;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x6784;&#x6210;&#x91CD;&#x8F7D;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Myblog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;www.windsings.com&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Myblog</span><span class="params">(<span class="keyword">bool</span> withAuther)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;www.windsings.com &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Auther:wind&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x51FD;&#x6570;&#x6A21;&#x677F;&#xFF08;&#x6CDB;&#x578B;&#x7F16;&#x7A0B;&#xFF09;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function">T <span class="title">Myblog</span><span class="params">(T a, T b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x662F;&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;www.windsings.com&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;&#x5F00;&#x542F;&#x4E86;&#x5F3A;&#x5236;https&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Myblog();<span class="comment">//&#x8C03;&#x7528;Myblog()</span></span><br><span class="line">    Myblog(<span class="literal">true</span>);<span class="comment">//&#x8C03;&#x7528;Myblog(bool withAuther)</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; Myblog&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;www.&quot;</span>, <span class="string">&quot;windsing.com&quot;</span>) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//&#x8C03;&#x7528;&#x6A21;&#x677F;&#x51FD;&#x6570;&#xFF0C;&#x8F93;&#x51FA;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;a</span></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x662F;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">www.windsings.com</span><br><span class="line">www.windsings.com</span><br><span class="line">Auther:wind</span><br><span class="line">&#x6211;&#x7684;&#x535A;&#x5BA2;&#x662F;</span><br><span class="line">www.windsings.com</span><br><span class="line">&#x5F00;&#x542F;&#x4E86;&#x5F3A;&#x5236;https</span><br><span class="line">www.windsing.com</span><br></pre></td></tr></table></figure><p><strong>&#x52A8;&#x6001;&#x591A;&#x6001;</strong></p><p>&#x52A8;&#x6001;&#x591A;&#x6001;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x7528;&#x6CD5;&#x5C31;&#x662F;&#x58F0;&#x660E;&#x57FA;&#x7C7B;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x5229;&#x7528;&#x8BE5;&#x6307;&#x9488;&#x6307;&#x5411;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x5B50;&#x7C7B;&#x5BF9;&#x8C61;&#xFF0C;&#x8C03;&#x7528;&#x76F8;&#x5E94;&#x7684;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x6307;&#x5411;&#x7684;&#x5B50;&#x7C7B;&#x7684;&#x4E0D;&#x540C;&#x800C;&#x8C03;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x5373;&#x6CA1;&#x6709;&#x5229;&#x7528; C++ &#x591A;&#x6001;&#x6027;&#xFF0C;&#x5219;&#x5229;&#x7528;&#x57FA;&#x7C7B;&#x6307;&#x9488;&#x8C03;&#x7528;&#x76F8;&#x5E94;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C06;&#x603B;&#x88AB;&#x9650;&#x5236;&#x5728;&#x57FA;&#x7C7B;&#x51FD;&#x6570;&#x672C;&#x8EAB;&#xFF0C;&#x800C;&#x65E0;&#x6CD5;&#x8C03;&#x7528;&#x5230;&#x5B50;&#x7C7B;&#x4E2D;&#x88AB;&#x91CD;&#x5199;&#x7684;&#x51FD;&#x6570;&#x3002;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x591A;&#x6001;&#x6027;&#xFF0C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x5730;&#x5740;&#x5C06;&#x662F;&#x4E00;&#x5B9A;&#x7684;&#xFF0C;&#x800C;&#x56FA;&#x5B9A;&#x7684;&#x5730;&#x5740;&#x5C06;&#x59CB;&#x7EC8;&#x8C03;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x5C31;&#x65E0;&#x6CD5;&#x8FBE;&#x5230;&#x201C;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x591A;&#x79CD;&#x5B9E;&#x73B0;&#x201D;&#x7684;&#x76EE;&#x7684;&#x4E86;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Base::fun()&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Derived</span> :</span> <span class="keyword">public</span> Base</span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Derived::fun()&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Base* b = <span class="keyword">new</span> Derived;            <span class="comment">//&#x4F7F;&#x7528;&#x57FA;&#x7C7B;&#x6307;&#x9488;&#x6307;&#x5411;&#x6D3E;&#x751F;&#x7C7B;&#x5BF9;&#x8C61;</span></span><br><span class="line">    b-&gt;func();                       <span class="comment">//&#x52A8;&#x6001;&#x7ED1;&#x5B9A;&#x6D3E;&#x751F;&#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;func</span></span><br><span class="line"></span><br><span class="line">    Base&amp; rb = *(<span class="keyword">new</span> Derived);        <span class="comment">//&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5F15;&#x7528;&#x6307;&#x5411;&#x6D3E;&#x751F;&#x7C7B;&#x5BF9;&#x8C61;</span></span><br><span class="line">    rb.func();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5728;main&#x51FD;&#x6570;&#x524D;&#x8FD0;&#x884C;&#x7684;&#x51FD;&#x6570;">&#x5728;main&#x51FD;&#x6570;&#x524D;&#x8FD0;&#x884C;&#x7684;&#x51FD;&#x6570;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++ 11 VS2017</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WindSings</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = []() </span><br><span class="line">{</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;wind&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;www.windsings.com&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x7684;&#x533A;&#x522B;">&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x7684;&#x533A;&#x522B;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> * arr = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> * brr = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> crr[] = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> drr[] = <span class="string">&quot;123&quot;</span>;</span><br></pre></td></tr></table></figure><p>const char * arr = &quot;123&quot;;</p><p>//&#x5B57;&#x7B26;&#x4E32; 123 &#x4FDD;&#x5B58;&#x5728;&#x5E38;&#x91CF;&#x533A;&#xFF0C;const &#x672C;&#x6765;&#x662F;&#x4FEE;&#x9970; arr &#x6307;&#x5411;&#x7684;&#x503C;&#x4E0D;&#x80FD;&#x901A;&#x8FC7; arr &#x53BB;&#x4FEE;&#x6539;&#xFF0C;&#x4F46;&#x662F;&#x5B57;&#x7B26;&#x4E32;&#x201C;123&#x201D; &#x5728;&#x5E38;&#x91CF;&#x533A;&#xFF0C;&#x672C;&#x6765;&#x5C31;&#x4E0D;&#x80FD;&#x6539;&#x53D8;&#xFF0C;&#x6240;&#x4EE5;&#x52A0;&#x4E0D;&#x52A0; const &#x6548;&#x679C;&#x90FD;&#x4E00;&#x6837;</p><p>char * brr = &quot;123&quot;;</p><p>//&#x5B57;&#x7B26;&#x4E32; 123 &#x4FDD;&#x5B58;&#x5728;&#x5E38;&#x91CF;&#x533A;&#xFF0C;&#x8FD9;&#x4E2A; arr &#x6307;&#x9488;&#x6307;&#x5411;&#x7684;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x540C;&#x6837;&#x4E0D;&#x80FD;&#x901A;&#x8FC7; brr &#x53BB;&#x4FEE;&#x6539;&quot;123&quot; &#x7684;&#x503C;</p><p>const char crr[] = &quot;123&quot;;</p><p>//&#x8FD9;&#x91CC; 123 &#x672C;&#x6765;&#x662F;&#x5728;&#x6808;&#x4E0A;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x80FD;&#x4F1A;&#x505A;&#x67D0;&#x4E9B;&#x4F18;&#x5316;&#xFF0C;&#x5C06;&#x5176;&#x653E;&#x5230;&#x5E38;&#x91CF;&#x533A;</p><p>char drr[] = &quot;123&quot;; //&#x5B57;&#x7B26;&#x4E32; 123 &#x4FDD;&#x5B58;&#x5728;&#x6808;&#x533A;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; drr &#x53BB;&#x4FEE;&#x6539;</p><h1 id="c&#x5982;&#x4F55;&#x5B9A;&#x4E49;&#x5E38;&#x91CF;&#x7684;&#x5E38;&#x91CF;&#x5B58;&#x653E;&#x5728;&#x54EA;&#x4E2A;&#x4F4D;&#x7F6E;">C++&#x5982;&#x4F55;&#x5B9A;&#x4E49;&#x5E38;&#x91CF;&#x7684;&#xFF0C;&#x5E38;&#x91CF;&#x5B58;&#x653E;&#x5728;&#x54EA;&#x4E2A;&#x4F4D;&#x7F6E;</h1><p>&#x5E38;&#x91CF;&#x5728; C++&#x91CC;&#x7684;&#x5B9A;&#x4E49;&#x5C31;&#x662F;&#x4E00;&#x4E2A; top-level const &#x52A0;&#x4E0A;&#x5BF9;&#x8C61;&#x7C7B;&#x578B;&#xFF0C;&#x5E38;&#x91CF;&#x5B9A;&#x4E49;&#x5FC5;&#x987B;&#x521D;&#x59CB;&#x5316;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x5C40;&#x90E8;&#x5BF9;&#x8C61;&#xFF0C;&#x5E38;&#x91CF;&#x5B58;&#x653E;&#x5728;&#x6808;&#x533A;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x5168;&#x5C40;&#x5BF9;&#x8C61;&#xFF0C;&#x5E38;&#x91CF;&#x5B58;&#x653E;&#x5728;&#x5168;&#x5C40;/&#x9759;&#x6001;&#x5B58;&#x50A8;&#x533A;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x5B57;&#x9762;&#x503C;&#x5E38;&#x91CF;&#xFF0C;&#x5E38;&#x91CF;&#x5B58;&#x653E;&#x5728;&#x5E38;&#x91CF;&#x5B58;&#x50A8;&#x533A;&#x3002;</p><h1 id="const&#x4FEE;&#x9970;&#x6210;&#x5458;&#x51FD;&#x6570;">const&#x4FEE;&#x9970;&#x6210;&#x5458;&#x51FD;&#x6570;</h1><p>const &#x4FEE;&#x9970;&#x7684;&#x6210;&#x5458;&#x51FD;&#x6570;&#x8868;&#x660E;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x4E0D;&#x4F1A;&#x5BF9;&#x5BF9;&#x8C61;&#x505A;&#x51FA;&#x4EFB;&#x4F55;&#x66F4;&#x6539;&#x3002;&#x5982;&#x679C;&#x540C;&#x65F6;&#x5B9A;&#x4E49;&#x4E86;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x4E00;&#x4E2A;&#x5E26;const&#xFF0C;&#x4E00;&#x4E2A;&#x4E0D;&#x5E26;&#xFF0C;&#x4E0D;&#x4F1A;&#x51FA;&#x95EE;&#x9898;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x51FD;&#x6570;&#x7684;&#x91CD;&#x8F7D;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WindSings</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">int</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    a++;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line">    func(num);</span><br><span class="line">    func(func(num));<span class="comment">//&#x62A5;&#x9519;&#xFF0C;&#x975E;&#x5E38;&#x91CF;&#x5F15;&#x7528;&#x7684;&#x521D;&#x59CB;&#x503C;&#x5FC5;&#x987B;&#x4E3A;&#x5DE6;&#x503C;</span></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x9690;&#x5F0F;&#x7C7B;&#x578B;&#x8F6C;&#x6362;">&#x9690;&#x5F0F;&#x7C7B;&#x578B;&#x8F6C;&#x6362;</h1><p>&#x4F4E;&#x7CBE;&#x5EA6;&#x7684;&#x53D8;&#x91CF;&#x7ED9;&#x9AD8;&#x7CBE;&#x5EA6;&#x7684;&#x53D8;&#x91CF;&#x8D4B;&#x503C;&#xFF0C;&#x4F1A;&#x53D1;&#x751F;&#x9690;&#x5F0F;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x3002;&#x5BF9;&#x4E8E;&#x53EA;&#x5B58;&#x5728;&#x5355;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x5BF9;&#x8C61;&#x6784;&#x9020;&#x6765;&#x8BF4;&#xFF0C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x8BE5;&#x53C2;&#x6570;&#x4F20;&#x5165;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x81EA;&#x52A8;&#x8C03;&#x7528;&#x5176;&#x6784;&#x9020;&#x51FD;&#x6570;&#x751F;&#x6210;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x3002;</p><h1 id="&#x5DE6;&#x503C;&#x548C;&#x53F3;&#x503C;">&#x5DE6;&#x503C;&#x548C;&#x53F3;&#x503C;</h1><p>&#x5DE6;&#x503C;&#xFF1A;&#x8868;&#x793A;&#x4E86;&#x4E00;&#x4E2A;&#x5360;&#x636E;&#x5185;&#x5B58;&#x4E2D;&#x67D0;&#x4E2A;&#x53EF;&#x8BC6;&#x522B;&#x7684;&#x4F4D;&#x7F6E;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5730;&#x5740;&#xFF09;&#x7684;&#x5BF9;&#x8C61;&#x3002;</p><p>&#x53F3;&#x503C;&#xFF1A;&#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x4E0D;&#x662F;&#x5DE6;&#x503C;&#x5C31;&#x662F;&#x53F3;&#x503C;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x53F3;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x8868;&#x793A;&#x5185;&#x5B58;&#x4E2D;&#x67D0;&#x4E2A;&#x53EF;&#x8BC6;&#x522B;&#x4F4D;&#x7F6E;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> var;</span><br><span class="line">var = <span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>&#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#x9700;&#x8981;&#x5DE6;&#x64CD;&#x4F5C;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x5DE6;&#x503C;&#x3002;<code>var</code> &#x662F;&#x4E00;&#x4E2A;&#x6709;&#x5185;&#x5B58;&#x4F4D;&#x7F6E;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x662F;&#x5DE6;&#x503C;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x4E0B;&#x9762;&#x7684;&#x5199;&#x6CD5;&#x5219;&#x662F;&#x9519;&#x7684;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span> = var;       <span class="comment">// &#x9519;&#x8BEF;&#xFF01;</span></span><br><span class="line">(var + <span class="number">1</span>) = <span class="number">4</span>; <span class="comment">// &#x9519;&#x8BEF;&#xFF01;</span></span><br></pre></td></tr></table></figure><p>&#x5E38;&#x91CF; <code>4</code> &#x548C;&#x8868;&#x8FBE;&#x5F0F; <code>var + 1</code> &#x90FD;&#x4E0D;&#x662F;&#x5DE6;&#x503C;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5B83;&#x4EEC;&#x662F;&#x53F3;&#x503C;&#xFF09;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x90FD;&#x662F;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x4E34;&#x65F6;&#x7ED3;&#x679C;&#xFF0C;&#x800C;&#x6CA1;&#x6709;&#x53EF;&#x8BC6;&#x522B;&#x7684;&#x5185;&#x5B58;&#x4F4D;&#x7F6E;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x53EA;&#x5B58;&#x5728;&#x4E8E;&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x4E34;&#x65F6;&#x5BC4;&#x5B58;&#x5668;&#x4E2D;&#xFF09;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x8D4B;&#x503C;&#x7ED9;&#x5B83;&#x4EEC;&#x662F;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x8BED;&#x4E49;&#x4E0A;&#x7684;&#x610F;&#x4E49;&#x7684;&#x2014;&#x2014;&#x6211;&#x4EEC;&#x8D4B;&#x503C;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><h1 id="&#x53F3;&#x503C;&#x5F15;&#x7528;&#x6CA1;&#x5199;&#x5B8C;">&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF08;&#x6CA1;&#x5199;&#x5B8C;&#xFF09;</h1><p>&#x53F3;&#x503C;&#x662F;&#x7531;&#x4E24;&#x4E2A;&#x6982;&#x5FF5;&#x6784;&#x6210;&#xFF0C;&#x5C06;&#x4EA1;&#x503C;&#x548C;&#x7EAF;&#x53F3;&#x503C;&#x3002; &#x7EAF;&#x53F3;&#x503C;&#x662F;&#x7528;&#x4E8E;&#x8BC6;&#x522B;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#x548C;&#x4E00;&#x4E9B;&#x4E0D;&#x8DDF;&#x5BF9;&#x8C61;&#x5173;&#x8054;&#x7684;&#x503C;&#xFF0C;&#x6BD4;&#x5982; 1+3 &#x4EA7;&#x751F;&#x7684;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#x503C;&#xFF0C;&#x5C06;&#x4EA1;&#x503C;&#x901A;&#x5E38;&#x662F;&#x6307;&#x5177;&#x6709;&#x8F6C;&#x79FB;&#x8BED;&#x4E49;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x6BD4;&#x5982;&#x8FD4;&#x56DE;&#x53F3;&#x503C;&#x5F15;&#x7528; T&amp;&amp;&#x7684;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#x7B49;&#x3002;</p><p>&#x53F3;&#x503C;&#x5F15;&#x7528;&#x5C31;&#x662F;&#x5BF9;&#x4E00;&#x4E2A;&#x53F3;&#x503C;&#x8FDB;&#x884C;&#x5F15;&#x7528;&#x7684;&#x7C7B;&#x578B;&#x3002; &#x7531;&#x4E8E;&#x53F3;&#x503C;&#x901A;&#x5E38;&#x4E0D;&#x5177;&#x6709;&#x540D;&#x5B57;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x53F3;&#x503C;&#x8868;&#x8FBE;&#x5F0F;&#x83B7;&#x5F97;&#x5176;&#x5F15;&#x7528;&#xFF0C;&#x6BD4;&#x5982;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T &amp;&amp; a=ReturnRvale();</span><br></pre></td></tr></table></figure><p>&#x5047;&#x8BBE; <code>ReturnRvalue()</code>&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x53F3;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x4E0A;&#x8FF0;&#x8BED;&#x53E5;&#x58F0;&#x660E;&#x4E86;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; a &#x7684;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x5176;&#x503C;&#x7B49;&#x4E8E; <code>ReturnRvalue</code> &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x3002;</p><p>&#x53F3;&#x503C;&#x5F15;&#x7528;&#x662F; C++11 &#x4E2D;&#x5F15;&#x5165;&#x7684;&#x65B0;&#x7279;&#x6027; , &#x5B83;&#x5B9E;&#x73B0;&#x4E86;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#xFF08;move semantic&#xFF09;&#x548C;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;&#xFF08;perfect forward&#xFF09;&#x3002; &#x5B83;&#x7684;&#x4E3B;&#x8981;&#x76EE;&#x7684;&#x6709;&#x4E24;&#x4E2A;&#x65B9;&#x9762;&#xFF1A;</p><ol type="1"><li>&#x6D88;&#x9664;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x4EA4;&#x4E92;&#x65F6;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x5BF9;&#x8C61;&#x62F7;&#x8D1D;&#xFF0C;&#x8282;&#x7701;&#x8FD0;&#x7B97;&#x5B58;&#x50A8;&#x8D44;&#x6E90;&#xFF0C;&#x63D0;&#x9AD8;&#x6548;&#x7387;&#x3002;</li><li>&#x80FD;&#x591F;&#x66F4;&#x7B80;&#x6D01;&#x660E;&#x786E;&#x5730;&#x5B9A;&#x4E49;&#x6CDB;&#x578B;&#x51FD;&#x6570;&#x3002;</li></ol><p>&#x5173;&#x4E8E;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#xFF08;move semantic&#xFF09;&#x548C;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;&#xFF08;perfect forward&#xFF09;&#xFF0C;&#x8BF7;&#x67E5;&#x9605;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF08;To Do&#xFF09;</p><h1 id="&#x5806;&#x548C;&#x6808;&#x7684;&#x533A;&#x522B;">&#x5806;&#x548C;&#x6808;&#x7684;&#x533A;&#x522B;</h1><ol type="1"><li><p>&#x7533;&#x8BF7;&#x65B9;&#x5F0F;</p><p>&#x6808;&#x7531;&#x7CFB;&#x7EDF;&#x81EA;&#x52A8;&#x5206;&#x914D;&#x548C;&#x7BA1;&#x7406;&#xFF0C;&#x5806;&#x7531;&#x7A0B;&#x5E8F;&#x5458;&#x624B;&#x52A8;&#x5206;&#x914D;&#x548C;&#x7BA1;&#x7406;&#x3002;</p></li><li><p>&#x6548;&#x7387;</p><p>&#x6808;&#x7531;&#x7CFB;&#x7EDF;&#x5206;&#x914D;&#xFF0C;&#x901F;&#x5EA6;&#x5FEB;&#xFF0C;&#x4E0D;&#x4F1A;&#x6709;&#x5185;&#x5B58;&#x788E;&#x7247;&#x3002;</p><p>&#x5806;&#x7531;&#x7A0B;&#x5E8F;&#x5458;&#x5206;&#x914D;&#xFF0C;&#x901F;&#x5EA6;&#x8F83;&#x6162;&#xFF0C;&#x53EF;&#x80FD;&#x7531;&#x4E8E;&#x64CD;&#x4F5C;&#x4E0D;&#x5F53;&#x4EA7;&#x751F;&#x5185;&#x5B58;&#x788E;&#x7247;&#x3002;</p></li><li><p>&#x6269;&#x5C55;&#x65B9;&#x5411;</p><p>&#x6808;&#x4ECE;&#x9AD8;&#x5730;&#x5740;&#x5411;&#x4F4E;&#x5730;&#x5740;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#xFF0C;&#x5806;&#x7531;&#x4F4E;&#x5730;&#x5740;&#x5411;&#x9AD8;&#x5730;&#x5740;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#x3002;</p></li><li><p>&#x7A0B;&#x5E8F;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x662F;&#x4F7F;&#x7528;&#x7684;&#x6808;&#x7A7A;&#x95F4;&#xFF0C;new/malloc &#x52A8;&#x6001;&#x7533;&#x8BF7;&#x7684;&#x5185;&#x5B58;&#x662F;&#x5806;&#x7A7A;&#x95F4;&#xFF0C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x65F6;&#x4F1A;&#x8FDB;&#x884C;&#x5F62;&#x53C2;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x538B;&#x6808;&#x51FA;&#x6808;&#xFF0C;&#x4E5F;&#x662F;&#x7528;&#x7684;&#x6808;&#x7A7A;&#x95F4;&#x3002;</p></li><li><p>&#x6808;&#x7A7A;&#x95F4;&#x7684;&#x6700;&#x5927;&#x503C;&#x9ED8;&#x8BA4;&#x662F;1M&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x6574;&#x3002;</p></li></ol><h1 id="new&#x548C;malloc&#x7684;&#x533A;&#x522B;">new&#x548C;malloc&#x7684;&#x533A;&#x522B;</h1><ol type="1"><li>new &#x5206;&#x914D;&#x5185;&#x5B58;&#x6309;&#x7167;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x5206;&#x914D;&#xFF0C;malloc &#x5206;&#x914D;&#x5185;&#x5B58;&#x6309;&#x7167;&#x6307;&#x5B9A;&#x7684;&#x5927;&#x5C0F;&#x5206;&#x914D;&#xFF1B;</li><li>new &#x8FD4;&#x56DE;&#x7684;&#x662F;&#x6307;&#x5B9A;&#x5BF9;&#x8C61;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x800C; malloc &#x8FD4;&#x56DE;&#x7684;&#x662F; void*&#xFF0C;&#x56E0;&#x6B64; malloc &#x7684;&#x8FD4;&#x56DE;&#x503C;&#x4E00;&#x822C;&#x90FD;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x7C7B;&#x578B;&#x8F6C;&#x5316;&#x3002;</li><li>new &#x4E0D;&#x4EC5;&#x5206;&#x914D;&#x4E00;&#x6BB5;&#x5185;&#x5B58;&#xFF0C;&#x800C;&#x4E14;&#x4F1A;&#x8C03;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;malloc &#x4E0D;&#x4F1A;&#x3002;</li><li>new &#x5206;&#x914D;&#x7684;&#x5185;&#x5B58;&#x8981;&#x7528; delete &#x9500;&#x6BC1;&#xFF0C;malloc &#x8981;&#x7528; free &#x6765;&#x9500;&#x6BC1;&#xFF1B;delete &#x9500;&#x6BC1;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x8C03;&#x7528;&#x5BF9;&#x8C61;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x800C; free &#x5219;&#x4E0D;&#x4F1A;&#x3002;</li><li>new &#x662F;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x7B26;&#x53EF;&#x4EE5;&#x91CD;&#x8F7D;&#xFF0C;malloc &#x662F;&#x4E00;&#x4E2A;&#x5E93;&#x51FD;&#x6570;&#x3002;</li><li>malloc &#x5206;&#x914D;&#x7684;&#x5185;&#x5B58;&#x4E0D;&#x591F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x7528; realloc &#x6269;&#x5BB9;&#x3002; &#x6269;&#x5BB9;&#x7684;&#x539F;&#x7406;&#xFF1F; new &#x6CA1;&#x7528;&#x8FD9;&#x6837;&#x64CD;&#x4F5C;&#x3002;</li><li>new &#x5982;&#x679C;&#x5206;&#x914D;&#x5931;&#x8D25;&#x4E86;&#x4F1A;&#x629B;&#x51FA; bad_malloc &#x7684;&#x5F02;&#x5E38;&#xFF0C;&#x800C; malloc &#x5931;&#x8D25;&#x4E86;&#x4F1A;&#x8FD4;&#x56DE; NULL&#x3002;</li><li>&#x7533;&#x8BF7;&#x6570;&#x7EC4;&#x65F6;&#xFF1A;new[]&#x4E00;&#x6B21;&#x5206;&#x914D;&#x6240;&#x6709;&#x5185;&#x5B58;&#xFF0C;&#x591A;&#x6B21;&#x8C03;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x642D;&#x914D;&#x4F7F;&#x7528; delete[]&#xFF0C;delete[]&#x591A;&#x6B21;&#x8C03;&#x7528;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x9500;&#x6BC1;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x3002; &#x800C; malloc &#x5219;&#x53EA;&#x80FD; sizeof(int) * n&#x3002;</li></ol><h1 id="&#x865A;&#x51FD;&#x6570;&#x8868;&#x5177;&#x4F53;&#x662F;&#x600E;&#x6837;&#x5B9E;&#x73B0;&#x8FD0;&#x884C;&#x65F6;&#x591A;&#x6001;&#x7684;">&#x865A;&#x51FD;&#x6570;&#x8868;&#x5177;&#x4F53;&#x662F;&#x600E;&#x6837;&#x5B9E;&#x73B0;&#x8FD0;&#x884C;&#x65F6;&#x591A;&#x6001;&#x7684;</h1><p>&#x5B50;&#x7C7B;&#x82E5;&#x91CD;&#x5199;&#x7236;&#x7C7B;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x865A;&#x51FD;&#x6570;&#x8868;&#x4E2D;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x5730;&#x5740;&#x4F1A;&#x88AB;&#x66FF;&#x6362;&#xFF0C;&#x5BF9;&#x4E8E;&#x5B58;&#x5728;&#x865A;&#x51FD;&#x6570;&#x7684;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5728;VS &#x4E2D;&#xFF0C;&#x5BF9;&#x8C61;&#x7684;&#x5BF9;&#x8C61;&#x6A21;&#x578B;&#x7684;&#x5934;&#x90E8;&#x5B58;&#x653E;&#x6307;&#x5411;&#x865A;&#x51FD;&#x6570;&#x8868;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x901A;&#x8FC7;&#x8BE5;&#x673A;&#x5236;&#x5B9E;&#x73B0;&#x591A;&#x6001;&#x3002;</p><h1 id="c&#x662F;&#x5982;&#x4F55;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;">C++&#x662F;&#x5982;&#x4F55;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;</h1><p>&#x6BCF;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x90FD;&#x4F1A;&#x5206;&#x914D;&#x51FD;&#x6570;&#x6808;&#xFF0C;&#x5728;&#x6808;&#x5185;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x3002; &#x8C03;&#x7528;&#x524D;&#xFF0C;&#x5148;&#x628A;&#x8FD4;&#x56DE;&#x5730;&#x5740;&#x538B;&#x6808;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x5F53;&#x524D;&#x51FD;&#x6570;&#x7684; esp &#x6307;&#x9488;&#x538B;&#x6808;&#x3002;</p><p>&#x53C2;&#x6570;&#x662F;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x538B;&#x6808;&#x3002;</p><p>&#x8FD4;&#x56DE;&#x503C;&#xFF1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#xFF0C;&#x5C06;&#x4ED6;&#x7684;&#x5F15;&#x7528;&#x4F5C;&#x4E3A;&#x51FD;&#x6570;&#x53C2;&#x6570;&#xFF0C;&#x4F20;&#x5165;&#x5230;&#x51FD;&#x6570;&#x5185;&#x3002;</p><hr><p>STL&#x76F8;&#x5173;</p><h1 id="stl&#x7684;&#x7EC4;&#x6210;">STL&#x7684;&#x7EC4;&#x6210;</h1><p>&#x5BB9;&#x5668;&#xFF0C;&#x8FED;&#x4EE3;&#x5668;&#xFF0C;&#x4EFF;&#x51FD;&#x6570;&#xFF0C;&#x7B97;&#x6CD5;&#xFF0C;&#x5206;&#x914D;&#x5668;&#xFF0C;&#x914D;&#x63A5;&#x5668;</p><p>&#x4ED6;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF1A;&#x5206;&#x914D;&#x5668;&#x7ED9;&#x5BB9;&#x5668;&#x5206;&#x914D;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#xFF0C;&#x7B97;&#x6CD5;&#x901A;&#x8FC7;&#x8FED;&#x4EE3;&#x5668;&#x83B7;&#x53D6;&#x5BB9;&#x5668;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4EFF;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x534F;&#x52A9;&#x7B97;&#x6CD5;&#x5B8C;&#x6210;&#x5404;&#x79CD;&#x64CD;&#x4F5C;&#xFF0C;&#x914D;&#x63A5;&#x5668;&#x7528;&#x6765;&#x5957;&#x63A5;&#x9002;&#x914D;&#x4EFF;&#x51FD;&#x6570; &#x3002;</p><h1 id="map&#x548C;set&#x7684;&#x533A;&#x522B;">map&#x548C;set&#x7684;&#x533A;&#x522B;</h1><p>map &#x548C; set &#x90FD;&#x662F; C++&#x7684;&#x5173;&#x8054;&#x5BB9;&#x5668;&#xFF0C;&#x5176;&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x90FD;&#x662F;&#x7EA2;&#x9ED1;&#x6811;&#xFF08;RB-Tree&#xFF09; &#x3002; &#x7531;&#x4E8E; map &#x548C; set &#x6240;&#x5F00;&#x653E;&#x7684;&#x5404;&#x79CD;&#x64CD;&#x4F5C;&#x63A5;&#x53E3;&#xFF0C;RB-tree &#x4E5F;&#x90FD;&#x63D0;&#x4F9B;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684; map &#x548C; set &#x7684;&#x64CD;&#x4F5C;&#x884C;&#x4E3A;&#xFF0C;&#x90FD;&#x53EA;&#x662F;&#x8F6C;&#x8C03; RB-tree &#x7684;&#x64CD;&#x4F5C;&#x884C;&#x4E3A;&#x3002;</p><p>map &#x548C; set &#x533A;&#x522B; &#xFF1A;</p><ol type="1"><li>map &#x4E2D;&#x7684;&#x5143;&#x7D20;&#x662F; key-value&#xFF08;&#x5173;&#x952E;&#x5B57;&#x2014;&#x503C;&#xFF09; &#x5BF9;&#xFF1A;&#x5173;&#x952E;&#x5B57;&#x8D77;&#x5230;&#x7D22;&#x5F15;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x503C;&#x5219;&#x8868;&#x793A;&#x4E0E;&#x7D22;&#x5F15;&#x76F8;&#x5173;&#x8054;&#x7684;&#x6570;&#x636E;&#xFF1B;Set &#x4E0E;&#x4E4B;&#x76F8;&#x5BF9;&#x5C31;&#x662F;&#x5173;&#x952E;&#x5B57;&#x7684;&#x7B80;&#x5355;&#x96C6;&#x5408;&#xFF0C;set &#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#x3002;</li><li>set &#x7684;&#x8FED;&#x4EE3;&#x5668;&#x662F; const &#x7684;&#xFF0C;&#x4E0D;&#x5141;&#x8BB8;&#x4FEE;&#x6539;&#x5143;&#x7D20;&#x7684;&#x503C;&#xFF1B;map &#x5141;&#x8BB8;&#x4FEE;&#x6539; value&#xFF0C;&#x4F46;&#x4E0D;&#x5141;&#x8BB8;&#x4FEE;&#x6539;key&#x3002; &#x5176;&#x539F;&#x56E0;&#x662F;&#x56E0;&#x4E3A;map &#x548C; set &#x662F;&#x6839;&#x636E;&#x5173;&#x952E;&#x5B57;&#x6392;&#x5E8F;&#x6765;&#x4FDD;&#x8BC1;&#x5176;&#x6709;&#x5E8F;&#x6027;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5141;&#x8BB8;&#x4FEE;&#x6539; key &#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x9996;&#x5148;&#x9700;&#x8981;&#x5220;&#x9664;&#x8BE5;&#x952E;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x8282;&#x5E73;&#x8861;&#xFF0C;&#x518D;&#x63D2;&#x5165;&#x4FEE;&#x6539;&#x540E;&#x7684;&#x952E;&#x503C;&#xFF0C;&#x8C03;&#x8282;&#x5E73;&#x8861;&#xFF0C;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C;&#x4E25;&#x91CD;&#x7834;&#x574F;&#x4E86; map &#x548C; set &#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x5BFC;&#x81F4; iterator &#x5931;&#x6548;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x5E94;&#x8BE5;&#x6307;&#x5411;&#x6539;&#x53D8;&#x524D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x8FD8;&#x662F;&#x6307;&#x5411;&#x6539;&#x53D8;&#x540E;&#x7684;&#x4F4D;&#x7F6E;&#x3002; &#x6240;&#x4EE5; STL &#x4E2D;&#x5C06;set &#x7684;&#x8FED;&#x4EE3;&#x5668;&#x8BBE;&#x7F6E;&#x6210; const&#xFF0C;&#x4E0D;&#x5141;&#x8BB8;&#x4FEE;&#x6539;&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x503C;&#xFF1B;&#x800C; map &#x7684;&#x8FED;&#x4EE3;&#x5668;&#x5219;&#x4E0D;&#x5141;&#x8BB8;&#x4FEE;&#x6539; key &#x503C;&#xFF0C;&#x5141;&#x8BB8;&#x4FEE;&#x6539; value &#x503C;&#x3002;</li><li>map &#x652F;&#x6301;&#x4E0B;&#x6807;&#x64CD;&#x4F5C;&#xFF0C;set &#x4E0D;&#x652F;&#x6301;&#x4E0B;&#x6807;&#x64CD;&#x4F5C;&#x3002; map &#x53EF;&#x4EE5;&#x7528; key &#x505A;&#x4E0B;&#x6807;&#xFF0C;map &#x7684;&#x4E0B;&#x6807;&#x8FD0;&#x7B97;&#x7B26;[ ] &#x5C06;&#x5173;&#x952E;&#x7801;&#x4F5C;&#x4E3A;&#x4E0B;&#x6807;&#x53BB;&#x6267;&#x884C;&#x67E5;&#x627E;&#xFF0C;&#x5982;&#x679C;&#x5173;&#x952E;&#x7801;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x5177;&#x6709;&#x8BE5;&#x5173;&#x952E;&#x7801;&#x548C; mapped_type&#x7C7B;&#x578B;&#x9ED8;&#x8BA4;&#x503C;&#x7684;&#x5143;&#x7D20;&#x81F3; map &#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x4E0B;&#x6807;&#x8FD0;&#x7B97;&#x7B26;[ ]&#x5728; map &#x5E94;&#x7528;&#x4E2D;&#x9700;&#x8981;&#x614E;&#x7528;&#xFF0C;const_map &#x4E0D;&#x80FD;&#x7528;&#xFF0C;&#x53EA;&#x5E0C;&#x671B;&#x786E;&#x5B9A;&#x67D0;&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x503C;&#x662F;&#x5426;&#x5B58;&#x5728;&#x800C;&#x4E0D;&#x5E0C;&#x671B;&#x63D2;&#x5165;&#x5143;&#x7D20;&#x65F6;&#x4E5F;&#x4E0D;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;&#xFF0C;mapped_type &#x7C7B;&#x578B;&#x6CA1;&#x6709;&#x9ED8;&#x8BA4;&#x503C;&#x4E5F;&#x4E0D;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;&#x3002; &#x5982;&#x679C; find &#x80FD;&#x89E3;&#x51B3;&#x9700;&#x8981;&#xFF0C;&#x5C3D;&#x53EF;&#x80FD;&#x7528; find&#x3002;</li></ol><h1 id="&#x51E0;&#x79CD;map">&#x51E0;&#x79CD;map</h1><p>map&#xFF0C;unordered_map&#xFF0C;multimap&#xFF0C;unordered_multimap</p><p>&#x533A;&#x522B;&#xFF1A;</p><ul><li>&#x5E26;unordered&#x7684;&#xFF0C;&#x662F;&#x65E0;&#x5E8F;&#x7684;&#xFF0C;&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x662F;&#x54C8;&#x5E0C;&#x8868;&#x3002;</li><li>&#x5E26;multi&#x7684;&#xFF0C;&#x5141;&#x8BB8;key&#x503C;&#x91CD;&#x590D;&#x3002;</li></ul><p><strong>map&#xFF1A;</strong></p><p>&#x6620;&#x5C04;&#xFF0C;map &#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x662F; pair&#xFF0C;&#x540C;&#x65F6;&#x62E5;&#x6709;&#x5B9E;&#x503C;&#xFF08;value&#xFF09; &#x548C;&#x952E;&#x503C;&#xFF08;key&#xFF09; &#x3002; pair &#x7684;&#x7B2C;&#x4E00;&#x5143;&#x7D20;&#x88AB;&#x89C6;&#x4E3A;&#x952E;&#x503C;&#xFF0C;&#x7B2C;&#x4E8C;&#x5143;&#x7D20;&#x88AB;&#x89C6;&#x4E3A;&#x5B9E;&#x503C;&#x3002; &#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x4F1A;&#x6839;&#x636E;&#x5143;&#x7D20;&#x7684;&#x952E;&#x503C;&#x81EA;&#x52A8;&#x88AB;&#x6392;&#x5E8F;&#x3002; &#x4E0D;&#x5141;&#x8BB8;&#x952E;&#x503C;&#x91CD;&#x590D;&#x3002;</p><p>&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#xFF1A;&#x7EA2;&#x9ED1;&#x6811;</p><p>&#x9002;&#x7528;&#x573A;&#x666F;&#xFF1A;&#x6709;&#x5E8F;&#x952E;&#x503C;&#x5BF9;&#x4E0D;&#x91CD;&#x590D;&#x6620;&#x5C04;</p><p><strong>Multimap&#xFF1A;</strong></p><p>&#x591A;&#x91CD;&#x6620;&#x5C04;&#x3002; multimap &#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x662F; pair&#xFF0C;&#x540C;&#x65F6;&#x62E5;&#x6709;&#x5B9E;&#x503C;&#xFF08;value&#xFF09; &#x548C;&#x952E;&#x503C;&#xFF08;key&#xFF09; &#x3002; pair&#x7684;&#x7B2C;&#x4E00;&#x5143;&#x7D20;&#x88AB;&#x89C6;&#x4E3A;&#x952E;&#x503C;&#xFF0C;&#x7B2C;&#x4E8C;&#x5143;&#x7D20;&#x88AB;&#x89C6;&#x4E3A;&#x5B9E;&#x503C;&#x3002; &#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x4F1A;&#x6839;&#x636E;&#x5143;&#x7D20;&#x7684;&#x952E;&#x503C;&#x81EA;&#x52A8;&#x88AB;&#x6392;&#x5E8F;&#x3002; &#x5141;&#x8BB8;&#x952E;&#x503C;&#x91CD;&#x590D;&#x3002;</p><p>&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#xFF1A;&#x7EA2;&#x9ED1;&#x6811;</p><p>&#x9002;&#x7528;&#x573A;&#x666F;&#xFF1A;&#x6709;&#x5E8F;&#x952E;&#x503C;&#x5BF9;&#x53EF;&#x91CD;&#x590D;&#x6620;&#x5C04;</p><h1 id="vector&#x548C;list">vector&#x548C;list</h1><p><strong>vector&#xFF1A;</strong></p><p>&#x8FDE;&#x7EED;&#x5B58;&#x50A8;&#x7684;&#x5BB9;&#x5668;&#xFF0C;&#x52A8;&#x6001;&#x6570;&#x7EC4;&#xFF0C;&#x5728;&#x5806;&#x4E0A;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#x3002;</p><ul><li>&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#xFF1A;&#x6570;&#x7EC4;</li><li>&#x4E24;&#x500D;&#x5BB9;&#x91CF;&#x589E;&#x957F;&#xFF1A;<ul><li>vector &#x589E;&#x52A0;&#xFF08;&#x63D2;&#x5165;&#xFF09; &#x65B0;&#x5143;&#x7D20;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x672A;&#x8D85;&#x8FC7;&#x5F53;&#x65F6;&#x7684;&#x5BB9;&#x91CF;&#xFF0C;&#x5219;&#x8FD8;&#x6709;&#x5269;&#x4F59;&#x7A7A;&#x95F4;&#xFF0C;&#x90A3;&#x4E48;&#x76F4;&#x63A5;&#x6DFB;&#x52A0;&#x5230;&#x6700;&#x540E;&#xFF08;&#x63D2;&#x5165;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#xFF09; &#xFF0C;&#x7136;&#x540E;&#x8C03;&#x6574;&#x8FED;&#x4EE3;&#x5668;&#x3002;</li><li>&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5269;&#x4F59;&#x7A7A;&#x95F4;&#x4E86;&#xFF0C;&#x5219;&#x4F1A;&#x91CD;&#x65B0;&#x914D;&#x7F6E;&#x539F;&#x6709;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x7684;&#x4E24;&#x500D;&#x7A7A;&#x95F4;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x539F;&#x7A7A;&#x95F4;&#x5143;&#x7D20;&#x901A;&#x8FC7;&#x590D;&#x5236;&#x7684;&#x65B9;&#x5F0F;&#x521D;&#x59CB;&#x5316;&#x65B0;&#x7A7A;&#x95F4;&#xFF0C;&#x518D;&#x5411;&#x65B0;&#x7A7A;&#x95F4;&#x589E;&#x52A0;&#x5143;&#x7D20;&#xFF0C;&#x6700;&#x540E;&#x6790;&#x6784;&#x5E76;&#x91CA;&#x653E;&#x539F;&#x7A7A;&#x95F4;&#xFF0C;&#x4E4B;&#x524D;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x4F1A;&#x5931;&#x6548;&#x3002;</li></ul></li><li>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;<ul><li>&#x6269;&#x5C55;&#xFF1A;&#x7ECF;&#x8FC7;&#x644A;&#x8FD8;&#x5206;&#x6790;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x662F;O(1)&#x3002;&#x5177;&#x4F53;&#x60C5;&#x51B5;&#xFF1A;<ol type="1"><li>&#x5728;&#x6700;&#x540E;&#x63D2;&#x5165;&#xFF08;&#x7A7A;&#x95F4;&#x591F;&#xFF09; &#xFF1A;&#x5F88;&#x5FEB;</li><li>&#x5728;&#x6700;&#x540E;&#x63D2;&#x5165;&#xFF08;&#x7A7A;&#x95F4;&#x4E0D;&#x591F;&#xFF09; &#xFF1A;&#x9700;&#x8981;&#x5185;&#x5B58;&#x7533;&#x8BF7;&#x548C;&#x91CA;&#x653E;&#xFF0C;&#x4EE5;&#x53CA;&#x5BF9;&#x4E4B;&#x524D;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x62F7;&#x8D1D;&#x3002;</li><li>&#x5728;&#x4E2D;&#x95F4;&#x63D2;&#x5165;&#xFF08;&#x7A7A;&#x95F4;&#x591F;&#xFF09; &#xFF1A;&#x5185;&#x5B58;&#x62F7;&#x8D1D;</li><li>&#x5728;&#x4E2D;&#x95F4;&#x63D2;&#x5165;&#xFF08;&#x7A7A;&#x95F4;&#x4E0D;&#x591F;&#xFF09; &#xFF1A;&#x9700;&#x8981;&#x5185;&#x5B58;&#x7533;&#x8BF7;&#x548C;&#x91CA;&#x653E;&#xFF0C;&#x4EE5;&#x53CA;&#x5BF9;&#x4E4B;&#x524D;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x62F7;&#x8D1D;&#x3002;</li></ol></li></ul></li><li>&#x8BBF;&#x95EE;&#xFF1A;O(1)</li><li>&#x5220;&#x9664;&#xFF1A;&#x5728;&#x6700;&#x540E;&#x5220;&#x9664;&#xFF1A;&#x5F88;&#x5FEB;</li><li>&#x5728;&#x4E2D;&#x95F4;&#x5220;&#x9664;&#xFF1A;&#x5185;&#x5B58;&#x62F7;&#x8D1D;</li><li>&#x9002;&#x7528;&#x573A;&#x666F;&#xFF1A;&#x7ECF;&#x5E38;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#xFF0C;&#x4E14;&#x4E0D;&#x7ECF;&#x5E38;&#x5BF9;&#x975E;&#x5C3E;&#x8282;&#x70B9;&#x8FDB;&#x884C;&#x63D2;&#x5165;&#x5220;&#x9664;&#x3002;</li></ul><p><strong>List</strong></p><p>&#x52A8;&#x6001;&#x94FE;&#x8868;&#xFF0C;&#x5728;&#x5806;&#x4E0A;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#xFF0C;&#x6BCF;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x5143;&#x6570;&#x90FD;&#x4F1A;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#xFF0C;&#x6BCF;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x4F1A;&#x91CA;&#x653E;&#x7A7A;&#x95F4;&#x3002;</p><ul><li><p>&#x5E95;&#x5C42;&#xFF1A;&#x53CC;&#x5411;&#x94FE;&#x8868;</p></li><li>&#x6027;&#x80FD;&#xFF1A;<ul><li>&#x8BBF;&#x95EE;&#xFF1A;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x6027;&#x80FD;&#x5F88;&#x5DEE;&#xFF0C;&#x53EA;&#x80FD;&#x5FEB;&#x901F;&#x8BBF;&#x95EE;&#x5934;&#x5C3E;&#x8282;&#x70B9;&#x3002;</li><li>&#x63D2;&#x5165;&#xFF1A;&#x5F88;&#x5FEB;&#xFF0C;&#x4E00;&#x822C;&#x662F;&#x5E38;&#x6570;&#x5F00;&#x9500;</li><li>&#x5220;&#x9664;&#xFF1A;&#x5F88;&#x5FEB;&#xFF0C;&#x4E00;&#x822C;&#x662F;&#x5E38;&#x6570;&#x5F00;&#x9500;</li><li>&#x9002;&#x7528;&#x573A;&#x666F;&#xFF1A;&#x7ECF;&#x5E38;&#x63D2;&#x5165;&#x5220;&#x9664;&#x5927;&#x91CF;&#x6570;&#x636E;</li></ul></li><li>&#x533A;&#x522B;&#xFF1A;<ol type="1"><li>vector &#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x662F;&#x6570;&#x7EC4;&#xFF1B;list &#x662F;&#x53CC;&#x5411; &#x94FE;&#x8868;&#x3002;</li><li>vector &#x652F;&#x6301;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#xFF0C;list &#x4E0D;&#x652F;&#x6301;&#x3002;</li><li>vector &#x662F;&#x987A;&#x5E8F;&#x5185;&#x5B58;&#xFF0C;list &#x4E0D;&#x662F;&#x3002;</li><li>vector &#x5728;&#x4E2D;&#x95F4;&#x8282;&#x70B9;&#x8FDB;&#x884C;&#x63D2;&#x5165;&#x5220;&#x9664;&#x4F1A;&#x5BFC;&#x81F4;&#x5185;&#x5B58;&#x62F7;&#x8D1D;&#xFF0C;list &#x4E0D;&#x4F1A;&#x3002;</li><li>vector &#x4E00;&#x6B21;&#x6027;&#x5206;&#x914D;&#x597D;&#x5185;&#x5B58;&#xFF0C;&#x4E0D;&#x591F;&#x65F6;&#x624D;&#x8FDB;&#x884C; 2 &#x500D;&#x6269;&#x5BB9;&#xFF1B;list &#x6BCF;&#x6B21;&#x63D2;&#x5165;&#x65B0;&#x8282;&#x70B9;&#x90FD;&#x4F1A;&#x8FDB;&#x884C;&#x5185;&#x5B58;&#x7533;&#x8BF7;&#x3002;</li><li>vector &#x968F;&#x673A;&#x8BBF;&#x95EE;&#x6027;&#x80FD;&#x597D;&#xFF0C;&#x63D2;&#x5165;&#x5220;&#x9664;&#x6027;&#x80FD;&#x5DEE;&#xFF1B;list &#x968F;&#x673A;&#x8BBF;&#x95EE;&#x6027;&#x80FD;&#x5DEE;&#xFF0C;&#x63D2;&#x5165;&#x5220;&#x9664;&#x6027;&#x80FD;&#x597D;&#x3002;</li></ol></li></ul><h1 id="&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x4F5C;&#x7528;">&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x4F5C;&#x7528;</h1><p>&#x7528;&#x4E8E;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x987A;&#x5E8F;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;&#x805A;&#x5408;&#x5BF9;&#x8C61;&#x4E2D;&#x5404;&#x4E2A;&#x5143;&#x7D20;, &#x800C;&#x53C8;&#x4E0D;&#x9700;&#x66B4;&#x9732;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x5185;&#x90E8;&#x8868;&#x793A;&#x3002;</p><p>Iterator &#x6A21; &#x5F0F;&#x662F;&#x8FD0;&#x7528;&#x4E8E;&#x805A;&#x5408;&#x5BF9;&#x8C61;&#x7684;&#x4E00;&#x79CD;&#x6A21;&#x5F0F;&#xFF0C;&#x901A;&#x8FC7;&#x8FD0;&#x7528;&#x8BE5;&#x6A21;&#x5F0F;&#xFF0C;&#x4F7F;&#x5F97;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x77E5;&#x9053;&#x5BF9;&#x8C61;&#x5185;&#x90E8;&#x8868;&#x793A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x987A;&#x5E8F;&#xFF08;&#x7531; iterator &#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#xFF09; &#x8BBF;&#x95EE;&#x805A;&#x5408;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x5404;&#x4E2A;&#x5143;&#x7D20;&#x3002;</p><p>&#x5237;&#x9898;&#x6700;&#x5E38;&#x7528;&#x7684;&#xFF1A;&#x904D;&#x5386;map&#x3001;set&#xFF08;&#x6709;&#x5E8F;&#x7684;&#xFF09;</p><h1 id="&#x8FED;&#x4EE3;&#x5668;&#x548C;&#x6307;&#x9488;&#x7684;&#x533A;&#x522B;">&#x8FED;&#x4EE3;&#x5668;&#x548C;&#x6307;&#x9488;&#x7684;&#x533A;&#x522B;</h1><p>&#x8FED;&#x4EE3;&#x5668;&#x4E0D;&#x662F;&#x6307;&#x9488;&#xFF0C;&#x662F;&#x7C7B;&#x6A21;&#x677F;&#xFF0C;&#x8868;&#x73B0;&#x7684;&#x50CF;&#x6307;&#x9488;&#x3002;&#x4ED6;&#x53EA;&#x662F;&#x6A21;&#x62DF;&#x4E86;&#x6307;&#x9488;&#x7684;&#x4E00;&#x4E9B;&#x529F;&#x80FD;&#xFF0C;&#x901A;&#x8FC7;&#x91CD;&#x8F7D;&#x4E86;&#x6307;&#x9488;&#x7684;&#x4E00;&#x4E9B;&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;<code>-&gt;</code>&#x3001;<code>*</code>&#x3001;<code>++</code>&#x3001;<code>--</code>&#x7B49;&#x3002;&#x8FED;&#x4EE3;&#x5668;&#x5C01;&#x88C5;&#x4E86;&#x6307;&#x9488;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x201C;&#x53EF;&#x904D;&#x5386; STL&#xFF08; Standard Template Library&#xFF09;&#x5BB9;&#x5668;&#x5185;&#x5168;&#x90E8;&#x6216;&#x90E8;&#x5206;&#x5143;&#x7D20;&#x201D; &#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x672C;&#x8D28;&#x662F;&#x5C01;&#x88C5;&#x4E86;&#x539F;&#x751F;&#x6307;&#x9488;&#xFF0C;&#x662F;&#x6307;&#x9488;&#x6982;&#x5FF5;&#x7684;&#x4E00;&#x79CD;&#x63D0;&#x5347;&#xFF08;lift&#xFF09;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x6BD4;&#x6307;&#x9488;&#x66F4;&#x9AD8;&#x7EA7;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x79CD;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;&#x4ED6;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6765;&#x5B9E;&#x73B0;&#x4E0D;&#x540C;&#x7684;++&#xFF0C;--&#x7B49;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x8FED;&#x4EE3;&#x5668;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x5BF9;&#x8C61;&#x5F15;&#x7528;&#x800C;&#x4E0D;&#x662F;&#x5BF9;&#x8C61;&#x7684;&#x503C;&#xFF0C;&#x6240;&#x4EE5; cout &#x53EA;&#x80FD;&#x8F93;&#x51FA;&#x8FED;&#x4EE3;&#x5668;&#x4F7F;&#x7528;*&#x53D6;&#x503C;&#x540E;&#x7684;&#x503C;&#x800C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x5176;&#x81EA;&#x8EAB;&#x3002;</p><h1 id="&#x8FED;&#x4EE3;&#x5668;&#x662F;&#x5982;&#x4F55;&#x5220;&#x9664;&#x5143;&#x7D20;&#x7684;">&#x8FED;&#x4EE3;&#x5668;&#x662F;&#x5982;&#x4F55;&#x5220;&#x9664;&#x5143;&#x7D20;&#x7684;</h1><ol type="1"><li>&#x5BF9;&#x4E8E;&#x5E8F;&#x5217;&#x5BB9;&#x5668; vector,deque &#x6765;&#x8BF4;&#xFF0C;&#x4F7F;&#x7528;erase(itertor)&#x540E;&#xFF0C;&#x540E;&#x8FB9;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x90FD;&#x4F1A;&#x5931;&#x6548;&#xFF0C;&#x4F46;&#x662F;&#x540E;&#x8FB9;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x4F1A;&#x5F80;&#x524D;&#x79FB;&#x52A8;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F46;&#x662F; erase &#x4F1A;&#x8FD4;&#x56DE;&#x4E0B;&#x4E00;&#x4E2A;&#x6709;&#x6548;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#xFF1B;</li><li>&#x5BF9;&#x4E8E;&#x5173;&#x8054;&#x5BB9;&#x5668; map set &#x6765;&#x8BF4;&#xFF0C;&#x4F7F;&#x7528;&#x4E86;erase(iterator)&#x540E;&#xFF0C;&#x5F53;&#x524D;&#x5143;&#x7D20;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x5931;&#x6548;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x7ED3;&#x6784;&#x662F;&#x7EA2;&#x9ED1;&#x6811;&#xFF0C;&#x5220;&#x9664;&#x5F53;&#x524D;&#x5143;&#x7D20;&#x7684;&#xFF0C;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8C03;&#x7528; erase &#x4E4B;&#x524D;&#xFF0C;&#x8BB0;&#x5F55;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x5373;&#x53EF;&#x3002;</li><li>&#x5BF9;&#x4E8E; list&#x6765;&#x8BF4;&#xFF0C;&#x5B83;&#x4F7F;&#x7528;&#x4E86;&#x4E0D;&#x8FDE;&#x7EED;&#x5206;&#x914D;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x7684; erase &#x65B9;&#x6CD5;&#x4E5F;&#x4F1A;&#x8FD4;&#x56DE;&#x4E0B;&#x4E00;&#x4E2A;&#x6709;&#x6548;&#x7684; iterator&#x3002;</li></ol><h1 id="resize&#x548C;reserve&#x7684;&#x533A;&#x522B;">resize&#x548C;reserve&#x7684;&#x533A;&#x522B;</h1><p>resize()&#xFF1A;&#x6539;&#x53D8;&#x5F53;&#x524D;&#x5BB9;&#x5668;&#x5185;&#x542B;&#x6709;&#x5143;&#x7D20;&#x7684;&#x6570;&#x91CF;(size())</p><p>reserve()&#xFF1A;&#x6539;&#x53D8;&#x5F53;&#x524D;&#x5BB9;&#x5668;&#x7684;&#x6700;&#x5927;&#x5BB9;&#x91CF;&#xFF08;capacity&#xFF09; ,&#x5B83;&#x4E0D;&#x4F1A;&#x751F;&#x6210;&#x5143;&#x7D20;&#xFF0C;&#x53EA;&#x662F;&#x786E;&#x5B9A;&#x8FD9;&#x4E2A;&#x5BB9;&#x5668;&#x5141;&#x8BB8;&#x653E;&#x5165;&#x591A;&#x5C11;&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x679C; reserve(len)&#x7684;&#x503C;&#x5927;&#x4E8E;&#x5F53;&#x524D;&#x7684; capacity()&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x91CD;&#x65B0;&#x5206;&#x914D;&#x4E00;&#x5757;&#x80FD;&#x5B58; len &#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x4E4B;&#x524D; v.size()&#x4E2A;&#x5BF9;&#x8C61;&#x901A;&#x8FC7; copy construtor &#x590D;&#x5236;&#x8FC7;&#x6765;&#xFF0C;&#x9500;&#x6BC1;&#x4E4B;&#x524D;&#x7684;&#x5185;&#x5B58;&#xFF1B;</p><h1 id="&#x8BBF;&#x95EE;&#x6743;&#x9650;">&#x8BBF;&#x95EE;&#x6743;&#x9650;</h1><p>C++&#x901A;&#x8FC7; public&#x3001;protected&#x3001;private &#x4E09;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#x6765;&#x63A7;&#x5236;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x548C;&#x6210;&#x5458;&#x51FD;&#x6570;&#x7684;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#xFF0C;&#x5B83;&#x4EEC;&#x5206;&#x522B;&#x8868;&#x793A;&#x516C;&#x6709;&#x7684;&#x3001;&#x53D7;&#x4FDD;&#x62A4;&#x7684;&#x3001;&#x79C1;&#x6709;&#x7684;&#xFF0C;&#x88AB;&#x79F0;&#x4E3A;&#x6210;&#x5458;&#x8BBF;&#x95EE;&#x9650;&#x5B9A;&#x7B26;&#x3002; &#x5728;&#x7C7B;&#x7684;&#x5185;&#x90E8;&#xFF08;&#x5B9A;&#x4E49;&#x7C7B;&#x7684;&#x4EE3;&#x7801;&#x5185;&#x90E8;&#xFF09; &#xFF0C;&#x65E0;&#x8BBA;&#x6210;&#x5458;&#x88AB;&#x58F0;&#x660E;&#x4E3A; public&#x3001;protected &#x8FD8;&#x662F; private&#xFF0C;&#x90FD;&#x662F;&#x53EF;&#x4EE5;&#x4E92;&#x76F8;&#x8BBF;&#x95EE;&#x7684;&#xFF0C;&#x6CA1;&#x6709;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x7684;&#x9650;&#x5236;&#x3002; &#x5728;&#x7C7B;&#x7684;&#x5916;&#x90E8;&#xFF08;&#x5B9A;&#x4E49;&#x7C7B;&#x7684;&#x4EE3;&#x7801;&#x4E4B;&#x5916;&#xFF09; &#xFF0C;&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x5BF9;&#x8C61;&#x8BBF;&#x95EE;&#x6210;&#x5458;&#xFF0C;&#x5E76;&#x4E14;&#x901A;&#x8FC7;&#x5BF9;&#x8C61;&#x53EA;&#x80FD;&#x8BBF;&#x95EE; public &#x5C5E;&#x6027;&#x7684;&#x6210;&#x5458;&#xFF0C;&#x4E0D;&#x80FD;&#x8BBF;&#x95EE; private&#x3001;protected &#x5C5E;&#x6027;&#x7684;&#x6210;&#x5458;&#x3002;</p><h1 id="struct&#x548C;class&#x7684;&#x533A;&#x522B;">struct&#x548C;class&#x7684;&#x533A;&#x522B;</h1><p>&#x53EF;&#x4EE5;&#x7528; struct &#x548C; class &#x5B9A;&#x4E49;&#x7C7B;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x7EE7;&#x627F;&#x3002; &#x533A;&#x522B;&#x5728;&#x4E8E;&#xFF1A;structural &#x7684;&#x9ED8;&#x8BA4;&#x7EE7;&#x627F;&#x6743;&#x9650;&#x548C;&#x9ED8;&#x8BA4;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x662F; public&#xFF0C;&#x800C; class &#x7684;&#x9ED8;&#x8BA4;&#x7EE7;&#x627F;&#x6743;&#x9650;&#x548C;&#x9ED8;&#x8BA4;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x662F; private&#x3002;</p><p>&#x53E6;&#x5916;&#xFF0C;class &#x8FD8;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x6A21;&#x677F;&#x7C7B;&#x5F62;&#x53C2;&#xFF0C;&#x6BD4;&#x5982; template &lt;class T, int i&gt;&#x3002;</p><h1 id="c&#x7C7B;&#x5185;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x5F15;&#x7528;&#x6570;&#x636E;&#x6210;&#x5458;&#x5417;">C++&#x7C7B;&#x5185;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x5F15;&#x7528;&#x6570;&#x636E;&#x6210;&#x5458;&#x5417;</h1><p>&#x53EF;&#x4EE5;&#xFF0C;&#x5FC5;&#x987B;&#x901A;&#x8FC7;&#x6210;&#x5458;&#x51FD;&#x6570;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x521D;&#x59CB;&#x5316;&#x3002;</p><h1 id="&#x7F16;&#x8BD1;&#x7684;&#x8FC7;&#x7A0B;">&#x7F16;&#x8BD1;&#x7684;&#x8FC7;&#x7A0B;</h1><p>&#x5BF9;&#x4E8E; C++&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x4ECE;&#x6587;&#x672C;&#x5230;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4E00;&#x822C;&#x9700;&#x8981;&#x56DB;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF1A;</p><ol type="1"><li>&#x9884;&#x5904;&#x7406;&#x9636;&#x6BB5;&#xFF1A;&#x5BF9;&#x6E90;&#x4EE3;&#x7801;&#x6587;&#x4EF6;&#x4E2D;&#x6587;&#x4EF6;&#x5305;&#x542B;&#x5173;&#x7CFB;&#xFF08;&#x5934;&#x6587;&#x4EF6;&#xFF09; &#x3001;&#x9884;&#x7F16;&#x8BD1;&#x8BED;&#x53E5;&#xFF08;&#x5B8F;&#x5B9A;&#x4E49;&#xFF09; &#x8FDB;&#x884C;&#x5206;&#x6790;&#x548C;&#x66FF;&#x6362;&#xFF0C;&#x751F;&#x6210;&#x9884;&#x7F16;&#x8BD1;&#x6587;&#x4EF6;&#x3002;</li><li>&#x7F16;&#x8BD1;&#x9636;&#x6BB5;&#xFF1A;&#x5C06;&#x7ECF;&#x8FC7;&#x9884;&#x5904;&#x7406;&#x540E;&#x7684;&#x9884;&#x7F16;&#x8BD1;&#x6587;&#x4EF6;&#x8F6C;&#x6362;&#x6210;&#x7279;&#x5B9A;&#x6C47;&#x7F16;&#x4EE3;&#x7801;&#xFF0C;&#x751F;&#x6210;&#x6C47;&#x7F16;&#x6587;&#x4EF6;&#x3002;</li><li>&#x6C47;&#x7F16;&#x9636;&#x6BB5;&#xFF1A;&#x5C06;&#x7F16;&#x8BD1;&#x9636;&#x6BB5;&#x751F;&#x6210;&#x7684;&#x6C47;&#x7F16;&#x6587;&#x4EF6;&#x8F6C;&#x5316;&#x6210;&#x673A;&#x5668;&#x7801;&#xFF0C;&#x751F;&#x6210;&#x53EF;&#x91CD;&#x5B9A;&#x4F4D;&#x76EE;&#x6807;&#x6587;&#x4EF6;</li><li>&#x94FE;&#x63A5;&#x9636;&#x6BB5;&#xFF1A;&#x5C06;&#x591A;&#x4E2A;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x53CA;&#x6240;&#x9700;&#x8981;&#x7684;&#x5E93;&#x8FDE;&#x63A5;&#x6210;&#x6700;&#x7EC8;&#x7684;&#x53EF;&#x6267;&#x884C;&#x76EE;&#x6807;&#x6587;&#x4EF6;</li></ol><h1 id="include&#x5934;&#x6587;&#x4EF6;&#x987A;&#x5E8F;&#x53CC;&#x5F15;&#x53F7;&#x548C;&#x5C16;&#x62EC;&#x53F7;&#x7684;&#x533A;&#x522B;">include&#x5934;&#x6587;&#x4EF6;&#x987A;&#x5E8F;&#xFF0C;&#x53CC;&#x5F15;&#x53F7;&#x548C;&#x5C16;&#x62EC;&#x53F7;&#x7684;&#x533A;&#x522B;</h1><p>&#x5934;&#x6587;&#x4EF6;&#x88AB;&#x5305;&#x542B;&#x7684;&#x987A;&#x5E8F;&#x6309;&#x7167;&#x201C;&#x7279;&#x6B8A;&#x5230;&#x4E00;&#x822C;&#x7684;&#x201D;&#x539F;&#x5219;&#x3002;</p><ol type="1"><li>&#x5728;&#x672C;&#x5730;&#x76EE;&#x5F55;&#x7684;&#x4EFB;&#x4F55;&#x5934;&#x6587;&#x4EF6;&#x9996;&#x5148;&#x88AB;&#x5305;&#x542B;</li><li>&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x6240;&#x6709;&#x201C;&#x5DE5;&#x5177;&#x201D;&#x5934;&#x6587;&#x4EF6;</li><li>&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x5934;&#x6587;&#x4EF6;</li><li>&#x6807;&#x51C6;C++&#x5E93;&#x5934;&#x6587;&#x4EF6;&#x548C;C&#x5E93;&#x5934;&#x6587;&#x4EF6;</li></ol><p>&#x53CC;&#x5F15;&#x53F7;&#x548C;&#x5C16;&#x62EC;&#x53F7;&#x7684;&#x533A;&#x522B;&#xFF1A;&#x7F16;&#x8BD1;&#x5668;&#x9884;&#x5904;&#x7406;&#x9636;&#x6BB5;&#x67E5;&#x627E;&#x5934;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#x4E0D;&#x4E00;&#x6837;&#x3002; &#x53CC;&#x5F15;&#x53F7;&#x591A;&#x67E5;&#x627E;&#x4E00;&#x4E2A;&#x5F53;&#x524D;&#x5934;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x3002;</p><p>&#x4F7F;&#x7528;&#x53CC;&#x5F15;&#x53F7;&#xFF0C;&#x67E5;&#x627E;&#x987A;&#x5E8F;&#x4E3A;&#xFF1A;</p><ol type="1"><li>&#x5F53;&#x524D;&#x5934;&#x6587;&#x4EF6;&#x76EE;&#x5F55;</li><li>&#x7F16;&#x8BD1;&#x5668;&#x8BBE;&#x7F6E;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF08;&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x4F7F;&#x7528;-I &#x663E;&#x5F0F;&#x6307;&#x5B9A;&#x641C;&#x7D22;&#x8DEF;&#x5F84;&#xFF09;</li><li>&#x7CFB;&#x7EDF;&#x53D8;&#x91CF; CPLUS_INCLUDE_PATH/C_INCLUDE_PATH &#x6307;&#x5B9A;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;</li></ol><p>&#x5C16;&#x62EC;&#x53F7;&#x7684;&#x67E5;&#x627E;&#x987A;&#x5E8F;&#xFF1A;</p><ol type="1"><li>&#x7F16;&#x8BD1;&#x5668;&#x8BBE;&#x7F6E;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF08;&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x4F7F;&#x7528;-I &#x663E;&#x5F0F;&#x6307;&#x5B9A;&#x641C;&#x7D22;&#x8DEF;&#x5F84;&#xFF09;</li><li>&#x7CFB;&#x7EDF;&#x53D8;&#x91CF; CPLUS_INCLUDE_PATH/C_INCLUDE_PATH &#x6307;&#x5B9A;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;</li></ol><h1 id="malloc&#x7684;&#x539F;&#x7406;">malloc&#x7684;&#x539F;&#x7406;</h1><p>Malloc &#x51FD;&#x6570;&#x7528;&#x4E8E;&#x52A8;&#x6001;&#x5206;&#x914D;&#x5185;&#x5B58;&#x3002; &#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x5185;&#x5B58;&#x788E;&#x7247;&#x548C;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x7684;&#x5F00;&#x9500;&#xFF0C;malloc &#x5176;&#x91C7;&#x7528;&#x5185;&#x5B58;&#x6C60;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5148;&#x7533;&#x8BF7;&#x5927;&#x5757;&#x5185;&#x5B58;&#x4F5C;&#x4E3A;&#x5806;&#x533A;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5806;&#x533A;&#x5206;&#x4E3A;&#x591A;&#x4E2A;&#x5185;&#x5B58;&#x5757;&#xFF0C;&#x4EE5;&#x5757;&#x4F5C;&#x4E3A;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7684;&#x57FA;&#x672C;&#x5355;&#x4F4D;&#x3002; &#x5F53;&#x7528;&#x6237;&#x7533;&#x8BF7;&#x5185;&#x5B58;&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x4ECE;&#x5806;&#x533A;&#x5206;&#x914D;&#x4E00;&#x5757;&#x5408;&#x9002;&#x7684;&#x7A7A;&#x95F2;&#x5757;&#x3002; Malloc &#x91C7;&#x7528;&#x9690;&#x5F0F;&#x94FE;&#x8868;&#x7ED3;&#x6784;&#x5C06;&#x5806;&#x533A;&#x5206;&#x6210;&#x8FDE;&#x7EED;&#x7684;&#x3001;&#x5927;&#x5C0F;&#x4E0D;&#x4E00;&#x7684;&#x5757;&#xFF0C;&#x5305;&#x542B;&#x5DF2;&#x5206;&#x914D;&#x5757;&#x548C;&#x672A;&#x5206;&#x914D;&#x5757;&#xFF1B;&#x540C;&#x65F6; malloc &#x91C7;&#x7528;&#x663E;&#x793A;&#x94FE;&#x8868;&#x7ED3;&#x6784;&#x6765;&#x7BA1;&#x7406;&#x6240;&#x6709;&#x7684;&#x7A7A;&#x95F2;&#x5757;&#xFF0C;&#x5373;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x53CC;&#x5411;&#x94FE;&#x8868;&#x5C06;&#x7A7A;&#x95F2;&#x5757;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x7A7A;&#x95F2;&#x5757;&#x8BB0;&#x5F55;&#x4E86;&#x4E00;&#x4E2A;&#x8FDE;&#x7EED;&#x7684;&#x3001;&#x672A;&#x5206;&#x914D;&#x7684;&#x5730;&#x5740;&#x3002;</p><p>&#x5F53;&#x8FDB;&#x884C;&#x5185;&#x5B58;&#x5206;&#x914D;&#x65F6;&#xFF0C;Malloc &#x4F1A;&#x901A;&#x8FC7;&#x9690;&#x5F0F;&#x94FE;&#x8868;&#x904D;&#x5386;&#x6240;&#x6709;&#x7684;&#x7A7A;&#x95F2;&#x5757;&#xFF0C;&#x9009;&#x62E9;&#x6EE1;&#x8DB3;&#x8981;&#x6C42;&#x7684;&#x5757;&#x8FDB;&#x884C;&#x5206;&#x914D;&#xFF1B;&#x5F53;&#x8FDB;&#x884C;&#x5185;&#x5B58;&#x5408;&#x5E76;&#x65F6;&#xFF0C;malloc &#x91C7;&#x7528;&#x8FB9;&#x754C;&#x6807;&#x8BB0;&#x6CD5;&#xFF0C;&#x6839;&#x636E;&#x6BCF;&#x4E2A;&#x5757;&#x7684;&#x524D;&#x540E;&#x5757;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5206;&#x914D;&#x6765;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x8FDB;&#x884C;&#x5757;&#x5408;&#x5E76;&#x3002;</p><p>Malloc &#x5728;&#x7533;&#x8BF7;&#x5185;&#x5B58;&#x65F6;&#xFF0C;&#x4E00;&#x822C;&#x4F1A;&#x901A;&#x8FC7; brk &#x6216;&#x8005; mmap &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x8FDB;&#x884C;&#x7533;&#x8BF7;&#x3002; &#x5176;&#x4E2D;&#x5F53;&#x7533;&#x8BF7;&#x5185;&#x5B58;&#x5C0F;&#x4E8E;128K &#x65F6;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x51FD;&#x6570; brk &#x5728;&#x5806;&#x533A;&#x4E2D;&#x5206;&#x914D;&#xFF1B;&#x800C;&#x5F53;&#x7533;&#x8BF7;&#x5185;&#x5B58;&#x5927;&#x4E8E; 128K &#x65F6;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x51FD;&#x6570; mmap&#x5728;&#x6620;&#x5C04;&#x533A;&#x5206;&#x914D;&#x3002;</p><h1 id="c&#x7684;&#x5185;&#x5B58;&#x7BA1;&#x7406;">C++&#x7684;&#x5185;&#x5B58;&#x7BA1;&#x7406;</h1><p>&#x5728; C++&#x4E2D;&#xFF0C;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x5206;&#x4E3A;&#x4EE3;&#x7801;&#x6BB5;&#x3001;&#x6570;&#x636E;&#x6BB5;&#x3001;BSS &#x6BB5;&#x3001;&#x5806;&#x533A;&#x3001;&#x6587;&#x4EF6;&#x6620;&#x5C04;&#x533A;&#x4EE5;&#x53CA;&#x6808;&#x533A;&#x516D;&#x90E8;&#x5206;&#x3002;</p><p>&#x4EE3;&#x7801;&#x6BB5;:&#x5305;&#x62EC;&#x53EA;&#x8BFB;&#x5B58;&#x50A8;&#x533A;&#x548C;&#x6587;&#x672C;&#x533A;&#xFF0C;&#x5176;&#x4E2D;&#x53EA;&#x8BFB;&#x5B58;&#x50A8;&#x533A;&#x5B58;&#x50A8;&#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x91CF;&#xFF0C;&#x6587;&#x672C;&#x533A;&#x5B58;&#x50A8;&#x7A0B;&#x5E8F;&#x7684;&#x673A;&#x5668;&#x4EE3;&#x7801;&#x3002;</p><p>&#x6570;&#x636E;&#x6BB5;&#xFF1A;&#x5B58;&#x50A8;&#x7A0B;&#x5E8F;&#x4E2D;&#x5DF2;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x548C;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x3002;</p><p>bss &#x6BB5;&#xFF1A;&#x5B58;&#x50A8;&#x672A;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x548C;&#x9759;&#x6001;&#x53D8;&#x91CF;&#xFF08;&#x5C40;&#x90E8;+&#x5168;&#x5C40;&#xFF09; &#xFF0C;&#x4EE5;&#x53CA;&#x6240;&#x6709;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E3A; 0 &#x7684;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x548C;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x3002;</p><p>&#x5806;&#x533A;&#xFF1A;&#x8C03;&#x7528; new/malloc &#x51FD;&#x6570;&#x65F6;&#x5728;&#x5806;&#x533A;&#x52A8;&#x6001;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x540C;&#x65F6;&#x9700;&#x8981;&#x8C03;&#x7528; delete/free &#x6765;&#x624B;&#x52A8;&#x91CA;&#x653E;&#x7533;&#x8BF7;&#x7684;&#x5185;&#x5B58;&#x3002;</p><p>&#x6620;&#x5C04;&#x533A;:&#x5B58;&#x50A8;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5E93;&#x4EE5;&#x53CA;&#x8C03;&#x7528; mmap &#x51FD;&#x6570;&#x8FDB;&#x884C;&#x7684;&#x6587;&#x4EF6;&#x6620;&#x5C04;</p><p>&#x6808;&#xFF1A;&#x4F7F;&#x7528;&#x6808;&#x7A7A;&#x95F4;&#x5B58;&#x50A8;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x5730;&#x5740;&#x3001;&#x53C2;&#x6570;&#x3001;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3001;&#x8FD4;&#x56DE;&#x503C;&#x3002;</p><h1 id="&#x4EC0;&#x4E48;&#x662F;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;">&#x4EC0;&#x4E48;&#x662F;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;</h1><p>&#x5185;&#x5B58;&#x6CC4;&#x6F0F;(memory leak)&#x662F;&#x6307;&#x7531;&#x4E8E;&#x758F;&#x5FFD;&#x6216;&#x9519;&#x8BEF;&#x9020;&#x6210;&#x4E86;&#x7A0B;&#x5E8F;&#x672A;&#x80FD;&#x91CA;&#x653E;&#x6389;&#x4E0D;&#x518D;&#x4F7F;&#x7528;&#x7684;&#x5185;&#x5B58;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x5E76;&#x975E;&#x6307;&#x5185;&#x5B58;&#x5728;&#x7269;&#x7406;&#x4E0A;&#x7684;&#x6D88;&#x5931;&#xFF0C;&#x800C;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5206;&#x914D;&#x67D0;&#x6BB5;&#x5185;&#x5B58;&#x540E;&#xFF0C;&#x7531;&#x4E8E;&#x8BBE;&#x8BA1;&#x9519;&#x8BEF;&#xFF0C;&#x5931;&#x53BB;&#x4E86;&#x5BF9;&#x8BE5;&#x6BB5;&#x5185;&#x5B58;&#x7684;&#x63A7;&#x5236;&#xFF0C;&#x56E0;&#x800C;&#x9020;&#x6210;&#x4E86;&#x5185;&#x5B58;&#x7684;&#x6D6A;&#x8D39;&#x3002;</p><p>&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x7684;&#x5206;&#x7C7B;&#xFF1A;</p><ol type="1"><li>&#x5806;&#x5185;&#x5B58;&#x6CC4;&#x6F0F; &#xFF08;Heap leak&#xFF09; &#x3002; &#x5BF9;&#x5185;&#x5B58;&#x6307;&#x7684;&#x662F;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x4E2D;&#x6839;&#x636E;&#x9700;&#x8981;&#x5206;&#x914D;&#x901A;&#x8FC7; malloc,realloc new &#x7B49;&#x4ECE;&#x5806;&#x4E2D;&#x5206;&#x914D;&#x7684;&#x4E00;&#x5757;&#x5185;&#x5B58;&#xFF0C;&#x518D;&#x662F;&#x5B8C;&#x6210;&#x540E;&#x5FC5;&#x987B;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x5BF9;&#x5E94;&#x7684; free &#x6216;&#x8005; delete &#x5220;&#x6389;&#x3002; &#x5982;&#x679C; &#x7A0B;&#x5E8F;&#x7684;&#x8BBE;&#x8BA1;&#x7684;&#x9519;&#x8BEF;&#x5BFC;&#x81F4;&#x8FD9;&#x90E8;&#x5206;&#x5185;&#x5B58;&#x6CA1;&#x6709;&#x88AB;&#x91CA;&#x653E;&#xFF0C;&#x90A3;&#x4E48;&#x6B64;&#x540E;&#x8FD9;&#x5757;&#x5185;&#x5B58;&#x5C06;&#x4E0D;&#x4F1A;&#x88AB;&#x4F7F;&#x7528;&#xFF0C;&#x5C31;&#x4F1A;&#x4EA7;&#x751F; Heap Leak&#x3002;</li><li>&#x7CFB;&#x7EDF;&#x8D44;&#x6E90;&#x6CC4;&#x9732;&#xFF08;Resource Leak&#xFF09; &#x3002; &#x4E3B;&#x8981;&#x6307;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x5206;&#x914D;&#x7684;&#x8D44;&#x6E90;&#x6BD4;&#x5982;Bitmap,handle ,SOCKET &#x7B49;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x76F8;&#x5E94;&#x7684;&#x51FD;&#x6570;&#x91CA;&#x653E;&#x6389;&#xFF0C;&#x5BFC;&#x81F4;&#x7CFB;&#x7EDF;&#x8D44;&#x6E90;&#x7684;&#x6D6A;&#x8D39;&#xFF0C;&#x4E25;&#x91CD;&#x53EF;&#x5BFC;&#x81F4;&#x7CFB;&#x7EDF; &#x6548;&#x80FD;&#x964D;&#x4F4E;&#xFF0C;&#x7CFB;&#x7EDF;&#x8FD0;&#x884C;&#x4E0D;&#x7A33;&#x5B9A;&#x3002;</li><li>&#x6CA1;&#x6709;&#x5C06;&#x57FA;&#x7C7B;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x4E3A;&#x865A;&#x51FD;&#x6570;&#x3002; &#x5F53;&#x57FA;&#x7C7B;&#x6307;&#x9488;&#x6307;&#x5411;&#x5B50;&#x7C7B;&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x57FA;&#x7C7B;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E0D;&#x662F; virtual&#xFF0C;&#x90A3;&#x4E48;&#x5B50;&#x7C7B;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x5C06;&#x4E0D;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x5B50;&#x7C7B;&#x7684;&#x8D44;&#x6E90;&#x6CA1;&#x6709;&#x6B63;&#x786E;&#x662F;&#x91CA;&#x653E;&#xFF0C;&#x56E0;&#x6B64;&#x9020;&#x6210;&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x3002;</li></ol><h1 id="&#x5982;&#x4F55;&#x91C7;&#x7528;&#x5355;&#x7EBF;&#x7A0B;&#x7684;&#x65B9;&#x5F0F;&#x5904;&#x7406;&#x9AD8;&#x5E76;&#x53D1;">&#x5982;&#x4F55;&#x91C7;&#x7528;&#x5355;&#x7EBF;&#x7A0B;&#x7684;&#x65B9;&#x5F0F;&#x5904;&#x7406;&#x9AD8;&#x5E76;&#x53D1;</h1><p>&#x5728;&#x5355;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x91C7;&#x7528; I/O &#x590D;&#x7528;&#x6765;&#x63D0;&#x9AD8;&#x5355;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#x591A;&#x4E2A;&#x8BF7;&#x6C42;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x91C7;&#x7528;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x6A21;&#x578B;&#xFF0C;&#x57FA;&#x4E8E;&#x5F02;&#x6B65;&#x56DE;&#x8C03;&#x6765;&#x5904;&#x7406;&#x4E8B;&#x4EF6;</p><h1 id="selectepoll-&#x7684;&#x533A;&#x522B;&#x539F;&#x7406;&#x6027;&#x80FD;&#x9650;&#x5236;">select&#xFF0C;epoll &#x7684;&#x533A;&#x522B;&#xFF0C;&#x539F;&#x7406;&#xFF0C;&#x6027;&#x80FD;&#xFF0C;&#x9650;&#x5236;</h1><p>&#x8FD9;&#x4E00;&#x5757;&#x662F;IO&#x591A;&#x8DEF;&#x590D;&#x7528;&#x4E0B;&#x7684;&#x77E5;&#x8BC6;&#x3002;</p><p><strong>I/O&#x591A;&#x8DEF;&#x590D;&#x7528;</strong></p><p>IO &#x590D;&#x7528;&#x6A21;&#x578B;&#x5728;&#x963B;&#x585E; IO &#x6A21;&#x578B;&#x4E0A;&#x591A;&#x4E86;&#x4E00;&#x4E2A; select &#x51FD;&#x6570;&#xFF0C;select &#x51FD;&#x6570;&#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x96C6;&#x5408;&#xFF0C;&#x610F;&#x601D;&#x5C31;&#x662F;&#x5BF9;&#x8FD9;&#x4E9B;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x8FDB;&#x884C;&#x5FAA;&#x73AF;&#x76D1;&#x542C;&#xFF0C;&#x5F53;&#x67D0;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x5C31;&#x7EEA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x5BF9;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;</p><p>&#x8FD9;&#x79CD; IO &#x6A21;&#x578B;&#x662F;&#x5C5E;&#x4E8E;&#x963B;&#x585E;&#x7684; IO&#x3002; &#x4F46;&#x662F;&#x7531;&#x4E8E;&#x5B83;&#x53EF;&#x4EE5;&#x5BF9;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x8FDB;&#x884C;&#x963B;&#x585E;&#x76D1;&#x542C;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7684;&#x6548;&#x7387;&#x6BD4;&#x963B;&#x585E; IO &#x6A21;&#x578B;&#x9AD8;&#x6548;&#x3002;</p><p>IO &#x591A;&#x8DEF;&#x590D;&#x7528;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x8BF4;&#x7684; select&#xFF0C;poll&#xFF0C;epoll&#x3002; select/epoll &#x7684;&#x597D;&#x5904;&#x5C31;&#x5728;&#x4E8E;&#x5355;&#x4E2A; process&#x5C31;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x5904;&#x7406;&#x591A;&#x4E2A;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x7684; IO&#x3002; &#x5B83;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;&#x5C31;&#x662F; select&#xFF0C;poll&#xFF0C;epoll &#x8FD9;&#x4E2A; function &#x4F1A;&#x4E0D;&#x65AD;&#x7684;&#x8F6E;&#x8BE2;&#x6240;&#x8D1F;&#x8D23;&#x7684;&#x6240;&#x6709; socket&#xFF0C;&#x5F53;&#x67D0;&#x4E2A; socket &#x6709;&#x6570;&#x636E;&#x5230;&#x8FBE;&#x4E86;&#xFF0C;&#x5C31;&#x901A;&#x77E5;&#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x3002;</p><p>&#x5F53;&#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x8C03;&#x7528;&#x4E86; select&#xFF0C;&#x90A3;&#x4E48;&#x6574;&#x4E2A;&#x8FDB;&#x7A0B;&#x4F1A;&#x88AB; block&#xFF0C;&#x800C;&#x540C;&#x65F6;&#xFF0C;kernel &#x4F1A;&#x201C;&#x76D1;&#x89C6;&#x201D;&#x6240;&#x6709; select&#x8D1F;&#x8D23;&#x7684; socket&#xFF0C;&#x5F53;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A; socket &#x4E2D;&#x7684;&#x6570;&#x636E;&#x51C6;&#x5907;&#x597D;&#x4E86;&#xFF0C;select &#x5C31;&#x4F1A;&#x8FD4;&#x56DE;&#x3002; &#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x518D;&#x8C03;&#x7528; read &#x64CD;&#x4F5C;&#xFF0C;&#x5C06;&#x6570;&#x636E;&#x4ECE; kernel &#x62F7;&#x8D1D;&#x5230;&#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x3002;</p><p>&#x6240;&#x4EE5;&#xFF0C;I/O &#x591A;&#x8DEF;&#x590D;&#x7528;&#x7684;&#x7279;&#x70B9;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x79CD;&#x673A;&#x5236;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x80FD;&#x540C;&#x65F6;&#x7B49;&#x5F85;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x800C;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF08;&#x5957;&#x63A5;&#x5B57;&#x63CF;&#x8FF0;&#x7B26;&#xFF09; &#x5176;&#x4E2D;&#x7684;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x8FDB;&#x5165;&#x8BFB;&#x5C31;&#x7EEA;&#x72B6;&#x6001;&#xFF0C;select()&#x51FD;&#x6570;&#x5C31;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE;&#x3002;</p><p>I/O &#x591A;&#x8DEF;&#x590D;&#x7528;&#x548C;&#x963B;&#x585E; I/O &#x5176;&#x5B9E;&#x5E76;&#x6CA1;&#x6709;&#x592A;&#x5927;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x8FD8;&#x66F4;&#x5DEE;&#x4E00;&#x4E9B;&#x3002; &#x56E0;&#x4E3A;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E24;&#x4E2A; system call (select &#x548C; recvfrom)&#xFF0C;&#x800C; blocking IO &#x53EA;&#x8C03;&#x7528;&#x4E86;&#x4E00;&#x4E2A; system call (recvfrom)&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x7528; select &#x7684;&#x4F18;&#x52BF;&#x5728;&#x4E8E;&#x5B83;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x5904;&#x7406;&#x591A;&#x4E2A; connection&#x3002;</p><p>&#x6240;&#x4EE5;&#xFF0C;&#x5982;&#x679C;&#x5904;&#x7406;&#x7684;&#x8FDE;&#x63A5;&#x6570;&#x4E0D;&#x662F;&#x5F88;&#x9AD8;&#x7684;&#x8BDD;&#xFF0C;&#x4F7F;&#x7528; select/epoll &#x7684; web server &#x4E0D;&#x4E00;&#x5B9A;&#x6BD4;&#x4F7F;&#x7528;multi-threading + blocking IO &#x7684; web server &#x6027;&#x80FD;&#x66F4;&#x597D;&#xFF0C;&#x53EF;&#x80FD;&#x5EF6;&#x8FDF;&#x8FD8;&#x66F4;&#x5927;&#x3002; select/epoll &#x7684;&#x4F18;&#x52BF;&#x5E76;&#x4E0D;&#x662F;&#x5BF9;&#x4E8E;&#x5355;&#x4E2A;&#x8FDE;&#x63A5;&#x80FD;&#x5904;&#x7406;&#x5F97;&#x66F4;&#x5FEB;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x4E8E;&#x80FD;&#x5904;&#x7406;&#x66F4;&#x591A;&#x7684;&#x8FDE;&#x63A5;&#x3002; &#xFF09;</p><p>&#x5728; IO multiplexing Model &#x4E2D;&#xFF0C;&#x5B9E;&#x9645;&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x4E2A; socket&#xFF0C;&#x4E00;&#x822C;&#x90FD;&#x8BBE;&#x7F6E;&#x6210;&#x4E3A; non-blocking&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x5982;&#x4E0A;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x6574;&#x4E2A;&#x7528;&#x6237;&#x7684; process &#x5176;&#x5B9E;&#x662F;&#x4E00;&#x76F4;&#x88AB; block &#x7684;&#x3002; &#x53EA;&#x4E0D;&#x8FC7; process &#x662F;&#x88AB; select&#x8FD9;&#x4E2A;&#x51FD;&#x6570; block&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x88AB; socket IO &#x7ED9; block&#x3002;</p><p><strong>select</strong></p><p>select&#xFF1A;&#x662F;&#x6700;&#x521D;&#x89E3;&#x51B3;IO&#x963B;&#x585E;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x7528;&#x7ED3;&#x6784;&#x4F53; fd_set &#x6765;&#x544A;&#x8BC9;&#x5185;&#x6838;&#x76D1;&#x542C;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x88AB;&#x79F0;&#x4E3A;&#x63CF;&#x8FF0;&#x7B26;&#x96C6;&#x3002; &#x7531;&#x6570;&#x7EC4;&#x6765;&#x7EF4;&#x6301;&#x54EA;&#x4E9B;&#x63CF;&#x8FF0;&#x7B26;&#x88AB;&#x7F6E;&#x4F4D;&#x4E86;&#x3002; &#x5BF9;&#x7ED3;&#x6784;&#x4F53;&#x7684;&#x64CD;&#x4F5C;&#x5C01;&#x88C5;&#x5728;&#x4E09;&#x4E2A;&#x5B8F;&#x5B9A;&#x4E49;&#x4E2D;&#x3002; &#x901A;&#x8FC7;&#x8F6E;&#x5BFB;&#x6765;&#x67E5;&#x627E;&#x662F;&#x5426;&#x6709;&#x63CF;&#x8FF0;&#x7B26;&#x8981;&#x88AB;&#x5904;&#x7406;&#x3002;</p><p>&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;&#xFF1A;</p><ol type="1"><li>&#x5185;&#x7F6E;&#x6570;&#x7EC4;&#x7684;&#x5F62;&#x5F0F;&#x4F7F;&#x5F97; select &#x7684;&#x6700;&#x5927;&#x6587;&#x4EF6;&#x6570;&#x53D7;&#x9650;&#x4E0E; FD_SIZE&#xFF1B;</li><li>&#x6BCF;&#x6B21;&#x8C03;&#x7528; select &#x524D;&#x90FD;&#x8981;&#x91CD;&#x65B0;&#x521D;&#x59CB;&#x5316;&#x63CF;&#x8FF0;&#x7B26;&#x96C6;&#xFF0C;&#x5C06; fd &#x4ECE;&#x7528;&#x6237;&#x6001;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x6001;&#xFF0C;&#x6BCF;&#x6B21;&#x8C03;&#x7528;select &#x540E;&#xFF0C;&#x90FD;&#x9700;&#x8981;&#x5C06; fd &#x4ECE;&#x5185;&#x6838;&#x6001;&#x62F7;&#x8D1D;&#x5230;&#x7528;&#x6237;&#x6001;&#xFF1B;</li><li>&#x8F6E;&#x5BFB;&#x6392;&#x67E5;&#x5F53;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x4E2A;&#x6570;&#x5F88;&#x591A;&#x65F6;&#xFF0C;&#x6548;&#x7387;&#x5F88;&#x4F4E;&#xFF1B;</li></ol><p><strong>poll</strong></p><p>poll&#xFF1A;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x53EF;&#x53D8;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4;&#x89E3;&#x51B3;&#x4E86; select &#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x53D7;&#x9650;&#x7684;&#x95EE;&#x9898;&#x3002; &#x6570;&#x7EC4;&#x4E2D;&#x5143;&#x7D20;&#x662F;&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x4FDD;&#x5B58;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x6BCF;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x5C31;&#x5411;&#x6570;&#x7EC4;&#x4E2D;&#x52A0;&#x5165;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x7ED3;&#x6784;&#x4F53;&#x53EA;&#x9700;&#x8981;&#x62F7;&#x8D1D;&#x4E00;&#x6B21;&#x5230;&#x5185;&#x6838;&#x6001;&#x3002; poll &#x89E3;&#x51B3;&#x4E86; select &#x91CD;&#x590D;&#x521D;&#x59CB;&#x5316;&#x7684;&#x95EE;&#x9898;&#x3002; &#x8F6E;&#x5BFB;&#x6392;&#x67E5;&#x7684;&#x95EE;&#x9898;&#x672A;&#x89E3;&#x51B3;&#x3002;</p><p><strong>epoll</strong></p><p>epoll&#xFF1A;&#x8F6E;&#x5BFB;&#x6392;&#x67E5;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x6548;&#x7387;&#x4E0D;&#x9AD8;&#xFF0C;&#x4F7F;&#x670D;&#x52A1;&#x5668;&#x5E76;&#x53D1;&#x80FD;&#x529B;&#x53D7;&#x9650;&#x3002; &#x56E0;&#x6B64;&#xFF0C;epoll &#x91C7;&#x7528;&#x53EA;&#x8FD4;&#x56DE;&#x72B6;&#x6001;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x4FBF;&#x89E3;&#x51B3;&#x4E86;&#x8F6E;&#x5BFB;&#x7684;&#x74F6;&#x9888;&#x3002;</p><p>epoll &#x5BF9;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x64CD;&#x4F5C;&#x6709;&#x4E24;&#x79CD;&#x6A21;&#x5F0F;&#xFF1A;LT&#xFF08;level trigger&#xFF09; &#x548C; ET&#xFF08;edge trigger&#xFF09; &#x3002; LT&#x6A21;&#x5F0F;&#x662F;&#x9ED8;&#x8BA4;&#x6A21;&#x5F0F;&#x3002;</p><ol type="1"><li><p>LT &#x6A21;&#x5F0F;</p><p>LT(level triggered)&#x662F;&#x7F3A;&#x7701;&#x7684;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#xFF0C;&#x5E76;&#x4E14;&#x540C;&#x65F6;&#x652F;&#x6301; block &#x548C; no-block socket.&#x5728;&#x8FD9;&#x79CD;&#x505A;&#x6CD5;&#x4E2D;&#xFF0C;&#x5185;&#x6838;&#x544A;&#x8BC9;&#x4F60;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x662F;&#x5426;&#x5C31;&#x7EEA;&#x4E86;&#xFF0C;&#x7136;&#x540E;&#x4F60;&#x53EF;&#x4EE5;&#x5BF9;&#x8FD9;&#x4E2A;&#x5C31;&#x7EEA;&#x7684; fd &#x8FDB;&#x884C; IO &#x64CD;&#x4F5C;&#x3002; &#x5982;&#x679C;&#x4F60;&#x4E0D;&#x4F5C;&#x4EFB;&#x4F55;&#x64CD;&#x4F5C;&#xFF0C;&#x5185;&#x6838;&#x8FD8;&#x662F;&#x4F1A;&#x7EE7;&#x7EED;&#x901A;&#x77E5;&#x4F60;&#x7684;&#x3002;</p></li><li><p>ET &#x6A21;&#x5F0F;</p><p>ET(edge-triggered)&#x662F;&#x9AD8;&#x901F;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#xFF0C;&#x53EA;&#x652F;&#x6301; no-block socket&#x3002; &#x5728;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C;&#x5F53;&#x63CF;&#x8FF0;&#x7B26;&#x4ECE;&#x672A;&#x5C31;&#x7EEA;&#x53D8;&#x4E3A;&#x5C31;&#x7EEA;&#x65F6;&#xFF0C;&#x5185;&#x6838;&#x901A;&#x8FC7; epoll &#x544A;&#x8BC9;&#x4F60;&#x3002; &#x7136;&#x540E;&#x5B83;&#x4F1A;&#x5047;&#x8BBE;&#x4F60;&#x77E5;&#x9053;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x5DF2;&#x7ECF;&#x5C31;&#x7EEA;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x4F1A;&#x518D;&#x4E3A;&#x90A3;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x53D1;&#x9001;&#x66F4;&#x591A;&#x7684;&#x5C31;&#x7EEA;&#x901A;&#x77E5;&#xFF0C;&#x76F4;&#x5230;&#x4F60;&#x505A;&#x4E86;&#x67D0;&#x4E9B;&#x64CD;&#x4F5C;&#x5BFC;&#x81F4;&#x90A3;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x4E0D;&#x518D;&#x4E3A;&#x5C31;&#x7EEA;&#x72B6;&#x6001;&#x4E86;(&#x6BD4;&#x5982;&#xFF0C;&#x4F60;&#x5728;&#x53D1;&#x9001;&#xFF0C;&#x63A5;&#x6536;&#x6216;&#x8005;&#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x6216;&#x8005;&#x53D1;&#x9001;&#x63A5;&#x6536;&#x7684;&#x6570;&#x636E;&#x5C11;&#x4E8E;&#x4E00;&#x5B9A;&#x91CF;&#x65F6;&#x5BFC;&#x81F4;&#x4E86;&#x4E00;&#x4E2A; EWOULDBLOCK &#x9519;&#x8BEF;&#xFF09; &#x3002; &#x4F46;&#x662F;&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x76F4;&#x4E0D;&#x5BF9;&#x8FD9;&#x4E2A; fd &#x4F5C; IO &#x64CD;&#x4F5C;(&#x4ECE;&#x800C;&#x5BFC;&#x81F4;&#x5B83;&#x518D;&#x6B21;&#x53D8;&#x6210;&#x672A;&#x5C31;&#x7EEA;)&#xFF0C;&#x5185;&#x6838;&#x4E0D;&#x4F1A;&#x53D1;&#x9001;&#x66F4;&#x591A;&#x7684;&#x901A;&#x77E5;(only once)</p><p>ET &#x6A21;&#x5F0F;&#x5728;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x51CF;&#x5C11;&#x4E86; epoll &#x4E8B;&#x4EF6;&#x88AB;&#x91CD;&#x590D;&#x89E6;&#x53D1;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x56E0;&#x6B64;&#x6548;&#x7387;&#x8981;&#x6BD4; LT &#x6A21;&#x5F0F;&#x9AD8;&#x3002; epoll&#x5DE5;&#x4F5C;&#x5728; ET &#x6A21;&#x5F0F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x975E;&#x963B;&#x585E;&#x5957;&#x63A5;&#x53E3;&#xFF0C;&#x4EE5;&#x907F;&#x514D;&#x7531;&#x4E8E;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x53E5;&#x67C4;&#x7684;&#x963B;&#x585E;&#x8BFB;/&#x963B;&#x585E;&#x5199;&#x64CD;&#x4F5C;&#x628A;&#x5904;&#x7406;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x4EFB;&#x52A1;&#x997F;&#x6B7B;&#x3002;</p></li><li><p>LT &#x6A21;&#x5F0F;&#x4E0E; ET &#x6A21;&#x5F0F;&#x7684;&#x533A;&#x522B;&#x5982;&#x4E0B;&#xFF1A;</p><p>LT &#x6A21;&#x5F0F;&#xFF1A;&#x5F53; epoll_wait &#x68C0;&#x6D4B;&#x5230;&#x63CF;&#x8FF0;&#x7B26;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x5E76;&#x5C06;&#x6B64;&#x4E8B;&#x4EF6;&#x901A;&#x77E5;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x4E0D;&#x7ACB;&#x5373;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x4EF6;&#x3002; &#x4E0B;&#x6B21;&#x8C03;&#x7528; epoll_wait &#x65F6;&#xFF0C;&#x4F1A;&#x518D;&#x6B21;&#x54CD;&#x5E94;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5E76;&#x901A;&#x77E5;&#x6B64;&#x4E8B;&#x4EF6;&#x3002;</p><p>ET &#x6A21;&#x5F0F;&#xFF1A;&#x5F53; epoll_wait &#x68C0;&#x6D4B;&#x5230;&#x63CF;&#x8FF0;&#x7B26;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x5E76;&#x5C06;&#x6B64;&#x4E8B;&#x4EF6;&#x901A;&#x77E5;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5FC5;&#x987B;&#x7ACB;&#x5373;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x4EF6;&#x3002; &#x5982;&#x679C;&#x4E0D;&#x5904;&#x7406;&#xFF0C;&#x4E0B;&#x6B21;&#x8C03;&#x7528; epoll_wait &#x65F6;&#xFF0C;&#x4E0D;&#x4F1A;&#x518D;&#x6B21;&#x54CD;&#x5E94;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5E76;&#x901A;&#x77E5;&#x6B64;&#x4E8B;&#x4EF6;&#x3002;</p></li></ol><h1 id="c11-&#x7684;&#x65B0;&#x7279;&#x6027;">C++11 &#x7684;&#x65B0;&#x7279;&#x6027;</h1><p><strong>&#x65B0;&#x7684;&#x5173;&#x952E;&#x5B57;&#x53CA;&#x8BED;&#x6CD5;</strong>&#xFF1A;</p><ol type="1"><li><p>auto&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x521D;&#x59CB;&#x503C;&#x81EA;&#x52A8;&#x63A8;&#x5BFC;&#x51FA;&#x7C7B;&#x578B;&#x3002; &#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x7528;&#x4E8E;&#x51FD;&#x6570;&#x4F20;&#x53C2;&#x4EE5;&#x53CA;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#x7684;&#x63A8;&#x5BFC;&#x3002;</p></li><li><p>nullptr&#xFF1A;nullptr &#x662F;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x9762;&#x503C;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x8F6C;&#x6362;&#x6210;&#x4EFB;&#x610F;&#x5176;&#x5B83;&#x7684;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF1B;&#x800C; NULL &#x4E00;&#x822C;&#x88AB;&#x5B8F;&#x5B9A;&#x4E49;&#x4E3A; 0&#xFF0C;&#x5728;&#x9047;&#x5230;&#x91CD;&#x8F7D;&#x65F6;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x3002;</p></li><li><p>&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF1A;C++11 &#x65B0;&#x589E;&#x4E86; std::shared_ptr&#x3001;std::weak_ptr &#x7B49;&#x7C7B;&#x578B;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;&#x7528;&#x4E8E;&#x89E3;&#x51B3;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7684;&#x95EE;&#x9898;&#x3002;&#x540C;&#x65F6;&#x5F03;&#x7528;&#x4E86;auto-ptr&#x3002;</p></li><li><p>&#x65B0;&#x7684;for&#x8BED;&#x6CD5;</p><p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vec {<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>};</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> n :vec)</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; n;</span><br></pre></td></tr></table></figure></p></li></ol><p><strong>&#x65B0;&#x7684;STL&#x5BB9;&#x5668;</strong>&#xFF1A;</p><ol type="1"><li>array</li><li>tuple</li><li>forward_list</li><li>unordered_map</li><li>unordered_set</li></ol><p><strong>&#x591A;&#x7EBF;&#x7A0B;</strong></p><ol type="1"><li>std::thread</li><li>st::atomic</li><li>std::condition_variable</li><li>std::mutex&#xFF0C;&#x4E92;&#x65A5;&#x91CF;</li><li>&#x7B49;&#x7B49;</li></ol><p><strong>&#x5176;&#x4ED6;</strong></p><ol type="1"><li>std::function&#x3001;std::bind &#x5C01;&#x88C5;&#x53EF;&#x6267;&#x884C;&#x5BF9;&#x8C61;</li><li>lamda &#x8868;&#x8FBE;&#x5F0F;</li><li>&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#xFF1A;&#x4F7F;&#x7528;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x6765;&#x5BF9;&#x7C7B;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;</li><li>&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF1A;&#x57FA;&#x4E8E;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x548C;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;&#xFF0C;&#x6D88;&#x9664;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x4EA4;&#x4E92;&#x65F6;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x5BF9;&#x8C61;&#x62F7;&#x8D1D;&#xFF0C;&#x8282;&#x7701;&#x8FD0;&#x7B97;&#x5B58;&#x50A8;&#x8D44;&#x6E90;&#xFF0C;&#x63D0;&#x9AD8;&#x6548;&#x7387;</li><li>&#x53EF;&#x53D8;&#x53C2;&#x6570;&#x6A21;&#x677F;</li></ol><h1 id="&#x53EF;&#x53D8;&#x53C2;&#x6570;&#x6A21;&#x677F;">&#x53EF;&#x53D8;&#x53C2;&#x6570;&#x6A21;&#x677F;</h1><p>C++11 &#x652F;&#x6301;&#x53EF;&#x53D8;&#x53C2;&#x6570;&#x6A21;&#x677F;&#xFF0C;&#x5BF9;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x4E86;&#x9AD8;&#x5EA6;&#x6CDB;&#x5316;&#xFF0C;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4EFB;&#x610F;&#x6570;&#x76EE;&#x3001;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570; &#x3002;</p><p>&#x4F8B;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WindSings</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span>... <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">f</span>(<span class="title">T</span>... <span class="title">args</span>)</span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>...(args) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//&#x6253;&#x5370;&#x53D8;&#x53C2;&#x7684;&#x4E2A;&#x6570;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    f();        <span class="comment">//0</span></span><br><span class="line">    f(<span class="number">1</span>, <span class="number">2</span>);    <span class="comment">//2</span></span><br><span class="line">    f(<span class="number">1</span>, <span class="number">2.5</span>, <span class="string">&quot;&quot;</span>);    <span class="comment">//3</span></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5176;&#x4E2D; T &#x53EB;&#x505A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x5305;&#xFF0C;args &#x53EB;&#x505A;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x5305;</p><p>&#x7701;&#x7565;&#x53F7;&#x4F5C;&#x7528;&#x5982;&#x4E0B;&#xFF1A;</p><ol type="1"><li>&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x5305;&#x542B; 0 &#x5230;&#x4EFB;&#x610F;&#x4E2A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x7684;&#x53C2;&#x6570;&#x5305;</li><li>&#x5728;&#x6A21;&#x677F;&#x5B9A;&#x4E49;&#x5F97;&#x53F3;&#x8FB9;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x53C2;&#x6570;&#x5305;&#x5C55;&#x6210;&#x4E00;&#x4E2A;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x53C2;&#x6570;</li></ol><p>C++11 &#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9012;&#x5F52;&#x51FD;&#x6570;&#x7684;&#x65B9;&#x5F0F;&#x5C55;&#x5F00;&#x53C2;&#x6570;&#x5305;&#xFF0C;&#x83B7;&#x5F97;&#x53EF;&#x53D8;&#x53C2;&#x6570;&#x7684;&#x6BCF;&#x4E2A;&#x503C;&#x3002; &#x901A;&#x8FC7;&#x9012;&#x5F52;&#x51FD;&#x6570;&#x5C55;&#x5F00;&#x53C2;&#x6570;&#x5305;&#xFF0C;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5305;&#x5C55;&#x5F00;&#x7684;&#x51FD;&#x6570;&#x548C;&#x4E00;&#x4E2A;&#x9012;&#x5F52;&#x7EC8;&#x6B62;&#x51FD;&#x6570;&#x3002; &#x4F8B;&#x5982;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WindSings</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;empty&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//&#x5C55;&#x5F00;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>, <span class="title">class</span> ...<span class="title">Args</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">print</span>(<span class="title">T</span> <span class="title">head</span>, <span class="title">Args</span>... <span class="title">rest</span>)</span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;parameter &quot;</span> &lt;&lt; head &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    print(rest...);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    print(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x53C2; &#x6570;&#x5305; Args ...&#x5728;&#x5C55;&#x5F00;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x9012;&#x5F52;&#x8C03;&#x7528;&#x81EA;&#x5DF1;&#xFF0C;&#x6CA1;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#x53C2;&#x6570;&#x5305;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x5C31;&#x4F1A;&#x5C11;&#x4E00;&#x4E2A;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x53C2;&#x6570;&#x90FD;&#x5C55;&#x5F00;&#x4E3A;&#x6B62;&#x3002; &#x5F53;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x65F6;&#x5C31;&#x4F1A;&#x8C03;&#x7528;&#x975E;&#x6A21;&#x677F;&#x51FD;&#x6570; printf &#x7EC8;&#x6B62;&#x9012;&#x5F52;&#x8FC7;&#x7A0B;&#x3002;</p><h1 id="c&#x5982;&#x4F55;&#x4E0D;&#x4EA7;&#x751F;&#x4E2D;&#x95F4;&#x53D8;&#x91CF;&#x8FD8;&#x4E0D;&#x4F1A;">C++&#x5982;&#x4F55;&#x4E0D;&#x4EA7;&#x751F;&#x4E2D;&#x95F4;&#x53D8;&#x91CF;&#xFF08;&#x8FD8;&#x4E0D;&#x4F1A;&#xFF09;</h1><p>&#x9762;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x8FD8;&#x4E0D;&#x4F1A;&#xFF0C;&#x5982;&#x6709;&#x5927;&#x725B;&#x613F;&#x610F;&#x8D50;&#x6559;&#xFF0C;&#x5C0F;&#x5F1F;&#x5FC5;&#x6709;&#x7EA2;&#x5305;&#x5949;&#x4E0A;&#x3002;</p><p>&#x5728;OpenCV&#x4E2D;&#xFF0C;&#x6216;&#x8005;&#x5728;&#x5176;&#x4ED6;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x5982;&#x6709;&#x4EE5;&#x4E0B;&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = a*b*c;</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#xFF0C;<code>a, b, c</code>&#x53EF;&#x4EE5;&#x662F;&#x77E9;&#x9635;&#xFF08;Mat&#xFF09;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x5176;&#x4ED6;&#x7684;<code>int</code>&#x578B;&#x4E4B;&#x7C7B;&#x7684;&#x3002;</p><p>&#x6211;&#x8FD8;&#x4E0D;&#x4F1A;&#xFF0C;&#x95EE;&#x4E86;&#x540C;&#x5B66;&#xFF0C;&#x4ED6;&#x4EEC;&#x4E5F;&#x90FD;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x6C42;&#x7B54;&#x6848;&#xFF0C;&#x5728;&#x7EBF;&#x7B49;&#x3002;</p><h1 id="c&#x4E2D;&#x7684;cas&#x65E0;&#x9501;&#x540C;&#x6B65;&#x6CA1;&#x5199;&#x5B8C;">C++&#x4E2D;&#x7684;CAS&#x65E0;&#x9501;&#x540C;&#x6B65;&#xFF08;&#x6CA1;&#x5199;&#x5B8C;&#xFF09;</h1><p>CAS&#xFF1A;In computer science, compare-and-swap (CAS) is an atomic instruction used in multithreading to achieve synchronization. &#x5373;CAS&#x610F;&#x601D;&#x662F;&#x4E00;&#x4E2A;&#x5728;&#x591A;&#x7EBF;&#x7A0B;&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF0C;&#x6BD4;&#x8F83;&#x5E76;&#x4EA4;&#x6362;&#xFF0C;&#x5B9E;&#x73B0;&#x7CFB;&#x7EDF;&#x540C;&#x6B65;&#x3002;</p><p>&#x6211;&#x4F1A;&#x5199;&#x51E0;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x7B80;&#x5355;&#x8BF4;&#x4E00;&#x4E0B;C++ 11&#x7684;&#x591A;&#x7EBF;&#x7A0B;&#x64CD;&#x4F5C;&#x3002;&#xFF08;&#x53C8;&#x6316;&#x5751;&#x4E86;&#xFF0C;&#x5DF2;&#x7ECF;&#x6709;&#x51E0;&#x767E;&#x4E2A;&#x5751;&#x6CA1;&#x586B;&#x4E86;&#xFF09;</p><hr><p><strong>&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;</strong></p><h1 id="&#x8FDB;&#x7A0B;&#x548C;&#x7EBF;&#x7A0B;&#x7684;&#x533A;&#x522B;">&#x8FDB;&#x7A0B;&#x548C;&#x7EBF;&#x7A0B;&#x7684;&#x533A;&#x522B;</h1><p>&#x8FDB;&#x7A0B;&#x662F;&#x5BF9;&#x8FD0;&#x884C;&#x65F6;&#x7A0B;&#x5E8F;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x662F;&#x7CFB;&#x7EDF;&#x8FDB;&#x884C;&#x8D44;&#x6E90;&#x8C03;&#x5EA6;&#x548C;&#x5206;&#x914D;&#x7684;&#x7684;&#x57FA;&#x672C;&#x5355;&#x4F4D;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x5E76;&#x53D1;&#xFF1B;</p><p>&#x7EBF;&#x7A0B;&#x662F;&#x8FDB;&#x7A0B;&#x7684;&#x5B50;&#x4EFB;&#x52A1;&#xFF0C;&#x662F; CPU &#x8C03;&#x5EA6;&#x548C;&#x5206;&#x6D3E;&#x7684;&#x57FA;&#x672C;&#x5355;&#x4F4D;&#xFF0C;&#x7528;&#x4E8E;&#x4FDD;&#x8BC1;&#x7A0B;&#x5E8F;&#x7684;&#x5B9E;&#x65F6;&#x6027;&#xFF0C;&#x5B9E;&#x73B0;&#x8FDB;&#x7A0B;&#x5185;&#x90E8;&#x7684;&#x5E76;&#x53D1;&#xFF1B;&#x7EBF;&#x7A0B;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x53EF;&#x8BC6;&#x522B;&#x7684;&#x6700;&#x5C0F;&#x6267;&#x884C;&#x548C;&#x8C03;&#x5EA6;&#x5355;&#x4F4D;&#x3002;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x90FD;&#x72EC;&#x81EA;&#x5360;&#x7528;&#x4E00;&#x4E2A;&#x865A;&#x62DF;&#x5904;&#x7406;&#x5668;&#xFF1A;&#x72EC;&#x81EA;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x7EC4;&#xFF0C;&#x6307;&#x4EE4;&#x8BA1;&#x6570;&#x5668;&#x548C;&#x5904;&#x7406;&#x5668;&#x72B6;&#x6001;&#x3002; &#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x5B8C;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x4F46;&#x662F;&#x5171;&#x4EAB;&#x540C;&#x4E00;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x540C;&#x6837;&#x7684;&#x52A8;&#x6001;&#x5185;&#x5B58;&#xFF0C;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#xFF0C;&#x76EE;&#x6807;&#x4EE3;&#x7801;&#x7B49;&#x7B49;&#xFF09; &#xFF0C;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#x961F;&#x5217;&#x548C;&#x5176;&#x4ED6;&#x5185;&#x6838;&#x8D44;&#x6E90;&#x3002;</p><p><strong>&#x533A;&#x522B;&#xFF1A;</strong></p><ol type="1"><li>&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x53EA;&#x80FD;&#x5C5E;&#x4E8E;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#xFF0C;&#x800C;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x4F46;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x3002; &#x7EBF;&#x7A0B;&#x4F9D;&#x8D56;&#x4E8E;&#x8FDB;&#x7A0B;&#x800C;&#x5B58;&#x5728;&#x3002;</li><li>&#x8FDB;&#x7A0B;&#x5728;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x62E5;&#x6709;&#x72EC;&#x7ACB;&#x7684;&#x5185;&#x5B58;&#x5355;&#x5143;&#xFF0C;&#x800C;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x5171;&#x4EAB;&#x8FDB;&#x7A0B;&#x7684;&#x5185;&#x5B58;&#x3002;&#xFF08;&#x8D44;&#x6E90;&#x5206;&#x914D;&#x7ED9;&#x8FDB;&#x7A0B;&#xFF0C;&#x540C;&#x4E00;&#x8FDB;&#x7A0B;&#x7684;&#x6240;&#x6709;&#x7EBF;&#x7A0B;&#x5171;&#x4EAB;&#x8BE5;&#x8FDB;&#x7A0B;&#x7684;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x3002;&#x540C;&#x4E00;&#x8FDB;&#x7A0B;&#x4E2D;&#x7684;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x5171;&#x4EAB;&#x4EE3;&#x7801;&#x6BB5;&#xFF08;&#x4EE3;&#x7801;&#x548C;&#x5E38;&#x91CF;&#xFF09;&#xFF0C;&#x6570;&#x636E;&#x6BB5;&#xFF08;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x548C;&#x9759;&#x6001;&#x53D8;&#x91CF;&#xFF09;&#xFF0C;&#x6269;&#x5C55;&#x6BB5;&#xFF08;&#x5806;&#x5B58;&#x50A8;&#xFF09;&#x3002;&#x4F46;&#x662F;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x62E5;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x6808;&#x6BB5;&#xFF0C;&#x6808;&#x6BB5;&#x53C8;&#x53EB;&#x8FD0;&#x884C;&#x65F6;&#x6BB5;&#xFF0C;&#x7528;&#x6765;&#x5B58;&#x653E;&#x6240;&#x6709;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x548C;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#x3002;&#xFF09;</li><li>&#x8FDB;&#x7A0B;&#x662F;&#x8D44;&#x6E90;&#x5206;&#x914D;&#x7684;&#x6700;&#x5C0F;&#x5355;&#x4F4D;&#xFF0C;&#x7EBF;&#x7A0B;&#x662F; CPU &#x8C03;&#x5EA6;&#x7684;&#x6700;&#x5C0F;&#x5355;&#x4F4D;&#xFF1B;</li><li>&#x7CFB;&#x7EDF;&#x5F00;&#x9500;&#xFF1A;&#x7531;&#x4E8E;&#x5728;&#x521B;&#x5EFA;&#x6216;&#x64A4;&#x6D88;&#x8FDB;&#x7A0B;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x90FD;&#x8981;&#x4E3A;&#x4E4B;&#x5206;&#x914D;&#x6216;&#x56DE;&#x6536;&#x8D44;&#x6E90;&#xFF0C;&#x5982;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x3001;I/O &#x8BBE;&#x5907;&#x7B49;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x6240;&#x4ED8;&#x51FA;&#x7684;&#x5F00;&#x9500;&#x5C06;&#x663E;&#x8457;&#x5730;&#x5927;&#x4E8E;&#x5728;&#x521B;&#x5EFA;&#x6216;&#x64A4;&#x6D88;&#x7EBF;&#x7A0B;&#x65F6;&#x7684;&#x5F00;&#x9500;&#x3002;&#x7C7B;&#x4F3C;&#x5730;&#xFF0C;&#x5728;&#x8FDB;&#x884C;&#x8FDB;&#x7A0B;&#x5207;&#x6362;&#x65F6;&#xFF0C;&#x6D89;&#x53CA;&#x5230;&#x6574;&#x4E2A;&#x5F53;&#x524D;&#x8FDB;&#x7A0B; CPU &#x73AF;&#x5883;&#x7684;&#x4FDD;&#x5B58;&#x4EE5;&#x53CA;&#x65B0;&#x88AB;&#x8C03;&#x5EA6;&#x8FD0;&#x884C;&#x7684;&#x8FDB;&#x7A0B;&#x7684; CPU &#x73AF;&#x5883;&#x7684;&#x8BBE;&#x7F6E;&#x3002;&#x800C;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x53EA;&#x987B;&#x4FDD;&#x5B58;&#x548C;&#x8BBE;&#x7F6E;&#x5C11;&#x91CF;&#x5BC4;&#x5B58;&#x5668;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5E76;&#x4E0D;&#x6D89;&#x53CA;&#x5B58;&#x50A8;&#x5668;&#x7BA1;&#x7406;&#x65B9;&#x9762;&#x7684;&#x64CD;&#x4F5C;&#x3002; &#x53EF;&#x89C1;&#xFF0C;&#x8FDB;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x5F00;&#x9500;&#x4E5F;&#x8FDC;&#x5927;&#x4E8E;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x5F00;&#x9500;&#x3002;</li><li>&#x901A;&#x4FE1;&#xFF1A;&#x7531;&#x4E8E;&#x540C;&#x4E00;&#x8FDB;&#x7A0B;&#x4E2D;&#x7684;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF0C;&#x81F4;&#x4F7F;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x540C;&#x6B65;&#x548C;&#x901A;&#x4FE1;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x4E5F;&#x53D8;&#x5F97;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#xFF0C;&#x4E3B;&#x8981;&#x65B9;&#x5F0F;&#x662F;&#xFF1A;&#x4E34;&#x754C;&#x533A;&#xFF0C;&#x4E92;&#x65A5;&#x91CF;&#xFF0C;&#x4FE1;&#x53F7;&#x91CF;&#xFF0C;&#x4E8B;&#x4EF6;&#xFF08;&#x4FE1;&#x53F7;&#xFF09;&#xFF0C;wait/notify&#x3002;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x7BA1;&#x9053;&#x3001;&#x7CFB;&#x7EDF; IPC&#xFF08;&#x5305;&#x62EC;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3001;&#x4FE1;&#x53F7;&#x91CF;&#x3001;&#x4FE1;&#x53F7;&#x3001;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x7B49;&#xFF09; &#x3001;&#x4EE5;&#x53CA;&#x5957;&#x63A5;&#x5B57; socket&#x3002;</li><li>&#x8FDB;&#x7A0B;&#x7F16;&#x7A0B;&#x8C03;&#x8BD5;&#x7B80;&#x5355;&#x53EF;&#x9760;&#x6027;&#x9AD8;&#xFF0C;&#x4F46;&#x662F;&#x521B;&#x5EFA;&#x9500;&#x6BC1;&#x5F00;&#x9500;&#x5927;&#xFF1B;&#x7EBF;&#x7A0B;&#x6B63;&#x76F8;&#x53CD;&#xFF0C;&#x5F00;&#x9500;&#x5C0F;&#xFF0C;&#x5207;&#x6362;&#x901F;&#x5EA6;&#x5FEB;&#xFF0C;&#x4F46;&#x662F;&#x7F16;&#x7A0B;&#x8C03;&#x8BD5;&#x76F8;&#x5BF9;&#x590D;&#x6742;&#x3002;</li><li>&#x8FDB;&#x7A0B;&#x95F4;&#x4E0D;&#x4F1A;&#x76F8;&#x4E92;&#x5F71;&#x54CD;&#xFF1B;&#x800C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5D29;&#x6E83;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x6574;&#x4E2A;&#x8FDB;&#x7A0B;&#x5D29;&#x6E83;&#x3002;<ol type="1"><li>&#x6839;&#x636E;&#x5929;&#x52E4;2018&#x73ED;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF0C;&#x5173;&#x4E8E;&#x7EBF;&#x7A0B;&#x7684;&#x963B;&#x585E;&#xFF0C;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</li><li>&#x6709;&#x4E9B;&#x7CFB;&#x7EDF;&#x540C;&#x65F6;&#x652F;&#x6301;&#x7528;&#x6237;&#x53CA;&#x7EBF;&#x7A0B;&#x548C;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#xFF0C;&#x56E0;&#x6B64;&#x6839;&#x636E;&#x7528;&#x6237;&#x53CA;&#x7EBF;&#x7A0B;&#x548C;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#x7684;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x4EA7;&#x751F;&#x4E86;3&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x3002;</li><li><strong>&#x591A;&#x5BF9;&#x4E00;&#x6A21;&#x578B;&#x3002;</strong>&#x591A;&#x5BF9;&#x4E00;&#x6A21;&#x578B;&#x5C06;&#x591A;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#x4E0A;&#x3002;&#x5728;&#x91C7;&#x7528;&#x8BE5;&#x6A21;&#x578B;&#x7684;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x7EBF;&#x7A0B;&#x5728;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x8FDB;&#x884C;&#x7BA1;&#x7406;&#xFF0C;&#x6548;&#x7387;&#x76F8;&#x5BF9;&#x8F83;&#x9AD8;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x7531;&#x4E8E;&#x591A;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#xFF0C;&#x53EA;&#x8981;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#xFF0C;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;&#x6574;&#x4E2A;&#x8FDB;&#x7A0B;&#x963B;&#x585E;&#x3002;&#x800C;&#x4E14;&#x7531;&#x4E8E;&#x7CFB;&#x7EDF;&#x53EA;&#x80FD;&#x8BC6;&#x522B;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF08;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x5373;&#x4F7F;&#x6709;&#x591A;&#x4E2A;&#x5904;&#x7406;&#x5668;&#xFF0C;&#x8BE5;&#x8FDB;&#x7A0B;&#x7684;&#x82E5;&#x5E72;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x4E5F;&#x53EA;&#x80FD;&#x540C;&#x65F6;&#x8FD0;&#x884C;&#x4E00;&#x4E2A;&#xFF0C;&#x4E0D;&#x80FD;&#x5E76;&#x884C;&#x6267;&#x884C;&#x3002;</li><li><strong>&#x4E00;&#x5BF9;&#x4E00;&#x6A21;&#x578B;&#x3002;</strong>&#x4E00;&#x5BF9;&#x4E00;&#x6A21;&#x578B;&#x5C06;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#x4E0E;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x3002;&#x8FD9;&#x6837;&#x505A;&#x7684;&#x597D;&#x5904;&#x662F;&#x5F53;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x65F6;&#xFF0C;&#x4E0D;&#x5F71;&#x54CD;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x7684;&#x8FD0;&#x884C;&#xFF0C;&#x56E0;&#x6B64;&#x4E00;&#x5BF9;&#x4E00;&#x6A21;&#x578B;&#x7684;&#x5E76;&#x53D1;&#x6027;&#x6BD4;&#x591A;&#x5BF9;&#x4E00;&#x6A21;&#x578B;&#x597D;&#x3002;&#x800C;&#x4E14;&#x8FD9;&#x6837;&#x505A;&#x4E4B;&#x540E;&#xFF0C;&#x5728;&#x591A;&#x5904;&#x7406;&#x5668;&#x4E0A;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x591A;&#x7EBF;&#x7A0B;&#x5E76;&#x884C;&#x3002;&#x8FD9;&#x79CD;&#x6A21;&#x578B;&#x7684;&#x7F3A;&#x70B9;&#x662F;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x65F6;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x76F8;&#x5E94;&#x7684;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#x3002;</li><li><strong>&#x591A;&#x5BF9;&#x591A;&#x6A21;&#x578B;&#x3002;</strong>&#x591A;&#x5BF9;&#x591A;&#x6A21;&#x578B;&#x5C06;&#x591A;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x6620;&#x5C04;&#x5230;&#x591A;&#x4E2A;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#xFF08;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#x6570;&#x4E0D;&#x591A;&#x4E8E;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x6570;&#xFF0C;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#x6570;&#x6839;&#x636E;&#x5177;&#x4F53;&#x60C5;&#x51B5;&#x786E;&#x5B9A;&#xFF09;&#x3002;&#x91C7;&#x7528;&#x8FD9;&#x6837;&#x7684;&#x6A21;&#x578B;&#x53EF;&#x4EE5;&#x6253;&#x7834;&#x524D;&#x4E24;&#x79CD;&#x6A21;&#x578B;&#x5BF9;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x4E0D;&#x4EC5;&#x53EF;&#x4EE5;&#x4F7F;&#x591A;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x771F;&#x6B63;&#x610F;&#x4E49;&#x4E0A;&#x5E76;&#x884C;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x4F1A;&#x9650;&#x5236;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x7684;&#x6570;&#x91CF;&#x3002;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x521B;&#x5EFA;&#x6240;&#x9700;&#x7684;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#xFF0C;&#x591A;&#x4E2A;&#x5185;&#x6838;&#x7EA7;&#x7EBF;&#x7A0B;&#x6839;&#x636E;&#x9700;&#x8981;&#x8C03;&#x7528;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#xFF0C;&#x5F53;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x5EA6;&#x6267;&#x884C;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x3002;</li></ol></li><li>&#x8FDB;&#x7A0B;&#x9002;&#x5E94;&#x4E8E;&#x591A;&#x6838;&#x3001;&#x591A;&#x673A;&#x5206;&#x5E03;&#xFF1B;&#x7EBF;&#x7A0B;&#x9002;&#x7528;&#x4E8E;&#x591A;&#x6838;&#x3002;</li></ol><p><strong>&#x8BE6;&#x7EC6;&#x7684;&#x8BF4;&#x8FDB;&#x7A0B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x65B9;&#x5F0F;&#xFF1A;</strong></p><p>&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x7BA1;&#x9053;&#x3001;&#x7CFB;&#x7EDF; IPC&#xFF08;&#x5305;&#x62EC;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3001;&#x4FE1;&#x53F7;&#x91CF;&#x3001;&#x4FE1;&#x53F7;&#x3001;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x7B49;&#xFF09; &#x3001;&#x4EE5;&#x53CA;&#x5957;&#x63A5;&#x5B57; socket&#x3002;</p><ol type="1"><li><p>&#x7BA1;&#x9053;&#xFF1A;</p><p>&#x7BA1;&#x9053;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x65E0;&#x540D;&#x7BA1;&#x9053;&#x548C;&#x547D;&#x540D;&#x7BA1;&#x9053;:&#x7BA1;&#x9053;&#x53EF;&#x7528;&#x4E8E;&#x5177;&#x6709;&#x4EB2;&#x7F18;&#x5173;&#x7CFB;&#x7684;&#x7236;&#x5B50;&#x8FDB;&#x7A0B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#xFF0C;&#x6709;&#x540D;&#x7BA1;&#x9053;&#x9664;&#x4E86;&#x5177;&#x6709;&#x7BA1;&#x9053;&#x6240;&#x5177;&#x6709;&#x7684;&#x529F;&#x80FD;&#x5916;&#xFF0C;&#x5B83;&#x8FD8;&#x5141;&#x8BB8;&#x65E0;&#x4EB2;&#x7F18;&#x5173;&#x7CFB;&#x8FDB;&#x7A0B;&#x95F4;&#x7684;&#x901A;&#x4FE1;</p><ol type="1"><li>&#x666E;&#x901A;&#x7BA1;&#x9053; PIPE&#xFF1A;<ul><li>&#x5B83;&#x662F;&#x534A;&#x53CC;&#x5DE5;&#x7684;&#xFF08;&#x5373;&#x6570;&#x636E;&#x53EA;&#x80FD;&#x5728;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x4E0A;&#x6D41;&#x52A8;&#xFF09; &#xFF0C;&#x5177;&#x6709;&#x56FA;&#x5B9A;&#x7684;&#x8BFB;&#x7AEF;&#x548C;&#x5199;&#x7AEF;</li><li>&#x5B83;&#x53EA;&#x80FD;&#x7528;&#x4E8E;&#x5177;&#x6709;&#x4EB2;&#x7F18;&#x5173;&#x7CFB;&#x7684;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#xFF08;&#x4E5F;&#x662F;&#x7236;&#x5B50;&#x8FDB;&#x7A0B;&#x6216;&#x8005;&#x5144;&#x5F1F;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#xFF09;</li><li>&#x5B83;&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5BF9;&#x4E8E;&#x5B83;&#x7684;&#x8BFB;&#x5199;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x666E;&#x901A;&#x7684; read&#x3001;write &#x7B49;&#x51FD;&#x6570;&#x3002; &#x4F46;&#x662F;&#x5B83;&#x4E0D;&#x662F;&#x666E;&#x901A;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4E0D;&#x5C5E;&#x4E8E;&#x5176;&#x4ED6;&#x4EFB;&#x4F55;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x5B58;&#x5728;&#x4E8E;&#x5185;&#x5B58;&#x4E2D;&#x3002;</li></ul></li><li>&#x547D;&#x540D;&#x7BA1;&#x9053; FIFO&#xFF1A;<ul><li>FIFO &#x53EF;&#x4EE5;&#x5728;&#x65E0;&#x5173;&#x7684;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x4EA4;&#x6362;&#x6570;&#x636E;</li><li>FIFO &#x6709;&#x8DEF;&#x5F84;&#x540D;&#x4E0E;&#x4E4B;&#x76F8;&#x5173;&#x8054;&#xFF0C;&#x5B83;&#x4EE5;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x8BBE;&#x5907;&#x6587;&#x4EF6;&#x5F62;&#x5F0F;&#x5B58;&#x5728;&#x4E8E;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x4E2D;&#x3002;</li></ul></li></ol></li><li><p>&#x7CFB;&#x7EDF; IPC</p><ol type="1"><li><p>&#x6D88;&#x606F;&#x961F;&#x5217;</p><p>&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x662F;&#x6D88;&#x606F;&#x7684;&#x94FE;&#x63A5;&#x8868;&#xFF0C;&#x5B58;&#x653E;&#x5728;&#x5185;&#x6838;&#x4E2D;&#x3002; &#x4E00;&#x4E2A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7531;&#x4E00;&#x4E2A;&#x6807;&#x8BC6;&#x7B26;&#xFF08;&#x5373;&#x961F;&#x5217; ID&#xFF09; &#x6765;&#x6807;&#x8BB0;&#x3002; (&#x6D88;&#x606F;&#x961F;&#x5217;&#x514B;&#x670D;&#x4E86;&#x4FE1;&#x53F7;&#x4F20;&#x9012;&#x4FE1;&#x606F;&#x5C11;&#xFF0C;&#x7BA1;&#x9053;&#x53EA;&#x80FD;&#x627F;&#x8F7D;&#x65E0;&#x683C;&#x5F0F;&#x5B57;&#x8282;&#x6D41;&#x4EE5;&#x53CA;&#x7F13;&#x51B2;&#x533A;&#x5927;&#x5C0F;&#x53D7;&#x9650;&#x7B49;&#x7279;&#x70B9;)&#x5177;&#x6709;&#x5199;&#x6743;&#x9650;&#x5F97;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x5F97;&#x89C4;&#x5219;&#x5411;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4E2D;&#x6DFB;&#x52A0;&#x65B0;&#x4FE1;&#x606F;&#xFF1B;&#x5BF9;&#x6D88;&#x606F;&#x961F;&#x5217;&#x6709;&#x8BFB;&#x6743;&#x9650;&#x5F97;&#x8FDB;&#x7A0B;&#x5219;&#x53EF;&#x4EE5;&#x4ECE;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4E2D;&#x8BFB;&#x53D6;&#x4FE1;&#x606F;</p><p>&#x7279;&#x70B9;&#xFF1A;</p><ul><li>&#x6D88;&#x606F;&#x961F;&#x5217;&#x662F;&#x9762;&#x5411;&#x8BB0;&#x5F55;&#x7684;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6D88;&#x606F;&#x5177;&#x6709;&#x7279;&#x5B9A;&#x7684;&#x683C;&#x5F0F;&#x4EE5;&#x53CA;&#x7279;&#x5B9A;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x3002;</li><li>&#x6D88;&#x606F;&#x961F;&#x5217;&#x72EC;&#x7ACB;&#x4E8E;&#x53D1;&#x9001;&#x4E0E;&#x63A5;&#x6536;&#x8FDB;&#x7A0B;&#x3002; &#x8FDB;&#x7A0B;&#x7EC8;&#x6B62;&#x65F6;&#xFF0C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x53CA;&#x5176;&#x5185;&#x5BB9;&#x5E76;&#x4E0D;&#x4F1A;&#x88AB;&#x5220;&#x9664;&#x3002;</li><li>&#x6D88;&#x606F;&#x961F;&#x5217;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x6D88;&#x606F;&#x7684;&#x968F;&#x673A;&#x67E5;&#x8BE2;,&#x6D88;&#x606F;&#x4E0D;&#x4E00;&#x5B9A;&#x8981;&#x4EE5;&#x5148;&#x8FDB;&#x5148;&#x51FA;&#x7684;&#x6B21;&#x5E8F;&#x8BFB;&#x53D6;,&#x4E5F;&#x53EF;&#x4EE5;&#x6309;&#x6D88;&#x606F;&#x7684;&#x7C7B;&#x578B;&#x8BFB;&#x53D6;&#x3002;</li></ul></li><li><p>&#x4FE1;&#x53F7;&#x91CF; semaphore</p><p>&#x4FE1;&#x53F7;&#x91CF;&#xFF08;semaphore&#xFF09; &#x4E0E;&#x5DF2;&#x7ECF;&#x4ECB;&#x7ECD;&#x8FC7;&#x7684; IPC &#x7ED3;&#x6784;&#x4E0D;&#x540C;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x63A7;&#x5236;&#x591A;&#x4E2A;&#x8FDB;&#x7A0B;&#x5BF9;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x8BBF;&#x95EE;&#x3002;&#x4FE1;&#x53F7;&#x91CF;&#x7528;&#x4E8E;&#x5B9E;&#x73B0;&#x8FDB;&#x7A0B;&#x95F4;&#x7684;&#x4E92;&#x65A5;&#x4E0E;&#x540C;&#x6B65;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x6570;&#x636E;&#x3002;</p><p>&#x7279;&#x70B9;</p><ul><li>&#x4FE1;&#x53F7;&#x91CF;&#x7528;&#x4E8E;&#x8FDB;&#x7A0B;&#x95F4;&#x540C;&#x6B65;&#xFF0C;&#x82E5;&#x8981;&#x5728;&#x8FDB;&#x7A0B;&#x95F4;&#x4F20;&#x9012;&#x6570;&#x636E;&#x9700;&#x8981;&#x7ED3;&#x5408;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x3002;</li><li>&#x4FE1;&#x53F7;&#x91CF;&#x57FA;&#x4E8E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684; PV &#x64CD;&#x4F5C;&#xFF0C;&#x7A0B;&#x5E8F;&#x5BF9;&#x4FE1;&#x53F7;&#x91CF;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x3002;</li><li>&#x6BCF;&#x6B21;&#x5BF9;&#x4FE1;&#x53F7;&#x91CF;&#x7684; PV &#x64CD;&#x4F5C;&#x4E0D;&#x4EC5;&#x9650;&#x4E8E;&#x5BF9;&#x4FE1;&#x53F7;&#x91CF;&#x503C;&#x52A0; 1 &#x6216;&#x51CF; 1&#xFF0C;&#x800C;&#x4E14;&#x53EF;&#x4EE5;&#x52A0;&#x51CF;&#x4EFB;&#x610F;&#x6B63;&#x6574;&#x6570;&#x3002;</li><li>&#x652F;&#x6301;&#x4FE1;&#x53F7;&#x91CF;&#x7EC4;&#x3002;</li></ul></li><li><p>&#x4FE1;&#x53F7; signal</p><p>&#x4FE1;&#x53F7;&#x662F;&#x4E00;&#x79CD;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x7684;&#x901A;&#x4FE1;&#x65B9;&#x5F0F;&#xFF0C;&#x7528;&#x4E8E;&#x901A;&#x77E5;&#x63A5;&#x6536;&#x8FDB;&#x7A0B;&#x67D0;&#x4E2A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7ECF;&#x53D1;&#x751F;&#x3002;</p></li><li><p>&#x5171;&#x4EAB;&#x5185;&#x5B58;&#xFF08;Shared Memory&#xFF09;</p><p>&#x5B83;&#x4F7F;&#x5F97;&#x591A;&#x4E2A;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x540C;&#x4E00;&#x5757;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x4E0D;&#x540C;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x53CA;&#x65F6;&#x770B;&#x5230;&#x5BF9;&#x65B9;&#x8FDB;&#x7A0B;&#x4E2D;&#x5BF9;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x4E2D;&#x6570;&#x636E;&#x5F97;&#x66F4;&#x65B0;&#x3002; &#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x9700;&#x8981;&#x4F9D;&#x9760;&#x67D0;&#x79CD;&#x540C;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x4E92;&#x65A5;&#x9501;&#x548C;&#x4FE1;&#x53F7;&#x91CF;&#x7B49;</p><p>&#x7279;&#x70B9;&#xFF1A;</p><ul><li>&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x662F;&#x6700;&#x5FEB;&#x7684;&#x4E00;&#x79CD; IPC&#xFF0C;&#x56E0;&#x4E3A;&#x8FDB;&#x7A0B;&#x662F;&#x76F4;&#x63A5;&#x5BF9;&#x5185;&#x5B58;&#x8FDB;&#x884C;&#x5B58;&#x53D6;</li><li>&#x56E0;&#x4E3A;&#x591A;&#x4E2A;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x540C;&#x6B65;</li><li>&#x4FE1;&#x53F7;&#x91CF;+&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x901A;&#x5E38;&#x7ED3;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#xFF0C;&#x4FE1;&#x53F7;&#x91CF;&#x7528;&#x6765;&#x540C;&#x6B65;&#x5BF9;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x7684;&#x8BBF;&#x95EE;</li></ul></li></ol></li><li><p>&#x5957;&#x63A5;&#x5B57; SOCKET&#xFF1A;</p><p>socket &#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x673A;&#x5236;&#xFF0C; &#x4E0E;&#x5176;&#x4ED6;&#x901A;&#x4FE1;&#x673A;&#x5236;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C; &#x5B83;&#x53EF;&#x7528;&#x4E8E;&#x4E0D;&#x540C;&#x4E3B;&#x673A;&#x4E4B;&#x95F4;&#x7684;&#x8FDB; &#x7A0B;&#x901A;&#x4FE1;&#x3002;</p></li></ol><p><strong>&#x8BE6;&#x7EC6;&#x7684;&#x8BF4;&#x7EBF;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x7684;&#x65B9;&#x5F0F;&#xFF1A;</strong></p><p>&#x4E34;&#x754C;&#x533A;&#xFF1A;&#x901A;&#x8FC7;&#x591A;&#x7EBF;&#x7A0B;&#x7684;&#x4E32;&#x884C;&#x5316;&#x6765;&#x8BBF;&#x95EE;&#x516C;&#x5171;&#x8D44;&#x6E90;&#x6216;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF0C; &#x901F;&#x5EA6;&#x5FEB;&#xFF0C; &#x9002;&#x5408;&#x63A7;&#x5236;&#x6570;&#x636E;&#x8BBF;&#x95EE;&#xFF1B;</p><p>&#x4E92;&#x65A5;&#x91CF; Synchronized/Lock&#xFF1A;&#x91C7;&#x7528;&#x4E92;&#x65A5;&#x5BF9;&#x8C61;&#x673A;&#x5236;&#xFF0C; &#x53EA;&#x6709;&#x62E5;&#x6709;&#x4E92;&#x65A5;&#x5BF9;&#x8C61;&#x7684;&#x7EBF;&#x7A0B;&#x624D;&#x6709;&#x8BBF;&#x95EE;&#x516C;&#x5171;&#x8D44;&#x6E90;&#x7684;&#x6743;&#x9650;&#x3002; &#x56E0;&#x4E3A;&#x4E92;&#x65A5;&#x5BF9;&#x8C61;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#xFF0C; &#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x516C;&#x5171;&#x8D44;&#x6E90;&#x4E0D;&#x4F1A;&#x88AB;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x540C;&#x65F6;&#x8BBF;&#x95EE;&#x3002;</p><p>&#x4FE1;&#x53F7;&#x91CF; Semphare&#xFF1A;&#x4E3A;&#x63A7;&#x5236;&#x5177;&#x6709;&#x6709;&#x9650;&#x6570;&#x91CF;&#x7684;&#x7528;&#x6237;&#x8D44;&#x6E90;&#x800C;&#x8BBE;&#x8BA1;&#x7684;&#xFF0C; &#x5B83;&#x5141;&#x8BB8;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x5728;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x53BB;&#x8BBF;&#x95EE;&#x540C;&#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#xFF0C; &#x4F46;&#x4E00;&#x822C;&#x9700;&#x8981;&#x9650;&#x5236;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x8BBF;&#x95EE;&#x6B64;&#x8D44;&#x6E90;&#x7684;&#x6700;&#x5927;&#x7EBF;&#x7A0B;&#x6570;&#x76EE;&#x3002;</p><p>&#x4E8B;&#x4EF6;(&#x4FE1;&#x53F7;)&#xFF0C; Wait/Notify&#xFF1A;&#x901A;&#x8FC7;&#x901A;&#x77E5;&#x64CD;&#x4F5C;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x4FDD;&#x6301;&#x591A;&#x7EBF;&#x7A0B;&#x540C;&#x6B65;&#xFF0C; &#x8FD8;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x5B9E;&#x73B0;&#x591A;&#x7EBF;&#x7A0B;&#x4F18;&#x5148;&#x7EA7;&#x7684;&#x6BD4;&#x8F83;&#x64CD;&#x4F5C;&#x3002;</p><h1 id="linux&#x865A;&#x62DF;&#x5185;&#x5B58;">Linux&#x865A;&#x62DF;&#x5185;&#x5B58;</h1><p>&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x4E0D;&#x540C;&#x8FDB;&#x7A0B;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x5728;&#x7269;&#x7406;&#x5185;&#x5B58;&#x4E2D;&#x8FD0;&#x884C;&#x800C;&#x5BF9;&#x7269;&#x7406;&#x5185;&#x5B58;&#x7684;&#x4E89;&#x593A;&#x548C;&#x8DF5;&#x8E0F;&#xFF0C; &#x91C7;&#x7528;&#x4E86;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x3002;</p><p>&#x865A;&#x62DF;&#x5185;&#x5B58;&#x6280;&#x672F;&#x4F7F;&#x5F97;&#x4E0D;&#x540C;&#x8FDB;&#x7A0B;&#x5728;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C; &#x5B83;&#x6240;&#x770B;&#x5230;&#x7684;&#x662F;&#x81EA;&#x5DF1;&#x72EC;&#x81EA;&#x5360;&#x6709;&#x4E86;&#x5F53;&#x524D;&#x7CFB;&#x7EDF;&#x7684; 4G &#x5185;&#x5B58;&#x3002; &#x6240;&#x6709;&#x8FDB;&#x7A0B;&#x5171;&#x4EAB;&#x540C;&#x4E00;&#x7269;&#x7406;&#x5185;&#x5B58;&#xFF0C; &#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x53EA;&#x628A;&#x81EA;&#x5DF1;&#x76EE;&#x524D;&#x9700;&#x8981;&#x7684;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x6620;&#x5C04;&#x5E76;&#x5B58;&#x50A8;&#x5230;&#x7269;&#x7406;&#x5185;&#x5B58;&#x4E0A;&#x3002; &#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C; &#x5728;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x52A0;&#x8F7D;&#x65F6;&#xFF0C; &#x5185;&#x6838;&#x53EA;&#x662F;&#x4E3A;&#x8FDB;&#x7A0B;&#x201C;&#x521B;&#x5EFA;&#x201D; &#x4E86;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x7684;&#x5E03;&#x5C40;&#xFF0C; &#x5177;&#x4F53;&#x5C31;&#x662F;&#x521D;&#x59CB;&#x5316;&#x8FDB;&#x7A0B;&#x63A7;&#x5236;&#x8868;&#x4E2D;&#x5185;&#x5B58;&#x76F8;&#x5173;&#x7684;&#x94FE;&#x8868;&#xFF0C; &#x5B9E;&#x9645;&#x4E0A;&#x5E76;&#x4E0D;&#x7ACB;&#x5373;&#x5C31;&#x628A;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x7684;&#x7A0B;&#x5E8F;&#x6570;&#x636E;&#x548C;&#x4EE3;&#x7801;&#xFF08;&#x6BD4;&#x5982;.text .data &#x6BB5;&#xFF09; &#x62F7;&#x8D1D;&#x5230;&#x7269;&#x7406;&#x5185;&#x5B58;&#x4E2D;&#xFF0C; &#x53EA;&#x662F;&#x5EFA;&#x7ACB;&#x597D;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x548C;&#x78C1;&#x76D8;&#x6587;&#x4EF6;&#x4E4B;&#x95F4;&#x7684;&#x6620;&#x5C04;&#x5C31;&#x597D;&#xFF08;&#x53EB;&#x505A;&#x5B58;&#x50A8;&#x5668;&#x6620;&#x5C04;&#xFF09; &#xFF0C; &#x7B49;&#x5230;&#x8FD0;&#x884C;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x7A0B;&#x5E8F;&#x65F6;&#xFF0C; &#x624D;&#x4F1A;&#x901A;&#x8FC7;&#x7F3A;&#x9875;&#x5F02;&#x5E38;&#xFF0C; &#x6765;&#x62F7;&#x8D1D;&#x6570;&#x636E;&#x3002; &#x8FD8;&#x6709;&#x8FDB;&#x7A0B;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C; &#x8981;&#x52A8;&#x6001;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C; &#x6BD4;&#x5982; malloc &#x65F6;&#xFF0C; &#x4E5F;&#x53EA;&#x662F;&#x5206;&#x914D;&#x4E86;&#x865A;&#x62DF;&#x5185;&#x5B58;&#xFF0C; &#x5373;&#x4E3A;&#x8FD9;&#x5757;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x5BF9;&#x5E94;&#x7684;&#x9875;&#x8868;&#x9879;&#x505A;&#x76F8;&#x5E94;&#x8BBE;&#x7F6E;&#xFF0C; &#x5F53;&#x8FDB;&#x7A0B;&#x771F;&#x6B63;&#x8BBF;&#x95EE;&#x5230;&#x6B64;&#x6570;&#x636E;&#x65F6;&#xFF0C; &#x624D;&#x5F15;&#x53D1;&#x7F3A;&#x9875;&#x5F02;&#x5E38;&#x3002;</p><p>&#x8BF7;&#x6C42;&#x5206;&#x9875;&#x7CFB;&#x7EDF;&#x3001; &#x8BF7;&#x6C42;&#x5206;&#x6BB5;&#x7CFB;&#x7EDF;&#x548C;&#x8BF7;&#x6C42;&#x6BB5;&#x9875;&#x5F0F;&#x7CFB;&#x7EDF;&#x90FD;&#x662F;&#x9488;&#x5BF9;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x7684;&#xFF0C; &#x901A;&#x8FC7;&#x8BF7;&#x6C42;&#x5B9E;&#x73B0;&#x5185;&#x5B58;&#x4E0E; &#x5916;&#x5B58;&#x7684;&#x4FE1;&#x606F;&#x7F6E;&#x6362;&#x3002;</p><p><strong>&#x865A;&#x62DF;&#x5185;&#x5B58;&#x7684;&#x597D;&#x5904;&#xFF1A;</strong></p><ol type="1"><li>&#x6269;&#x5927;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF1B;</li><li>&#x5185;&#x5B58;&#x4FDD;&#x62A4;&#xFF1A; &#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x8FD0;&#x884C;&#x5728;&#x5404;&#x81EA;&#x7684;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF0C; &#x4E92;&#x76F8;&#x4E0D;&#x80FD;&#x5E72;&#x6270;&#x5BF9;&#x65B9;&#x3002; &#x865A;&#x5B58;&#x8FD8;&#x5BF9;&#x7279;&#x5B9A; &#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#x63D0;&#x4F9B;&#x5199;&#x4FDD;&#x62A4;&#xFF0C; &#x53EF;&#x4EE5;&#x9632;&#x6B62;&#x4EE3;&#x7801;&#x6216;&#x6570;&#x636E;&#x88AB;&#x6076;&#x610F;&#x7BE1;&#x6539;&#x3002;</li><li>&#x516C;&#x5E73;&#x5185;&#x5B58;&#x5206;&#x914D;&#x3002; &#x91C7;&#x7528;&#x4E86;&#x865A;&#x5B58;&#x4E4B;&#x540E;&#xFF0C; &#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x76F8;&#x5F53;&#x4E8E;&#x6709;&#x540C;&#x6837;&#x5927;&#x5C0F;&#x7684;&#x865A;&#x5B58;&#x7A7A;&#x95F4;&#x3002;</li><li>&#x5F53;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1;&#x65F6;&#xFF0C; &#x53EF;&#x91C7;&#x7528;&#x865A;&#x5B58;&#x5171;&#x4EAB;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x3002;</li><li>&#x5F53;&#x4E0D;&#x540C;&#x7684;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528;&#x540C;&#x6837;&#x7684;&#x4EE3;&#x7801;&#x65F6;&#xFF0C; &#x6BD4;&#x5982;&#x5E93;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#xFF0C; &#x7269;&#x7406;&#x5185;&#x5B58;&#x4E2D;&#x53EF;&#x4EE5;&#x53EA;&#x5B58;&#x50A8;&#x4E00;&#x4EFD;&#x8FD9;&#x6837; &#x7684;&#x4EE3;&#x7801;&#xFF0C; &#x4E0D;&#x540C;&#x7684;&#x8FDB;&#x7A0B;&#x53EA;&#x9700;&#x8981;&#x628A;&#x81EA;&#x5DF1;&#x7684;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x6620;&#x5C04;&#x8FC7;&#x53BB;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C; &#x8282;&#x7701;&#x5185;&#x5B58;&#x3002;</li><li>&#x865A;&#x62DF;&#x5185;&#x5B58;&#x5F88;&#x9002;&#x5408;&#x5728;&#x591A;&#x9053;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x7CFB;&#x7EDF;&#x4E2D;&#x4F7F;&#x7528;&#xFF0C; &#x8BB8;&#x591A;&#x7A0B;&#x5E8F;&#x7684;&#x7247;&#x6BB5;&#x540C;&#x65F6;&#x4FDD;&#x5B58;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x3002; &#x5F53;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x7B49;&#x5F85;&#x5B83;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x8BFB;&#x5165;&#x5185;&#x5B58;&#x65F6;&#xFF0C; &#x53EF;&#x4EE5;&#x628A; CPU &#x4EA4;&#x7ED9;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528;&#x3002;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x53EF;&#x4EE5;&#x4FDD;&#x7559;&#x591A;&#x4E2A;&#x8FDB;&#x7A0B;&#xFF0C;&#x7CFB;&#x7EDF;&#x5E76;&#x53D1;&#x5EA6;&#x63D0;&#x9AD8;&#x3002;</li><li>&#x5728;&#x7A0B;&#x5E8F;&#x9700;&#x8981;&#x5206;&#x914D;&#x8FDE;&#x7EED;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x7684;&#x65F6;&#x5019;&#xFF0C; &#x53EA;&#x9700;&#x8981;&#x5728;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x5206;&#x914D;&#x8FDE;&#x7EED;&#x7A7A;&#x95F4;&#xFF0C; &#x800C;&#x4E0D;&#x9700;&#x8981;&#x5B9E;&#x9645;&#x7269;&#x7406;&#x5185;&#x5B58;&#x7684;&#x8FDE;&#x7EED;&#x7A7A;&#x95F4;&#xFF0C; &#x53EF;&#x4EE5;&#x5229;&#x7528;&#x788E;&#x7247;&#x3002;</li></ol><p><strong>&#x865A;&#x62DF;&#x5185;&#x5B58;&#x7684;&#x4EE3;&#x4EF7;&#xFF1A;</strong></p><ol type="1"><li>&#x865A;&#x5B58;&#x7684;&#x7BA1;&#x7406;&#x9700;&#x8981;&#x5EFA;&#x7ACB;&#x5F88;&#x591A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C; &#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8981;&#x5360;&#x7528;&#x989D;&#x5916;&#x7684;&#x5185;&#x5B58;</li><li>&#x865A;&#x62DF;&#x5730;&#x5740;&#x5230;&#x7269;&#x7406;&#x5730;&#x5740;&#x7684;&#x8F6C;&#x6362;&#xFF0C; &#x589E;&#x52A0;&#x4E86;&#x6307;&#x4EE4;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002;</li><li>&#x9875;&#x9762;&#x7684;&#x6362;&#x5165;&#x6362;&#x51FA;&#x9700;&#x8981;&#x78C1;&#x76D8; I/O&#xFF0C; &#x8FD9;&#x662F;&#x5F88;&#x8017;&#x65F6;&#x7684;</li><li>&#x5982;&#x679C;&#x4E00;&#x9875;&#x4E2D;&#x53EA;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x6570;&#x636E;&#xFF0C; &#x4F1A;&#x6D6A;&#x8D39;&#x5185;&#x5B58;&#x3002;</li></ol><h1 id="&#x7A0B;&#x5E8F;&#x7684;&#x5185;&#x5B58;&#x7ED3;&#x6784;">&#x7A0B;&#x5E8F;&#x7684;&#x5185;&#x5B58;&#x7ED3;&#x6784;</h1><p><img src="/posts/93f579e6/1594572669123.png"></p><p>&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x672C;&#x8D28;&#x4E0A;&#x90FD;&#x662F;&#x7531; BSS &#x6BB5;&#x3001; data &#x6BB5;&#x3001; text &#x6BB5;&#x4E09;&#x4E2A;&#x7EC4;&#x6210;&#x7684;&#x3002; &#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E00;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x5728;&#x5B58;&#x50A8;&#xFF08;&#x6CA1;&#x6709;&#x8C03;&#x5165;&#x5185;&#x5B58;&#xFF09; &#x65F6;&#x5206;&#x4E3A;&#x4EE3;&#x7801;&#x6BB5;&#x3001; &#x6570;&#x636E;&#x533A;&#x548C;&#x672A;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;&#x533A;&#x4E09;&#x90E8;&#x5206;&#x3002;</p><p>BSS &#x6BB5;&#xFF08;&#x672A;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;&#x533A;&#xFF09; &#xFF1A; &#x901A;&#x5E38;&#x7528;&#x6765;&#x5B58;&#x653E;&#x7A0B;&#x5E8F;&#x4E2D;&#x672A;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x548C;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x7684;&#x4E00;&#x5757;&#x5185; &#x5B58;&#x533A;&#x57DF;&#x3002; BSS &#x6BB5;&#x5C5E;&#x4E8E;&#x9759;&#x6001;&#x5206;&#x914D;&#xFF0C; &#x7A0B;&#x5E8F;&#x7ED3;&#x675F;&#x540E;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x8D44;&#x6E90;&#x7531;&#x7CFB;&#x7EDF;&#x81EA;&#x52A8;&#x91CA;&#x653E;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 秋招 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 找工作 </tag>
            
            <tag> 后台 </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> 计算机网络 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>学英语的经验教训总结</title>
      <link href="//posts/437c14e8/"/>
      <url>//posts/437c14e8/</url>
      <content type="html"><![CDATA[<p>&#x4E00;&#x4E2A;&#x5B66;&#x82F1;&#x8BED;&#x6CA1;&#x5929;&#x8D4B;&#x7684;&#x5A03;&#x786C;&#x786C;&#x5730;&#x628A;&#x82F1;&#x8BED;&#x78E8;&#x4E0B;&#x6765;&#x7684;&#x8840;&#x6CEA;&#x53F2;&#x3002;</p><a id="more"></a><p>&#x6211;&#x4E4B;&#x524D;&#x5907;&#x8003;&#x7684;&#x662F;&#x6258;&#x798F;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x542C;&#x8BF4;&#x8BFB;&#x5199;&#xFF0C;&#x5916;&#x52A0;&#x4E00;&#x4E2A;&#x80CC;&#x5355;&#x8BCD;&#x3002;&#x6328;&#x4E2A;&#x8BF4;&#x3002;</p><h1 id="&#x80CC;&#x5355;&#x8BCD;">&#x80CC;&#x5355;&#x8BCD;</h1><p>&#x6211;&#x662F;2019.7.18&#x5F00;&#x59CB;&#x575A;&#x6301;&#x80CC;&#x5355;&#x8BCD;&#x7684;&#xFF0C;&#x7528;&#x7684;&#x8F6F;&#x4EF6;&#x662F;&#x767E;&#x8BCD;&#x65A9;&#xFF0C;&#x4ECE;&#x516D;&#x7EA7;&#x5355;&#x8BCD;&#x5F00;&#x59CB;&#xFF0C;&#x5230;&#x6258;&#x798F;&#x8BCD;&#x6C47;&#xFF0C;&#x4ECE;&#x4E00;&#x5929;&#x80CC;60&#x4E2A;&#x5230;&#x4E00;&#x5929;&#x80CC;200&#x4E2A;&#xFF0C;&#x4E00;&#x76F4;&#x575A;&#x6301;&#x5230;12&#x6708;&#xFF0C;&#x671F;&#x95F4;&#x4ECE;&#x672A;&#x505C;&#x8FC7;&#x3002;</p><p>&#x56E0;&#x4E3A;&#x5355;&#x8BCD;&#x8BB0;&#x4E0D;&#x4F4F;&#xFF0C;&#x6211;&#x5DF2;&#x7ECF;&#x6570;&#x4E0D;&#x6E05;&#x6709;&#x591A;&#x5C11;&#x6B21;&#x6DF1;&#x591C;&#x91CC;&#x4E00;&#x4E2A;&#x4EBA;&#x4F0F;&#x6848;&#x75DB;&#x54ED;&#xFF0C;&#x8981;&#x77E5;&#x9053;&#x6211;&#x4E4B;&#x524D;&#x4ECE;&#x6765;&#x6CA1;&#x6709;&#x56E0;&#x4E3A;&#x5B66;&#x4E0D;&#x4F1A;&#x800C;&#x54ED;&#x8FC7;&#xFF0C;&#x5305;&#x62EC;&#x9AD8;&#x8003;&#xFF0C;&#x5305;&#x62EC;&#x8003;&#x7814;&#xFF0C;&#x6211;&#x90FD;&#x662F;&#x4ECE;&#x5BB9;&#x4E14;&#x81EA;&#x4FE1;&#x3002;</p><p>&#x6211;&#x4E4B;&#x524D;&#x7528;&#x7684;&#x662F;&#x767E;&#x8BCD;&#x65A9;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x662F;&#x5B8C;&#x6210;&#x62FC;&#x5199;&#xFF0C;&#x770B;&#x56FE;&#x8BC6;&#x8BCD;&#xFF0C;&#x542C;&#x97F3;&#x8FA8;&#x8BCD;&#xFF0C;&#x770B;&#x8BCD;&#x9009;&#x610F;&#x8FD9;&#x56DB;&#x9879;&#xFF0C;&#x7ED3;&#x679C;&#x6536;&#x6548;&#x751A;&#x5FAE;&#xFF01;</p><p>&#x540E;&#x6765;&#x6539;&#x7528;&#x3010;&#x4E0D;&#x80CC;&#x5355;&#x8BCD;&#x3011;&#xFF0C;&#x901A;&#x8FC7;&#x4E0D;&#x65AD;&#x5730;&#x53CD;&#x590D;&#xFF0C;&#x4E0D;&#x65AD;&#x5730;&#x91CD;&#x590D;&#xFF0C;&#x867D;&#x7136;&#x540C;&#x6837;&#x65F6;&#x95F4;&#x5B8C;&#x6210;&#x7684;&#x5355;&#x8BCD;&#x6570;&#x66F4;&#x5C11;&#xFF0C;&#x4F46;&#x662F;&#x8D28;&#x91CF;&#x66F4;&#x9AD8;&#xFF0C;&#x901A;&#x8FC7;&#x4E0D;&#x80CC;&#x5355;&#x8BCD;&#x5B8C;&#x6210;&#x7684;&#x5355;&#x8BCD;&#xFF0C;&#x6211;&#x80FD;&#x5728;&#x4E00;&#x4E24;&#x4E2A;&#x6708;&#x4EE5;&#x540E;&#x8FD8;&#x8BB0;&#x5F97;&#x610F;&#x601D;&#xFF0C;&#x800C;&#x4E14;&#x5B83;&#x7684;&#x590D;&#x4E60;&#x66F4;&#x79D1;&#x5B66;&#xFF0C;&#x66F4;&#x7B26;&#x5408;&#x8BB0;&#x5FC6;&#x66F2;&#x7EBF;&#xFF0C;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#xFF01;</p><p>&#x53E6;&#x5916;&#x6211;&#x770B;&#x5230;&#x7684;&#x4E00;&#x4E2A;B&#x7AD9;Up&#x4E3B;&#x4E0A;&#x4F20;&#x7684;<a href="https://www.bilibili.com/video/BV1g7411T7Py" target="_blank" rel="noopener">A4&#x7EB8;&#x80CC;&#x5355;&#x8BCD;&#x6CD5;</a>&#xFF0C;&#x5176;&#x539F;&#x7406;&#x4E5F;&#x662F;&#x901A;&#x8FC7;&#x4E0D;&#x65AD;&#x5730;&#x91CD;&#x590D;&#xFF0C;&#x6765;&#x8BB0;&#x4F4F;&#x5355;&#x8BCD;&#xFF0C;&#x6211;&#x6CA1;&#x8BD5;&#x8FC7;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x89C9;&#x5F97;&#x6548;&#x679C;&#x5E94;&#x8BE5;&#x4E5F;&#x4E0D;&#x9519;&#x3002;</p><h1 id="&#x9605;&#x8BFB;">&#x9605;&#x8BFB;</h1><p>&#x9605;&#x8BFB;&#x7684;&#x57FA;&#x77F3;&#x662F;&#x8BCD;&#x6C47;&#xFF0C;&#x6240;&#x4EE5;&#x5355;&#x8BCD;&#x4E0D;&#x884C;&#x9605;&#x8BFB;&#x6293;&#x778E;&#x3002;</p><p>&#x6280;&#x5DE7;&#x65B9;&#x9762;&#xFF0C;&#x6211;&#x662F;&#x770B;&#x7684;&#x667A;&#x8BFE;&#x7F51;&#x7684;&#x3010;&#x5CB3;&#x5EFA;&#x8F89;&#x6258;&#x798F;&#x9605;&#x8BFB;&#x89E3;&#x9898;&#x6280;&#x5DE7;&#x7CBE;&#x8BB2;&#x73ED;&#x3011;&#xFF0C;&#x4E2D;&#x79D1;&#x5927;&#x5B66;&#x751F;&#x514D;&#x8D39;&#x3002;&#x770B;&#x5B8C;&#x4EE5;&#x540E;&#xFF0C;&#x518D;&#x53BB;&#x505A;&#x6258;&#x798F;&#x7684;&#x9605;&#x8BFB;&#xFF0C;&#x611F;&#x89C9;&#x6B63;&#x786E;&#x7387;&#x63D0;&#x9AD8;&#x4E86;&#x5F88;&#x591A;&#x3002;&#x5EFA;&#x8BAE;&#x5728;&#x719F;&#x6089;&#x4E86;&#x6258;&#x798F;&#x9605;&#x8BFB;&#x7684;&#x57FA;&#x672C;&#x9898;&#x578B;&#x540E;&#xFF0C;&#x5C31;&#x770B;&#x4E00;&#x904D;&#x8FD9;&#x4E2A;&#x8BFE;&#xFF08;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x7C7B;&#x4F3C;&#x7684;&#x8BFE;&#xFF09;&#x3002;</p><p>&#x4EE5;&#x4E0B;&#x662F;&#x6211;&#x5F53;&#x65F6;&#x542C;&#x8BFE;&#x8BB0;&#x7684;&#x4E00;&#x4E9B;&#x7B14;&#x8BB0;&#x6458;&#x8981;&#xFF1A;</p><ol type="1"><li>&#x6587;&#x7AE0;&#xFF1A;<ol type="1"><li>&#x4E3B;&#x9898;&#xFF1A;&#x4E00;&#x7BC7;&#x9605;&#x8BFB;&#x6709;&#x4E14;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x4E3B;&#x9898;&#xFF0C;&#x4E00;&#x822C;&#x51FA;&#x73B0;&#x5728;&#x6807;&#x9898;&#x4E0A;&#x3002;</li><li>&#x6001;&#x5EA6;&#xFF0C;&#x4E00;&#x822C;&#x6709;&#x4E09;&#x79CD;&#xFF0C;positive&#xFF0C;negative&#xFF0C;neutral&#x3002;&#x9ED8;&#x8BA4;&#x662F;neutral&#x3002;</li></ol></li><li>&#x6BB5;&#x843D;&#xFF1A;<ol type="1"><li>&#x6BB5;&#x843D;&#x7531;&#x53E5;&#x5B50;&#x7EC4;&#x6210;&#xFF0C;&#x6BB5;&#x843D;&#x4E2D;&#x7684;&#x53E5;&#x5B50;&#x5206;&#x4E24;&#x7C7B;&#xFF1A;exemplification &#x6216;&#x8005;explanation&#xFF0C;&#x5C31;&#x662F;&#x4E3B;&#x9898;&#x53E5;&#x6216;&#x8005;&#x89E3;&#x91CA;&#x4E3B;&#x9898;&#x53E5;&#x7684;&#x53E5;&#x5B50;&#x3002;</li><li>&#x6BB5;&#x843D;&#x7C7B;&#x578B;&#xFF1A;<ul><li>&#x91D1;&#x5B57;&#x5854;&#x578B;&#xFF0C;&#x4E3B;&#x9898;&#x53E5;&#x5728;&#x5F00;&#x59CB;&#x90E8;&#x5206;</li><li>&#x6F0F;&#x6597;&#x578B;&#xFF0C;&#x4E3B;&#x9898;&#x53E5;&#x5728;&#x540E;&#x9762;</li><li>&#x94C5;&#x7B14;&#x578B;&#xFF0C;&#x524D;&#x9762;&#x8FC7;&#x7A0B;&#x57FA;&#x672C;&#x4E0A;&#x662F;&#x4E00;&#x76F4;&#xFF0C;&#x6700;&#x540E;&#x5F97;&#x51FA;&#x4E00;&#x4E2A;&#x7ED3;&#x8BBA;&#xFF0C;&#x89C2;&#x70B9;&#x548C;&#x8BBA;&#x8BC1;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x53E5;&#x5B50;&#x4E2D;&#x3002;</li></ul></li><li>&#x6BB5;&#x843D;&#x5173;&#x7CFB;<ul><li>&#x5E76;&#x5217;&#xFF1A;&#x540C;&#x4E00;&#x8BDD;&#x9898;&#xFF0C;&#x4E0D;&#x540C;&#x65B9;&#x9762;&#x3002;</li><li>&#x987A;&#x627F;&#xFF1A;&#x540C;&#x4E00;&#x8BDD;&#x9898;&#xFF0C;&#x540C;&#x4E00;&#x65B9;&#x9762;&#x3002;</li><li>&#x7C7B;&#x4F3C;&#x4E8E;&#x8BED;&#x6587;&#x4E2D;&#xFF0C;&#x7ED9;&#x6587;&#x7AE0;&#x5206;&#x6BB5;&#x3002;</li></ul></li></ol></li><li>&#x53E5;&#x5B50;&#xFF1A;<ol type="1"><li>&#x53E5;&#x5B50;&#x5206;&#x7C7B;&#xFF1A;&#x7B80;&#x5355;&#x53E5;&#x548C;&#x975E;&#x7B80;&#x5355;&#x53E5;&#x3002;&#x7B80;&#x5355;&#x53E5;&#x5C31;&#x662F;&#x53EA;&#x6709;&#x4E00;&#x5957;&#x4E3B;&#x8C13;&#x7ED3;&#x6784;&#x7684;&#x53E5;&#x5B50;&#x3002;&#x975E;&#x7B80;&#x5355;&#x53E5;&#x5C31;&#x662F;&#x6709;&#x4E24;&#x5957;&#xFF0C;&#x751A;&#x81F3;&#x66F4;&#x591A;&#x7684;&#x4E3B;&#x8C13;&#x7ED3;&#x6784;&#x3002;</li><li>&#x53E5;&#x5B50;&#x4E2D;&#xFF0C;&#x5FC3;&#x810F;&#x662F;&#x8C13;&#x8BED;&#x52A8;&#x8BCD;&#xFF0C;&#x6807;&#x5FD7;&#x7740;&#x4E00;&#x4E2A;&#x53E5;&#x5B50;&#x3002;</li><li>&#x8FDE;&#x63A5;&#x8BCD;&#xFF1A;&#x80FD;&#x628A;&#x4E24;&#x4E2A;&#x53E5;&#x5B50;&#x8FDE;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#x7684;&#x8BCD;&#xFF0C;&#x90FD;&#x53EB;&#x8FDE;&#x63A5;&#x8BCD;&#x3002;</li><li>&#x53E5;&#x5B50;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF1A;&#x5E76;&#x5217;&#x548C;&#x5D4C;&#x5957;&#x3002;&#x5D4C;&#x5957;&#xFF1A;&#x53E5;&#x5B50;&#x4E4B;&#x95F4;&#x6709;&#x4FEE;&#x9970;&#x5173;&#x7CFB;&#x3002;&#x5176;&#x4F59;&#x7684;&#x90FD;&#x662F;&#x5E76;&#x5217;&#x5173;&#x7CFB;&#x3002;</li><li>&#x5982;&#x679C;&#x662F;&#x5D4C;&#x5957;&#x5173;&#x7CFB;&#xFF0C;&#x8D8A;&#x5728;&#x5916;&#x9762;&#x7684;&#x53E5;&#x5B50;&#x8D8A;&#x91CD;&#x8981;&#xFF0C;&#x662F;&#x4E3B;&#x53E5;&#x3002;</li></ol></li><li>&#x8BCD;&#x6C47;&#xFF1A;<ol type="1"><li>&#x505A;&#x9898;&#x65F6;&#xFF0C;&#x9047;&#x5230;&#x4E0D;&#x4F1A;&#x7684;&#x5355;&#x8BCD;&#xFF0C;&#x4E0D;&#x8981;&#x7ACB;&#x9A6C;&#x67E5;&#x8BCD;&#x5178;&#xFF0C;&#x5C3D;&#x91CF;&#x731C;&#x6D4B;&#x8BCD;&#x8BED;&#x7684;&#x610F;&#x601D;&#xFF0C;&#x6700;&#x540E;&#x518D;&#x67E5;&#x8BCD;&#x5178;&#x3002;</li></ol></li></ol><p>&#x65E7;&#x7248;&#x7684;&#x6258;&#x798F;iBT&#x8003;&#x8BD5;&#xFF0C;&#x6BCF;&#x7BC7;&#x9605;&#x8BFB;&#x4E00;&#x822C;&#x662F;13&#x4E2A;&#x9898;&#xFF0C;&#x65B0;&#x7248;&#x7684;&#x5C31;&#x53EA;&#x6709;10&#x4E2A;&#x9898;&#x4E86;&#xFF0C;&#x8FD9;&#x5957;&#x8BFE;&#x7A0B;&#x5BF9;&#x5E94;&#x7684;&#x8FD8;&#x662F;&#x8001;&#x6258;&#x798F;&#xFF0C;&#x4E0D;&#x8FC7;&#x65B0;&#x65E7;&#x6258;&#x798F;&#x53EA;&#x662F;&#x9898;&#x76EE;&#x6570;&#x91CF;&#x53D8;&#x4E86;&#xFF0C;&#x9898;&#x578B;&#x4E0D;&#x53D8;&#xFF0C;&#x505A;&#x9898;&#x65B9;&#x6CD5;&#x4F9D;&#x7136;&#x9002;&#x7528;&#x3002;</p><ol type="1"><li>&#x8BCD;&#x6C47;&#x9898;<ol type="1"><li>&#x9898;&#x76EE;&#x7C7B;&#x578B;&#xFF0C;&#x8BC6;&#x522B;&#x5355;&#x8BCD;&#x7684;&#x610F;&#x601D;&#xFF0C;The word X in the passage is closest in meaning to&#x2026; &#xFF0C;In stating X, the author means that&#x2026;</li><li>&#x57FA;&#x7840;&#xFF1A;&#x6CA1;&#x8F99;&#xFF0C;&#x8001;&#x8001;&#x5B9E;&#x5B9E;&#x80CC;&#x5355;&#x8BCD;&#x3002;</li><li>&#x6280;&#x5DE7;/&#x65B9;&#x6CD5;&#xFF1A;<ol type="1"><li>&#x4ECB;&#x8BCD;&#x642D;&#x914D;&#xFF0C;&#x627E;&#x6709;&#x6CA1;&#x6709;&#x56FA;&#x5B9A;&#x7684;&#x4ECB;&#x8BCD;&#x642D;&#x914D;</li><li>&#x6587;&#x672C;&#x903B;&#x8F91;&#xFF1A;&#x8FD1;&#x4E49;&#x8BCD;&#xFF1A;&#x5E76;&#x5217;&#xFF0C;&#x89E3;&#x91CA;&#xFF0C;&#x4E3E;&#x4F8B;&#x3002;&#x53CD;&#x4E49;&#x8BCD;&#xFF1A;&#x8F6C;&#x6298;&#x3002;</li><li>&#x63D0;&#x53D6;&#x4E3B;&#x5E72;&#xFF1A;&#x540D;&#x8BCD;/&#x5F62;&#x5BB9;&#x8BCD;/&#x52A8;&#x8BCD;/&#x526F;&#x8BCD;</li></ol></li></ol></li><li>&#x53E5;&#x5B50;&#x9898;<ol type="1"><li>&#x5E38;&#x89C1;&#x7684;&#x662F;&#x5316;&#x7B80;&#x53E5;&#x5B50;&#x3002;</li><li>&#x5E38;&#x89C1;&#x7684;&#x9009;&#x9879;&#x9519;&#x8BEF;&#x539F;&#x56E0;&#xFF1A;&#x6539;&#x53D8;&#x610F;&#x601D;&#xFF0C;&#x4E22;&#x6389;&#x90E8;&#x5206;&#x5173;&#x952E;&#x4FE1;&#x606F;&#x3002;</li><li>&#x505A;&#x9898;&#x6280;&#x5DE7;&#xFF1A;&#x628A;&#x53E5;&#x5B50;&#x62C6;&#x5F00;&#xFF0C;&#x628A;&#x4E00;&#x4E2A;&#x5927;&#x7684;&#xFF0C;&#x975E;&#x7B80;&#x5355;&#x53E5;&#x62C6;&#x5F00;&#xFF0C;&#x62C6;&#x5F00;&#x6210;&#x82E5;&#x5E72;&#x4E2A;&#x7B80;&#x5355;&#x53E5;&#xFF0C;&#x5212;&#x51FA;&#x6846;&#x7ED3;&#x6784;&#x53BB;&#x7B54;&#x9898;&#x3002;</li><li>&#x8981;&#x70B9;1&#xFF1A;&#x5708;&#x51FA;&#x4E3B;&#x8981;&#x903B;&#x8F91;&#x5173;&#x7CFB;&#xFF0C;&#x903B;&#x8F91;&#x662F;&#x53E5;&#x5B50;&#x4E2D;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x4F1A;&#x5728;&#x6B63;&#x786E;&#x7B54;&#x6848;&#x4E2D;&#x91CD;&#x73B0;&#x3002;&#x4E0D;&#x53EF;&#x6539;&#x5199;&#x7684;&#x903B;&#x8F91;&#xFF1A;&#x80AF;&#x5B9A;&#xFF08;&#x6CE8;&#x610F;&#x53CC;&#x91CD;&#x5426;&#x5B9A;&#xFF09;&#xFF0C;&#x5426;&#x5B9A;&#x3002;&#x53EF;&#x6539;&#x5199;&#x7684;&#x903B;&#x8F91;&#xFF1A;&#x8F6C;&#x6298;&#xFF0C;&#x56E0;&#x679C;&#xFF0C;&#x6BD4;&#x8F83;&#xFF0C;&#x5BF9;&#x6BD4;&#x3002;</li><li>&#x8981;&#x70B9;2&#xFF1A;&#x6392;&#x9664;&#x9519;&#x8BEF;&#x9009;&#x9879;&#xFF0C;&#x9519;&#x8BEF;&#x9009;&#x9879;&#x4E00;&#x822C;&#x662F;&#xFF1A;&#x5047;&#xFF0C;&#x5927;&#xFF0C;&#x9519;&#x3002;&#x5047;&#xFF1A;&#x865A;&#x5047;&#x7684;&#x903B;&#x8F91;&#x5173;&#x7CFB;&#xFF0C;&#x865A;&#x5047;&#x7684;&#x4FEE;&#x9970;&#x3002;&#x5927;&#xFF1A;&#x5C06;&#x7EC6;&#x8282;&#x653E;&#x5927;&#x3002;&#x9519;&#xFF1A;&#x8DDF;&#x539F;&#x6587;&#x77DB;&#x76FE;&#xFF0C;&#x6216;&#x8005;&#x5F15;&#x5165;&#x4E86;&#x539F;&#x6587;&#x6839;&#x672C;&#x6CA1;&#x6709;&#x7684;&#x4FE1;&#x606F;&#x3002;</li></ol></li><li>&#x6307;&#x4EE3;&#x9898;<ol type="1"><li>&#x4EE3;&#x8BCD;&#x4E00;&#x5B9A;&#x6307;&#x4EE3;&#x540D;&#x8BCD;</li><li>&#x5355;&#x590D;&#x6570;&#x4E00;&#x81F4;&#x539F;&#x5219;</li><li>&#x524D;&#x6307;&#x539F;&#x5219;&#xFF0C;&#x6307;&#x4EE3;&#x7684;&#x90FD;&#x662F;&#x524D;&#x9762;&#x51FA;&#x73B0;&#x7684;&#x5355;&#x8BCD;&#x3002;</li><li>&#x6700;&#x57FA;&#x672C;&#x7684;&#xFF1A;&#x8BB2;&#x5F97;&#x901A;&#xFF0C;make sense&#x539F;&#x5219;&#x3002;</li></ol></li><li>&#x6587;&#x672C;&#x63D2;&#x5165;&#x9898;<ol type="1"><li>&#x53E5;&#x5B50;&#x5206;&#x5F00;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8981;&#x5B8C;&#x6574;&#x7684;&#x5206;&#x5F00;&#x3002;&#x5373;&#x4E24;&#x4E2A;&#x53E5;&#x5B50;&#x8981;&#x4E24;&#x8FB9;&#x76F8;&#x5BF9;&#x5B8C;&#x6574;&#x3002;&#x88AB;&#x63D2;&#x5165;&#x53E5;&#x5B50;&#x63D0;&#x51FA;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x8981;&#x4E0E;&#x524D;&#x9762;/&#x540E;&#x9762;&#x53E5;&#x5B50;&#x6709;&#x76F8;&#x7C7B;&#x4F3C;&#x7684;&#x6982;&#x5FF5;&#x3002;</li><li>&#x901A;&#x7528;&#x89E3;&#x9898;&#x6CD5;&#xFF1A;<ol type="1"><li>&#x62C6;&#x5206;&#xFF0C;&#x7B80;&#x5355;&#x53E5;&#x548C;&#x975E;&#x7B80;&#x5355;&#x53E5;&#xFF0C;&#x62C6;&#x5206;&#x65B9;&#x6CD5;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x3002;&#x7B80;&#x5355;&#x53E5;&#x7684;&#x62C6;&#x5206;&#x65B9;&#x6CD5;&#xFF0C;&#x901A;&#x5E38;&#x4ECE;&#x8C13;&#x8BED;&#x52A8;&#x8BCD;&#x7684;&#x5730;&#x65B9;&#x62C6;&#x5F00;&#x3002;&#x975E;&#x7B80;&#x5355;&#x53E5;&#x4ECE;&#x5173;&#x8054;&#x8BCD;&#x4E4B;&#x95F4;&#x62C6;&#x5F00;&#x3002;&#x4FDD;&#x8BC1;&#x4E24;&#x8FB9;&#x6982;&#x5FF5;&#x76F8;&#x5BF9;&#x5B8C;&#x6574;</li><li>&#x63D0;&#x53D6;&#xFF0C;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x76F8;&#x5BF9;&#x5B8C;&#x6574;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4E24;&#x4E2A;&#x539F;&#x5219;&#xFF1A;&#x88AB;&#x62C6;&#x5206;&#x53E5;&#x5B50;&#x4E2D;&#x5B58;&#x5728;&#x4EE3;&#x8BCD;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x4EE3;&#x8BCD;&#x4F1A;&#x5F80;&#x524D;&#x6307;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x7EBF;&#x7D22;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x539F;&#x5219;&#xFF1A;&#x903B;&#x8F91;&#x5173;&#x8054;&#x6982;&#x5FF5;&#x3002;&#x63D0;&#x53D6;&#x6982;&#x5FF5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6982;&#x5FF5;&#x5728;&#x4E0A;&#x6587;&#x4E2D;&#x88AB;&#x91CD;&#x590D;&#x7684;&#x6982;&#x7387;&#x8D8A;&#x9AD8;&#xFF0C;&#x8D8A;&#x5E94;&#x8BE5;&#x88AB;&#x4F18;&#x5148;&#x9009;&#x62E9;&#x3002;&#x88AB;&#x62C6;&#x5206;&#x53E5;&#x5B50;&#x4E2D;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x5728;&#x4E0A;&#x6587;&#x4E2D;&#x548C;&#x4E0B;&#x6587;&#x4E2D;&#x90FD;&#x91CD;&#x590D;&#x51FA;&#x73B0;&#x3002;&#x4E00;&#x5B9A;&#x8981;&#x627E;&#x5230;&#x4E8B;&#x5B9E;&#x4F9D;&#x636E;&#x3002;</li><li>&#x5BF9;&#x5E94;&#xFF0C;&#x5728;&#x4E0A;&#x4E0B;&#x53E5;&#x4E2D;&#x627E;&#x5230;&#x4E0E;&#x4E4B;&#x76F8;&#x5339;&#x914D;&#x7684;&#x6982;&#x5FF5;&#x3002;&#x627E;&#x5230;&#x6982;&#x5FF5;&#x7684;&#x7B49;&#x4E8E;&#xFF0C;&#x7EA6;&#x7B49;&#x4E8E;&#xFF0C;&#x5C5E;&#x4E8E;&#x5173;&#x7CFB;&#x5224;&#x65AD;&#x7ED3;&#x5408;&#x6761;&#x4EF6;&#x80FD;&#x4E0D;&#x80FD;&#x6210;&#x7ACB;</li><li>&#x6392;&#x9664;&#xFF0C;&#x4E24;&#x79CD;&#x53EF;&#x80FD;&#x6027;&#xFF1A;&#x63D0;&#x53D6;&#x51FA;&#x5BF9;&#x5E94;&#x7684;&#x6982;&#x5FF5;&#x4E4B;&#x540E;&#xFF0C;&#x80FD;&#x5F88;&#x987A;&#x5229;&#x627E;&#x5230;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x5339;&#x914D;&#x7684;&#x6982;&#x5FF5;&#x3002;&#x6216;&#x8005;&#x5F53;&#x524D;&#x540E;&#x53E5;&#x5B50;&#x4E4B;&#x95F4;&#x6709;&#x660E;&#x786E;&#x7684;&#x6307;&#x4EE3;&#x5173;&#x7CFB;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x662F;&#x903B;&#x8F91;&#x4E25;&#x5BC6;&#xFF0C;&#x6CA1;&#x6CD5;&#x63D2;&#x5165;&#x53E5;&#x5B50;&#x3002;</li></ol></li></ol></li><li>&#x4FE1;&#x606F;&#x9898;<ol type="1"><li>&#x5305;&#x62EC;&#x4E8B;&#x5B9E;&#x4FE1;&#x606F;&#x9898;&#xFF0C;&#x5426;&#x5B9A;&#x4E8B;&#x5B9E;&#x4FE1;&#x606F;&#x9898;&#xFF0C;&#x63A8;&#x65AD;&#x9898;&#xFF0C;&#x4FEE;&#x8F9E;&#x76EE;&#x7684;&#x9898;&#x3002;</li><li>&#x9996;&#x5148;&#x8981;&#x533A;&#x5206;&#x4E8B;&#x5B9E;&#x548C;&#x89C2;&#x70B9;&#x3002;<ol type="1"><li>&#x4E8B;&#x5B9E;&#xFF1A;&#x5305;&#x542B;&#x7684;&#x5185;&#x5BB9;&#x57FA;&#x4E8E;&#x67D0;&#x79CD;&#x76F4;&#x63A5;&#x8BC1;&#x636E;&#xFF0C;&#x6BD4;&#x5982;&#x5B98;&#x65B9;&#x6587;&#x4EF6;&#xFF0C;&#x53C2;&#x8003;&#x4E66;&#xFF0C;&#x6CD5;&#x5F8B;&#x8BB0;&#x5F55;&#xFF0C;&#x7ECF;&#x9A8C;&#x6216;&#x89C2;&#x5BDF;&#x3002;&#x901A;&#x5E38;&#xFF0C;&#x4E8B;&#x5B9E;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x6709;&#x5173;&#x4EBA;&#x7269;&#xFF0C;&#x5730;&#x70B9;&#x548C;&#x4E8B;&#x4EF6;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4F46;&#x4E0D;&#x4F1A;&#x4F20;&#x8FBE;&#x4F5C;&#x8005;&#x4E2A;&#x4EBA;&#x89C2;&#x70B9;&#x6216;&#x611F;&#x53D7;&#x3002;</li><li>&#x89C2;&#x70B9;&#xFF1A;&#x89C2;&#x70B9;&#x7684;&#x9648;&#x8FF0;&#x901A;&#x5E38;&#x8868;&#x8FBE;&#x4E2A;&#x4EBA;&#x4FE1;&#x5FF5;&#x3001;&#x611F;&#x60C5;&#x3001;&#x6001;&#x5EA6;&#x3001;&#x4EF7;&#x503C;&#x89C2;&#x3001;&#x770B;&#x6CD5;&#xFF0C;&#x6216;&#x4E00;&#x4E2A;&#x4EBA;&#x5BF9;&#x67D0;&#x4E2A;&#x4E3B;&#x9898;&#x6216;&#x8005;&#x8BDD;&#x9898;&#x6240;&#x4F5C;&#x7684;&#x5224;&#x65AD;&#xFF0C;&#x901A;&#x5E38;&#xFF0C;&#x89C2;&#x70B9;&#x8868;&#x73B0;&#x4E3A;&#x63A8;&#x8BBA;&#xFF0C;&#x9884;&#x611F;&#xFF0C;&#x731C;&#x6D4B;&#x6216;&#x7ED3;&#x8BBA;&#x7B49;&#x5F62;&#x5F0F;&#x3002;</li><li>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x89C2;&#x70B9;&#xFF0C;&#x5B83;&#x7684;&#x53CD;&#x9762;&#x4E5F;&#x53EF;&#x80FD;&#x540C;&#x65F6;&#x6210;&#x7ACB;&#x3002;</li><li>&#x89C2;&#x70B9;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x7279;&#x522B;&#x660E;&#x663E;&#x7684;&#x6807;&#x5FD7;&#xFF1A;&#x5E26;&#x6709;&#x4E3B;&#x89C2;&#x8272;&#x5F69;&#x7684;&#x5F62;&#x5BB9;&#x8BCD;</li><li>&#x6211;&#x4EEC;&#x5728;&#x6258;&#x798F;&#x9605;&#x8BFB;&#x548C;&#x9898;&#x76EE;&#x7684;&#x9009;&#x62E9;&#x5F53;&#x4E2D;&#xFF0C;&#x9009;&#x62E9;&#x7684;&#x90FD;&#x5E94;&#x8BE5;&#x662F;&#x4E8B;&#x5B9E;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x89C2;&#x70B9;</li></ol></li><li>&#x505A;&#x51FA;&#x6709;&#x6548;&#x63A8;&#x65AD;<ol type="1"><li>&#x6709;&#x6548;&#x63A8;&#x8BBA;&#x662F;&#x6307;&#x57FA;&#x4E8E;&#x6E05;&#x695A;&#x5730;&#x8BC1;&#x636E;&#x548C;&#x7B26;&#x5408;&#x903B;&#x8F91;&#x7684;&#x63A8;&#x7406;&#x800C;&#x5F97;&#x51FA;&#x7684;&#x7ED3;&#x8BBA;&#x6216;&#x6982;&#x62EC;</li><li>&#x65E0;&#x6548;&#x63A8;&#x8BBA;&#x662F;&#x6307;&#x8BC1;&#x636E;&#x4E0D;&#x59A5;&#x6216;&#x57FA;&#x4E8E;&#x9519;&#x8BEF;&#x903B;&#x8F91;&#x800C;&#x8FDB;&#x884C;&#x7684;&#x5047;&#x8BBE;&#x3002;</li><li>&#x65E0;&#x6548;&#x63A8;&#x65AD;&#x7684;&#x4E24;&#x4E2A;&#x9519;&#x8BEF;&#x539F;&#x56E0;&#xFF0C;1&#xFF0C; &#x8BC1;&#x636E;&#x4E0D;&#x59A5;&#x3002;&#x539F;&#x6587;&#x4E2D;&#x6CA1;&#x6709;&#x660E;&#x786E;&#x7684;&#x4E8B;&#x5B9E;&#x652F;&#x6491;&#x3002; 2&#xFF0C; &#x903B;&#x8F91;&#x9519;&#x8BEF;&#xFF0C;&#x539F;&#x6587;&#x4E2D;&#x6CA1;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x539F;&#x6587;&#x4E2D;&#x7684;&#x6BD4;&#x8F83;&#x5173;&#x7CFB;&#x88AB;&#x98A0;&#x5012;&#x4E86;&#x3002;</li><li>&#x5B66;&#x4F1A;&#x4FA6;&#x63A2;&#x5F0F;&#x601D;&#x8003;&#xFF1A;reading between the lines&#x3002;&#x5728;&#x5B57;&#x91CC;&#x884C;&#x95F4;&#x5BFB;&#x627E;&#x7EBF;&#x7D22;&#x3002;</li></ol></li><li>&#x5E38;&#x89C1;&#x7684;&#x5E72;&#x6270;&#x9879;&#x8BBE;&#x7F6E;&#x539F;&#x7406;<ol type="1"><li>&#x5F15;&#x5165;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF08;&#x4F4D;&#x7F6E; &#x5185;&#x5BB9;&#xFF09;</li><li>&#x5EFA;&#x7ACB;&#x865A;&#x5047;&#x903B;&#x8F91;&#xFF1A;<ul><li>&#x4E7E;&#x5764;&#x632A;&#x79FB; &#xFF0C;&#x4F4D;&#x7F6E;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x95EE;&#x7684;&#x7B2C;&#x4E09;&#x81EA;&#x7136;&#x6BB5;&#xFF0C;&#x5F15;&#x5165;&#x4E86;&#x7B2C;&#x4E8C;&#x81EA;&#x7136;&#x6BB5;&#x7684;&#x5185;&#x5BB9;</li><li>&#x65E0;&#x4E2D;&#x751F;&#x6709;&#xFF1A;&#x5F15;&#x5165;&#x4E86;&#x539F;&#x6587;&#x672A;&#x51FA;&#x73B0;&#x7684;&#x4FE1;&#x606F;</li></ul></li><li>&#x732A;&#x903B;&#x8F91;&#xFF1A;&#x9519;&#x8BEF;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x539F;&#x6587;&#x4E2D;&#x672A;&#x51FA;&#x73B0;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x539F;&#x6587;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x903B;&#x8F91;&#x627E;&#x5230;&#x4E86;&#x4FEE;&#x6539;</li></ol></li><li>&#x6B63;&#x786E;&#x9009;&#x9879;&#x8BBE;&#x7F6E;&#x539F;&#x7406;<ol type="1"><li>&#x539F;&#x6587;&#x91CD;&#x73B0;</li><li>&#x540C;&#x4E49;&#x6539;&#x5199;</li><li>&#x6709;&#x6548;&#x63A8;&#x8BBA;</li></ol></li><li>&#x4E8B;&#x5B9E;&#x4FE1;&#x606F;&#x9898;&#x4E0E;&#x5426;&#x5B9A;&#x4E8B;&#x5B9E;&#x4FE1;&#x606F;&#x9898;&#x89E3;&#x9898;&#x6280;&#x5DE7;&#xFF1A;&#x5173;&#x952E;&#x8BCD;&#x5BF9;&#x5E94;&#x3002;&#x8FD9;&#x4E2A;&#x9898;&#x57FA;&#x672C;&#x4E0A;&#x4E0D;&#x4F1A;&#x878D;&#x5408;&#x4EFB;&#x4F55;&#x4E2A;&#x4EBA;&#x89C2;&#x70B9;&#x7684;&#x3002;</li><li>&#x63A8;&#x65AD;&#x9898;&#x8003;&#x8BD5;&#x6280;&#x5DE7;<ol type="1"><li>&#x63A8;&#x65AD;&#x9898;&#x8003;&#x5BDF;&#x63A8;&#x7406;&#x8FC7;&#x7A0B;&#xFF0C;&#x91CD;&#x70B9;&#x8003;&#x5BDF;&#x6392;&#x4E2D;&#x5F8B;&#xFF0C;&#x975E;&#x91CD;&#x70B9;&#x8003;&#x5BDF;&#x6EAF;&#x56E0;&#xFF0C;&#x5F52;&#x7EB3;&#xFF0C;&#x6F14;&#x7ECE;&#x3002;</li><li>&#x6392;&#x4E2D;&#x5F8B;&#xFF1A;&#x6392;&#x9664;&#x4E2D;&#x95F4;&#x7684;&#x5B9A;&#x5F8B;&#xFF0C;&#x975E;&#x6B64;&#x5373;&#x5F7C;&#xFF0C;&#x975E;&#x9ED1;&#x5373;&#x767D;&#xFF0C;&#x6CA1;&#x6709;&#x4E2D;&#x95F4;&#x9009;&#x9879;&#x3002;&#x6392;&#x4E2D;&#x5F8B;&#x9002;&#x7528;&#x4E8E;&#xFF1A;&#x540C;&#x4E00;&#x96C6;&#x5408;&#x4E2D;&#xFF0C;A&#x548C;&#x975E;A&#xFF0C;&#x5360;&#x636E;&#x4E86;&#x5168;&#x90E8;&#x6982;&#x5FF5;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x79CD;&#x72B6;&#x51B5;&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x6982;&#x5FF5;A&#x51FA;&#x73B0;&#x5728;&#x6587;&#x4E2D;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x6392;&#x4E2D;&#x5F8B;&#x3002;&#x53E6;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;&#x539F;&#x6587;&#x4E2D;&#x51FA;&#x73B0;&#x4E86;&#x8868;&#x793A;&#x65F6;&#x95F4;&#x70B9;&#x7684;&#x6982;&#x5FF5;&#x3002;</li><li>&#x7EDD;&#x5927;&#x591A;&#x6570;&#x7684;&#x63A8;&#x65AD;&#x9898;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x5F53;&#x505A;&#x7EC6;&#x8282;&#x9898;&#x6765;&#x7406;&#x89E3;&#xFF0C;&#x6240;&#x4EE5;&#x90FD;&#x8981;&#x91CD;&#x89C6;&#x540C;&#x4E49;&#x6539;&#x5199;&#x3002;</li><li>&#x6392;&#x4E2D;&#x5F8B;&#xFF1A;&#x4F7F;&#x7528;&#x903B;&#x8F91;&#x5173;&#x7CFB;&#x7684;&#x8BDD;&#xFF0C;&#x8981;&#x4F7F;&#x7528;&#x6392;&#x4E2D;&#x5F8B;&#x3002;A&#x4EE5;&#x53CA;&#x975E;A&#xFF0C;&#x5E26;&#x65F6;&#x95F4;&#x70B9;&#x7684;</li><li>&#x6700;&#x540E;&#x91C7;&#x7528;&#x4E00;&#x822C;&#x8003;&#x70B9;&#xFF0C;&#x5E38;&#x8003;&#x7684;&#x662F;&#x5F52;&#x7EB3;&#x3002;</li></ol></li><li>&#x4FEE;&#x8F9E;&#x76EE;&#x7684;&#x9898;&#xFF0C;&#x5F53;&#x505A;&#x7ED3;&#x6784;&#x5206;&#x6790;+&#x7EC6;&#x8282;&#x9898;&#x6765;&#x601D;&#x8003;&#xFF0C;&#x9898;&#x76EE;&#x76F8;&#x5BF9;&#x7B80;&#x5355;&#xFF0C;&#x4E00;&#x822C;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x5C31;&#x662F;&#x6587;&#x7AE0;&#x7684;&#x7ED3;&#x6784;&#x3002;</li></ol></li><li>&#x516D;&#x9009;&#x4E09;&#x6216;&#x8005;&#x56FE;&#x8868;&#x9898;<ol type="1"><li>&#x7406;&#x6E05;&#x6BB5;&#x843D;&#x5173;&#x7CFB;&#xFF0C;&#x6BCF;&#x4E2A;&#x6BB5;&#x843D;&#x4E2D;&#x7684;keyword &#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x5173;&#x8054;&#x6210;&#x4E00;&#x4E2A;&#x7EBF;&#x8DEF;&#x56FE;&#x3002;&#x6839;&#x636E;&#x6BB5;&#x843D;&#x5173;&#x7CFB;&#x6765;&#x89E3;&#x9898;&#x3002;</li><li>&#x5229;&#x7528;&#x4ECB;&#x7ECD;&#x53E5;&#x6765;&#x6392;&#x9664;&#x90E8;&#x5206;&#x9009;&#x9879;&#x3002;</li></ol></li></ol><h1 id="&#x542C;&#x529B;">&#x542C;&#x529B;</h1><p>&#x4F7F;&#x7528;&#x8003;&#x6EE1;&#x5206;&#x6216;&#x8005;&#x5C0F;&#x7AD9;&#x6258;&#x798F;&#xFF0C;&#x53CD;&#x590D;&#x7684;&#x542C;&#x3002;&#x7136;&#x540E;&#x6211;&#x4E5F;&#x542C;&#x4E86;&#x667A;&#x8BFE;&#x7F51;&#x7684;&#x7F51;&#x8BFE;&#xFF0C;&#x611F;&#x89C9;&#x4F5C;&#x7528;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x5927;&#x3002;</p><h1 id="&#x5199;&#x4F5C;">&#x5199;&#x4F5C;</h1><p>&#x4F9D;&#x7136;&#x7528;&#x4E86;&#x79D1;&#x5927;&#x5B66;&#x5B50;&#x514D;&#x8D39;&#x7684;&#x667A;&#x8BFE;&#x7F51;&#x7684;&#x4F5C;&#x6587;&#x6279;&#x6539;&#x670D;&#x52A1;&#xFF0C;&#x7136;&#x540E;&#x591A;&#x80CC;&#x8303;&#x6587;&#x3002;</p><hr><h1 id="&#x591A;&#x90BB;&#x56FD;">&#x591A;&#x90BB;&#x56FD;</h1><p>2020&#x5E74;&#x5BF9;&#x4E8E;&#x7559;&#x5B66;&#x751F;&#x592A;&#x60E8;&#x4E86;&#xFF0C;&#x6258;&#x798F;&#x8003;&#x8BD5;&#x4ECE;2&#x6708;&#x4E00;&#x76F4;&#x53D6;&#x6D88;&#x5230;6&#x6708;&#xFF0C;&#x5373;&#x4F7F;7&#x6708;&#x4E5F;&#x53EA;&#x6709;&#x6781;&#x4E2A;&#x522B;&#x7684;&#x8003;&#x573A;&#x5F00;&#x653E;&#x3002;</p><p>&#x6211;&#x8981;&#x7533;&#x8BF7;&#x7684;&#x5B66;&#x6821;&#x4E8E;3&#x6708;&#x4E0B;&#x65EC;&#x5F00;&#x59CB;&#x8BF4;&#x63A5;&#x53D7;&#x591A;&#x90BB;&#x56FD;&#x7684;&#x6210;&#x7EE9;&#xFF0C;&#x6211;&#x6709;&#x706B;&#x6025;&#x706B;&#x71CE;&#x8F6C;&#x53BB;&#x5907;&#x8003;&#x591A;&#x90BB;&#x56FD;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x8FDE;&#x591A;&#x90BB;&#x56FD;&#x662F;&#x5565;&#x90FD;&#x641E;&#x4E0D;&#x6E05;&#x695A;&#x3002;&#x5177;&#x4F53;&#x4ECB;&#x7ECD;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#xFF0C;&#x8FD9;&#x91CC;&#x8BF4;&#x4E00;&#x4E0B;&#x6211;&#x5907;&#x8003;&#x591A;&#x90BB;&#x56FD;&#x65F6;&#x7684;&#x7ECF;&#x9A8C;&#x6559;&#x8BAD;&#x3002;</p><ol type="1"><li>&#x77E5;&#x4E4E;&#x4E0A;&#x6709;&#x4E2A;&#x8001;&#x5E08;&#x53EB;&#x3010;&#x7C73;&#x65AF;&#x7279;&#x6F58;&#x3011;&#xFF0C;&#x4E0D;&#x662F;&#x6211;&#x5439;&#xFF0C;&#x4ED6;&#x7684;&#x4E00;&#x4E9B;&#x7ECF;&#x9A8C;&#x6280;&#x5DE7;&#x786E;&#x5B9E;&#x6709;&#x7528;&#xFF0C;&#x5305;&#x62EC;<strong>&#x51FA;&#x5206;&#x6280;&#x5DE7;</strong>&#xFF0C;&#x9898;&#x578B;&#x91CD;&#x70B9;&#x7B49;&#xFF0C;&#x5EFA;&#x8BAE;&#x597D;&#x597D;&#x770B;&#x770B;&#x4ED6;&#x7684;&#x4E13;&#x680F;&#x3002;</li><li>&#x5355;&#x8BCD;&#x4E0E;&#x6258;&#x798F;&#x5355;&#x8BCD;&#x6709;&#x5F88;&#x5927;&#x4E0D;&#x540C;&#xFF0C;&#x6258;&#x798F;&#x5355;&#x8BCD;&#x66F4;&#x591A;&#x7684;&#x662F;&#x5B66;&#x79D1;&#x8BCD;&#x6C47;&#xFF0C;&#x4F46;&#x662F;&#x591A;&#x90BB;&#x56FD;&#x7684;&#x8BCD;&#x6C47;&#x662F;&#x6309;&#x7167;&#x6B27;&#x6807;&#x7684;&#xFF0C;&#x53EB;CEFR&#x8BCD;&#x6C47;&#x6807;&#x51C6;&#x3002;&#x4F46;&#x4EC5;&#x4EC5;&#x9760;&#x8FD9;&#x4E2A;&#x8BCD;&#x5355;&#x662F;&#x4E0D;&#x591F;&#x7684;&#xFF0C;&#x6211;&#x53C8;&#x627E;&#x4E86;&#x591A;&#x5BB6;&#x6309;&#x7167;CEFR&#x5206;&#x7C7B;&#x7684;&#x8BCD;&#x6C47;&#x8868;&#xFF0C;&#x63D0;&#x53D6;&#x4E86;B2~C2&#x7684;&#x8BCD;&#x5355;&#xFF0C;&#x8D60;&#x4E0E;&#x6709;&#x7F18;&#x4EBA;&#xFF0C;&#x89C1;&#x6587;&#x672B;&#x3002;</li><li>&#x771F;&#x9898;&#x7EC3;&#x4E60;&#x5EFA;&#x8BAE;&#x82B1;&#x94B1;&#x4E70;&#x3010;&#x767B;&#x767B;&#x591A;&#x90BB;&#x56FD;&#x3011;&#x7684;&#x771F;&#x9898;&#xFF0C;&#x548C;&#x8003;&#x8BD5;&#x7684;&#x5F62;&#x5F0F;&#x5F88;&#x50CF;&#xFF0C;&#x800C;&#x4E14;&#x91CC;&#x9762;&#x7684;&#x770B;&#x56FE;&#x8BF4;&#x8BCD;&#x73AF;&#x8282;&#xFF0C;&#x8986;&#x76D6;&#x4E86;&#x9898;&#x5E93;&#x7684;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#xFF0C;&#x5EFA;&#x8BAE;&#x80CC;&#x719F;&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x5C31;&#x662F;&#x6765;&#x9001;&#x5206;&#x7684;&#x3002;</li><li>&#x5B8C;&#x5F62;&#x586B;&#x7A7A;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#xFF0C;&#x5728;&#x7F51;&#x4E0A;&#x90FD;&#x6709;&#x539F;&#x6587;&#xFF0C;&#x4F7F;&#x7528;&#x8C37;&#x6B4C;&#x641C;&#x7D22;&#xFF0C;&#x7528;&#x53CC;&#x5F15;&#x53F7;&#x7CBE;&#x786E;&#x5339;&#x914D;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x641C;&#x5230;&#x3002;</li><li>&#x53E3;&#x8BED;&#x90E8;&#x5206;&#xFF0C;&#x6211;&#x662F;&#x53C2;&#x52A0;&#x7684;&#x3010;&#x7C73;&#x65AF;&#x7279;&#x6F58;&#x3011;&#x7EC4;&#x7EC7;&#x7684;&#x514D;&#x8D39;&#x7684;&#x82F1;&#x8BED;&#x89D2;&#xFF0C;&#x6211;&#x611F;&#x89C9;&#x5BF9;&#x6211;&#x63D0;&#x5347;&#x633A;&#x5927;&#xFF0C;&#x4ECE;&#x4E00;&#x5F00;&#x59CB;&#x4E0D;&#x6562;&#x5F00;&#x53E3;&#x5230;&#x6562;&#x4E8E;&#x8868;&#x8FBE;&#x81EA;&#x5DF1;&#x7684;&#x89C2;&#x70B9;&#x4E86;&#x3002;</li></ol><p>&#x6700;&#x540E;&#x9644;&#x5E26;&#x6211;&#x7684;&#x6210;&#x7EE9;&#x5355;&#xFF0C;&#x4E5F;&#x7B97;&#x7ED9;&#x81EA;&#x5DF1;&#x5B66;&#x82F1;&#x8BED;&#x4E00;&#x4E2A;&#x4EA4;&#x4EE3;&#x4E86;&#xFF1A;</p><p><img src="/posts/437c14e8/&#x591A;&#x90BB;&#x56FD;&#x6210;&#x7EE9;&#x5355;.jpg"></p><hr><p><a href="https://littlesevenmo.coding.net/s/9c0501e1-1ef1-4e6a-b89e-ae644a082168" target="_blank" rel="noopener">&#x6709;&#x7F18;&#x4EBA;&#x70B9;&#x8FD9;&#x91CC;</a>&#x3002;&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x8BCD;&#x5355;&#x6700;&#x540E;&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x53CA;&#x5176;&#x7B80;&#x5355;&#x7684;&#x5355;&#x8BCD;&#xFF0C;&#x6BD4;&#x5982;it&#xFF0C;which&#xFF0C;them&#x7B49;&#xFF0C;&#x90A3;&#x5E94;&#x8BE5;&#x662F;&#x6211;&#x5904;&#x7406;&#x7684;&#x65F6;&#x5019;&#x6CA1;&#x6709;&#x5904;&#x7406;&#x597D;&#xFF0C;&#x65E0;&#x89C6;&#x5C31;&#x597D;&#x3002;&#x5BC6;&#x7801;&#x662F;&#x535A;&#x5BA2;&#x7684;&#x57DF;&#x540D;&#xFF08;&#x4E0D;&#x5E26;https://)</p>]]></content>
      
      <categories>
          
          <category> 经验教训 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验教训 </tag>
            
            <tag> 总结 </tag>
            
            <tag> 学英语 </tag>
            
            <tag> 托福 </tag>
            
            <tag> 多邻国 </tag>
            
            <tag> Duolingo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>字节跳动2018校招算法方向第一批-题解与思路分析</title>
      <link href="//posts/1c810b8c/"/>
      <url>//posts/1c810b8c/</url>
      <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/test/8537279/summary" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x8FDE;&#x63A5;</a></p><a id="more"></a><h1 id="&#x7F16;&#x7A0B;&#x9898;&#x4E00;">&#x7F16;&#x7A0B;&#x9898;&#x4E00;</h1><p>P&#x4E3A;&#x7ED9;&#x5B9A;&#x7684;&#x4E8C;&#x7EF4;&#x5E73;&#x9762;&#x6574;&#x6570;&#x70B9;&#x96C6;&#x3002;&#x5B9A;&#x4E49; P &#x4E2D;&#x67D0;&#x70B9;x&#xFF0C;&#x5982;&#x679C;x&#x6EE1;&#x8DB3; P &#x4E2D;&#x4EFB;&#x610F;&#x70B9;&#x90FD;&#x4E0D;&#x5728; x &#x7684;&#x53F3;&#x4E0A;&#x65B9;&#x533A;&#x57DF;&#x5185;&#xFF08;&#x6A2A;&#x7EB5;&#x5750;&#x6807;&#x90FD;&#x5927;&#x4E8E;x&#xFF09;&#xFF0C;&#x5219;&#x79F0;&#x5176;&#x4E3A;&#x201C;&#x6700;&#x5927;&#x7684;&#x201D;&#x3002;&#x6C42;&#x51FA;&#x6240;&#x6709;&#x201C;&#x6700;&#x5927;&#x7684;&#x201D;&#x70B9;&#x7684;&#x96C6;&#x5408;&#x3002;&#xFF08;&#x6240;&#x6709;&#x70B9;&#x7684;&#x6A2A;&#x5750;&#x6807;&#x548C;&#x7EB5;&#x5750;&#x6807;&#x90FD;&#x4E0D;&#x91CD;&#x590D;, &#x5750;&#x6807;&#x8F74;&#x8303;&#x56F4;&#x5728;[0, 1e9) &#x5185;&#xFF09;</p><p>&#x5982;&#x4E0B;&#x56FE;&#xFF1A;&#x5B9E;&#x5FC3;&#x70B9;&#x4E3A;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x70B9;&#x7684;&#x96C6;&#x5408;&#x3002;&#x8BF7;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x627E;&#x5230;&#x96C6;&#x5408; P &#x4E2D;&#x7684;&#x6240;&#x6709; &#x201D;&#x6700;&#x5927;&#x201C; &#x70B9;&#x7684;&#x96C6;&#x5408;&#x5E76;&#x8F93;&#x51FA;&#x3002;</p><p><img src="/posts/1c810b8c/1.jpg"></p><p>&#x601D;&#x8DEF;&#x5206;&#x6790;&#xFF1A;</p><p>&#x5148;&#x6309;&#x7167;&#x7EB5;&#x5750;&#x6807;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x7531;&#x5927;&#x5230;&#x5C0F;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x6392;&#x5E8F;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x7684;&#x6A2A;&#x5750;&#x6807;&#xFF0C;&#x904D;&#x5386;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x70B9;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x70B9;&#x7684;&#x6A2A;&#x5750;&#x6807;&#x5927;&#x4E8E;&#x6700;&#x5927;&#x6A2A;&#x5750;&#x6807;&#xFF0C;&#x5219;&#x662F;&#x6700;&#x5916;&#x56F4;&#x7684;&#xFF0C;&#x53CD;&#x4E4B;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x70B9;&#x7684;&#x53F3;&#xFF08;x&#x4E0D;&#x662F;&#x5F53;&#x524D;&#x6700;&#x5927;&#xFF09;&#x4E0A;&#xFF08;&#x6309;&#x7167;y&#x4ECE;&#x9AD8;&#x5230;&#x4F4E;&#x8FDB;&#x884C;&#x904D;&#x5386;&#xFF09;&#x65B9;&#x6709;&#x70B9;&#xFF0C;&#x4E0D;&#x662F;&#x6700;&#x5916;&#x5C42;&#x7684;&#x3002;</p><p>&#x4EE3;&#x7801;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">}node;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node p, node q)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> p.b &gt; q.b;<span class="comment">//&#x6309;&#x7167;y&#x7684;&#x5927;&#x5C0F;&#x8FDB;&#x884C;&#x6392;&#x5E8F;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;Text.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="built_in">vector</span>&lt;node&gt; v;</span><br><span class="line">    v.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;v[i].a, &amp;v[i].b);</span><br><span class="line">    }</span><br><span class="line">    sort(v.begin(), v.end(), cmp);</span><br><span class="line">    <span class="keyword">int</span> maxx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (v[i].a &gt; maxx)</span><br><span class="line">        {</span><br><span class="line">            maxx = v[i].a;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, v[i].a, v[i].b);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x7F16;&#x7A0B;&#x9898;&#x4E8C;">&#x7F16;&#x7A0B;&#x9898;&#x4E8C;</h1><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x5E8F;&#x5217;, &#x9700;&#x8981;&#x6C42;&#x9009;&#x51FA;&#x4E00;&#x4E2A;&#x533A;&#x95F4;, &#x4F7F;&#x5F97;&#x8BE5;&#x533A;&#x95F4;&#x662F;&#x6240;&#x6709;&#x533A;&#x95F4;&#x4E2D;&#x7ECF;&#x8FC7;&#x5982;&#x4E0B;&#x8BA1;&#x7B97;&#x7684;&#x503C;&#x6700;&#x5927;&#x7684;&#x4E00;&#x4E2A;&#xFF1A;</p><p>&#x533A;&#x95F4;&#x4E2D;&#x7684;&#x6700;&#x5C0F;&#x6570; * &#x533A;&#x95F4;&#x6240;&#x6709;&#x6570;&#x7684;&#x548C;&#x6700;&#x540E;&#x7A0B;&#x5E8F;&#x8F93;&#x51FA;&#x7ECF;&#x8FC7;&#x8BA1;&#x7B97;&#x540E;&#x7684;&#x6700;&#x5927;&#x503C;&#x5373;&#x53EF;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x8F93;&#x51FA;&#x5177;&#x4F53;&#x7684;&#x533A;&#x95F4;&#x3002;&#x5982;&#x7ED9;&#x5B9A;&#x5E8F;&#x5217; [6 2 1]&#x5219;&#x6839;&#x636E;&#x4E0A;&#x8FF0;&#x516C;&#x5F0F;, &#x53EF;&#x5F97;&#x5230;&#x6240;&#x6709;&#x53EF;&#x4EE5;&#x9009;&#x5B9A;&#x5404;&#x4E2A;&#x533A;&#x95F4;&#x7684;&#x8BA1;&#x7B97;&#x503C;:</p><p>[6] = 6 * 6 = 36;</p><p>[2] = 2 * 2 = 4;</p><p>[1] = 1 * 1 = 1;</p><p>[6,2] = 2 * 8 = 16;</p><p>[2,1] = 1 * 3 = 3;</p><p>[6, 2, 1] = 1 * 9 = 9;</p><p>&#x4ECE;&#x4E0A;&#x8FF0;&#x8BA1;&#x7B97;&#x53EF;&#x89C1;&#x9009;&#x5B9A;&#x533A;&#x95F4; [6] &#xFF0C;&#x8BA1;&#x7B97;&#x503C;&#x4E3A; 36&#xFF0C; &#x5219;&#x7A0B;&#x5E8F;&#x8F93;&#x51FA;&#x4E3A; 36&#x3002;</p><p>&#x533A;&#x95F4;&#x5185;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x90FD;&#x5728;[0, 100]&#x7684;&#x8303;&#x56F4;&#x5185;;</p><p>&#x601D;&#x8DEF;&#x5206;&#x6790;&#xFF1A;C++&#x66B4;&#x529B;&#x53EF;&#x4EE5;&#x505A;&#x51FA;&#x6765;</p><p>&#x4EE3;&#x7801;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;Text.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;v[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>, minn = <span class="number">101</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (v[i] == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        sum = v[i];</span><br><span class="line">        minn = v[i];</span><br><span class="line">        maxn = max(sum*minn, maxn);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; n&amp;&amp;v[j] != <span class="number">0</span>; j++)</span><br><span class="line">        {</span><br><span class="line">            sum += v[j];</span><br><span class="line">            minn = min(minn, v[j]);</span><br><span class="line">            maxn = max(sum*minn,maxn);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; maxn;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x7F16;&#x7A0B;&#x9898;&#x4E09;">&#x7F16;&#x7A0B;&#x9898;&#x4E09;</h1><p>&#x4EA7;&#x54C1;&#x7ECF;&#x7406;(PM)&#x6709;&#x5F88;&#x591A;&#x597D;&#x7684;idea&#xFF0C;&#x800C;&#x8FD9;&#x4E9B;idea&#x9700;&#x8981;&#x7A0B;&#x5E8F;&#x5458;&#x5B9E;&#x73B0;&#x3002;&#x73B0;&#x5728;&#x6709;N&#x4E2A;PM&#xFF0C;&#x5728;&#x67D0;&#x4E2A;&#x65F6;&#x95F4;&#x4F1A;&#x60F3;&#x51FA;&#x4E00;&#x4E2A; idea&#xFF0C;&#x6BCF;&#x4E2A; idea &#x6709;&#x63D0;&#x51FA;&#x65F6;&#x95F4;&#x3001;&#x6240;&#x9700;&#x65F6;&#x95F4;&#x548C;&#x4F18;&#x5148;&#x7B49;&#x7EA7;&#x3002;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;PM&#x6765;&#x8BF4;&#xFF0C;&#x6700;&#x60F3;&#x5B9E;&#x73B0;&#x7684;idea&#x9996;&#x5148;&#x8003;&#x8651;&#x4F18;&#x5148;&#x7B49;&#x7EA7;&#x9AD8;&#x7684;&#xFF0C;&#x76F8;&#x540C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x4F18;&#x5148;&#x6240;&#x9700;&#x65F6;&#x95F4;&#x6700;&#x5C0F;&#x7684;&#xFF0C;&#x8FD8;&#x76F8;&#x540C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x9009;&#x62E9;&#x6700;&#x65E9;&#x60F3;&#x51FA;&#x7684;&#xFF0C;&#x6CA1;&#x6709; PM &#x4F1A;&#x5728;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x63D0;&#x51FA;&#x4E24;&#x4E2A; idea&#x3002;</p><p>&#x540C;&#x65F6;&#x6709;M&#x4E2A;&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x6BCF;&#x4E2A;&#x7A0B;&#x5E8F;&#x5458;&#x7A7A;&#x95F2;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4F1A;&#x67E5;&#x770B;&#x6BCF;&#x4E2A;PM&#x5C1A;&#x672A;&#x6267;&#x884C;&#x5E76;&#x4E14;&#x6700;&#x60F3;&#x5B8C;&#x6210;&#x7684;&#x4E00;&#x4E2A;idea,&#x7136;&#x540E;&#x4ECE;&#x4E2D;&#x6311;&#x9009;&#x51FA;&#x6240;&#x9700;&#x65F6;&#x95F4;&#x6700;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;idea&#x72EC;&#x7ACB;&#x5B9E;&#x73B0;&#xFF0C;&#x5982;&#x679C;&#x6240;&#x9700;&#x65F6;&#x95F4;&#x76F8;&#x540C;&#x5219;&#x9009;&#x62E9;PM&#x5E8F;&#x53F7;&#x6700;&#x5C0F;&#x7684;&#x3002;&#x76F4;&#x5230;&#x5B8C;&#x6210;&#x4E86;idea&#x624D;&#x4F1A;&#x91CD;&#x590D;&#x4E0A;&#x8FF0;&#x64CD;&#x4F5C;&#x3002;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x540C;&#x65F6;&#x5904;&#x4E8E;&#x7A7A;&#x95F2;&#x72B6;&#x6001;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x4EEC;&#x4F1A;&#x4F9D;&#x6B21;&#x8FDB;&#x884C;&#x67E5;&#x770B;idea&#x7684;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x6C42;&#x6BCF;&#x4E2A;idea&#x5B9E;&#x73B0;&#x7684;&#x65F6;&#x95F4;&#x3002;</p><p>&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x4E09;&#x4E2A;&#x6570;N&#x3001;M&#x3001;P&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x6709;N&#x4E2A;PM&#xFF0C;M&#x4E2A;&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;P&#x4E2A;idea&#x3002;&#x968F;&#x540E;&#x6709;P&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x6709;4&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x5206;&#x522B;&#x662F;PM&#x5E8F;&#x53F7;&#x3001;&#x63D0;&#x51FA;&#x65F6;&#x95F4;&#x3001;&#x4F18;&#x5148;&#x7B49;&#x7EA7;&#x548C;&#x6240;&#x9700;&#x65F6;&#x95F4;&#x3002;&#x8F93;&#x51FA;P&#x884C;&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x6BCF;&#x4E2A;idea&#x5B9E;&#x73B0;&#x7684;&#x65F6;&#x95F4;&#x70B9;&#x3002;</p><p>&#x601D;&#x8DEF;&#x5206;&#x6790;&#xFF1A;&#x6A21;&#x62DF;&#x53BB;&#x505A;&#x3002;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x4F7F;&#x7528;&#x4F18;&#x5148;&#x961F;&#x5217;&#x3002;</p><p>&#x4EE3;&#x7801;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> time;</span><br><span class="line">    <span class="keyword">int</span> rank;</span><br><span class="line">    <span class="keyword">int</span> cost;</span><br><span class="line">    <span class="keyword">int</span> global_id;</span><br><span class="line">    <span class="keyword">int</span> finish_time = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> struct node&amp;b)<span class="keyword">const</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (rank != b.rank)</span><br><span class="line">            <span class="keyword">return</span> rank &lt; b.rank;</span><br><span class="line">        <span class="keyword">if</span> (cost != b.cost)</span><br><span class="line">            <span class="keyword">return</span> cost &gt; b.cost;</span><br><span class="line">        <span class="keyword">if</span> (time != b.time)</span><br><span class="line">            <span class="keyword">return</span> time &gt; b.time;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">} idea;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(idea a, idea b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.global_id &lt; b.global_id;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(idea a, idea b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(a.time!=b.time)</span><br><span class="line">        <span class="keyword">return</span> a.time &lt; b.time;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;Text.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> n, m, p;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; p;</span><br><span class="line">    <span class="built_in">vector</span>&lt;idea&gt; v;</span><br><span class="line">    idea in;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; p; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; in.id&gt;&gt;in.time&gt;&gt;in.rank&gt;&gt;in.cost;</span><br><span class="line">        in.global_id = i;</span><br><span class="line">        v.push_back(in);</span><br><span class="line">    }</span><br><span class="line">    sort(v.begin(), v.end(), cmp3);</span><br><span class="line">    <span class="built_in">vector</span>&lt;priority_queue&lt;idea&gt;&gt; PM(n);</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt; pq;</span><br><span class="line">    <span class="built_in">vector</span>&lt;idea&gt; finished_idea;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        pq.push(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> time = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (finished_idea.size()!=p)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (; i &lt; v.size()&amp;&amp;v[i].time&lt;=time; i++)</span><br><span class="line">        {</span><br><span class="line">            PM[v[i].id - <span class="number">1</span>].push(v[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (pq.top()&lt;=time)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> first = <span class="number">0</span>, minn = <span class="number">9999</span>;</span><br><span class="line">            <span class="keyword">bool</span> haveidea = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (PM[j].empty())</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (minn &gt; PM[j].top().cost)</span><br><span class="line">                {</span><br><span class="line">                    minn = PM[j].top().cost;</span><br><span class="line">                    first = j;</span><br><span class="line">                    haveidea = <span class="literal">true</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (haveidea)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> chengxuyuan = pq.top(); pq.pop();</span><br><span class="line">                idea wancheng = PM[first].top(); PM[first].pop();</span><br><span class="line">                wancheng.finish_time = time + wancheng.cost;</span><br><span class="line">                chengxuyuan = wancheng.finish_time;</span><br><span class="line">                pq.push(chengxuyuan);</span><br><span class="line">                finished_idea.push_back(wancheng);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (time &gt;= pq.top())</span><br><span class="line">            time++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            time = pq.top();</span><br><span class="line">    }</span><br><span class="line">    sort(finished_idea.begin(), finished_idea.end(), cmp2);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p; j++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; finished_idea[j].finish_time &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x95EE;&#x7B54;&#x9898;&#x4E00;">&#x95EE;&#x7B54;&#x9898;&#x4E00;</h1><p>&#x7ED9;&#x5B9A;&#x4E00;&#x68F5;&#x6811;&#x7684;&#x6839;&#x8282;&#x70B9;, &#x5728;&#x5DF2;&#x77E5;&#x8BE5;&#x6811;&#x6700;&#x5927;&#x6DF1;&#x5EA6;&#x7684;&#x60C5;&#x51B5;&#x4E0B;, &#x6C42;&#x8282;&#x70B9;&#x6570;&#x6700;&#x591A;&#x7684;&#x90A3;&#x4E00;&#x5C42;&#x5E76;&#x8FD4;&#x56DE;&#x5177;&#x4F53;&#x7684;&#x5C42;&#x6570;&#x3002;</p><p>&#x5982;&#x679C;&#x6700;&#x540E;&#x7B54;&#x6848;&#x6709;&#x591A;&#x5C42;, &#x8F93;&#x51FA;&#x6700;&#x6D45;&#x7684;&#x90A3;&#x4E00;&#x5C42;&#xFF0C;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;100000&#x3002;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF0C;&#x8BF7;&#x6307;&#x51FA;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x591A;&#x5904;&#x9519;&#x8BEF;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;Node*&gt; sons;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfsFind</span><span class="params">(Node *node, <span class="keyword">int</span> dep, <span class="keyword">int</span> counter[])</span> </span>{</span><br><span class="line">    counter[dep]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; node.sons.size(); i++) {</span><br><span class="line">        dfsFind(node.sons[i], dep, counter);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(Node *root, <span class="keyword">int</span> maxDep)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> depCounter[<span class="number">100000</span>];</span><br><span class="line">    dfsFind(root, <span class="number">0</span>, depCounter);</span><br><span class="line">    <span class="keyword">int</span> max, maxDep;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= maxDep; i++) {</span><br><span class="line">        <span class="keyword">if</span> (depCounter[i] &gt; max) {</span><br><span class="line">            max = depCounter[i];</span><br><span class="line">            maxDep = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> maxDep;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><ol type="1"><li><p><code>dfsFind</code>&#x51FD;&#x6570;</p><ol type="1"><li>node<code>&#x662F;&#x6307;&#x9488;&#xFF0C;&#x6240;&#x4EE5;&#x5F97;&#x662F;</code>node-&gt;sons[i]`</li><li>&#x4F20;&#x9012;&#x5230;&#x65F6;&#x5019;&#xFF0C;&#x8981;dep+1&#x3002;</li><li>&#x5982;&#x679C;&#x662F;<code>node</code>&#x4E3A;&#x7A7A;&#xFF0C;&#x8981;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x3002;</li></ol><p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfsFind</span><span class="params">(Node *node, <span class="keyword">int</span> dep, <span class="keyword">int</span> counter[])</span> </span>{</span><br><span class="line">    <span class="keyword">if</span>(node==<span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    counter[dep]++;</span><br><span class="line">    &#xA0;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; node.sons-&gt;size(); i++) {</span><br><span class="line">    &#xA0; &#xA0; dfsFind(node-&gt;sons[i], dep+<span class="number">1</span>, counter);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; &#xA0; <span class="comment">//&#x6539;&#x4E3A;dep+1&#xFF0C;node-&gt;sons[i]</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p></li><li><p><code>find</code>&#x51FD;&#x6570;&#xFF1A;</p><ol type="1"><li>&#x9898;&#x76EE;&#x4E2D;&#x8BF4;&#xFF0C;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;100000&#xFF0C;&#x5982;&#x679C;<code>i</code>&#x7684;&#x8D77;&#x59CB;&#x662F;1&#xFF0C;&#x90A3;&#x4E48;&#x6570;&#x7EC4;&#x5927;&#x5C0F;&#x5E94;&#x8BE5;&#x8981;&#x6539;&#x6210;100001&#x3002;</li><li>&#x8003;&#x8651;<code>root</code>&#x4E3A;&#x7A7A;&#x7684;&#x60C5;&#x51B5;&#x3002;</li><li><code>max</code>&#x540D;&#x5B57;&#x53EF;&#x80FD;&#x4F1A;&#x4E0E;<code>max()</code>&#x51FD;&#x6570;&#x8D77;&#x51B2;&#x7A81;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x6211;&#xFF0C;&#x6211;&#x4F1A;&#x6539;&#x4E2A;&#x540D;&#x5B57;&#xFF0C;&#x6539;&#x6210;<code>maxn</code></li><li><code>maxDep</code>&#x662F;&#x4F20;&#x8FDB;&#x6765;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4E0D;&#x80FD;&#x91CD;&#x590D;&#x5B9A;&#x4E49;&#xFF0C;&#x6539;&#x4E2A;&#x540D;&#x5B57;&#x3002;</li></ol><p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(Node *root, <span class="keyword">int</span> maxDep)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> depCounter[<span class="number">100001</span>];</span><br><span class="line">    dfsFind(root, <span class="number">1</span>, depCounter);           <span class="comment">//&#x6539;&#x4E3A;root, 1, depCounter</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> maxn=<span class="number">0</span>, maxDep_2=<span class="number">0</span>;                    <span class="comment">//maxn=0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= maxDep; i++) {</span><br><span class="line">        <span class="keyword">if</span> (depCounter[i] &gt; maxn) {</span><br><span class="line">            maxn = depCounter[i];</span><br><span class="line">            maxDep_2 = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> maxDep_2;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure></p></li></ol><h1 id="&#x95EE;&#x7B54;&#x9898;&#x4E8C;">&#x95EE;&#x7B54;&#x9898;&#x4E8C;</h1><p>&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#xFF0C;&#x4E0D;&#x592A;&#x4F1A;&#x505A;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 字节跳动笔试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 字节跳动 </tag>
            
            <tag> 笔试题 </tag>
            
            <tag> 牛客网 </tag>
            
            <tag> 秋招 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SUMO笔记</title>
      <link href="//posts/59170f05/"/>
      <url>//posts/59170f05/</url>
      <content type="html"><![CDATA[<p>SUMO &#x7684;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x3002;</p><a id="more"></a><h1 id="&#x5B89;&#x88C5;">&#x5B89;&#x88C5;</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install cmake python g++ libxerces-c-dev libfox-1.6-dev libgdal-dev libproj-dev libgl2ps-dev swig</span><br><span class="line">cd &lt;SUMO_DIR&gt; # please insert the correct directory name here</span><br><span class="line">export SUMO_HOME=&quot;$PWD&quot;</span><br><span class="line">mkdir build/cmake-build &amp;&amp; cd build/cmake-build</span><br><span class="line">cmake ../..</span><br><span class="line">make -j$(nproc)</span><br></pre></td></tr></table></figure><p>&#x5B89;&#x88C5;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export SUMO_HOME=/usr/local/share/sumo/</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;<code>cd /usr/local/share/sumo/bin</code>&#xFF0C;&#x6267;&#x884C;<code>./sumo-gui</code>&#x5373;&#x53EF;&#x3002;</p><p>&#x7ED3;&#x679C;&#x5982;&#x56FE;</p><figure><img src="/posts/59170f05/1563961227826.png" alt="1563961227826"><figcaption>1563961227826</figcaption></figure><h1 id="sumo&#x5DE5;&#x7A0B;&#x7ED3;&#x6784;">sumo&#x5DE5;&#x7A0B;&#x7ED3;&#x6784;</h1><p>SUMO&#x7684;&#x4EFF;&#x771F;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF1A;</p><ol type="1"><li>&#x9053;&#x8DEF;&#x6587;&#x4EF6;&#xFF0C;&#x6216;&#x8005;&#x53EB;&#x8DEF;&#x7F51;&#x6587;&#x4EF6;&#xFF08;net.xml&#xFF09;&#xFF0C;&#x5C31;&#x662F;&#x5BF9;&#x884C;&#x8F66;&#x9053;&#x8DEF;&#x7684;&#x63CF;&#x8FF0;&#x6587;&#x4EF6;&#xFF1B;</li><li>&#x8F66;&#x6D41;&#x6587;&#x4EF6;(rou.xml)&#xFF0C;&#x6216;&#x8005;&#x53EB;&#x505A;&#x8F66;&#x91CF;&#x884C;&#x9A76;&#x6587;&#x4EF6;&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x8F66;&#x6D41;&#x91CF;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x66F4;&#x52A0;&#x9AD8;&#x7EA7;&#x7684;&#x4EFF;&#x771F;&#x53EF;&#x4EE5;&#x52A0;&#x5165;&#x522B;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982;&#x8F66;&#x8F86;&#x63CF;&#x8FF0;&#x6587;&#x4EF6;&#xFF0C;&#x5730;&#x5F62;&#x6587;&#x4EF6;&#x3002;</li></ol><h1 id="get-files">Get files</h1><p>&#x6211;&#x662F;&#x4ECE;www.openstreetmap.org/ &#x8FD9;&#x91CC;&#x4E0B;&#x8F7D;&#x7684;&#x5730;&#x56FE;</p><p>&#x9009;&#x62E9;&#x5317;&#x4EAC;-&#x6D77;&#x6DC0;&#x533A;&#xFF0C;&#x5728;&#x5DE6;&#x4FA7;&#x7684;export&#x91CC;&#x5BFC;&#x51FA;&#x3002;</p><p>&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x6240;&#x89C1;&#x5373;&#x6240;&#x5F97;&#x7684;&#x4E0B;&#x8F7D;&#xFF0C;&#x4F1A;&#x7ED9;&#x5B9A;&#x5F53;&#x524D;&#x5730;&#x56FE;&#x9875;&#x9762;&#x7684;&#x7ECF;&#x7EAC;&#x5EA6;&#x5750;&#x6807;&#xFF0C;&#x4E0B;&#x8F7D;&#x4E5F;&#x662F;&#x4E0B;&#x8F7D;&#x8FD9;&#x4E2A;&#x8303;&#x56F4;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x8BF7;&#x901A;&#x8FC7;&#x7F29;&#x653E;&#x6765;&#x63A7;&#x5236;&#x8303;&#x56F4;&#x7684;&#x5927;&#x5C0F;&#x3002;</p><p>&#x5728;bin&#x6587;&#x4EF6;&#x5939;&#x91CC;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;netcovert&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x4F7F;&#x7528;&#x5B83;&#x53EF;&#x4EE5;&#x628A;&#x4E0B;&#x8F7D;&#x7684;osm&#xFF08;&#x867D;&#x7136;&#x540E;&#x7F00;&#x6CA1;&#x6709;&#x6807;&#x660E;&#xFF09;&#x6587;&#x4EF6;&#x8F6C;&#x4E3A;&#x9700;&#x8981;&#x7684;.net.xml&#x6587;&#x4EF6;&#x3002;&#x6211;&#x4E0B;&#x8F7D;&#x7684;map&#x6587;&#x4EF6;&#x5728;<code>/home/intel/Downloads</code> &#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x540D;&#x4E3A;<code>map</code>&#x3002;&#x6211;&#x4F7F;&#x7528;&#x547D;&#x4EE4;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/bin$ ./netconvert --osm-files /home/intel/Downloads/map -o /home/intel/Downloads/map.net.xml</span><br></pre></td></tr></table></figure><p>&#x628A;map&#x8F6C;&#x4E3A;net.xml&#x6587;&#x4EF6;&#x3002;</p><figure><img src="/posts/59170f05/1564019933764.png" alt="1564019933764"><figcaption>1564019933764</figcaption></figure><p>&#x8FD9;&#x6837;&#x9053;&#x8DEF;&#x6587;&#x4EF6;&#x5C31;&#x505A;&#x5B8C;&#x4E86;&#x3002;</p><p>&#x751F;&#x6210;trips&#x6587;&#x4EF6;&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/tools$ ./randomTrips.py -n /home/intel/Downloads/map.net.xml -l -e 600 -o /home/intel/Downloads/map.trips.xml</span><br></pre></td></tr></table></figure><p>&#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x628A;&#x968F;&#x673A;&#x7684;&#x65C5;&#x7A0B;&#x548C;&#x9053;&#x8DEF;&#x4FE1;&#x606F;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#x5C31;&#x83B7;&#x5F97;&#x4E86;&#x8F66;&#x6D41;&#x6587;&#x4EF6;&#xFF08;rou.xml&#xFF09;&#x4E86;&#x3002;&#x6211;&#x4EEC;&#x8981;&#x7528;&#x5230;&#x7684;&#x5DE5;&#x5177;&#x662F;bin&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;duarouter&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/bin$ ./duarouter -n /home/intel/Downloads/map.net.xml -t /home/intel/Downloads/map.trips.xml -o /home/intel/Downloads/map.rou.xml --ignore-errors</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5F97;&#x5230;&#x4E86;rou.xml&#x6587;&#x4EF6;&#x3002;</p><h1 id="&#x8FD0;&#x884C;">&#x8FD0;&#x884C;</h1><p>&#x4EC5;&#x4EC5;&#x9760;&#x751F;&#x6210;&#x7684;net.xml&#x548C;rou.xml&#x662F;&#x4E0D;&#x591F;&#x7684;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;</p><p>&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x547D;&#x540D;&#x4E3A;<code>map.sumo.cfg</code>&#xFF0C;&#x5728;&#x5176;&#x4E2D;&#x8F93;&#x5165;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;input&gt;</span><br><span class="line">        &lt;net-file value=&quot;map.net.xml&quot;/&gt;</span><br><span class="line">        &lt;route-files value=&quot;map.rou.xml&quot;/&gt;</span><br><span class="line">    &lt;/input&gt;</span><br><span class="line">    &lt;time&gt;</span><br><span class="line">        &lt;begin value=&quot;0&quot;/&gt;</span><br><span class="line">        &lt;end value=&quot;360000&quot;/&gt;</span><br><span class="line">    &lt;/time&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>&#x5728;&#x7EC8;&#x7AEF;&#x4E2D;&#xFF0C;&#x8F93;&#x5165;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sumo-gui /home/intel/Downloads/map.sumo.cfg</span><br></pre></td></tr></table></figure><p>&#x5373;&#x53EF;&#x8FD0;&#x884C;&#x3002;</p><h1 id="&#x6548;&#x679C;">&#x6548;&#x679C;</h1><h2 id="map1-&#x5168;&#x5317;&#x4EAC;">map1-&#x5168;&#x5317;&#x4EAC;</h2><p>&#x4E3B;&#x754C;&#x9762;&#xFF1A;</p><figure><img src="/posts/59170f05/1564031049792.png" alt="1564031049792"><figcaption>1564031049792</figcaption></figure><figure><img src="/posts/59170f05/1564031963620.png" alt="1564031963620"><figcaption>1564031963620</figcaption></figure><p>&#x63A7;&#x5236;&#x680F;&#x4E2D;&#xFF0C;&#x7EFF;&#x8272;&#x4E09;&#x89D2;&#x8868;&#x793A;&#x5F00;&#x59CB;&#xFF0C;&#x8BA1;&#x65F6;&#x7684;&#x6570;&#x5B57;&#x8868;&#x793A;&#x5F53;&#x524D;&#x7684;&#x65F6;&#x95F4;&#x7247;&#xFF0C;delay time&#x8868;&#x793A;&#x6BCF;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#x6682;&#x505C;&#x591A;&#x5C11;&#x65F6;&#x95F4;&#xFF08;&#x5355;&#x4F4D;ms&#xFF09;&#xFF0C;&#x4E00;&#x822C;100&#xFF5E;250ms&#x6548;&#x679C;&#x4F1A;&#x6BD4;&#x8F83;&#x597D;&#x3002;scale traffic&#x662F;&#x63A7;&#x5236;&#x8F66;&#x7684;&#x6570;&#x91CF;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x503C;&#x8D8A;&#x5927;&#xFF0C;&#x8DEF;&#x4E0A;&#x8F66;&#x8D8A;&#x591A;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x597D;&#x50CF;&#x662F;rou.xml&#x4E4B;&#x5916;&#x7684;&#x8F66;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6211;&#x672C;&#x6765;&#x53EA;&#x60F3;&#x4E0B;&#x8F7D;&#x6D77;&#x6DC0;&#x533A;&#x7684;&#x5730;&#x56FE;&#x7684;&#xFF0C;&#x7ED3;&#x679C;&#x4E0B;&#x8F7D;&#x6210;&#x4E86;&#x5317;&#x4EAC;&#x5E02;&#x7684;&#xFF0C;&#x5730;&#x56FE;&#x8D85;&#x5927;&#xFF0C;&#x8DEF;&#x4E5F;&#x8D85;&#x591A;&#x3002;</p><p>&#x5341;&#x5B57;&#x8DEF;&#x53E3;&#xFF0C;&#x7EA2;&#x9EC4;&#x84DD;&#x8868;&#x793A;&#x7EA2;&#x7EFF;&#x706F;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x706F;&#x90FD;&#x662F;&#x4F1A;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x53D8;&#x8272;&#x7684;&#x3002;</p><figure><img src="/posts/59170f05/1564024481231.png" alt="1564024481231"><figcaption>1564024481231</figcaption></figure><p>&#x8F66;&#xFF0C;&#x9EC4;&#x8272;&#x6807;&#x8BB0;&#x51FA;&#x6765;&#x7684;&#x90E8;&#x5206;&#x662F;&#x8F66;&#x3002;</p><figure><img src="/posts/59170f05/1564024772975.png" alt="1564024772975"><figcaption>1564024772975</figcaption></figure><h2 id="map2-&#x878D;&#x79D1;&#x9644;&#x8FD1;">map2-&#x878D;&#x79D1;&#x9644;&#x8FD1;</h2><figure><img src="/posts/59170f05/1564031924346.png" alt="1564031924346"><figcaption>1564031924346</figcaption></figure><p>&#x540E;&#x7EED;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x7684;&#x8FDB;&#x884C;&#xFF0C;&#x80FD;&#x770B;&#x51FA;&#x8DEF;&#x4E0A;&#x5835;&#x4E86;&#x5F88;&#x591A;&#x8F66;&#x3002;</p><h1 id="&#x6587;&#x4EF6;&#x5206;&#x6790;&#x6784;&#x9020;map3">&#x6587;&#x4EF6;&#x5206;&#x6790;&amp;&#x6784;&#x9020;map3</h1><h2 id="net.xml">net.xml</h2><p>&#x6253;&#x5F00;net.xml&#xFF0C;&#x5982;&#x56FE;&#xFF1A;</p><figure><img src="/posts/59170f05/1564032607217.png" alt="1564032607217"><figcaption>1564032607217</figcaption></figure><figure><img src="/posts/59170f05/1564032640210.png" alt="1564032640210"><figcaption>1564032640210</figcaption></figure><p>&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x9053;&#x8DEF;&#x6587;&#x4EF6;&#xFF0C;&#x62BD;&#x8C61;&#x6210;&#x56FE;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x662F;&#x70B9;&#x548C;&#x8FB9;&#x3002;</p><p>&#x8282;&#x70B9;&#x6620;&#x5C04;&#x5230;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x5C31;&#x662F;&#x4EA4;&#x53C9;&#x8DEF;&#x53E3;&#xFF0C;&#x8FB9;&#x5C31;&#x662F;&#x9053;&#x8DEF;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8282;&#x70B9;&#x548C;&#x8FB9;&#x6765;&#x81EA;&#x5DF1;&#x6784;&#x9020;net.xml&#x6587;&#x4EF6;&#x3002;</p><p>&#x5148;&#x5199;&#x4E00;&#x4E2A;node.xml&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nodes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">x</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">x</span>=<span class="string">&quot;400.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;priority&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">x</span>=<span class="string">&quot;700.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">x</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;300.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">x</span>=<span class="string">&quot;400.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;300.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">x</span>=<span class="string">&quot;700.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;300.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">x</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;600.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">x</span>=<span class="string">&quot;400.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;600.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">x</span>=<span class="string">&quot;700.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;600.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">x</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;800.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">x</span>=<span class="string">&quot;400.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;800.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">x</span>=<span class="string">&quot;700.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;800.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;priority&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nodes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>id&#x5C31;&#x662F;&#x4EA4;&#x53C9;&#x8DEF;&#x53E3;&#x7684;&#x540D;&#x5B57;&#xFF0C;x&#xFF0C;y&#x662F;&#x4EA4;&#x53C9;&#x53E3;&#x7684;&#x5750;&#x6807;&#xFF0C;&#x4E0D;&#x50CF;opencv&#x6216;&#x8005;&#x663E;&#x793A;&#x5C4F;&#x9A71;&#x52A8;&#x4E00;&#x4E0B;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x5750;&#x6807;&#x5C31;&#x662F;&#x5DE6;&#x4E0B;&#x89D2;&#x662F;&#x539F;&#x70B9;&#x3002;</p><p>type&#x5C5E;&#x6027;&#x590D;&#x6742;&#x4E00;&#x4E9B;&#xFF1A;</p><ul><li>priority: &#x8F66;&#x8F86;&#x5FC5;&#x987B;&#x7B49;&#x5F85;&#xFF0C;&#x76F4;&#x5230;&#x5B83;&#x4EEC;&#x53F3;&#x4FA7;&#x8F66;&#x8F86;&#x5B8C;&#x5168;&#x901A;&#x8FC7;&#x8DEF;&#x53E3;&#x3002; Vehicles have to wait until vehicles right to them have passed the junction</li><li>traffic_light: &#x4EA4;&#x53C9;&#x53E3;&#x88AB;&#x4EA4;&#x901A;&#x706F;&#x63A7;&#x5236;&#x7740;</li><li>right_before_left: &#x6765;&#x81EA;&#x53F3;&#x8FB9;&#x7684;&#x8F66;&#x8F86;&#x4F18;&#x5148;&#x901A;&#x8FC7; Vehicles will let vehicles coming from their right side pass.</li></ul><p>&#x518D;&#x5199;&#x4E00;&#x4E2A;edg.xml&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">edges</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-0-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;4&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-0-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-0-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;4&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-0-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-0-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-0-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-0-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-0-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-0-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-0-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-1-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-1-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-1-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-1-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-1-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-1-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-1-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-1-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-1-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-1-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-2-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-2-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-2-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-2-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-2-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-2-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-2-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-2-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-2-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-2-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-3-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-3-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-3-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-3-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">edges</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5217;&#x51FA;&#x8FB9;&#x7684;&#x5C5E;&#x6027;&#x5982;&#x4E0B;&#xFF1A;</p><table><colgroup><col style="width: 10%"><col style="width: 7%"><col style="width: 25%"><col style="width: 56%"></colgroup><thead><tr class="header"><th style="text-align: center;">&#x5C5E;&#x6027;&#x540D;</th><th>&#x662F;&#x5426;&#x5FC5;&#x987B;</th><th>&#x503C;&#x7C7B;&#x578B;</th><th>&#x63CF;&#x8FF0;</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">id</td><td>&#x662F;</td><td>id(string)</td><td>&#x8FB9;&#x7684;&#x540D;&#x5B57;</td></tr><tr class="even"><td style="text-align: center;">formnode</td><td>&#x5426;</td><td></td><td>&#x8FB9;&#x7684;&#x8D77;&#x59CB;&#x8282;&#x70B9;&#xFF0C;&#x9700;&#x5728;&#x8282;&#x70B9;&#x6587;&#x4EF6;&#x4E2D;&#x5B58;&#x5728;</td></tr><tr class="odd"><td style="text-align: center;">tonode</td><td>&#x5426;</td><td></td><td>&#x8FB9;&#x7684;&#x7EC8;&#x6B62;&#x8282;&#x70B9;&#xFF0C;&#x9700;&#x5728;&#x8282;&#x70B9;&#x6587;&#x4EF6;&#x4E2D;&#x5B58;&#x5728;</td></tr><tr class="even"><td style="text-align: center;">type</td><td>&#x5426;</td><td></td><td>&#x7C7B;&#x578B;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x7C7B;&#x578B;&#x540D;</td></tr><tr class="odd"><td style="text-align: center;">nolanes</td><td>&#x5426;</td><td>int</td><td>&#x8FB9;&#x7684;&#x8F66;&#x9053;&#x6570;&#xFF0C;&#x5FC5;&#x987B;&#x662F;&#x6574;&#x6570;</td></tr><tr class="even"><td style="text-align: center;">speed</td><td>&#x5426;</td><td>float</td><td>&#x8FB9;&#x5141;&#x8BB8;&#x7684;&#x6700;&#x5927;&#x8F66;&#x901F;&#xFF08;m/s)&#xFF0C;&#x5FC5;&#x987B;&#x662F;&#x6D6E;&#x70B9;&#x6570;</td></tr><tr class="odd"><td style="text-align: center;">priority</td><td>&#x5426;</td><td>int</td><td>&#x8FB9;&#x7684;&#x4F18;&#x5148;&#x6743;</td></tr><tr class="even"><td style="text-align: center;">length</td><td>&#x5426;</td><td>float</td><td>&#x8FB9;&#x957F;&#xFF08;m&#xFF09;</td></tr><tr class="odd"><td style="text-align: center;">shape</td><td>&#x5426;</td><td>&#x4F4D;&#x7F6E;&#x5217;&#x8868;&#xFF0C;&#x7528;x&#xFF0C;y&#x8868;&#x793A;&#xFF0C;&#x5355;&#x4F4D;m</td><td>&#x4ECE;&#x5F62;&#x72B6;&#x7684;&#x5B9A;&#x4E49;&#x91CC;&#xFF0C;&#x8D77;&#x6B62;&#x8282;&#x70B9;&#x88AB;&#x5FFD;&#x7565;&#x3002;&#x4F8B;&#x5982;&#xFF1A;<edge id="e1" fromnode="0" tonode="1" shape="0,0 0,100">&#x8868;&#x793A;&#xFF0C;&#x4E00;&#x4E2A;&#x8FB9;&#xFF0C;&#x4ECE;&#x8282;&#x70B9;0&#x5F00;&#x59CB;&#xFF0C;&#x9996;&#x5148;&#x7ECF;&#x8FC7;&#x70B9;&#xFF08;0,0&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x5411;&#x53F3;&#x884C;100&#x7C73;&#xFF0C;&#x6700;&#x540E;&#x5230;&#x8FBE;&#x8282;&#x70B9;1</edge></td></tr><tr class="even"><td style="text-align: center;">spread_type</td><td>&#x5426;</td><td>&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#xFF08;right,center)</td><td>&#x63CF;&#x8FF0;&#x600E;&#x6837;&#x5EF6;&#x5C55;&#x8F66;&#x9053;&#xFF1A;center&#x8868;&#x793A;&#x53CC;&#x5411;&#x5EF6;&#x5C55;&#x8F66;&#x9053;&#xFF0C;right&#x4E3A;&#x5411;&#x53F3;&#x5EF6;&#x5C55;&#x3002;</td></tr></tbody></table><p>edge&#x6587;&#x4EF6;&#x5BF9;&#x4E8E;&#x8282;&#x70B9;&#x6709;&#x4E24;&#x4E2A;&#x65B9;&#x5411;&#xFF0C;&#x5F53;&#x53EA;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x662F;&#x5355;&#x884C;&#x7EBF;&#x3002;</p><p>&#x7531;&#x4E0A;&#x9762;node.xml&#x548C;edg.xml&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;netconvert&#x8F6C;&#x6362;&#x6210;net.xml&#x3002;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/bin$ ./netconvert --node-files /home/intel/Documents/Maps/map3.node.xml --edge-files /home/intel/Documents/Maps/map3.edg.xml -o /home/intel/Documents/Maps/map3.net.xml</span><br></pre></td></tr></table></figure><figure><img src="/posts/59170f05/1564038194572.png" alt="1564038194572"><figcaption>1564038194572</figcaption></figure><p>&#x5728;sumo-gui&#x4E2D;&#x770B;&#x4E00;&#x770B;&#x7ED3;&#x679C;&#xFF0C;&#x5982;&#x56FE;&#xFF1A;</p><figure><img src="/posts/59170f05/1564038718166.png" alt="1564038718166"><figcaption>1564038718166</figcaption></figure><p>&#x548C;&#x6211;&#x4EEC;&#x7684;&#x8BBE;&#x5B9A;&#x4E00;&#x81F4;&#xFF0C;&#x4E00;&#x5171;12&#x4E2A;node&#xFF0C;&#x7531;&#x5750;&#x6807;&#x53EF;&#x77E5;&#xFF0C;&#x5DE6;&#x4E0B;&#x89D2;&#x662F;node1&#xFF0C;&#x4E0B;&#x8FB9;&#x4E2D;&#x95F4;&#x662F;node2&#xFF0C;&#x7C7B;&#x578B;&#x5206;&#x522B;&#x4E3A;traffic_light&#x548C;priority&#xFF0C;&#x6240;&#x4EE5;&#x4E0B;&#x9762;&#x5C55;&#x793A;&#x7684;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x3002;</p><h2 id="rou.xml">rou.xml</h2><p>&#x6253;&#x5F00;rou.xml&#xFF0C;&#x5982;&#x56FE;</p><figure><img src="/posts/59170f05/1564039572399.png" alt="1564039572399"><figcaption>1564039572399</figcaption></figure><p>vehicle&#x6807;&#x7B7E;&#x6307;&#x7684;&#x5C31;&#x662F;&#x4E00;&#x8F86;&#x8F66;&#xFF0C;&#x800C;route&#x5219;&#x662F;&#x8FD9;&#x8F86;&#x8F66;&#x5C06;&#x884C;&#x9A76;&#x8FC7;&#x7684;&#x8DEF;&#x5F84;&#x3002;vehicle&#x6807;&#x7B7E;&#x7684;id&#x5C5E;&#x6027;&#x5C31;&#x662F;&#x8F66;&#x8F86;&#x7684;&#x540D;&#x79F0;&#xFF0C;depart&#x5C31;&#x662F;&#x51FA;&#x73B0;&#x5728;&#x4EFF;&#x771F;&#x4E2D;&#x7684;&#x65F6;&#x95F4;&#x3002;</p><p>&#x81EA;&#x5DF1;&#x5199;&#x4E00;&#x4E2A;rou.xml&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">routes</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">vType</span> <span class="attr">id</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">accel</span>=<span class="string">&quot;0.8&quot;</span> <span class="attr">decel</span>=<span class="string">&quot;4.5&quot;</span> <span class="attr">sigma</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">length</span>=<span class="string">&quot;5&quot;</span> <span class="attr">maxSpeed</span>=<span class="string">&quot;70&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;0&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;0.00&quot;</span> <span class="attr">type</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,0,0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeR-0-1 edgeU-0-2 edgeU-1-2 edgeL-2-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;1.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeR-3-1 edgeD-2-2 edgeL-2-1 edgeL-2-0 edgeU-2-0 edgeR-3-0&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;2&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;2.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeL-1-0 edgeU-1-0 edgeR-2-0 edgeU-2-1 edgeR-3-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;3&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;3.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeL-0-1 edgeU-0-1 edgeU-1-1 edgeL-2-0 edgeU-2-0 edgeR-3-0&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;4&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;4.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeR-3-1 edgeD-2-2 edgeL-2-1 edgeR-2-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;5&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;5.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeL-1-1 edgeU-1-1 edgeD-1-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">routes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5176;&#x4E2D;&#xFF0C;id&#x4E3A;0&#x7684;&#x8F66;&#x7684;&#x989C;&#x8272;&#x662F;&#x7EA2;&#x8272;&#xFF0C;&#x548C;&#x5176;&#x4ED6;&#x7684;&#x4F1A;&#x6709;&#x4E9B;&#x8BB8;&#x4E0D;&#x540C;&#x3002;</p><p>&#x8FD9;&#x79CD;&#x5BF9;&#x8F66;&#x8F86;&#x7684;&#x5B9A;&#x4E49;&#x4E0D;&#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E;&#x3002;</p><p>&#x4F46;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x5B9A;&#x4E49;&#x884C;&#x4EBA;&#xFF0C;&#x548C;&#x8F66;&#x8F86;&#x91CC;&#x9762;&#x8F7D;&#x4EBA;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x663E;&#x793A;&#x7684;&#x5B9A;&#x4E49;&#x3002;</p><p>&#x7C7B;&#x4F3C;&#x4E8E;&#x540E;&#x9762;&#x7684;type&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x91CC;&#x4E5F;&#x53EF;&#x4EE5;&#x6A21;&#x677F;&#x5316;&#x3002;&#x4F8B;&#x5982;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">routes</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">vType</span> <span class="attr">id</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">accel</span>=<span class="string">&quot;0.8&quot;</span> <span class="attr">decel</span>=<span class="string">&quot;4.5&quot;</span> <span class="attr">sigma</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">length</span>=<span class="string">&quot;5&quot;</span> <span class="attr">maxSpeed</span>=<span class="string">&quot;70&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">route</span> <span class="attr">id</span>=<span class="string">&quot;route0&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,1,0&quot;</span> <span class="attr">edges</span>=<span class="string">&quot;beg middle end rend&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">route</span>=<span class="string">&quot;route0&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;0&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,0,0&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">route</span>=<span class="string">&quot;route0&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;0&quot;</span> <span class="attr">color</span>=<span class="string">&quot;0,1,0&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">routes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#xFF0C;type&#x548C;route&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x540E;&#x9762;&#x7684;vehicle&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x4F7F;&#x7528;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x5730;&#x56FE;&#x662F;standard</p><figure><img src="/posts/59170f05/1564041859245.png" alt="1564041859245"><figcaption>1564041859245</figcaption></figure><p>route &#x5FC5;&#x987B;&#x6309;&#x7167;&#x5F00;&#x59CB;&#x65F6;&#x95F4;&#x6392;&#x5E8F;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x9ED8;&#x8BA4;&#x662F;&#x6309;&#x7167;200&#x65F6;&#x95F4;&#x7247;&#x7684;&#x95F4;&#x9694;&#x6765;&#x52A0;&#x8F7D;route &#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code>--route-steps</code>&#x53C2;&#x6570;&#x6765;&#x8C03;&#x6574;&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A;0&#xFF0C;&#x5373;<code>--route-steps 0</code>&#x8868;&#x793A;&#x4E00;&#x6B21;&#x6027;&#x52A0;&#x8F7D;&#x5168;&#x90E8;&#x6587;&#x4EF6;&#x3002;</p><p>&#x8F66;&#x7684;&#x957F;&#x5EA6;&#x4EE5;&#x53CA;&#x524D;&#x9762;&#x95F4;&#x8DDD;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x4F7F;&#x7528;&#x53C2;&#x6570;<code>length</code>&#x63CF;&#x8FF0;&#x8F66;&#x8F86;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x4F7F;&#x7528;<code>minGap</code>&#x63CF;&#x8FF0;&#x6700;&#x5C0F;&#x524D;&#x95F4;&#x8DDD;</p><p>&#x8FD9;&#x6837;&#xFF0C;&#x4E00;&#x8F86;&#x8F66;&#x5360;&#x636E;&#x7684;&#x7A7A;&#x95F4;&#x5C31;&#x662F;</p><figure><img src="/posts/59170f05/300px-Length_vs_minGap.svg.png" alt="Length vs minGap.svg"><figcaption>Length vs minGap.svg</figcaption></figure><p>&#x8F66;&#x8F86;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x7531;<code>vClass</code>&#x6765;&#x63CF;&#x8FF0;&#xFF0C;&#x9ED8;&#x8BA4;&#x7C7B;&#x578B;&#x662F;&#x666E;&#x901A;&#x79C1;&#x5BB6;&#x8F66;&#x3002;</p><p>&#x901A;&#x8FC7;&#x5982;&#x4E0B;&#x4FEE;&#x6539;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">routes</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">vType</span> <span class="attr">id</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">accel</span>=<span class="string">&quot;0.8&quot;</span> <span class="attr">decel</span>=<span class="string">&quot;4.5&quot;</span> <span class="attr">sigma</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">length</span>=<span class="string">&quot;10&quot;</span> <span class="attr">maxSpeed</span>=<span class="string">&quot;70&quot;</span> <span class="attr">vClass</span>=<span class="string">&quot;truck&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;0&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;0.00&quot;</span> <span class="attr">type</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,0,0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeR-0-1 edgeU-0-2 edgeU-1-2 edgeL-2-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line">   ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">routes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x628A;&#x4E00;&#x8F86;&#x8F66;&#x6539;&#x4E3A;&#x4E86;&#x7EA2;&#x8272;&#xFF0C;&#x5361;&#x8F66;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;10&#x3002;&#xFF08;&#x663E;&#x793A;&#x7684;&#x662F;real word&#x6A21;&#x5F0F;&#xFF09;</p><figure><img src="/posts/59170f05/1564129059369.png" alt="1564129059369"><figcaption>1564129059369</figcaption></figure><p>&#x8F66;&#x6D41;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x91CD;&#x590D;&#x7684;&#xFF0C;&#x9664;&#x4E86;&#x51FA;&#x53D1;&#x65F6;&#x95F4;&#x5916;&#xFF0C;&#x5176;&#x5177;&#x6709;&#x4E0E;&#x8F66;&#x8F86;&#x76F8;&#x540C;&#x7684;&#x53C2;&#x6570;&#x3002;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">flow</span> <span class="attr">id</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,1,0&quot;</span>  <span class="attr">begin</span>=<span class="string">&quot;0&quot;</span> <span class="attr">end</span>= <span class="string">&quot;7200&quot;</span> <span class="attr">period</span>=<span class="string">&quot;900&quot;</span> <span class="attr">type</span>=<span class="string">&quot;BUS&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;beg middle end rend&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stop</span> <span class="attr">busStop</span>=<span class="string">&quot;station1&quot;</span> <span class="attr">duration</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">flow</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x66F4;&#x591A;&#x7684;&#xFF0C;&#x8BF7;&#x67E5;&#x9605;<a href="https://sumo.dlr.de/wiki/Definition_of_Vehicles,_Vehicle_Types,_and_Routes" target="_blank" rel="noopener">&#x5B98;&#x65B9;&#x6587;&#x6863;</a>&#x3002;</p><h2 id="con.xml">con.xml</h2><p>&#x518D;&#x6765;&#x770B;sumo&#x4EFF;&#x771F;&#x9700;&#x8981;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5B98;&#x65B9;&#x7ED9;&#x7684;&#x8D44;&#x6599;&#x56FE;</p><figure><img src="/posts/59170f05/002y1HhYzy6VA1RWXH036&amp;690.jpeg" alt="SUMO&#x4F7F;&#x7528;&#x6559;&#x7A0B;(SUMO&#x7B14;&#x8BB0;/002y1HhYzy6VA1RWXH036&amp;690.jpeg)"><figcaption>SUMO&#x4F7F;&#x7528;&#x6559;&#x7A0B;(SUMO&#x7B14;&#x8BB0;/002y1HhYzy6VA1RWXH036&amp;690.jpeg)</figcaption></figure><p>type&#x4E5F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x5BF9;edge&#x7684;&#x7C7B;&#x578B;&#x505A;&#x4E2A;&#x4E00;&#x4E2A;&#x5C01;&#x88C5;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#x63CF;&#x8FF0;&#x5C31;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x4E86;&#x3002;&#x81F3;&#x4E8E;<code>con.xml</code>&#xFF0C;&#x5C31;&#x662F;&#x8F66;&#x9053;&#x5408;&#x5E76;&#x7684;&#x89C4;&#x5219;&#x3002;SUMO&#x9ED8;&#x8BA4;&#x662F;&#x5411;&#x53F3;&#x5408;&#x5E76;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5F53;&#x4E09;&#x8F66;&#x9053;&#x53D8;&#x6210;&#x4E8C;&#x8F66;&#x9053;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53F3;&#x5BF9;&#x9F50;&#xFF0C;&#x5DE6;&#x8FB9;&#x4E24;&#x4E2A;&#x8F66;&#x9053;&#x53D8;&#x6210;&#x4E00;&#x4E2A;&#x8F66;&#x9053;&#x3002;&#x5F53;&#x7136;&#x5566;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x9053;&#x8DEF;&#x90FD;&#x662F;&#x53F3;&#x5BF9;&#x9F50;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x6709;&#x4E86;&#x8FD9;&#x4E00;&#x6587;&#x4EF6;&#x7684;&#x4EA7;&#x751F;&#x3002;</p><p>&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#xFF0C;&#x5728;&#x4E0D;&#x52A0;connection&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x8BBE;&#x7F6E;<code>edgeU-0-2</code>&#x8F66;&#x9053;&#x4E3A;3&#xFF0C;&#x5982;&#x56FE;</p><figure><img src="/posts/59170f05/1564045108116.png" alt="1564045108116"><figcaption>1564045108116</figcaption></figure><p>&#x8BBE;&#x7F6E;<code>con.xml</code>&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">connections</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">connection</span> <span class="attr">from</span>=<span class="string">&quot;edgeU-0-2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;edgeU-1-2&quot;</span> <span class="attr">fromLane</span>=<span class="string">&quot;0&quot;</span> <span class="attr">toLane</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">connection</span> <span class="attr">from</span>=<span class="string">&quot;edgeU-0-2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;edgeL-1-1&quot;</span> <span class="attr">fromLane</span>=<span class="string">&quot;1&quot;</span> <span class="attr">toLane</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">connection</span> <span class="attr">from</span>=<span class="string">&quot;edgeU-0-2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;edgeD-0-2&quot;</span> <span class="attr">fromLane</span>=<span class="string">&quot;2&quot;</span> <span class="attr">toLane</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">connections</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x547D;&#x4EE4;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/bin$ ./netconvert --node-files /home/intel/Documents/Maps/map3.node.xml --edge-files /home/intel/Documents/Maps/map3.edg.xml --connection-files /home/intel/Documents/Maps/map3.con.xml -o /home/intel/Documents/Maps/map3.net.xml</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x56FE;&#xFF08;&#x628A;&#x5DE6;&#x4E00;&#x8F66;&#x9053;&#x7531;&#x5DE6;&#x8F6C;+&#x6389;&#x5934;&#x6539;&#x4E3A;&#x53EA;&#x5DE6;&#x8F6C;&#xFF0C;&#x4E2D;&#x95F4;&#x8F66;&#x9053;&#x7531;&#x76F4;&#x884C;&#x6539;&#x4E3A;&#x5DE6;&#x8F6C;&#xFF09;</p><figure><img src="/posts/59170f05/1564045956134.png" alt="1564045956134"><figcaption>1564045956134</figcaption></figure><p>&#x6CE8;&#x610F;&#xFF1A;&#x5728;<code>connection</code>&#x6807;&#x7B7E;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x63D0;&#x5230;&#x7684;&#x884C;&#x9A76;&#x8DEF;&#x5F84;&#x4F1A;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x4E0D;&#x5141;&#x8BB8;&#x7684;&#x3002;</p><h2 id="typ.xml">typ.xml</h2><p>&#x8FD9;&#x4E2A;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;type&#x7C7B;&#x4F9B;edge&#x4F7F;&#x7528;&#x3002;&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">edges</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;1fi&quot;</span> <span class="attr">from</span>=<span class="string">&quot;1&quot;</span> <span class="attr">to</span>=<span class="string">&quot;m1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;b&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;1si&quot;</span> <span class="attr">from</span>=<span class="string">&quot;m1&quot;</span> <span class="attr">to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;1o&quot;</span> <span class="attr">from</span>=<span class="string">&quot;0&quot;</span> <span class="attr">to</span>=<span class="string">&quot;1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;c&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;2fi&quot;</span> <span class="attr">from</span>=<span class="string">&quot;2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;m2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;b&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;2si&quot;</span> <span class="attr">from</span>=<span class="string">&quot;m2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;2o&quot;</span> <span class="attr">from</span>=<span class="string">&quot;0&quot;</span> <span class="attr">to</span>=<span class="string">&quot;2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;c&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;3fi&quot;</span> <span class="attr">from</span>=<span class="string">&quot;3&quot;</span> <span class="attr">to</span>=<span class="string">&quot;m3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;b&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;3si&quot;</span> <span class="attr">from</span>=<span class="string">&quot;m3&quot;</span> <span class="attr">to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;3o&quot;</span> <span class="attr">from</span>=<span class="string">&quot;0&quot;</span> <span class="attr">to</span>=<span class="string">&quot;3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;c&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;4fi&quot;</span> <span class="attr">from</span>=<span class="string">&quot;4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;m4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;b&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;4si&quot;</span> <span class="attr">from</span>=<span class="string">&quot;m4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;4o&quot;</span> <span class="attr">from</span>=<span class="string">&quot;0&quot;</span> <span class="attr">to</span>=<span class="string">&quot;4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;c&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">edges</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">types</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">type</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;3&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;3&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;13.889&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">type</span> <span class="attr">id</span>=<span class="string">&quot;b&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;2&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;11.111&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">type</span> <span class="attr">id</span>=<span class="string">&quot;c&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;1&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;1&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;11.111&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">types</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#xFF0C;&#x751F;&#x6210;&#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netconvert --node-files exa.nod.xml --edge-files exa.edg.xml   --connection-files exa.con.xml --type-files exa.typ.xml   --output-file exa.net.xml</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x6CA1;&#x6709; <code>con.xml</code> &#x6216;&#x8005; <code>typ.xml</code> &#x5219;&#x5FFD;&#x7565;&#x5BF9;&#x5E94;&#x7684;&#x53C2;&#x6570;&#x3002;</p><p>&#x8FD8;&#x6709;&#x53E6;&#x5916;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x76F4;&#x63A5;&#x5199;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">edge-files</span> <span class="attr">value</span>=<span class="string">&quot;exa.edg.xml&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">node-files</span> <span class="attr">value</span>=<span class="string">&quot;exa.nod.xml&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type-files</span> <span class="attr">value</span>=<span class="string">&quot;exa.typ.xml&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">connection-files</span> <span class="attr">value</span>=<span class="string">&quot;exa.con.xml&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">output</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">output-file</span> <span class="attr">value</span>=<span class="string">&quot;exa.net.xml&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">output</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">processing</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">no-turnarounds</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">processing</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x6587;&#x4EF6;&#x7684;&#x540E;&#x7F00;&#x540D;&#x662F;<code>netc.cfg</code></p><p>&#x6267;&#x884C;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netconvert -c xxxx.netc.cfg</span><br></pre></td></tr></table></figure><p>&#x5373;&#x751F;&#x6210;<code>net.xml</code>&#x6587;&#x4EF6;&#x4E86;&#x3002;</p><h2 id="net.xml-1">net.xml</h2><p>&#x4E0A;&#x6587;&#x4E2D;&#x53EA;&#x89C4;&#x5B9A;&#x4E86;&#x8DEF;&#x53E3;&#x548C;&#x9053;&#x8DEF;&#x4FE1;&#x606F;&#xFF0C;&#x6CA1;&#x6709;&#x8BF4;&#x660E;&#x7EA2;&#x7EFF;&#x706F;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x7EA2;&#x7EFF;&#x706F;&#x7684;&#x4FE1;&#x606F;&#x5728;<code>net.xml</code>&#x6587;&#x4EF6;&#x4E2D;&#x3002;</p><p>&#x641C;&#x7D22;<code>tlLogic</code>&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure><img src="/posts/59170f05/1564047725414.png" alt="1564047725414"><figcaption>1564047725414</figcaption></figure><p>tlLogic&#x8282;&#x70B9;&#x4E2D;id&#x5C31;&#x662F;node&#x7684;id&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x5176;&#x5B9E;&#x9002;&#x5408;node&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;&#x3002;</p><p>type&#x5C31;&#x662F;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x662F;&#x52A8;&#x6001;&#x7684;&#x8FD8;&#x662F;&#x9759;&#x6001;&#x7684;&#x3002;&#x52A8;&#x6001;&#x7684;&#x5C31;&#x662F;&#x7528;API&#x63A5;&#x53E3;&#x5229;&#x7528;Phyton&#x7F16;&#x7A0B;&#x5B9E;&#x73B0;&#x3002;&#x8FD9;&#x91CC;&#x9762;&#x7528;&#x9759;&#x6001;&#x7684;&#x3002;programID&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x8FD9;&#x6BB5;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x786C;&#x7F16;&#x7801;&#x7684;id&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5176;&#x5B9E;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x5728;&#x4EFF;&#x771F;&#x8FC7;&#x7A0B;&#x4E2D;&#x662F;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x7684;&#xFF0C;&#x800C;&#x5C31;&#x662F;&#x6839;&#x636E;&#x8FD9;&#x4E2A;programID&#x6765;&#x786E;&#x5B9A;&#x9700;&#x8981;&#x6539;&#x53D8;&#x7684;&#x65B9;&#x5411;&#x3002;offset&#x5C31;&#x662F;&#x8FD9;&#x6BB5;&#x7F16;&#x7801;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x95F4;&#x3002;</p><p>phase&#x5B50;&#x6807;&#x7B7E;&#xFF1A;&#x4E00;&#x4E2A;&#x5341;&#x5B57;&#x8DEF;&#x53E3;&#x7684;&#x7EA2;&#x8DEF;&#x706F;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x4E0D;&#x540C;&#x60C5;&#x51B5;&#x90FD;&#x53EB;&#x505A;&#x4E00;&#x4E2A;&#x76F8;&#x4F4D;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x76F8;&#x4F4D;&#x6309;&#x7167;&#x987A;&#x5E8F;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5468;&#x671F;&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x5BF9;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x7F16;&#x8F91;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x7F16;&#x8F91;&#x5404;&#x4E2A;&#x76F8;&#x4F4D;&#xFF0C;&#x5E76;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x7EC4;&#x5408;&#x548C;&#x65F6;&#x95F4;&#x8BBE;&#x7F6E;&#xFF08;duration&#xFF09;.</p><p>&#x6539;&#x53D8;&#x76F8;&#x4F4D;&#x65F6;&#x957F;&#xFF08;duration&#xFF09;&#x5C31;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x7EA2;&#x7EFF;&#x706F;&#x6539;&#x53D8;&#x7684;&#x901F;&#x7387;&#x3002;&#x6539;&#x53D8;&#x76F8;&#x4F4D;&#x72B6;&#x6001;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x6BCF;&#x4E2A;&#x76F8;&#x4F4D;&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x4E0D;&#x540C;&#x901A;&#x884C;&#x72B6;&#x51B5;&#x3002;</p><h2 id="trips.xml">trips.xml</h2><p>&#x6253;&#x5F00;&#x524D;&#x6587;&#x4E2D;&#x6784;&#x5EFA;&#x7684;trips.xml&#x6587;&#x4EF6;&#xFF1A;</p><figure><img src="/posts/59170f05/1564106619630.png" alt="1564106619630"><figcaption>1564106619630</figcaption></figure><p>&#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x5728;router&#x6587;&#x4EF6;&#x91CC;&#x9762;&#x5B9A;&#x4E49;&#x4E86;&#x8F66;&#x8F86;&#x884C;&#x9A76;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5F88;&#x663E;&#x7136;&#xFF0C;&#x76F8;&#x5F53;&#x8D39;&#x529B;&#x6C14;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x6761;&#x4E00;&#x6761;&#x7684;&#x53BB;&#x89C4;&#x5212;&#xFF0C;&#x4F46;&#x662F;&#x5728;trip&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x8BF4;&#x660E;&#x8D77;&#x59CB;&#x70B9;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;SUMO&#x7684;duarouter.exe&#x5DE5;&#x5177;&#x4F1A;&#x81EA;&#x52A8;&#x8BA1;&#x7B97;&#x6700;&#x4F18;&#x5316;&#x8DEF;&#x5F84;&#xFF0C;&#x5E76;&#x4E14;&#x751F;&#x6210;router&#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5728;&#x6559;&#x7A0B;&#x4E00;&#x4E2D;&#x6211;&#x4EEC;randomTrips&#x751F;&#x6210;&#x7684;&#x662F;trip&#x6587;&#x4EF6;&#x800C;&#x4E0D;&#x76F4;&#x63A5;&#x662F;router&#x6587;&#x4EF6;&#x7684;&#x539F;&#x56E0;&#x3002;</p><h1 id="&#x6A21;&#x62DF;&#x89C4;&#x5219;&#x5206;&#x6790;">&#x6A21;&#x62DF;&#x89C4;&#x5219;&#x5206;&#x6790;</h1><p>SUMO&#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x79CD;&#x7EAF;&#x7CB9;&#x7684;&#x5FAE;&#x89C2;&#xFF08;microscopic&#xFF09;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x3002;&#x6BCF;&#x8F86;&#x8F66;&#x7ED9;&#x5B9A;&#x6807;&#x8BC6;&#x7B26;&#xFF08;&#x540D;&#x79F0;&#xFF09;&#xFF0C;&#x51FA;&#x53D1;&#x65F6;&#x95F4;&#x548C;&#x8F66;&#x8F86;&#x5728;&#x9053;&#x8DEF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x8DEF;&#x7EBF;&#x3002;&#x800C;&#x4E00;&#x4E2A;&#x5B8F;&#x89C2;&#xFF08;macroscopic&#xFF09;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x5668;&#x4F1A;&#x628A;&#x6574;&#x4E2A;&#x4EA4;&#x901A;&#x6D41;&#x770B;&#x6210;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x3002;SUMO&#x8FD8;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x51FA;&#x53D1;&#x548C;&#x5230;&#x8FBE;&#x5C5E;&#x6027;&#xFF0C;&#x4F8B;&#x5982;&#x8F66;&#x9053;&#xFF0C;&#x901F;&#x5EA6;&#x6216;&#x4F4D;&#x7F6E;&#x3002;&#x6BCF;&#x8F86;&#x8F66;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#xFF0C;&#x8BE5;&#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x8F66;&#x8F86;&#x7684;&#x7269;&#x7406;&#x7279;&#x6027;&#x548C;&#x8FD0;&#x52A8;&#x6A21;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x3002;</p><p>&#x6A21;&#x62DF;&#x662F;&#x65F6;&#x95F4;&#x79BB;&#x6563;&#x548C;&#x7A7A;&#x95F4;&#x8FDE;&#x7EED;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x5185;&#x90E8;&#x63CF;&#x8FF0;&#x6BCF;&#x4E2A;&#x8F66;&#x8F86;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5373;&#x6240;&#x5728;&#x7684;&#x8F66;&#x9053;&#x548C;&#x4ECE;&#x8D77;&#x70B9;&#x5F00;&#x59CB;&#x7684;&#x8DDD;&#x79BB;&#x3002;&#x5F53;&#x8F66;&#x8F86;&#x79FB;&#x52A8;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x8DDF;&#x8F66;&#x6A21;&#x578B;&#xFF08;car-following model&#xFF09;&#x8BA1;&#x7B97;&#x8F66;&#x901F;&#x3002;&#x9664;&#x4E86;&#x4F20;&#x7EDF;&#x7684;&#x4EA4;&#x901A;&#x63AA;&#x65BD;&#x5916;&#xFF0C;SUMO&#x8FD8;&#x6269;&#x5C55;&#x52A0;&#x4E0A;&#x4E86;&#x566A;&#x58F0;&#x6392;&#x653E;&#x548C;&#x6C61;&#x67D3;&#x7269;&#x6392;&#x653E;/&#x71C3;&#x6599;&#x6D88;&#x8017;&#x6A21;&#x578B;&#x3002;</p><p>SUMO&#x4EA4;&#x901A;&#x5EFA;&#x6A21;&#xFF08;Traffic Modeler&#xFF09;&#x5B9A;&#x4E49;&#x7ED9;&#x5B9A;&#x533A;&#x57DF;&#x7684;&#x4EA4;&#x901A;&#x7FA4;&#x4F53;&#x603B;&#x6570;&#x5E76;&#x8BA1;&#x7B97;&#x8BE5;&#x7FA4;&#x4F53;&#x7684;&#x79FB;&#x52A8;&#x6027;&#x613F;&#x671B;&#xFF0C;&#x4F5C;&#x4E3A;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x5668;&#x7684;&#x8F93;&#x5165;&#x3002;</p><p>&#x6A21;&#x5757;SUMO-ROUTER&#x8BFB;&#x53D6;&#x5C06;&#x8981;&#x6A21;&#x62DF;&#x7684;&#x4E00;&#x7EC4;&#x865A;&#x62DF;&#x7FA4;&#x4F53;&#x7684;&#x51FA;&#x53D1;&#x65F6;&#x95F4;&#xFF0C;&#x8D77;&#x70B9;&#x548C;&#x76EE;&#x7684;&#x5730;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;Dijkstra&#x8DEF;&#x7531;&#x7B97;&#x6CD5;&#x8BA1;&#x7B97;&#x5728;&#x4EA4;&#x901A;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x8DEF;&#x7EBF;&#x3002;</p><p>SUMO&#x7684;&#x8F66;-&#x9A7E;&#x9A76;&#x5458;&#x6A21;&#x578B;&#xFF08;Car-Driver Model&#xFF09;&#x91C7;&#x7528;Gipps&#x6A21;&#x578B;&#x7684;&#x6269;&#x5C55;&#x578B;&#x3002;&#x5B83;&#x80FD;&#x591F;&#x663E;&#x793A;&#x4EA4;&#x901A;&#x7684;&#x4E3B;&#x8981;&#x7279;&#x5F81;&#xFF0C;&#x5982;&#x81EA;&#x7531;&#x6D41;&#x548C;&#x62E5;&#x6324;&#x6D41;&#x3002;&#x5728;&#x6BCF;&#x4E2A;&#x65F6;&#x95F4;&#x6B65;&#x9AA4;&#xFF0C;&#x8F66;&#x8F86;&#x7684;&#x901F;&#x5EA6;&#x9002;&#x5E94;&#x4E8E;&#x524D;&#x8F66;&#x7684;&#x901F;&#x5EA6;&#xFF0C;&#x907F;&#x514D;&#x5728;&#x968F;&#x540E;&#x7684;&#x6B65;&#x9AA4;&#x4E2D;&#x4EA7;&#x751F;&#x78B0;&#x649E;&#x3002;&#x8BE5;&#x901F;&#x5EA6;&#x79F0;&#x4E3A;&#x5B89;&#x5168;&#x901F;&#x5EA6;&#xFF0C;&#x8BA1;&#x7B97;</p><figure><img src="/posts/59170f05/v2-298450474523ab1e8fe105bd09d71ee4_hd.jpg" alt="img"><figcaption>img</figcaption></figure><p>&#x5176;&#x4E2D;vl(t)&#x662F;&#x524D;&#x8F66;&#x901F;&#x5EA6;&#xFF0C;g(t)&#x662F;&#x524D;&#x8F66;&#x7684;&#x95F4;&#x8DDD;&#xFF0C;t&#x662F;&#x53F8;&#x673A;&#x53CD;&#x5E94;&#x65F6;&#x95F4;&#xFF08;&#x4E00;&#x822C;1&#x79D2;&#xFF09;&#xFF0C;&#x800C;b&#x662F;&#x51CF;&#x901F;&#x5EA6;&#x51FD;&#x6570;&#x3002;</p><p>&#x8F66;&#x8F86;&#x7684;&#x201C;&#x5E0C;&#x671B;&#x201D;&#x6216;&#x201C;&#x671F;&#x671B;&#x201D;&#x901F;&#x5EA6;&#x53D6;&#x4E0B;&#x9762;&#x4E09;&#x4E2A;&#x4E2D;&#x7684;&#x6700;&#x5C0F;&#x503C;&#xFF1A;&#x53EF;&#x80FD;&#x7684;&#x6700;&#x5927;&#x901F;&#x5EA6;&#x3001;&#x8F66;&#x901F;&#x52A0;&#x4E0A;&#x6700;&#x5927;&#x52A0;&#x901F;&#x5EA6;&#xFF0C;&#x5982;&#x4E0A;&#x8BA1;&#x7B97;&#x7684;&#x5B89;&#x5168;&#x901F;&#x5EA6;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5176;&#x671F;&#x671B;&#x8F66;&#x901F;&#x4E3A;&#xFF1A;</p><figure><img src="/posts/59170f05/v2-43536905950a01208fda418a0909a753_hd.png" alt="img"><figcaption>img</figcaption></figure><p>&#x5176;&#x4E2D;a&#x662F;&#x6700;&#x5927;&#x52A0;&#x901F;&#x5EA6;&#x3002;</p><p>&#x5982;&#x679C;&#x6A21;&#x62DF;&#x4E2D;&#x8BA4;&#x4E3A;&#xFF0C;&#x9A7E;&#x9A76;&#x5458;&#x4F1A;&#x72AF;&#x9519;&#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x9002;&#x5E94;&#x671F;&#x671B;&#x7684;&#x901F;&#x5EA6;&#xFF0C;&#x8FD9;&#x6837;&#x5B9E;&#x9645;&#x901F;&#x5EA6;&#x5C31;&#x51CF;&#x53BB;&#x968F;&#x673A;&#x7684;&#x201C;&#x4EBA;&#x4E3A;&#x9519;&#x8BEF;&#x201D;&#xFF1A;</p><figure><img src="/posts/59170f05/v2-e3f933869dbeb54f2c73efdea61acb22_hd.png" alt="img"><figcaption>img</figcaption></figure><p>&#x5176;&#x4E2D;e&#x662F;&#x6270;&#x52A8;&#x7CFB;&#x6570;&#x3002;&#x7531;&#x4E8E;&#x8F66;&#x8F86;&#x4E0D;&#x5F97;&#x5411;&#x540E;&#x884C;&#x9A76;&#xFF0C;&#x6240;&#x4EE5;&#x8F66;&#x8F86;&#x5F53;&#x524D;&#x901F;&#x5EA6;&#x662F;&#x8BA1;&#x7B97;&#x7684;&#x901F;&#x5EA6;&#x548C;&#x96F6;&#x7684;&#x6700;&#x5927;&#x503C;&#x3002;</p><p>&#x8BE5;&#x6A21;&#x578B;&#x662F;&#x65E0;&#x78B0;&#x649E;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6A21;&#x62DF;&#x4E2D;&#x4E0D;&#x5141;&#x8BB8;&#x6A21;&#x578B;&#x7684;&#x4E0D;&#x5B8C;&#x6574;&#x9020;&#x6210;&#x7684;&#x53D8;&#x5F02;&#xFF08;artifact&#xFF09;&#x51FA;&#x73B0;&#x3002;</p><p>SUMO&#x63D0;&#x4F9B;V2X&#x7684;&#x53EF;&#x80FD;&#xFF0C;&#x53EF;&#x4EE5;&#x8026;&#x5408;&#x5916;&#x90E8;&#x901A;&#x4FE1;&#x4EFF;&#x771F;&#x5668;&#xFF0C;&#x5982;ns2&#x6216;ns3 &#x3002;</p><p>SUMO&#x7ED9;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x4EA4;&#x901A;&#x9700;&#x6C42;&#x6216;&#x4E00;&#x7EC4;&#x8F66;&#x8F86;&#x4F1A;&#x5206;&#x914D;&#x9002;&#x5F53;&#x8DEF;&#x7EBF;&#x3002;&#x5176;&#x4E3B;&#x8981;&#x4EFB;&#x52A1;&#x662F;&#x5BF9;&#x4EA4;&#x901A;&#x53C2;&#x4E0E;&#x8005;&#x9009;&#x62E9;&#x8DEF;&#x7EBF;&#xFF08;&#x901A;&#x8FC7;&#x7ED9;&#x5B9A;&#x9053;&#x8DEF;&#x7F51;&#x7EDC;&#x7684;&#x8DEF;&#x5F84;&#xFF09;&#x5230;&#x76EE;&#x7684;&#x5730;&#x7684;&#x8FC7;&#x7A0B;&#x5EFA;&#x6A21;&#x3002;&#x7531;&#x4E8E;&#x901A;&#x8FC7;&#x8DEF;&#x7EBF;&#x56FE;&#x8FB9;&#x7F18;&#x7684;&#x65F6;&#x95F4;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x53D6;&#x51B3;&#x4E8E;&#x4F7F;&#x7528;&#x6B64;&#x8FB9;&#x7F18;&#x7684;&#x4EA4;&#x901A;&#x53C2;&#x4E0E;&#x8005;&#x6570;&#x91CF;&#xFF0C;&#x56E0;&#x6B64;&#x8DEF;&#x7EBF;&#x8BA1;&#x7B97;&#x662F;&#x5B9E;&#x73B0;&#x5927;&#x89C4;&#x6A21;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x7684;&#x5173;&#x952E;&#x6B65;&#x9AA4;&#x3002;&#x5728;SUMO&#xFF0C;&#x8FD9;&#x88AB;&#x53EB;&#x505A;&#x201C;&#x7528;&#x6237;&#x5206;&#x914D;&#xFF08;user assignment&#xFF09;&#x201D;&#x6216;&#x201C;&#x4EA4;&#x901A;&#x5206;&#x914D;&#xFF08;traffic assignment&#xFF09;&#x201D;&#x3002;</p><h1 id="&#x4EA4;&#x901A;&#x63A7;&#x5236;&#x63A5;&#x53E3;traci-&#x793A;&#x4F8B;">&#x4EA4;&#x901A;&#x63A7;&#x5236;&#x63A5;&#x53E3;TraCI-&#x793A;&#x4F8B;</h1><h2 id="&#x6982;&#x8FF0;">&#x6982;&#x8FF0;</h2><p>TraCI&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x63A7;&#x5236;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x57FA;&#x4E8E;Client/Server&#x6A21;&#x578B;&#xFF0C;SUMO&#x4F5C;&#x4E3A;Server &#xFF0C;&#x5916;&#x90E8;&#x811A;&#x672C;&#x4F5C;&#x4E3A;Client&#x3002;</p><p>&#x4EE5;<code>TraCIPedCrossing</code>&#x4E3A;&#x4F8B;&#xFF0C;&#x5206;&#x6790;&#x4EE3;&#x7801;&#x3002;</p><h2 id="&#x8FD0;&#x884C;-1">&#x8FD0;&#x884C;</h2><p>demo&#x4F4D;&#x7F6E;&#x5728;<code>sumo/tests/complex/tutorial/traci_pedestrian_crossing/</code>&#x4E0B;&#x3002;</p><p>&#x5728;&#x8FD0;&#x884C;&#x4E4B;&#x524D;&#x9700;&#x8981;&#x628A;&#x8BBE;&#x7F6E;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export SUMO_HOME=/usr/local/share/sumo/</span><br></pre></td></tr></table></figure><p>&#x8FD0;&#x884C;&#x8BE5;&#x76EE;&#x5F55;&#x4E0B;&#x7684;<code>./runner.py</code>&#x5373;&#x53EF;&#xFF08;&#x9ED8;&#x8BA4;&#xFF09;&#x770B;&#x5230;sumo-gui&#xFF0C;&#x70B9;&#x51FB;&#x5C0F;&#x4E09;&#x89D2;&#x5373;&#x53EF;&#x64AD;&#x653E;&#x3002;</p><figure><img src="/posts/59170f05/1564133658760.png" alt="1564133658760"><figcaption>1564133658760</figcaption></figure><h2 id="&#x4FEE;&#x6539;">&#x4FEE;&#x6539;</h2><p><strong>&#x5728;&#x4E4B;&#x524D;&#x8FD0;&#x884C;&#x8FC7;&#x4E00;&#x904D;&#x7684;&#x57FA;&#x7840;&#x4E0A;</strong></p><p>&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x6548;&#x679C;&#x4E0D;&#x592A;&#x660E;&#x663E;&#xFF0C;&#x770B;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x968F;&#x673A;&#x751F;&#x6210;&#x7684;&#x884C;&#x4EBA;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x5747;&#x5300;&#x7684;&#x3002;</p><p>&#x4FEE;&#x6539;<code>traci_pedestrian_crossing/data</code>&#x4E0B;&#x7684;<code>run.sumocfg</code>&#x6587;&#x4EF6;&#xFF0C;&#x628A;<code>input</code>&#x6807;&#x7B7E;&#x4E0B;&#x7684;<code>route-files</code>&#x6539;&#x4E3A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">net-file</span> <span class="attr">value</span>=<span class="string">&quot;../pedcrossing.net.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route-files</span> <span class="attr">value</span>=<span class="string">&quot;pedcrossing.rou.xml,../pedestrians2.trip.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">additional-files</span> <span class="attr">value</span>=<span class="string">&quot;pedcrossing.tll.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5373;&#x7531;&#x9ED8;&#x8BA4;&#x7684;<code>pedestrians.trip.xml</code>&#x6539;&#x4E3A;<code>pedestrians2.trip.xml</code>&#x3002;</p><p>&#x628A;&#x4E4B;&#x524D;&#x968F;&#x673A;&#x751F;&#x6210;&#x7684;<code>pedestrians.trip.xml</code>&#x4FEE;&#x6539;&#x4E00;&#x4E0B;&#xFF0C;&#x5982;&#x4E0B;&#x662F;&#x6211;&#x6539;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x628A;300&#xFF5E;600&#x4E4B;&#x95F4;&#x7A7A;&#x51FA;&#x6765;&#x4E86;&#x3002;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">......    </span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">&quot;ped8&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;244.00&quot;</span> <span class="attr">departPos</span>=<span class="string">&quot;random&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">walk</span> <span class="attr">from</span>=<span class="string">&quot;NC&quot;</span> <span class="attr">to</span>=<span class="string">&quot;CS&quot;</span> <span class="attr">arrivalPos</span>=<span class="string">&quot;random&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">&quot;ped9&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;270.00&quot;</span> <span class="attr">departPos</span>=<span class="string">&quot;random&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">walk</span> <span class="attr">from</span>=<span class="string">&quot;NC&quot;</span> <span class="attr">to</span>=<span class="string">&quot;CS&quot;</span> <span class="attr">arrivalPos</span>=<span class="string">&quot;random&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">&quot;ped10&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;633.00&quot;</span> <span class="attr">departPos</span>=<span class="string">&quot;random&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">walk</span> <span class="attr">from</span>=<span class="string">&quot;CS&quot;</span> <span class="attr">to</span>=<span class="string">&quot;NC&quot;</span> <span class="attr">arrivalPos</span>=<span class="string">&quot;random&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">&quot;ped11&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;634.00&quot;</span> <span class="attr">departPos</span>=<span class="string">&quot;random&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">walk</span> <span class="attr">from</span>=<span class="string">&quot;CS&quot;</span> <span class="attr">to</span>=<span class="string">&quot;NC&quot;</span> <span class="attr">arrivalPos</span>=<span class="string">&quot;random&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6548;&#x679C;&#x5C31;&#x5F88;&#x660E;&#x663E;&#x4E86;&#xFF0C;300&#xFF5E;600&#x4E4B;&#x95F4;&#x6CA1;&#x6709;&#x884C;&#x4EBA;&#xFF0C;&#x7EA2;&#x7EFF;&#x706F;&#x4F1A;&#x4FDD;&#x6301;&#x4E00;&#x76F4;&#x90FD;&#x662F;&#x7EFF;&#x706F;&#x3002;</p><figure><img src="/posts/59170f05/1564133692244.png" alt="1564133692244"><figcaption>1564133692244</figcaption></figure><h2 id="&#x5206;&#x6790;">&#x5206;&#x6790;</h2><p>&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x903B;&#x8F91;&#x6587;&#x4EF6;&#x5728;<code>/dadapedcrossing.tll.xml</code>&#x6587;&#x4EF6;&#x4E2D;&#x3002;&#x5982;&#x4E0B;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tlLogic</span> <span class="attr">id</span>=<span class="string">&quot;C&quot;</span> <span class="attr">type</span>=<span class="string">&quot;static&quot;</span> <span class="attr">programID</span>=<span class="string">&quot;custom&quot;</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">phase</span> <span class="attr">duration</span>=<span class="string">&quot;100000&quot;</span> <span class="attr">state</span>=<span class="string">&quot;GGGGr&quot;</span>/&gt;</span> <span class="comment">&lt;!-- do not switch vehicle phase automatically --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">phase</span> <span class="attr">duration</span>=<span class="string">&quot;4&quot;</span> <span class="attr">state</span>=<span class="string">&quot;yyyyr&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">phase</span> <span class="attr">duration</span>=<span class="string">&quot;10&quot;</span> <span class="attr">state</span>=<span class="string">&quot;rrrrG&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">phase</span> <span class="attr">duration</span>=<span class="string">&quot;10&quot;</span> <span class="attr">state</span>=<span class="string">&quot;rrrrr&quot;</span>/&gt;</span> <span class="comment">&lt;!-- give pedestrians time to clear the intersection --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tlLogic</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6709;<a href="https://blog.csdn.net/davidhopper/article/details/81871872" target="_blank" rel="noopener">&#x535A;&#x4E3B;</a>&#x5206;&#x6790;&#x4E86;&#x4EE3;&#x7801;&#x7EA2;&#x7EFF;&#x706F;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x4E0D;&#x8FC7;&#x6211;&#x8BA4;&#x4E3A;&#x4ED6;&#x5206;&#x6790;&#x7684;&#x662F;&#x9519;&#x7684;&#x3002;&#x6211;&#x7684;&#x5206;&#x6790;&#x5982;&#x4E0B;&#xFF1A;</p><ul><li>&#x9ED8;&#x8BA4;&#x72B6;&#x6001;&#x662F;&quot;GGGGr&quot;&#xFF08;phase = 0&#xFF09;&#x8868;&#x793A;&#x6A2A;&#x5411;&#x662F;&#x7EFF;&#x706F;&#xFF0C;&#x7EB5;&#x5411;&#xFF08;&#x884C;&#x4EBA;&#x6A2A;&#x7A7F;&#x9A6C;&#x8DEF;&#x65B9;&#x5411;&#xFF09;&#x662F;&#x7EA2;&#x706F;&#x3002;&#x7EFF;&#x706F;&#x6301;&#x7EED;&#x65F6;&#x95F4;&#x662F;100000&#x65F6;&#x95F4;&#x7247;&#x3002;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#x8868;&#x793A;&#x8981;&#x51CF;&#x901F;&#x3002;</li><li>&#x72B6;&#x6001;&quot;yyyyr&quot;&#xFF08;phase = 1&#xFF09;&#x8868;&#x793A;&#x6A2A;&#x5411;&#x662F;&#x9EC4;&#x706F;&#xFF0C;&#x7EB5;&#x5411;&#x662F;&#x7EA2;&#x706F;&#xFF0C;&#x6B64;&#x72B6;&#x6001;&#x6301;&#x7EED;&#x65F6;&#x95F4;4&#x65F6;&#x95F4;&#x7247;&#xFF1B;</li><li>&#x72B6;&#x6001;&quot;rrrrG&quot;&#xFF08;phase = 2&#xFF09;&#x8868;&#x793A;&#x6A2A;&#x5411;&#x662F;&#x7EA2;&#x706F;&#xFF0C;&#x7EB5;&#x5411;&#x662F;&#x7EFF;&#x706F;&#xFF0C;&#x6B64;&#x72B6;&#x6001;&#x6301;&#x7EED;&#x65F6;&#x95F4;10&#x65F6;&#x95F4;&#x7247;&#xFF1B;</li><li>&#x72B6;&#x6001;&quot;rrrrr&quot;&#xFF08;phase = 3&#xFF09;&#x8868;&#x793A;&#x6A2A;&#x7AD6;&#x90FD;&#x662F;&#x7EA2;&#x706F;&#xFF0C;&#x6B64;&#x72B6;&#x6001;&#x6301;&#x7EED;10&#x65F6;&#x95F4;&#x7247;&#x3002;</li></ul><p>&#x4E0A;&#x8FF0;&#x72B6;&#x6001;&#x9664;&#x4E86;phase = 0&#x5207;&#x6362;&#x5230;phase = 1&#x9700;&#x8981;&#x4EBA;&#x5DE5;&#x6307;&#x5B9A;&#x5916;&#xFF0C;&#x5176;&#x4F59;&#x60C5;&#x51B5;&#x90FD;&#x4F1A;&#x5728;&#x6BCF;&#x4E2A;&#x72B6;&#x6001;&#x6307;&#x5B9A;&#x7684;&#x6301;&#x7EED;&#x65F6;&#x95F4;&#x540E;&#x81EA;&#x52A8;&#x5207;&#x6362;&#x5230;&#x540E;&#x7EED;&#x72B6;&#x6001;&#x3002;</p><p><code>runner.py</code>&#x7684;&#x4EE3;&#x7801;&#x5206;&#x6790;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x4E3A;&#x517C;&#x5BB9;python 2.7&#x6240;&#x505A;&#x7684;&#x63AA;&#x65BD;</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5BFC;&#x5165;&#x76F8;&#x5173;&#x5305;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> optparse</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x672C;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55;</span></span><br><span class="line">THISDIR = os.path.dirname(__file__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x9700;&#x8981;&#x4ECE;$SUMO_HOME/tools&#x76EE;&#x5F55;&#x5BFC;&#x5165;&#x76F8;&#x5173;&#x5305;&#xFF0C;&#x4E3A;&#x6B64;&#x9700;&#x8981;&#x5148;&#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;SUMO_HOME&#xFF0C;</span></span><br><span class="line"><span class="comment"># &#x82E5;&#x672A;&#x8BBE;&#x7F6E;&#xFF0C;&#x8BF7;&#x8BBE;&#x7F6E;&#x4E4B;&#x3002;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># tutorial in tests</span></span><br><span class="line">    sys.path.append(os.path.join(THISDIR, <span class="string">&apos;..&apos;</span>, <span class="string">&apos;..&apos;</span>, <span class="string">&apos;..&apos;</span>, <span class="string">&apos;..&apos;</span>, <span class="string">&quot;tools&quot;</span>))</span><br><span class="line">    <span class="comment"># tutorial in docs</span></span><br><span class="line">    sys.path.append(os.path.join(os.environ.get(<span class="string">&quot;SUMO_HOME&quot;</span>, os.path.join(</span><br><span class="line">        THISDIR, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;..&quot;</span>)), <span class="string">&quot;tools&quot;</span>))  </span><br><span class="line">    <span class="keyword">import</span> traci</span><br><span class="line">    <span class="keyword">from</span> sumolib <span class="keyword">import</span> checkBinary  <span class="comment"># noqa</span></span><br><span class="line">    <span class="keyword">import</span> randomTrips</span><br><span class="line"><span class="keyword">except</span> ImportError:</span><br><span class="line">    sys.exit(</span><br><span class="line">        <span class="string">&quot;please declare environment variable &apos;SUMO_HOME&apos; as the root directory of your sumo installation (it should contain folders &apos;bin&apos;, &apos;tools&apos; and &apos;docs&apos;)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8F66;&#x8F86;&#x7684;&#x6700;&#x77ED;&#x7EFF;&#x706F;&#x65F6;&#x95F4;</span></span><br><span class="line">MIN_GREEN_TIME = <span class="number">15</span></span><br><span class="line"><span class="comment"># &#x7EA2;&#x7EFF;&#x706F;&#x4EFF;&#x771F;&#x8BA1;&#x5212;&#x7684;&#x521D;&#x59CB;&#x72B6;&#x6001;&#xFF0C;&#x53C2;&#x89C1;&apos;pedcrossing.tll.xml&apos;    </span></span><br><span class="line">VEHICLE_GREEN_PHASE = <span class="number">0</span></span><br><span class="line"><span class="comment"># &#x7EA2;&#x7EFF;&#x706F;&#x7684;ID&#xFF08;&#x4EC5;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#xFF09;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x5B83;&#x4E0E;&#x53D7;&#x63A7;&#x4EA4;&#x53C9;&#x8DEF;&#x53E3;&#x7684;ID&#x76F8;&#x540C;&#x3002;</span></span><br><span class="line">TLSID = <span class="string">&apos;C&apos;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x53D7;&#x63A7;&#x4EA4;&#x53C9;&#x53E3;&#x7684;&#x4EBA;&#x884C;&#x6A2A;&#x9053;&#x8FB9;&#x754C;</span></span><br><span class="line">WALKINGAREAS = [<span class="string">&apos;:C_w0&apos;</span>, <span class="string">&apos;:C_w1&apos;</span>]</span><br><span class="line">CROSSINGS = [<span class="string">&apos;:C_c0&apos;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># TraCI&#x63A7;&#x5236;&#x4E3B;&#x5FAA;&#x73AF;&#x8FC7;&#x7A0B;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span>   </span><br><span class="line">    <span class="comment"># &#x8BB0;&#x5F55;&#x5141;&#x8BB8;&#x8F66;&#x8F86;&#x901A;&#x884C;&#x7684;&#x7EFF;&#x706F;&#x6301;&#x7EED;&#x65F6;&#x95F4;    </span></span><br><span class="line">    greenTimeSoFar = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x884C;&#x4EBA;&#x8FC7;&#x9A6C;&#x8DEF;&#x6309;&#x94AE;&#x662F;&#x5426;&#x6309;&#x4E0B;</span></span><br><span class="line">    activeRequest = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x4E3B;&#x5FAA;&#x73AF;&#x3002;&#x5728;&#x6BCF;&#x4E2A;&#x4EFF;&#x771F;&#x6B65;&#x9AA4;&#x4E2D;&#x6267;&#x884C;&#x67D0;&#x4E9B;&#x64CD;&#x4F5C;&#xFF0C;&#x76F4;&#x5230;&#x573A;&#x666F;&#x4E2D;&#x6CA1;&#x6709;&#x65B0;&#x7684;&#x8F66;&#x8F86;&#x52A0;&#x5165;&#x6216;&#x73B0;&#x6709;&#x8F66;&#x8F86;&#x884C;&#x9A76;</span></span><br><span class="line">    <span class="keyword">while</span> traci.simulation.getMinExpectedNumber() &gt; <span class="number">0</span>:</span><br><span class="line">        traci.simulationStep()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5982;&#x679C;&#x8F66;&#x8F86;&#x7684;&#x7EFF;&#x706F;&#x65F6;&#x95F4;&#x8D85;&#x8FC7;&#x6700;&#x77ED;&#x7EFF;&#x706F;&#x65F6;&#x95F4;&#xFF0C;&#x5219;&#x786E;&#x5B9A;&#x662F;&#x5426;&#x6709;&#x7B49;&#x5F85;&#x8FC7;&#x9A6C;&#x8DEF;&#x7684;&#x884C;&#x4EBA;&#xFF0C;&#x5E76;&#x5207;&#x6362;&#x4FE1;&#x53F7;&#x706F;&#x72B6;&#x6001;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> activeRequest:</span><br><span class="line">            activeRequest = checkWaitingPersons()</span><br><span class="line">        <span class="keyword">if</span> traci.trafficlight.getPhase(TLSID) == VEHICLE_GREEN_PHASE:</span><br><span class="line">            greenTimeSoFar += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> greenTimeSoFar &gt; MIN_GREEN_TIME:</span><br><span class="line"></span><br><span class="line">                <span class="comment"># &#x68C0;&#x6D4B;&#x884C;&#x4EBA;&#x662F;&#x5426;&#x6309;&#x4E0B;&#x4E86;&#x8FC7;&#x9A6C;&#x8DEF;&#x6309;&#x94AE;</span></span><br><span class="line">                <span class="keyword">if</span> activeRequest:</span><br><span class="line">                    <span class="comment"># &#x4FE1;&#x53F7;&#x706F;&#x5207;&#x6362;&#x81F3;&#x53E6;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#xFF0C;&#x5373;&#x975E;&#x7EFF;&#x706F;&#x72B6;&#x6001;</span></span><br><span class="line">                    <span class="comment"># VEHICLE_GREEN_PHASE + 1&#x8868;&#x660E;&#x5207;&#x6362;&#x5230;&#x9EC4;&#x706F;&#x8F6C;&#x7EA2;&#x706F;&#x72B6;&#x6001;</span></span><br><span class="line">                    traci.trafficlight.setPhase(</span><br><span class="line">                        TLSID, VEHICLE_GREEN_PHASE + <span class="number">1</span>)</span><br><span class="line">                    <span class="comment"># &#x590D;&#x4F4D;&#x76F8;&#x5173;&#x53D8;&#x91CF;</span></span><br><span class="line">                    activeRequest = <span class="keyword">False</span></span><br><span class="line">                    greenTimeSoFar = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    traci.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x68C0;&#x6D4B;&#x662F;&#x5426;&#x6709;&#x884C;&#x4EBA;&#x9700;&#x8981;&#x8FC7;&#x9A6C;&#x8DEF;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkWaitingPersons</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x68C0;&#x6D4B;&#x8DEF;&#x53E3;&#x4E24;&#x4FA7;&#x7684;&#x884C;&#x4EBA;</span></span><br><span class="line">    <span class="keyword">for</span> edge <span class="keyword">in</span> WALKINGAREAS:</span><br><span class="line">        peds = traci.edge.getLastStepPersonIDs(edge)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x68C0;&#x6D4B;&#x662F;&#x5426;&#x6709;&#x4EBA;&#x5728;&#x8DEF;&#x53E3;&#x7B49;&#x5F85;</span></span><br><span class="line">        <span class="comment"># &#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x884C;&#x4EBA;&#x5728;&#x7B49;&#x5F85;1&#x79D2;&#x540E;&#xFF0C;&#x624D;&#x6309;&#x4E0B;&#x8FC7;&#x9A6C;&#x8DEF;&#x6309;&#x94AE;</span></span><br><span class="line">        <span class="keyword">for</span> ped <span class="keyword">in</span> peds:</span><br><span class="line">            <span class="keyword">if</span> (traci.person.getWaitingTime(ped) == <span class="number">1</span> <span class="keyword">and</span></span><br><span class="line">                    traci.person.getNextEdge(ped) <span class="keyword">in</span> CROSSINGS):</span><br><span class="line">                print(<span class="string">&quot;%s pushes the button&quot;</span> % ped)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x672C;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x53CA;&#x4ECE;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x89E3;&#x6790;&#x5F97;&#x5230;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_options</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    optParser = optparse.OptionParser()</span><br><span class="line">    <span class="comment"># &#x589E;&#x52A0;&#x4E00;&#x4E2A;&quot;--nogui&quot;&#x9009;&#x9879;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;False&#xFF0C;&#x5373;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x56FE;&#x5F62;&#x5316;&#x754C;&#x9762;</span></span><br><span class="line">    optParser.add_option(<span class="string">&quot;--nogui&quot;</span>, action=<span class="string">&quot;store_true&quot;</span>,</span><br><span class="line">                         default=<span class="keyword">False</span>, help=<span class="string">&quot;run the commandline version of sumo&quot;</span>)</span><br><span class="line">    options, args = optParser.parse_args()</span><br><span class="line">    <span class="keyword">return</span> options</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x672C;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x4E3B;&#x5165;&#x53E3;</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x83B7;&#x53D6;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line">    options = get_options()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x786E;&#x5B9A;&#x662F;&#x8C03;&#x7528;sumo&#x8FD8;&#x662F;sumo-gui</span></span><br><span class="line">    <span class="keyword">if</span> options.nogui:</span><br><span class="line">        sumoBinary = checkBinary(<span class="string">&apos;sumo&apos;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sumoBinary = checkBinary(<span class="string">&apos;sumo-gui&apos;</span>)</span><br><span class="line"></span><br><span class="line">    net = <span class="string">&apos;pedcrossing.net.xml&apos;</span></span><br><span class="line">    <span class="comment"># &#x501F;&#x52A9;&#x5DE5;&#x5177;&#x8F6F;&#x4EF6;netconvert&#xFF0C;&#x4ECE;&#x666E;&#x901A;&#x7684;xml&#x8F93;&#x5165;&#x6784;&#x5EFA;&#x591A;&#x6A21;&#x6001;&#x7F51;&#x7EDC;</span></span><br><span class="line">    subprocess.call([checkBinary(<span class="string">&apos;netconvert&apos;</span>),</span><br><span class="line">                     <span class="string">&apos;-c&apos;</span>, os.path.join(<span class="string">&apos;data&apos;</span>, <span class="string">&apos;pedcrossing.netccfg&apos;</span>),</span><br><span class="line">                     <span class="string">&apos;--output-file&apos;</span>, net],</span><br><span class="line">                    stdout=sys.stdout, stderr=sys.stderr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x968F;&#x673A;&#x751F;&#x6210;&#x4EFF;&#x771F;&#x4E2D;&#x7684;&#x884C;&#x4EBA;</span></span><br><span class="line">    randomTrips.main(randomTrips.get_options([</span><br><span class="line">        <span class="string">&apos;--net-file&apos;</span>, net,</span><br><span class="line">        <span class="string">&apos;--output-trip-file&apos;</span>, <span class="string">&apos;pedestrians.trip.xml&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--seed&apos;</span>, <span class="string">&apos;42&apos;</span>,  <span class="comment"># make runs reproducible</span></span><br><span class="line">        <span class="string">&apos;--pedestrians&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--prefix&apos;</span>, <span class="string">&apos;ped&apos;</span>,</span><br><span class="line">        <span class="comment"># prevent trips that start and end on the same edge</span></span><br><span class="line">        <span class="string">&apos;--min-distance&apos;</span>, <span class="string">&apos;1&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--trip-attributes&apos;</span>, <span class="string">&apos;departPos=&quot;random&quot; arrivalPos=&quot;random&quot;&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--binomial&apos;</span>, <span class="string">&apos;4&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--period&apos;</span>, <span class="string">&apos;35&apos;</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x8FD9;&#x662F;&#x542F;&#x52A8;TraCI&#x7684;&#x4E00;&#x822C;&#x65B9;&#x6CD5;&#x3002;sumo&#x4F5C;&#x4E3A;&#x5B50;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x672C;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x8FDE;&#x63A5;&#x8BE5;&#x5B50;&#x8FDB;&#x7A0B;  </span></span><br><span class="line">    traci.start([sumoBinary, <span class="string">&apos;-c&apos;</span>, os.path.join(<span class="string">&apos;data&apos;</span>, <span class="string">&apos;run.sumocfg&apos;</span>)])</span><br><span class="line">    <span class="comment"># &#x8C03;&#x7528;TraCI&#x63A7;&#x5236;&#x4E3B;&#x5FAA;&#x73AF;&#x8FC7;&#x7A0B;</span></span><br><span class="line">    run()</span><br></pre></td></tr></table></figure><h1 id="traci&#x5206;&#x6790;">TraCI&#x5206;&#x6790;</h1><h2 id="&#x57FA;&#x672C;&#x6D41;&#x7A0B;">&#x57FA;&#x672C;&#x6D41;&#x7A0B;</h2><p><a href="https://sumo.dlr.de/wiki/TraCI/Protocol" target="_blank" rel="noopener">&#x5B98;&#x65B9;wiki</a></p><p>&#x5728;&#x5F00;&#x542F;SUMO&#x4E4B;&#x540E;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;TCP&#x8FDE;&#x63A5;&#xFF0C;&#x8FDE;&#x63A5;&#x5230;&#x6307;&#x5B9A;&#x7684;SUMO&#x7AEF;&#x53E3;&#xFF0C;TraCI&#x652F;&#x6301;&#x591A;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x5E76;&#x6309;&#x7167;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x6240;&#x6709;&#x547D;&#x4EE4;&#x3002;&#x4E3A;&#x4E86;&#x6709;&#x4E00;&#x4E2A;&#x9884;&#x5B9A;&#x4E49;&#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#xFF0C;&#x6BCF;&#x4E2A;Client&#x5E94;&#x8BE5;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x63A7;&#x5236;&#x547D;&#x4EE4;&#x524D;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;<code>SetOrder</code>&#x547D;&#x4EE4;&#x3002;<code>SetOrder</code>&#x547D;&#x4EE4;&#x4E3A;&#x5BA2;&#x6237;&#x7AEF;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x53F7;&#x7801;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#x4E2D;&#xFF0C;&#x628A;&#x6765;&#x81EA;&#x4E0D;&#x540C;Client&#x7684;&#x547D;&#x4EE4;&#x6309;&#x7167;&#x7F16;&#x53F7;&#x7684;&#x987A;&#x5E8F;&#x6267;&#x884C;&#xFF08;&#x7F16;&#x53F7;&#x4E0D;&#x9700;&#x8981;&#x662F;&#x8FDE;&#x7EED;&#x7684;&#xFF0C;&#x4E5F;&#x4E0D;&#x8981;&#x6C42;&#x4E00;&#x5B9A;&#x662F;&#x6B63;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x6C42;&#x552F;&#x4E00;&#xFF09;&#x3002;&#x4F7F;&#x7528;&#x591A;Client&#x65F6;&#xFF0C;&#x542F;&#x52A8;SUMO&#x65F6;&#x9700;&#x8981;&#x77E5;&#x9053;Client&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x5E76;&#x4E14;&#x6240;&#x6709;&#x5BA2;&#x6237;&#x7AEF;&#x8981;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x6A21;&#x62DF;&#x6B65;&#x9AA4;&#xFF08;&#x65F6;&#x95F4;&#x7247;&#xFF09;&#x4E4B;&#x524D;&#x8FDE;&#x63A5;&#x3002;</p><p>&#x5EFA;&#x7ACB;&#x4E0E;SUMO&#x8FDE;&#x63A5;&#x7684;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="/posts/59170f05/TraciConnect_sequence.png"></p><p>Client&#x53EF;&#x4EE5;&#x5411;SUMO&#x53D1;&#x9001;&#x547D;&#x4EE4;&#x6765;&#x63A7;&#x5236;&#x6A21;&#x62DF;&#x7684;&#x8FD0;&#x884C;&#xFF0C;&#x63A7;&#x5236;&#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x662F;&#x63A7;&#x5236;&#x5355;&#x4E2A;&#x8F66;&#x8F86;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x8BE2;&#x95EE;&#x5F53;&#x524D;&#x73AF;&#x5883;&#x60C5;&#x51B5;&#x3002;SUMO&#x6839;&#x636E;&#x8BF7;&#x6C42;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x54CD;&#x5E94;&#x7684;&#x72B6;&#x6001;&#x54CD;&#x5E94;&#x548C;&#x4E00;&#x4E2A;&#x9644;&#x52A0;&#x7684;&#x7ED3;&#x679C;&#x3002;</p><p>Client&#x5FC5;&#x987B;&#x4F7F;&#x7528;<code>Simulation Step</code>&#x547D;&#x4EE4;&#x6765;&#x63A7;&#x5236;&#x6BCF;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#xFF0C;&#x5982;&#x679C;&#x64CD;&#x4F5C;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x8BA2;&#x9605;&#x7684;&#x7ED3;&#x679C;&#x503C;&#xFF08;&#x539F;&#x6587;&#x662F; If any subscriptions have been done, the subscribed values are returned. &#xFF09;&#xFF0C;&#x5728;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x7247;&#x4E0B;&#xFF0C;&#x6240;&#x6709;&#x7684;Client&#x90FD;&#x53D1;&#x9001;&#x5B8C;&#x547D;&#x4EE4;&#x540E;&#xFF0C;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#x3002;</p><p><strong>&#x8BA2;&#x9605;</strong>&#xFF1A;&#x8BA2;&#x9605;&#x53EF;&#x4EE5;&#x88AB;&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x68C0;&#x7D22;&#x53D8;&#x91CF;&#x7684;&#x6279;&#x5904;&#x7406;&#x6A21;&#x5F0F;&#x3002;&#x4EE3;&#x66FF;&#x91CD;&#x590D;&#x8BF7;&#x6C42;&#x76F8;&#x540C;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x5728;&#x6BCF;&#x4E2A;&#x65F6;&#x95F4;&#x6B65;&#x957F;&#x4E2D;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x81EA;&#x52A8;&#x68C0;&#x7D22;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x503C;&#x3002;TraCI&#x8BA2;&#x9605;&#x5728;&#x6BCF;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x57FA;&#x7840;&#x4E0A;&#x6267;&#x884C;&#x5904;&#x7406;&#x3002;&#x60A8;&#x53EF;&#x4EE5;&#x5728;&#x6BCF;&#x4E2A;&#x65F6;&#x95F4;&#x6B65;&#x957F;&#x540E;&#x8BF7;&#x6C42;&#x5F53;&#x524D;&#x8BA2;&#x9605;&#x7684;&#x6A21;&#x5757;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x4E3A;&#x4E86;&#x8BA2;&#x9605;&#x53D8;&#x91CF;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x76F4;&#x5230;&#x4ED6;&#x4EEC;&#x7684;&#x53D8;&#x91CF;ID&#xFF0C;&#x8FD9;&#x4E9B;ID&#x53EF;&#x4EE5;&#x5728;<code>traci/constants.py</code>&#x6587;&#x4EF6;&#x4E2D;&#x67E5;&#x8BE2;&#x3002;</p><p>&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;<code>close</code>&#x547D;&#x4EE4;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF0C;&#x5F53;&#x6240;&#x6709;&#x7684;Client&#x90FD;&#x53D1;&#x51FA;&#x5173;&#x95ED;&#x65F6;&#xFF0C;&#x6A21;&#x62DF;&#x7ED3;&#x675F;&#xFF0C;&#x91CA;&#x653E;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x3002;</p><p>&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x7684;&#x6D41;&#x7A0B;&#x56FE;&#xFF1A;</p><p><img src="/posts/59170f05/TraciColose_sequence.png"></p><p>&#x5F53;<strong>SUMO</strong>&#x4F5C;&#x4E3A;TraCI&#x670D;&#x52A1;&#x5668;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x5C06;&#x5FFD;&#x7565; &#x2013;end&lt;<em>TIME</em>&gt; &#x9009;&#x9879;&#xFF0C;<strong>SUMO&#x5C06;&#x4E00;&#x76F4;&#x8FD0;&#x884C;&#xFF0C;&#x76F4;&#x5230;&#x5BA2;&#x6237;&#x7AEF;&#x8981;&#x6C42;&#x4EFF;&#x771F;&#x7ED3;&#x675F;</strong>&#x3002; &#x4F7F;&#x7528; <strong>SUMO-GUI</strong> &#x4F5C;&#x4E3A;&#x670D;&#x52A1;&#x5668;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528; &#x64AD;&#x653E;&#x6309;&#x94AE; &#x6216;&#x5728;&#x5904;&#x7406;TraCI&#x547D;&#x4EE4;&#x4E4B;&#x524D;&#x8BBE;&#x7F6E;&#x9009;&#x9879; &#x2013;start &#x6765;&#x542F;&#x52A8;&#x4EFF;&#x771F;&#x3002;</p><p>&#x4F7F;&#x7528; TraCI &#x65F6;&#xFF0C;&#x5C06;&#x5FFD;&#x7565;SUMO&#x7684; &#x2013;end&lt;<em>TIME</em>&gt; &#x9009;&#x9879;&#x3002; &#x800C;&#x662F;&#x901A;&#x8FC7;&#x53D1;&#x51FA; close&#x547D;&#x4EE4; &#x6765;&#x5173;&#x95ED;&#x4EFF;&#x771F;&#x3002;</p><h2 id="&#x6D88;&#x606F;">&#x6D88;&#x606F;</h2><p>TCP&#x6D88;&#x606F;&#x5145;&#x5F53;&#x547D;&#x4EE4;&#x6216;&#x7ED3;&#x679C;&#x5217;&#x8868;&#x7684;&#x5BB9;&#x5668;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6BCF;&#x4E2A;TCP&#x6D88;&#x606F;&#x90FD;&#x542B;&#x6709;&#x4E00;&#x4E2A;&#x5C0F;&#x6807;&#x9898;&#xFF0C;&#x63D0;&#x4F9B;&#x6574;&#x4F53;&#x6D88;&#x606F;&#x7684;&#x5927;&#x5C0F;&#x548C;&#x4E00;&#x7EC4;&#x4ED6;&#x540E;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x3002;&#x6BCF;&#x4E2A;&#x547D;&#x4EE4;&#x7684;&#x957F;&#x5EA6;&#x548C;&#x6807;&#x8BC6;&#x7B26;&#x90FD;&#x653E;&#x5728;&#x547D;&#x4EE4;&#x7684;&#x524D;&#x9762;&#x3002;&#x8BE5;&#x5BB9;&#x5668;&#x7684;&#x65B9;&#x6848;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/posts/59170f05/1564335243949.png"></p><p>&#x547D;&#x4EE4;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6;&#x9650;&#x5236;&#x4E3A;255&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5355;&#x4E2A;&#x547D;&#x4EE4;&#x7684;&#x957F;&#x5EA6;&#x53EF;&#x80FD;&#x4E0D;&#x591F;&#xFF0C;&#x5728;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5C06;&#x539F;&#x59CB;<code>ubyte</code>&#x957F;&#x5EA6;&#x5B57;&#x6BB5;&#x8BBE;&#x7F6E;&#x4E3A;&#x96F6;&#x5E76;&#x6DFB;&#x52A0;&#x6574;&#x6570;&#x957F;&#x5EA6;&#x5B57;&#x6BB5;&#x6765;&#x4F7F;&#x7528;&#x6269;&#x5C55;&#x957F;&#x5EA6;&#x3002;&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x7684;&#x6269;&#x5C55;&#x65B9;&#x6848;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/posts/59170f05/1564337721566.png"></p><h2 id="&#x547D;&#x4EE4;&#x7684;&#x4E00;&#x822C;&#x7ED3;&#x6784;">&#x547D;&#x4EE4;&#x7684;&#x4E00;&#x822C;&#x7ED3;&#x6784;</h2><h2 id="&#x72B6;&#x6001;&#x54CD;&#x5E94;">&#x72B6;&#x6001;&#x54CD;&#x5E94;</h2><p><img src="/posts/59170f05/1564337772925.png"></p><p>&#x6BCF;&#x4E2A;&#x547D;&#x4EE4;&#x90FD;&#x7531;&#x72B6;&#x6001;&#x54CD;&#x5E94;&#x786E;&#x8BA4;&#xFF0C;&#x5305;&#x62EC;&#x7ED3;&#x679C;&#x548C;&#x63CF;&#x8FF0;&#x3002;&#x6807;&#x8BC6;&#x7B26;&#x6307;&#x7684;&#x662F;&#x88AB;&#x786E;&#x8BA4;&#x7684;&#x76F8;&#x5E94;&#x547D;&#x4EE4;&#x7684;&#x6807;&#x8BC6;&#x7B26;&#x3002; &#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x503C;&#xFF1A;</p><ul><li>&#x5982;&#x679C;&#x6210;&#x529F;&#xFF0C;&#x5219;&#x4E3A;0x00</li><li>&#x5982;&#x679C;&#x8BF7;&#x6C42;&#x7684;&#x547D;&#x4EE4;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x4E3A;0xFF</li><li>&#x5982;&#x679C;&#x5728;&#x7F51;&#x7EDC;&#x6A21;&#x62DF;&#x5668;&#x4E2D;&#x672A;&#x5B9E;&#x73B0;&#x8BF7;&#x6C42;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x5219;&#x4E3A;0x01&#xFF08;&#x6B64;&#x5916;&#xFF0C;&#x5FC5;&#x987B;&#x6DFB;&#x52A0;&#x63CF;&#x8FF0;&#x6587;&#x672C;&#xFF09;</li></ul><h2 id="&#x6570;&#x636E;&#x7C7B;&#x578B;">&#x6570;&#x636E;&#x7C7B;&#x578B;</h2><h3 id="atomar-types">Atomar Types</h3><table><colgroup><col style="width: 16%"><col style="width: 8%"><col style="width: 64%"><col style="width: 10%"></colgroup><thead><tr class="header"><th style="text-align: center;">Data type</th><th>Size</th><th>Description</th><th>Identifier</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">ubyte</td><td>8 bit</td><td>integer numbers (0 to 255)</td><td>0x07</td></tr><tr class="even"><td style="text-align: center;">byte</td><td>8 bit</td><td>integer numbers (-128 to 127)</td><td>0x08</td></tr><tr class="odd"><td style="text-align: center;">integer</td><td>32 bit</td><td>integer numbers (-2^{31} to 2^{31}-1) includes bitsets with bit0 meaning the least significant bit</td><td>0x09</td></tr><tr class="even"><td style="text-align: center;">double</td><td>64 bit</td><td>IEEE754 floating point numbers</td><td>0x0B</td></tr><tr class="odd"><td style="text-align: center;">string</td><td>variable</td><td>32 bit string length, followed by text coded as 8 bit ASCII</td><td>0x0C</td></tr><tr class="even"><td style="text-align: center;">stringList</td><td>variable</td><td>32 bit string count n, followed by n strings</td><td>0x0E</td></tr><tr class="odd"><td style="text-align: center;">compound object</td><td>variable</td><td>Compound object, internal structure depends on concrete object. The compound object identifier is always followed by an 32bit-int denoting the number of component types. Then the components are given in sequence.</td><td>0x0F</td></tr></tbody></table><h2 id="&#x4F4D;&#x7F6E;&#x8868;&#x793A;&#x6CD5;">&#x4F4D;&#x7F6E;&#x8868;&#x793A;&#x6CD5;</h2><p>2D&#x8868;&#x793A;(ubyte identifier: 0x01)&#xFF1A;&#x6A21;&#x62DF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x7B1B;&#x5361;&#x5C14;2D&#x4F4D;&#x7F6E;&#xFF0C;&#x7531;&#x4E24;&#x4E2A;&#x53CC;&#x7CBE;&#x5EA6;&#x503C;&#xFF08;x&#x548C;y&#x5750;&#x6807;&#xFF09;&#x63CF;&#x8FF0;&#x3002;</p><p><img src="/posts/59170f05/1564338288482.png"></p><p>3D&#x8868;&#x793A;(ubyte identifier: 0x11)&#xFF1A;&#x6A21;&#x62DF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x7B1B;&#x5361;&#x5C14;3D&#x4F4D;&#x7F6E;&#xFF0C;&#x7531;3&#x4E2A;&#x53CC;&#x7CBE;&#x5EA6;&#x503C;&#xFF08;x,y&#x548C;z&#x5750;&#x6807;&#xFF09;&#x63CF;&#x8FF0;&#x3002;</p><p><img src="/posts/59170f05/1564338327507.png"></p><p>&#x9053;&#x8DEF;&#x5730;&#x56FE;&#x4F4D;&#x7F6E;(ubyte identifier: 0x04)&#xFF1A;&#x5728;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;SUMO&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x7684;&#x4F4D;&#x7F6E;&#x6765;&#x63CF;&#x8FF0;&#xFF0C;RoadID&#x6807;&#x8BC6;&#x4E00;&#x6761;&#x9053;&#x8DEF;&#xFF0C;<code>Pos</code>&#x63CF;&#x8FF0;&#x8282;&#x70B9;&#x5728;&#x9053;&#x8DEF;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#xFF08;&#x4ECE;0&#x5230;&#x9053;&#x8DEF;&#x7684;&#x957F;&#x5EA6;&#xFF09;&#x3002;LaneID&#x6807;&#x8BC6;&#x8DEF;&#x6BB5;&#x4E0A;&#x7684;&#x8F66;&#x9053;&#x3002;</p><p><img src="/posts/59170f05/1564365592705.png"></p><p>Lon-Lat-Position&#xFF08;ubyte&#x6807;&#x8BC6;&#x7B26;&#xFF1A;0x00&#xFF09;&#x6A21;&#x62DF;&#x7F51;&#x7EDC;&#x4E2D;&#x5730;&#x7406;&#x5750;&#x6807;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x7531;&#x4E24;&#x4E2A;&#x53CC;&#x7CBE;&#x5EA6;&#x503C;&#xFF08;&#x7ECF;&#x5EA6;&#x548C;&#x7EAC;&#x5EA6;&#xFF09;&#x63CF;&#x8FF0;&#x3002;</p><p><img src="/posts/59170f05/1564365739630.png"></p><p>Lon-Lat-Alt-Position&#xFF08;ubyte&#x6807;&#x8BC6;&#x7B26;&#xFF1A;0x02&#xFF09;&#x6A21;&#x62DF;&#x7F51;&#x7EDC;&#x4E2D;&#x5177;&#x6709;&#x9AD8;&#x5EA6;&#x7684;&#x5730;&#x7406;&#x5750;&#x6807;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x7531;&#x4E09;&#x4E2A;&#x53CC;&#x7CBE;&#x5EA6;&#x503C;&#xFF08;&#x7ECF;&#x5EA6;&#xFF0C;&#x7EAC;&#x5EA6;&#x548C;&#x9AD8;&#x5EA6;&#xFF09;&#x63CF;&#x8FF0;&#x3002;</p><p><img src="/posts/59170f05/1564365782821.png"></p><p>&#x591A;&#x8FB9;&#x5F62;&#x8868;&#x793A; (ubyte identifier: 0x06)&#xFF1A;&#x4E00;&#x7CFB;&#x5217;2D&#x70B9;&#xFF0C;&#x8868;&#x793A;&#x591A;&#x8FB9;&#x5F62;&#x5F62;&#x72B6;&#x3002;2D&#x70B9;&#x7684;&#x4E2A;&#x6570;&#x662F;&#x6784;&#x6210;&#x591A;&#x8FB9;&#x5F62;&#x7684;&#xFF08;x&#xFF0C;y&#xFF09;&#x70B9;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p><img src="/posts/59170f05/1564366306678.png"></p><p>&#x4EA4;&#x901A;&#x706F;&#x9636;&#x6BB5;&#x5217;&#x8868;(ubyte identifier: 0x0D)&#xFF1A;&#x6B64;&#x7C7B;&#x578B;&#x7528;&#x4E8E;&#x62A5;&#x544A;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x4E0D;&#x540C;&#x9636;&#x6BB5;&#x3002;&#x503C;Length&#x662F;&#x62A5;&#x544A;&#x8FDE;&#x540C;&#x524D;&#x9762;&#x548C;&#x968F;&#x540E;&#x7684;&#x9053;&#x8DEF;&#xFF0C;&#x53D7;&#x5404;&#x81EA;&#x7684;&#x4FE1;&#x53F7;&#x706F;&#x5F71;&#x54CD;&#x3002;</p><p>&#x4EE5;&#x4E0B;&#x7684;&#x8868;&#x793A;&#x7B26;&#x5E94;&#x7528;&#x4E8E;&#x5B58;&#x5728;&#x7684;&#x76F8;&#x4F4D;&#xFF1A;</p><ul><li>0x01: red&#x7EA2;&#x706F;</li><li>0x02: yellow&#x9EC4;&#x706F;</li><li>0x03: green&#x7EFF;&#x706F;</li><li>0x04: traffic light is off and blinking&#x4EA4;&#x901A;&#x706F;&#x5173;&#x95ED;&#xFF0C;&#x95EA;&#x70C1;</li><li>0x05: traffic light is off, not blinking&#x4EA4;&#x901A;&#x706F;&#x5173;&#x95ED;&#xFF0C;&#x4E0D;&#x95EA;&#x70C1;</li></ul><p><img src="/posts/59170f05/1564367521956.png"></p><p>Color (ubyte identifier: 0x11)</p><p><img src="/posts/59170f05/1564367548027.png"></p><h2 id="traci&#x7684;&#x547D;&#x4EE4;">TraCI&#x7684;&#x547D;&#x4EE4;</h2><p>&#x4E0E;&#x63A7;&#x5236;&#x76F8;&#x5173;&#x7684;&#x547D;&#x4EE4;&#xFF1A;&#x6267;&#x884C;&#x6A21;&#x62DF;&#x6B65;&#x9AA4;&#xFF0C;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF0C;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x6A21;&#x62DF;&#x3002;</p><p>&#x9488;&#x5BF9;&#x4EE5;&#x4E0B;APIs&#xFF0C;ID&#x548C;SUMO&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x91CC;&#x5B9A;&#x4E49;&#x7684;ID&#x76F8;&#x7B49;&#x3002;&#x3002; &#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x5B83;&#x4EEC;&#x7684;&#x4E00;&#x822C;&#x7ED3;&#x6784;&#xFF1A;</p><p><strong>&#x503C;&#x68C0;&#x7D22;&#xFF08;valueretrieval&#xFF09;</strong></p><p>&#x547D;&#x4EE4;&#x7ED3;&#x6784;&#xFF1A;</p><p><img src="/posts/59170f05/1564379763109.png"></p><p><code>variable</code>&#x5B57;&#x6BB5;&#x53D6;&#x51B3;&#x4E8E;&#x5177;&#x4F53;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x6839;&#x636E;&#x547D;&#x4EE4;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x503C;&#xFF0C;<code>SUMO ID</code>&#x662F;&#x60F3;&#x77E5;&#x9053;&#x8BE5;&#x503C;&#x5BF9;&#x8C61;&#x7684;ID&#xFF0C;&#x5B83;&#x5C5E;&#x4E8E;&#x54EA;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;&#x53D6;&#x51B3;&#x4E8E;&#x7279;&#x5B9A;&#x7684;&#x547D;&#x4EE4;&#x3002;</p><ol type="1"><li>&#x611F;&#x5E94;&#x56DE;&#x8DEF;&#x503C;&#x68C0;&#x7D22;&#xFF08;Induction loop value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x5173;&#x4E8E;&#x611F;&#x5E94;&#x56DE;&#x8DEF;&#x7684;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x8F66;&#x9053;&#x9762;&#x79EF;&#x68C0;&#x6D4B;&#x5668;&#x503C;&#x68C0;&#x7D22;&#xFF08;lane area detector value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x8F66;&#x9053;&#x9762;&#x79EF;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x591A;&#x8F93;&#x5165;/&#x591A;&#x51FA;&#x53E3;&#x68C0;&#x6D4B;&#x5668;&#x503C;&#x68C0;&#x7D22;&#xFF08;muli-entry/multi-exit detector valueretrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x591A;&#x8F93;&#x5165;&#x591A;&#x51FA;&#x53E3;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x4EA4;&#x901A;&#x706F;&#x503C;&#x68C0;&#x7D22;&#xFF08;traffic lights value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x8F66;&#x9053;&#x503C;&#x68C0;&#x7D22;&#xFF08;lane value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x8F66;&#x9053;&#x503C;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x8F66;&#x8F86;&#x503C;&#x68C0;&#x7D22;&#xFF08;vechicle value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x5173;&#x4E8E;&#x8F66;&#x8F86;&#x7684;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x4EBA;&#x7FA4;&#x503C;&#x68C0;&#x7D22;&#xFF08;person value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x5173;&#x4E8E;&#x4EBA;&#x7FA4;&#x7684;&#x4FE1;&#x606F;</li><li>&#x8F66;&#x8F86;&#x7C7B;&#x578B;&#x503C;&#x68C0;&#x7D22;&#xFF08;vehicle type value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x8F66;&#x8F86;&#x7C7B;&#x578B;</li><li>&#x8DEF;&#x7531;&#x503C;&#x68C0;&#x7D22;&#xFF08;route value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x8DEF;&#x7531;&#x4FE1;&#x606F;</li><li>&#x5174;&#x8DA3;&#x70B9;&#x503C;&#x68C0;&#x7D22;&#xFF08;PoI value retrieval&#xFF09;&#xFF1A;point-of-interest&#x5174;&#x8DA3;&#x70B9;</li><li>&#x591A;&#x8FB9;&#x5F62;&#x503C;&#x68C0;&#x7D22;&#xFF08;polygon value retrieval&#xFF09;&#xFF1A;retrieve information about polygons</li><li>&#x7ED3;&#x70B9;&#x503C;&#x68C0;&#x7D22;&#xFF08;junction value retrieval&#xFF09;&#xFF1A;retrieve information about junctions</li><li>&#x8857;&#x9053;&#x503C;&#x68C0;&#x7D22;&#xFF08;edge value retrieval&#xFF09;&#xFF1A;retrieve information about edges</li><li>&#x4EFF;&#x771F;&#x503C;&#x68C0;&#x7D22;&#xFF08;simulation value retrieval&#xFF09;&#xFF1A;retrieve information about the simulation</li><li>GUI&#x503C;&#x68C0;&#x7D22;&#xFF08;GUI valueretrieval&#xFF09;&#xFF1A;retrieve information about the simulation visualization</li></ol><p>SUMO&#x7684;&#x8FD4;&#x56DE;&#xFF1A;</p><p><img src="/posts/59170f05/1564380076785.png"></p><p>&#x5176;&#x4E2D;&#xFF0C;<code>variable</code>&#x548C;<code>SUMO ID</code>&#x662F;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;<code>variable</code>&#x548C;<code>SUMO ID</code>&#xFF0C;&#x8FD4;&#x56DE;&#x7C7B;&#x578B;&#x53D6;&#x51B3;&#x4E8E;&#x53D8;&#x91CF;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x5E38;&#x89C4;TraCI&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6B64;&#x53D8;&#x91CF;&#x7684;&#x7279;&#x6B8A;&#x590D;&#x5408;&#x7C7B;&#x578B;&#xFF0C;&#x4F7F;&#x7528;&#x7279;&#x5B9A;&#x547D;&#x4EE4;&#x8BB0;&#x5F55;&#x3002;</p><p><strong>&#x72B6;&#x6001;&#x6539;&#x53D8;statechanging</strong></p><p>&#x548C;&#x524D;&#x6587;&#x7684;&#x503C;&#x68C0;&#x7D22;&#x76F8;&#x53CD;&#xFF0C;&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x547D;&#x4EE4;&#x662F;&#x7ED9;&#x7279;&#x5B9A;&#x7684;&#x5BF9;&#x8C61;&#x8BBE;&#x5B9A;&#x7279;&#x5B9A;&#x7684;&#x503C;&#xFF0C;&#x547D;&#x4EE4;&#x7ED3;&#x6784;&#x5982;&#x4E0B; <img src="/posts/59170f05/1564381122878.png"></p><ol type="1"><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Lane_State" target="_blank" rel="noopener">Change Lane State</a> change a lane&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Traffic_Lights_State" target="_blank" rel="noopener">Change Traffic Lights State</a> change a traffic lights&apos; state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Vehicle_State" target="_blank" rel="noopener">Change Vehicle State</a> change a vehicle&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Person_State" target="_blank" rel="noopener">Change Person State</a> change a persons&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_VehicleType_State" target="_blank" rel="noopener">Change Vehicle Type State</a> change a vehicle type&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Route_State" target="_blank" rel="noopener">Change Route State</a> change a route&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_PoI_State" target="_blank" rel="noopener">Change PoI State</a> change a point-of-interest&apos;s state (or add/remove one)</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Polygon_State" target="_blank" rel="noopener">Change Polygon State</a> change a polygon&apos;s state (or add/remove one)</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Edge_State" target="_blank" rel="noopener">Change Edge State</a> change an edge&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Simulation_State" target="_blank" rel="noopener">Change Simulation State</a> change the simulation</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_GUI_State" target="_blank" rel="noopener">Change GUI State</a> change the simulation visualization</li></ol><p>SUMO&#x7684;&#x54CD;&#x5E94;&#xFF1A;&#x72B6;&#x6001;&#x6539;&#x53D8;&#x547D;&#x4EE4;&#x7684;&#x54CD;&#x5E94;&#x53EA;&#x6709;&#x5BF9;&#x8BF7;&#x6C42;&#x7684;&#x72B6;&#x6001;&#x7684;&#x54CD;&#x5E94;&#x3002;</p><p>&#x53E6;&#x5916;&#x770B;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x6539;&#x53D8;&#x8F66;&#x8F86;&#x72B6;&#x6001;&#x7684;&#x547D;&#x4EE4;&#x89C1;<a href="https://sumo.dlr.de/wiki/TraCI/Change_Vehicle_State" target="_blank" rel="noopener">&#x8FD9;&#x91CC;</a></p><h2 id="&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x63A5;&#x53E3;">&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x63A5;&#x53E3;</h2><ul><li>python&#xFF1A;the package tools/traci&#x5141;&#x8BB8;&#x901A;&#x8FC7;python&#x53EF;&#x4EE5;&#x548C;SUMO&#x8FDB;&#x884C;&#x4EA4;&#x4E92;&#x3002;&#xFF08;&#x8FD9;&#x4E2A;&#x5E93;&#x6EE1;&#x8DB3;&#x65E5;&#x5E38;&#x6D4B;&#x8BD5;&#x3002;&#x652F;&#x6301;&#x6240;&#x6709;&#x7684;TraCI&#x547D;&#x4EE4;&#xFF09;&#x3002;</li><li>java&#xFF1A;TraCI4J&#x662F;&#x5173;&#x4E8E;TraCI&#x7684;java&#x5E94;&#x7528;&#x3002;&#x6587;&#x6863;&#xFF1A; API documentation is here</li><li>java&#xFF0C;.net&#x2026;&#x2026;.&#x4EFB;&#x4F55;&#x7684;&#x7B26;&#x5408;SOAP&#xFF08;&#x7B80;&#x5355;&#x5BF9;&#x8C61;&#x8BBF;&#x95EE;&#x534F;&#x8BAE;&#xFF09;&#x7684;&#x8BED;&#x8A00;&#x90FD;&#x53EF;&#x4EE5;&#x3002;&#x662F;&#x4E00;&#x4E2A;TraCI&#x7684;web&#x670D;&#x52A1;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x81EA;&#x52A8;&#x9002;&#x914D;&#x591A;&#x79CD;&#x8BED;&#x8A00;&#x3002;API&#x5B8C;&#x6574;&#x6027;&#x6BD4;TraCI4J&#x8981;&#x597D;&#xFF0C;&#x7531;&#x4E8E;&#x4EE3;&#x7801;&#x7684;&#x4EA7;&#x751F;&#x57FA;&#x4E8E;Python&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x3002;TraaS&#x53EF;&#x4EE5;&#x5355;&#x72EC;&#x7528;&#x4F5C;&#x4E00;&#x4E2A;TraCI&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x66FF;&#x4EE3;TraCI4J&#x3002;</li><li>Matlab&#xFF1A; TraCI4Matlab</li><li>C++&#xFF1A;The C++ TraCIAPI&#x662F;SUMO&#x6E90;&#x7801;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x4E3A;&#x4E00;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x5E93;&#x3002;</li><li>C++&#xFF1A;The Veinsproject &#x63D0;&#x4F9B;&#x4F7F;&#x7528; OMNET++&#x7F16;&#x8BD1;SUMO&#x7684;&#x4E2D;&#x95F4;&#x4EF6;&#x3002;&#x4F5C;&#x4E3A;&#x57FA;&#x7840;&#x8BBE;&#x65BD;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x63D0;&#x4F9B;&#x9488;&#x5BF9;TraCI API&#x7684;C++&#x5BA2;&#x6237;&#x7AEF;&#x5E93;&#x3002;</li></ul><h2 id="v2x">V2X</h2><p>TraCI&#x5141;&#x8BB8;SUMO&#x7ED3;&#x5408;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x6A21;&#x62DF;&#x5668;&#x751A;&#x9AD8;&#x9891;&#x5168;&#x5411;&#x6307;&#x6807;&#xFF0C;&#x7528;&#x4E8E;&#x6A21;&#x62DF;&#x8F66;&#x8F7D;&#x901A;&#x4FE1;&#x3002;</p><p>TraCI allows to use <a href="https://sumo.dlr.de/wiki/SUMO" target="_blank" rel="noopener">SUMO</a> in combination with communication network simulators vor simulating <a href="https://sumo.dlr.de/wiki/Topics/V2X" target="_blank" rel="noopener">vehicular communication</a>. See <a href="https://sumo.dlr.de/wiki/Topics/V2X" target="_blank" rel="noopener">Topics/V2X</a> for a list of available solutions.</p><h2 id="&#x5176;&#x4ED6;&#x8D44;&#x6E90;">&#x5176;&#x4ED6;&#x8D44;&#x6E90;</h2><p>SUMO&#x7684;TraCI&#x670D;&#x52A1;&#x662F;&#x5E73;&#x539F;&#x5206;&#x5E03;&#xFF08;the plain distribution&#xFF09;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;&#x6E90;&#x4EE3;&#x7801;&#x4F4D;&#x4E8E;&#x6587;&#x4EF6;&#x5939;<code>src/traci-server</code>.</p><h1 id="&#x76F8;&#x5173;&#x8BBA;&#x6587;">&#x76F8;&#x5173;&#x8BBA;&#x6587;</h1><ol type="1"><li><a href="https://dev.tencent.com/s/78419e04-419b-4b39-88ee-d9682c3bb2e8" target="_blank" rel="noopener">&#x8F66;&#x8F7D;&#x81EA;&#x7EC4;&#x7F51;&#x7684;&#x4EFF;&#x771F;&#x7814;&#x7A76;&#x7EFC;&#x8FF0;</a></li><li><a href="https://dev.tencent.com/s/121dff6d-f3cc-4c6d-915a-067cb1b40dfa" target="_blank" rel="noopener">&#x8F66;&#x8F86;&#x81EA;&#x7EC4;&#x7EC7;&#x7F51;&#x4EFF;&#x771F;&#x7814;&#x7A76;</a></li></ol><h1 id="&#x53C2;&#x8003;&#x8D44;&#x6599;">&#x53C2;&#x8003;&#x8D44;&#x6599;</h1><ol type="1"><li><a href="https://blog.csdn.net/qtlyx/column/info/15585" target="_blank" rel="noopener">SUMO&#x4F7F;&#x7528;&#x6559;&#x7A0B;</a></li><li><a href="https://blog.csdn.net/davidhopper/article/details/81871872" target="_blank" rel="noopener">SUMO TraCI&#x4F7F;&#x7528;&#x793A;&#x4F8B;&#xFF1A;TraCIPedCrossing</a></li><li><a href="https://blog.csdn.net/renguoqing1001/article/details/52743179" target="_blank" rel="noopener">SUMO&#x6587;&#x6863;010&#xFF1A;&#x4EC0;&#x4E48;&#x662F;TraCI&#xFF1F;</a></li><li><a href="https://blog.csdn.net/renguoqing1001/article/details/52743255" target="_blank" rel="noopener">SUMO&#x6587;&#x6863;014&#xFF1A;TraCI&#x7684;Python&#x63A5;&#x53E3;</a></li><li><a href="https://blog.csdn.net/renguoqing1001/article/details/52743298" target="_blank" rel="noopener">SUMO&#x6587;&#x6863;015&#xFF1A;TraCI&#x7684;&#x534F;&#x8BAE;&#x89C4;&#x8303;</a></li><li><a href="https://sumo.dlr.de/wiki/TraCI" target="_blank" rel="noopener">SUMO-wiki-TraCI</a></li><li></li></ol>]]></content>
      
      <categories>
          
          <category> 自动驾驶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SUMO </tag>
            
            <tag> Intel Labs China </tag>
            
            <tag> 自动驾驶 </tag>
            
            <tag> 仿真 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>循环小数的循环体</title>
      <link href="//posts/a12ff16d/"/>
      <url>//posts/a12ff16d/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;&#x6982;&#x8FF0;">&#x9898;&#x76EE;&#x6982;&#x8FF0;</h1><p>LeetCode 166&#x9898;&#xFF0C;&#x9762;&#x8BD5;&#x9047;&#x5230;&#x4E86;&#x3002;</p><blockquote><p>&#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x6570;p&#x548C;q&#xFF0C;&#x5982;&#x679C;p/q&#x662F;&#x4E00;&#x4E2A;&#x65E0;&#x9650;&#x5FAA;&#x73AF;&#x5C0F;&#x6570;&#xFF0C;&#x5219;&#x6C42;&#x8FD9;&#x4E2A;&#x65E0;&#x9650;&#x5FAA;&#x73AF;&#x5C0F;&#x6570;&#x7684;&#x5FAA;&#x73AF;&#x4F53;&#x3002;<strong>&#x4E0D;&#x9650;&#x5B9A;p&#x548C;q&#x7684;&#x5927;&#x5C0F;</strong>&#x3002;</p></blockquote><p>&#x65B0;&#x74F6;&#x88C5;&#x65E7;&#x9152;&#xFF0C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x601D;&#x8DEF;&#x3002;</p><a id="more"></a><h1 id="&#x601D;&#x8DEF;&#x4E00;&#x6A21;&#x62DF;">&#x601D;&#x8DEF;&#x4E00;&#xFF1A;&#x6A21;&#x62DF;</h1><p>&#x5982;&#x679C;&#x6709;&#x9650;&#x5B9A;q&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x5F00;&#x4E00;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x6765;&#x5B58;&#x50A8;&#x6BCF;&#x4E00;&#x6B65;&#x4E2D;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x6709;&#x5FAA;&#x73AF;&#x3002;</p><p>&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">int</span> m[<span class="number">1000</span>], n[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> p, q;</span><br><span class="line">    <span class="built_in">memset</span>(m, <span class="number">-1</span>, <span class="keyword">sizeof</span>(m));</span><br><span class="line">    <span class="built_in">memset</span>(n, <span class="number">-1</span>, <span class="keyword">sizeof</span>(n));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; p &gt;&gt; q;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; p / q;</span><br><span class="line">    p = p % q;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;.&apos;</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>, r = p;</span><br><span class="line">    <span class="keyword">while</span> (r != <span class="number">0</span> &amp;&amp; m[r] == <span class="number">-1</span>)<span class="comment">//&#x4F59;&#x6570;&#x4E0D;&#x4E3A;0&#xFF0C;&#x4E14;&#x8FD9;&#x4E2A;&#x6570;&#x4E4B;&#x524D;&#x672A;&#x66FE;&#x51FA;&#x73B0;&#x8FC7;</span></span><br><span class="line">    {</span><br><span class="line">        m[r] = cnt++;<span class="comment">//&#x8BB0;&#x5F55;&#x5E8F;&#x53F7;</span></span><br><span class="line">        r *= <span class="number">10</span>;</span><br><span class="line">        n[cnt] = r / q;</span><br><span class="line">        r = r % q;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (r != <span class="number">0</span>)<span class="comment">//&#x8868;&#x793A;&#x6709;&#x5FAA;&#x73AF;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m[r]; i++)<span class="comment">//&#x524D;&#x9762;&#x975E;&#x5FAA;&#x73AF;&#x7684;&#x90E8;&#x5206;</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n[i];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;(&apos;</span>;<span class="comment">//&#x5FAA;&#x73AF;&#x4F53;&#x90E8;&#x5206;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = m[r]+<span class="number">1</span>; i &lt;= cnt; i++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n[i];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;)&apos;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt; i++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x7A7A;&#x95F4;&#x5F00;&#x9500;&#x5927;&#xFF0C;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(q)&#xFF0C;&#x5F53;&#x7136;&#x5B9E;&#x9645;&#x4E0A;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7EA6;&#x5206;&#x6765;&#x964D;&#x4F4E;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><p>&#x6240;&#x4EE5;&#x5982;&#x679C;&#x5728;&#x4E0D;&#x9650;&#x5236;p&#x548C;q&#x5927;&#x5C0F;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x79CD;&#x505A;&#x6CD5;&#x662F;&#x4E0D;&#x884C;&#x7684;&#x3002;</p><h1 id="&#x601D;&#x8DEF;&#x4E8C;&#x6B27;&#x62C9;&#x5B9A;&#x7406;">&#x601D;&#x8DEF;&#x4E8C;&#xFF1A;&#x6B27;&#x62C9;&#x5B9A;&#x7406;</h1><h2 id="&#x6B27;&#x62C9;&#x5B9A;&#x7406;">&#x6B27;&#x62C9;&#x5B9A;&#x7406;</h2><p>&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x662F;&#x4E00;&#x4E2A;&#x5173;&#x4E8E;&#x540C;&#x4F59;&#x7684;&#x6027;&#x8D28;&#x3002;</p><p>&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x8868;&#x660E;&#xFF0C;&#x82E5;<span class="math inline">\(n,a\)</span>&#x4E3A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x4E14;<span class="math inline">\(n,a\)</span>&#x4E92;&#x8D28;&#xFF0C;&#x5219;&#x6709;</p><p><span class="math display">\[a^{\varphi (n)} \equiv 1 \ \ (mod \ \ n)\]</span></p><p>&#x5176;&#x4E2D;<span class="math inline">\(\varphi (n)\)</span>&#x8868;&#x793A;&#x6B27;&#x62C9;&#x51FD;&#x6570;&#xFF0C;<span class="math inline">\(\equiv\)</span>&#x8868;&#x793A;&#x540C;&#x4F59;&#x3002;</p><p>&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x8868;&#x660E;&#xFF0C;<span class="math inline">\(a^{\varphi (n)}\)</span>&#x4E0E;<span class="math inline">\(1\)</span>&#x5728;&#x6A21;<span class="math inline">\(n\)</span>&#x4E0B;&#x540C;&#x4F59;&#x3002;&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x8D39;&#x9A6C;&#x5C0F;&#x5B9A;&#x7406;&#x7684;&#x63A8;&#x5E7F;&#x3002;</p><h2 id="&#x6B27;&#x62C9;&#x51FD;&#x6570;">&#x6B27;&#x62C9;&#x51FD;&#x6570;</h2><p>&#x5BF9;&#x4E8E;&#x6B63;&#x6574;&#x6570;<span class="math inline">\(n\)</span>&#xFF0C;&#x6B27;&#x62C9;&#x51FD;&#x6570; <span class="math inline">\(\varphi (n)\)</span>&#x7684;&#x503C;&#x662F;&#x5C0F;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;<span class="math inline">\(n\)</span>&#x7684;&#x6B63;&#x6574;&#x6570;&#x4E2D;&#xFF0C;&#x4E0E;<span class="math inline">\(n\)</span>&#x4E92;&#x8D28;&#x7684;&#x6570;&#x7684;&#x6570;&#x76EE;&#x3002;</p><p>&#x5728;C++&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x7531;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#x76F4;&#x63A5;&#x8BA1;&#x7B97;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Eular</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> res = x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt;= x; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (x%i == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            res = (res / i)*(i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span> (x%i == <span class="number">0</span>)</span><br><span class="line">                x = x / i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">        res = (res / x)*(x - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x63A8;&#x5BFC;">&#x63A8;&#x5BFC;</h2><p>&#x4EE5;<code>4/33=0.1212121212......</code>&#x4E3A;&#x4F8B;&#x3002;</p><p>&#x5C06;&#x5206;&#x5B50;*10&#xFF0C;&#x518D;&#x6C42;&#x6A21;&#xFF0C;&#x6709;&#xFF1A;</p><p><span class="math display">\[\frac 4 {33}\ \frac 7 {33}\ \frac 4 {33}\ \frac 7 {33}\ \frac 4 {33}\ \frac 7 {33}\ \frac 4 {33}...\]</span></p><p>&#x53EF;&#x77E5;&#xFF1A;&#x7B2C;&#x4E09;&#x6B21;&#x4E0E;&#x7B2C;&#x4E00;&#x6B21;&#x91CD;&#x590D;&#xFF0C;&#x5F62;&#x6210;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;2&#x7684;&#x5FAA;&#x73AF;&#x8282;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x6574;&#x6570;&#x90E8;&#x5206;&#x548C;&#x80FD;&#x7EA6;&#x5206;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x7EA6;&#x5206;&#x5373;&#x53EF;&#xFF0C;&#x4E0E;&#x540E;&#x9762;&#x7684;&#x5FAA;&#x73AF;&#x5C0F;&#x6570;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x8003;&#x8651;&#x771F;&#x5206;&#x6570;<span class="math inline">\(\frac p q\)</span>&#xFF08;<span class="math inline">\(p\)</span>&#x548C;<span class="math inline">\(q\)</span>&#x90FD;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x7EA6;&#x5206;&#x4E86;&#xFF09;&#xFF1A;</p><p>&#x8BB0;&#x7B2C;<span class="math inline">\(k\)</span>&#x4E2A;&#x5206;&#x6570;&#x4E3A; <span class="math display">\[\frac {p*10^k\ mod\ q} q\]</span> &#x5047;&#x8BBE;&#x7B2C;<span class="math inline">\(i\)</span>&#x4E2A;&#x548C;&#x7B2C;<span class="math inline">\(j\)</span>&#x4E2A;&#x5206;&#x6570;&#x76F8;&#x7B49;&#xFF0C;&#x4E8E;&#x662F;&#x6709;</p><p><span class="math display">\[\frac{p*10^i mod\ q}{q} = \frac{p*10^j mod\ q}{q}\]</span> &#x5219;&#x540C;&#x4F59;&#x5173;&#x7CFB;&#x4E3A;</p><p><span class="math display">\[p * 10^j \equiv p * 10^i (mod \ q)  \quad (i &lt; j)\]</span> &#x540C;&#x4F59;&#x5173;&#x7CFB;&#x53EF;&#x5199;&#x4E3A;</p><p><span class="math display">\[p*10^j = p*10^i + q*k\]</span></p><p>&#x5373;</p><p><span class="math display">\[p(10^j-10^i) = q*k \ &#x2192;\  p*10^i(10^{j - i} - 1) = q*k\]</span></p><p>&#x7531;&#x4E8E;<span class="math inline">\(k \neq 0\)</span></p><p>&#x6240;&#x4EE5;&#x6709;&#xFF08;<span class="math inline">\(|\)</span>&#x8868;&#x793A;&#x6574;&#x9664;&#xFF0C;&#x5373;&#x7B2C;&#x4E8C;&#x9879;<span class="math inline">\(\div\)</span>&#x7B2C;&#x4E00;&#x9879;&#xFF0C;&#x4F59;&#x6570;&#x4E3A;0&#xFF09;&#xFF1A;</p><p><span class="math display">\[q|10^i(10^{j - i} - 1)p\]</span></p><p>&#x7531;&#x4E8E;<span class="math inline">\(p\)</span>&#x548C;<span class="math inline">\(q\)</span>&#x4E92;&#x8D28;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#xFF1A;</p><p><span class="math display">\[q|10^i(10^{j - i} - 1) \tag{*}\]</span></p><p>&#x7531;&#x4E8E;<span class="math inline">\(10^i\)</span>&#x662F;&#x5076;&#x6570;&#xFF0C;<span class="math inline">\(10^{j-i}-1\)</span>&#x662F;&#x5947;&#x6570;&#x3002;</p><p>&#x90A3;&#x4E48;<span class="math inline">\(i\)</span>&#x5C06;&#x7531;<span class="math inline">\(10^i\)</span>&#x548C;<span class="math inline">\(q\)</span>&#x6765;&#x51B3;&#x5B9A;&#xFF0C;&#x5C06;<span class="math inline">\(q\)</span>&#x5206;&#x6210;&#x4E24;&#x90E8;&#x5206;&#xFF0C;&#x4E00;&#x90E8;&#x5206;&#x7531;&#x56E0;&#x5B50;<span class="math inline">\(2\)</span>&#x548C;<span class="math inline">\(5\)</span>&#x7EC4;&#x6210;&#xFF0C;&#x53E6;&#x4E00;&#x90E8;&#x5206;&#x7531;&#x5176;&#x4ED6;&#x56E0;&#x5B50;&#x7EC4;&#x6210;&#x3002;</p><p>&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x5206;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;<span class="math inline">\(10\)</span>&#x8FDB;&#x5236;&#xFF0C;<span class="math inline">\(10=2*5\)</span>&#x3002;</p><p>&#x5219;&#x56E0;&#x5B50;<span class="math inline">\(2\)</span>&#x548C;&#x56E0;&#x5B50;<span class="math inline">\(5\)</span>&#x5C06;&#x7531;<span class="math inline">\(10^i\)</span>&#x6765;&#x62B5;&#x6D88;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x5728;<span class="math inline">\(10^{j-i}-1\)</span>&#x4E2D;&#x3002;</p><p>&#x56E0;&#x6B64;<span class="math inline">\(i = max(n,m)\)</span>&#xFF0C;&#x5176;&#x4E2D;<span class="math inline">\(n\)</span>&#x4E3A;<span class="math inline">\(q\)</span>&#x4E2D;&#x56E0;&#x5B50;<span class="math inline">\(2\)</span>&#x7684;&#x4E2A;&#x6570;&#xFF0C;<span class="math inline">\(m\)</span>&#x4E3A;<span class="math inline">\(q\)</span>&#x4E2D;&#x56E0;&#x5B50;<span class="math inline">\(5\)</span>&#x7684;&#x4E2A;&#x6570;&#x3002;</p><p><span class="math inline">\(i\)</span>&#x662F;&#x5FAA;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6C42;<span class="math inline">\(i\)</span>&#x7684;&#x51FD;&#x6570;&#x4E3A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_i</span><span class="params">(<span class="keyword">int</span> &amp;n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x7684;n&#x5BF9;&#x5E94;&#x7684;&#x662F;&#x63A8;&#x5230;&#x91CC;&#x9762;&#x7684;q</span></span><br><span class="line">    <span class="comment">//&#x540C;&#x65F6;&#xFF0C;&#x8981;&#x628A;q&#x8F6C;&#x4E3A;q&apos;&#x6240;&#x4EE5;&#x8981;&#x7528;&#x5F15;&#x7528;</span></span><br><span class="line">    <span class="keyword">int</span> res1 = <span class="number">0</span>, res2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        n = n / <span class="number">2</span>;</span><br><span class="line">        res1++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">5</span> == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        n = n / <span class="number">5</span>;</span><br><span class="line">        res2++;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x5BF9;&#x5E94;&#x63A8;&#x5BFC;&#x91CC;&#x7684;i</span></span><br><span class="line">    <span class="keyword">return</span> max(res1, res2);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x73B0;&#x5728;&#x63A8;&#x5BFC;&#x4EE3;&#x7801;&#x4E2D;&#x7684;<span class="math inline">\(q&apos;\)</span>&#x548C;&#x5FAA;&#x73AF;&#x8282;&#x7684;&#x957F;&#x5EA6;<span class="math inline">\(length=j-i\)</span></p><p>&#x8BBE;<span class="math inline">\(q&apos; = \frac{q}{2^n*5^m}\)</span>&#xFF0C;&#x5219;<span class="math inline">\((*)\)</span>&#x5F0F;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;</p><p><span class="math display">\[q|2^n5^m(10^{j - i} - 1)*\frac{10^i}{2^n5^m}\]</span></p><p>&#x5373;</p><p><span class="math display">\[q&apos;|(10^{j - i} - 1)*\frac{10^i}{2^n5^m}\]</span></p><p>&#x53C8;&#x56E0;&#x4E3A;<span class="math inline">\(q&apos; = \frac{q}{2^n*5^m}\)</span>&#x4E0E;<span class="math inline">\(\frac{10^i}{2^n5^m}\)</span>&#x4E92;&#x8D28;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x5C06;&#x4E0A;&#x5F0F;&#x5199;&#x4E3A;</p><p><span class="math display">\[q&apos;|(10^{j - i} - 1)\]</span></p><p>&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x6C42;&#x51FA;<span class="math inline">\(j-i\)</span>&#x5C31;&#x662F;&#x5FAA;&#x73AF;&#x5C0F;&#x6570;&#x7684;&#x5FAA;&#x73AF;&#x8282;&#x7684;&#x957F;&#x5EA6;&#x4E86;&#x3002;</p><p>&#x53D8;&#x53D8;&#x5F62;&#xFF0C;&#x6709;</p><p><span class="math display">\[10^{j - i}&#x2261;1\ (mod\ q&apos;)\]</span></p><p>&#x8BB0;<span class="math inline">\(j-i\)</span>&#x4E3A;&#x4E00;&#x4E2A;<span class="math inline">\(x\)</span>&#xFF0C;&#x5C31;&#x53D8;&#x6210;&#x6C42;&#x89E3;</p><p><span class="math display">\[10^x&#x2261;1\ (mod\ q&apos;)\]</span></p><p>&#x7531;&#x524D;&#x6587;&#x4E2D;&#x7684;&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#xFF08;&#x73B0;&#x5728;&#x660E;&#x767D;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x628A;&#x56E0;&#x5B50;<span class="math inline">\(2\)</span>&#x548C;&#x56E0;&#x5B50;<span class="math inline">\(5\)</span>&#x7EA6;&#x53BB;&#x4E86;&#x5427;&#xFF0C;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x521B;&#x9020;&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x91CC;&#x7684;&#x4E92;&#x8D28;&#x6761;&#x4EF6;&#xFF09;&#x53EF;&#x77E5;&#xFF1A;</p><p>&#x5B58;&#x5728;&#x6700;&#x5C0F;&#x7684;<span class="math inline">\(10^x&#x2261;1\ (mod\ q&#x2019;)\)</span>&#xFF0C;&#x5F53;<span class="math inline">\(x\)</span>&#x662F;<span class="math inline">\(\varphi(q&#x2019;)\)</span>&#x7684;&#x4E00;&#x4E2A;&#x56E0;&#x5B50;&#x3002;</p><p>&#x8BC1;&#x660E;&#x5982;&#x4E0B;&#xFF08;&#x611F;&#x8C22;&#x738B;&#x5C0F;&#x5251;&#x548C;&#x6208;&#x4F20;&#x8D22;&#x5B66;&#x957F;&#x7684;&#x5927;&#x529B;&#x5E2E;&#x52A9;&#xFF09;&#xFF1A; &#x4F7F;&#x7528;&#x53CD;&#x8BC1;&#x6CD5;&#xFF0C;&#x7531;&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x77E5;&#xFF1A; <span class="math display">\[10^{\varphi (q&apos;)}&#x2261;1\ (mod\ q&apos;)\]</span></p><p>&#x5047;&#x8BBE;</p><p><span class="math display">\[10^x&#x2261;1\ (mod\ q&apos;)   \tag{**}\]</span></p><p>&#x4E14;<span class="math inline">\(x\)</span>&#x4E0D;&#x662F;<span class="math inline">\(\varphi (q&apos;)\)</span>&#x7684;&#x56E0;&#x5B50;&#xFF0C;<span class="math inline">\(x\)</span>&#x662F;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x4E2D;&#x7684;&#x6700;&#x5C0F;&#x7684;&#xFF0C;&#x5219;&#x6709;<span class="math inline">\(\varphi (q&apos;)=nx+p\)</span></p><p>&#x5219;</p><p><span class="math display">\[10^{\varphi (q&apos;)}=10^{nx+p} \\     10^{nx+p}&#x2261;1\ (mod\ q&#x2019;)\]</span></p><p>&#x7531;&#x5047;&#x8BBE;<span class="math inline">\((**)\)</span>&#x53CA;&#x53D6;&#x4F59;&#x6570;&#x7684;&#x6027;&#x8D28;&#x53EF;&#x77E5; <span class="math display">\[\begin{aligned}10^{nx+p} \ mod\ q&apos; &amp;=(10^x&#xB7;10^x......10^x&#xB7;10^p)\ mod \ q&apos; \\&amp;=1&#xB7;1...&#xB7;1&#xB7;10^p\ mod \ q&apos; \\&amp;=10^p\ mod\ q&apos;\\&amp;=1\end{aligned}\]</span></p><p>&#x53C8;&#x7531;&#x4E8E;<span class="math inline">\(p&lt;x\)</span>&#xFF0C;&#x6240;&#x4EE5;&#x4E0E;&#x5047;&#x8BBE;&#x77DB;&#x76FE;&#x3002;&#x6240;&#x4EE5;&#x5047;&#x8BBE;&#x4E0D;&#x6210;&#x7ACB;&#xFF0C;&#x56E0;&#x6B64;<span class="math inline">\(x\)</span>&#x5FC5;&#x987B;&#x80FD;&#x6574;&#x9664;&#x4E8E;$(q&apos;)$&#x3002;&#x539F;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p><p>&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x53BB;&#x679A;&#x4E3E;&#x6240;&#x6709;<span class="math inline">\(\varphi(q&#x2019;)\)</span>&#x7684;&#x56E0;&#x5B50;&#xFF0C;&#x4ECE;&#x800C;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x7684;<span class="math inline">\(x\)</span>&#xFF0C;&#x6EE1;&#x8DB3;<span class="math inline">\(10^x&#x2261;1\ (mod\ q&#x2019;)\)</span>&#x5373;&#x53EF;&#x6C42;&#x51FA;&#x5FAA;&#x73AF;&#x8282;&#x7684;&#x957F;&#x5EA6;<span class="math inline">\(length\)</span>&#x3002;</p><p>&#x6700;&#x540E;&#x6309;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x5373;&#x53EF;&#x3002;</p><p>&#x4EE3;&#x7801;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x76F4;&#x63A5;&#x5B9E;&#x73B0;&#x6B27;&#x62C9;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Eular</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> res = x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt;= x; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (x%i == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            res = (res / i)*(i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span> (x%i == <span class="number">0</span>)</span><br><span class="line">                x = x / i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">        res = (res / x)*(x - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : gcd(b, a%b);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_i</span><span class="params">(<span class="keyword">int</span> &amp;n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x7684;n&#x5BF9;&#x5E94;&#x7684;&#x662F;&#x63A8;&#x5230;&#x91CC;&#x9762;&#x7684;p</span></span><br><span class="line">    <span class="comment">//&#x540C;&#x65F6;&#xFF0C;&#x8981;&#x628A;p&#x8F6C;&#x4E3A;p&apos;&#x6240;&#x4EE5;&#x8981;&#x7528;&#x5F15;&#x7528;</span></span><br><span class="line">    <span class="keyword">int</span> res1 = <span class="number">0</span>, res2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        n = n / <span class="number">2</span>;</span><br><span class="line">        res1++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">5</span> == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        n = n / <span class="number">5</span>;</span><br><span class="line">        res2++;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x5BF9;&#x5E94;&#x63A8;&#x5230;&#x91CC;&#x7684;i</span></span><br><span class="line">    <span class="keyword">return</span> max(res1, res2);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//&#x5FEB;&#x901F;&#x5E42;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x6C42;&#x4E86;mod</span></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b!=<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            res = (res*a) % mod;</span><br><span class="line">        a = (a*a) % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_length</span><span class="params">(<span class="keyword">int</span> phi, <span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//phi&#x662F;&#x6B27;&#x62C9;&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x503C;</span></span><br><span class="line">    <span class="comment">//&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#x662F;&#x63A8;&#x5230;&#x91CC;&#x7684;x&#xFF0C;&#x8868;&#x793A;j-i&#xFF0C;&#x4E3A;&#x957F;&#x5EA6;</span></span><br><span class="line">    <span class="keyword">int</span> minn = <span class="number">0x7FFFFFFF</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i*i &lt;= phi; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (phi%i == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (power(<span class="number">10</span>, i, mod) == <span class="number">1</span>)</span><br><span class="line">            {</span><br><span class="line">                minn = min(minn, i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (power(<span class="number">10</span>, phi / i, mod) == <span class="number">1</span>)</span><br><span class="line">            {</span><br><span class="line">                minn = min(minn, phi / i);</span><br><span class="line">                <span class="comment">//break;</span></span><br><span class="line">                <span class="comment">//&#x56E0;&#x4E3A;&#x6709;&#x53EF;&#x80FD;&#x8FD8;&#x6709;&#x66F4;&#x5C0F;&#x7684;</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> minn;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> p, q, a, b, g;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; p &gt;&gt; q;<span class="comment">//&#x8F93;&#x5165;p&#x548C;q</span></span><br><span class="line">    g = gcd(p, q);<span class="comment">//&#x6C42;&#x6700;&#x5927;&#x516C;&#x7EA6;&#x6570;</span></span><br><span class="line">    p = p / g; q = q / g;</span><br><span class="line">    a = p; b = q;</span><br><span class="line">    <span class="keyword">int</span> s = get_i(q);</span><br><span class="line">    <span class="keyword">int</span> phi = Eular(q);</span><br><span class="line">    <span class="keyword">int</span> length = get_length(phi, q);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (length == <span class="number">0x7FFFFFFF</span>)</span><br><span class="line">        s = length;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//-----------Print----------------</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a / b &lt;&lt; <span class="string">&apos;.&apos;</span>;</span><br><span class="line">    a = a - b * (a / b);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s+length; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (i == s)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;(&quot;</span>;</span><br><span class="line">        a *= <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a / b;</span><br><span class="line">        a = a - b * (a / b);</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (i == s + length - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;)&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><hr><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;POJ 3358&#xFF0C;<a href="https://nanti.jisuanke.com/t/42" target="_blank" rel="noopener">&#x8BA1;&#x849C;&#x5BA2;&#x5206;&#x6570;&#x5316;&#x5C0F;&#x6570;</a></p><p>&#x6CE8;&#xFF1A;&#x8BA1;&#x849C;&#x5BA2;&#x7684;&#x8BDD;&#xFF0C;&#x8981;&#x7528;long long &#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x7528; int &#x3002;</p>]]></content>
      
      <categories>
          
          <category> 算法题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> 找实习 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 欧拉定理 </tag>
            
            <tag> 欧拉函数 </tag>
            
            <tag> 循环小数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>视觉SLAM脑图</title>
      <link href="//posts/28186654/"/>
      <url>//posts/28186654/</url>
      <content type="html"><![CDATA[<p>&#x6CA1;&#x5199;&#x5B8C;&#xFF0C;v0.2&#x7248;&#x3002;</p><a id="more"></a><p><img src="/posts/28186654/&#x89C6;&#x89C9;SLAM-v0.2.jpg"></p>]]></content>
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 智能机器人 </tag>
            
            <tag> SLAM </tag>
            
            <tag> 计算机视觉 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>找实习的经验教训总结</title>
      <link href="//posts/e8bcf6f0/"/>
      <url>//posts/e8bcf6f0/</url>
      <content type="html"><![CDATA[<p>&#x4ECE;5.4&#x6B63;&#x5F0F;&#x5F00;&#x59CB;&#x627E;&#x5B9E;&#x4E60;&#x5230;&#x73B0;&#x5728;&#x5DF2;&#x7ECF;&#x8FC7;&#x4E86;10&#x5929;&#x4E86;&#xFF0C;&#x628A;&#x5FC3;&#x5F97;&#x4F53;&#x4F1A;&#xFF0C;&#x7ECF;&#x9A8C;&#x6559;&#x8BAD;&#xFF0C;&#x6240;&#x601D;&#x6240;&#x611F;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x3002; <a id="more"></a></p><h1 id="&#x7ECF;&#x9A8C;&#x603B;&#x7ED3;">&#x7ECF;&#x9A8C;&#x603B;&#x7ED3;</h1><h2 id="&#x5927;&#x516C;&#x53F8;or&#x5C0F;&#x516C;&#x53F8;">&#x5927;&#x516C;&#x53F8;or&#x5C0F;&#x516C;&#x53F8;</h2><p>&#x8FD9;&#x4E00;&#x6B21;&#x627E;&#x5B9E;&#x4E60;&#xFF0C;&#x6211;&#x53EA;&#x9762;&#x4E86;&#x516C;&#x53F8;&#xFF0C;&#x6CA1;&#x6709;&#x9762;&#x79D1;&#x7814;&#x9662;&#x6240;&#xFF08;&#x4E2D;&#x79D1;&#x9662;**&#x6240;or**&#x5B9E;&#x9A8C;&#x5BA4;&#xFF09;&#x3002;&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x79D1;&#x7814;&#x9662;&#x6240;&#x7684;&#x9762;&#x8BD5;&#x6211;&#x6CA1;&#x6709;&#x592A;&#x591A;&#x7684;&#x4F53;&#x4F1A;&#x3002;</p><p>&#x6211;&#x9762;&#x4E86;&#x5927;&#x6982;&#x6709;10+&#x516C;&#x53F8;&#xFF0C;&#x540E;&#x9762;&#x6536;&#x5230;&#x4E00;&#x4E9B;offer&#x4E4B;&#x540E;&#xFF0C;&#x4E0D;&#x60F3;&#x9762;&#x7684;&#x3001;&#x4E0D;&#x60F3;&#x53BB;&#x7684;&#x516C;&#x53F8;&#xFF0C;&#x6211;&#x5C31;&#x6CA1;&#x518D;&#x53C2;&#x52A0;&#x4ED6;&#x4EEC;&#x7684;&#x7B14;&#x8BD5;/&#x4E8C;&#x9762;&#x3002;&#x603B;&#x4F53;&#x4E0A;&#x800C;&#x8A00;&#xFF0C;&#x5927;&#x516C;&#x53F8;&#x7684;&#x9762;&#x8BD5;&#x66F4;&#x770B;&#x91CD;<strong>&#x201C;&#x4F60;&#x73B0;&#x5728;&#x7684;&#x57FA;&#x7840;&#x600E;&#x4E48;&#x6837;&#xFF0C;&#x7ECF;&#x8FC7;&#x6211;&#x4EEC;&#x7684;&#x57F9;&#x8BAD;&#xFF0C;&#x4F60;&#x5B66;&#x5F97;&#x80FD;&#x6709;&#x591A;&#x5FEB;&#xFF0C;&#x57F9;&#x8BAD;&#x7ED3;&#x675F;&#x540E;&#x4F60;&#x80FD;&#x5E72;&#x4EC0;&#x4E48;&#x201D;&#x3002;</strong>&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x5C0F;&#x516C;&#x53F8;&#xFF0C;&#x4ED6;&#x4EEC;&#x66F4;&#x770B;&#x91CD;&#x201C;&#x4F60;&#x73B0;&#x5728;&#x7684;&#x4E13;&#x4E1A;&#x6280;&#x80FD;&#x548C;&#x5C97;&#x4F4D;&#x5339;&#x914D;&#x7A0B;&#x5EA6;&#x5982;&#x4F55;&#xFF0C;&#x76F4;&#x767D;&#x4E00;&#x70B9;&#x7684;&#x8BF4;&#xFF0C;<strong>&#x4F60;&#x80FD;&#x9876;&#x5F97;&#x4E0A;&#x51E0;&#x4E2A;&#x6B63;&#x5F0F;&#x5458;&#x5DE5;</strong>&#x201D;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x6211;&#xFF0C;&#x5B9E;&#x4E60;&#x7684;&#x6700;&#x5927;&#x610F;&#x4E49;&#x662F;&#x7ED9;&#x6211;&#x4E00;&#x4E2A;&#x673A;&#x4F1A;&#x53BB;&#x6DF1;&#x5165;&#x4F53;&#x9A8C;&#xFF0C;&#x601D;&#x8003;&#xFF0C;&#x8BD5;&#x9519;&#x3002;&#x800C;&#x4E14;&#x6211;&#x6295;&#x7684;&#x5C97;&#x4F4D;&#x5927;&#x591A;&#x6570;&#x662F;&#x505A;&#x4E00;&#x4E9B;&#x975E;&#x5E38;&#x65B0;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x90A3;&#x4E48;&#x4E5F;&#x5C31;&#x4E0D;&#x592A;&#x53EF;&#x80FD;&#x8BA9;&#x6211;&#x53BB;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x8001;&#x65E7;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x505A;&#x4E00;&#x4E9B;&#x5F88;&#x65E0;&#x804A;&#x7684;&#x4E8B;&#x4E86;&#x3002;</p><p>&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x4E5F;&#x53EA;&#x6709;&#x5927;&#x516C;&#x53F8;&#x4F1A;&#x6709;&#x8F83;&#x5145;&#x8DB3;&#x7684;&#x4EBA;&#x529B;&#x7269;&#x529B;&#x53BB;&#x57F9;&#x8BAD;&#x4E00;&#x4E2A;&#x5B9E;&#x4E60;&#x751F;&#xFF0C;&#x8BA9;&#x4ED6;&#x5B66;&#x4E60;&#x4F01;&#x4E1A;&#x6587;&#x5316;&#xFF0C;&#x9879;&#x76EE;&#x6D41;&#x7A0B;&#xFF0C;&#x6307;&#x6D3E;&#x4E00;&#x4E2A;mentor&#x6765;&#x5E26;&#x3002;&#x521D;&#x521B;&#x56E2;&#x961F;&#x66F4;&#x591A;&#x7684;&#x8FD8;&#x662F;&#x5173;&#x6CE8;&#x8FD9;&#x4E2A;&#x5B9E;&#x4E60;&#x751F;&#x80FD;&#x4EA7;&#x51FA;&#x591A;&#x5C11;&#xFF0C;&#x662F;&#x5426;&#x503C;&#x7ED9;&#x4ED6;&#x5F00;&#x51FA;&#x7684;&#x85AA;&#x6C34;&#x3002;</p><p>PS&#xFF1A;&#x771F;&#x60F3;&#x5E72;&#x6D3B;&#x8D5A;&#x94B1;&#x7684;&#x8BDD;&#xFF0C;&#x53BB;&#x63A5;&#x5355;&#x505A;&#x79C1;&#x6D3B;&#x66F4;&#x8D5A;&#xFF0C;&#x6211;&#x6709;&#x4E2A;&#x540C;&#x5B66;&#x5728;&#x7814;&#x7A76;&#x751F;&#x5165;&#x5B66;&#x4E4B;&#x524D;&#x63A5;&#x79C1;&#x6D3B;&#xFF0C;&#x6708;&#x5165;1.5W&#x3002;</p><p>&#x6CE8;&#xFF1A;&#x8FD9;&#x91CC;&#x7684;&#x5927;&#x516C;&#x53F8;&#x662F;&#x6307;&#x5177;&#x6709;&#x4E00;&#x5B9A;&#x884C;&#x4E1A;&#x5F71;&#x54CD;&#x529B;&#x7684;&#x516C;&#x53F8;&#xFF0C;<strong>&#x89C4;&#x6A21;&#x5728;&#x72EC;&#x89D2;&#x517D;&#x53CA;&#x4EE5;&#x4E0A;</strong>&#x3002;&#x5F88;&#x591A;&#x72EC;&#x89D2;&#x517D;&#x516C;&#x53F8;&#x5BF9;&#x4E8E;&#x65B0;&#x4EBA;&#x7684;&#x57F9;&#x517B;&#x505A;&#x5F97;&#x975E;&#x5E38;&#x975E;&#x5E38;&#x5389;&#x5BB3;&#x3002;&#x5C11;&#x90E8;&#x5206;&#x5C0F;&#x516C;&#x53F8;&#x4E5F;&#x5F88;&#x770B;&#x91CD;&#x5BF9;&#x65B0;&#x4EBA;&#x7684;&#x57F9;&#x517B;&#x3002;</p><h2 id="&#x591A;&#x53BB;&#x6295;&#x591A;&#x53BB;&#x9762;">&#x591A;&#x53BB;&#x6295;&#xFF0C;&#x591A;&#x53BB;&#x9762;</h2><p>&#x5982;&#x540E;&#x6587;&#x6240;&#x8FF0;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6211;&#x662F;&#x6CA1;&#x60F3;&#x597D;&#x81EA;&#x5DF1;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#x7684;&#xFF0C;&#x5728;&#x548C;&#x4E00;&#x4E9B;&#x9762;&#x8BD5;&#x5B98;&#x8FDB;&#x884C;&#x6C9F;&#x901A;&#x4EA4;&#x6D41;&#x4E4B;&#x540E;&#xFF0C;&#x624D;&#x6E10;&#x6E10;&#x660E;&#x767D;&#x81EA;&#x5DF1;&#x60F3;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5EFA;&#x8BAE;&#x591A;&#x53BB;&#x6295;&#x7B80;&#x5386;&#xFF0C;&#x591A;&#x53BB;&#x9762;&#x3002;&#x8138;&#x76AE;&#x8981;&#x539A;&#xFF0C;&#x5FC3;&#x6001;&#x8981;&#x597D;&#xFF0C;&#x62FF;&#x4E86;offer&#x56FA;&#x7136;&#x9AD8;&#x5174;&#xFF0C;&#x88AB;&#x62D2;&#x4E5F;&#x4E0D;&#x8981;&#x6C14;&#x9981;&#xFF0C;&#x6BD5;&#x7ADF;&#x4E5F;&#x957F;&#x4E86;&#x89C1;&#x8BC6;&#xFF0C;&#x600E;&#x4E48;&#x7B97;&#x90FD;&#x662F;&#x4E0D;&#x4E8F;&#x7684;&#x3002;</p><p>&#x8BF4;&#x4E00;&#x4E2A;&#x6211;&#x88AB;&#x62D2;&#x7684;&#x4E8B;&#xFF0C;&#x5F88;&#x591A;&#x4EBA;&#x90FD;&#x8BF4;&#x5E73;&#x5B89;&#x79D1;&#x6280;&#x597D;&#x6295;&#xFF0C;&#x90FD;&#x5237;&#x4E00;&#x4E2A;&#x5E73;&#x5B89;&#x4FDD;&#x5E95;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x6211;&#x6295;&#x5E73;&#x5B89;&#x79D1;&#x6280;&#xFF0C;&#x5728;&#x7B80;&#x5386;&#x7B5B;&#x9009;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x88AB;&#x62D2;&#x4E86;&#xFF0C;&#x5F53;&#x65F6;&#x6211;&#x4E5F;&#x7279;&#x522B;&#x90C1;&#x95F7;&#xFF0C;&#x6211;&#x5FC3;&#x60F3;&#xFF0C;&#x6211;TM&#x518D;&#x600E;&#x4E48;&#x83DC;&#xFF0C;&#x4E5F;&#x4E0D;&#x81F3;&#x4E8E;&#x5728;&#x7B80;&#x5386;&#x4E0A;&#x5C31;&#x88AB;&#x6302;&#x4E86;&#x5427;&#xFF1F;&#x540E;&#x6765;&#x4E5F;&#x6162;&#x6162;&#x60F3;&#x5F00;&#x4E86;&#xFF0C;&#x5509;&#xFF0C;&#x88AB;&#x62D2;&#x5C31;&#x88AB;&#x62D2;&#x5427;&#xFF0C;&#x968F;&#x4ED6;&#x53BB;&#x5427;&#xFF0C;&#x5FC3;&#x6001;&#x653E;&#x5E73;&#x3002;</p><h2 id="&#x8138;&#x76AE;&#x8981;&#x539A;&#x4E3B;&#x52A8;&#x4E89;&#x53D6;&#x673A;&#x4F1A;">&#x8138;&#x76AE;&#x8981;&#x539A;&#xFF0C;&#x4E3B;&#x52A8;&#x4E89;&#x53D6;&#x673A;&#x4F1A;</h2><p>&#x9762;&#x534E;&#x4E3A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x5206;&#x4E24;&#x5929;&#x8FDB;&#x884C;&#xFF0C;&#x6211;&#x662F;&#x7B2C;&#x4E00;&#x5929;&#xFF0C;&#x9762;&#x6211;&#x7684;&#x9762;&#x8BD5;&#x5B98;&#x662F;WLAN&#x7EC4;&#x7684;&#xFF0C;&#x4E5F;&#x628A;&#x6211;&#x5206;&#x5230;&#x4E86;WLAN&#x7EC4;&#xFF0C;&#x6211;&#x4E0D;&#x592A;&#x60F3;&#x505A;&#x3002;&#x7B2C;&#x4E8C;&#x5929;&#x6709;&#x4E2D;&#x592E;&#x7814;&#x7A76;&#x9662;&#x7684;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x7EC4;&#x6765;&#x9762;&#xFF0C;&#x6211;&#x542C;&#x8BF4;&#x4E86;&#x6D88;&#x606F;&#xFF0C;&#x6211;&#x5C31;&#x53BB;&#x7533;&#x8BF7;&#x9738;&#x9762;&#x4E86;&#xFF0C;HR&#x770B;&#x4E86;&#x770B;&#x6211;&#x7684;&#x9762;&#x8BD5;&#x8BB0;&#x5F55;&#xFF0C;&#x4E5F;&#x4E0E;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x5173;&#x7CFB;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x5C31;&#x540C;&#x610F;&#x4E86;&#x3002;&#x540E;&#x6765;&#x4E5F;&#x662F;&#x9762;&#x5F97;&#x633A;&#x597D;&#x7684;&#x3002;</p><p>Intel&#x4E00;&#x5F00;&#x59CB;&#x53D1;&#x7ED9;&#x6211;&#x7684;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x7EC4;&#x7684;offer&#xFF0C;&#x6211;&#x4E5F;&#x4E0D;&#x592A;&#x60F3;&#x53BB;&#xFF0C;&#x591A;&#x65B9;&#x6253;&#x542C;&#xFF0C;&#x8054;&#x7CFB;&#x5230;&#x4E86;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x7EC4;&#x7684;&#x8D1F;&#x8D23;&#x4EBA;&#xFF0C;&#x53C8;&#x5411;&#x4ED6;&#x6BDB;&#x9042;&#x81EA;&#x8350;&#xFF0C;&#x6700;&#x540E;&#x4E5F;&#x8F6C;&#x5C97;&#x6210;&#x529F;&#x3002;</p><p>&#x8FD8;&#x662F;&#x90A3;&#x53E5;&#x8001;&#x8BDD;&#xFF0C;&#x673A;&#x4F1A;&#x662F;&#x81EA;&#x5DF1;&#x4E89;&#x53D6;&#x6765;&#x7684;&#xFF0C;&#x627E;&#x5DE5;&#x4F5C;&#x5C31;&#x662F;&#x628A;&#x81EA;&#x5DF1;&#x5F80;&#x5916;&#x63A8;&#x9500;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x8138;&#x76AE;&#x8981;&#x539A;&#x3002;</p><h2 id="&#x535A;&#x5BA2;&#x5E2E;&#x52A9;&#x5F88;&#x5927;">&#x535A;&#x5BA2;&#x5E2E;&#x52A9;&#x5F88;&#x5927;</h2><p>&#x6709;&#x5F88;&#x591A;&#x4F53;&#x9A8C;&#x4E0D;&#x9519;&#x7684;&#x9762;&#x8BD5;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x90FD;&#x7531;&#x8BE6;&#x7EC6;&#x7684;&#x6D4F;&#x89C8;&#x6211;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x76F8;&#x5BF9;&#x4E8E;&#x6211;&#x5199;&#x7684;&#x5F88;&#x632B;&#x7684;&#x7B80;&#x5386;&#xFF0C;&#x535A;&#x5BA2;&#x6551;&#x4E86;&#x6211;&#x4E00;&#x547D;&#x3002;</p><p>&#x6240;&#x4EE5;&#xFF0C;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x7684;&#x8BDD;&#xFF0C;&#x5199;&#x4E00;&#x4E2A;&#x535A;&#x5BA2;&#xFF0C;&#x4F5C;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x79EF;&#x7D2F;&#x548C;&#x6C89;&#x6DC0;&#x5427;&#x3002;</p><h2 id="&#x5B89;&#x6392;&#x597D;&#x9762;&#x8BD5;&#x65F6;&#x95F4;">&#x5B89;&#x6392;&#x597D;&#x9762;&#x8BD5;&#x65F6;&#x95F4;</h2><p>&#x8FD9;&#x4E00;&#x5468;&#x6211;&#x9762;&#x4E86;&#x5F88;&#x591A;&#x5BB6;&#x516C;&#x53F8;&#xFF0C;&#x5E38;&#x5E38;&#x662F;&#x4E00;&#x5929;&#x8981;&#x51C6;&#x5907;&#x597D;&#x51E0;&#x573A;&#x9762;&#x8BD5;&#xFF0C;&#x6211;&#x90FD;&#x628A;&#x9762;&#x8BD5;&#x5B89;&#x6392;&#x8BB0;&#x5230;&#x4E00;&#x4E2A;&#x5C0F;&#x672C;&#x5B50;&#x4E0A;&#xFF0C;&#x6211;&#x4F1A;&#x5728;&#x9762;&#x8BD5;&#x524D;&#x534A;&#x5C0F;&#x65F6;&#x5C31;&#x51C6;&#x5907;&#x597D;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x5E0C;&#x671B;&#x5BF9;&#x65B9;&#x80FD;&#x9075;&#x5B88;&#x65F6;&#x95F4;&#x3002;</p><p>&#x8FD9;&#x4E00;&#x5468;&#x6211;&#x88AB;&#x4E00;&#x5BB6;&#x4E91;&#x8BA1;&#x7B97;&#x516C;&#x53F8;&#x62D6;&#x8FC7;&#x9762;&#x8BD5;&#x65F6;&#x95F4;&#xFF08;&#x7EA6;&#x5B9A;&#x4E0B;&#x5348;2&#x70B9;&#x5F00;&#x59CB;&#xFF0C;5&#x70B9;&#x90FD;&#x6CA1;&#x9762;&#x5B8C;&#xFF09;&#xFF0C;&#x4E5F;&#x8FDF;&#x5230;&#x8FC7;&#x4E24;&#x573A;&#x9762;&#x8BD5;&#xFF08;&#x6709;&#x4E00;&#x5929;&#x7279;&#x522B;&#x60F3;&#x5BB6;&#xFF0C;&#x5FC3;&#x60C5;&#x7279;&#x522B;&#x4F4E;&#x843D;&#xFF09;&#xFF0C;&#x5F15;&#x4EE5;&#x4E3A;&#x6212;&#xFF0C;&#x6DF1;&#x611F;&#x6B49;&#x610F;&#x3002;</p><hr><h1 id="&#x6559;&#x8BAD;&#x603B;&#x7ED3;">&#x6559;&#x8BAD;&#x603B;&#x7ED3;</h1><h2 id="&#x65B9;&#x5411;&#x5B9A;&#x7684;&#x665A;">&#x65B9;&#x5411;&#x5B9A;&#x7684;&#x665A;</h2><p>&#x6211;&#x4E00;&#x5F00;&#x59CB;&#x6839;&#x672C;&#x6CA1;&#x60F3;&#x597D;&#x6211;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x6211;&#x60F3;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x751A;&#x81F3;&#x8FDE;&#x6211;&#x80FD;&#x505A;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x77E5;&#x9053;&#x3002;&#x6240;&#x4EE5;&#x6295;&#x7B80;&#x5386;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x90FD;&#x662F;&#x778E;&#x6295;&#x7684;&#xFF0C;&#x51E1;&#x662F;&#x5C97;&#x4F4D;&#x63CF;&#x8FF0;&#x4E0E;&#x6211;&#x7B80;&#x5386;&#x6CBE;&#x70B9;&#x8FB9;&#x7684;&#x6211;&#x90FD;&#x6295;&#x4E86;&#xFF0C;&#x90A3;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x7684;&#x7B80;&#x5386;&#x6CA1;&#x6709;&#x91CD;&#x70B9;&#xFF0C;&#x5B8C;&#x5168;&#x770B;&#x4E0D;&#x51FA;&#x6211;&#x7684;&#x5DE5;&#x4F5C;&#x610F;&#x5411;&#x3002;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x662F;&#x6211;&#x7684;&#x8BD5;&#x9519;&#x8FC7;&#x7A0B;&#x3002;<del>&#x7ADF;&#x7136;&#x8FD8;&#x6536;&#x5230;&#x4E86;&#x51E0;&#x4E2A;offer&#x3002;</del></p><p>&#x540E;&#x6765;&#x6211;&#x60F3;&#x6E05;&#x695A;&#x4E86;&#x6211;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x624D;&#x5F00;&#x59CB;&#x66F4;&#x6709;&#x9488;&#x5BF9;&#x6027;&#x7684;&#x6295;&#x3002;</p><h2 id="&#x7B80;&#x5386;&#x6295;&#x5F97;&#x665A;">&#x7B80;&#x5386;&#x6295;&#x5F97;&#x665A;</h2><p>&#x57FA;&#x672C;&#x4E0A;&#x8FC7;&#x5B8C;&#x5E74;&#xFF0C;&#x6625;&#x62DB;&#x5C31;&#x5F00;&#x59CB;&#x4E86;&#x3002;&#x8D8A;&#x65E9;&#x6295;&#x7B80;&#x5386;&#xFF0C;&#x673A;&#x4F1A;&#x8D8A;&#x5927;&#x3002;&#x6211;&#x5C31;&#x662F;&#x6295;&#x7684;&#x592A;&#x665A;&#x4E86;&#xFF0C; &#x50CF;&#x4E00;&#x4E9B;&#x5916;&#x4F01;&#xFF08;&#x601D;&#x79D1;&#x7B49;&#xFF09;&#x548C;&#x817E;&#x8BAF;&#x548C;&#x963F;&#x91CC;&#x57FA;&#x672C;&#x4E0A;&#x5DF2;&#x7ECF;&#x7ED3;&#x675F;&#x4E86;&#x6625;&#x62DB;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x7684;&#x7B80;&#x5386;&#x8FDE;&#x88AB;&#x635E;&#x7684;&#x673A;&#x4F1A;&#x90FD;&#x6CA1;&#x4E86;&#xFF0C;&#x53EA;&#x80FD;&#x7B49;&#x79CB;&#x62DB;&#x3002;</p><p>&#x8BB0;&#x4F4F;&#x51E0;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#xFF0C;&#x6625;&#x62DB;&#xFF1A;&#x91D1;&#x4E09;&#x94F6;&#x56DB;&#xFF0C;3&#x6708;&#x5C31;&#x5F00;&#x59CB;&#x4E86;&#x3002;&#x79CB;&#x62DB;&#xFF1A;7&#x6708;&#x4E2D;&#x63D0;&#x524D;&#x6279;&#x5F00;&#x59CB;&#xFF0C;&#x91D1;&#x4E5D;&#x94F6;&#x5341;&#x3002;</p><h2 id="&#x51C6;&#x5907;&#x4E0D;&#x5145;&#x5206;">&#x51C6;&#x5907;&#x4E0D;&#x5145;&#x5206;</h2><p>&#x9762;&#x8BD5;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x53CD;&#x6620;&#x51FA;&#x6765;&#x4E86;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x66FE;&#x7ECF;&#x5B66;&#x8FC7;&#x7684;&#x4E1C;&#x897F;&#x90FD;&#x5FD8;&#x4E86;&#xFF0C;&#x590D;&#x4E60;&#x5F97;&#x4E0D;&#x591F;&#x3002;&#x671F;&#x4E2D;&#x8003;&#x5B8C;&#x7ACB;&#x9A6C;&#x5C31;&#x8981;&#x627E;&#x5B9E;&#x4E60;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x4E94;&#x4E00;&#x671F;&#x95F4;&#x5237;&#x4E86;&#x4E00;&#x4E9B;&#x7B97;&#x6CD5;&#x9898;&#xFF0C;&#x627E;&#x4E86;&#x627E;&#x624B;&#x611F;&#xFF0C;&#x6211;&#x7684;&#x9762;&#x8BD5;&#x57FA;&#x672C;&#x4E0A;&#x7C7B;&#x4F3C;&#x4E8E;&#x88F8;&#x9762;&#x3002;&#x5982;&#x679C;&#x518D;&#x7ED9;&#x6211;&#x4E00;&#x4E2A;&#x6708;&#x7684;&#x65F6;&#x95F4;&#x53BB;&#x51C6;&#x5907;&#x590D;&#x4E60;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x5E94;&#x8BE5;&#x80FD;&#x8868;&#x73B0;&#x5F97;&#x66F4;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x4F30;&#x8BA1;&#x5230;&#x65F6;&#x5019;&#x9EC4;&#x82B1;&#x83DC;&#x90FD;&#x51C9;&#x4E86;&#x3002;</p><p><strong>&#x8BF4;&#x767D;&#x4E86;&#x5C31;&#x662F;&#x83DC;&#xFF0C;&#x6CA1;&#x6709;&#x522B;&#x7684;&#x7406;&#x7531;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x539F;&#x56E0;&#x5C31;&#x662F;&#x6211;&#x592A;&#x83DC;&#x3002;</strong></p><h1 id="&#x5176;&#x4ED6;&#x5FC3;&#x5F97;&#x4F53;&#x4F1A;">&#x5176;&#x4ED6;&#x5FC3;&#x5F97;&#x4F53;&#x4F1A;</h1><h2 id="&#x7B97;&#x6CD5;or&#x5F00;&#x53D1;">&#x7B97;&#x6CD5;or&#x5F00;&#x53D1;&#xFF1F;</h2><p>&#x5C31;&#x6211;&#x627E;&#x5B9E;&#x4E60;&#x7684;&#x4F53;&#x9A8C;&#x6765;&#x770B;&#xFF0C;&#x7B97;&#x6CD5;&#x5C97;&#x4ECD;&#x7136;&#x6BD4;&#x5F00;&#x53D1;&#x5C97;&#x96BE;&#x627E;&#x3002;&#x7EAF;&#x7B97;&#x6CD5;&#x7814;&#x7A76;&#xFF08;research&#xFF09;&#x66F4;&#x662F;&#x96BE;&#x4E0A;&#x52A0;&#x96BE;&#x3002;&#x867D;&#x7136;&#x5F88;&#x591A;&#x516C;&#x53F8;&#x7ED9;&#x4E86;&#x9762;&#x8BD5;&#x673A;&#x4F1A;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x7B80;&#x5386;&#x7B5B;&#x9009;&#x4E0A;&#x5C31;&#x628A;&#x6211;&#x62D2;&#x4E86;&#x7684;&#x4ECD;&#x4E0D;&#x5728;&#x5C11;&#x6570;&#x3002;</p><p>&#x5EFA;&#x8BAE;&#x627E;&#x7B97;&#x6CD5;&#x5C97;&#x7684;&#x540C;&#x5B66;&#x6700;&#x597D;&#x80FD;<strong>&#x540C;&#x65F6;&#x6709;</strong>&#x4E00;&#x7BC7;B&#x4F1A;+&#x8FC7;&#x786C;&#x7684;&#x9879;&#x76EE;/&#x6BD4;&#x8D5B;&#x7ECF;&#x5386;+&#x624E;&#x5B9E;&#x7684;&#x7F16;&#x7A0B;/&#x7B97;&#x6CD5;&#x529F;&#x5E95;+&#x4E00;&#x4EFD;&#x5927;&#x5382;&#x6709;&#x4EF7;&#x503C;&#x7684;&#x5B9E;&#x4E60;&#x7ECF;&#x5386;&#x3002;&#x6211;&#x89C9;&#x5F97;&#x53EA;&#x6709;<strong>&#x540C;&#x65F6;</strong>&#x6EE1;&#x8DB3;&#x4EE5;&#x4E0A;4&#x4E2A;&#x6761;&#x4EF6;&#xFF0C;&#x627E;&#x5DE5;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x624D;&#x80FD;&#x505A;&#x5230;&#x6709;&#x8F83;&#x5927;&#x628A;&#x63E1;&#x3002;</p><h2 id="&#x9009;&#x62E9;&#x6743;&#x7684;&#x95EE;&#x9898;">&#x9009;&#x62E9;&#x6743;&#x7684;&#x95EE;&#x9898;</h2><p>&#x4E4B;&#x524D;&#x770B;&#x8FC7;&#x8FD9;&#x4E48;&#x4E00;&#x53E5;&#x8BDD;&#xFF1A;&#x201C;&#x80FD;&#x591F;&#x5728;&#x4E00;&#x8D77;&#x6109;&#x5FEB;&#x73A9;&#x800D;&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x662F;&#x53CC;&#x65B9;&#x90FD;&#x6709;&#x6380;&#x684C;&#x5B50;&#x7684;&#x80FD;&#x529B;&#x548C;&#x4E0D;&#x6380;&#x684C;&#x5B50;&#x7684;&#x4FEE;&#x517B;&#x3002;&#x751F;&#x610F;&#x5982;&#x6B64;&#xFF0C;&#x5A5A;&#x59FB;&#x4EA6;&#x5982;&#x6B64;&#x3002;&#x201D;</p><p>&#x6211;&#x5BF9;&#x4E8E;&#x8FD9;&#x53E5;&#x8BDD;&#x7684;&#x7406;&#x89E3;&#x662F;&#xFF0C;&#x65E2;&#x8981;&#x6709;&#x5951;&#x7EA6;&#x7CBE;&#x795E;&#xFF0C;&#x4E5F;&#x8981;&#x5728;&#x5BF9;&#x65B9;&#x4F5C;&#x51FA;&#x51FA;&#x683C;&#x4E3E;&#x52A8;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6709;&#x4FDD;&#x62A4;&#x81EA;&#x5DF1;&#x7684;&#x80FD;&#x529B;&#x3002;</p><p>&#x65B0;&#x95FB;&#x4E0A;&#x4E5F;&#x62A5;&#x5230;&#x51FA;&#x5F88;&#x591A;&#x65E0;&#x826F;&#x5BFC;&#x5E08;&#x7684;&#x4E8B;&#x8FF9;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x5728;&#x4EFB;&#x4F55;&#x65F6;&#x5019;&#x628A;&#x9009;&#x62E9;&#x6743;&#x7559;&#x5728;&#x81EA;&#x5DF1;&#x624B;&#x91CC;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x3002;</p><h1 id="&#x6700;&#x540E;&#x7684;&#x53BB;&#x5411;">&#x6700;&#x540E;&#x7684;&#x53BB;&#x5411;</h1><p>&#x6700;&#x540E;&#x6211;&#x53BB;&#x4E86;&#x82F1;&#x7279;&#x5C14;&#x4E2D;&#x56FD;&#x7814;&#x7A76;&#x4E2D;&#x5FC3;&#xFF0C;&#x53BB;&#x505A;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x7684;&#x4EFF;&#x771F;&amp;&#x51B3;&#x7B56;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 经验教训 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验教训 </tag>
            
            <tag> 总结 </tag>
            
            <tag> 找实习 </tag>
            
            <tag> 实习周 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-Advanced-Level题解</title>
      <link href="//posts/79c0eafd/"/>
      <url>//posts/79c0eafd/</url>
      <content type="html"><![CDATA[<p>&#x4EE3;&#x7801;<a href="https://github.com/littlesevenmo/PAT-Advanced-Level" target="_blank" rel="noopener">&#x8BF7;&#x70B9;&#x8FD9;&#x91CC;</a></p><p>&#x9898;&#x89E3;&#x4F1A;&#x5728;<strong>&#x4E0D;&#x5FD9;</strong>&#x7684;&#x65F6;&#x5019;&#x66F4;&#x65B0;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>未归档的算法题</title>
      <link href="//posts/3bb23225/"/>
      <url>//posts/3bb23225/</url>
      <content type="html"><![CDATA[<p>&#x672A;&#x5F52;&#x6863;&#x7684;&#x7B97;&#x6CD5;&#x9898;</p><a id="more"></a><h1 id="&#x534E;&#x4E3A;-&#x5C0F;&#x738B;&#x7684;&#x5BC6;&#x7801;">2019&#x534E;&#x4E3A;-&#x5C0F;&#x738B;&#x7684;&#x5BC6;&#x7801;</h1><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x5C0F;&#x738B;&#x7684;&#x4FDD;&#x9669;&#x7BB1;&#x5BC6;&#x7801;&#x662F;&#x4E00;&#x4E2A;&#x5347;&#x5E8F;&#x6392;&#x5217;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x4F46;&#x662F;&#x5C0F;&#x738B;&#x603B;&#x662F;&#x8BB0;&#x4E0D;&#x4F4F;&#x4ED6;&#x7684;&#x5BC6;&#x7801;&#xFF0C;&#x4E8E;&#x662F;&#x5C0F;&#x738B;&#x5C06;&#x4ED6;&#x7684;&#x5BC6;&#x7801;&#x52A0;&#x5BC6;&#x540E;&#x4FDD;&#x5B58;&#x5728;&#x4E86;&#x4E00;&#x4E2A;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x91CC;&#xFF0C;&#x52A0;&#x5BC6;&#x7684;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p><ol type="1"><li>&#x7528;&#x6570;&#x5B57;&#x7684;&#x82F1;&#x6587;&#x5355;&#x8BCD;&#x6765;&#x4EE3;&#x66FF;&#x6570;&#x5B57;&#x672C;&#x8EAB;&#x3002;&#x6BD4;&#x5982;1234699&#x53D8;&#x6210;onethreefoursixninenine</li><li>&#x5C06;&#x4E0A;&#x8FF0;&#x5B57;&#x7B26;&#x4E32;&#x4F7F;&#x7528;&#x201C;&#x5C0F;&#x738B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x201D;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;&#x8BE5;&#x7B97;&#x6CD5;&#x4F1A;&#x6309;&#x7167;&#x67D0;&#x79CD;&#x89C4;&#x5219;&#x6765;&#x6539;&#x53D8;&#x539F;&#x5B57;&#x7B26;&#x4E32;&#x5B57;&#x7B26;&#x7684;&#x6392;&#x5217;&#x987A;&#x5E8F;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x4F1A;&#x6539;&#x53D8;&#x67D0;&#x4E9B;&#x5B57;&#x6BCD;&#x7684;&#x5927;&#x5C0F;&#x5199;&#x3002;&#x6BD4;&#x5982;onethreefoursixninenine&#x7ECF;&#x8FC7;&#x52A0;&#x5BC6;&#x540E;&#x5C31;&#x53D8;&#x6210;&#x4E86;NeNohuiroNNiNeteefersix&#x3002;</li></ol><p>&#x7531;&#x4E8E;&#x201C;&#x5C0F;&#x738B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x201D;&#x662F;&#x5C0F;&#x738B;&#x81EA;&#x5DF1;&#x8BBE;&#x8BA1;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5C0F;&#x738B;&#x8BA4;&#x4E3A;&#x53EA;&#x6709;&#x4ED6;&#x81EA;&#x5DF1;&#x80FD;&#x5C06;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8FD8;&#x539F;&#x3002;</p><p>&#x5B9E;&#x9645;&#x4E0A;&#x5C0F;&#x738B;&#x7684;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x5B58;&#x5728;&#x6F0F;&#x6D1E;&#x3002;&#x5373;&#x4F7F;&#x4E0D;&#x77E5;&#x9053;&#x201C;&#x5C0F;&#x738B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x201D;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#xFF0C;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x8FD8;&#x539F;&#x51FA;&#x539F;&#x59CB;&#x7684;&#x5BC6;&#x7801;&#x7684;&#x3002;&#x8BF7;&#x4F60;&#x5199;&#x4E00;&#x6BB5;&#x7A0B;&#x5E8F;&#x6765;&#x7834;&#x89E3;&#x5C0F;&#x738B;&#x7684;&#x5BC6;&#x7801;&#x3002;</p><hr><p>2019&#x534E;&#x4E3A;&#x6625;&#x62DB;&#x673A;&#x8BD5;&#x9898;</p><h2 id="&#x793A;&#x4F8B;1">&#x793A;&#x4F8B;1</h2><p>&#x8F93;&#x5165;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oNEthrEEfoursixNiNENiEN</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x51FA;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">134699</span><br></pre></td></tr></table></figure><h2 id="&#x6211;&#x7684;&#x7B54;&#x6848;">&#x6211;&#x7684;&#x7B54;&#x6848;</h2><h3 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h3><ol type="1"><li>&#x5C0F;&#x738B;&#x7684;&#x4FDD;&#x9669;&#x7BB1;&#x5BC6;&#x7801;&#x662F;<strong>&#x5347;&#x5E8F;</strong>&#x6392;&#x5217;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;</li><li>&#x6570;&#x5B57;&#x7528;&#x5B57;&#x6BCD;&#x6765;&#x4EE3;&#x66FF;&#x3002;</li><li>&#x53EA;&#x6539;&#x53D8;&#x5B57;&#x6BCD;&#x7684;&#x6392;&#x5217;&#x987A;&#x5E8F;&#xFF0C;&#x4E0D;&#x505A;&#x66FF;&#x6362;&#xFF08;&#x5373;&#x7528;&#x522B;&#x7684;&#x5B57;&#x6BCD;&#x4EE3;&#x66FF;&#xFF09;&#x3002;</li></ol><p>&#x5C06;&#x6240;&#x6709;&#x7684;&#x6570;&#x5B57;&#x4E0E;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x6BCD;&#x5217;&#x51FA;</p><table><thead><tr class="header"><th style="text-align: center;">&#x6570;&#x5B57;</th><th style="text-align: center;">&#x5B57;&#x6BCD;</th><th style="text-align: center;">&#x72EC;&#x6709;&#x7684;&#x5B57;&#x7B26;</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">0</td><td style="text-align: center;">zero</td><td style="text-align: center;">z</td></tr><tr class="even"><td style="text-align: center;">1</td><td style="text-align: center;">one</td><td style="text-align: center;">o-0-2-4</td></tr><tr class="odd"><td style="text-align: center;">2</td><td style="text-align: center;">two</td><td style="text-align: center;">w</td></tr><tr class="even"><td style="text-align: center;">3</td><td style="text-align: center;">three</td><td style="text-align: center;">h-8</td></tr><tr class="odd"><td style="text-align: center;">4</td><td style="text-align: center;">four</td><td style="text-align: center;">u</td></tr><tr class="even"><td style="text-align: center;">5</td><td style="text-align: center;">five</td><td style="text-align: center;">f-4</td></tr><tr class="odd"><td style="text-align: center;">6</td><td style="text-align: center;">six</td><td style="text-align: center;">x</td></tr><tr class="even"><td style="text-align: center;">7</td><td style="text-align: center;">seven</td><td style="text-align: center;">s-6</td></tr><tr class="odd"><td style="text-align: center;">8</td><td style="text-align: center;">eight</td><td style="text-align: center;">g</td></tr><tr class="even"><td style="text-align: center;">9</td><td style="text-align: center;">nine</td><td style="text-align: center;">i-5-6-8</td></tr></tbody></table><p>&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#xFF1A;&#x5728;&#x8FD9;10&#x4E2A;&#x6570;&#x5B57;&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x5B57;&#x6BCD;&#x201D;z&#x201C;&#xFF0C;&#x53EA;&#x5728;zero&#x4E2D;&#x51FA;&#x73B0;&#x3002;&#x5176;&#x4ED6;&#x7684;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x5B57;&#x6BCD;&#x201C;h&#x201D;&#xFF0C;&#x53EA;&#x5728;3&#x548C;8&#x7684;&#x82F1;&#x6587;&#x4E2D;&#x51FA;&#x73B0;&#xFF0C;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x3002;</p><p>&#x56E0;&#x6B64;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x5B57;&#x6BCD;&#x8FDB;&#x884C;&#x7EDF;&#x8BA1;&#x51FA;&#x73B0;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5047;&#x5982;z&#x51FA;&#x73B0;3&#x6B21;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x6570;&#x5B57;0&#x51FA;&#x73B0;&#x4E86;3&#x6B21;&#xFF0C;&#x540C;&#x65F6;&#x5C06;&#x201C;zero&#x201D;&#x56DB;&#x4E2A;&#x5B57;&#x6BCD;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x540C;&#x65F6;&#x51CF;3&#x3002;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;</p><h3 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0----zzero</span></span><br><span class="line"><span class="comment">2----wtwo</span></span><br><span class="line"><span class="comment">4----ufour</span></span><br><span class="line"><span class="comment">6----xsix</span></span><br><span class="line"><span class="comment">8----geight</span></span><br><span class="line"><span class="comment">3----h-8three</span></span><br><span class="line"><span class="comment">5----f-4five</span></span><br><span class="line"><span class="comment">7----s-6seven</span></span><br><span class="line"><span class="comment">9----i-5-6-8nine</span></span><br><span class="line"><span class="comment">1----o-0-2-4one</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">string</span> input;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; input;</span><br><span class="line">    transform(input.begin(), input.end(), input.begin(), ::<span class="built_in">tolower</span>);</span><br><span class="line">    <span class="comment">//cout &lt;&lt; input &lt;&lt; endl;//&#x53D8;&#x5C0F;&#x5199;</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; input.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (!m.count(input[i]))</span><br><span class="line">            m[input[i]] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            m[input[i]] = m[input[i]] + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x5148;&#x5904;&#x7406;0</span></span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">11</span>] = { <span class="number">0</span> };</span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;z&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;0</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">0</span>] = m[<span class="string">&apos;z&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;z&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">        m[<span class="string">&apos;r&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;w&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;2</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">2</span>] = m[<span class="string">&apos;w&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;t&apos;</span>] -= num[<span class="number">2</span>];</span><br><span class="line">        m[<span class="string">&apos;w&apos;</span>] -= num[<span class="number">2</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">2</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;u&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;4</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">4</span>] = m[<span class="string">&apos;u&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;f&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">        m[<span class="string">&apos;u&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">        m[<span class="string">&apos;r&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;x&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;6</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">6</span>] = m[<span class="string">&apos;x&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;s&apos;</span>] -= num[<span class="number">6</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">6</span>];</span><br><span class="line">        m[<span class="string">&apos;x&apos;</span>] -= num[<span class="number">6</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;g&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;8</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">8</span>] = m[<span class="string">&apos;g&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;g&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;h&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;t&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;h&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;3</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">3</span>] = m[<span class="string">&apos;h&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;t&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;h&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;r&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;f&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;5</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">5</span>] = m[<span class="string">&apos;f&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;f&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">        m[<span class="string">&apos;v&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;s&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;7</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">7</span>] = m[<span class="string">&apos;s&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;s&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;v&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;i&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;9</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">9</span>] = m[<span class="string">&apos;i&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;o&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;16</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">1</span>] = m[<span class="string">&apos;o&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">1</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">1</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; num[i]; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x534E;&#x4E3A;-&#x65CB;&#x8F6C;&#x77E9;&#x9635;">2019&#x534E;&#x4E3A;-&#x65CB;&#x8F6C;&#x77E9;&#x9635;</h1><h2 id="&#x9898;&#x76EE;&#x5927;&#x610F;">&#x9898;&#x76EE;&#x5927;&#x610F;</h2><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;N*N&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x6C42;&#x5176;&#x5411;&#x53F3;&#x65CB;&#x8F6C;m&#x6B21;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6BCF;&#x6B21;&#x65CB;&#x8F6C;90&#xB0;&#x3002;</p><h2 id="&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;">&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;</h2><p>&#x8003;&#x5BDF;&#x5FAA;&#x73AF;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;v(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        v[i].resize(n);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; v[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">    m = m % <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[j][i];</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">2</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = n<span class="number">-1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[i][j];</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">3</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n ; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[j][i]&lt;&lt;<span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[i][j];</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x534E;&#x4E3A;-&#x5C0F;&#x670B;&#x53CB;&#x7684;&#x793C;&#x7269;">2019&#x534E;&#x4E3A;-&#x5C0F;&#x670B;&#x53CB;&#x7684;&#x793C;&#x7269;</h1><h2 id="&#x9898;&#x76EE;&#x5927;&#x610F;-1">&#x9898;&#x76EE;&#x5927;&#x610F;</h2><p>&#x6709;N&#x4E2A;&#x793C;&#x7269;&#x548C;k&#x4E2A;&#x5C0F;&#x670B;&#x53CB;&#xFF0C;&#x8BF7;&#x95EE;&#x6709;&#x591A;&#x5C11;&#x79CD;&#x5206;&#x793C;&#x7269;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5E76;&#x628A;&#x5B83;&#x4EEC;&#x5168;&#x90FD;&#x663E;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x7528;*&#x8868;&#x793A;&#x793C;&#x7269;&#xFF0C;&#x7528;|&#x6765;&#x5206;&#x5272;&#x5C0F;&#x670B;&#x53CB;&#x3002;</p><h2 id="&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;-1">&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;</h2><p>&#x8003;&#x5BDF;DFS</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp :res)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//cout &lt;&lt; res.size() &lt;&lt; endl;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp[<span class="number">0</span>]; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;*&apos;</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; k; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;|&apos;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; temp[i]; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;*&apos;</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> gift, <span class="keyword">int</span> curChild,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (curChild == k - <span class="number">1</span>)<span class="comment">//&#x662F;&#x6700;&#x540E;&#x4E00;&#x4E2A;</span></span><br><span class="line">    {</span><br><span class="line">        temp[curChild] = gift;</span><br><span class="line">        res.push_back(temp);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (gift == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        res.push_back(temp);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = gift; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        temp[curChild] = i;</span><br><span class="line">        dfs(gift - i, curChild + <span class="number">1</span>, temp);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp(k, <span class="number">0</span>);</span><br><span class="line">    dfs(n, <span class="number">0</span>, temp);</span><br><span class="line">    display();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x534E;&#x4E3A;-&#x6C42;&#x7F16;&#x8F91;&#x8DDD;&#x79BB;">2019&#x534E;&#x4E3A;-&#x6C42;&#x7F16;&#x8F91;&#x8DDD;&#x79BB;</h1><h2 id="&#x9898;&#x76EE;&#x5927;&#x610F;-2">&#x9898;&#x76EE;&#x5927;&#x610F;</h2><p>&#x7ED9;&#x5B9A;&#x4E00;&#x7247;&#x6587;&#x7AE0;&#xFF0C;&#x6709;n&#x884C;&#xFF0C;&#x5BF9;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x6309;&#x884C;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x7ED9;&#x5B9A;&#x4E00;&#x7247;&#x4FEE;&#x6539;&#x597D;&#x7684;&#x6587;&#x7AE0;&#x3002;</p><p>&#x6C42;&#x9700;&#x8981;&#x591A;&#x5C11;&#x6B21;&#x64CD;&#x4F5C;&#xFF08;&#x5220;&#x9664;&#x3001;&#x4FEE;&#x6539;&#x3001;&#x6DFB;&#x52A0;&#xFF09;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x8FD9;&#x7BC7;&#x4FEE;&#x6539;&#x597D;&#x7684;&#x6587;&#x7AE0;&#x3002;</p><h2 id="&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;-2">&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;</h2><p>&#x7F16;&#x8F91;&#x8DDD;&#x79BB;&#xFF0C;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x53BB;&#x505A;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">10010</span>][<span class="number">10010</span>] = { <span class="number">0</span> };</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="built_in">string</span> a, <span class="built_in">string</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= a.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        dp[i][<span class="number">0</span>] = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= b.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        dp[<span class="number">0</span>][i] = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b.length(); j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (a[i - <span class="number">1</span>] == b[j - <span class="number">1</span>])</span><br><span class="line">            {</span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> edIns = dp[i][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> edDel = dp[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> edRep = dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                dp[i][j] = min(edIns, min(edDel, edRep));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> dp[a.length()][b.length()];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> input;</span><br><span class="line">    <span class="keyword">int</span> n, res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;yuanlai(n), xinde(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; yuanlai[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; xinde[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//cout &lt;&lt; yuanlai[i] &lt;&lt; endl;</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; xinde[i] &lt;&lt; endl;</span></span><br><span class="line">        res += check(yuanlai[i], xinde[i]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//cout &lt;&lt; res;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 算法题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> ACM </tag>
            
            <tag> 未归档的 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>剑指offer题解</title>
      <link href="//posts/c812c7f8/"/>
      <url>//posts/c812c7f8/</url>
      <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/ta/coding-interviews" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x8D85;&#x8D8A;&#x4FDD;&#x4F51;&#xFF0C;offer++ <a id="more"></a></p><h1 id="&#x66FF;&#x6362;&#x7A7A;&#x683C;">&#x66FF;&#x6362;&#x7A7A;&#x683C;</h1><p>&#x6211;&#x81EA;&#x5DF1;&#x4E00;&#x5F00;&#x59CB;&#x5199;&#x7684;&#xFF0C;&#x975E;&#x5E38;&#x7B28;&#x7684;&#x65B9;&#x6CD5;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">replaceSpace</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i]==<span class="string">&apos; &apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = length+<span class="number">1</span>; j &gt; i+<span class="number">2</span>; j--)</span><br><span class="line">                {</span><br><span class="line">                    str[j] = str[j - <span class="number">2</span>];</span><br><span class="line">                }</span><br><span class="line">                length += <span class="number">2</span>;</span><br><span class="line">                str[i++] = <span class="string">&apos;%&apos;</span>;</span><br><span class="line">                str[i++] = <span class="string">&apos;2&apos;</span>;</span><br><span class="line">                str[i] = <span class="string">&apos;0&apos;</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x70B9;&#x5F00;&#x8BA8;&#x8BBA;&#x533A;&#xFF0C;&#x5927;&#x4F6C;&#x4EEC;&#x5F00;&#x59CB;&#x79C0;&#x81EA;&#x5DF1;&#x7684;&#x725B;&#x903C;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x83DC;&#x9E21;&#x745F;&#x745F;&#x53D1;&#x6296;&#x3002;</p><p>&#x5927;&#x6982;&#x601D;&#x8DEF;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5148;&#x904D;&#x5386;&#x4E00;&#x904D;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x627E;&#x51FA;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x7A7A;&#x683C;&#x3002; 2. &#x8BA1;&#x7B97;&#x66FF;&#x6362;&#x540E;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002; 3. &#x4ECE;&#x540E;&#x5F80;&#x524D;&#xFF0C;&#x653E;&#x5165;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&#x679C;&#x9047;&#x5230;&#x4E86;&#x7A7A;&#x683C;&#xFF0C;&#x5219;&#x7528;&quot;%20&quot;&#x6765;&#x66FF;&#x4EE3;&#x3002;</p><p>&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">replaceSpace</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="comment">//&#x904D;&#x5386;&#x4E00;&#x8FB9;&#x5B57;&#x7B26;&#x4E32;&#x627E;&#x51FA;&#x7A7A;&#x683C;&#x7684;&#x6570;&#x91CF;</span></span><br><span class="line">        <span class="keyword">if</span> (str == <span class="literal">NULL</span> || length &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> oldnumber = <span class="number">0</span>;<span class="comment">//&#x8BB0;&#x5F55;&#x4EE5;&#x524D;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line">        <span class="keyword">int</span> replacenumber = <span class="number">0</span>;<span class="comment">//&#x8BB0;&#x5F55;&#x7A7A;&#x683C;&#x7684;&#x6570;&#x91CF;</span></span><br><span class="line">        <span class="keyword">while</span> (str[i] != <span class="string">&apos;\0&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            oldnumber++;</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">&apos; &apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                replacenumber++;</span><br><span class="line">            }</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> newlength = oldnumber + replacenumber * <span class="number">2</span>;<span class="comment">//&#x63D2;&#x5165;&#x540E;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line">        <span class="keyword">if</span> (newlength &gt; length)<span class="comment">//&#x5982;&#x679C;&#x8BA1;&#x7B97;&#x540E;&#x7684;&#x957F;&#x5EA6;&#x5927;&#x4E8E;&#x603B;&#x957F;&#x5EA6;&#x5C31;&#x65E0;&#x6CD5;&#x63D2;&#x5165;</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> pOldlength = oldnumber; <span class="comment">//&#x6CE8;&#x610F;&#x4E0D;&#x8981;&#x51CF;&#x4E00;&#x56E0;&#x4E3A;&#x9690;&#x85CF;&#x4E2A;&#x2018;\0&#x2019;&#x4E5F;&#x8981;&#x7B97;&#x91CC;</span></span><br><span class="line">        <span class="keyword">int</span> pNewlength = newlength;</span><br><span class="line">        <span class="keyword">while</span> (pOldlength &gt;= <span class="number">0</span> &amp;&amp; pNewlength &gt; pOldlength)<span class="comment">//&#x653E;&#x5B57;&#x7B26;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[pOldlength] == <span class="string">&apos; &apos;</span>) <span class="comment">//&#x78B0;&#x5230;&#x7A7A;&#x683C;&#x5C31;&#x66FF;&#x6362;</span></span><br><span class="line">            {</span><br><span class="line">                str[pNewlength--] = <span class="string">&apos;0&apos;</span>;</span><br><span class="line">                str[pNewlength--] = <span class="string">&apos;2&apos;</span>;</span><br><span class="line">                str[pNewlength--] = <span class="string">&apos;%&apos;</span>;</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="comment">//&#x4E0D;&#x662F;&#x7A7A;&#x683C;&#x5C31;&#x628A;pOldlength&#x6307;&#x5411;&#x7684;&#x5B57;&#x7B26;&#x88C5;&#x5165;pNewlength&#x6307;&#x5411;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">            {</span><br><span class="line">                str[pNewlength--] = str[pOldlength];</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            pOldlength--; <span class="comment">//&#x4E0D;&#x7BA1;&#x662F;if&#x8FD8;&#x662F;elsr&#x90FD;&#x8981;&#x628A;pOldlength&#x524D;&#x79FB;</span></span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p><h1 id="&#x4ECE;&#x5C3E;&#x5230;&#x5934;&#x6253;&#x5370;&#x94FE;&#x8868;">&#x4ECE;&#x5C3E;&#x5230;&#x5934;&#x6253;&#x5370;&#x94FE;&#x8868;</h1><p>&#x4F7F;&#x7528;&#x5934;&#x63D2;&#x6CD5;&#xFF0C;&#x5C06;&#x94FE;&#x8868;&#x9006;&#x7F6E;&#x4E4B;&#x540E;&#xFF0C;&#x538B;&#x5165;vector&#x4E2D;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">      <span class="keyword">int</span> val;</span><br><span class="line">      <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">next</span>;</span></span><br><span class="line">      ListNode(<span class="keyword">int</span> x) :</span><br><span class="line">            val(x), next(<span class="literal">NULL</span>) {</span><br><span class="line">      }</span><br><span class="line">};</span><br><span class="line"><span class="function">ListNode <span class="title">L</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n, temp;</span><br><span class="line">    ListNode *ptr = &amp;L;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    L.val = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line"></span><br><span class="line">        ptr-&gt;next = (ListNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ListNode));</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; ptr-&gt;next-&gt;val;</span><br><span class="line">        ptr-&gt;next-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        ptr = ptr-&gt;next;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; printListFromTailToHead(ListNode* head)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; V;</span><br><span class="line">        <span class="keyword">if</span> (head==<span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> V;</span><br><span class="line">        ListNode* pre=head;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        pre-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* p = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (head!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            p = head;</span><br><span class="line">            head = head-&gt;next;</span><br><span class="line">            p-&gt;next = pre;</span><br><span class="line">            pre = p;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (pre != <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            V.push_back(pre-&gt;val);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; pre-&gt;val &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            pre = pre-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> V;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    init();</span><br><span class="line">    Solution a;</span><br><span class="line">    a.printListFromTailToHead(L.next);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><strong>&#x6D4B;&#x8BD5;&#x6570;&#x636E;</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Test1&#xFF1A;</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">6</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">Test2&#xFF1A;</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">67</span> <span class="number">0</span> <span class="number">24</span> <span class="number">58</span></span><br><span class="line"></span><br><span class="line">Test3&#xFF1A;</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x67E5;&#x627E;">&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x67E5;&#x627E;</h1><ol type="1"><li>&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x66B4;&#x529B;&#x641C;&#x7D22;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x6CE8;&#x610F;&#x526A;&#x679D;&#x3002;</li><li>&#x7559;&#x610F;&#x5230;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x884C;&#xFF0C;&#x90FD;&#x662F;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x9012;&#x589E;&#x6392;&#x5E8F;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x5217;&#xFF0C;&#x4E5F;&#x662F;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x9012;&#x589E;&#x3002;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4ECE;&#x6700;&#x5DE6;&#x4E0B;&#x8FDB;&#x884C;&#x641C;&#x7D22;&#xFF1A;&#x82E5;&#x5F53;&#x524D;&#x6570;&gt;target&#xFF0C;&#x5411;&#x4E0A;&#x3002;&#x53CD;&#x4E4B;&#xFF0C;&#x82E5;&#x5F53;&#x524D;&#x6570;&lt;target&#xFF0C;&#x5411;&#x53F3;&#x3002;</li></ol><p>&#x66B4;&#x529B;&#x641C;&#x7D22;+&#x526A;&#x679D;</p><p>&#x8FD9;&#x91CC;&#x6CA1;&#x7528;&#x5230;&#x6BCF;&#x5217;&#x90FD;&#x662F;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x7684;&#x6761;&#x4EF6;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x5F00;&#x59CB;&#x5199;&#x7684;&#xFF0C;&#x5199;&#x7684;&#x4E0D;&#x597D;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">array</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> hang = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="keyword">int</span> lie = <span class="built_in">array</span>[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hang; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lie; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i][j] == target)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">array</span>[i][j] &gt; target)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p><p>&#x66F4;&#x597D;&#x7684;&#x4EE3;&#x7801;&#xFF1A;&#x4ECE;&#x5DE6;&#x4E0B;&#x5F00;&#x59CB;&#x641C;&#x7D22;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; <span class="built_in">array</span>)</span> </span>{</span><br><span class="line">        <span class="comment">// array&#x662F;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#xFF0C;&#x8FD9;&#x91CC;&#x6CA1;&#x505A;&#x5224;&#x7A7A;&#x64CD;&#x4F5C;</span></span><br><span class="line">        <span class="keyword">int</span> rows = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="keyword">int</span> cols = <span class="built_in">array</span>[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">int</span> i=rows<span class="number">-1</span>,j=<span class="number">0</span>;<span class="comment">//&#x5DE6;&#x4E0B;&#x89D2;&#x5143;&#x7D20;&#x5750;&#x6807;</span></span><br><span class="line">        <span class="keyword">while</span>(i&gt;=<span class="number">0</span> &amp;&amp; j&lt;cols){<span class="comment">//&#x4F7F;&#x5176;&#x4E0D;&#x8D85;&#x51FA;&#x6570;&#x7EC4;&#x8303;&#x56F4;</span></span><br><span class="line">            <span class="keyword">if</span>(target&lt;<span class="built_in">array</span>[i][j])</span><br><span class="line">                i--;<span class="comment">//&#x67E5;&#x627E;&#x7684;&#x5143;&#x7D20;&#x8F83;&#x5C11;&#xFF0C;&#x5F80;&#x4E0A;&#x627E;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target&gt;<span class="built_in">array</span>[i][j])</span><br><span class="line">                j++;<span class="comment">//&#x67E5;&#x627E;&#x5143;&#x7D20;&#x8F83;&#x5927;&#xFF0C;&#x5F80;&#x53F3;&#x627E;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//&#x627E;&#x5230;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x7528;&#x4E24;&#x4E2A;&#x6808;&#x5B9E;&#x73B0;&#x961F;&#x5217;">&#x7528;&#x4E24;&#x4E2A;&#x6808;&#x5B9E;&#x73B0;&#x961F;&#x5217;</h1><p>&#x57FA;&#x7840;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x4E24;&#x4E2A;&#x6808;&#x7684;&#x7A7A;&#x95F4;&#x90FD;&#x4E0D;&#x4F1A;&#x7206;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        stack1.push(node);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (!stack2.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> temp = stack2.top();</span><br><span class="line">            stack2.pop();</span><br><span class="line">            <span class="keyword">return</span> temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (!stack1.empty())</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> temp = stack1.top();</span><br><span class="line">                stack1.pop();</span><br><span class="line">                stack2.push(temp);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">true</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> temp = stack2.top();</span><br><span class="line">                stack2.pop();</span><br><span class="line">                <span class="keyword">return</span> temp;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack1;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack2;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x65CB;&#x8F6C;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x5B57;">&#x65CB;&#x8F6C;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x5B57;</h1><p>&#x627E;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x524D;&#x4E00;&#x4E2A;&#x3010;&gt;&#x3011;&#x540E;&#x4E00;&#x4E2A;&#x7684;&#x6570;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minNumberInRotateArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; rotateArray)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (rotateArray.size()==<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rotateArray.size()<span class="number">-1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (rotateArray[i] &gt; rotateArray[i + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> rotateArray[i + <span class="number">1</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;">&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;</h1><p>&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;&#xFF1A;0 1 1 2 3....</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> res_pre = <span class="number">0</span>, res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            res = res + res_pre;</span><br><span class="line">            res_pre = res - res_pre;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x66F4;&#x8FDB;&#x4E00;&#x6B65;&#xFF1A;&#x5BF9;&#x4E8E;&#x66F4;&#x590D;&#x6742;&#x7684;&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x77E9;&#x9635;&#x5FEB;&#x901F;&#x5E42;&#x8FDB;&#x884C;&#x6C42;&#x89E3;&#xFF0C;&#x6BD4;&#x5982;&#x6C42;Fib&#x7684;&#x7B2C;99999999&#x9879;&#xFF0C;&#x53D6;&#x7ED3;&#x679C;&#x7684;&#x540E;4&#x4F4D;&#x3002;</p><h1 id="&#x8DF3;&#x53F0;&#x9636;">&#x8DF3;&#x53F0;&#x9636;</h1><h2 id="&#x7EC4;&#x5408;">&#x7EC4;&#x5408;</h2><p>&#x5229;&#x7528;&#x7EC4;&#x5408;&#x53BB;&#x505A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">zuhe</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        {</span><br><span class="line">            res *= (a - i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= b; i++)</span><br><span class="line">        {</span><br><span class="line">            res /= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jumpFloor</span><span class="params">(<span class="keyword">int</span> number)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> min = number / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (number % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">            min++;<span class="comment">//&#x6700;&#x5C11;&#x7684;&#x6B65;&#x6570;</span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = min; i &lt; number; i++)</span><br><span class="line">        {</span><br><span class="line">            res += zuhe(i, number-i);</span><br><span class="line">        }</span><br><span class="line">        res ++;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="fib&#x5E8F;&#x5217;">Fib&#x5E8F;&#x5217;</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">JumpFloor</span><span class="params">(<span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">int</span> pre2 = <span class="number">1</span>, pre1 = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        result = pre2 + pre1;</span><br><span class="line">        pre2 = pre1;</span><br><span class="line">        pre1 = result;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x53D8;&#x6001;&#x8DF3;&#x53F0;&#x9636;">&#x53D8;&#x6001;&#x8DF3;&#x53F0;&#x9636;</h1><h2 id="&#x7EC4;&#x5408;-1">&#x7EC4;&#x5408;</h2><p>&#x7EC4;&#x5408;&#xFF0C;&#x6839;&#x636E;1~number-1&#x53F0;&#x9636;&#x4E2D;&#xFF0C;&#x843D;&#x811A;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x6765;&#x9009;&#x62E9;&#x7EC4;&#x5408;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">zuhe</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">1</span>;<span class="comment">//&#x5FC5;&#x987B;&#x7528; long long&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x6EA2;&#x51FA;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        {</span><br><span class="line">            res *= (a - i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= b; i++)</span><br><span class="line">        {</span><br><span class="line">            res /= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jumpFloorII</span><span class="params">(<span class="keyword">int</span> number)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number<span class="number">-1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            res += zuhe(number<span class="number">-1</span>, i);</span><br><span class="line">        }</span><br><span class="line">        res++;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x52A8;&#x6001;&#x89C4;&#x5212;">&#x52A8;&#x6001;&#x89C4;&#x5212;</h2><h2 id="&#x6570;&#x5B66;&#x63A8;&#x5BFC;">&#x6570;&#x5B66;&#x63A8;&#x5BFC;</h2><p>&#x8DF3;&#x4E0A; n-1 &#x7EA7;&#x53F0;&#x9636;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE; n-2 &#x7EA7;&#x8DF3; 1 &#x7EA7;&#x4E0A;&#x53BB;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE; n-3 &#x7EA7;&#x8DF3; 2 &#x7EA7;&#x4E0A;&#x53BB;...&#xFF0C;&#x90A3;&#x4E48;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n-1) = f(n-2) + f(n-3) + ... + f(0)</span><br></pre></td></tr></table></figure><p>&#x540C;&#x6837;&#xFF0C;&#x8DF3;&#x4E0A; n &#x7EA7;&#x53F0;&#x9636;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE; n-1 &#x7EA7;&#x8DF3; 1 &#x7EA7;&#x4E0A;&#x53BB;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE; n-2 &#x7EA7;&#x8DF3; 2 &#x7EA7;&#x4E0A;&#x53BB;... &#xFF0C;&#x90A3;&#x4E48;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n) = f(n-1) + f(n-2) + ... + f(0)</span><br></pre></td></tr></table></figure><p>&#x7EFC;&#x4E0A;&#x53EF;&#x5F97;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n) - f(n-1) = f(n-1)</span><br></pre></td></tr></table></figure><p>&#x5373;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n) = 2*f(n-1)</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5; f(n) &#x662F;&#x4E00;&#x4E2A;&#x7B49;&#x6BD4;&#x6570;&#x5217;&#x3002;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">JumpFloorII</span><span class="params">(<span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>) Math.<span class="built_in">pow</span>(<span class="number">2</span>, target - <span class="number">1</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x77E9;&#x5F62;&#x8986;&#x76D6;">&#x77E9;&#x5F62;&#x8986;&#x76D6;</h1><h2 id="&#x7EC4;&#x5408;-2">&#x7EC4;&#x5408;</h2><p>&#x548C;&#x8DF3;&#x683C;&#x5B50;&#x7C7B;&#x4F3C;&#xFF0C;&#x6839;&#x636E;&#x6A2A;&#x7740;&#x7684;&#x7EC4;&#x5408;&#x6765;&#x6C42;&#x3002;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">zuhe</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        {</span><br><span class="line">            res *= (a - i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= b; i++)</span><br><span class="line">        {</span><br><span class="line">            res /= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">rectCover</span><span class="params">(<span class="keyword">int</span> number)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (number == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//&#x548C;&#x8DF3;&#x53F0;&#x9636;&#x7C7B;&#x4F3C;&#xFF1F;</span></span><br><span class="line">        <span class="keyword">int</span> temp = number / <span class="number">2</span>;<span class="comment">//&#x6700;&#x591A;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x6A2A;&#x7740;&#x7684;&#x3002;</span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= temp; i++)</span><br><span class="line">        {</span><br><span class="line">            res += zuhe(number-i, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="fib&#x5E8F;&#x5217;-1">Fib&#x5E8F;&#x5217;</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">RectCover</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">int</span> pre2 = <span class="number">1</span>, pre1 = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= n; i++) {</span><br><span class="line">        result = pre2 + pre1;</span><br><span class="line">        pre2 = pre1;</span><br><span class="line">        pre1 = result;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x8FDB;&#x5236;&#x4E2D;1&#x7684;&#x4E2A;&#x6570;">&#x4E8C;&#x8FDB;&#x5236;&#x4E2D;1&#x7684;&#x4E2A;&#x6570;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span>  <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (n&lt;<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            n = n &amp; <span class="number">0x7FFFFFFF</span>;               <span class="comment">//&#x90E8;&#x5206;&#x7F16;&#x8BD1;&#x5668;&#xFF0C;&#x5BF9;&#x4E8E;&#x590D;&#x6570;&#x7684;&#x53F3;&#x79FB;&#xFF0C;&#x662F;&#x8865;1&#x7684;&#x3002;</span></span><br><span class="line">            res++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (n!=<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            res += (n &amp; <span class="number">1</span>);</span><br><span class="line">            n = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x503C;&#x7684;&#x6574;&#x6570;&#x6B21;&#x65B9;">&#x6570;&#x503C;&#x7684;&#x6574;&#x6570;&#x6B21;&#x65B9;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">Power</span><span class="params">(<span class="keyword">double</span> base, <span class="keyword">int</span> exponent)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">double</span> res=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (exponent&gt;=<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; exponent; i++)</span><br><span class="line">            {</span><br><span class="line">                res *= base;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (exponent &lt; <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            exponent = -exponent;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; exponent; i++)</span><br><span class="line">            {</span><br><span class="line">                res /= base;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x8C03;&#x6574;&#x6570;&#x7EC4;&#x987A;&#x5E8F;&#x4F7F;&#x5947;&#x6570;&#x4F4D;&#x4E8E;&#x5076;&#x6570;&#x524D;&#x9762;">&#x8C03;&#x6574;&#x6570;&#x7EC4;&#x987A;&#x5E8F;&#x4F7F;&#x5947;&#x6570;&#x4F4D;&#x4E8E;&#x5076;&#x6570;&#x524D;&#x9762;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;&#x7C7B;&#x4F3C;&#x4E8E;&#x5192;&#x6CE1;&#x6392;&#x5E8F;">&#x89E3;&#x6CD5;&#x4E00;&#xFF1A;&#x7C7B;&#x4F3C;&#x4E8E;&#x5192;&#x6CE1;&#x6392;&#x5E8F;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">reOrderArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;<span class="built_in">array</span>)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">array</span>.size(); i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="built_in">array</span>.size()<span class="number">-1</span>; j &gt; i; j--)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">array</span>[j<span class="number">-1</span>] % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; <span class="built_in">array</span>[j] % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">                        swap(<span class="built_in">array</span>[j<span class="number">-1</span>], <span class="built_in">array</span>[j]);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;&#x5148;&#x4FDD;&#x5B58;&#x5947;&#x6570;&#x518D;&#x4FDD;&#x5B58;&#x5076;&#x6570;">&#x89E3;&#x6CD5;&#x4E8C;&#xFF1A;&#x5148;&#x4FDD;&#x5B58;&#x5947;&#x6570;&#xFF0C;&#x518D;&#x4FDD;&#x5B58;&#x5076;&#x6570;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">reOrderArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;<span class="built_in">array</span>)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">array</span>.size(); i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i] % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">                    temp.push_back(<span class="built_in">array</span>[i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">array</span>.size(); i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i] % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                    temp.push_back(<span class="built_in">array</span>[i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">array</span> = temp;</span><br><span class="line">        }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x94FE;&#x8868;&#x4E2D;&#x5012;&#x6570;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;">&#x94FE;&#x8868;&#x4E2D;&#x5012;&#x6570;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;</h1><p>&#x5FEB;&#x6162;&#x6307;&#x9488;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class Solution {</span><br><span class="line">public:</span><br><span class="line">    ListNode* FindKthToTail(ListNode* pListHead, unsigned int k) </span><br><span class="line">    {</span><br><span class="line">        //&#x4E24;&#x4E2A;&#x6307;&#x9488;</span><br><span class="line">        ListNode* p1 = pListHead, *p2 = NULL;</span><br><span class="line">        for (int i = 0; i &lt; k; i++)</span><br><span class="line">            if (p1 != NULL)</span><br><span class="line">                p1 = p1-&gt;next;</span><br><span class="line">            else</span><br><span class="line">                return NULL;</span><br><span class="line">        p2 = pListHead;</span><br><span class="line">        while (p1!=NULL)</span><br><span class="line">        {</span><br><span class="line">            p1 = p1-&gt;next;</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        return p2;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x53CD;&#x8F6C;&#x94FE;&#x8868;">&#x53CD;&#x8F6C;&#x94FE;&#x8868;</h1><p>&#x8FD9;&#x91CC;&#xFF0C;pre&#x76F8;&#x5F53;&#x4E8E;&#x8F85;&#x52A9;&#x7528;&#x7684;&#x5934;&#x7ED3;&#x70B9;&#x3002;</p><p>&#x4F7F;&#x7528;&#x5934;&#x63D2;&#x6CD5;&#x53CD;&#x8F6C;&#x94FE;&#x8868;&#x3002;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Solution {</span><br><span class="line">    //&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A;&#x9898;&#x662F;&#x6CA1;&#x6709;&#x94FE;&#x8868;&#x7684;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x3002;&#x5373;&#x662F;&#x6574;&#x4E2A;&#x94FE;&#x8868;&#x90FD;&#x8981;&#x9006;&#x7F6E;&#x3002;</span><br><span class="line">    //&#x5E26;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x94FE;&#x8868;&#xFF0C;&#x5934;&#x7ED3;&#x70B9;&#x5F80;&#x5F80;&#x5B58;&#x50A8;&#x94FE;&#x8868;&#x7684;&#x957F;&#x5EA6;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x4FE1;&#x606F;&#x3002;&#x5E26;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x94FE;&#x8868;&#x9006;&#x7F6E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5934;&#x7ED3;&#x70B9;&#x4E0D;&#x52A8;&#x3002;</span><br><span class="line">public:</span><br><span class="line">    ListNode* ReverseList(ListNode* pHead) </span><br><span class="line">    {</span><br><span class="line">        ListNode *pre = NULL, *next = NULL;</span><br><span class="line">        while (pHead!=NULL)//&#x5934;&#x63D2;&#x6CD5;</span><br><span class="line">        {</span><br><span class="line">            next = pHead-&gt;next;</span><br><span class="line">            pHead-&gt;next = pre;</span><br><span class="line">            pre = pHead;</span><br><span class="line">            pHead = next;</span><br><span class="line">        }</span><br><span class="line">        return pre;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x94FE;&#x8868;">&#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x94FE;&#x8868;</h1><h2 id="&#x975E;&#x9012;&#x5F52;&#x5FAA;&#x73AF;&#x7248;&#x672C;">&#x975E;&#x9012;&#x5F52;&#xFF0C;&#x5FAA;&#x73AF;&#x7248;&#x672C;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        ListNode *res = <span class="literal">NULL</span>, *p = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (pHead1 != <span class="literal">NULL</span> &amp;&amp; pHead2 != <span class="literal">NULL</span>)<span class="comment">//&#x786E;&#x5B9A;&#x5934;</span></span><br><span class="line">            <span class="keyword">if</span> (pHead1-&gt;val &lt; pHead2-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                res = pHead1;</span><br><span class="line">                pHead1 = pHead1-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                res = pHead2;</span><br><span class="line">                pHead2 = pHead2-&gt;next;</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pHead1 != <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = pHead1;</span><br><span class="line">            pHead1 = pHead1-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pHead2 != <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = pHead2;</span><br><span class="line">            pHead2 = pHead2-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        p = res;</span><br><span class="line">        <span class="keyword">while</span> (pHead1!=<span class="literal">NULL</span>&amp;&amp;pHead2!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (pHead1-&gt;val &gt; pHead2-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead2;</span><br><span class="line">                pHead2 = pHead2-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead1;</span><br><span class="line">                pHead1 = pHead1-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (pHead1 != <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next = pHead1;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pHead2 != <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next = pHead2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x9012;&#x5F52;&#x65B9;&#x6CD5;">&#x9012;&#x5F52;&#x65B9;&#x6CD5;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ListNode* <span class="title">Merge2</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (pHead1==<span class="literal">NULL</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> pHead2;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (pHead2==<span class="literal">NULL</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> pHead1;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (pHead1-&gt;val &lt; pHead2-&gt;val)</span><br><span class="line">    {</span><br><span class="line">        pHead1-&gt;next = Merge2(pHead1-&gt;next, pHead2);</span><br><span class="line">        <span class="keyword">return</span> pHead1;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        pHead2-&gt;next = Merge2(pHead1, pHead2-&gt;next);</span><br><span class="line">        <span class="keyword">return</span> pHead2;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x65B9;&#x6CD5;">&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x65B9;&#x6CD5;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="function">ListNode <span class="title">L</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="comment">//&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x7684;&#x5934;&#x7ED3;&#x70B9;</span></span><br><span class="line">        ListNode *p = &amp;L;</span><br><span class="line">        <span class="keyword">if</span> (pHead1 == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> pHead2;</span><br><span class="line">        <span class="keyword">if</span> (pHead2 == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> pHead1;</span><br><span class="line">        <span class="keyword">while</span> (pHead1!=<span class="literal">NULL</span>&amp;&amp;pHead2!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (pHead1-&gt;val &lt;= pHead2-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead1;</span><br><span class="line">                pHead1 = pHead1-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead2;</span><br><span class="line">                pHead2 = pHead2-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (pHead1 == <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next=pHead2;</span><br><span class="line">        <span class="keyword">if</span> (pHead2 == <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next = pHead1;</span><br><span class="line">        <span class="keyword">return</span> L.next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6811;&#x7684;&#x5B50;&#x7ED3;&#x6784;">&#x6811;&#x7684;&#x5B50;&#x7ED3;&#x6784;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">HasSubtree</span><span class="params">(TreeNode* pRoot1, TreeNode* pRoot2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="keyword">bool</span> res = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (pRoot1 == <span class="literal">NULL</span> || pRoot2 == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (pRoot1-&gt;val == pRoot2-&gt;val)</span><br><span class="line">                res = judge(pRoot1, pRoot2);</span><br><span class="line">            <span class="keyword">if</span> (!res)</span><br><span class="line">                res = HasSubtree(pRoot1-&gt;left, pRoot2);<span class="comment">//&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x641C;&#x5DE6;&#x5B50;&#x6811;</span></span><br><span class="line">            <span class="keyword">if</span> (!res)</span><br><span class="line">                res = HasSubtree(pRoot1-&gt;right, pRoot2);<span class="comment">//&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x641C;&#x53F3;&#x5B50;&#x6811;</span></span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">    </span><br><span class="line">        }</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(TreeNode* p1, TreeNode* p2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="keyword">if</span> (p2 == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//T2&#x5DF2;&#x7ECF;&#x904D;&#x5386;&#x5B8C;&#x5E76;&#x4E14;&#x90FD;&#x80FD;&#x5BF9;&#x7684;&#x4E0A;&#xFF0C;&#x8FD4;&#x56DE;true</span></span><br><span class="line">            <span class="keyword">if</span> (p1 == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//T2&#x8FD8;&#x6CA1;&#x6709;&#x904D;&#x5386;&#x5B8C;&#xFF0C;&#x4F46;&#x662F;T1&#x5DF2;&#x7ECF;&#x6CA1;&#x4E86;&#xFF0C;&#x8FD4;&#x56DE;false</span></span><br><span class="line">            <span class="keyword">if</span> (p1-&gt;val != p2-&gt;val)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//&#x503C;&#x5BF9;&#x4E0D;&#x4E0A;&#xFF0C;&#x8FD4;&#x56DE;false&#x3002;</span></span><br><span class="line">            <span class="keyword">return</span> judge(p1-&gt;left, p2-&gt;left) &amp;&amp; judge(p1-&gt;right, p2-&gt;right);</span><br><span class="line">        }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x6D4B;&#x8BD5;&#xFF0C;&#x6211;&#x7684;&#x6784;&#x5EFA;&#x6811;&#x7684;&#x4EE3;&#x7801;&#x4E3A;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">    struct TreeNode {</span><br><span class="line">        int val;</span><br><span class="line">        struct TreeNode *left;</span><br><span class="line">        struct TreeNode *right;</span><br><span class="line">        TreeNode(int x) :</span><br><span class="line">                val(x), left(NULL), right(NULL) {</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">    </span><br><span class="line">    TreeNode* T;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    queue&lt;TreeNode **&gt;q;</span><br><span class="line">    void init(TreeNode*&amp; T)</span><br><span class="line">    {</span><br><span class="line">        int n;</span><br><span class="line">        string temp;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        if (n == 0)</span><br><span class="line">            T = NULL;</span><br><span class="line">        TreeNode **ptr;</span><br><span class="line">        q.push(&amp;T);</span><br><span class="line">        for (int i = 0; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            ptr = q.front();</span><br><span class="line">            q.pop();</span><br><span class="line">            cin &gt;&gt; temp;</span><br><span class="line">            if (temp != &quot;null&quot;)</span><br><span class="line">            {</span><br><span class="line">                TreeNode *node = (TreeNode*)malloc(sizeof(TreeNode));</span><br><span class="line">                node-&gt;val = stoi(temp);</span><br><span class="line">                node-&gt;left = NULL;</span><br><span class="line">                node-&gt;right = NULL;</span><br><span class="line">                *ptr = node;</span><br><span class="line">            }</span><br><span class="line">            q.push(&amp;(*ptr)-&gt;left);</span><br><span class="line">            q.push(&amp;(*ptr)-&gt;right);</span><br><span class="line">        }</span><br><span class="line">        while (!q.empty())</span><br><span class="line">        {</span><br><span class="line">            q.pop();</span><br><span class="line">        }</span><br><span class="line">        return;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x5165;&#x7684;&#x65F6;&#x5019;&#x6309;&#x5C42;&#x8F93;&#x5165;&#xFF0C;&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x662F;&#x6709;bug&#x7684;&#xFF0C;&#x4E0D;&#x80FD;&#x751F;&#x6210;&#x4EFB;&#x610F;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF01;&#x60F3;&#x8981;&#x5B8C;&#x5168;&#x5E8F;&#x5217;&#x5316;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x8BF7;&#x770B;&#x540E;&#x9762;&#x7684;&#x5E8F;&#x5217;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x955C;&#x50CF;">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x955C;&#x50CF;</h1><p>&#x6811;&#x7684;&#x904D;&#x5386;&#xFF0C;&#x9012;&#x5F52;&#x5373;&#x53EF;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Mirror</span><span class="params">(TreeNode *pRoot)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        Mirror(pRoot-&gt;left);</span><br><span class="line">        Mirror(pRoot-&gt;right);</span><br><span class="line">        swap(pRoot-&gt;left, pRoot-&gt;right);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5305;&#x542B;min&#x51FD;&#x6570;&#x7684;&#x6808;">&#x5305;&#x542B;min&#x51FD;&#x6570;&#x7684;&#x6808;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;&#x5F88;&#x632B;&#x7684;&#x89E3;&#x6CD5;">&#x89E3;&#x6CD5;&#x4E00;&#xFF08;&#x5F88;&#x632B;&#x7684;&#x89E3;&#x6CD5;&#xFF09;</h2><p>&#x601D;&#x8DEF;&#xFF1A;&#x5229;&#x7528;Map&#x7684;&#x81EA;&#x52A8;&#x6392;&#x5E8F;&#x7279;&#x6027;&#xFF0C;&#x5F88;&#x632B;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class Solution {</span><br><span class="line">public:</span><br><span class="line">    stack&lt;int&gt; s;</span><br><span class="line">    map&lt;int, int&gt;m;</span><br><span class="line">    //int minn=0x7FFFFFFF;</span><br><span class="line">    void push(int value) </span><br><span class="line">    {</span><br><span class="line">        s.push(value);</span><br><span class="line">        if (!m.count(value))</span><br><span class="line">            m[value] = 1;</span><br><span class="line">        else</span><br><span class="line">            m[value]++;</span><br><span class="line">    }</span><br><span class="line">    void pop()</span><br><span class="line">    {</span><br><span class="line">        int k = s.top();</span><br><span class="line">        s.pop();</span><br><span class="line">        if (--m[k] == 0)</span><br><span class="line">            m.erase(k);</span><br><span class="line">    }</span><br><span class="line">    int top() </span><br><span class="line">    {</span><br><span class="line">        return s.top();</span><br><span class="line">    }</span><br><span class="line">    int min() </span><br><span class="line">    {</span><br><span class="line">        return m.begin()-&gt;first;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x5229;&#x7528;&#x6700;&#x5C0F;&#x5143;&#x7D20;&#x6808;">&#x5229;&#x7528;&#x6700;&#x5C0F;&#x5143;&#x7D20;&#x6808;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">//&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#x3002;&#x5229;&#x7528;&#x8F85;&#x52A9;&#x6808;</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x538B;&#x6808;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;A&#x6808;&#x7684;&#x538B;&#x5165;&#x6BD4;B&#x6808;&#x7684;&#x5927;&#xFF0C; &#x5219;B&#x6808;&#x4E0D;&#x538B;&#xFF0C;&#x5982;&#x679C;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#xFF0C;&#x5219;AB&#x6808;&#x540C;&#x65F6;&#x538B;&#x5165;/</span></span><br><span class="line"><span class="comment">&#x5728;&#x51FA;&#x6808;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;AB&#x6808;&#x9876;&#x5143;&#x7D20;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x5219;A&#x51FA;B&#x4E0D;&#x51FA;&#x3002;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s1, s2;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        s1.push(value);</span><br><span class="line">        <span class="keyword">if</span> (s2.empty())</span><br><span class="line">            s2.push(value);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            t = s2.top();</span><br><span class="line">            <span class="keyword">if</span> (value &lt;= t)</span><br><span class="line">                s2.push(value);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> t1 = s1.top(), t2 = s2.top();</span><br><span class="line">        <span class="keyword">if</span> (t1 == t2)</span><br><span class="line">        {</span><br><span class="line">            s1.pop(); s2.pop();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            s1.pop();</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">return</span> s1.top();</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">return</span> s2.top();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x987A;&#x65F6;&#x9488;&#x6253;&#x5370;&#x77E9;&#x9635;">&#x987A;&#x65F6;&#x9488;&#x6253;&#x5370;&#x77E9;&#x9635;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x4E0D;&#x662F;&#x7279;&#x522B;&#x597D;&#xFF0C;&#x5229;&#x7528;&#x6A21;&#x62DF;&#x6765;&#x505A;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; printMatrix(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; matrix) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, a = <span class="number">0</span>, cnt = <span class="number">0</span>, total = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        total *= matrix.size();</span><br><span class="line">        <span class="keyword">if</span> (total != <span class="number">0</span>)</span><br><span class="line">            total *= matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">while</span> (cnt&lt;total)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (;  j&lt; matrix[i].size()-a; j++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">            j--, i++;</span><br><span class="line">            <span class="keyword">for</span> (; i &lt; matrix.size()-a; i++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">            i--; j--;</span><br><span class="line">            <span class="keyword">for</span> (; j &gt;=a; j--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">            j++; i--; a++;</span><br><span class="line">            <span class="keyword">for</span> ( ; i &gt;a ; i--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;">&#x89E3;&#x6CD5;&#x4E8C;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">/*&#x89E3;&#x9898;&#x601D;&#x8DEF;&#xFF1A;&#x987A;&#x65F6;&#x9488;&#x6253;&#x5370;&#x5C31;&#x662F;&#x6309;&#x5708;&#x6570;&#x5FAA;&#x73AF;&#x6253;&#x5370;&#xFF0C;&#x4E00;&#x5708;&#x5305;&#x542B;&#x4E24;&#x884C;&#x6216;&#x8005;&#x4E24;&#x5217;&#xFF0C;</span></span><br><span class="line"><span class="comment">&#x5728;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x51FA;&#x73B0;&#x67D0;&#x4E00;&#x5708;&#x4E2D;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x884C;&#xFF0C;</span></span><br><span class="line"><span class="comment">&#x8981;&#x5224;&#x65AD;&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x6253;&#x5370;&#x548C;&#x4ECE;&#x53F3;&#x5411;&#x5DE6;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x4F1A;&#x51FA;&#x73B0;&#x91CD;&#x590D;&#x6253;&#x5370;&#xFF0C;</span></span><br><span class="line"><span class="comment">&#x540C;&#x6837;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x5217;&#x65F6;&#xFF0C;&#x8981;&#x5224;&#x65AD;&#x4ECE;&#x4E0A;&#x5411;&#x4E0B;&#x6253;&#x5370;&#x548C;&#x4ECE;&#x4E0B;&#x5411;&#x4E0A;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x4F1A;&#x51FA;&#x73B0;&#x91CD;&#x590D;&#x6253;&#x5370;&#x7684;&#x60C5;&#x51B5;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; printMatrix(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; matrix) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">int</span> row = matrix.size();</span><br><span class="line">        <span class="keyword">if</span> (row == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">int</span> collor = matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">int</span> circle = ((row &lt; collor ? row : collor) - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;<span class="comment">//&#x5708;&#x6570;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; circle; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x6253;&#x5370;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; collor-i; j++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//&#x4ECE;&#x4E0A;&#x5F80;&#x4E0B;&#x7684;&#x6570;&#x636E;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = i+<span class="number">1</span>; k &lt; row- i; k++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[k][collor - <span class="number">1</span> - i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x4F1A;&#x91CD;&#x590D;&#x6253;&#x5370;(&#x4ECE;&#x53F3;&#x5411;&#x5DE6;&#x6253;&#x5370;&#xFF09;</span></span><br><span class="line">            <span class="comment">//row-i-1!=i&#x662F;&#x9632;&#x6B62;&#x67D0;&#x4E00;&#x884C;&#x66FE;&#x7ECF;&#x4ECE;&#x5DE6;</span></span><br><span class="line">            <span class="comment">//&#x5230;&#x53F3;&#x88AB;&#x8F93;&#x51FA;&#xFF0C;&#x53C8;&#x5728;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x65F6;&#x88AB;&#x8F93;&#x51FA;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> m = collor-i<span class="number">-2</span>; (m&gt;=i)&amp;&amp;(row-i<span class="number">-1</span>!=i); m--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[row - i - <span class="number">1</span>][m]);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> n = row-i<span class="number">-2</span>; (n&gt;i)&amp;&amp;(collor-i<span class="number">-1</span>!=i); n--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[n][i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6808;&#x7684;&#x538B;&#x5165;&#x5F39;&#x51FA;&#x5E8F;&#x5217;">&#x6808;&#x7684;&#x538B;&#x5165;&#x3001;&#x5F39;&#x51FA;&#x5E8F;&#x5217;</h1><p>&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x6808;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsPopOrder</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pushV, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; popV)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pushV.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;s; </span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pushV.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            s.push(pushV[i]);</span><br><span class="line">            <span class="keyword">while</span> (!s.empty()&amp;&amp;s.top() == popV[j])</span><br><span class="line">            {</span><br><span class="line">                s.pop();</span><br><span class="line">                j++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> s.empty();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4ECE;&#x4E0A;&#x5F80;&#x4E0B;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;">&#x4ECE;&#x4E0A;&#x5F80;&#x4E0B;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x5C42;&#x6B21;&#x904D;&#x5386;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; PrintFromTopToBottom(TreeNode* root) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">queue</span>&lt;TreeNode*&gt; q;</span><br><span class="line">        TreeNode* p;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> v;</span><br><span class="line">        q.push(root);</span><br><span class="line">        <span class="keyword">while</span> (!q.empty())</span><br><span class="line">        {</span><br><span class="line">            p = q.front(); q.pop();</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                q.push(p-&gt;left);</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                q.push(p-&gt;right);</span><br><span class="line">            v.push_back(p-&gt;val);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x4E2D;&#x548C;&#x4E3A;&#x67D0;&#x4E00;&#x503C;&#x7684;&#x8DEF;&#x5F84;">&#x4E8C;&#x53C9;&#x6811;&#x4E2D;&#x548C;&#x4E3A;&#x67D0;&#x4E00;&#x503C;&#x7684;&#x8DEF;&#x5F84;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode *root,<span class="keyword">int</span> expectNumber)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        temp.push_back(root-&gt;val);</span><br><span class="line">        <span class="keyword">if</span> ((expectNumber == root-&gt;val)&amp;&amp;root-&gt;left == <span class="literal">NULL</span> &amp;&amp; root-&gt;right == <span class="literal">NULL</span>)</span><br><span class="line">            res.push_back(temp);</span><br><span class="line">        <span class="keyword">if</span> (root-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">            dfs(root-&gt;left, (expectNumber - root-&gt;val));</span><br><span class="line">        <span class="keyword">if</span> (root-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">            dfs(root-&gt;right, expectNumber - root-&gt;val);</span><br><span class="line">        temp.pop_back();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; FindPath(TreeNode* root, <span class="keyword">int</span> expectNumber) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;<span class="comment">//&#x8FB9;&#x754C;&#x6761;&#x4EF6;</span></span><br><span class="line">        dfs(root, expectNumber);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x590D;&#x6742;&#x94FE;&#x8868;&#x7684;&#x590D;&#x5236;">&#x590D;&#x6742;&#x94FE;&#x8868;&#x7684;&#x590D;&#x5236;</h1><p>&#x505A;&#x6CD5;&#xFF1A;</p><ol type="1"><li>&#x590D;&#x5236;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5982;&#xFF1A;&#x590D;&#x5236;&#x8282;&#x70B9;A&#x5F97;&#x5230;A1&#xFF0C;&#x5C06;A1&#x63D2;&#x5165;&#x8282;&#x70B9;A&#x540E;&#x9762;</li><li>&#x904D;&#x5386;&#x94FE;&#x8868;&#xFF0C;<code>A1-&gt;random = A-&gt;random-&gt;next;</code>&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x662F;&#x7ED9;&#x590D;&#x5236;&#x8282;&#x70B9;&#x7684;random&#x8D4B;&#x503C;&#xFF0C;&#x6574;&#x4E2A;&#x590D;&#x5236;&#x94FE;&#x8868;&#x91CC;&#xFF0C;&#x4E0D;&#x80FD;&#x51FA;&#x73B0;&#x539F;&#x6765;&#x94FE;&#x8868;&#x7684;&#x8282;&#x70B9;&#x3002;</li><li>&#x5C06;&#x94FE;&#x8868;&#x62C6;&#x5206;&#x6210;&#x539F;&#x94FE;&#x8868;&#x548C;&#x590D;&#x5236;&#x540E;&#x7684;&#x94FE;&#x8868;&#x3002;</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">RandomListNode* <span class="title">Clone</span><span class="params">(RandomListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (!pHead)<span class="comment">//&#x82E5;&#x4E3A;&#x7A7A;,&#x8FD4;&#x56DE;NULL</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        RandomListNode* currNode=pHead,* newNode;<span class="comment">//&#x8868;&#x793A;&#x5F53;&#x524D;&#x7684;&#x8282;&#x70B9;</span></span><br><span class="line">        <span class="keyword">while</span> (currNode!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            newNode= (RandomListNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(RandomListNode));</span><br><span class="line">            <span class="comment">//&#x590D;&#x5236;&#x8282;&#x70B9;&#x4FE1;&#x606F;</span></span><br><span class="line">            newNode-&gt;label = currNode-&gt;label;</span><br><span class="line">            newNode-&gt;next = currNode-&gt;next;</span><br><span class="line">            newNode-&gt;random = currNode-&gt;random;</span><br><span class="line">            <span class="comment">//&#x63D2;&#x5230;&#x540E;&#x9762;</span></span><br><span class="line">            currNode-&gt;next = newNode;</span><br><span class="line">            currNode = newNode-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        currNode = pHead;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//&#x7B2C;&#x4E8C;&#x6B21;&#x904D;&#x5386;</span></span><br><span class="line">        <span class="keyword">while</span> (currNode!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            newNode = currNode-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(currNode-&gt;random!=<span class="literal">NULL</span>)</span><br><span class="line">                newNode-&gt;random = currNode-&gt;random-&gt;next;</span><br><span class="line">            currNode = currNode-&gt;next-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x62C6;&#x5206;</span></span><br><span class="line">        RandomListNode* pCloneHead = pHead-&gt;next,* temp;</span><br><span class="line">        currNode = pHead;</span><br><span class="line">        <span class="keyword">while</span> (currNode-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            temp = currNode-&gt;next;</span><br><span class="line">            currNode-&gt;next = temp-&gt;next;</span><br><span class="line">            currNode = temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pCloneHead;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E0E;&#x53CC;&#x5411;&#x94FE;&#x8868;">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E0E;&#x53CC;&#x5411;&#x94FE;&#x8868;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x5C06;&#x8BE5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x53CC;&#x5411;&#x94FE;&#x8868;&#x3002;&#x8981;&#x6C42;&#x4E0D;&#x80FD;&#x521B;&#x5EFA;&#x4EFB;&#x4F55;&#x65B0;&#x7684;&#x7ED3;&#x70B9;&#xFF0C;&#x53EA;&#x80FD;&#x8C03;&#x6574;&#x6811;&#x4E2D;&#x7ED3;&#x70B9;&#x6307;&#x9488;&#x7684;&#x6307;&#x5411;&#x3002;</p><p>&#x611F;&#x89C9;&#x50CF;&#x662F;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x7EBF;&#x7D22;&#x5316;&#x3002;</p><p>&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E0E;&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;&#x610F;&#x601D;&#x76F8;&#x540C;&#xFF0C;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;/&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#xFF08;Binary Search Tree&#xFF09;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x4E00;&#x68F5;&#x7A7A;&#x6811;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x5177;&#x6709;&#x4E0B;&#x5217;&#x6027;&#x8D28;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#xFF1A;</p><p>&#x82E5;&#x5B83;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x4E0D;&#x7A7A;&#xFF0C;&#x5219;&#x5DE6;&#x5B50;&#x6811;&#x4E0A;&#x6240;&#x6709;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#x5747;&#x5C0F;&#x4E8E;&#x5B83;&#x7684;&#x6839;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#xFF1B;</p><p>&#x82E5;&#x5B83;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x4E0D;&#x7A7A;&#xFF0C;&#x5219;&#x53F3;&#x5B50;&#x6811;&#x4E0A;&#x6240;&#x6709;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#x5747;&#x5927;&#x4E8E;&#x5B83;&#x7684;&#x6839;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#xFF1B;</p><p>&#x5B83;&#x7684;&#x5DE6;&#x3001;&#x53F3;&#x5B50;&#x6811;&#x4E5F;&#x5206;&#x522B;&#x4E3A;&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-1">&#x89E3;&#x6CD5;&#x4E00;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>//&#x5FAA;&#x73AF;&#x5199;&#x6CD5;</span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Convert</span><span class="params">(TreeNode* pRootOfTree)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRootOfTree == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;<span class="comment">//&#x82E5;&#x4E3A;&#x7A7A;&#xFF0C;&#x8FD4;&#x56DE;&#x7A7A;</span></span><br><span class="line">        <span class="built_in">stack</span>&lt;TreeNode*&gt; s;</span><br><span class="line">        TreeNode* p = pRootOfTree, *pre = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">bool</span> isFirst = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (p!=<span class="literal">NULL</span>||!s.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (p!=<span class="literal">NULL</span>)</span><br><span class="line">            {</span><br><span class="line">                s.push(p);</span><br><span class="line">                p = p-&gt;left;</span><br><span class="line">            }</span><br><span class="line">            p = s.top(); s.pop();</span><br><span class="line">            <span class="keyword">if</span> (isFirst)</span><br><span class="line">            {</span><br><span class="line">                pRootOfTree = p;<span class="comment">//&#x5C06;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x8BB0;&#x4E3A;root</span></span><br><span class="line">                pre = pRootOfTree;</span><br><span class="line">                isFirst = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {<span class="comment">//&#x8FDE;&#x63A5;&#x524D;&#x540E;&#x5173;&#x7CFB;</span></span><br><span class="line">                pre-&gt;right = p;</span><br><span class="line">                p-&gt;left = pre;</span><br><span class="line">                pre = p;</span><br><span class="line">            }</span><br><span class="line">            p = p-&gt;right;<span class="comment">//&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#xFF0C;&#x5DE6;&#x4E2D;&#x53F3;&#xFF0C;&#x8FD9;&#x4E2A;&#x5730;&#x65B9;&#x662F;&#x5904;&#x7406;&#x53F3;&#x8FB9;&#x7684;&#x90E8;&#x5206;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pRootOfTree;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-1">&#x89E3;&#x6CD5;&#x4E8C;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Convert</span><span class="params">(TreeNode* pRootOfTree)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRootOfTree == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        TreeNode * pre = <span class="literal">NULL</span>;</span><br><span class="line">        trans(pRootOfTree, pre);</span><br><span class="line">        TreeNode* res = pRootOfTree;</span><br><span class="line">        <span class="keyword">while</span> (res-&gt;left!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = res-&gt;left;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">trans</span><span class="params">(TreeNode * cur, TreeNode *&amp;pre)</span><span class="comment">//&#x7C7B;&#x4F3C;&#x4E8E;&#x6811;&#x7684;&#x5DE6;&#x4E2D;&#x53F3;&#x904D;&#x5386;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (cur == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        trans(cur-&gt;left, pre);</span><br><span class="line">        cur-&gt;left = pre;</span><br><span class="line">        <span class="keyword">if</span> (pre != <span class="literal">NULL</span>)</span><br><span class="line">            pre-&gt;right = cur;</span><br><span class="line">        pre = cur;</span><br><span class="line">        trans(cur-&gt;right, pre);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6392;&#x5217;">&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6392;&#x5217;</h1><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;,&#x6309;&#x5B57;&#x5178;&#x5E8F;&#x6253;&#x5370;&#x51FA;&#x8BE5;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5B57;&#x7B26;&#x7684;&#x6240;&#x6709;&#x6392;&#x5217;&#x3002;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x5B57;&#x7B26;&#x4E32;abc,&#x5219;&#x6253;&#x5370;&#x51FA;&#x7531;&#x5B57;&#x7B26;a,b,c&#x6240;&#x80FD;&#x6392;&#x5217;&#x51FA;&#x6765;&#x7684;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x4E32;abc,acb,bac,bca,cab&#x548C;cba&#x3002;</p><p>&#x8F93;&#x5165;&#x63CF;&#x8FF0;:</p><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;,&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;9(&#x53EF;&#x80FD;&#x6709;&#x5B57;&#x7B26;&#x91CD;&#x590D;),&#x5B57;&#x7B26;&#x53EA;&#x5305;&#x62EC;&#x5927;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; res;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; Permutation(<span class="built_in">string</span> str) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (str != <span class="string">&quot;&quot;</span>)</span><br><span class="line">            dfs(str, <span class="number">0</span>);<span class="comment">//&#x4ECE;0&#x5F00;&#x59CB;DFS</span></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> size = str.size();</span><br><span class="line">        <span class="keyword">if</span> (start == size)<span class="comment">//&#x8FBE;&#x5230;&#x4E86;&#x538B;&#x5165;vector&#x7684;&#x6761;&#x4EF6;</span></span><br><span class="line">        {</span><br><span class="line">            res.push_back(str);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt; size; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (i != start &amp;&amp; str[i] == str[start])</span><br><span class="line">                <span class="keyword">continue</span>;<span class="comment">//&#x9632;&#x6B62;abb&#x8FD9;&#x79CD;&#x4E24;&#x4E2A;&#x4E00;&#x6837;&#x7684;</span></span><br><span class="line">            swap(str[i], str[start]);</span><br><span class="line">            dfs(str, start + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#x7684;&#x6570;&#x5B57;">&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#x7684;&#x6570;&#x5B57;</h1><p>&#x6570;&#x7EC4;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x3002;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;9&#x7684;&#x6570;&#x7EC4;{1,2,3,2,2,2,5,4,2}&#x3002;&#x7531;&#x4E8E;&#x6570;&#x5B57;2&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x4E86;5&#x6B21;&#xFF0C;&#x8D85;&#x8FC7;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x56E0;&#x6B64;&#x8F93;&#x51FA;2&#x3002;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x8F93;&#x51FA;0&#x3002;</p><p>&#x4E0D;&#x80FD;&#x7B80;&#x5355;&#x7684;&#x7528;&#x6392;&#x5E8F;&#xFF0C;&#x56E0;&#x4E3A;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x4E0D;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#xFF0C;&#x8981;&#x8F93;&#x51FA;0.</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O&#xFF08;n&#xFF09;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">MoreThanHalfNum_Solution</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> n = numbers.size();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num = numbers[<span class="number">0</span>], cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == num)</span><br><span class="line">                cnt++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cnt--;</span><br><span class="line">            <span class="keyword">if</span> (cnt == <span class="number">0</span>)<span class="comment">//&#x5982;&#x679C;cnt&#x4E3A;0&#x4E86;&#xFF0C;&#x91CD;&#x65B0;&#x9009;&#x62E9;&#x4E3A;&#x5F53;&#x524D;&#x6570;&#x5B57;&#xFF0C;&#x91CD;&#x65B0;&#x8FDB;&#x884C;&#x8BA1;&#x6570;</span></span><br><span class="line">            {</span><br><span class="line">                num = numbers[i];</span><br><span class="line">                cnt = <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == num)</span><br><span class="line">                cnt++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (cnt * <span class="number">2</span> &gt; n)</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6700;&#x5C0F;&#x7684;k&#x4E2A;&#x6570;">&#x6700;&#x5C0F;&#x7684;K&#x4E2A;&#x6570;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;-2">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x5077;&#x61D2;&#x7684;&#x5199;&#x6CD5;&#xFF08;&#x8FD9;&#x6837;&#x4E5F;&#x80FD;&#x8FC7;&#xFF09;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;O&#xFF08;n*lg n&#xFF09;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; GetLeastNumbers_Solution(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; input, <span class="keyword">int</span> k)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; input.size())</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        res.resize(k);</span><br><span class="line">        sort(input.begin(), input.end());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        {</span><br><span class="line">            res[i] = input[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-2">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x8003;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x7684;&#x601D;&#x60F3;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x8003;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x7684;&#x601D;&#x60F3;</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; GetLeastNumbers_Solution(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; input, <span class="keyword">int</span> k)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; input.size() || k &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        res.resize(k);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>, high = input.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (low &lt; high)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> temp = partition(input, low, high);</span><br><span class="line">            <span class="keyword">if</span> (temp == k)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (high &gt; k)<span class="comment">//&#x5F53;&#x524D;&#x533A;&#x95F4;&#x5927;&#x4E8E;k</span></span><br><span class="line">                high = temp - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                low = temp + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        {</span><br><span class="line">            res[i] = input[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;input, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> cur = input[low], i = low, j = high;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;j)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (j &gt;i &amp;&amp; input[j] &gt;= cur)</span><br><span class="line">                j--;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; j&amp;&amp;input[i] &lt;= cur)</span><br><span class="line">                i++;</span><br><span class="line">            swap(input[i], input[j]);</span><br><span class="line">        }</span><br><span class="line">        swap(input[low], input[i]);</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x8FDE;&#x7EED;&#x5B50;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5927;&#x548C;">&#x8FDE;&#x7EED;&#x5B50;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5927;&#x548C;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>HZ&#x5076;&#x5C14;&#x4F1A;&#x62FF;&#x4E9B;&#x4E13;&#x4E1A;&#x95EE;&#x9898;&#x6765;&#x5FFD;&#x60A0;&#x90A3;&#x4E9B;&#x975E;&#x8BA1;&#x7B97;&#x673A;&#x4E13;&#x4E1A;&#x7684;&#x540C;&#x5B66;&#x3002;&#x4ECA;&#x5929;&#x6D4B;&#x8BD5;&#x7EC4;&#x5F00;&#x5B8C;&#x4F1A;&#x540E;,&#x4ED6;&#x53C8;&#x53D1;&#x8BDD;&#x4E86;:&#x5728;&#x53E4;&#x8001;&#x7684;&#x4E00;&#x7EF4;&#x6A21;&#x5F0F;&#x8BC6;&#x522B;&#x4E2D;,&#x5E38;&#x5E38;&#x9700;&#x8981;&#x8BA1;&#x7B97;&#x8FDE;&#x7EED;&#x5B50;&#x5411;&#x91CF;&#x7684;&#x6700;&#x5927;&#x548C;,&#x5F53;&#x5411;&#x91CF;&#x5168;&#x4E3A;&#x6B63;&#x6570;&#x7684;&#x65F6;&#x5019;,&#x95EE;&#x9898;&#x5F88;&#x597D;&#x89E3;&#x51B3;&#x3002;&#x4F46;&#x662F;,&#x5982;&#x679C;&#x5411;&#x91CF;&#x4E2D;&#x5305;&#x542B;&#x8D1F;&#x6570;,&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x5305;&#x542B;&#x67D0;&#x4E2A;&#x8D1F;&#x6570;,&#x5E76;&#x671F;&#x671B;&#x65C1;&#x8FB9;&#x7684;&#x6B63;&#x6570;&#x4F1A;&#x5F25;&#x8865;&#x5B83;&#x5462;&#xFF1F;&#x4F8B;&#x5982;:{6,-3,-2,7,-15,1,2,2},&#x8FDE;&#x7EED;&#x5B50;&#x5411;&#x91CF;&#x7684;&#x6700;&#x5927;&#x548C;&#x4E3A;8(&#x4ECE;&#x7B2C;0&#x4E2A;&#x5F00;&#x59CB;,&#x5230;&#x7B2C;3&#x4E2A;&#x4E3A;&#x6B62;)&#x3002;&#x7ED9;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x8FD4;&#x56DE;&#x5B83;&#x7684;&#x6700;&#x5927;&#x8FDE;&#x7EED;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x548C;&#xFF0C;&#x4F60;&#x4F1A;&#x4E0D;&#x4F1A;&#x88AB;&#x4ED6;&#x5FFD;&#x60A0;&#x4F4F;&#xFF1F;(&#x5B50;&#x5411;&#x91CF;&#x7684;&#x957F;&#x5EA6;&#x81F3;&#x5C11;&#x662F;1)</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;O&#xFF08;n&#xFF09;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class Solution </span><br><span class="line">{</span><br><span class="line">public:</span><br><span class="line">    int FindGreatestSumOfSubArray(vector&lt;int&gt; array) </span><br><span class="line">    {</span><br><span class="line">        int start, end, maxsum = 0xFFFFFFFF, tempsum = 0xFFFFFFFF, n = array.size(), tempstart;</span><br><span class="line">        if (n==0)</span><br><span class="line">            return 0;</span><br><span class="line">        </span><br><span class="line">        for (int i = 0; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            if (tempsum &lt; 0)</span><br><span class="line">            {</span><br><span class="line">                tempsum = array[i];</span><br><span class="line">                tempstart = i;</span><br><span class="line">            }</span><br><span class="line">            else</span><br><span class="line">                tempsum+= array[i];</span><br><span class="line">            if (tempsum &gt; maxsum)</span><br><span class="line">            {</span><br><span class="line">                maxsum = tempsum;</span><br><span class="line">                start = tempstart;</span><br><span class="line">                end = i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        return maxsum;</span><br><span class="line">    </span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x4ECE;1&#x5230;n&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;">&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF08;&#x4ECE;1&#x5230;n&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF09;</h1><p>&#x6C42;&#x51FA;1~13&#x7684;&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;,&#x5E76;&#x7B97;&#x51FA;100~1300&#x7684;&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF1F;&#x4E3A;&#x6B64;&#x4ED6;&#x7279;&#x522B;&#x6570;&#x4E86;&#x4E00;&#x4E0B;1~13&#x4E2D;&#x5305;&#x542B;1&#x7684;&#x6570;&#x5B57;&#x6709;1&#x3001;10&#x3001;11&#x3001;12&#x3001;13&#x56E0;&#x6B64;&#x5171;&#x51FA;&#x73B0;6&#x6B21;,&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x540E;&#x9762;&#x95EE;&#x9898;&#x4ED6;&#x5C31;&#x6CA1;&#x8F99;&#x4E86;&#x3002;ACMer&#x5E0C;&#x671B;&#x4F60;&#x4EEC;&#x5E2E;&#x5E2E;&#x4ED6;,&#x5E76;&#x628A;&#x95EE;&#x9898;&#x66F4;&#x52A0;&#x666E;&#x904D;&#x5316;,&#x53EF;&#x4EE5;&#x5F88;&#x5FEB;&#x7684;&#x6C42;&#x51FA;&#x4EFB;&#x610F;&#x975E;&#x8D1F;&#x6574;&#x6570;&#x533A;&#x95F4;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF08;&#x4ECE;1 &#x5230; n &#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF09;&#x3002;</p><p>&#x601D;&#x8DEF;&#x5206;&#x6790;&#xFF1A;</p><p>&#x8BBE;N = abcde ,&#x5176;&#x4E2D;abcde&#x5206;&#x522B;&#x4E3A;&#x5341;&#x8FDB;&#x5236;&#x4E2D;&#x5404;&#x4F4D;&#x4E0A;&#x7684;&#x6570;&#x5B57;&#x3002; &#x5982;&#x679C;&#x8981;&#x8BA1;&#x7B97;&#x767E;&#x4F4D;&#x4E0A;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x5B83;&#x8981;&#x53D7;&#x5230;3&#x65B9;&#x9762;&#x7684;&#x5F71;&#x54CD;&#xFF1A;&#x767E;&#x4F4D;&#x4E0A;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x767E;&#x4F4D;&#x4EE5;&#x4E0B;&#xFF08;&#x4F4E;&#x4F4D;&#xFF09;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x767E;&#x4F4D;&#x4EE5;&#x4E0A;&#xFF08;&#x9AD8;&#x4F4D;&#xFF09;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x2460; &#x5982;&#x679C;&#x767E;&#x4F4D;&#x4E0A;&#x6570;&#x5B57;&#x4E3A;0&#xFF0C;&#x767E;&#x4F4D;&#x4E0A;&#x53EF;&#x80FD;&#x51FA;&#x73B0;1&#x7684;&#x6B21;&#x6570;&#x7531;&#x66F4;&#x9AD8;&#x4F4D;&#x51B3;&#x5B9A;&#x3002;&#x6BD4;&#x5982;&#xFF1A;12013&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x53EF;&#x80FD;&#x662F;&#xFF1A;100~199&#xFF0C;1100~1199,2100~2199&#xFF0C;&#xFF0C;...&#xFF0C;11100~11199&#xFF0C;&#x4E00;&#x5171;1200&#x4E2A;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x662F;&#x7531;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;&#xFF08;12&#xFF09;&#x51B3;&#x5B9A;&#xFF0C;&#x5E76;&#x4E14;&#x7B49;&#x4E8E;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;&#xFF08;12&#xFF09;&#x4E58;&#x4EE5; &#x5F53;&#x524D;&#x4F4D;&#x6570;&#xFF08;100&#xFF09;&#x3002;</p><p>&#x2461; &#x5982;&#x679C;&#x767E;&#x4F4D;&#x4E0A;&#x6570;&#x5B57;&#x4E3A;1&#xFF0C;&#x767E;&#x4F4D;&#x4E0A;&#x53EF;&#x80FD;&#x51FA;&#x73B0;1&#x7684;&#x6B21;&#x6570;&#x4E0D;&#x4EC5;&#x53D7;&#x66F4;&#x9AD8;&#x4F4D;&#x5F71;&#x54CD;&#x8FD8;&#x53D7;&#x4F4E;&#x4F4D;&#x5F71;&#x54CD;&#x3002;&#x6BD4;&#x5982;&#xFF1A;12113&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x767E;&#x4F4D;&#x53D7;&#x9AD8;&#x4F4D;&#x5F71;&#x54CD;&#x51FA;&#x73B0;&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;100~199&#xFF0C;1100~1199,2100~2199&#xFF0C;&#xFF0C;....&#xFF0C;11100~11199&#xFF0C;&#x4E00;&#x5171;1200&#x4E2A;&#x3002;&#x548C;&#x4E0A;&#x9762;&#x60C5;&#x51B5;&#x4E00;&#x6837;&#xFF0C;&#x5E76;&#x4E14;&#x7B49;&#x4E8E;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;&#xFF08;12&#xFF09;&#x4E58;&#x4EE5; &#x5F53;&#x524D;&#x4F4D;&#x6570;&#xFF08;100&#xFF09;&#x3002;&#x4F46;&#x540C;&#x65F6;&#x5B83;&#x8FD8;&#x53D7;&#x4F4E;&#x4F4D;&#x5F71;&#x54CD;&#xFF0C;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;12100~12113,&#x4E00;&#x5171;114&#x4E2A;&#xFF0C;&#x7B49;&#x4E8E;&#x4F4E;&#x4F4D;&#x6570;&#x5B57;&#xFF08;113&#xFF09;+1&#x3002;</p><p>&#x2462; &#x5982;&#x679C;&#x767E;&#x4F4D;&#x4E0A;&#x6570;&#x5B57;&#x5927;&#x4E8E;1&#xFF08;2~9&#xFF09;&#xFF0C;&#x5219;&#x767E;&#x4F4D;&#x4E0A;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x4EC5;&#x7531;&#x66F4;&#x9AD8;&#x4F4D;&#x51B3;&#x5B9A;&#xFF0C;&#x6BD4;&#x5982;12213&#xFF0C;&#x5219;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;100~199,1100~1199&#xFF0C;2100~2199&#xFF0C;...&#xFF0C;11100~11199,12100~12199,&#x4E00;&#x5171;&#x6709;1300&#x4E2A;&#xFF0C;&#x5E76;&#x4E14;&#x7B49;&#x4E8E;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;+1&#xFF08;12+1&#xFF09;&#x4E58;&#x4EE5;&#x5F53;&#x524D;&#x4F4D;&#x6570;&#xFF08;100&#xFF09;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">NumberOf1Between1AndN_Solution</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i*=<span class="number">10</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> a = n / i;</span><br><span class="line">            <span class="keyword">int</span> b = n % i;</span><br><span class="line">            cnt += (a + <span class="number">8</span>) / <span class="number">10</span> * i;</span><br><span class="line">            <span class="keyword">if</span> (a % <span class="number">10</span> == <span class="number">1</span>)</span><br><span class="line">                cnt += (b + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x628A;&#x6570;&#x7EC4;&#x6392;&#x6210;&#x6700;&#x5C0F;&#x7684;&#x6570;">&#x628A;&#x6570;&#x7EC4;&#x6392;&#x6210;&#x6700;&#x5C0F;&#x7684;&#x6570;</h1><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x6570;&#x7EC4;&#xFF0C;&#x628A;&#x6570;&#x7EC4;&#x91CC;&#x6240;&#x6709;&#x6570;&#x5B57;&#x62FC;&#x63A5;&#x8D77;&#x6765;&#x6392;&#x6210;&#x4E00;&#x4E2A;&#x6570;&#xFF0C;&#x6253;&#x5370;&#x80FD;&#x62FC;&#x63A5;&#x51FA;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x4E2D;&#x6700;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;&#x3002;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x6570;&#x7EC4;{3&#xFF0C;32&#xFF0C;321}&#xFF0C;&#x5219;&#x6253;&#x5370;&#x51FA;&#x8FD9;&#x4E09;&#x4E2A;&#x6570;&#x5B57;&#x80FD;&#x6392;&#x6210;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x5B57;&#x4E3A;321323&#x3002;</p><p>&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x6BD4;&#x8F83;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32; S1 &#x548C; S2 &#x7684;&#x5927;&#x5C0F;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x6BD4;&#x8F83;&#x7684;&#x662F; S1+S2 &#x548C; S2+S1 &#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5982;&#x679C; S1+S2 &lt; S2+S1&#xFF0C;&#x90A3;&#x4E48;&#x5E94;&#x8BE5;&#x628A; S1 &#x6392;&#x5728;&#x524D;&#x9762;&#xFF0C;&#x5426;&#x5219;&#x5E94;&#x8BE5;&#x628A; S2 &#x6392;&#x5728;&#x524D;&#x9762;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">string</span> s1 = to_string(a), s2 = to_string(b);</span><br><span class="line">        <span class="built_in">string</span> s3 = s1 + s2, s4 = s2 + s1;</span><br><span class="line">        <span class="keyword">if</span> (s3 &lt; s4)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">PrintMinNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (numbers.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        sort(numbers.begin(), numbers.end(),cmp);</span><br><span class="line">        <span class="built_in">string</span> res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i = numbers.begin(); i != numbers.end(); i++)</span><br><span class="line">        {</span><br><span class="line">            res += to_string(*i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E11;&#x6570;">&#x4E11;&#x6570;</h1><p>&#x628A;&#x53EA;&#x5305;&#x542B;&#x8D28;&#x56E0;&#x5B50;2&#x3001;3&#x548C;5&#x7684;&#x6570;&#x79F0;&#x4F5C;&#x4E11;&#x6570;&#xFF08;Ugly Number&#xFF09;&#x3002;&#x4F8B;&#x5982;6&#x3001;8&#x90FD;&#x662F;&#x4E11;&#x6570;&#xFF0C;&#x4F46;14&#x4E0D;&#x662F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5305;&#x542B;&#x8D28;&#x56E0;&#x5B50;7&#x3002; &#x4E60;&#x60EF;&#x4E0A;&#x6211;&#x4EEC;&#x628A;1&#x5F53;&#x505A;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x4E11;&#x6570;&#x3002;&#x6C42;&#x6309;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x987A;&#x5E8F;&#x7684;&#x7B2C;N&#x4E2A;&#x4E11;&#x6570;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetUglyNumber_Solution</span><span class="params">(<span class="keyword">int</span> index)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">7</span>)</span><br><span class="line">            <span class="keyword">return</span> index;</span><br><span class="line">        <span class="keyword">int</span> p2 = <span class="number">0</span>, p3 = <span class="number">0</span>, p5 = <span class="number">0</span>, num = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">        res.push_back(num);</span><br><span class="line">        <span class="keyword">while</span> (res.size()&lt;index)</span><br><span class="line">        {</span><br><span class="line">            num = min(res[p2] * <span class="number">2</span>, min(res[p3] * <span class="number">3</span>, res[p5] * <span class="number">5</span>));</span><br><span class="line">            <span class="keyword">if</span> (res[p2] * <span class="number">2</span> == num)</span><br><span class="line">                p2++;</span><br><span class="line">            <span class="keyword">if</span> (res[p3] * <span class="number">3</span> == num)</span><br><span class="line">                p3++;</span><br><span class="line">            <span class="keyword">if</span> (res[p5] * <span class="number">5</span> == num)<span class="comment">//&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x91CD;&#x590D;&#xFF0C;&#x8FD9;&#x91CC;&#x5FC5;&#x987B;&#x662F;&#x4E09;&#x4E2A;if</span></span><br><span class="line">                p5++;</span><br><span class="line">            res.push_back(num);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;">&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5728;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;(0&lt;=&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&lt;=10000&#xFF0C;&#x5168;&#x90E8;&#x7531;&#x5B57;&#x6BCD;&#x7EC4;&#x6210;)&#x4E2D;&#x627E;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;,&#x5E76;&#x8FD4;&#x56DE;&#x5B83;&#x7684;&#x4F4D;&#x7F6E;, &#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x8FD4;&#x56DE; -1&#xFF08;&#x9700;&#x8981;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#xFF09;.</p><p>&#x4E24;&#x6B21;&#x904D;&#x5386;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">FirstNotRepeatingChar</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">256</span>] = { <span class="number">0</span> };</span><br><span class="line">        <span class="keyword">int</span> n = str.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            s[str[i]]++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (s[str[i]] == <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7ED3;&#x70B9;">&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;&#x627E;&#x51FA;&#x5B83;&#x4EEC;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7ED3;&#x70B9;&#x3002;</p><p>&#x4E24;&#x6B21;&#x904D;&#x5386;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">FindFirstCommonNode</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        ListNode* p1 = pHead1;</span><br><span class="line">        ListNode* p2 = pHead2;</span><br><span class="line">        <span class="keyword">if</span> (p1 == <span class="literal">NULL</span> || p2 == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (p1!=p2)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (p1 == <span class="literal">NULL</span>)</span><br><span class="line">                p1 = pHead2;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p1 = p1-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (p2 == <span class="literal">NULL</span>)</span><br><span class="line">                p2 = pHead1;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p2 = p2-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> p2;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x5B57;&#x5728;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;">&#x6570;&#x5B57;&#x5728;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7EDF;&#x8BA1;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5728;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x3002;</p><p>&#x4E8C;&#x5206;&#x6CD5;&#x67E5;&#x627E;&#xFF0C;&#x56E0;&#x4E3A;&#x6570;&#x7EC4;&#x4E2D;&#x90FD;&#x662F;&#x6574;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x641C;&#x7D22;num-0.5&#x548C;num+0.5&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetNumberOfK</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data, <span class="keyword">int</span> k)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">double</span> temp1 = k - <span class="number">0.5</span>, temp2 = k + <span class="number">0.5</span>;</span><br><span class="line">        <span class="keyword">int</span> res = binSearch(data, temp2) - binSearch(data, temp1);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">binSearch</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data, <span class="keyword">double</span> num)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>, end = data.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mid;</span><br><span class="line">        <span class="keyword">while</span> (start&lt;=end)</span><br><span class="line">        {</span><br><span class="line">            mid = (end - start) / <span class="number">2</span> + start;</span><br><span class="line">            <span class="keyword">if</span> (data[mid] &lt; num)</span><br><span class="line">                start = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (data[mid] &gt; num)</span><br><span class="line">                end = mid - <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> start;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x6C42;&#x8BE5;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x3002;&#x4ECE;&#x6839;&#x7ED3;&#x70B9;&#x5230;&#x53F6;&#x7ED3;&#x70B9;&#x4F9D;&#x6B21;&#x7ECF;&#x8FC7;&#x7684;&#x7ED3;&#x70B9;&#xFF08;&#x542B;&#x6839;&#x3001;&#x53F6;&#x7ED3;&#x70B9;&#xFF09;&#x5F62;&#x6210;&#x6811;&#x7684;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#xFF0C;&#x6700;&#x957F;&#x8DEF;&#x5F84;&#x7684;&#x957F;&#x5EA6;&#x4E3A;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x3002;</p><p>&#x7ECF;&#x5178;&#x7684;&#x9012;&#x5F52;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max(TreeDepth(pRoot-&gt;left) + <span class="number">1</span>, TreeDepth(pRoot-&gt;right) + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;">&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5224;&#x65AD;&#x8BE5;&#x4E8C;&#x53C9;&#x6811;&#x662F;&#x5426;&#x662F;&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><p>&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF08;Self-balancing binary search tree&#xFF09;&#x53C8;&#x88AB;&#x79F0;&#x4E3A;AVL&#x6811;&#xFF08;&#x6709;&#x522B;&#x4E8E;AVL&#x7B97;&#x6CD5;&#xFF09;&#xFF0C;&#x4E14;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x6027;&#x8D28;&#xFF1A;&#x5B83;&#x662F;&#x4E00;&#x68F5;&#x7A7A;&#x6811;&#x6216;&#x5B83;&#x7684;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x5B50;&#x6811;&#x7684;&#x9AD8;&#x5EA6;&#x5DEE;&#x7684;&#x7EDD;&#x5BF9;&#x503C;&#x4E0D;&#x8D85;&#x8FC7;1&#xFF0C;&#x5E76;&#x4E14;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x5B50;&#x6811;&#x90FD;&#x662F;&#x4E00;&#x68F5;&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x7248;&#x4EE3;&#x7801;&#xFF08;&#x80FD;AC&#xFF0C;&#x6CA1;&#x6709;&#x526A;&#x679D;&#xFF0C;&#x501F;&#x7528;&#x4E0A;&#x4E00;&#x9898;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsBalanced_Solution</span><span class="params">(TreeNode* pRoot)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (IsBalanced_Solution(pRoot-&gt;left) == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (IsBalanced_Solution(pRoot-&gt;right) == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> leftDepth = TreeDepth(pRoot-&gt;left);</span><br><span class="line">        <span class="keyword">int</span> rightDepth = TreeDepth(pRoot-&gt;right);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(leftDepth - rightDepth) &gt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max(TreeDepth(pRoot-&gt;left) + <span class="number">1</span>, TreeDepth(pRoot-&gt;right) + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x7B2C;&#x4E8C;&#x7248;&#x4EE3;&#x7801;&#xFF0C;&#x6709;&#x526A;&#x679D;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsBalanced_Solution</span><span class="params">(TreeNode* pRoot)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (TreeDepth(pRoot) == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> leftDepth = TreeDepth(pRoot-&gt;left);</span><br><span class="line">        <span class="keyword">if</span> (leftDepth == <span class="number">-1</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> rightDepth = TreeDepth(pRoot-&gt;right);</span><br><span class="line">        <span class="keyword">if</span> (rightDepth == <span class="number">-1</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(rightDepth - leftDepth) &gt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max(rightDepth, leftDepth) + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x7EC4;&#x4E2D;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;">&#x6570;&#x7EC4;&#x4E2D;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x4E00;&#x4E2A;&#x6574;&#x578B;&#x6570;&#x7EC4;&#x91CC;&#x9664;&#x4E86;&#x4E24;&#x4E2A;&#x6570;&#x5B57;&#x4E4B;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#x3002;&#x8BF7;&#x5199;&#x7A0B;&#x5E8F;&#x627E;&#x51FA;&#x8FD9;&#x4E24;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x9898;&#x6539;&#x6210;&#xFF0C;&#x4E00;&#x4E2A;&#x6574;&#x5F62;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x6B21;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5F02;&#x6216;&#x6765;&#x505A;&#xFF0C;&#x628A;&#x8FD9;&#x4E2A;&#x6570;&#x7EC4;&#x91CC;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x5F02;&#x6216;&#x3002;</p><p>&#x539F;&#x56E0;&#x662F;&#xFF0C;&#x76F8;&#x540C;&#x7684;&#x6570;&#x5F02;&#x6216;&#x7ED3;&#x679C;&#x4E3A;0&#x3002;</p><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x8003;&#x8651;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7248;&#x672C;&#xFF1A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x91CC;&#x9664;&#x4E86;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x4E4B;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#x3002;&#x8BF7;&#x5199;&#x7A0B;&#x5E8F;&#x627E;&#x51FA;&#x8FD9;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x7684;&#x7A81;&#x7834;&#x53E3;&#x5728;&#x54EA;&#x91CC;&#xFF1F;&#x9898;&#x76EE;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5F3A;&#x8C03;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x51FA;&#x73B0;&#x4E24;&#x6B21;&#xFF1F;&#x6211;&#x4EEC;&#x60F3;&#x5230;&#x4E86;&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#x7684;&#x6027;&#x8D28;&#xFF1A;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5F02;&#x6216;&#x5B83;&#x81EA;&#x5DF1;&#x90FD;&#x7B49;&#x4E8E;0 &#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4ECE;&#x5934;&#x5230;&#x5C3E;&#x4F9D;&#x6B21;&#x5F02;&#x6216;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x90A3;&#x4E48;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#x521A;&#x597D;&#x662F;&#x90A3;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x56E0;&#x4E3A;&#x90A3;&#x4E9B;&#x51FA;&#x73B0;&#x4E24;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x5168;&#x90E8;&#x5728;&#x5F02;&#x6216;&#x4E2D;&#x62B5;&#x6D88;&#x6389;&#x4E86;&#x3002;</p><p>&#x6709;&#x4E86;&#x4E0A;&#x9762;&#x7B80;&#x5355;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x56DE;&#x5230;&#x539F;&#x59CB;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5982;&#x679C;&#x80FD;&#x591F;&#x628A;&#x539F;&#x6570;&#x7EC4;&#x5206;&#x4E3A;&#x4E24;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x3002;&#x5728;&#x6BCF;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x800C;&#x5176;&#x5B83;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E24;&#x6B21;&#x3002;&#x5982;&#x679C;&#x80FD;&#x591F;&#x8FD9;&#x6837;&#x62C6;&#x5206;&#x539F;&#x6570;&#x7EC4;&#xFF0C;&#x6309;&#x7167;&#x524D;&#x9762;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x5206;&#x522B;&#x6C42;&#x51FA;&#x8FD9;&#x4E24;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x4E86;&#x3002;</p><p>&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x4ECE;&#x5934;&#x5230;&#x5C3E;&#x4F9D;&#x6B21;&#x5F02;&#x6216;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x90A3;&#x4E48;&#x6700;&#x7EC8;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x4E24;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x7684;&#x5F02;&#x6216;&#x7ED3;&#x679C;&#x3002;&#x56E0;&#x4E3A;&#x5176;&#x5B83;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#xFF0C;&#x5728;&#x5F02;&#x6216;&#x4E2D;&#x5168;&#x90E8;&#x62B5;&#x6D88;&#x6389;&#x4E86;&#x3002;&#x7531;&#x4E8E;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x5B57;&#x80AF;&#x5B9A;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x5F02;&#x6216;&#x7ED3;&#x679C;&#x80AF;&#x5B9A;&#x4E0D;&#x4E3A;0 &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5728;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x6570;&#x5B57;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x4E2D;&#x81F3;&#x5C11;&#x5C31;&#x6709;&#x4E00;&#x4F4D;&#x4E3A;1 &#x3002;&#x6211;&#x4EEC;&#x5728;&#x7ED3;&#x679C;&#x6570;&#x5B57;&#x4E2D;&#x627E;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x4E3A;1 &#x7684;&#x4F4D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x8BB0;&#x4E3A;&#x7B2C;N &#x4F4D;&#x3002;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x4EE5;&#x7B2C;N &#x4F4D;&#x662F;&#x4E0D;&#x662F;1 &#x4E3A;&#x6807;&#x51C6;&#x628A;&#x539F;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6570;&#x5B57;&#x5206;&#x6210;&#x4E24;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x4E2D;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x7B2C;N &#x4F4D;&#x90FD;&#x4E3A;1 &#xFF0C;&#x800C;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x7B2C;N &#x4F4D;&#x90FD;&#x4E3A;0 &#x3002;</p><p>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x628A;&#x539F;&#x6570;&#x7EC4;&#x5206;&#x6210;&#x4E86;&#x4E24;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x90FD;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x800C;&#x5176;&#x5B83;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#x3002;&#x56E0;&#x6B64;&#x5230;&#x6B64;&#x4E3A;&#x6B62;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x95EE;&#x9898;&#x6211;&#x4EEC;&#x90FD;&#x5DF2;&#x7ECF;&#x89E3;&#x51B3;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">FindNumsAppearOnce</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data, <span class="keyword">int</span>* num1, <span class="keyword">int</span> *num2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (data.size() &lt; <span class="number">2</span>)<span class="comment">//&#x5F02;&#x5E38;&#x60C5;&#x51B5;</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>,n=data.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="comment">//&#x6240;&#x6709;&#x7684;&#x6570;&#xFF0C;&#x5168;&#x90E8;&#x76F8;&#x4E92;&#x5F02;&#x6216;</span></span><br><span class="line">        {</span><br><span class="line">            temp = temp ^ data[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//&#x5F02;&#x5E38;&#x60C5;&#x51B5;&#x3002;</span></span><br><span class="line">        <span class="keyword">int</span> first = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((temp&amp;<span class="number">1</span>)==<span class="number">0</span>)<span class="comment">//&#x627E;&#x51FA;&#x7B2C;&#x4E00;&#x4F4D;&#xFF0C;&#x6570;&#x503C;&#x4E0D;&#x4E3A;0&#x7684;</span></span><br><span class="line">        {</span><br><span class="line">            temp = temp &gt;&gt; <span class="number">1</span>;<span class="comment">//&#x53F3;&#x79FB;&#x4E00;&#x4F4D;</span></span><br><span class="line">            first++;</span><br><span class="line">        }</span><br><span class="line">        *num1 = <span class="number">0</span>; *num2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (isBit(data[i], first))</span><br><span class="line">                *num1 = *num1^data[i];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                *num2 = *num2^data[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5224;&#x65AD;&#x67D0;&#x4E00;&#x4F4D;&#x662F;&#x4E0D;&#x662F;1&#x7684;&#x51FD;&#x6570;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isBit</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        num = num &gt;&gt; index;</span><br><span class="line">        <span class="keyword">return</span> (num &amp; <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x548C;&#x4E3A;s&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;">&#x548C;&#x4E3A;S&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5C0F;&#x660E;&#x5F88;&#x559C;&#x6B22;&#x6570;&#x5B66;,&#x6709;&#x4E00;&#x5929;&#x4ED6;&#x5728;&#x505A;&#x6570;&#x5B66;&#x4F5C;&#x4E1A;&#x65F6;,&#x8981;&#x6C42;&#x8BA1;&#x7B97;&#x51FA;9~16&#x7684;&#x548C;,&#x4ED6;&#x9A6C;&#x4E0A;&#x5C31;&#x5199;&#x51FA;&#x4E86;&#x6B63;&#x786E;&#x7B54;&#x6848;&#x662F;100&#x3002;&#x4F46;&#x662F;&#x4ED6;&#x5E76;&#x4E0D;&#x6EE1;&#x8DB3;&#x4E8E;&#x6B64;,&#x4ED6;&#x5728;&#x60F3;&#x7A76;&#x7ADF;&#x6709;&#x591A;&#x5C11;&#x79CD;&#x8FDE;&#x7EED;&#x7684;&#x6B63;&#x6570;&#x5E8F;&#x5217;&#x7684;&#x548C;&#x4E3A;100(&#x81F3;&#x5C11;&#x5305;&#x62EC;&#x4E24;&#x4E2A;&#x6570;)&#x3002;&#x6CA1;&#x591A;&#x4E45;,&#x4ED6;&#x5C31;&#x5F97;&#x5230;&#x53E6;&#x4E00;&#x7EC4;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x548C;&#x4E3A;100&#x7684;&#x5E8F;&#x5217;:18,19,20,21,22&#x3002;&#x73B0;&#x5728;&#x628A;&#x95EE;&#x9898;&#x4EA4;&#x7ED9;&#x4F60;,&#x4F60;&#x80FD;&#x4E0D;&#x80FD;&#x4E5F;&#x5F88;&#x5FEB;&#x7684;&#x627E;&#x51FA;&#x6240;&#x6709;&#x548C;&#x4E3A;S&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;? Good Luck!</p><p>&#x8F93;&#x51FA;&#x63CF;&#x8FF0;:</p><p>&#x8F93;&#x51FA;&#x6240;&#x6709;&#x548C;&#x4E3A;S&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;&#x3002;&#x5E8F;&#x5217;&#x5185;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x81F3;&#x5927;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x5E8F;&#x5217;&#x95F4;&#x6309;&#x7167;&#x5F00;&#x59CB;&#x6570;&#x5B57;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x987A;&#x5E8F;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9898;&#x4E0E; &#x548C;&#x4E3A;S&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x5B57; &#x7C7B;&#x4F3C;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;</p><p>&#x65B9;&#x6CD5;&#x662F;&#x7528;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x53BB;&#x505A;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; FindContinuousSequence(<span class="keyword">int</span> sum)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">1</span>, end = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> cur;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="keyword">while</span> (start &lt; end)</span><br><span class="line">        {</span><br><span class="line">            cur = (start + end)*(end - start + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (cur &gt; sum)</span><br><span class="line">                start++;</span><br><span class="line">            <span class="keyword">if</span> (cur &lt; sum)</span><br><span class="line">                end++;</span><br><span class="line">            <span class="keyword">if</span> (cur == sum)</span><br><span class="line">            {</span><br><span class="line">                temp.clear();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= end; i++)</span><br><span class="line">                {</span><br><span class="line">                    temp.push_back(i);</span><br><span class="line">                }</span><br><span class="line">                start++;</span><br><span class="line">                res.push_back(temp);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x548C;&#x4E3A;s&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x5B57;">&#x548C;&#x4E3A;S&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x5B57;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x9012;&#x589E;&#x6392;&#x5E8F;&#x7684;&#x6570;&#x7EC4;&#x548C;&#x4E00;&#x4E2A;&#x6570;&#x5B57;S&#xFF0C;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x67E5;&#x627E;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x4F7F;&#x5F97;&#x4ED6;&#x4EEC;&#x7684;&#x548C;&#x6B63;&#x597D;&#x662F;S&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x5BF9;&#x6570;&#x5B57;&#x7684;&#x548C;&#x7B49;&#x4E8E;S&#xFF0C;&#x8F93;&#x51FA;&#x4E24;&#x4E2A;&#x6570;&#x7684;&#x4E58;&#x79EF;&#x6700;&#x5C0F;&#x7684;&#x3002;</p><p>&#x8F93;&#x51FA;&#x63CF;&#x8FF0;:</p><p>&#x5BF9;&#x5E94;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#xFF0C;&#x8F93;&#x51FA;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x5C0F;&#x7684;&#x5148;&#x8F93;&#x51FA;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; FindNumbersWithSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">array</span>, <span class="keyword">int</span> sum) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">int</span> num1, num2 = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (num1=<span class="number">0</span>; num1 &lt; n; )</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[num1] + <span class="built_in">array</span>[num2] &gt; sum)</span><br><span class="line">                num2--;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[num1] + <span class="built_in">array</span>[num2] &lt; sum)</span><br><span class="line">                num1++;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[num1] + <span class="built_in">array</span>[num2] == sum)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(<span class="built_in">array</span>[num1]);</span><br><span class="line">                res.push_back(<span class="built_in">array</span>[num2]);</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5DE6;&#x65CB;&#x8F6C;&#x5B57;&#x7B26;&#x4E32;">&#x5DE6;&#x65CB;&#x8F6C;&#x5B57;&#x7B26;&#x4E32;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x6C47;&#x7F16;&#x8BED;&#x8A00;&#x4E2D;&#x6709;&#x4E00;&#x79CD;&#x79FB;&#x4F4D;&#x6307;&#x4EE4;&#x53EB;&#x505A;&#x5FAA;&#x73AF;&#x5DE6;&#x79FB;&#xFF08;ROL&#xFF09;&#xFF0C;&#x73B0;&#x5728;&#x6709;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x5B57;&#x7B26;&#x4E32;&#x6A21;&#x62DF;&#x8FD9;&#x4E2A;&#x6307;&#x4EE4;&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x3002;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x7ED9;&#x5B9A;&#x7684;&#x5B57;&#x7B26;&#x5E8F;&#x5217;S&#xFF0C;&#x8BF7;&#x4F60;&#x628A;&#x5176;&#x5FAA;&#x73AF;&#x5DE6;&#x79FB;K&#x4F4D;&#x540E;&#x7684;&#x5E8F;&#x5217;&#x8F93;&#x51FA;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5B57;&#x7B26;&#x5E8F;&#x5217;S=&#x201D;abcXYZdef&#x201D;,&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x5FAA;&#x73AF;&#x5DE6;&#x79FB;3&#x4F4D;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5373;&#x201C;XYZdefabc&#x201D;&#x3002;&#x662F;&#x4E0D;&#x662F;&#x5F88;&#x7B80;&#x5355;&#xFF1F;OK&#xFF0C;&#x641E;&#x5B9A;&#x5B83;&#xFF01;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">LeftRotateString</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> size = str.size();</span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        n = n % size;</span><br><span class="line">        <span class="built_in">string</span> res;</span><br><span class="line">        res += str.substr(n, size);</span><br><span class="line">        res += str.substr(<span class="number">0</span>, n);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x7FFB;&#x8F6C;&#x5355;&#x8BCD;&#x987A;&#x5E8F;&#x5217;">&#x7FFB;&#x8F6C;&#x5355;&#x8BCD;&#x987A;&#x5E8F;&#x5217;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x725B;&#x5BA2;&#x6700;&#x8FD1;&#x6765;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x5458;&#x5DE5;Fish&#xFF0C;&#x6BCF;&#x5929;&#x65E9;&#x6668;&#x603B;&#x662F;&#x4F1A;&#x62FF;&#x7740;&#x4E00;&#x672C;&#x82F1;&#x6587;&#x6742;&#x5FD7;&#xFF0C;&#x5199;&#x4E9B;&#x53E5;&#x5B50;&#x5728;&#x672C;&#x5B50;&#x4E0A;&#x3002;&#x540C;&#x4E8B;Cat&#x5BF9;Fish&#x5199;&#x7684;&#x5185;&#x5BB9;&#x9887;&#x611F;&#x5174;&#x8DA3;&#xFF0C;&#x6709;&#x4E00;&#x5929;&#x4ED6;&#x5411;Fish&#x501F;&#x6765;&#x7FFB;&#x770B;&#xFF0C;&#x4F46;&#x5374;&#x8BFB;&#x4E0D;&#x61C2;&#x5B83;&#x7684;&#x610F;&#x601D;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x201C;student. a am I&#x201D;&#x3002;&#x540E;&#x6765;&#x624D;&#x610F;&#x8BC6;&#x5230;&#xFF0C;&#x8FD9;&#x5BB6;&#x4F19;&#x539F;&#x6765;&#x628A;&#x53E5;&#x5B50;&#x5355;&#x8BCD;&#x7684;&#x987A;&#x5E8F;&#x7FFB;&#x8F6C;&#x4E86;&#xFF0C;&#x6B63;&#x786E;&#x7684;&#x53E5;&#x5B50;&#x5E94;&#x8BE5;&#x662F;&#x201C;I am a student.&#x201D;&#x3002;Cat&#x5BF9;&#x4E00;&#x4E00;&#x7684;&#x7FFB;&#x8F6C;&#x8FD9;&#x4E9B;&#x5355;&#x8BCD;&#x987A;&#x5E8F;&#x53EF;&#x4E0D;&#x5728;&#x884C;&#xFF0C;&#x4F60;&#x80FD;&#x5E2E;&#x52A9;&#x4ED6;&#x4E48;&#xFF1F;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">ReverseSentence</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (str.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        <span class="built_in">string</span> temp, res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; v;</span><br><span class="line">        <span class="keyword">int</span> end = str.size();</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = str.size()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">&apos; &apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                temp.clear();</span><br><span class="line">                temp = str.substr(i + <span class="number">1</span>, end - i - <span class="number">1</span>);</span><br><span class="line">                temp += <span class="string">&quot; &quot;</span>;</span><br><span class="line">                v.push_back(temp);</span><br><span class="line">                end = i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        temp = str.substr(<span class="number">0</span>, end);</span><br><span class="line">        v.push_back(temp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; v.size(); j++)</span><br><span class="line">        {</span><br><span class="line">            res += v[j];</span><br><span class="line">            <span class="comment">//cout &lt;&lt; v[j];</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6251;&#x514B;&#x724C;&#x987A;&#x5B50;">&#x6251;&#x514B;&#x724C;&#x987A;&#x5B50;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>LL&#x4ECA;&#x5929;&#x5FC3;&#x60C5;&#x7279;&#x522B;&#x597D;,&#x56E0;&#x4E3A;&#x4ED6;&#x53BB;&#x4E70;&#x4E86;&#x4E00;&#x526F;&#x6251;&#x514B;&#x724C;,&#x53D1;&#x73B0;&#x91CC;&#x9762;&#x5C45;&#x7136;&#x6709;2&#x4E2A;&#x5927;&#x738B;,2&#x4E2A;&#x5C0F;&#x738B;(&#x4E00;&#x526F;&#x724C;&#x539F;&#x672C;&#x662F;54&#x5F20;^_^)...&#x4ED6;&#x968F;&#x673A;&#x4ECE;&#x4E2D;&#x62BD;&#x51FA;&#x4E86;5&#x5F20;&#x724C;,&#x60F3;&#x6D4B;&#x6D4B;&#x81EA;&#x5DF1;&#x7684;&#x624B;&#x6C14;,&#x770B;&#x770B;&#x80FD;&#x4E0D;&#x80FD;&#x62BD;&#x5230;&#x987A;&#x5B50;,&#x5982;&#x679C;&#x62BD;&#x5230;&#x7684;&#x8BDD;,&#x4ED6;&#x51B3;&#x5B9A;&#x53BB;&#x4E70;&#x4F53;&#x80B2;&#x5F69;&#x7968;,&#x563F;&#x563F;&#xFF01;&#xFF01;&#x201C;&#x7EA2;&#x5FC3;A,&#x9ED1;&#x6843;3,&#x5C0F;&#x738B;,&#x5927;&#x738B;,&#x65B9;&#x7247;5&#x201D;,&#x201C;Oh My God!&#x201D;&#x4E0D;&#x662F;&#x987A;&#x5B50;.....LL&#x4E0D;&#x9AD8;&#x5174;&#x4E86;,&#x4ED6;&#x60F3;&#x4E86;&#x60F3;,&#x51B3;&#x5B9A;&#x5927;&#x738B;&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x4EFB;&#x4F55;&#x6570;&#x5B57;,&#x5E76;&#x4E14;A&#x770B;&#x4F5C;1,J&#x4E3A;11,Q&#x4E3A;12,K&#x4E3A;13&#x3002;&#x4E0A;&#x9762;&#x7684;5&#x5F20;&#x724C;&#x5C31;&#x53EF;&#x4EE5;&#x53D8;&#x6210;&#x201C;1,2,3,4,5&#x201D;(&#x5927;&#x5C0F;&#x738B;&#x5206;&#x522B;&#x770B;&#x4F5C;2&#x548C;4),&#x201C;So Lucky!&#x201D;&#x3002;LL&#x51B3;&#x5B9A;&#x53BB;&#x4E70;&#x4F53;&#x80B2;&#x5F69;&#x7968;&#x5566;&#x3002; &#x73B0;&#x5728;,&#x8981;&#x6C42;&#x4F60;&#x4F7F;&#x7528;&#x8FD9;&#x5E45;&#x724C;&#x6A21;&#x62DF;&#x4E0A;&#x9762;&#x7684;&#x8FC7;&#x7A0B;,&#x7136;&#x540E;&#x544A;&#x8BC9;&#x6211;&#x4EEC;LL&#x7684;&#x8FD0;&#x6C14;&#x5982;&#x4F55;&#xFF0C; &#x5982;&#x679C;&#x724C;&#x80FD;&#x7EC4;&#x6210;&#x987A;&#x5B50;&#x5C31;&#x8F93;&#x51FA;true&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x8F93;&#x51FA;false&#x3002;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x8D77;&#x89C1;,&#x4F60;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x5927;&#x5C0F;&#x738B;&#x662F;0&#x3002;</p><p>&#x4E09;&#x4E2A;&#x6761;&#x4EF6;</p><ol type="1"><li><p>&#x6700;&#x5927;-&#x6700;&#x5C0F;(&#x4E0D;&#x8BA1;0)&lt;5;</p></li><li><p>&#x6CA1;&#x6709;&#x91CD;&#x590D;</p></li><li><p>&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x4E3A;5</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/*&#x4E09;&#x4E2A;&#x6761;&#x4EF6;&#xFF1A;</span></span><br><span class="line"><span class="comment">1. &#x6700;&#x5927;-&#x6700;&#x5C0F;(&#x4E0D;&#x8BA1;0)&lt;5;</span></span><br><span class="line"><span class="comment">2. &#x6CA1;&#x6709;&#x91CD;&#x590D;</span></span><br><span class="line"><span class="comment">3. &#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x4E3A;5</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsContinuous</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (numbers.size() != <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> maxn, minn;</span><br><span class="line">        sort(numbers.begin(), numbers.end());</span><br><span class="line">        maxn = numbers[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                minn = numbers[i];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == numbers[i + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> ((maxn - minn) &gt;= <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6C42;123...n">&#x6C42;1+2+3+...+n</h1><p>&#x6C42;1+2+3+...+n&#xFF0C;&#x8981;&#x6C42;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x4E58;&#x9664;&#x6CD5;&#x3001;for&#x3001;while&#x3001;if&#x3001;else&#x3001;switch&#x3001;case&#x7B49;&#x5173;&#x952E;&#x5B57;&#x53CA;&#x6761;&#x4EF6;&#x5224;&#x65AD;&#x8BED;&#x53E5;&#xFF08;A?B:C&#xFF09;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-3">&#x89E3;&#x6CD5;&#x4E00;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Sum_Solution</span><span class="params">(<span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> ans = n;</span><br><span class="line">        ans &amp;&amp; (ans += Sum_Solution(n - <span class="number">1</span>));<span class="comment">//&#x5F53;ans=0&#x65F6;&#x53D1;&#x751F;&#x77ED;&#x8DEF;</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-3">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x5229;&#x7528;pow</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Sum_Solution</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> a = <span class="built_in">pow</span>(n,<span class="number">2</span>);</span><br><span class="line">        a += n;</span><br><span class="line">        a=a &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x628A;&#x4E8C;&#x53C9;&#x6811;&#x6253;&#x5370;&#x6210;&#x591A;&#x884C;">&#x628A;&#x4E8C;&#x53C9;&#x6811;&#x6253;&#x5370;&#x6210;&#x591A;&#x884C;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x4ECE;&#x4E0A;&#x5230;&#x4E0B;&#x6309;&#x5C42;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x540C;&#x4E00;&#x5C42;&#x7ED3;&#x70B9;&#x4ECE;&#x5DE6;&#x81F3;&#x53F3;&#x8F93;&#x51FA;&#x3002;&#x6BCF;&#x4E00;&#x5C42;&#x8F93;&#x51FA;&#x4E00;&#x884C;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp;</span><br><span class="line">        TreeNode* p;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="built_in">queue</span>&lt;TreeNode*&gt;q1, q2;</span><br><span class="line">        q1.push(pRoot);</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span> ((!q1.empty()) || (!q2.empty()))</span><br><span class="line">        {</span><br><span class="line">            temp.clear();</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (!q1.empty())</span><br><span class="line">            {</span><br><span class="line">                p = q1.front(); q1.pop();</span><br><span class="line">                temp.push_back(p-&gt;val);</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(p-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(p-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">                res.push_back(temp);</span><br><span class="line">            temp.clear();</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (!q2.empty())</span><br><span class="line">            {</span><br><span class="line">                p = q2.front(); q2.pop();</span><br><span class="line">                temp.push_back(p-&gt;val);</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(p-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(p-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                res.push_back(temp);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5220;&#x9664;&#x94FE;&#x8868;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;">&#x5220;&#x9664;&#x94FE;&#x8868;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5728;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x94FE;&#x8868;&#x4E2D;&#xFF0C;&#x5B58;&#x5728;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;&#xFF0C;&#x8BF7;&#x5220;&#x9664;&#x8BE5;&#x94FE;&#x8868;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;&#xFF0C;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;&#x4E0D;&#x4FDD;&#x7559;&#xFF0C;&#x8FD4;&#x56DE;&#x94FE;&#x8868;&#x5934;&#x6307;&#x9488;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x94FE;&#x8868;1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5 &#x5904;&#x7406;&#x540E;&#x4E3A; 1-&gt;2-&gt;5</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">deleteDuplication</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* T = <span class="keyword">new</span> ListNode(<span class="number">-1</span>);</span><br><span class="line">        T-&gt;next = pHead;</span><br><span class="line">        ListNode* pre = T, *cur=pHead, *next;</span><br><span class="line">        <span class="keyword">while</span> (cur!=<span class="literal">NULL</span>&amp;&amp;cur-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            next = cur-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (cur-&gt;val==next-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">while</span> (next != <span class="literal">NULL</span> &amp;&amp; cur-&gt;val == next-&gt;val)<span class="comment">//&#x4E00;&#x76F4;&#x5F80;&#x4E0B;&#x627E;</span></span><br><span class="line">                    next = next-&gt;next;</span><br><span class="line">                pre-&gt;next = next;</span><br><span class="line">                cur = next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                pre = cur;</span><br><span class="line">                cur = next;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> T-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4E8C;&#x53C9;&#x6811;&#x548C;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x987A;&#x5E8F;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x5E76;&#x4E14;&#x8FD4;&#x56DE;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x6811;&#x4E2D;&#x7684;&#x7ED3;&#x70B9;&#x4E0D;&#x4EC5;&#x5305;&#x542B;&#x5DE6;&#x53F3;&#x5B50;&#x7ED3;&#x70B9;&#xFF0C;&#x540C;&#x65F6;&#x5305;&#x542B;&#x6307;&#x5411;&#x7236;&#x7ED3;&#x70B9;&#x7684;&#x6307;&#x9488;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeLinkNode* <span class="title">GetNext</span><span class="params">(TreeLinkNode* pNode)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pNode == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        TreeLinkNode *res = pNode;</span><br><span class="line">        <span class="keyword">if</span> (pNode-&gt;right!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = pNode-&gt;right;</span><br><span class="line">            <span class="keyword">while</span> (res-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                res = res-&gt;left;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (res-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (res == res-&gt;next-&gt;left)<span class="comment">//&#x5982;&#x679C;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5176;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;</span></span><br><span class="line">                <span class="keyword">return</span> res-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (res == res-&gt;next-&gt;right)</span><br><span class="line">                res = res-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x5176;&#x4E2D;&#x7684;&#x7B2C;k&#x5C0F;&#x7684;&#x7ED3;&#x70B9;&#x3002;&#x4F8B;&#x5982;&#xFF0C; &#xFF08;5&#xFF0C;3&#xFF0C;7&#xFF0C;2&#xFF0C;4&#xFF0C;6&#xFF0C;8&#xFF09; &#x4E2D;&#xFF0C;&#x6309;&#x7ED3;&#x70B9;&#x6570;&#x503C;&#x5927;&#x5C0F;&#x987A;&#x5E8F;&#x7B2C;&#x4E09;&#x5C0F;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#x4E3A;4&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">KthNode</span><span class="params">(TreeNode* pRoot, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        TreeNode*res = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        res = KthNode(pRoot-&gt;left, k);</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;cnt == k)</span><br><span class="line">            <span class="keyword">return</span> pRoot;</span><br><span class="line">        res = KthNode(pRoot-&gt;right, k);</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x7684;&#x4E2D;&#x4F4D;&#x6570;">&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x7684;&#x4E2D;&#x4F4D;&#x6570;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5982;&#x4F55;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x7684;&#x4E2D;&#x4F4D;&#x6570;&#xFF1F;&#x5982;&#x679C;&#x4ECE;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x8BFB;&#x51FA;&#x5947;&#x6570;&#x4E2A;&#x6570;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x4E2D;&#x4F4D;&#x6570;&#x5C31;&#x662F;&#x6240;&#x6709;&#x6570;&#x503C;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#x4F4D;&#x4E8E;&#x4E2D;&#x95F4;&#x7684;&#x6570;&#x503C;&#x3002;&#x5982;&#x679C;&#x4ECE;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x8BFB;&#x51FA;&#x5076;&#x6570;&#x4E2A;&#x6570;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x4E2D;&#x4F4D;&#x6570;&#x5C31;&#x662F;&#x6240;&#x6709;&#x6570;&#x503C;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#x4E2D;&#x95F4;&#x4E24;&#x4E2A;&#x6570;&#x7684;&#x5E73;&#x5747;&#x503C;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528;Insert()&#x65B9;&#x6CD5;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x4F7F;&#x7528;GetMedian()&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x4E2D;&#x4F4D;&#x6570;&#x3002;</p><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;PAT-A-1057</p><p>&#x4F7F;&#x7528;multiset&#x7EF4;&#x62A4;&#x4E24;&#x4E2A;multiset upper&#x548C;lower&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (num &gt; mid)</span><br><span class="line">            upper.insert(num);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            lower.insert(num);</span><br><span class="line">        adjust();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">GetMedian</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (upper.size() == lower.size())</span><br><span class="line">            <span class="keyword">return</span>(((*upper.begin()) + (*lower.begin())) / <span class="number">2.0</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> *lower.begin();</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (upper.size() &gt; lower.size())</span><br><span class="line">        {</span><br><span class="line">            lower.insert(*upper.begin());</span><br><span class="line">            upper.erase(upper.begin());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (lower.size()&gt;upper.size()+<span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            upper.insert(*lower.begin());</span><br><span class="line">            lower.erase(*lower.begin());</span><br><span class="line">        }</span><br><span class="line">        mid = *lower.begin();</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt; upper;</span><br><span class="line">    <span class="built_in">multiset</span>&lt;<span class="keyword">int</span>, greater&lt;<span class="keyword">int</span>&gt;&gt;lower;</span><br><span class="line">    <span class="keyword">int</span> mid = <span class="number">0</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x6700;&#x5927;&#x503C;">&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x6700;&#x5927;&#x503C;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x548C;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x627E;&#x51FA;&#x6240;&#x6709;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x91CC;&#x6570;&#x503C;&#x7684;&#x6700;&#x5927;&#x503C;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x8F93;&#x5165;&#x6570;&#x7EC4;{2,3,4,2,6,2,5,1}&#x53CA;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x5927;&#x5C0F;3&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x5171;&#x5B58;&#x5728;6&#x4E2A;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x6700;&#x5927;&#x503C;&#x5206;&#x522B;&#x4E3A;{4,4,6,6,6,5}&#xFF1B; &#x9488;&#x5BF9;&#x6570;&#x7EC4;{2,3,4,2,6,2,5,1}&#x7684;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x6709;&#x4EE5;&#x4E0B;6&#x4E2A;&#xFF1A; {[2,3,4],2,6,2,5,1}&#xFF0C; {2,[3,4,2],6,2,5,1}&#xFF0C; {2,3,[4,2,6],2,5,1}&#xFF0C; {2,3,4,[2,6,2],5,1}&#xFF0C; {2,3,4,2,[6,2,5],1}&#xFF0C; {2,3,4,2,6,[2,5,1]}&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-4">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x503C;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF1A;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;max</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; maxInWindows(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; num, <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> maxID = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span> || size &gt; num.size())</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            <span class="keyword">if</span> (num[maxID] &lt; num[i])</span><br><span class="line">                maxID = i;</span><br><span class="line">        res.push_back(num[maxID]);<span class="comment">//&#x7B2C;&#x4E00;&#x4E2A;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; num.size()-size+<span class="number">1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num[i + size - <span class="number">1</span>] &gt; num[maxID])</span><br><span class="line">                maxID = i + size - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; maxID)<span class="comment">//&#x8D85;&#x8FC7;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x8303;&#x56F4;&#x4E86;</span></span><br><span class="line">            {</span><br><span class="line">                maxID = i;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; size; j++)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span> (num[j + i] &gt; num[maxID])</span><br><span class="line">                        maxID = j + i;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            res.push_back(num[maxID]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-4">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x4F7F;&#x7528;&#x53CC;&#x8FB9;&#x961F;&#x5217;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; maxInWindows(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; num, <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;q;<span class="comment">//&#x53CC;&#x8FB9;&#x961F;&#x5217;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (q.size() != <span class="number">0</span> &amp;&amp; num[q.back()] &lt;= num[i])</span><br><span class="line">                q.pop_back();</span><br><span class="line">            <span class="keyword">if</span> (q.size() != <span class="number">0</span> &amp;&amp; i - q.front() + <span class="number">1</span> &gt; size)</span><br><span class="line">                q.pop_front();</span><br><span class="line">            q.push_back(i);</span><br><span class="line">            <span class="keyword">if</span> (size != <span class="number">0</span> &amp;&amp; i + <span class="number">1</span> &gt;= size)</span><br><span class="line">                res.push_back(num[q.front()]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x7EC4;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;">&#x6570;&#x7EC4;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5728;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;&#x91CC;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x90FD;&#x5728;0&#x5230;n-1&#x7684;&#x8303;&#x56F4;&#x5185;&#x3002; &#x6570;&#x7EC4;&#x4E2D;&#x67D0;&#x4E9B;&#x6570;&#x5B57;&#x662F;&#x91CD;&#x590D;&#x7684;&#xFF0C;&#x4F46;&#x4E0D;&#x77E5;&#x9053;&#x6709;&#x51E0;&#x4E2A;&#x6570;&#x5B57;&#x662F;&#x91CD;&#x590D;&#x7684;&#x3002;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x91CD;&#x590D;&#x51E0;&#x6B21;&#x3002;&#x8BF7;&#x627E;&#x51FA;&#x6570;&#x7EC4;&#x4E2D;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x8F93;&#x5165;&#x957F;&#x5EA6;&#x4E3A;7&#x7684;&#x6570;&#x7EC4;{2,3,1,0,2,5,3}&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;2&#x3002;</p><p>&#x5F00;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// Parameters:</span></span><br><span class="line">    <span class="comment">//        numbers:     an array of integers</span></span><br><span class="line">    <span class="comment">//        length:      the length of array numbers</span></span><br><span class="line">    <span class="comment">//        duplication: (Output) the duplicated number in the array number</span></span><br><span class="line">    <span class="comment">// Return value:       true if the input is valid, and there are some duplications in the array number</span></span><br><span class="line">    <span class="comment">//                     otherwise false</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">duplicate</span><span class="params">(<span class="keyword">int</span> numbers[], <span class="keyword">int</span> length, <span class="keyword">int</span>* duplication)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v(length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (v[numbers[i]]++ != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                *duplication = numbers[i];</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6784;&#x5EFA;&#x4E58;&#x79EF;&#x6570;&#x7EC4;">&#x6784;&#x5EFA;&#x4E58;&#x79EF;&#x6570;&#x7EC4;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;A[0,1,...,n-1],&#x8BF7;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;B[0,1,...,n-1],&#x5176;&#x4E2D;B&#x4E2D;&#x7684;&#x5143;&#x7D20;B[i]=A[0]<em>A[1]</em>...<em>A[i-1]</em>A[i+1]<em>...</em>A[n-1]&#x3002;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x9664;&#x6CD5;&#x3002;</p><p>&#x601D;&#x8DEF;&#x5206;&#x6790;&#xFF1A;</p><p><分析>&#xFF1A;</分析></p><p>&#x89E3;&#x91CA;&#x4E0B;&#x4EE3;&#x7801;&#xFF0C;&#x8BBE;&#x6709;&#x6570;&#x7EC4;&#x5927;&#x5C0F;&#x4E3A;5&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;for&#x5FAA;&#x73AF;</p><p>&#x7B2C;&#x4E00;&#x6B65;&#xFF1A;b[0] = 1;</p><p>&#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;b[1] = b[0] * a[0] = a[0]</p><p>&#x7B2C;&#x4E09;&#x6B65;&#xFF1A;b[2] = b[1] * a[1] = a[0] * a[1];</p><p>&#x7B2C;&#x56DB;&#x6B65;&#xFF1A;b[3] = b[2] * a[2] = a[0] * a[1] * a[2];</p><p>&#x7B2C;&#x4E94;&#x6B65;&#xFF1A;b[4] = b[3] * a[3] = a[0] * a[1] * a[2] * a[3];</p><p>&#x7136;&#x540E;&#x5BF9;&#x4E8E;&#x7B2C;&#x4E8C;&#x4E2A;for&#x5FAA;&#x73AF;</p><p>&#x7B2C;&#x4E00;&#x6B65;</p><p>temp *= a[4] = a[4];</p><p>b[3] = b[3] * temp = a[0] * a[1] * a[2] * a[4];</p><p>&#x7B2C;&#x4E8C;&#x6B65;</p><p>temp <em>= a[3] = a[4] </em> a[3];</p><p>b[2] = b[2] * temp = a[0] * a[1] * a[4] * a[3];</p><p>&#x7B2C;&#x4E09;&#x6B65;</p><p>temp <em>= a[2] = a[4] </em> a[3] * a[2];</p><p>b[1] = b[1] * temp = a[0] * a[4] * a[3] * a[2];</p><p>&#x7B2C;&#x56DB;&#x6B65;</p><p>temp <em>= a[1] = a[4] </em> a[3] * a[2] * a[1];</p><p>b[0] = b[0] * temp = a[4] * a[3] * a[2] * a[1];</p><p>&#x7531;&#x6B64;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x4ECE;b[4]&#x5230;b[0]&#x5747;&#x5DF2;&#x7ECF;&#x5F97;&#x5230;&#x6B63;&#x786E;&#x8BA1;&#x7B97;&#x3002;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class Solution </span><br><span class="line">{</span><br><span class="line">public:</span><br><span class="line">    vector&lt;int&gt; multiply(const vector&lt;int&gt;&amp; A) </span><br><span class="line">    {</span><br><span class="line">        vector&lt;int&gt;b(A.size());</span><br><span class="line">        if (A.size() == 0)</span><br><span class="line">            return b;</span><br><span class="line">        b[0] = 1;</span><br><span class="line">        for (int i = 0; i &lt; A.size()-1; i++)</span><br><span class="line">            b[i + 1] = b[i]*A[i];</span><br><span class="line">        int temp = 1;</span><br><span class="line">        for (int i = A.size()-1; i &gt;= 0; i--)</span><br><span class="line">        {</span><br><span class="line">            b[i] = b[i] * temp;</span><br><span class="line">            temp *= A[i];</span><br><span class="line">        }</span><br><span class="line">        returnb;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x5B57;&#x7B26;">&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x5B57;&#x7B26;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x7528;&#x6765;&#x627E;&#x51FA;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x4ECE;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x53EA;&#x8BFB;&#x51FA;&#x524D;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&quot;go&quot;&#x65F6;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#x662F;&quot;g&quot;&#x3002;&#x5F53;&#x4ECE;&#x8BE5;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x8BFB;&#x51FA;&#x524D;&#x516D;&#x4E2A;&#x5B57;&#x7B26;&#x201C;google&quot;&#x65F6;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#x662F;&quot;l&quot;&#x3002;</p><p>&#x8F93;&#x51FA;&#x63CF;&#x8FF0;:</p><p>&#x5982;&#x679C;&#x5F53;&#x524D;&#x5B57;&#x7B26;&#x6D41;&#x6CA1;&#x6709;&#x5B58;&#x5728;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x8FD4;&#x56DE;#&#x5B57;&#x7B26;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-5">&#x89E3;&#x6CD5;&#x4E00;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(n)&#x7684;&#x89E3;&#x6CD5;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//Insert one char from stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        s += ch;</span><br><span class="line">        cnt[ch]++;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//return the first appearence once char in current stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">FirstAppearingOnce</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (cnt[s[i]] == <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> s[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos;#&apos;</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span> cnt[<span class="number">260</span>] = { <span class="number">0</span> };</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-5">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x73B0;&#x8BF4;&#x660E;&#x4E3A;&#x4EC0;&#x4E48;&#x662F;O(1)&#xFF0C;&#x5176;&#x5B9E;&#x5224;&#x65AD;&#x90E8;&#x5206;&#x5728;Insert&#x90E8;&#x5206;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x3002;</p><p>&#x7531;&#x4E8E;&#x6700;&#x591A;&#x662F;&#x6709;128&#x4E2A;ascii&#x7801;&#xFF0C;&#x6240;&#x4EE5;&#x961F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x6700;&#x5927;&#x4E3A;128.&#x6545;&#x9650;&#x5B9A;&#x5728;&#x4E86;O(1)&#x7684;&#x65F6;&#x95F4;&#x8303;&#x56F4;&#x5185;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(1)&#x7684;&#x89E3;&#x6CD5;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//Insert one char from stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        cnt[ch]++;</span><br><span class="line">        <span class="keyword">if</span> (cnt[ch] == <span class="number">1</span>)</span><br><span class="line">            q.push(ch);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//return the first appearence once char in current stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">FirstAppearingOnce</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">while</span> (!q.empty() &amp;&amp; cnt[q.front()] != <span class="number">1</span>)</span><br><span class="line">            q.pop();</span><br><span class="line">        <span class="keyword">if</span> (!q.empty())</span><br><span class="line">            <span class="keyword">return</span> q.front();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos;#&apos;</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span> cnt[<span class="number">260</span>] = { <span class="number">0</span> };</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">char</span>&gt; q;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x94FE;&#x8868;&#x4E2D;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x7ED3;&#x70B9;">&#x94FE;&#x8868;&#x4E2D;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;&#x82E5;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x73AF;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x8BE5;&#x94FE;&#x8868;&#x7684;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x7ED3;&#x70B9;&#xFF0C;&#x5426;&#x5219;&#xFF0C;&#x8F93;&#x51FA;null&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9898;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x8981;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x73AF;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x73AF;&#xFF0C;&#x627E;&#x51FA;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x70B9;&#x3002;</p><p>&#x5224;&#x65AD;&#x6709;&#x6CA1;&#x6709;&#x73AF;&#x53EF;&#x4EE5;&#x7528;&#x5FEB;&#x6162;&#x6307;&#x9488;&#x3002;</p><p>&#x5206;&#x6790;&#xFF1A;</p><figure><img src="/posts/c812c7f8/1557257019018.png" alt="1557257019018"><figcaption>1557257019018</figcaption></figure><p>&#x5047;&#x8BBE;x&#x4E3A;&#x73AF;&#x524D;&#x9762;&#x7684;&#x8DEF;&#x7A0B;&#xFF08;&#x9ED1;&#x8272;&#x8DEF;&#x7A0B;&#xFF09;&#xFF0C;a&#x4E3A;&#x73AF;&#x5165;&#x53E3;&#x5230;&#x76F8;&#x9047;&#x70B9;&#x7684;&#x8DEF;&#x7A0B;&#xFF08;&#x84DD;&#x8272;&#x8DEF;&#x7A0B;&#xFF0C;&#x5047;&#x8BBE;&#x987A;&#x65F6;&#x9488;&#x8D70;&#xFF09;&#xFF0C; c&#x4E3A;&#x73AF;&#x7684;&#x957F;&#x5EA6;&#xFF08;&#x84DD;&#x8272;+&#x6A59;&#x8272;&#x8DEF;&#x7A0B;&#xFF09;</p><p>&#x5F53;&#x5FEB;&#x6162;&#x6307;&#x9488;&#x76F8;&#x9047;&#x7684;&#x65F6;&#x5019;&#xFF1A;</p><p>&#x6B64;&#x65F6;&#x6162;&#x6307;&#x9488;&#x8D70;&#x7684;&#x8DEF;&#x7A0B;&#x4E3A;Sslow = x + m * c + a</p><p>&#x5FEB;&#x6307;&#x9488;&#x8D70;&#x7684;&#x8DEF;&#x7A0B;&#x4E3A;Sfast = x + n * c + a</p><p>2 *slow = fast</p><p>2 * ( x + m*c + a ) = (x + n *c + a)</p><p>&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#x51FA;&#xFF1A;</p><p>x = (n - 2 * m )*c - a</p><p>= (n - 2 *m -1 )*c + c - a</p><p>&#x5373;&#x73AF;&#x524D;&#x9762;&#x7684;&#x8DEF;&#x7A0B; = &#x6570;&#x4E2A;&#x73AF;&#x7684;&#x957F;&#x5EA6;&#xFF08;&#x4E3A;&#x53EF;&#x80FD;&#x4E3A;0&#xFF09; + c - a</p><p>&#x4EC0;&#x4E48;&#x662F;c - a&#xFF1F;&#x8FD9;&#x662F;&#x76F8;&#x9047;&#x70B9;&#x540E;&#xFF0C;&#x73AF;&#x540E;&#x9762;&#x90E8;&#x5206;&#x7684;&#x8DEF;&#x7A0B;&#x3002;&#xFF08;&#x6A59;&#x8272;&#x8DEF;&#x7A0B;&#xFF09;</p><p>&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BA9;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x4ECE;&#x8D77;&#x70B9;A&#x5F00;&#x59CB;&#x8D70;&#xFF0C;&#x8BA9;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x4ECE;&#x76F8;&#x9047;&#x70B9;B&#x5F00;&#x59CB;&#x7EE7;&#x7EED;&#x5F80;&#x540E;&#x8D70;&#xFF0C;</p><p>2&#x4E2A;&#x6307;&#x9488;&#x901F;&#x5EA6;&#x4E00;&#x6837;&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x5F53;&#x4ECE;&#x539F;&#x70B9;&#x7684;&#x6307;&#x9488;&#x8D70;&#x5230;&#x73AF;&#x5165;&#x53E3;&#x70B9;&#x7684;&#x65F6;&#x5019;&#xFF08;&#x6B64;&#x65F6;&#x521A;&#x597D;&#x8D70;&#x4E86;x&#xFF09;</p><p>&#x4ECE;&#x76F8;&#x9047;&#x70B9;&#x5F00;&#x59CB;&#x8D70;&#x7684;&#x90A3;&#x4E2A;&#x6307;&#x9488;&#x4E5F;&#x4E00;&#x5B9A;&#x521A;&#x597D;&#x5230;&#x8FBE;&#x73AF;&#x5165;&#x53E3;&#x70B9;&#x3002;</p><p>&#x6240;&#x4EE5;2&#x8005;&#x4F1A;&#x76F8;&#x9047;&#xFF0C;&#x4E14;&#x6070;&#x597D;&#x76F8;&#x9047;&#x5728;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x70B9;&#x3002;</p><p>&#x6700;&#x540E;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x627E;&#x73AF;&#x7684;&#x7B97;&#x6CD5;&#x590D;&#x6742;&#x5EA6;&#x4E3A;&#xFF1A;</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF1A;O(n)</p><p>&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF1A;O(1)</p><p>&#x4E00;&#x5171;&#x4E09;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x524D;&#x6587;&#x6240;&#x8FF0;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x65AD;&#x94FE;&#x6CD5;&#xFF0C;&#x53EA;&#x6709;&#x5728;&#x6709;&#x73AF;&#x7684;&#x65F6;&#x5019;&#x624D;&#x6210;&#x7ACB;&#xFF0C;&#x6CA1;&#x6709;&#x73AF;&#x5219;&#x6709;&#x9519;&#x8BEF;&#x3002;</p><p>&#x7B2C;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x662F;&#x5B58;&#x50A8;&#x5730;&#x5740;&#x6CD5;&#xFF0C;&#x4F7F;&#x7528;set&#x5B58;&#x50A8;&#x5730;&#x5740;&#x3002;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x8868;&#x793A;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x662F;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">EntryNodeOfLoop</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span> || pHead-&gt;next == <span class="literal">NULL</span> || pHead-&gt;next-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//&#x5148;&#x5224;&#x65AD;&#x6709;&#x6CA1;&#x6709;&#x73AF;</span></span><br><span class="line">        ListNode* fast = pHead-&gt;next-&gt;next, *slow = pHead-&gt;next;</span><br><span class="line">        <span class="keyword">while</span> (fast!=slow)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (fast-&gt;next != <span class="literal">NULL</span> &amp;&amp; fast-&gt;next-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">            {</span><br><span class="line">                fast = fast-&gt;next-&gt;next;</span><br><span class="line">                slow = slow-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">NULL</span>;<span class="comment">//&#x8868;&#x793A;&#x6CA1;&#x6709;&#x73AF;&#xFF0C;&#x8FD4;&#x56DE;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x5FAA;&#x73AF;&#x8DF3;&#x51FA;&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x6B64;&#x65F6;&#xFF0C;fast=slow</span></span><br><span class="line">        fast = pHead;</span><br><span class="line">        <span class="keyword">while</span> (fast != slow)</span><br><span class="line">        {</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x5FAA;&#x73AF;&#x8DF3;&#x51FA;&#x8868;&#x793A;&#x5728;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x4E86;&#xFF0C;&#x4E14;&#x6B64;&#x65F6;fast=slow</span></span><br><span class="line">        <span class="keyword">return</span> fast;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x65AD;&#x94FE;&#x6CD5;&#x3002;&#x9002;&#x7528;&#x4E8E;&#x4E00;&#x5B9A;&#x6709;&#x73AF;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x73AF;&#xFF0C;&#x5219;&#x4F1A;&#x6709;&#x9519;&#x8BEF;&#x3002;&#x725B;&#x5BA2;&#x7684;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x4E0D;&#x4E25;&#x8C28;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x80FD;AC&#x7684;</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">EntryNodeOfLoop2</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span> || pHead-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* fast = pHead-&gt;next, *slow = pHead;</span><br><span class="line">        <span class="keyword">while</span> (fast!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            slow-&gt;next = <span class="literal">NULL</span>;<span class="comment">//&#x65AD;&#x5F00;</span></span><br><span class="line">            slow = fast;</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5B58;&#x5730;&#x5740;&#x6CD5;&#xFF0C;&#x628A;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x5730;&#x5740;&#x7528;set&#x5B58;&#x50A8;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x8868;&#x793A;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x662F;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">EntryNodeOfLoop3</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">set</span>&lt;ListNode*&gt; s;</span><br><span class="line">        <span class="keyword">while</span> (pHead != <span class="literal">NULL</span> &amp;&amp; (!s.count(pHead)))<span class="comment">//&#x5224;&#x65AD;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5426;&#x66FE;&#x51FA;&#x73B0;&#x8FC7;</span></span><br><span class="line">        {</span><br><span class="line">            s.insert(pHead);</span><br><span class="line">            pHead = pHead-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> pHead;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6309;&#x4E4B;&#x5B57;&#x5F62;&#x987A;&#x5E8F;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;">&#x6309;&#x4E4B;&#x5B57;&#x5F62;&#x987A;&#x5E8F;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6309;&#x7167;&#x4E4B;&#x5B57;&#x5F62;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5373;&#x7B2C;&#x4E00;&#x884C;&#x6309;&#x7167;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x7B2C;&#x4E8C;&#x5C42;&#x6309;&#x7167;&#x4ECE;&#x53F3;&#x81F3;&#x5DE6;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x7B2C;&#x4E09;&#x884C;&#x6309;&#x7167;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x5176;&#x4ED6;&#x884C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-6">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x7528;&#x4E24;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x662F;&#x5C42;&#x6B21;&#x904D;&#x5386;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x5728;&#x5076;&#x6570;&#x5C42;&#x90E8;&#x5206;&#xFF0C;reverse&#x4E4B;&#x540E;&#x518D;&#x5B58;&#x5165;&#x3002;&#x8FD9;&#x4E2A;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x597D;&#x7406;&#x89E3;&#x7684;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        TreeNode* cur=pRoot;</span><br><span class="line">        q1.push(cur);</span><br><span class="line">        <span class="keyword">while</span> (!q1.empty()||!q2.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (!q1.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = q1.front(); q1.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            res.push_back(v);</span><br><span class="line">            v.clear();</span><br><span class="line">            <span class="keyword">while</span> (!q2.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = q2.front(); q2.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (v.size() != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                reverse(v.begin(), v.end());</span><br><span class="line">                res.push_back(v);</span><br><span class="line">                v.clear();</span><br><span class="line">            }</span><br><span class="line">            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">//q1&#x4ECE;&#x5DE6;&#x5F80;&#x53F3;&#xFF0C;q2&#x4ECE;&#x53F3;&#x5411;&#x5DE6;</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;TreeNode*&gt; q1, q2;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-6">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#xFF08;&#x6211;&#x611F;&#x89C9;&#x6BD4;&#x8F83;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x6211;&#x9762;&#x963F;&#x91CC;&#x7684;&#x65F6;&#x5019;&#x505A;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x5F88;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x7528;&#x4E00;&#x4E2A;stack&#x548C;&#x4E00;&#x4E2A;queue&#xFF0C;stack&#x7528;&#x4E8E;&#x7FFB;&#x8F6C;&#xFF09;</p><p>&#x597D;&#x5904;&#x662F;&#x7701;&#x53BB;&#x4E86;reverse&#x73AF;&#x8282;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E00;&#x4E2A;reverse&#x4E5F;&#x6CA1;&#x591A;&#x5C11;&#x65F6;&#x95F4;&#xFF0C;&#x5199;&#x7684;&#x662F;&#x771F;TM&#x96BE;&#x61C2;&#xFF0C;&#x6211;&#x81EA;&#x5DF1;&#x56DE;&#x8FC7;&#x5934;&#x6765;&#x770B;&#x81EA;&#x5DF1;&#x90FD;&#x770B;&#x4E0D;&#x660E;&#x767D;&#x4E86;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        que.push(pRoot);</span><br><span class="line">    L1:</span><br><span class="line">        <span class="keyword">while</span> (!que.empty())</span><br><span class="line">        {</span><br><span class="line">            p = que.front(); que.pop();</span><br><span class="line">            sta.push(p);</span><br><span class="line">            v.push_back(p-&gt;val);</span><br><span class="line">            <span class="comment">//cout &lt;&lt; p-&gt;val;//&#x8BBF;&#x95EE;&#x4E86;</span></span><br><span class="line">        }</span><br><span class="line">        res.push_back(v);</span><br><span class="line">        v.clear();</span><br><span class="line">        flag = !flag;</span><br><span class="line">        <span class="keyword">while</span> (!sta.empty())</span><br><span class="line">        {</span><br><span class="line">            p = sta.top(); sta.pop();</span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;right);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;left);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;right);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (sta.empty() &amp;&amp; que.empty())</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">goto</span> L1;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">1</span>;<span class="comment">//1&#x8868;&#x793A;&#x4ECE;&#x5DE6;&#x5F80;&#x53F3;</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;TreeNode*&gt;que;</span><br><span class="line">    <span class="built_in">stack</span>&lt;TreeNode*&gt;sta;</span><br><span class="line">    TreeNode* p;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E09;">&#x89E3;&#x6CD5;&#x4E09;</h2><p>&#x4F7F;&#x7528;&#x6808;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;reverse</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution3</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        TreeNode* cur = pRoot;</span><br><span class="line">        s1.push(cur);</span><br><span class="line">        <span class="keyword">while</span> (!s1.empty()||!s2.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (!s1.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = s1.top(); s1.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    s2.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    s2.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            res.push_back(v);</span><br><span class="line">            v.clear();</span><br><span class="line">            <span class="keyword">while</span> (!s2.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = s2.top(); s2.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    s1.push(cur-&gt;right);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    s1.push(cur-&gt;left);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (v.size() != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(v);</span><br><span class="line">                v.clear();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;TreeNode*&gt;s1, s2;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x56DB;">&#x89E3;&#x6CD5;&#x56DB;</h2><p>&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x4F7F;&#x7528;reverse</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4F7F;&#x7528;reverse</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution4</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        TreeNode* cur = pRoot;</span><br><span class="line">        q.push(cur);</span><br><span class="line">        <span class="keyword">int</span> size;</span><br><span class="line">        <span class="keyword">while</span> (!q.empty())</span><br><span class="line">        {</span><br><span class="line">            v.clear();</span><br><span class="line">            size = q.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            {</span><br><span class="line">                cur = q.front(); q.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                reverse(v.begin(), v.end());</span><br><span class="line">            res.push_back(v);</span><br><span class="line">            flag = !flag;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">queue</span>&lt;TreeNode*&gt; q;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5BF9;&#x79F0;&#x7684;&#x4E8C;&#x53C9;&#x6811;">&#x5BF9;&#x79F0;&#x7684;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x5224;&#x65AD;&#x4E00;&#x9897;&#x4E8C;&#x53C9;&#x6811;&#x662F;&#x4E0D;&#x662F;&#x5BF9;&#x79F0;&#x7684;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x4E8C;&#x53C9;&#x6811;&#x540C;&#x6B64;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x955C;&#x50CF;&#x662F;&#x540C;&#x6837;&#x7684;&#xFF0C;&#x5B9A;&#x4E49;&#x5176;&#x4E3A;&#x5BF9;&#x79F0;&#x7684;&#x3002;</p><p>&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#xFF1A;</p><p>&#x5DE6;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x503C;&#x76F8;&#x7B49;&#x3002;&#x4E14;&#x5DE6;&#x53F3;&#x5B50;&#x6811;&#x5FC5;&#x987B;&#x540C;&#x65F6;&#x4E3A;&#x7A7A;&#x3002;</p><p>&#x7531;&#x4E8E;&#x53EA;&#x662F;&#x8FD9;&#x68F5;&#x6811;&#x7684;&#x5BF9;&#x79F0;&#xFF0C;&#x6240;&#x4EE5;&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x540C;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x6210;&#x955C;&#x50CF;&#x3002;</p><p>&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x540C;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x6210;&#x955C;&#x50CF;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isSymmetrical</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> check(pRoot-&gt;left, pRoot-&gt;right);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(TreeNode* left, TreeNode* right)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (left == <span class="literal">NULL</span>)<span class="comment">//&#x5DE6;&#x5B69;&#x5B50;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x53F3;&#x5B69;&#x5B50;&#x4E5F;&#x8981;&#x4E3A;&#x7A7A;</span></span><br><span class="line">            <span class="keyword">return</span> right == <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (right == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (left-&gt;val != right-&gt;val)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> check(left-&gt;right, right-&gt;left) &amp;&amp; check(left-&gt;left, right-&gt;right);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;">&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x7528;&#x6765;&#x5E8F;&#x5217;&#x5316;&#x548C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;</p><p>&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;&#x5C31;&#x662F;&#x628A;&#x4E8C;&#x53C9;&#x6811;&#x4EE5;&#x67D0;&#x79CD;&#x987A;&#x5E8F;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x524D;&#x5E8F;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x4E2D;&#x5E8F;&#xFF0C;&#x540E;&#x7EED;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x5C42;&#x6B21;&#x904D;&#x5386;&#x3002;</p><p>&#x9898;&#x76EE;&#x4E2D;&#x7ED9;&#x7684;&#x8FD4;&#x56DE;&#x7C7B;&#x578B;&#x662F;char*&#x7C7B;&#x578B;&#xFF0C;&#x4E0D;&#x6EE1;&#x8DB3;&#x6211;&#x4EEC;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x5F3A;&#x5236;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x4E00;&#x4E0B;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;buf;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">encode</span><span class="params">(TreeNode* cur)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (cur == <span class="literal">NULL</span>)</span><br><span class="line">            buf.push_back(<span class="number">0xFFFFF</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            buf.push_back(cur-&gt;val);</span><br><span class="line">            encode(cur-&gt;left);</span><br><span class="line">            encode(cur-&gt;right);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function">TreeNode* <span class="title">decode</span><span class="params">(<span class="keyword">int</span>* &amp;p)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (*p==<span class="number">0xFFFFF</span>)</span><br><span class="line">        {</span><br><span class="line">            ++p;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        }</span><br><span class="line">        TreeNode* res = <span class="keyword">new</span> TreeNode(*p);</span><br><span class="line">        p++;</span><br><span class="line">        res-&gt;left = decode(p);</span><br><span class="line">        res-&gt;right = decode(p);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">char</span>* <span class="title">Serialize</span><span class="params">(TreeNode *root)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        buf.clear();</span><br><span class="line">        encode(root);</span><br><span class="line">        <span class="keyword">int</span> *res = <span class="keyword">new</span> <span class="keyword">int</span>[buf.size()];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; buf.size(); i++)</span><br><span class="line">            res[i] = buf[i];</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">char</span>*)res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Deserialize</span><span class="params">(<span class="keyword">char</span> *str)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> *p = (<span class="keyword">int</span>*)str;</span><br><span class="line">        <span class="keyword">return</span> decode(p);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x77E5;&#x9053;&#x524D;&#x5E8F;/&#x540E;&#x7EED;+&#x4E2D;&#x5E8F;&#xFF0C;&#x53EA;&#x77E5;&#x9053;&#x524D;&#x5E8F;+&#x540E;&#x5E8F;&#x662F;&#x4E0D;&#x53EF;&#x4EE5;&#x7684;&#x3002;</p><p>&#x4F46;&#x662F;&#x5728;&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7ED9;&#x51FA;&#x4E86;&#x7A7A;&#x8282;&#x70B9;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x524D;&#x5E8F;&#x6765;&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><p>&#x5F69;&#x86CB;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> TreeNode* pnode;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    pnode hehe;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">char</span>* <span class="title">Serialize</span><span class="params">(TreeNode *root)</span> </span>{    </span><br><span class="line">        hehe = root;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(*^_^*)&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Deserialize</span><span class="params">(<span class="keyword">char</span> *str)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> hehe;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E0D;&#x7528;&#x52A0;&#x51CF;&#x4E58;&#x9664;&#x505A;&#x52A0;&#x6CD5;">&#x4E0D;&#x7528;&#x52A0;&#x51CF;&#x4E58;&#x9664;&#x505A;&#x52A0;&#x6CD5;</h1><ol type="1"><li>&#x4E24;&#x4E2A;&#x6570;&#x5F02;&#x6216;&#xFF1A;&#x76F8;&#x5F53;&#x4E8E;&#x6BCF;&#x4E00;&#x4F4D;&#x76F8;&#x52A0;&#xFF0C;&#x800C;&#x4E0D;&#x8003;&#x8651;&#x8FDB;&#x4F4D;&#xFF1B;</li><li>&#x4E24;&#x4E2A;&#x6570;&#x76F8;&#x4E0E;&#xFF0C;&#x5E76;&#x5DE6;&#x79FB;&#x4E00;&#x4F4D;&#xFF1A;&#x76F8;&#x5F53;&#x4E8E;&#x6C42;&#x5F97;&#x8FDB;&#x4F4D;&#xFF1B;</li><li>&#x5C06;&#x4E0A;&#x8FF0;&#x4E24;&#x6B65;&#x7684;&#x7ED3;&#x679C;&#x76F8;&#x52A0;</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">while</span> (num2 != <span class="number">0</span>) </span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> sum = num1 ^ num2;</span><br><span class="line">            <span class="keyword">int</span> carray = (num1 &amp; num2) &lt;&lt; <span class="number">1</span>;</span><br><span class="line">            num1 = sum;</span><br><span class="line">            num2 = carray;</span><br><span class="line">        }</span><br><span class="line">    <span class="keyword">return</span> num1;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x5F69;&#x86CB;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        _asm</span><br><span class="line">        {</span><br><span class="line">            MOV EAX, a</span><br><span class="line">            MOV ECX, b</span><br><span class="line">            ADD EAX, ECX</span><br><span class="line">            MOV a, EAX</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 剑指Offer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 剑指Offer </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>分布式与云计算复习笔记</title>
      <link href="//posts/64e8389b/"/>
      <url>//posts/64e8389b/</url>
      <content type="html"><![CDATA[<p>&#x8FD9;&#x4E2A;&#x592A;&#x96BE;&#x4E86;&#x6211;&#x4EEC;&#x4E0D;&#x8BB2;&#xFF1B;&#x8FD9;&#x4E2A;&#x592A;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x4E0D;&#x8BB2;&#xFF1B;&#x8FD9;&#x4E2A;.....&#xFF08;&#x559D;&#x53E3;&#x6C34;&#xFF0C;&#x70B9;&#x51FB;&#x9875;PPT&#xFF09;&#x4E5F;&#x4E0D;&#x8BB2;&#x3002; <a id="more"></a></p><h1 id="&#x7B2C;&#x4E00;&#x7AE0;-&#x7EEA;&#x8BBA;">&#x7B2C;&#x4E00;&#x7AE0; &#x7EEA;&#x8BBA;</h1><p><img src="/posts/64e8389b/&#x5206;&#x5E03;&#x5F0F;&#x7B2C;&#x4E00;&#x7AE0;.png"></p><h1 id="&#x7B2C;&#x4E03;&#x7AE0;-&#x4E00;&#x81F4;&#x6027;&#x548C;&#x590D;&#x5236;">&#x7B2C;&#x4E03;&#x7AE0; &#x4E00;&#x81F4;&#x6027;&#x548C;&#x590D;&#x5236;</h1><p><img src="/posts/64e8389b/&#x5206;&#x5E03;&#x5F0F;&#x7B2C;&#x4E03;&#x7AE0;.png"></p><h1 id="&#x7B2C;&#x516B;&#x7AE0;-&#x5BB9;&#x9519;">&#x7B2C;&#x516B;&#x7AE0; &#x5BB9;&#x9519;</h1><p><img src="/posts/64e8389b/&#x5206;&#x5E03;&#x5F0F;&#x7B2C;&#x516B;&#x7AE0;.png"></p><h1 id="&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E00;&#x7AE0;">&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E00;&#x7AE0;</h1><p><img src="/posts/64e8389b/&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E00;&#x7AE0;.png"></p><h1 id="&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E8C;&#x7AE0;">&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E8C;&#x7AE0;</h1><p><img src="/posts/64e8389b/&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E8C;&#x7AE0;.png"></p><h1 id="&#x590D;&#x4E60;&#x8D44;&#x6599;&#x8865;&#x5145;">&#x590D;&#x4E60;&#x8D44;&#x6599;&#x8865;&#x5145;</h1><p><a href="https://dev.tencent.com/s/0a92a2e2-3f72-44f6-972a-3615129f8acd" target="_blank" rel="noopener">&#x5206;&#x5E03;&#x5F0F;&#x590D;&#x4E60;&#x8D44;&#x6599;&#x8865;&#x5145;</a></p><h1 id="&#x81F4;&#x8C22;">&#x81F4;&#x8C22;</h1><p>&#x611F;&#x8C22;<a href="http://www.keyanjie.net/" target="_blank" rel="noopener">Alan Ke</a>&#x3001;&#x82CF;&#x7490;&#x5CA9;&#x3001;<a href="https://github.com/wangyu-/" target="_blank" rel="noopener">&#x6C6A;&#x5B87;</a>&#x3001;&#x738B;&#x8BD7;&#x8BD7;&#x3001;<a href="http://cjcongjia.cn/" target="_blank" rel="noopener">&#x4ECE;&#x5609;</a>&#x7B49;&#x540C;&#x5B66;&#x7684;&#x652F;&#x6301;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
            <tag> 云计算 </tag>
            
            <tag> 复习笔记 </tag>
            
            <tag> 丁菁 </tag>
            
            <tag> 随机授课 </tag>
            
            <tag> 多喝水 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018校招真题编程练习题解</title>
      <link href="//posts/7da4f75a/"/>
      <url>//posts/7da4f75a/</url>
      <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/ta/2018test" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><a id="more"></a><h1 id="&#x6700;&#x5927;&#x4E58;&#x79EF;">&#x6700;&#x5927;&#x4E58;&#x79EF;</h1><p>&#x6CE8;&#x610F;&#x8FD9;&#x9053;&#x9898;&#x7684;&#x6D4B;&#x8BD5;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x662F;&#x5148;&#x7ED9;&#x51FA;&#x6570;&#x5B57;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x518D;&#x7ED9;&#x51FA;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x3002;</p><p>&#x6700;&#x5927;&#x503C;&#x53EA;&#x53EF;&#x80FD;&#x5728;(max1*max2*max3, max1*min1*min2)&#x4E2D;&#x5F97;&#x51FA;&#xFF0C;&#x8BA1;&#x7B97;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x5373;&#x53EF;&#x3002;</p><p>&#x6CE8;&#x610F;&#x4F7F;&#x7528;long long &#x9632;&#x6B62;&#x6EA2;&#x51FA;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp, max1 = INT32_MIN, max2 = INT32_MIN, max3 = INT32_MIN, min1 = INT32_MAX, min2 = INT32_MAX;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        max3 = max(temp, max3);</span><br><span class="line">        <span class="keyword">if</span> (max3 &gt; max2)</span><br><span class="line">            swap(max2, max3);</span><br><span class="line">        <span class="keyword">if</span> (max2 &gt; max1)</span><br><span class="line">            swap(max2, max1);</span><br><span class="line">        min2 = min(min2, temp);</span><br><span class="line">        <span class="keyword">if</span> (min1 &gt; min2)</span><br><span class="line">            swap(min1, min2);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; max(max1*max2*max3, max1*min1*min2);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5927;&#x6574;&#x6570;&#x76F8;&#x4E58;">&#x5927;&#x6574;&#x6570;&#x76F8;&#x4E58;</h1><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;POJ 1001</p>]]></content>
      
      <categories>
          
          <category> 校招真题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 校招真题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>华为2019软件挑战赛经验教训总结</title>
      <link href="//posts/a1353cd8/"/>
      <url>//posts/a1353cd8/</url>
      <content type="html"><![CDATA[<p>&#x4E0E;&#x4EBA;&#x5171;&#x4E8B;&#xFF0C;&#x4EBA;&#x662F;&#x5173;&#x952E;&#x3002; <a id="more"></a></p><h1 id="&#x7B80;&#x8FF0;">&#x7B80;&#x8FF0;</h1><p>&#x8FD9;&#x6B21;&#x6BD4;&#x8D5B;&#xFF0C;&#x6211;&#x4EEC;&#x961F;&#x662F;&#x7531;&#x4E09;&#x4EBA;&#x7EC4;&#x6210;&#xFF0C;&#x6211;&#xFF0C;&#x5F90;&#x540C;&#x5B66;&#xFF0C;&#x738B;&#x540C;&#x5B66;&#x3002;&#x5F90;&#x540C;&#x5B66;&#x62C5;&#x4EFB;&#x961F;&#x957F;&#xFF0C;&#x738B;&#x540C;&#x5B66;&#x5199;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><p>&#x4E3A;&#x65B9;&#x4FBF;&#x63CF;&#x8FF0;&#xFF0C;&#x540E;&#x6587;&#x7528;&#x201C;&#x961F;&#x957F;&#x201D;&#x6765;&#x6307;&#x4EE3;&#x5F90;&#x540C;&#x5B66;&#xFF0C;&#x7528;&#x201C;&#x4E3B;&#x7A0B;&#x201D;&#x6765;&#x4EE3;&#x6307;&#x738B;&#x540C;&#x5B66;&#x3002;</p><p>&#x5728;3.10&#x5DE6;&#x53F3;&#xFF0C;&#x961F;&#x957F;&#x6765;&#x8054;&#x7CFB;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x65F6;&#xFF0C;&#x961F;&#x957F;&#x8BF4;&#x4ED6;&#x4E0D;&#x4F1A;&#x7F16;&#x7A0B;&#xFF0C;&#x4ED6;&#x6765;&#x63D0;&#x4F9B;&#x7B97;&#x6CD5;&#xFF0C;&#x8BA9;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x6765;&#x5B9E;&#x73B0;&#x3002;&#x5F53;&#x65F6;&#x8003;&#x8651;&#x5230;&#x961F;&#x957F;&#x7684;&#x5C65;&#x5386;&#x8FD8;&#x4E0D;&#x9519;&#xFF08;&#x672C;&#x79D1;&#x53A6;&#x95E8;&#x5927;&#x5B66;&#x6570;&#x5B66;&#x7CFB;&#xFF09;&#xFF0C;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x5C31;&#x7B54;&#x5E94;&#x4E86;&#x3002;</p><p>&#x6240;&#x4EE5;&#x6700;&#x5F00;&#x59CB;&#x7684;&#x5DE5;&#x4F5C;&#x5206;&#x914D;&#x662F;&#xFF0C;&#x961F;&#x957F;&#x8D1F;&#x8D23;&#x7B97;&#x6CD5;&#xFF0C;&#x4E3B;&#x7A0B;&#x8D1F;&#x8D23;&#x4E3B;&#x8981;&#x7684;&#x7A0B;&#x5E8F;&#x7F16;&#x5199;&#xFF0C;&#x6211;&#x8D1F;&#x8D23;&#x5C11;&#x90E8;&#x5199;&#x5206;&#x4EE3;&#x7801;&#x3001;&#x7248;&#x672C;&#x63A7;&#x5236;&#x3001;&#x7F16;&#x8BD1;+&#x6D4B;&#x8BD5;&#x3001;&#x628A;&#x4E3B;&#x7A0B;&#x7684;&#x4EE3;&#x7801;&#x4FEE;&#x6539;&#x6210;&#x7B26;&#x5408;&#x9898;&#x76EE;&#x8981;&#x6C42;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><p>&#x6700;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x505A;&#x51FA;&#x6765;&#x4E00;&#x4E2A;&#x6709;&#x6210;&#x7EE9;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x7136;&#x800C;&#x7531;&#x4E8E;&#x961F;&#x957F;&#x6CA1;&#x6709;&#x505A;&#x7248;&#x672C;&#x63A7;&#x5236;&#xFF0C;&#x628A;&#x8FD9;&#x4E00;&#x7248;&#x672C;&#x8986;&#x76D6;&#x6389;&#x4E86;&#xFF0C;&#x5BFC;&#x81F4;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x8FDE;&#x4EFB;&#x4F55;&#x6210;&#x7EE9;&#x90FD;&#x6CA1;&#x6709;&#x3002;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x5FC3;&#x6001;&#x5D29;&#x76D8;&#x3002;</p><h1 id="&#x6559;&#x8BAD;&#x4E00;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;">&#x6559;&#x8BAD;&#x4E00;&#xFF1A;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;</h1><p>&#x5982;&#x524D;&#x6587;&#x6240;&#x8FF0;&#xFF0C;&#x521A;&#x5F00;&#x59CB;&#x8BA8;&#x8BBA;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x505A;&#x65F6;&#xFF0C;&#x961F;&#x957F;&#x5C31;&#x8981;&#x6C42;&#x6211;&#x4EEC;&#x5148;&#x628A;&#x57FA;&#x7840;&#x7684;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#xFF0C;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x6162;&#x6162;&#x8C03;&#x4F18;&#x3002;&#x800C;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x7684;&#x8BA4;&#x4E3A;&#xFF0C;&#x8981;&#x5148;&#x6709;&#x5927;&#x6982;&#x7B97;&#x6CD5;&#xFF0C;&#x518D;&#x8003;&#x8651;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x3002;</p><p>&#x4E0D;&#x8FC7;&#x7531;&#x4E8E;&#x961F;&#x957F;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x62FF;&#x51FA;&#x6765;&#x9AD8;&#x6548;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x5148;&#x5199;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x76F4;&#x5230;&#x6700;&#x540E;&#x6BD4;&#x8D5B;&#x7ED3;&#x675F;&#xFF0C;&#x961F;&#x957F;&#x4ECD;&#x7136;&#x6CA1;&#x6709;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5207;&#x5B9E;&#x53EF;&#x884C;&#x7684;&#x7B97;&#x6CD5;&#x3002;</p><p>&#x6240;&#x4EE5;&#x4EE5;&#x540E;&#x518D;&#x505A;&#x9879;&#x76EE;&#x65F6;&#xFF0C;&#x6211;&#x5B66;&#x5230;&#x7684;&#x6559;&#x8BAD;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x7ED3;&#x679C;&#x4E3A;&#x5BFC;&#x5411;&#xFF0C;&#x6301;&#x6709;&#x4E00;&#x79CD;&#x6210;&#x738B;&#x8D25;&#x5BC7;&#x89C2;&#x70B9;&#x7684;&#x8BDD;&#xFF0C;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x597D;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x5EFA;&#x8BAE;&#x4ECE;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x653E;&#x5F03;&#x3002;</p><h1 id="&#x6559;&#x8BAD;&#x4E8C;&#x4EBA;&#x5458;&#x9009;&#x62E9;&#x5F88;&#x5173;&#x952E;">&#x6559;&#x8BAD;&#x4E8C;&#xFF1A;&#x4EBA;&#x5458;&#x9009;&#x62E9;&#x5F88;&#x5173;&#x952E;</h1><h1 id="&#x6559;&#x8BAD;&#x4E09;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x662F;&#x5B66;&#x95EE;">&#x6559;&#x8BAD;&#x4E09;&#xFF1A;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x662F;&#x5B66;&#x95EE;</h1><h1 id="&#x6559;&#x8BAD;&#x56DB;&#x63D0;&#x524D;&#x60F3;&#x597D;&#x4EE3;&#x7801;&#x67B6;&#x6784;">&#x6559;&#x8BAD;&#x56DB;&#xFF1A;&#x63D0;&#x524D;&#x60F3;&#x597D;&#x4EE3;&#x7801;&#x67B6;&#x6784;</h1><p>&#x8FD9;&#x90E8;&#x5206;&#x6211;&#x6765;&#x80CC;&#x9505;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6CA1;&#x6709;&#x7406;&#x89E3;&#x6BD4;&#x8D5B;</p><h1 id="&#x6559;&#x8BAD;&#x4E94;&#x6D4B;&#x8BD5;&#x5F88;&#x91CD;&#x8981;">&#x6559;&#x8BAD;&#x4E94;&#xFF1A;&#x6D4B;&#x8BD5;&#x5F88;&#x91CD;&#x8981;</h1><h1 id="&#x6559;&#x8BAD;&#x516D;&#x6CE8;&#x610F;&#x7248;&#x672C;&#x63A7;&#x5236;">&#x6559;&#x8BAD;&#x516D;&#xFF1A;&#x6CE8;&#x610F;&#x7248;&#x672C;&#x63A7;&#x5236;</h1><h1 id="&#x6559;&#x8BAD;&#x4E03;&#x5FC3;&#x6001;&#x8981;&#x653E;&#x5E73;">&#x6559;&#x8BAD;&#x4E03;&#xFF1A;&#x5FC3;&#x6001;&#x8981;&#x653E;&#x5E73;</h1><h1 id="&#x6559;&#x8BAD;&#x516B;&#x8C03;&#x53C2;&#x4E0D;&#x9760;&#x8C31;">&#x6559;&#x8BAD;&#x516B;&#xFF1A;&#x8C03;&#x53C2;&#x4E0D;&#x9760;&#x8C31;</h1><h1 id="&#x6559;&#x8BAD;&#x4E5D;">&#x6559;&#x8BAD;&#x4E5D;&#xFF1A;</h1><h1 id="&#x540E;&#x8BB0;">&#x540E;&#x8BB0;</h1><p>&#x6211;&#x6587;&#x7B14;&#x4E0D;&#x597D;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E5F;&#x662F;&#x53CD;&#x590D;&#x6539;&#x4E86;&#x5F88;&#x591A;&#x6B21;&#x624D;&#x6700;&#x7EC8;&#x53D1;&#x5E03;&#x51FA;&#x53BB;&#x3002;&#x4E00;&#x5F00;&#x59CB;&#x5728;&#x5199;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6709;&#x5F88;&#x591A;&#x5E26;&#x6709;&#x60C5;&#x7EEA;&#x7684;&#x8BDD;&#xFF0C;&#x540E;&#x6765;&#x81EA;&#x5DF1;&#x4E0D;&#x65AD;&#x53CD;&#x601D;&#xFF0C;&#x6709;&#x6210;&#x7EE9;&#x56FA;&#x7136;&#x9AD8;&#x5174;&#xFF0C;&#x4F46;&#x662F;&#x5931;&#x8D25;&#x4E86;&#x4E5F;&#x8981;&#x5FC3;&#x6001;&#x653E;&#x5E73;&#x3002;&#x4E0D;&#x8981;&#x7528;&#x8FC7;&#x53BB;&#x7684;&#x4E8B;&#x6765;&#x5F71;&#x54CD;&#x5C06;&#x6765;&#x7684;&#x5FC3;&#x60C5;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x9009;&#x62E9;&#x5F7B;&#x5E95;&#x51B7;&#x9759;&#x4E0B;&#x6765;&#x4E4B;&#x540E;&#x518D;&#x53D1;&#x5E03;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 经验教训 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验教训 </tag>
            
            <tag> 总结 </tag>
            
            <tag> 竞赛 </tag>
            
            <tag> 猪队友坑死人 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高级图像处理-Lab8图像金字塔</title>
      <link href="//posts/4898d2ed/"/>
      <url>//posts/4898d2ed/</url>
      <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#xFF1A;&#x53C2;&#x8003;&#x300A;01_&#x79D1;&#x8F6F;&#x9AD8;&#x56FE;&#x5B9E;&#x9A8C;_&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53CA;OpenCV&#x7A0B;&#x5E8F;&#x300B;&#x6587;&#x6863;&#xFF0C;&#x5B8C;&#x6210;3&#x4E2A;&#x6269;&#x5C55;&#x5B9E;&#x9A8C;&#x3002; <a href="https://dev.tencent.com/s/acf5afe0-9080-4659-a3e7-033e1e24da58" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;">&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;</h1>]]></content>
      
      <categories>
          
          <category> 高级图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 高级图像处理 </tag>
            
            <tag> 中科大 </tag>
            
            <tag> 实验笔记 </tag>
            
            <tag> 赵振刚 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高级图像处理-Lab7皮肤检测</title>
      <link href="//posts/b148748/"/>
      <url>//posts/b148748/</url>
      <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#xFF1A;&#x53C2;&#x8003;&#x300A;01_&#x79D1;&#x8F6F;&#x9AD8;&#x56FE;&#x5B9E;&#x9A8C;_&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53CA;OpenCV&#x7A0B;&#x5E8F;&#x300B;&#x6587;&#x6863;&#xFF0C;&#x5B8C;&#x6210;3&#x4E2A;&#x6269;&#x5C55;&#x5B9E;&#x9A8C;&#x3002; <a href="https://dev.tencent.com/s/71e6dab8-872b-4451-af0c-e4cd56232ec2" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x76AE;&#x80A4;&#x68C0;&#x6D4B;">&#x76AE;&#x80A4;&#x68C0;&#x6D4B;</h1>]]></content>
      
      <categories>
          
          <category> 高级图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 高级图像处理 </tag>
            
            <tag> 中科大 </tag>
            
            <tag> 实验笔记 </tag>
            
            <tag> 赵振刚 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高级图像处理-Lab6图形学变换</title>
      <link href="//posts/5c4cf636/"/>
      <url>//posts/5c4cf636/</url>
      <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#xFF1A;&#x53C2;&#x8003;&#x300A;01_&#x79D1;&#x8F6F;&#x9AD8;&#x56FE;&#x5B9E;&#x9A8C;_&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53CA;OpenCV&#x7A0B;&#x5E8F;&#x300B;&#x6587;&#x6863;&#xFF0C;&#x5B8C;&#x6210;3&#x4E2A;&#x6269;&#x5C55;&#x5B9E;&#x9A8C;&#x3002; <a href="https://dev.tencent.com/s/252d3c16-730a-4db8-b8ca-4ca69485e5f9" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x81A8;&#x80C0;">&#x81A8;&#x80C0;</h1>]]></content>
      
      <categories>
          
          <category> 高级图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 高级图像处理 </tag>
            
            <tag> 中科大 </tag>
            
            <tag> 实验笔记 </tag>
            
            <tag> 赵振刚 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高级图像处理-Lab5频域滤波</title>
      <link href="//posts/6e84f7a7/"/>
      <url>//posts/6e84f7a7/</url>
      <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/5167be5b-f5ed-4e9c-a25d-21a0676eb26d" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/08f3d6e9-4e8a-4034-ab84-eeeac896585f" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;-dft-&#x548C;-idft">&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684; DFT &#x548C; IDFT</h1>]]></content>
      
      <categories>
          
          <category> 高级图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 高级图像处理 </tag>
            
            <tag> 中科大 </tag>
            
            <tag> 实验笔记 </tag>
            
            <tag> 赵振刚 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高级图像处理-Lab4图像去噪</title>
      <link href="//posts/1983c731/"/>
      <url>//posts/1983c731/</url>
      <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/735198c6-c797-41df-aedb-f6f504769917" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/58e3d1da-2ad6-466a-b8ef-e6314949c91e" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x5747;&#x503C;&#x6EE4;&#x6CE2;">&#x5747;&#x503C;&#x6EE4;&#x6CE2;</h1>]]></content>
      
      <categories>
          
          <category> 高级图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 高级图像处理 </tag>
            
            <tag> 中科大 </tag>
            
            <tag> 实验笔记 </tag>
            
            <tag> 赵振刚 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高级图像处理-Lab3空域滤波</title>
      <link href="//posts/87e75292/"/>
      <url>//posts/87e75292/</url>
      <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/36e36407-fb10-42c8-b308-a7e36c9df96f" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/0687d410-1b36-4cf5-a19c-0bff78962fa0" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x5229;&#x7528;&#x5747;&#x503C;&#x6A21;&#x677F;&#x5E73;&#x6ED1;&#x7070;&#x5EA6;&#x56FE;&#x50CF;">&#x5229;&#x7528;&#x5747;&#x503C;&#x6A21;&#x677F;&#x5E73;&#x6ED1;&#x7070;&#x5EA6;&#x56FE;&#x50CF;</h1><p>&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF1A; &#x5229;&#x7528; OpenCV &#x5BF9;&#x56FE;&#x50CF;&#x50CF;&#x7D20;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF0C; &#x5206;&#x522B;&#x5229;&#x7528; 3*3&#x3001; 5*5 &#x548C; 9*9 &#x5C3A;&#x5BF8;&#x7684;&#x5747;&#x503C;&#x6A21;&#x677F;&#x5E73;&#x6ED1;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 高级图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 高级图像处理 </tag>
            
            <tag> 中科大 </tag>
            
            <tag> 实验笔记 </tag>
            
            <tag> 赵振刚 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高级图像处理-Lab2直方图均衡</title>
      <link href="//posts/f0e06204/"/>
      <url>//posts/f0e06204/</url>
      <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/28cb7094-afd7-40d4-bed0-7f32c8a62a8d" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/819824a3-995a-46eb-a040-957e52154096" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x8BA1;&#x7B97;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x76F4;&#x65B9;&#x56FE;">&#x8BA1;&#x7B97;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x76F4;&#x65B9;&#x56FE;</h1><p>&#x53CD;&#x6B63;&#x4E5F;&#x6CA1;&#x4EBA;&#x770B;&#xFF0C;&#x90FD;&#x60F3;&#x76F4;&#x63A5;&#x8981;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x5077;&#x61D2;&#x4EE5;&#x540E;&#x518D;&#x5199;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 高级图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 高级图像处理 </tag>
            
            <tag> 中科大 </tag>
            
            <tag> 实验笔记 </tag>
            
            <tag> 赵振刚 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高级图像处理-Lab1图像灰度变换</title>
      <link href="//posts/3b2efaf5/"/>
      <url>//posts/3b2efaf5/</url>
      <content type="html"><![CDATA[<p>&#x9AD8;&#x7EA7;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7B2C;&#x4E00;&#x6B21;&#x8BD5;&#x9A8C;&#xFF0C;&#x73AF;&#x5883;&#x914D;&#x7F6E;&#x53CA;&#x4EE3;&#x7801;&#x3002;</p><p><a href="https://dev.tencent.com/s/611b9e92-62bc-40a5-b958-2fb4d297ed8e" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/1c465c3e-8049-4a6a-91e1-5ca8ba250f66" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x73AF;&#x5883;&#x914D;&#x7F6E;">&#x73AF;&#x5883;&#x914D;&#x7F6E;</h1><p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>OpenCV&#x666E;&#x901A;&#x7248;&#xFF08;&#x6CA1;&#x6709;contrib&#x7684;&#xFF09;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x597D;&#x914D;&#x7F6E;&#x7684;&#xFF0C;&#x5177;&#x4F53;&#x5982;&#x4F55;&#x914D;&#x7F6E;&#x4E0D;&#x518D;&#x5570;&#x55E6;&#x4E86;&#x3002;&#x4E0D;&#x8FC7;&#x5728;&#x6211;&#x5199;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF08;2019.3.22&#xFF09;&#x65F6;&#xFF0C;OpenCV4&#x7684;&#x8D44;&#x6599;&#x8FD8;&#x662F;&#x5F88;&#x5C11;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x592A;&#x5EFA;&#x8BAE;&#x8FD9;&#x4E48;&#x65E9;&#x7684;&#x7528;&#x6700;&#x65B0;&#x7248;&#x3002;</p><p>&#x5728;OpenCV4&#x4E2D;&#xFF0C;&#x79FB;&#x9664;&#x4E86;&#x597D;&#x591A;&#x8001;&#x65E7;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5176;&#x548C;OpenCV2&#x517C;&#x5BB9;&#x6027;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x597D;&#x3002;</p><h1 id="&#x5229;&#x7528;-opencv-&#x8BFB;&#x53D6;&#x56FE;&#x50CF;">&#x5229;&#x7528; OpenCV &#x8BFB;&#x53D6;&#x56FE;&#x50CF;</h1><p>&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF1A;&#x7528;OpenCV&#x6253;&#x5F00;&#x56FE;&#x50CF;&#xFF0C;&#x5E76;&#x5728;&#x7A97;&#x53E3;&#x663E;&#x793A;&#x3002;</p><p>&#x5728;OpenCV4&#x4E2D;&#xFF0C;&#x6211;&#x6CA1;&#x6709;&#x627E;&#x5230;<strong>cvLoadImage</strong>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;imread&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x8BFB;&#x53D6;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5728;VS2017&#x4E0B;&#xFF0C;waitKey&#x4E4B;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x52A0;destroyAllWindows()&#xFF0C;&#x4F1A;&#x62A5;&#x9519;&#x3002;</p><p>&#x6240;&#x4EE5;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">loadimage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Mat image;</span><br><span class="line">    image = imread(<span class="string">&quot;lena.jpg&quot;</span>, IMREAD_COLOR); <span class="comment">// Read the file</span></span><br><span class="line">    namedWindow(<span class="string">&quot;Display window&quot;</span>, WINDOW_AUTOSIZE); <span class="comment">// Create a window for display.</span></span><br><span class="line">    imshow(<span class="string">&quot;Display window&quot;</span>, image);                <span class="comment">// Show our image inside it.</span></span><br><span class="line">    waitKey(<span class="number">0</span>); <span class="comment">// Wait for a keystroke in the window</span></span><br><span class="line">    destroyAllWindows();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;">&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;</h1><p>&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF1A;&#x8BBE;&#x7F6E;&#x5E76;&#x8C03;&#x6574;&#x9608;&#x503C;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;&#x3002;</p><p>&#x8001;&#x5E08;&#x8981;&#x6C42;&#x4E0D;&#x80FD;&#x8C03;&#x5E93;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x662F;&#x7A7A;&#x57DF;&#x4E0A;&#x7684;&#x53D8;&#x6362;&#xFF0C;&#x904D;&#x5386;&#x771F;&#x4E2A;&#x56FE;&#x50CF;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x7070;&#x5EA6;&#x503C;&#x4F4E;&#x4E8E;&#x9608;&#x503C;&#x7684;&#x7F6E;&#x4E3A;0&#xFF0C;&#x628A;&#x9AD8;&#x4E8E;&#x9608;&#x503C;&#x7684;&#x7F6E;&#x4E3A;255&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = image.clone();</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x884C;&#x4EE3;&#x7801;&#x8868;&#x793A;&#x5BF9;image&#x8FDB;&#x884C;&#x6DF1;&#x62F7;&#x8D1D;&#xFF0C;&#x503C;&#x590D;&#x5236;&#x3002;</p><p>&#x5728;&#x540E;&#x9762;&#x7684;&#x5B9E;&#x9A8C;&#x4E2D;&#xFF0C;&#x6211;&#x6709;&#x65F6;&#x5019;&#x4E0D;&#x52A0;namedWindow&#xFF0C;&#x5176;&#x5B9E;&#x4E5F;&#x80FD;&#x6B63;&#x5E38;&#x7684;&#x663E;&#x793A;&#x56FE;&#x50CF;&#xFF0C;&#x4E5F;&#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#x3002;</p><p>&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x4EE3;&#x7801;&#x662F;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Binarization</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Mat image,res;</span><br><span class="line">    image = imread(<span class="string">&quot;lena.jpg&quot;</span>, <span class="number">0</span>); <span class="comment">// &#x7070;&#x5EA6;&#x8BFB;&#x5165;</span></span><br><span class="line">    namedWindow(<span class="string">&quot;&#x539F;&#x56FE;&quot;</span>, WINDOW_AUTOSIZE); <span class="comment">// Create a window for display.</span></span><br><span class="line">    imshow(<span class="string">&quot;&#x539F;&#x56FE;&quot;</span>, image);                <span class="comment">// Show our image inside it.</span></span><br><span class="line">    </span><br><span class="line">    res = image.clone();</span><br><span class="line">    <span class="keyword">int</span> gray;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.rows; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; res.cols; j++)</span><br><span class="line">        {</span><br><span class="line">            gray = res.at&lt;uchar&gt;(i, j);</span><br><span class="line">            <span class="keyword">if</span> (gray &gt; <span class="number">80</span>)</span><br><span class="line">                gray = <span class="number">255</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                gray = <span class="number">0</span>;</span><br><span class="line">            res.at&lt;uchar&gt;(i, j) = saturate_cast&lt;uchar&gt;(gray);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//threshold(image, res, 80, 255, 0);</span></span><br><span class="line">    namedWindow(<span class="string">&quot;&#x4E8C;&#x503C;&#x5316;&#x7684;&#x56FE;&quot;</span>, WINDOW_AUTOSIZE); <span class="comment">// Create a window for display.</span></span><br><span class="line">    imshow(<span class="string">&quot;&#x4E8C;&#x503C;&#x5316;&#x7684;&#x56FE;&quot;</span>, res);                <span class="comment">// Show our image inside it.</span></span><br><span class="line">    waitKey(<span class="number">0</span>); <span class="comment">// Wait for a keystroke in the window</span></span><br><span class="line">    destroyAllWindows();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 高级图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 高级图像处理 </tag>
            
            <tag> 中科大 </tag>
            
            <tag> 实验笔记 </tag>
            
            <tag> 赵振刚 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>寒假算法基础集训营1题解</title>
      <link href="//posts/4714a7e1/"/>
      <url>//posts/4714a7e1/</url>
      <content type="html"><![CDATA[<p>&#x5BD2;&#x5047;&#x91CC;&#x505A;&#x7684;&#x6BD4;&#x8D5B;&#xFF0C;&#x88AB;&#x5927;&#x4F6C;&#x6309;&#x5728;&#x5730;&#x4E0A;&#x6469;&#x64E6;&#xFF0C;&#x5B66;&#x5230;&#x4E86;&#x4E0D;&#x5C11;&#x4E1C;&#x897F;&#x3002;&#x6545;&#x8BB0;&#x5F55;&#x4E4B;&#x3002;</p><p><a href="https://ac.nowcoder.com/acm/contest/317#question" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> <a href="https://static.nowcoder.com/pdf/ncwc/%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E8%AE%AD%E7%BB%83%E8%90%A51%E9%A2%98%E8%A7%A3.pdf" target="_blank" rel="noopener">&#x5B98;&#x65B9;&#x9898;&#x89E3;</a> <a id="more"></a></p><h1 id="&#x5C0F;a&#x7684;&#x8BA1;&#x7B97;&#x5668;">&#x5C0F;a&#x7684;&#x8BA1;&#x7B97;&#x5668;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x7B7E;&#x5230;&#x9898;&#xFF0C;&#x6CA1;&#x5565;&#x597D;&#x8BF4;&#x7684;&#x3002;&#x76F4;&#x63A5;&#x6A21;&#x62DF;&#x53EF;&#x4EE5;&#x505A;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> o;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> temp;</span><br><span class="line">}op;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> num;</span><br><span class="line"><span class="built_in">vector</span>&lt;op&gt; V;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; num;</span><br><span class="line">    V.resize(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; V[i].o&gt;&gt;V[i].temp;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (V[i].o==<span class="number">1</span>)<span class="comment">//+</span></span><br><span class="line">        {</span><br><span class="line">            num -= V[i].temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (V[i].o == <span class="number">2</span>)<span class="comment">//-</span></span><br><span class="line">        {</span><br><span class="line">            num += V[i].temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (V[i].o == <span class="number">3</span>)<span class="comment">//*</span></span><br><span class="line">        {</span><br><span class="line">            num /= V[i].temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (V[i].o == <span class="number">4</span>)<span class="comment">//&#xF7;</span></span><br><span class="line">        {</span><br><span class="line">            num *= V[i].temp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;2.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5C0F;a&#x4E0E;204">&#x5C0F;a&#x4E0E;&quot;204&quot;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;-1">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x7528;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x505A;&#xFF0C;&#x5C3D;&#x91CF;&#x8BA9;&#x524D;&#x540E;&#x4E24;&#x4E2A;&#x6570;&#x7684;&#x5DEE;&#x503C;&#x6700;&#x5927;&#x3002;</p><ol type="1"><li>&#x5F53;&#x524D;&#x9762;&#x7684;&#x6570;&#x4E3A;0&#x65F6;&#xFF0C;&#x5C3D;&#x91CF;&#x9009;&#x62E9;4&#x3002;</li><li>&#x5F53;&#x524D;&#x9762;&#x7684;&#x6570;&#x4E3A;2&#x65F6;&#xFF0C;&#x9009;&#x62E9;0&#x548C;4&#x4E2D;&#xFF0C;&#x5269;&#x4F59;&#x8F83;&#x591A;&#x7684;&#x90A3;&#x4E2A;&#x3002;</li><li>&#x5F53;&#x524D;&#x9762;&#x7684;&#x6570;&#x4E3A;4&#x65F6;&#xFF0C;&#x5C3D;&#x91CF;&#x9009;&#x62E9;0&#x3002;</li></ol><h2 id="&#x4EE3;&#x7801;-1">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">0</span>, num4 = <span class="number">0</span>, num0 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n,temp;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">2</span>)</span><br><span class="line">            num2++;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">0</span>)</span><br><span class="line">            num0++;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">4</span>)</span><br><span class="line">            num4++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> cur = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (cur==<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num4 &gt; <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                num4--;</span><br><span class="line">                res += <span class="number">16</span>;</span><br><span class="line">                cur = <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (num2&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                num2--;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                cur = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (cur==<span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num4&gt;num0)</span><br><span class="line">            {</span><br><span class="line">                num4--;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                cur = <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (num0 &gt; num4)</span><br><span class="line">            {</span><br><span class="line">                num0--;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                cur = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (cur==<span class="number">4</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num0&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                cur = <span class="number">0</span>;</span><br><span class="line">                res += <span class="number">16</span>;</span><br><span class="line">                num0--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (num2&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                cur = <span class="number">2</span>;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                num2--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;3.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5C0F;a&#x4E0E;&#x661F;&#x9645;&#x63A2;&#x7D22;">&#x5C0F;a&#x4E0E;&#x661F;&#x9645;&#x63A2;&#x7D22;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;-2">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x5F88;&#x6709;&#x610F;&#x601D;&#x7684;&#x4E00;&#x4E2A;&#x9898;&#xFF0C;&#x8FD9;&#x4E2A;&#x9898;&#x8003;&#x5230;&#x4E86;&#x5F02;&#x6216;&#x7684;&#x6027;&#x8D28;&#x548C;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x3002;&#x662F;&#x80CC;&#x5305;&#x95EE;&#x9898;&#x7684;&#x53D8;&#x79CD;&#xFF0C;&#x975E;&#x5E38;&#x5DE7;&#x5999;&#x3002;</p><p>&#x5B98;&#x65B9;&#x9898;&#x89E3;&#x4E2D;&#x63D0;&#x5230;&#xFF0C;DP&#x7684;&#x6570;&#x7EC4;&#x4E0D;&#x80FD;&#x53EA;&#x5F00;&#x5230;3000&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#xFF0C;pi&#x5728;[1,3000]&#xFF0C;3000&#x901A;&#x8FC7;&#x5F02;&#x6216;&#xFF0C;&#x6700;&#x5927;&#x53EF;&#x5230;&#x8FBE;&#x7684;&#x6570;&#x662F;4095&#x3002;&#x6240;&#x4EE5;dp&#x6570;&#x7EC4;&#x6700;&#x5C11;&#x4E5F;&#x8981;4096&#x3002;&#x4EE3;&#x7801;&#x4E2D;&#x5F00;&#x5230;&#x4E86;4100&#x3002;</p><p>&#x5173;&#x952E;&#x70B9;&#xFF1A; 1. dp&#x6570;&#x7EC4;&#x4E0D;&#x80FD;&#x53EA;&#x5F00;3000&#xFF0C;&#x56E0;&#x4E3A;3000&#x901A;&#x8FC7;&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#xFF0C;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x5230;4095&#x3002; 2. dp&#x6570;&#x7EC4;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x7EF4;&#x7684;&#x3002; 3. &#x6838;&#x5FC3;&#x4EE3;&#x7801;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x56E0;&#x4E3A;&#x6700;&#x5927;&#x662F;3000&#xFF0C;&#x6839;&#x636E;&#x5F02;&#x6216;&#xFF0C;&#x6700;&#x5927;&#x503C;&#x662F;4095</span></span><br><span class="line">dp[V[<span class="number">0</span>] ^ V[n - <span class="number">1</span>]] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">4095</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (V[i]&lt;V[<span class="number">0</span>]&amp;&amp;V[i]&gt;V[n<span class="number">-1</span>])<span class="comment">//&#x6EE1;&#x8DB3;&#x4E2D;&#x8F6C;&#x6761;&#x4EF6;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (dp[j^V[i]])</span><br><span class="line">            {</span><br><span class="line">                dp[j] = dp[j^V[i]];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x9010;&#x6B65;&#x5206;&#x6790;&#xFF0C;&#x5728;&#x6700;&#x5F00;&#x59CB; &#xFF0C;&#x628A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[V[<span class="number">0</span>] ^ V[n - <span class="number">1</span>]] = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure></p><p>&#x8868;&#x793A;&#x53EA;&#x8003;&#x7B2C;&#x4E00;&#x4E2A;&#x548C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#xFF0C;&#x53EF;&#x4EE5;&#x5230;&#x8FBE;&#x7684;&#x503C;&#x3002;<br>&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x6027;&#x8D28;&#xFF1A;<br>&#x5982;&#x679C;A&#x2295;B=D&#x2295;E=C&#x3002;&#x5219;E=A&#x2295;B&#x2295;D.</p><p>&#x6240;&#x4EE5;&#x5728;&#x7B2C;&#x4E8C;&#x6B21;&#x5FAA;&#x73AF;&#xFF0C;&#x5728;0~4095&#x4E2D;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x8BB0;&#x4E3A;t&#xFF0C;&#x4F7F;&#x5F97;t&#x2295;V[1]=C&#x3002;<br>&#x8FD9;&#x6837;&#xFF0C;&#x8FD9;&#x4E2A;t&#x5C31;&#x662F;V[0]&#x2295;V[1]&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x7684;&#x503C;&#x3002;</p><p>&#x7136;&#x540E;&#x4F9D;&#x6B21;&#x7C7B;&#x63A8;&#xFF0C;&#x4E0D;&#x65AD;&#x4EE5;&#x4E4B;&#x524D;&#x5F02;&#x6216;&#x7684;&#x7ED3;&#x679C;&#x4F5C;&#x4E3A;C&#xFF0C;&#x4EE5;&#x4E0D;&#x540C;&#x7684;V[i]&#xFF0C;&#x6765;&#x627E;&#x4E0D;&#x540C;&#x7684;t&#x3002;<br>&#x6700;&#x540E;&#x5728;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x53D6;&#x5F97;&#x7684;&#x5F02;&#x6216;&#x503C;&#x4E2D;&#xFF0C;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x7684;&#x3002; &#x200B;<br>&#x56E0;&#x4E3A;&#x521D;&#x59CB;&#x503C;&#x662F;V[0]&#x2295;V[n-1]&#xFF0C;&#x6240;&#x4EE5;&#x4E0A;&#x8FF0;&#x5BFB;&#x627E;&#x7684;t&#x90FD;&#x662F;&#x98DE;&#x8239;&#x5230;&#x8FBE;&#x7684;&#x4E2D;&#x95F4;&#x661F;&#x7403;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x56E0;&#x4E3A;&#x521D;&#x503C;&#x662F;V[0]&#x2295;V[n-1]&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x540E;&#x4FDD;&#x8BC1;&#x4E00;&#x5B9A;&#x80FD;&#x5230;&#x8FBE;n&#x53F7;&#x661F;&#x7403;&#x3002;</p><h2 id="&#x4EE3;&#x7801;-2">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n;<span class="comment">//&#x661F;&#x7403;&#x6570;</span></span><br><span class="line">    <span class="keyword">int</span> t;<span class="comment">//&#x8010;&#x4E45;&#x5EA6;</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;V(n),mid(n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; dp(<span class="number">4100</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; V[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (V[n - <span class="number">1</span>] &gt;= V[<span class="number">0</span>])<span class="comment">//&#x4E0D;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (V[<span class="number">0</span>] ? V[<span class="number">0</span>] : <span class="number">-1</span>) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//&#x5982;&#x679C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x661F;&#x7403;&#xFF0C;&#x5219;&#x770B;V[0]&#x662F;&#x5426;&#x4E3A;0&#xFF0C;&#x5982;&#x679C;&#x4E3A;0&#xFF0C;&#x8F93;&#x51FA;-1</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x5C06;&#x6240;&#x6709;&#x80FD;&#x4F5C;&#x4E3A;&#x4E2D;&#x8F6C;&#x7AD9;&#x7684;&#x661F;&#x7403;&#x52A0;&#x5165;&#x8FDB;&#x6765;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x56E0;&#x4E3A;&#x6700;&#x5927;&#x662F;3000&#xFF0C;&#x6839;&#x636E;&#x5F02;&#x6216;&#xFF0C;&#x6700;&#x5927;&#x503C;&#x662F;4095</span></span><br><span class="line">    dp[V[<span class="number">0</span>] ^ V[n - <span class="number">1</span>]] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">4095</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (V[i]&lt;V[<span class="number">0</span>]&amp;&amp;V[i]&gt;V[n<span class="number">-1</span>])<span class="comment">//&#x6EE1;&#x8DB3;&#x4E2D;&#x8F6C;&#x6761;&#x4EF6;</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (dp[j^V[i]])</span><br><span class="line">                {</span><br><span class="line">                    dp[j] = dp[j^V[i]];</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4095</span>; i &gt;<span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (dp[i])</span><br><span class="line">        { </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 寒假比赛 </tag>
            
            <tag> 非官方题解 </tag>
            
            <tag> 给大佬递茶 </tag>
            
            <tag> 被按在地上摩擦 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>算法导论复习笔记</title>
      <link href="//posts/db76c882/"/>
      <url>//posts/db76c882/</url>
      <content type="html"><![CDATA[<p>&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x590D;&#x4E60;&#x7B14;&#x8BB0;&#x3002; <a id="more"></a><br>&#x5982;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x8FD8;&#x8BF7;&#x591A;&#x591A;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#x3002;</p><h1 id="&#x7EA2;&#x9ED1;&#x6811;">&#x7EA2;&#x9ED1;&#x6811;</h1><h2 id="&#x6027;&#x8D28;">&#x6027;&#x8D28;</h2><p>&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x5982;&#x679C;&#x6EE1;&#x8DB3;&#x4E0B;&#x9762;&#x7684;&#x7EA2;&#x9ED1;&#x6027;&#x8D28;&#xFF0C;&#x5219;&#x4E3A;&#x4E00;&#x68F5;&#x7EA2;&#x9ED1;&#x6811;&#xFF1A;</p><ol type="1"><li>&#x6BCF;&#x4E2A;&#x7ED3;&#x70B9;&#x6216;&#x662F;&#x7EA2;&#x7684;&#xFF0C;&#x6216;&#x662F;&#x9ED1;&#x7684;&#x3002;</li><li>&#x6839;&#x7ED3;&#x70B9;&#x662F;&#x9ED1;&#x7684;&#x3002;</li><li>&#x6BCF;&#x4E2A;&#x53F6;&#x7ED3;&#x70B9;(NIL)&#x662F;&#x9ED1;&#x7684;</li><li>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x662F;&#x7EA2;&#x7684;&#xFF0C;&#x5219;&#x5B83;&#x7684;&#x4E24;&#x4E2A;&#x513F;&#x5B50;&#x90FD;&#x662F;&#x9ED1;&#x7684;&#x3002;</li><li>&#x5BF9;&#x6BCF;&#x4E2A;&#x7ED3;&#x70B9;&#xFF0C;&#x4ECE;&#x8BE5;&#x7ED3;&#x70B9;&#x5230;&#x5176;&#x5B50;&#x5B59;&#x7ED3;&#x70B9;&#x7684;&#x6240;&#x6709;&#x8DEF;&#x5F84;&#x4E0A;&#x5305;&#x542B;&#x76F8;&#x540C;&#x6570;&#x76EE;&#x7684;&#x9ED1;&#x7ED3;&#x70B9;&#x3002;</li></ol><h2 id="&#x5F15;&#x7406;">&#x5F15;&#x7406;</h2><p><img src="/posts/db76c882/&#x7EA2;&#x9ED1;&#x6811;&#x5F15;&#x7406;.png"></p><h2 id="&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x6027;&#x8D28;">&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x6027;&#x8D28;</h2><p><img src="/posts/db76c882/&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x6027;&#x8D28;.png"></p><h2 id="&#x64CD;&#x4F5C;">&#x64CD;&#x4F5C;</h2><p>&#x8981;&#x6C42;&#x662F;&#x77E5;&#x9053;&#x5177;&#x4F53;&#x7684;&#x64CD;&#x4F5C;&#x548C;&#x65F6;&#x95F4;&#xFF0C;&#x6392;&#x9664;&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053;&#x4ED6;&#x4FE9;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><h3 id="&#x65CB;&#x8F6C;">&#x65CB;&#x8F6C;</h3><p><img src="/posts/db76c882/&#x7EA2;&#x9ED1;&#x6811;&#x65CB;&#x8F6C;1.png"></p><h1 id="&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;">&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;</h1><p>OneNote&#x751F;&#x6210;&#x7684;&#x56FE;&#x7247;~ <img src="/posts/db76c882/&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;.jpg" alt="&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x590D;&#x4E60;&#x7B14;&#x8BB0;"></p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>智能机器人  LAB2</title>
      <link href="//posts/8837a525/"/>
      <url>//posts/8837a525/</url>
      <content type="html"><![CDATA[<p>&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;-LAB2 &#x5B9E;&#x9A8C;&#x62A5;&#x544A;<br><a id="more"></a><br>&#x5982;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x8BF7;&#x591A;&#x591A;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#xFF0C;&#x4E0D;&#x80DC;&#x611F;&#x6FC0;&#x3002;</p><p><a href="https://qcloud.coding.net/s/2a8270df-e0b8-4cba-8339-a93839a42a8d" target="_blank" rel="noopener">&#x4EE3;&#x7801;</a></p><h1 id="&#x4EE3;&#x7801;&#x5206;&#x6790;">&#x4EE3;&#x7801;&#x5206;&#x6790;</h1><p><strong>&#x58F0;&#x660E;&#x5F69;&#x8272;&#x56FE;&#x548C;&#x6DF1;&#x5EA6;&#x56FE;&#x53D8;&#x91CF;</strong> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;cv::Mat&gt; colorImgs, depthImgs;    <span class="comment">// &#x5F69;&#x8272;&#x56FE;&#x548C;&#x6DF1;&#x5EA6;&#x56FE;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;Eigen::Isometry3d, Eigen::aligned_allocator&lt;Eigen::Isometry3d&gt;&gt; </span><br><span class="line">                                            poses;         <span class="comment">// &#x76F8;&#x673A;&#x4F4D;&#x59FF;</span></span><br></pre></td></tr></table></figure></p><p><strong>&#x8BFB;&#x53D6;&#x5F69;&#x8272;&#x56FE;-&#x6DF1;&#x5EA6;&#x56FE;&#x5BF9;</strong><br>&#x7531;&#x4E8E;&#x8FD9;&#x91CC;&#x8BBE;&#x5B9A;&#x4E86;&#x5F69;&#x8272;&#x56FE;-&#x6DF1;&#x5EA6;&#x56FE;&#x5BF9;&#x4E00;&#x5171;&#x6709;5&#x4E2A;&#xFF0C;&#x6240;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x5FAA;&#x73AF;&#x91CC;&#x5199;&#x660E;5&#x4E2A;&#xFF0C;&#x4F9D;&#x6B21;&#x8BFB;&#x53D6;&#x5F69;&#x8272;&#x56FE;-&#x6DF1;&#x8272;&#x56FE;&#x5BF9; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++ )</span><br><span class="line">{</span><br><span class="line">    boost::<span class="function">format <span class="title">fmt</span><span class="params">( <span class="string">&quot;./%s/%d.%s&quot;</span> )</span></span>; <span class="comment">//&#x56FE;&#x50CF;&#x6587;&#x4EF6;&#x683C;&#x5F0F;</span></span><br><span class="line">    colorImgs.push_back( cv::imread( (fmt%<span class="string">&quot;color&quot;</span>%(i+<span class="number">1</span>)%<span class="string">&quot;png&quot;</span>).str() ));</span><br><span class="line">    depthImgs.push_back( cv::imread( (fmt%<span class="string">&quot;depth&quot;</span>%(i+<span class="number">1</span>)%<span class="string">&quot;pgm&quot;</span>).str(), <span class="number">-1</span> )); </span><br><span class="line">    <span class="comment">// &#x4F7F;&#x7528;-1&#x8BFB;&#x53D6;&#x539F;&#x59CB;&#x56FE;&#x50CF;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p><p><strong>&#x8BBE;&#x5B9A;&#x76F8;&#x673A;&#x5916;&#x53C2;</strong><br>&#x7531;&#x4E8E;&#x76F8;&#x673A;&#x5728;&#x8FD0;&#x52A8;&#xFF0C;&#x6240;&#x4EE5; <span class="math inline">\(P\)</span> &#x7684;&#x76F8;&#x673A;&#x5750;&#x6807;&#x5E94;&#x8BE5;&#x662F;&#x5B83;&#x7684;&#x4E16;&#x754C;&#x5750;&#x6807;&#xFF08;&#x8BB0;&#x4E3A; <span class="math inline">\(P_w\)</span>&#xFF09;&#xFF0C;&#x6839;&#x636E;&#x76F8;&#x673A;&#x7684;&#x5F53;&#x524D;&#x4F4D;&#x59FF;&#xFF0C;&#x53D8;&#x6362;&#x5230;&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x76F8;&#x673A;&#x7684;&#x4F4D;&#x59FF;&#x7531;&#x5B83;&#x7684;&#x65CB;&#x8F6C;&#x77E9;&#x9635;$ R$ &#x548C;&#x5E73;&#x79FB;&#x5411;&#x91CF;$ t$ &#x6765;&#x63CF;&#x8FF0;&#x3002;</p><p>&#x8BFB;&#x53D6;&#x76F8;&#x673A;&#x4F4D;&#x59FF;&#x4FE1;&#x606F;&#xFF0C;&#x662F;&#x6839;&#x636E;post.txt&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x800C;&#x6765;&#x7684;&#xFF0C;&#x5177;&#x4F53;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x5148;&#x8BFB;&#x53D6;&#x8868;&#x793A;&#x65CB;&#x8F6C;&#x7684;&#x56DB;&#x5143;&#x6570;&#x4FE1;&#x606F;&#xFF0C;&#x8F6C;&#x5230;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x4E2D;&#xFF0C;&#x518D;&#x8BFB;&#x53D6;&#x8868;&#x793A;&#x5E73;&#x79FB;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x8F6C;&#x6362;&#x5230;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x4E2D;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> data[<span class="number">7</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">auto</span>&amp; d:data )</span><br><span class="line">    fin&gt;&gt;d;</span><br><span class="line">Eigen::<span class="function">Quaterniond <span class="title">q</span><span class="params">( data[<span class="number">6</span>], data[<span class="number">3</span>], data[<span class="number">4</span>], data[<span class="number">5</span>] )</span></span>;<span class="comment">//&#x8868;&#x793A;&#x65CB;&#x8F6C;&#x7684;&#x56DB;&#x5143;&#x6570;</span></span><br><span class="line">Eigen::<span class="function">Isometry3d <span class="title">T</span><span class="params">(q)</span></span>;                 <span class="comment">//&#x8F6C;&#x5230;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x4E2D;</span></span><br><span class="line">T.pretranslate( Eigen::Vector3d( data[<span class="number">0</span>], data[<span class="number">1</span>], data[<span class="number">2</span>] ));          <span class="comment">//&#x8BBE;&#x5B9A;&#x5E73;&#x79FB;&#x5411;&#x91CF;</span></span><br><span class="line">poses.push_back( T );                          <span class="comment">//&#x628A;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x8F6C;&#x79FB;&#x5230;&#x76F8;&#x673A;&#x4F4D;&#x59FF;&#x4E2D;</span></span><br></pre></td></tr></table></figure></p><p><strong>&#x516C;&#x5F0F;</strong>&#xFF1A;<br>&#x8BBE;&#x56DB;&#x5143;&#x6570;&#x4E3A;$ q = q_0 + q_1i + q_2j + q_3k$&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x65CB;&#x8F6C;&#x77E9;&#x9635;R&#x4E3A;&#xFF1A; <img src="/posts/8837a525/&#x56DB;&#x5143;&#x6570;-&#x65CB;&#x8F6C;&#x77E9;&#x9635;.jpg"> <strong>&#x8BBE;&#x5B9A;&#x76F8;&#x673A;&#x5185;&#x53C2;</strong><br>&#x76F8;&#x673A;&#x5185;&#x53C2;&#x4E00;&#x5171;&#x6709;cx,cy,fx,fy&#x56DB;&#x4E2A;&#x503C;&#xFF0C;&#x5355;&#x4F4D;&#x90FD;&#x662F;&#x50CF;&#x7D20;&#x3002;</p><p>&#x539F;&#x7406;&#x662F;&#xFF0C;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#x4E0E;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E4B;&#x95F4;&#xFF0C;&#x76F8;&#x5DEE;&#x4E86;&#x4E00;&#x4E2A;&#x7F29;&#x653E;&#x548C;&#x4E00;&#x4E2A;&#x539F;&#x70B9;&#x7684;&#x5E73;&#x79FB;&#x3002;<br>&#x5176;&#x4E2D;&#xFF0C;cx&#xFF0C;cy&#x8868;&#x793A;&#x7684;&#x662F;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x76F8;&#x5BF9;&#x4E8E;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x5E73;&#x79FB;&#x3002;</p><p>&#x8BBE;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x5728; <span class="math inline">\(u\)</span> &#x8F74;&#x4E0A;&#x7F29;&#x653E;&#x4E86; <span class="math inline">\(&#x3B1;\)</span> &#x500D;&#xFF0C;&#x5728; <span class="math inline">\(v\)</span> &#x4E0A;&#x7F29;&#x653E;&#x4E86; <span class="math inline">\(&#x3B2;\)</span> &#x500D;&#x3002;<br>&#x5219;<span class="math inline">\(P&apos;\)</span>&#x7684;&#x5750;&#x6807;&#x4E0E;&#x50CF;&#x7D20;&#x5750;&#x6807;<span class="math inline">\([u,v]^T\)</span>&#x7684;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A; <img src="/posts/8837a525/&#x53D8;&#x6362;1.jpg"> &#x53C8;&#x7531;&#x5C0F;&#x5B54;&#x6210;&#x50CF;&#x7684;&#x516C;&#x5F0F; <img src="/posts/8837a525/&#x5C0F;&#x5B54;&#x6210;&#x50CF;.jpg"> &#x628A; <span class="math inline">\(&#x3B1;f\)</span> &#x5408;&#x5E76;&#x6210; <span class="math inline">\(f_x\)</span>&#xFF0C;&#x628A; <span class="math inline">\(&#x3B2;f\)</span> &#x5408;&#x5E76;&#x6210; <span class="math inline">\(f_y\)</span> &#xFF0C;&#x53EF;&#x5F97;&#xFF1A; <img src="/posts/8837a525/&#x53D8;&#x6362;2.jpg"> &#x7531;&#x4E8E;<span class="math inline">\(f\)</span> &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x7C73;&#xFF0C; <span class="math inline">\(&#x3B1;, &#x3B2;\)</span> &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x50CF;&#x7D20;&#x6BCF;&#x7C73;&#xFF0C;&#x6240;&#x4EE5; <span class="math inline">\(f_x, f_y\)</span> &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x50CF;&#x7D20;&#x3002;</p><p><strong>&#x65B0;&#x5EFA;&#x70B9;&#x4E91;&#x56FE;</strong><br>&#x5148;&#x5B9A;&#x4E49;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x540D;&#x79F0; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5B9A;&#x4E49;&#x70B9;&#x4E91;&#x4F7F;&#x7528;&#x7684;&#x683C;&#x5F0F;&#xFF1A;&#x8FD9;&#x91CC;&#x7528;&#x7684;&#x662F;XYZRGB</span></span><br><span class="line"><span class="keyword">typedef</span> pcl::PointXYZRGB PointT; </span><br><span class="line"><span class="keyword">typedef</span> pcl::PointCloud&lt;PointT&gt; PointCloud;</span><br></pre></td></tr></table></figure></p><p>Ptr&#x662F;&#x4E00;&#x4E2A;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;PointCloud<pointt> &#x5176;&#x4E2D;PointT&#x662F;pcl::PointXYZRGB&#x7C7B;&#x578B;&#x3002;&#x5B83;&#x91CD;&#x8F7D;&#x4E86;-&gt; &#x8FD4;&#x56DE;&#x4E86;&#x6307;&#x5411;PointCloud<pointt>&#x7684;&#x6307;&#x9488;<br>*Ptr&#x662F;&#x4E0B;&#x9762;&#x7C7B;&#x578B; boost::shared_ptr&lt;PointCloud<pointt>&gt;</pointt></pointt></pointt></p><p>pcl&#x70B9;&#x4E91;&#x5E93;&#x63D0;&#x4F9B;&#x4E86;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x7684;&#x8C03;&#x7528;&#x63A5;&#x53E3;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4F20;&#x5165;&#x6BCF;&#x4E2A;&#x70B9;&#x7684;&#x4E09;&#x7EF4;&#x5750;&#x6807;&#x548C;&#x989C;&#x8272;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x628A;&#x591A;&#x5F20;&#x56FE;&#x7247;&#x81EA;&#x52A8;&#x62FC;&#x63A5;&#x5230;&#x4E00;&#x8D77;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">PointCloud::<span class="function">Ptr <span class="title">pointCloud</span><span class="params">( <span class="keyword">new</span> PointCloud )</span></span>; </span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++ )</span><br><span class="line">{</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;&#x8F6C;&#x6362;&#x56FE;&#x50CF;&#x4E2D;: &quot;</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">    <span class="comment">//&#x6BCF;&#x4E2A;&#x56FE;&#x50CF;&#x5BF9;&#xFF0C;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x4F4D;&#x59FF;&#x4FE1;&#x606F;</span></span><br><span class="line">    cv::Mat color = colorImgs[i];   <span class="comment">//&#x5F69;&#x8272;&#x56FE;&#x50CF;</span></span><br><span class="line">    cv::Mat depth = depthImgs[i];   <span class="comment">//&#x6DF1;&#x5EA6;&#x56FE;&#x50CF;</span></span><br><span class="line">    Eigen::Isometry3d T = poses[i];</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> v=<span class="number">0</span>; v&lt;color.rows; v++ )</span><br><span class="line">        <span class="keyword">for</span> ( <span class="keyword">int</span> u=<span class="number">0</span>; u&lt;color.cols; u++ )</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">unsigned</span> <span class="keyword">int</span> d = depth.ptr&lt;<span class="keyword">unsigned</span> <span class="keyword">short</span>&gt; ( v )[u]; <span class="comment">// &#x6DF1;&#x5EA6;&#x503C;</span></span><br><span class="line">            <span class="keyword">if</span> ( d==<span class="number">0</span> ) <span class="keyword">continue</span>; <span class="comment">// &#x4E3A;0&#x8868;&#x793A;&#x6CA1;&#x6709;&#x6D4B;&#x91CF;&#x5230;</span></span><br><span class="line">            Eigen::Vector3d point;          <span class="comment">//&#x50CF;&#x7D20;&#x5750;&#x6807;</span></span><br><span class="line">            point[<span class="number">2</span>] = <span class="keyword">double</span>(d)/depthScale;        <span class="comment">//Z &#x6DF1;&#x5EA6;</span></span><br><span class="line">            point[<span class="number">0</span>] = (u-cx)*point[<span class="number">2</span>]/fx;          <span class="comment">//&#x7531;&#x9488;&#x5B54;&#x76F8;&#x673A;&#x6A21;&#x578B;&#x8BA1;&#x7B97;&#x5750;&#x6807;</span></span><br><span class="line">            point[<span class="number">1</span>] = (v-cy)*point[<span class="number">2</span>]/fy; </span><br><span class="line">            Eigen::Vector3d pointWorld = T*point;   </span><br><span class="line">            <span class="comment">//&#x5C06;&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x5750;&#x6807;&#x53D8;&#x6362;&#x5230;&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;</span></span><br><span class="line">                </span><br><span class="line">            PointT p ;      <span class="comment">//&#x70B9;&#x4E91; XYZRGB</span></span><br><span class="line">            p.x = pointWorld[<span class="number">0</span>];    <span class="comment">//&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x7684;&#x5750;&#x6807;</span></span><br><span class="line">            p.y = pointWorld[<span class="number">1</span>];</span><br><span class="line">            p.z = pointWorld[<span class="number">2</span>];</span><br><span class="line">            p.b = color.data[ v*color.step+u*color.channels() ];   </span><br><span class="line">            <span class="comment">//&#x6CE8;&#x610F;opencv&#x5F69;&#x8272;&#x56FE;&#x50CF;&#x901A;&#x9053;&#x7684;&#x987A;&#x5E8F;&#x4E3A; bgr</span></span><br><span class="line">            p.g = color.data[ v*color.step+u*color.channels()+<span class="number">1</span> ];</span><br><span class="line">            p.r = color.data[ v*color.step+u*color.channels()+<span class="number">2</span> ];</span><br><span class="line">            pointCloud-&gt;points.push_back( p );      <span class="comment">//&#x70B9;&#x4E91;&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x70B9;</span></span><br><span class="line">        }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x516C;&#x5F0F;&#xFF1A; <img src="/posts/8837a525/&#x53D8;&#x6362;2.jpg"></p><p><strong>&#x8FD0;&#x884C;&#x622A;&#x56FE;</strong><br><img src="/posts/8837a525/&#x8FD0;&#x884C;&#x622A;&#x56FE;.jpg"></p><h1 id="&#x5355;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x5916;&#x53C2;&#x662F;&#x6307;&#x54EA;&#x4E9B;&#x53C2;&#x6570;-&#x5916;&#x53C2;&#x5982;&#x4F55;&#x7528;&#x77E9;&#x9635;&#x8868;&#x793A;">&#x5355;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;&#x662F;&#x6307;&#x54EA;&#x4E9B;&#x53C2;&#x6570;&#xFF1F; &#x5916;&#x53C2;&#x5982;&#x4F55;&#x7528;&#x77E9;&#x9635;&#x8868;&#x793A;&#xFF1F;</h1><p>&#x5185;&#x53C2;&#xFF1A;<span class="math inline">\(c_x,c_y,f_x,f_y\)</span><br>&#x5916;&#x53C2;&#x4F7F;&#x7528;&#x9F50;&#x6B21;&#x5750;&#x6807;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x8868;&#x793A;&#x3002;&#x5DE6;&#x4E0A;3*3&#x662F;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#xFF0C;&#x53F3;&#x8FB9;&#x662F;&#x5E73;&#x79FB;&#x53D8;&#x6362;&#x3002;</p><h1 id="&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x5916;&#x53C2;">&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;</h1><h2 id="&#x5185;&#x53C2;">&#x5185;&#x53C2;</h2><p>&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;&#x6709;4&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x662F;<span class="math inline">\(c_x,c_y,f_x,f_y\)</span>&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x8981;&#x6709;&#x89E3;&#x51B3;&#x7578;&#x53D8;&#x7684;&#x4E94;&#x4E2A;&#x53C2;&#x6570;&#x3002;</p><p>&#x8BFB;&#x53D6;&#x76F8;&#x673A;&#x53C2;&#x6570;&#x7684;&#x4EE3;&#x7801;&#x5728;rectify.h&#x4E2D;&#xFF0C;&#x5177;&#x4F53;&#x53C2;&#x6570;&#x5728;intrinsics.xml&#x4E2D;&#x3002;&#x5982;&#x4E0B;&#xFF1A;<br>&#x5DE6;&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;&#x548C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x53C2;&#x6570; <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">opencv_storage</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">M1</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.1316289419152909e+003 0. 6.7002980347009304e+002 0.</span><br><span class="line">    1.1316289419152909e+003 3.9950109175499784e+002 0. 0. 1.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">M1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">D1</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>1<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>5<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.4986336340613862e-001 -1.1555661146153864e+000</span><br><span class="line">    3.3866741697495639e-003 1.1952943179603111e-002</span><br><span class="line">    1.7747259071867683e+000<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">D1</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x53F3;&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;&#x548C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x53C2;&#x6570; <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">M2</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.1316289419152909e+003 0. 6.7645167888745175e+002 0.</span><br><span class="line">    1.1316289419152909e+003 3.9314009439860592e+002 0. 0. 1.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">M2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">D2</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>1<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>5<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.3553831241923531e-001 -8.6303773993984356e-001</span><br><span class="line">    7.1136544177058808e-003 9.2765351119315394e-003</span><br><span class="line">    1.3940332911325242e+000<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">D2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">opencv_storage</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x516C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; <img src="/posts/8837a525/&#x5185;&#x53C2;&#x63A8;&#x5BFC;.jpg"></p><h2 id="&#x900F;&#x955C;&#x7578;&#x53D8;">&#x900F;&#x955C;&#x7578;&#x53D8;</h2><p>&#x7531;&#x4E8E;&#x9488;&#x5B54;&#x53EF;&#x4EE5;&#x900F;&#x8FC7;&#x7684;&#x5149;&#x7EBF;&#x592A;&#x5C11;&#xFF0C;&#x6210;&#x50CF;&#x4F1A;&#x4E0D;&#x6E05;&#x695A;&#xFF0C;&#x6240;&#x4EE5;&#x5F80;&#x5F80;&#x90FD;&#x4F1A;&#x52A0;&#x4E0A;&#x51F8;&#x900F;&#x955C;&#x6C47;&#x805A;&#x66F4;&#x591A;&#x7684;&#x5149;&#x7EBF;&#x3002;&#x4F46;&#x662F;&#x52A0;&#x4E0A;&#x51F8;&#x900F;&#x955C;&#x4EE5;&#x540E;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x6210;&#x50CF;&#x7578;&#x53D8;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x9700;&#x8981;&#x6821;&#x6B63;&#x900F;&#x955C;&#x7578;&#x53D8;&#x3002;&#x900F;&#x955C;&#x7684;&#x7578;&#x53D8;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x4E24;&#x7C7B;&#xFF0C;&#x4E00;&#x7C7B;&#x662F;&#x5F84;&#x5411;&#x7578;&#x53D8;&#xFF0C;&#x4E00;&#x7C7B;&#x662F;&#x5207;&#x5411;&#x7578;&#x53D8;&#x3002;</p><h3 id="&#x5F84;&#x5411;&#x7578;&#x53D8;">&#x5F84;&#x5411;&#x7578;&#x53D8;</h3><p>&#x5F84;&#x5411;&#x7578;&#x53D8;&#x4F1A;&#x4EA7;&#x751F;&#x201C;&#x9C7C;&#x773C;&#x201D;&#x73B0;&#x8C61;&#x3002;&#x6210;&#x50CF;&#x4E2D;&#x5FC3;&#x5904;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x4E3A;0&#xFF0C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x968F;&#x7740;&#x4E0E;&#x6210;&#x50CF;&#x4E2D;&#x5FC3;&#x8DDD;&#x79BB;&#x589E;&#x5927;&#x800C;&#x589E;&#x5927;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x5904;&#x8FBE;&#x5230;&#x6700;&#x5927;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x3002;&#x5E38;&#x5E38;&#x7528;&#x5076;&#x6B21;&#x5E42;&#x7684;&#x6CF0;&#x52D2;&#x516C;&#x5F0F;&#x63CF;&#x8FF0;&#x5F84;&#x5411;&#x7578;&#x53D8; <span class="math display">\[\left\{\begin{aligned}x_{cerrected}=x(1+k_1r^2+k_2r^4+k_3r^6)\\y_{cerrected}=y(1+k_1r^2+k_2r^4+k_3r^6)\end{aligned}\right.\]</span></p><h3 id="&#x5207;&#x5411;&#x7578;&#x53D8;">&#x5207;&#x5411;&#x7578;&#x53D8;</h3><p>&#x5207;&#x5411;&#x7578;&#x53D8;&#x7531;&#x900F;&#x955C;&#x548C;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E0D;&#x5E73;&#x884C;&#x5F15;&#x8D77;&#x3002;&#x5E38;&#x7528;&#x5982;&#x4E0B;&#x516C;&#x5F0F;&#x63CF;&#x8FF0;</p><p><span class="math display">\[\left\{\begin{aligned}x_{cerrected}&amp;=x+2p_1xy+p_2(r^2+2x^2)\\y_{cerrected}&amp;=y+p_1(r^2+2y^2)+2p_2xy\end{aligned}\right.\]</span></p><h3 id="&#x5C0F;&#x7ED3;">&#x5C0F;&#x7ED3;</h3><p>&#x5355;&#x76EE;&#x6444;&#x50CF;&#x673A;&#x900F;&#x955C;&#x7578;&#x53D8;&#x6821;&#x6B63;&#x9700;&#x8981;&#x786E;&#x5B9A;&#x7684;&#x5C31;&#x662F;<span class="math inline">\(k_1,k_2,k_3,p_1,p_2\)</span>&#x8FD9;5&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x201C;&#x9C7C;&#x773C;&#x201D;&#x73B0;&#x8C61;&#x4E0D;&#x660E;&#x663E;&#x7684;&#x8BDD;&#xFF0C;&#x5E38;&#x5E38;&#x4F7F;&#x7528;<span class="math inline">\(k_1,k_2\)</span>&#x6765;&#x6821;&#x6B63;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x3002;</p><h2 id="&#x5916;&#x53C2;">&#x5916;&#x53C2;</h2><p>&#x6B64;&#x5904;&#x7528;R&#x548C;T&#x6765;&#x63CF;&#x8FF0;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x6444;&#x50CF;&#x673A;{camera}&#x5750;&#x6807;&#x7CFB;&#x7684;&#x76F8;&#x5BF9;&#x5173;&#x7CFB;&#xFF0C;&#x5177;&#x4F53;&#x4E3A;&#x5C06;&#x5DE6;&#x6444;&#x50CF;&#x673A;{camera}&#x4E0B;&#x7684;&#x5750;&#x6807;&#x8F6C;&#x6362;&#x5230;&#x53F3;&#x6444;&#x50CF;&#x673A;{camera}&#x4E0B;&#x7684;&#x5750;&#x6807;&#x3002; <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">opencv_storage</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">R</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    9.9909318070240760e-001 3.5020847379939768e-002</span><br><span class="line">    -2.4214799663375593e-002 -3.4760970744630318e-002</span><br><span class="line">    9.9933433045958386e-001 1.1071173279572044e-002</span><br><span class="line">    2.4586402478553149e-002 -1.0219403783309490e-002</span><br><span class="line">    9.9964547345520272e-001<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">R</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">T</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>1<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    -6.0209269661173187e+002 1.5326928276045152e+001</span><br><span class="line">    -2.2150904288412747e+001<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">T</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">opencv_storage</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x6BCF;&#x4E2A;&#x76F8;&#x673A;&#x7684;&#x65CB;&#x8F6C;&#x77E9;&#x9635; <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">R1</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    9.9988245414945298e-001 9.1965294752025303e-003</span><br><span class="line">    1.2267914642630471e-002 -9.2637135176302024e-003</span><br><span class="line">    9.9994234300203466e-001 5.4308639703710120e-003</span><br><span class="line">    -1.2217262210921568e-002 -5.5438720415545229e-003</span><br><span class="line">    9.9990999794324309e-001<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">R1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">R2</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    9.9900074660452376e-001 -2.5430656902316658e-002</span><br><span class="line">    3.6753094742089557e-002 2.5632007896526286e-002</span><br><span class="line">    9.9965885355277262e-001 -5.0176373672242616e-003</span><br><span class="line">    -3.6612954740047575e-002 5.9546790906987689e-003</span><br><span class="line">    9.9931177984757591e-001<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">R2</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x672C;&#x5F81;&#x77E9;&#x9635;">&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x672C;&#x5F81;&#x77E9;&#x9635;</h1><p>&#x672C;&#x5F81;&#x77E9;&#x9635;&#x5E38;&#x7528;&#x5B57;&#x6BCD;<span class="math inline">\(E\)</span>&#x6765;&#x8868;&#x793A;&#xFF0C;&#x5176;&#x7269;&#x7406;&#x610F;&#x4E49;&#x662F;&#x5DE6;&#x53F3;{picture}&#x5750;&#x6807;&#x7CFB;&#x76F8;&#x4E92;&#x8F6C;&#x6362;&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x53EF;&#x4EE5;&#x63CF;&#x8FF0;&#x5DE6;&#x53F3;&#x6444;&#x50CF;&#x673A;&#x56FE;&#x50CF;&#x5E73;&#x9762;&#x4E0A;&#x5BF9;&#x5E94;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x3002;</p><h2 id="&#x8BA1;&#x7B97;&#x672C;&#x5F81;&#x77E9;&#x9635;">&#x8BA1;&#x7B97;&#x672C;&#x5F81;&#x77E9;&#x9635;</h2><p>&#x7531;&#x4E8E;&#x672C;&#x5F81;&#x77E9;&#x9635;&#x662F;&#x7B97;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5DE6;&#x53F3;&#x76F8;&#x673A;&#x7684;&#x5916;&#x53C2;&#x6765;&#x7B97;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6839;&#x636E;&#x6807;&#x5B9A;&#xFF0C;&#x6C42;&#x5F97;&#x524D;&#x6587;&#x6240;&#x8BF4;&#x7684;<span class="math inline">\(R\)</span>&#x548C;<span class="math inline">\(T\)</span>&#x6765;&#x7B97;&#x3002;&#x8FD9;&#x91CC;&#x662F;&#x76F4;&#x63A5;&#x6839;&#x636E;&#x6807;&#x5B9A;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6C42;&#x5F97;<span class="math inline">\(R\)</span>&#x548C;<span class="math inline">\(T\)</span>&#x6765;&#x7B97;&#x672C;&#x5F81;&#x77E9;&#x9635;&#x7684;&#x3002;</p><p>&#x5BF9;&#x7EA7;&#x51E0;&#x4F55;&#x5728;&#x53CC;&#x76EE;&#x95EE;&#x9898;&#x4E2D;&#x975E;&#x5E38;&#x7684;&#x91CD;&#x8981;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5316;&#x7ACB;&#x4F53;&#x5339;&#x914D;&#x7B49;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x8981;&#x5E94;&#x7528;&#x5BF9;&#x7EA7;&#x51E0;&#x4F55;&#x53BB;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x6C42;&#x7EA7;&#x7EBF;&#xFF0C;&#x9700;&#x8981;&#x77E5;&#x9053;&#x672C;&#x5F81;&#x77E9;&#x9635;&#x6216;&#x8005;&#x57FA;&#x7840;&#x77E9;&#x9635;&#xFF0C;&#x56E0;&#x6B64;&#x53CC;&#x76EE;&#x6807;&#x5B9A;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E5F;&#x4F1A;&#x628A;&#x672C;&#x5F81;&#x77E9;&#x9635;&#x548C;&#x57FA;&#x7840;&#x77E9;&#x9635;&#x7B97;&#x51FA;&#x6765;&#x3002;&#x4E4B;&#x6240;&#x4EE5;&#x8BF4;&#x662F;&#x7B97;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E24;&#x4E2A;&#x77E9;&#x9635;&#x4E0E;<span class="math inline">\(R\)</span>&#x548C;<span class="math inline">\(T\)</span>&#x5E76;&#x4E0D;&#x72EC;&#x7ACB;&#x3002;</p><p>&#x5047;&#x8BBE;&#x7A7A;&#x95F4;&#x4E2D;&#x6709;&#x4E00;&#x70B9;<span class="math inline">\(P\)</span>&#xFF0C;&#x5176;&#x5728;{world}&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x5750;&#x6807;&#x4E3A;<span class="math inline">\(P_W\)</span>&#xFF0C;&#x5176;&#x5728;&#x5DE6;&#x53F3;&#x6444;&#x50CF;&#x673A;{camera}&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x5750;&#x6807;&#x53EF;&#x4EE5;&#x4E3A;<span class="math inline">\(P_l\)</span>&#x548C;<span class="math inline">\(P_r\)</span>&#xFF0C;&#x53F3;{camera}&#x5750;&#x6807;&#x7CFB;&#x539F;&#x70B9;&#x5728;&#x5DE6;{camera}&#x5750;&#x6807;&#x7CFB;&#x7684;&#x5750;&#x6807;&#x4E3A;<span class="math inline">\(T=[T_x,T_y,T_z]^T\)</span>&#xFF0C;&#x5219;&#x6709;&#xFF1A; <span class="math display">\[P_r=R(P_l-T)\]</span> &#x5219;&#x901A;&#x8FC7;&#x70B9;<span class="math inline">\(T\)</span>&#x7684;&#x6240;&#x6709;&#x70B9;&#x7684;<span class="math inline">\(P_l\)</span>&#x6240;&#x7EC4;&#x6210;&#x7684;&#x5E73;&#x9762;&#xFF08;&#x5373;&#x6781;&#x9762;&#xFF09;&#x53EF;&#x4EE5;&#x7528;&#x4E0B;&#x5F0F;&#x8868;&#x793A;&#xFF1A; <span class="math display">\[(P_l-T)^T(P_l\times T)=0\tag{1}\]</span> &#x5C06;<span class="math inline">\(P_l&#xD7;T\)</span>&#x5199;&#x6210;&#x77E9;&#x9635;&#x76F8;&#x4E58;&#x7684;&#x5F62;&#x5F0F;&#xFF1A; <span class="math display">\[P_l\times T=SP_l\tag{2}\]</span> &#x5176;&#x4E2D;<span class="math inline">\(S\)</span>&#x4E3A;&#xFF1A; <span class="math display">\[S=\begin{bmatrix}0 &amp; -T_x &amp; T_y \\T_z &amp; 0 &amp; -T_x \\-T_y &amp; T_x &amp; 0\end{bmatrix}\]</span> &#x7EFC;&#x5408;&#xFF08;1&#xFF09;&#xFF08;2&#xFF09;&#x5F0F;&#x53EF;&#x5F97;&#xFF1A; <span class="math display">\[P_r^TRSP_l=0\tag{3}\]</span> &#x4E58;&#x79EF;<span class="math inline">\(RS\)</span>&#x5373;&#x4E3A;&#x672C;&#x5F81;&#x77E9;&#x9635;<span class="math inline">\(E\)</span>&#xFF0C;&#x5229;&#x7528;&#x6295;&#x5F71;&#x65B9;&#x7A0B;&#x5C06;&#xFF08;3&#xFF09;&#x5F0F;&#x7B80;&#x5316;&#xFF1A; <span class="math display">\[P_{pr}^TEP_{pl}=0\tag{4}\]</span> &#xFF08;4&#xFF09;&#x5F0F;&#x63CF;&#x8FF0;&#x4E86;&#x540C;&#x4E00;&#x7269;&#x7406;&#x70B9;&#x5728;&#x5DE6;&#x53F3;&#x6444;&#x50CF;&#x673A;&#x56FE;&#x50CF;&#x5E73;&#x9762;&#x4E0A;&#x6295;&#x5F71;&#x5728;{picture}&#x4E0B;&#x7684;&#x5173;&#x7CFB;&#x3002;</p><h2 id="&#x6295;&#x5F71;&#x77E9;&#x9635;">&#x6295;&#x5F71;&#x77E9;&#x9635;</h2><p>&#x5982;&#x56FE;&#xFF0C;&#x8003;&#x8651;&#x4E09;&#x7EF4;&#x4E16;&#x754C;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x70B9;&#xFF0C;&#x548C;&#x5176;&#x5728;&#x56FE;&#x50CF;&#xFF08;&#x4E8C;&#x7EF4;&#xFF09;&#x4E2D;&#x7684;&#x5750;&#x6807;&#x5173;&#x7CFB;&#x3002; <img src="/posts/8837a525/&#x6295;&#x5F71;&#x77E9;&#x9635;1.png"></p><p><span class="math inline">\((X&#xFF0C;Y&#xFF0C;Z)\)</span>&#x4E3A;&#x70B9;&#x7684;&#x4E09;&#x7EF4;&#x5750;&#x6807;&#xFF0C;<span class="math inline">\((x&#xFF0C;y)\)</span>&#x4E3A;&#x5176;&#x901A;&#x8FC7;&#x76F8;&#x673A;&#x6210;&#x50CF;&#x540E;&#x5728;&#x56FE;&#x50CF;&#xFF08;&#x4E8C;&#x7EF4;&#xFF09;&#x4E0A;&#x7684;&#x5750;&#x6807;&#x3002;<span class="math inline">\(u_0\)</span>&#x548C;<span class="math inline">\(v_0\)</span>&#x662F;&#x76F8;&#x673A;&#x7684;&#x4E2D;&#x5FC3;&#x70B9;&#xFF08;&#x4E3B;&#x70B9;)&#xFF0C;&#x8BE5;&#x70B9;&#x4F4D;&#x4E8E;&#x56FE;&#x50CF;&#x5E73;&#x9762;&#x4E2D;&#x5FC3;&#xFF08;&#x7406;&#x8BBA;&#x4E0A;&#x662F;&#x8FD9;&#x6837;&#x3002;&#x4F46;&#x5B9E;&#x9645;&#x7684;&#x76F8;&#x673A;&#x4F1A;&#x6709;&#x51E0;&#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x504F;&#x5DEE;&#xFF09;</p><p>&#x73B0;&#x5728;&#x53EA;&#x8003;&#x8651;<span class="math inline">\(y\)</span>&#x65B9;&#x5411;&#x4E0A;&#xFF0C;&#x7531;&#x4E8E;&#x9700;&#x8981;&#x5C06;&#x4E09;&#x7EF4;&#x4E16;&#x754C;&#x4E2D;&#x7684;&#x5750;&#x6807;&#xFF0C;&#x8F6C;&#x6362;&#x4E3A;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x50CF;&#x7D20;&#xFF08;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x5750;&#x6807;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x50CF;&#x7D20;&#x7684;&#x4F4D;&#x7F6E;&#xFF09;&#xFF0C;&#x9700;&#x8981;&#x6C42;<span class="math inline">\(y\)</span>&#x65B9;&#x5411;&#x4E0A;&#x7126;&#x8DDD;&#x7B49;&#x4E8E;&#x591A;&#x5C11;&#x4E2A;&#x50CF;&#x7D20;&#xFF08;&#x7528;&#x50CF;&#x7D20;&#x503C;&#x8868;&#x793A;&#x7126;&#x8DDD;&#xFF09;&#xFF0C;<span class="math inline">\(P_y\)</span>&#x8868;&#x793A;&#x50CF;&#x7D20;&#x7684;&#x9AD8;&#xFF0C;&#x7126;&#x8DDD;<span class="math inline">\(f\)</span>&#xFF08;&#x7C73;&#x6216;&#x6BEB;&#x7C73;&#xFF09;&#x3002;&#x5782;&#x76F4;&#x50CF;&#x7D20;&#x8868;&#x793A;&#x7684;&#x7126;&#x8DDD;&#x4E3A; <span class="math display">\[f_y=\frac f {p_y} \]</span></p><p>&#x5982;&#x679C;&#x53EA;&#x8003;&#x8651;y&#x65B9;&#x5411;&#x3002;&#x6211;&#x4EEC;&#x4E09;&#x7EF4;&#x4E16;&#x754C;&#x4E2D;&#x5F97;&#x70B9;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#xFF08;&#x4E8C;&#x7EF4;&#xFF09;&#x4E2D;y&#x7684;&#x5750;&#x6807;&#x3002; <span class="math display">\[y=\frac{f_yY}{Z}+v_0\]</span> &#x540C;&#x7406;&#xFF0C;&#x5F97;&#x5230;x&#x7684;&#x5750;&#x6807;&#xFF1A; <span class="math display">\[x=\frac{f_xX}{Z}+u_0\]</span> &#x73B0;&#x5728;&#xFF0C;&#x5C06;&#x4E0A;&#x56FE;&#x4E2D;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;<span class="math inline">\(O\)</span>&#xFF0C;&#x79FB;&#x52A8;&#x5230;&#x56FE;&#x50CF;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x3002;&#x7531;&#x4E8E;<span class="math inline">\((x&#xFF0C;y)\)</span>&#x662F;&#x5173;&#x4E8E;<span class="math inline">\((u0&#xFF0C;v0)\)</span>&#x7684;&#x504F;&#x79FB;&#xFF0C;&#x4E0A;&#x9762;&#x8868;&#x793A;&#x56FE;&#x50CF;&#xFF08;&#x4E8C;&#x7EF4;&#xFF09;&#x4E2D;&#x70B9;&#x7684;&#x5750;&#x6807;&#x7684;&#x5F0F;&#x5B50;&#x4E0D;&#x53D8;&#x3002;&#x5C06;&#x5F0F;&#x5B50;&#x4EE5;&#x77E9;&#x9635;&#x7684;&#x5F62;&#x5F0F;&#x91CD;&#x5199;&#xFF0C;&#x5F97;&#x3002; <img src="/posts/8837a525/&#x6295;&#x5F71;&#x77E9;&#x9635;2.png"></p><p>&#x5176;&#x4E2D;&#xFF0C;&#x7B49;&#x5F0F;&#x5DE6;&#x8FB9;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#xFF0C;&#x53EB;&#x505A;&#x201C;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x6570;&#x77E9;&#x9635;&#x201D;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x77E9;&#x9635;&#x53EB;&#xFF08;&#x6295;&#x5F71;&#x77E9;&#x9635;&#xFF09;&#x3002;</p><p>&#x66F4;&#x4E3A;&#x4E00;&#x822C;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5F00;&#x59CB;&#x65F6;&#x7684;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x4F4D;&#x4E8E;&#x4E3B;&#x70B9;&#xFF08;&#x4E2D;&#x5FC3;&#x70B9;&#xFF09;&#xFF0C;&#x9700;&#x8981;&#x989D;&#x5916;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x201C;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x201D;&#x548C;&#x201C;&#x5E73;&#x79FB;&#x5411;&#x91CF;&#x201D;&#x6765;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x5F0F;&#x5B50;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5728;&#x4E0D;&#x540C;&#x89C6;&#x89D2;&#x4E2D;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x3002;&#x6574;&#x5408;&#x540E;&#xFF0C;&#x4E0A;&#x8FF0;&#x5F0F;&#x5B50;&#x91CD;&#x5199;&#x4E3A;: <img src="/posts/8837a525/&#x6295;&#x5F71;&#x77E9;&#x9635;3.png"></p><p>&#x5DE6;&#x53F3;&#x76F8;&#x673A;&#x7684;&#x6295;&#x5F71;&#x77E9;&#x9635;&#x4FDD;&#x5B58;&#x5728;rectifyData.xml&#x4E2D;&#xFF0C;&#x4E3A;&#xFF1A; <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">P1</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>4<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.1316289419152909e+003 0. 6.4512952423095703e+002 0. 0.</span><br><span class="line">    1.1316289419152909e+003 3.9881204986572266e+002 0. 0. 0. 1. 0.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">P1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">P2</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>4<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.1316289419152909e+003 0. 6.4512952423095703e+002</span><br><span class="line">    -6.8202703903622192e+005 0. 1.1316289419152909e+003</span><br><span class="line">    3.9881204986572266e+002 0. 0. 0. 1. 0.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">P2</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;">&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;</h2><p>Q&#x77E9;&#x9635;&#x4E3A;&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;&#xFF0C;&#x5373;&#x77E9;&#x9635;Q&#x53EF;&#x4EE5;&#x628A;2&#x7EF4;&#x5E73;&#x9762;(&#x56FE;&#x50CF;&#x5E73;&#x9762;)&#x4E0A;&#x7684;&#x70B9;&#x6295;&#x5F71;&#x5230;3&#x7EF4;&#x7A7A;&#x95F4;&#x7684;&#x70B9;&#x3002;</p><p><span class="math display">\[Q=\begin{bmatrix}1&amp;\,0&amp;\,0&amp;\,-c_x\\0&amp;\,1&amp;\,0&amp;\,-c_y\\0&amp;\,0&amp;\,0&amp;\,f\\0&amp;\,0&amp;\,-1/T_x&amp;\,(c_x-c_x&apos;)/T_x\\\end{bmatrix}\]</span> &#x5219; <span class="math display">\[Q\begin{bmatrix}x\\y\\d\\1\end{bmatrix}=\begin{bmatrix}X\\Y\\Z\\W\end{bmatrix}\tag{5}\]</span></p><p>&#x5176;&#x4E2D;d&#x8868;&#x793A;&#x89C6;&#x5DEE;&#xFF0C;&#x4E09;&#x7EF4;&#x5750;&#x6807;&#x4E3A;<span class="math inline">\((X/W,Y/W,Z/W)\)</span>&#xFF0C;<span class="math inline">\(c_x&apos;\)</span>&#x8868;&#x793A;&#x53F3;&#x56FE;&#x50CF;&#x7684;&#x4E3B;&#x70B9;&#xFF0C;&#x5F53;&#x6821;&#x6B63;&#x6B63;&#x786E;&#x65F6;&#xFF0C;<span class="math inline">\(c_x=c_x&apos;\)</span>&#xFF0C;&#x5728;&#x7ACB;&#x4F53;&#x6821;&#x6B63;&#x6B63;&#x786E;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#x5C55;&#x5F00;&#xFF08;5&#xFF09;&#x5F0F;&#xFF0C;&#x53EF;&#x5F97; <span class="math display">\[(X/W,Y/W,Z/W)=(-\frac{x-c_x}{d}T_x, -\frac{y-c_y}{d}T_x, -\frac{f}{d}T_x)\tag{6}\]</span> &#x4E4B;&#x6240;&#x4EE5;&#x6709;&#x8D1F;&#x53F7;&#x662F;&#x56E0;&#x4E3A;<span class="math inline">\(T_xT\)</span> &#x662F;&#x8D1F;&#x7684;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x8981;&#x51CF;&#x53BB;<span class="math inline">\(c_x\)</span>&#x6216;<span class="math inline">\(c_y\)</span>&#x662F;&#x56E0;&#x4E3A;{pixel}&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;&#x5728;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x800C;{camera}&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;&#x5728;&#x5149;&#x8F74;&#x4E0A;&#x3002;</p><p>&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;&#x662F; <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Q</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>4<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>4<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1. 0. 0. -6.4512952423095703e+002 0. 1. 0. -3.9881204986572266e+002</span><br><span class="line">    0. 0. 0. 1.1316289419152909e+003 0. 0. 1.6592141911476194e-003 0.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">Q</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">opencv_storage</span>&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h1 id="&#x5F15;&#x7528;">&#x5F15;&#x7528;</h1><ol type="1"><li><a href="https://blog.csdn.net/xuelabizp/article/category/5998315" target="_blank" rel="noopener">&#x673A;&#x5668;&#x89C6;&#x89C9;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;</a></li><li>SLAM&#x5341;&#x56DB;&#x8BB2;</li><li>&#x8D75;&#x632F;&#x521A;&#x8001;&#x5E08;&#x7684;PPT</li></ol>]]></content>
      
      <categories>
          
          <category> 智能机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 实验报告 </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 双目相机 </tag>
            
            <tag> 单目相机 </tag>
            
            <tag> 深度测量 </tag>
            
            <tag> 点云图 </tag>
            
            <tag> 相机参数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>智能机器人复习笔记</title>
      <link href="//posts/1d9c933b/"/>
      <url>//posts/1d9c933b/</url>
      <content type="html"><![CDATA[<p>&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;&#x590D;&#x4E60;&#x7B14;&#x8BB0;&#xFF0C;&#x4EB2;&#x5A18;&#x561E;&#xFF0C;&#x8981;&#x4EBA;&#x547D;&#x4E86;&#x3002;T_T <a id="more"></a><br>&#x5982;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x8FD8;&#x8BF7;&#x591A;&#x591A;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#x3002;</p><h1 id="&#x7EEA;&#x8BBA;">&#x7EEA;&#x8BBA;</h1><h2 id="&#x4EC0;&#x4E48;&#x662F;&#x673A;&#x5668;&#x4EBA;">&#x4EC0;&#x4E48;&#x662F;&#x673A;&#x5668;&#x4EBA;</h2><p>&#x6765;&#x81EA;&#x56FD;&#x9645;&#x6807;&#x51C6;&#x7EC4;&#x7EC7;&#xFF08;ISO&#xFF09;&#x7684;&#x5B9A;&#x4E49;&#xFF1A;<br>&#x673A;&#x5668;&#x4EBA;&#x662F;&#x4E00;&#x79CD;&#x81EA;&#x52A8;&#x7684;&#x3001;&#x4F4D;&#x7F6E;&#x53EF;&#x63A7;&#x7684;&#x3001;&#x5177;&#x6709;&#x7F16;&#x7A0B;&#x80FD;&#x529B;&#x7684;&#x591A;&#x529F;&#x80FD;&#x673A;&#x68B0;&#x624B;&#xFF0C;&#x8FD9;&#x79CD;&#x673A;&#x68B0;&#x624B;&#x5177;&#x6709;&#x51E0;&#x4E2A;&#x8F74;&#xFF0C;&#x80FD;&#x591F;&#x501F;&#x52A9;&#x4E8E;&#x53EF;&#x7F16;&#x7A0B;&#x5E8F;&#x64CD;&#x4F5C;&#x6765;&#x5904;&#x7406;&#x5404;&#x79CD;&#x6750;&#x6599;&#x3001;&#x96F6;&#x4EF6;&#x3001;&#x5DE5;&#x5177;&#x548C;&#x4E13;&#x7528;&#x88C5;&#x7F6E;&#xFF0C;&#x4EE5;&#x6267;&#x884C;&#x79CD;&#x79CD;&#x4EFB;&#x52A1;&#x3002;</p><p>&#x5B9A;&#x4E49;&#x5927;&#x591A;&#x6765;&#x6E90;&#x4E8E;&#x5DE5;&#x4E1A;&#x81EA;&#x52A8;&#x5316;&#x573A;&#x666F;&#xFF0C;&#x8FD8;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x7EDF;&#x4E00;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5E76;&#x4E14;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8303;&#x7574;&#x8FD8;&#x5728;&#x4E0D;&#x65AD;&#x53D8;&#x5316;&#x6F14;&#x8FDB;&#x4E2D;&#x3002;<br>&#x5171;&#x540C;&#x5C5E;&#x6027;&#xFF1A;</p><ul><li>&#x50CF;&#x4EBA;&#x6216;&#x4EBA;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x5E76;&#x6A21;&#x4EFF;&#x4EBA;&#x7684;&#x52A8;&#x4F5C;</li><li>&#x5177;&#x6709;&#x667A;&#x80FD;&#x6216;&#x611F;&#x89C9;&#x4E0E;&#x8BC6;&#x522B;&#x80FD;&#x529B;</li><li>&#x662F;&#x4EBA;&#x5236;&#x9020;&#x7684;&#x673A;&#x5668;&#x6216;&#x673A;&#x68B0;&#x7535;&#x5B50;&#x88C5;&#x7F6E;</li></ul><h2 id="&#x4EC0;&#x4E48;&#x662F;&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;">&#x4EC0;&#x4E48;&#x662F;&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;</h2><p>&#x4E00;&#x79CD;&#x5E7F;&#x4E49;&#x7684;&#x5B9A;&#x4E49;&#xFF1A;&#x5177;&#x6709;&#x611F;&#x89C9;&#xFF0C;&#x8BC6;&#x522B;&#xFF0C;&#x63A8;&#x7406;&#x5224;&#x65AD;&#x548C;&#x4E0E;&#x4EBA;&#x4EA4;&#x4E92;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5916;&#x754C;&#x6761;&#x4EF6;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x5728;&#x4E00;&#x5B9A;&#x8303;&#x56F4;&#x5185;&#x81EA;&#x884C;&#x4FEE;&#x6539;&#x7A0B;&#x5E8F;&#x4EE5;&#x8FBE;&#x6210;&#x76EE;&#x6807;&#x7684;&#x7CFB;&#x7EDF;&#x3002;</p><h2 id="&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x4E0E;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8054;&#x7CFB;">&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x4E0E;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8054;&#x7CFB;</h2><p>&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;&#x7528;&#x5230;&#x4E86;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x7684;&#x591A;&#x4E2A;&#x9886;&#x57DF;&#x3002;&#x5305;&#x62EC;&#x4F46;&#x4E0D;&#x4EC5;&#x9650;&#x4E8E;</p><ul><li>&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;</li><li>&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x7406;&#x89E3;&#x4E0E;&#x4EA4;&#x6D41;</li><li>&#x8BA4;&#x77E5;&#x4E0E;&#x63A8;&#x7406;</li><li>&#x673A;&#x5668;&#x4EBA;&#x5B66;</li><li>&#x535A;&#x5F08;&#x4E0E;&#x4F26;&#x7406;</li><li>&#x673A;&#x5668;&#x5B66;&#x4E60;</li></ul><h2 id="&#x673A;&#x5668;&#x4EBA;&#x4E09;&#x5B88;&#x5219;">&#x673A;&#x5668;&#x4EBA;&#x4E09;&#x5B88;&#x5219;</h2><ol type="1"><li>&#x673A;&#x5668;&#x4EBA;&#x5FC5;&#x987B;&#x4E0D;&#x5371;&#x5BB3;&#x4EBA;&#x7C7B;&#xFF0C;&#x4E5F;&#x4E0D;&#x5141;&#x8BB8;&#x5B83;&#x773C;&#x770B;&#x4EBA;&#x5C06;&#x53D7;&#x5BB3;&#x800C;&#x8896;&#x624B;&#x65C1;&#x89C2;&#x3002;</li><li>&#x673A;&#x5668;&#x4EBA;&#x5FC5;&#x987B;&#x7EDD;&#x5BF9;&#x670D;&#x4ECE;&#x4E8E;&#x4EBA;&#x7C7B;&#xFF0C;&#x9664;&#x975E;&#x8FD9;&#x79CD;&#x670D;&#x4ECE;&#x6709;&#x5BB3;&#x4E8E;&#x4EBA;&#x7C7B;&#x3002;</li><li>&#x673A;&#x5668;&#x4EBA;&#x5FC5;&#x987B;&#x4FDD;&#x62A4;&#x81EA;&#x8EAB;&#x4E0D;&#x53D7;&#x4F24;&#x5BB3;&#xFF0C;&#x9664;&#x975E;&#x4E3A;&#x4E86;&#x4FDD;&#x62A4;&#x4EBA;&#x7C7B;&#x6216;&#x8005;&#x662F;&#x4EBA;&#x7C7B;&#x547D;&#x4EE4;&#x5B83;&#x4F5C;&#x51FA;&#x727A;&#x7272;&#x3002;</li></ol><h1 id="&#x4E09;&#x7EF4;&#x53D8;&#x6362;">&#x4E09;&#x7EF4;&#x53D8;&#x6362;</h1><h2 id="&#x7A7A;&#x95F4;&#x5750;&#x6807;&#x7CFB;">&#x7A7A;&#x95F4;&#x5750;&#x6807;&#x7CFB;</h2><h3 id="&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;">&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x4EFB;&#x4F55;&#x8FDE;&#x4E2A;&#x4E8C;&#x7EF4;&#x7684;&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5E73;&#x79FB;&#x548C;&#x65CB;&#x8F6C;&#x4F7F;&#x4E24;&#x4E2A;&#x5750;&#x6807;&#x7CFB;&#x91CD;&#x5408;&#x3002;</p><p>&#x4E09;&#x7EF4;&#x7684;&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;&#x5206;&#x4E24;&#x79CD;&#xFF0C;&#x5DE6;&#x624B;&#x7CFB;&#x548C;&#x53F3;&#x624B;&#x7CFB;&#x3002;&#x6A21;&#x578B;&#x90FD;&#x662F;&#x5DE6;&#x624B;/&#x53F3;&#x624B;&#x7684;&#xFF1A;</p><ul><li><strong>&#x5927;&#x62C7;&#x6307;</strong>&#x6307;&#x5411;<span class="math inline">\(X\)</span>&#x8F74;&#x7684;&#x6B63;&#x65B9;&#x5411;</li><li><strong>&#x98DF;&#x6307;</strong>&#x6307;&#x5411;<span class="math inline">\(Y\)</span>&#x8F74;&#x7684;&#x6B63;&#x65B9;&#x5411;</li><li><strong>&#x4E2D;&#x6307;</strong>&#x6307;&#x5411;<span class="math inline">\(Z\)</span>&#x8F74;&#x7684;<strong>&#x8D1F;</strong>&#x65B9;&#x5411;</li></ul><h3 id="&#x6A21;&#x578B;&#x5750;&#x6807;&#x7CFB;&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;">&#x6A21;&#x578B;&#x5750;&#x6807;&#x7CFB;&#xFF08;&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;&#xFF09;</h3><p>&#x662F;&#x548C;&#x7279;&#x5B9A;&#x7269;&#x4F53;&#x76F8;&#x5173;&#x8054;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x3002;</p><p>&#x6BCF;&#x4E2A;&#x7269;&#x4F53;&#x90FD;&#x6709;&#x5B83;&#x4EEC;&#x72EC;&#x7ACB;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x3002;&#x5F53;&#x7269;&#x4F53;&#x79FB;&#x52A8;&#x6216;&#x8005;&#x6539;&#x53D8;&#x65B9;&#x5411;&#x65F6;&#xFF0C;&#x548C;&#x8BE5;&#x7269;&#x4F53;&#x76F8;&#x5173;&#x8054;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x5C31;&#x968F;&#x4E4B;&#x79FB;&#x52A8;&#x6216;&#x8005;&#x6539;&#x53D8;&#x65B9;&#x5411;&#x3002;</p><p>&#x201C;&#x524D;&#x201D;&#x201C;&#x540E;&#x201D;&#x201C;&#x5DE6;&#x201D;&#x201C;&#x53F3;&#x201D;&#x53EA;&#x6709;&#x5728;&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x624D;&#x6709;&#x610F;&#x4E49;&#x3002;</p><p>&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;&#x4E5F;&#x80FD;&#x50CF;&#x6307;&#x5B9A;&#x65B9;&#x5411;&#x4E00;&#x6837;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x3002;</p><h3 id="&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;">&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x53C8;&#x53EB;&#x505A;&#x5168;&#x5C40;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x5B87;&#x5B99;&#x5750;&#x6807;&#x7CFB;&#x3002;<br>&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x662F;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x4ED6;&#x5EFA;&#x7ACB;&#x4E86;&#x63CF;&#x8FF0;&#x5176;&#x5B83;&#x5750;&#x6807;&#x7CFB;&#x6240;&#x9700;&#x8981;&#x7684;&#x53C2;&#x8003;&#x6846;&#x67B6;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x80FD;&#x591F;&#x7528;&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x63CF;&#x8FF0;&#x5176;&#x5B83;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><p>&#x4F5C;&#x7528;&#xFF1A;&#x5EFA;&#x7ACB;&#x4E86;&#x63CF;&#x8FF0;&#x5176;&#x4ED6;&#x5750;&#x6807;&#x7CFB;&#x6240;&#x9700;&#x8981;&#x7684;&#x53C2;&#x8003;&#x6846;&#x67B6;&#x3002;<br>&#x4ECE;&#x975E;&#x6280;&#x672F;&#x610F;&#x4E49;&#x4E0A;&#x8BB2;&#xFF0C;&#x5B83;&#x662F;&#x6211;&#x4EEC;&#x5173;&#x5FC3;&#x7684;&#x7684;&#x6700;&#x5927;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x6240;&#x4EE5;&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5FC5;&#x662F;&#x6574;&#x4E2A;&#x4E16;&#x754C;&#x3002;</p><p>&#x4E16;&#x754C;&#x5750;&#x6807;&#x7684;&#x5178;&#x578B;&#x95EE;&#x9898;&#xFF1A;</p><ul><li>&#x6BCF;&#x4E2A;&#x7269;&#x4F53;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x65B9;&#x5411;</li><li>&#x6444;&#x50CF;&#x673A;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x65B9;&#x5411;</li><li>&#x4E16;&#x754C;&#x4E2D;&#x6BCF;&#x4E00;&#x70B9;&#x7684;&#x5730;&#x5F62;&#x662F;&#x4EC0;&#x4E48;</li><li>&#x7269;&#x4F53;&#x4ECE;&#x90A3;&#x91CC;&#x6765;&#x5230;&#x90A3;&#x91CC;&#x53BB;</li></ul><h3 id="&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;">&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x6444;&#x50CF;&#x5750;&#x6807;&#x7CFB;&#x662F;&#x548C;&#x89C2;&#x5BDF;&#x8005;&#x5BC6;&#x5207;&#x76F8;&#x5173;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x3002;&#x8BE5;&#x5750;&#x6807;&#x7CFB;&#x5B9A;&#x4E49;&#x5728;&#x6444;&#x50CF;&#x673A;&#x7684;&#x5C4F;&#x5E55;&#x53EF;&#x89C6;&#x533A;&#x57DF;&#x3002;</p><h3 id="&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;">&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;&#xFF08;DC&#xFF09;&#x6216;&#x5C4F;&#x5E55;&#x5750;&#x6807;&#x7CFB;&#xFF1A;&#x663E;&#x793A;&#x8BBE;&#x5907;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x79F0;&#x4E3A;&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x8BE5;&#x5750;&#x6807;&#x7CFB;&#x4F9D;&#x8D56;&#x4E8E;&#x5177;&#x4F53;&#x7684;&#x663E;&#x793A;&#x8BBE;&#x5907;&#x3002;</p><h3 id="&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x7CFB;">&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x6307;&#x72EC;&#x7ACB;&#x4E8E;&#x5177;&#x4F53;&#x7269;&#x7406;&#x8BBE;&#x5907;&#x7684;&#x4E00;&#x79CD;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x5B83;&#x7684;&#x5750;&#x6807;&#x8303;&#x56F4;&#x5728;x&#x548C;y&#x4E0A;&#x7684;&#x8303;&#x56F4;&#x90FD;&#x662F;<strong>0&#x5230;1</strong>&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x5185;&#x90E8;&#x5904;&#x7406;&#x56FE;&#x5F62;&#xFF0C;&#x5BF9;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7269;&#x7406;&#x8BBE;&#x5907;&#xFF0C;&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x548C;&#x8BBE;&#x5907;&#x5750;&#x6807;&#x4EC5;&#x4EC5;&#x76F8;&#x5DEE;&#x4E00;&#x4E2A;&#x6BD4;&#x4F8B;&#x56E0;&#x5B50;&#xFF0C;&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7684;&#x56FE;&#x5F62;&#x8BBE;&#x5907;&#x3002;</p><h2 id="&#x5185;&#x79EF;&#x4E0E;&#x5916;&#x79EF;">&#x5185;&#x79EF;&#x4E0E;&#x5916;&#x79EF;</h2><p>&#x5185;&#x79EF;&#x53EF;&#x4EE5;&#x63CF;&#x8FF0;&#x5411;&#x91CF;&#x95F4;&#x7684;&#x6295;&#x5F71;&#x5173;&#x7CFB;&#x3002;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A; <img src="/posts/1d9c933b/&#x5185;&#x79EF;&#x516C;&#x5F0F;.jpg"></p><p>&#x5916;&#x79EF;&#x7684;&#x65B9;&#x5411;&#x5782;&#x76F4;&#x4E8E;&#x8FD9;&#x4E24;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x5927;&#x5C0F;&#x4E3A;<span class="math inline">\(\lvert a \rvert\lvert b\rvert sin\langle a,b \rangle\)</span>&#x3002;&#x662F;&#x4E24;&#x4E2A;&#x5411;&#x91CF;&#x5F20;&#x6210;&#x7684;&#x56DB;&#x8FB9;&#x5F62;&#x7684;&#x6709;&#x5411;&#x9762;&#x79EF;&#x3002;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A; <img src="/posts/1d9c933b/&#x5916;&#x79EF;&#x516C;&#x5F0F;.jpg"></p><p>&#x5916;&#x79EF;&#x53EA;&#x5BF9;&#x4E09;&#x7EF4;&#x5411;&#x91CF;&#x5B58;&#x5728;&#x5B9A;&#x4E49;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x80FD;&#x7528;&#x5916;&#x79EF;&#x8868;&#x793A;&#x5411;&#x91CF;&#x7684;&#x65CB;&#x8F6C;&#x3002;</p><h2 id="&#x4F4D;&#x7F6E;&#x63CF;&#x8FF0;">&#x4F4D;&#x7F6E;&#x63CF;&#x8FF0;</h2><h3 id="&#x5750;&#x6807;&#x7CFB;&#x7684;&#x8868;&#x793A;">&#x5750;&#x6807;&#x7CFB;&#x7684;&#x8868;&#x793A;</h3><p><strong>&#x5750;&#x6807;&#x7CFB;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x8FDC;&#x70B9;&#x7684;&#x8868;&#x793A;</strong>&#xFF1A;&#x7528;&#x4E09;&#x4E2A;&#x76F8;&#x4E92;&#x5782;&#x76F4;&#x7684;&#x5355;&#x4F4D;&#x5411;&#x91CF;&#x6765;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x4E2D;&#x5FC3;&#x4F4D;&#x4E8E;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x539F;&#x70B9;&#x7684;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x5206;&#x522B;&#x4E3A;n,o,a&#xFF0C;&#x8FD9;&#x6837;&#xFF0C;&#x5750;&#x6807;&#x7CFB;&#x5C31;&#x53EF;&#x4EE5;&#x7531;&#x4E09;&#x4E2A;&#x5411;&#x91CF;&#x4EE5;&#x77E9;&#x9635;&#x7684;&#x5F62;&#x5F0F;&#x8868;&#x793A;&#x4E3A; <img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x8FDC;&#x70B9;&#x7684;&#x8868;&#x793A;1.jpg"> <img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x8FDC;&#x70B9;&#x7684;&#x8868;&#x793A;2.jpg"></p><h2 id="&#x65CB;&#x8F6C;&#x77E9;&#x9635;">&#x65CB;&#x8F6C;&#x77E9;&#x9635;</h2><p>&#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x82E5;&#x5728;&#x57FA;&#x4E3A;<span class="math inline">\((e_1,e_2,e_3)\)</span>&#x7684;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x7684;&#x5750;&#x6807;&#x4E3A;<span class="math inline">\([a_1,a_2,a_3]\)</span>&#xFF0C;&#x5728;&#x57FA;&#x4E3A;<span class="math inline">\((e&apos;_1,e&apos;_2,e&apos;_3)\)</span>&#x7684;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x7684;&#x5750;&#x6807;&#x4E3A;<span class="math inline">\([a&apos;_1,a&apos;_2,a&apos;_3]\)</span>&#x3002;&#x5219;&#x6709;&#xFF1A; <img src="/posts/1d9c933b/&#x65CB;&#x8F6C;&#x77E9;&#x9635;.jpg"> &#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x7684;&#x6027;&#x8D28;&#xFF1A;</p><ul><li>&#x662F;&#x4E00;&#x4E2A;&#x884C;&#x5217;&#x5F0F;&#x4E3A;1&#x7684;&#x6B63;&#x4EA4;&#x77E9;&#x9635;&#x3002;</li><li>&#x5355;&#x4F4D;&#x5411;&#x91CF;&#x4E4B;&#x95F4;&#x4E92;&#x76F8;&#x5782;&#x76F4;&#xFF0C;&#x6B63;&#x4EA4;&#x3002;</li></ul><h2 id="&#x9F50;&#x6B21;&#x5750;&#x6807;">&#x9F50;&#x6B21;&#x5750;&#x6807;</h2><h3 id="&#x70B9;">&#x70B9;</h3><p>&#x5728;&#x4E00;&#x4E2A;&#x4E09;&#x7EF4;&#x5411;&#x91CF;&#x7684;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;1&#xFF0C;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x56DB;&#x7EF4;&#x5411;&#x91CF;&#xFF0C;&#x79F0;&#x4E4B;&#x4E3A;&#x9F50;&#x6B21;&#x5750;&#x6807;&#x3002;</p><p>&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x7EF4;&#xFF0C;&#x5373;&#x591A;&#x4E86;&#x4E00;&#x4E2A;&#x81EA;&#x7531;&#x5EA6;&#xFF0C;&#x4F46;&#x662F;&#x5141;&#x8BB8;&#x628A;&#x53D8;&#x6362;&#x5199;&#x6210;&#x7EBF;&#x6027;&#x7684;&#x5F62;&#x5F0F;&#x3002;&#x5728;&#x9F50;&#x6B21;&#x5750;&#x6807;&#x4E2D;&#xFF0C;&#x67D0;&#x4E2A;&#x70B9; <span class="math inline">\(x\)</span> &#x7684;&#x6BCF;&#x4E2A;&#x5206;&#x91CF;&#x540C;&#x4E58;&#x4E00;&#x4E2A;&#x975E;&#x96F6;&#x5E38;&#x6570; <span class="math inline">\(k\)</span> &#x540E;&#xFF0C; &#x4ECD;&#x7136;&#x8868;&#x793A;&#x7684;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x70B9;&#x3002;</p><h3 id="&#x5750;&#x6807;&#x8F74;">&#x5750;&#x6807;&#x8F74;</h3><p>&#x5047;&#x8BBE;i&#xFF0C;&#x5219;X <img src="/posts/1d9c933b/&#x9F50;&#x6B21;&#x5750;&#x6807;&#x8F74;.jpg"></p><h3 id="&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;">&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;</h3><p>&#x5BF9;&#x4E8E;&#x9F50;&#x6B21;&#x5750;&#x6807;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x65CB;&#x8F6C;&#x548C;&#x5E73;&#x79FB;&#x5199;&#x5728;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#x91CC;&#x9762;&#xFF0C;&#x4F7F;&#x5F97;&#x6574;&#x4E2A;&#x5173;&#x7CFB;&#x53D8;&#x6210;&#x4E86;&#x7EBF;&#x6027;&#x5173;&#x7CFB;&#x3002;<br>&#x8FD9;&#x4E2A;&#x63CF;&#x8FF0;&#x53D8;&#x6362;&#x5173;&#x7CFB;&#x7684;&#x77E9;&#x9635;&#x5C31;&#x662F;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x3002;</p><p>&#x5173;&#x4E8E;&#x53D8;&#x6362;&#x77E9;&#x9635; T&#xFF0C;&#x5B83;&#x5177;&#x6709;&#x6BD4;&#x8F83;&#x7279;&#x522B;&#x7684;&#x7ED3;&#x6784;&#xFF1A;&#x5DE6;&#x4E0A;&#x89D2;&#x4E3A;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#xFF0C;&#x53F3;&#x4FA7;&#x4E3A;&#x5E73;&#x79FB;&#x5411;&#x91CF;&#xFF0C;&#x5DE6;&#x4E0B;&#x89D2;&#x4E3A; 0 &#x5411;&#x91CF;&#xFF0C;&#x53F3;&#x4E0B;&#x89D2;&#x4E3A; 1&#x3002;&#x8FD9;&#x79CD;&#x77E9;&#x9635;&#x53C8;&#x79F0;&#x4E3A;&#x7279;&#x6B8A;&#x6B27;&#x6C0F;&#x7FA4;&#x3002; <img src="/posts/1d9c933b/&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;.jpg"></p><p>&#x8BE5;&#x77E9;&#x9635;&#x7684;&#x9006;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x53CD;&#x5411;&#x7684;&#x53D8;&#x6362;&#xFF1A; <img src="/posts/1d9c933b/&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;_&#x9006;.jpg"></p><h3 id="&#x9F50;&#x6B21;&#x5750;&#x6807;&#x63CF;&#x8FF0;&#x5750;&#x6807;&#x7CFB;">&#x9F50;&#x6B21;&#x5750;&#x6807;&#x63CF;&#x8FF0;&#x5750;&#x6807;&#x7CFB;</h3><p><strong>&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;</strong>&#xFF1A;&#x53EF;&#x4EE5;&#x5728;&#x8BE5;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;&#x4E0E;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x539F;&#x70B9;&#x4E4B;&#x95F4;&#x505A;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x5411;&#x91CF;&#x7531;&#x4E0A;&#x8282;&#x4E2D;&#x63D0;&#x5230;&#x7684;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x4E09;&#x4E2A;&#x5750;&#x6807;&#x5411;&#x91CF;&#x8868;&#x793A;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x8FD9;&#x4E2A;&#x5750;&#x6807;&#x7CFB;&#x5C31;&#x53EF;&#x4EE5;&#x7531;&#x4E09;&#x4E2A;&#x8868;&#x793A;&#x65B9;&#x5411;&#x7684;&#x5355;&#x4F4D;&#x5411;&#x91CF;&#x4EE5;&#x53CA;&#x7B2C;&#x56DB;&#x4E2A;&#x4F4D;&#x7F6E;&#x5411;&#x91CF;&#x6765;&#x8868;&#x793A;&#x3002; <img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;1.jpg"> <img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;2.jpg"></p><p><strong>&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;</strong>&#xFF1A;&#x5750;&#x6807;&#x7CFB;&#x4F4D;&#x4E8E;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;3&#xFF0C;5&#xFF0C;7&#x7684;&#x4F4D;&#x7F6E;&#x3002;n&#x8F74;&#x4E0E;x&#x8F74;&#x5E73;&#x884C;&#xFF0C;o&#x8F74;&#x76F8;&#x5BF9;&#x4E8E;y&#x8F74;&#x89D2;&#x5EA6;45&#xB0;&#xFF0C;a&#x8F74;&#x76F8;&#x5BF9;&#x4E8E;z&#x8F74;&#x89D2;&#x5EA6;45 &#xB0;&#xFF09;<br><img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;&#x4E3E;&#x4F8B;.jpg"></p><h2 id="&#x65CB;&#x8F6C;&#x5411;&#x91CF;">&#x65CB;&#x8F6C;&#x5411;&#x91CF;</h2><p>&#x65B9;&#x5411;&#x4E3A;&#x65CB;&#x8F6C;&#x8F74;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;&#x65CB;&#x8F6C;&#x7684;&#x89D2;&#x5EA6;&#x3002;</p><p>&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x4E0E;&#x77E9;&#x9635;&#x7684;&#x4E0D;&#x540C;</p><ul><li>&#x4EC5;&#x6709;&#x4E09;&#x4E2A;&#x91CF;</li><li>&#x65E0;&#x7EA6;&#x675F;</li><li>&#x66F4;&#x76F4;&#x89C2;</li></ul><p>&#x662F;&#x4E00;&#x4E2A;&#x4E1C;&#x897F;&#x7684;&#x4E0D;&#x540C;&#x8868;&#x8FBE;&#x65B9;&#x5F0F;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x65CB;&#x8F6C;&#x8F74;&#x4E3A;<span class="math inline">\(n\)</span>&#xFF0C;&#x89D2;&#x5EA6;&#x4E3A;<span class="math inline">\(\theta\)</span>&#x7684;&#x65CB;&#x8F6C;&#xFF0C;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x4E3A;<span class="math inline">\(\theta n\)</span>&#x3002;&#x7531;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x5230;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x7684;&#x8FC7;&#x7A0B;&#x7531;<strong>&#x7F57;&#x5FB7;&#x91CC;&#x683C;&#x65AF;&#x516C;&#x5F0F;</strong>&#x8868;&#x660E;&#x3002;&#x5177;&#x4F53;&#x5982;&#x4E0B;&#xFF1A; <img src="/posts/1d9c933b/&#x7F57;&#x5FB7;&#x91CC;&#x683C;&#x65AF;&#x516C;&#x5F0F;.jpg"> &#x7B26;&#x53F7; <span class="math inline">\(\hat{}\)</span> &#x662F;&#x5411;&#x91CF;&#x5230;&#x53CD;&#x5BF9;&#x79F0;&#x7684;&#x8F6C;&#x6362;&#x7B26;&#x3002;&#x5B9A;&#x4E49;&#x89C1;&#x5916;&#x79EF;&#x8FD0;&#x7B97;&#x516C;&#x5F0F;&#x3002;&#x5373;&#x4E3A;&#xFF1A; <img src="/posts/1d9c933b/&#x7F57;&#x5FB7;&#x91CC;&#x683C;&#x65AF;&#x516C;&#x5F0F;2.png"></p><p>&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x8F6C;&#x5411;&#x91CF;&#xFF0C;&#x89D2;&#x5EA6;&#x4E3A;&#xFF1A; <img src="/posts/1d9c933b/&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x8F6C;&#x5411;&#x91CF;_&#x89D2;.jpg"> &#x8F74;&#x4E3A;&#xFF1A; <span class="math display">\[Rn=n\]</span></p><h2 id="&#x6B27;&#x62C9;&#x89D2;">&#x6B27;&#x62C9;&#x89D2;</h2><p>&#x5C06;&#x65CB;&#x8F6C;&#x5206;&#x89E3;&#x4E3A;&#x4E09;&#x4E2A;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x8F6C;&#x52A8;&#x3002;</p><p>&#x8F74;&#x53EF;&#x4EE5;&#x662F;&#x5B9A;&#x8F74;&#x6216;&#x8005;&#x52A8;&#x8F74;&#xFF0C;&#x987A;&#x5E8F;&#x4EA6;&#x53EF;&#x4EE5;&#x4E0D;&#x540C;&#x3002;</p><p>&#x5E38;&#x89C1;&#x7684;&#x6709;yaw-pitch-roll&#xFF0C;&#x504F;&#x822A;-&#x4FEF;&#x4EF0;-&#x6EDA;&#x8F6C;&#xFF0C;&#x4E1C;&#x5317;&#x5929;&#x3002;</p><h3 id="&#x4E07;&#x5411;&#x9501;">&#x4E07;&#x5411;&#x9501;</h3><p>&#x6B27;&#x62C9;&#x89D2;&#x7684;&#x5947;&#x5F02;&#x6027;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x7279;&#x5B9A;&#x503C;&#x65F6;&#xFF0C;&#x65CB;&#x8F6C;&#x81EA;&#x7531;&#x5EA6;&#x51CF;1&#x3002;</p><p>&#x4E07;&#x5411;&#x9501;&#x7684;&#x60C5;&#x51B5;&#xFF1A;&#x5728;&#x65CB;&#x8F6C;&#x662F;&#x52A8;&#x6001;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5373;&#x7ED5;&#x65CB;&#x8F6C;&#x4E4B;&#x540E;&#x7684;&#x65CB;&#x8F6C;&#x8F74;&#x65CB;&#x8F6C;&#x7684;&#x3002;&#x5728;&#x4E09;&#x4E2A;&#x65CB;&#x8F6C;&#x6B21;&#x5E8F;&#x95F4;&#xFF0C;&#x53EA;&#x6709;&#x4E2D;&#x95F4;&#x7684;&#x90A3;&#x4E2A;&#x65CB;&#x8F6C;&#x6B21;&#x5E8F;&#xFF0C;&#x65CB;&#x8F6C;&#x89D2;&#x662F;<span class="math inline">\(&#xB1;90&#xB0;\)</span>&#x65F6;&#xFF0C;&#x624D;&#x4F1A;&#x53D1;&#x751F;&#x4E07;&#x5411;&#x9501;&#x3002;&#x6B64;&#x65F6;&#x7B2C;&#x4E00;&#x4E2A;&#x65CB;&#x8F6C;&#x8F74;&#x548C;&#x7B2C;&#x4E09;&#x4E2A;&#x65CB;&#x8F6C;&#x8F74;&#x5904;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x5E73;&#x9762;&#xFF0C;&#x4E22;&#x5931;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#x3002;</p><p>&#x7531;&#x4E8E;&#x4E07;&#x5411;&#x9501;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x6B27;&#x62C9;&#x89D2;&#x4E0D;&#x9002;&#x5408;&#x63D2;&#x503C;&#x6216;&#x8FED;&#x4EE3; &#x2022; &#x591A;&#x7528;&#x4E8E;&#x4EBA;&#x673A;&#x4EA4;&#x4E92;&#x4E2D;</p><p>&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#xFF1A;&#x4EC5;&#x7528;&#x4E09;&#x4E2A;&#x5B9E;&#x6570;&#x8868;&#x8FBE;&#x65CB;&#x8F6C;&#x65F6;&#xFF0C;&#x4E0D;&#x53EF;&#x907F;&#x514D;&#x5730;&#x5B58;&#x5728;&#x5947;&#x5F02;&#x6027;&#x95EE;&#x9898;&#x3002;</p><p>&#x5982;&#x679C;&#x8FD8;&#x4E0D;&#x7406;&#x89E3;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;<a href="https://www.youtube.com/watch?v=rsKy-4dbA04" target="_blank" rel="noopener">&#x8FD9;&#x4E2A;&#x89C6;&#x9891;</a>&#x3002;</p><h2 id="&#x56DB;&#x5143;&#x6570;">&#x56DB;&#x5143;&#x6570;</h2><p>&#x56DB;&#x5143;&#x6570;&#x65E2;&#x662F;&#x7D27;&#x51D1;&#x7684;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x5947;&#x5F02;&#x6027;&#x3002;</p><p>&#x4E00;&#x4E2A;&#x56DB;&#x5143;&#x6570; q &#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x5B9E;&#x90E8;&#x548C;&#x4E09;&#x4E2A;&#x865A;&#x90E8;&#x3002;&#x50CF;&#x8FD9;&#x6837;<span class="math inline">\(q = q_0 + q_1i + q_2j + q_3k\)</span><br>&#x5176;&#x4E2D;$ i, j, k$ &#x4E3A;&#x56DB;&#x5143;&#x6570;&#x7684;&#x4E09;&#x4E2A;&#x865A;&#x90E8;&#x3002;&#x8FD9;&#x4E09;&#x4E2A;&#x865A;&#x90E8;&#x6EE1;&#x8DB3;&#x5173;&#x7CFB;&#x5F0F;&#xFF1A; <img src="/posts/1d9c933b/&#x56DB;&#x5143;&#x6570;&#x7684;&#x5173;&#x7CFB;&#x5F0F;.jpg"></p><p>&#x80FD;&#x7528;&#x5355;&#x4F4D;&#x56DB;&#x5143;&#x6570;&#x8868;&#x793A;&#x4E09;&#x7EF4;&#x7A7A;&#x95F4;&#x4E2D;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x65CB;&#x8F6C;&#x3002;</p><p>&#x5047;&#x8BBE;&#x67D0;&#x4E2A;&#x65CB;&#x8F6C;&#x662F;&#x7ED5;&#x5355;&#x4F4D;&#x5411;&#x91CF;$ n = [n_x, n_y, n_z]^T$&#x8FDB;&#x884C;&#x4E86;&#x89D2;&#x5EA6;&#x4E3A; <span class="math inline">\(\theta\)</span> &#x7684;&#x65CB;&#x8F6C;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x65CB;&#x8F6C;&#x7684;&#x56DB;&#x5143;&#x6570;&#x5F62;&#x5F0F;&#x4E3A; <span class="math display">\[q=[cos \frac\theta 2,n_xsin\frac \theta 2,n_y\frac \theta 2,n_z \frac \theta 2]^T\]</span></p><p>&#x4ECE;&#x56DB;&#x5143;&#x6570;&#x8BA1;&#x7B97;&#x5BF9;&#x5E94;&#x7684;&#x65CB;&#x8F6C;&#x8F74;&#x4E0E;&#x5939;&#x89D2;&#xFF1A; <img src="/posts/1d9c933b/&#x56DB;&#x5143;&#x6570;&#x7B97;&#x65CB;&#x8F6C;&#x8F74;&#x4E0E;&#x5939;&#x89D2;.jpg" alt="&#x4ECE;&#x56DB;&#x5143;&#x6570;&#x8BA1;&#x7B97;&#x5BF9;&#x5E94;&#x7684;&#x65CB;&#x8F6C;&#x8F74;&#x4E0E;&#x5939;&#x89D2;"></p><p>&#x5728;&#x56DB;&#x5143;&#x6570;&#x4E2D;&#xFF0C; &#x4EFB;&#x610F;&#x7684;&#x65CB;&#x8F6C;&#x90FD;&#x53EF;&#x4EE5;&#x7531;&#x4E24;&#x4E2A;&#x4E92;&#x4E3A;&#x76F8;&#x53CD;&#x6570;&#x7684;&#x56DB;&#x5143;&#x6570;&#x8868;&#x793A;&#x3002;</p><h3 id="&#x56DB;&#x5143;&#x6570;&#x7684;&#x8FD0;&#x7B97;">&#x56DB;&#x5143;&#x6570;&#x7684;&#x8FD0;&#x7B97;</h3><p>&#x73B0;&#x6709;&#x4E24;&#x4E2A;&#x56DB;&#x5143;&#x6570;<span class="math inline">\(q_a&#xFF0C;q_b\)</span>&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x5411;&#x91CF;&#x8868;&#x793A;&#x4E3A;<span class="math inline">\([s_a,v_a],[s_b,v_b]\)</span>&#xFF0C;&#x6216;&#x8005;&#x539F;&#x59CB;&#x56DB;&#x5143;&#x6570;&#x8868;&#x793A;&#x4E3A; <span class="math display">\[q_a = s_a + x_ai + y_aj + z_ak, q_b = s_b + x_bi + y_bj + z_bk\]</span></p><p>&#x52A0;&#x51CF;&#x6CD5;&#x8BA1;&#x7B97;&#xFF1A; <span class="math display">\[q_a \pm q_b=[s_a \pm s_b,\boldsymbol{v_a \pm v_b]}\]</span> &#x5176;&#x4ED6;&#x8BA1;&#x7B97;&#xFF1A; <img src="/posts/1d9c933b/&#x56DB;&#x5143;&#x6570;&#x8BA1;&#x7B97;.jpg"></p><h3 id="&#x8BA1;&#x7B97;&#x65CB;&#x8F6C;">&#x8BA1;&#x7B97;&#x65CB;&#x8F6C;</h3><p>&#x7528;&#x56DB;&#x5143;&#x6570;&#x8BA1;&#x7B97;&#x65CB;&#x8F6C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E3A;&#x4E86;&#x5C06;&#x6700;&#x540E;&#x7684;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x7684;&#x5B9E;&#x90E8;&#x7F6E;&#x4E3A;0&#xFF0C;&#x9700;&#x8981;&#x4E58;&#x56DB;&#x5143;&#x6570;&#x7684;&#x9006;&#xFF0C;&#x5982;&#x679C;&#x56DB;&#x5143;&#x6570;&#x7684;&#x6A21;&#x503C;&#x4E3A;1&#xFF0C;&#x5219;&#x53EA;&#x9700;&#x8981;&#x4E58;&#x5171;&#x8F6D;&#x5373;&#x53EF;&#x3002;<br>&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x4F1A;&#x5BFC;&#x81F4;&#x65CB;&#x8F6C;&#x4E86;&#x4E24;&#x6B21;&#xFF0C;&#x4E8E;&#x662F;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x5148;&#x65CB;&#x8F6C;&#x4E00;&#x534A;&#xFF0C;&#x7B2C;&#x4E8C;&#x6B21;&#x518D;&#x65CB;&#x8F6C;&#x4E00;&#x534A;&#x3002; <span class="math display">\[\boldsymbol{p}=[0,x,y,z] \\\boldsymbol{q}=[cos\frac \theta 2,\boldsymbol{n}\,sin \frac \theta 2] \\\boldsymbol{p&apos;=qpq}^{-1}\]</span> &#x7B2C;&#x4E00;&#x6B21;&#x662F;&#x4EE5;&#x5411;&#x91CF;&#x4E3A;&#x8F74;&#xFF0C;&#x65CB;&#x8F6C;<span class="math inline">\(\theta /2\)</span>&#xFF0C;&#x7B2C;&#x4E8C;&#x6B21;&#x662F;&#x4EE5;&#x5411;&#x91CF;&#x7684;&#x8D1F;&#x65B9;&#x5411;&#x4E3A;&#x8F74;&#xFF0C;&#x518D;&#x65CB;&#x8F6C;<span class="math inline">\(\theta /2\)</span></p><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#x4E3A;&#x5565;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;</p><h1 id="&#x56FE;&#x50CF;">&#x56FE;&#x50CF;</h1><h2 id="&#x989C;&#x8272;&#x7A7A;&#x95F4;">&#x989C;&#x8272;&#x7A7A;&#x95F4;</h2><h3 id="rgb">RGB</h3><p>&#x7EA2;&#x7EFF;&#x84DD;&#x989C;&#x8272;&#x7A7A;&#x95F4;&#x3002;</p><h3 id="yuv">YUV</h3><p>&#x590D;&#x5408;&#x989C;&#x8272;&#x89C6;&#x9891;&#x6807;&#x51C6;&#xFF0C;Y&#x4E3A;&#x4EAE;&#x5EA6;&#xFF0C;UV&#x662F;&#x8272;&#x5EA6;&#x3002;</p><h3 id="hsb">HSB</h3><p>&#x4E3A;&#x8272;&#x5EA6;&#xFF0C;&#x9971;&#x548C;&#x5EA6;&#xFF0C;&#x4EAE;&#x5EA6;&#x7A7A;&#x95F4;&#x3002;</p><h2 id="&#x56FE;&#x50CF;&#x7684;&#x5B58;&#x50A8;">&#x56FE;&#x50CF;&#x7684;&#x5B58;&#x50A8;</h2><ul><li>&#x77E2;&#x91CF;&#x683C;&#x5F0F;&#xFF1A;&#x7528;&#x7EBF;&#x6BB5;&#x6216;&#x8005;&#x7EBF;&#x6BB5;&#x7684;&#x7EC4;&#x5408;&#x8868;&#x793A;&#x56FE;&#x50CF;&#xFF08;WMF&#xFF09;</li><li>&#x5149;&#x6805;&#x683C;&#x5F0F;&#xFF1A;&#x7528;&#x8BB8;&#x591A;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x96C6;&#x5408;&#x8868;&#x793A;&#x56FE;&#x50CF;&#xFF08;BMP&#xFF0C;GIF&#xFF0C;JPEG&#xFF09;</li></ul><h2 id="&#x56FE;&#x50CF;&#x7684;&#x8FB9;&#x7F18;">&#x56FE;&#x50CF;&#x7684;&#x8FB9;&#x7F18;</h2><p>&#x6982;&#x5FF5;&#xFF1A;</p><ul><li>&#x7A7A;&#x95F4;&#x66F2;&#x9762;&#x7684;&#x4E0D;&#x8FDE;&#x7EED;&#x70B9;</li><li>&#x4E0D;&#x540C;&#x6750;&#x6599;&#x6216;&#x4E0D;&#x540C;&#x989C;&#x8272;</li><li>&#x7269;&#x4F53;&#x4E0E;&#x80CC;&#x666F;&#x7684;&#x5206;&#x754C;&#x7EBF;</li><li>&#x9634;&#x5F71;&#x5F15;&#x8D77;&#x7684;&#x8FB9;&#x7F18;</li></ul><p>&#x8FB9;&#x7F18;&#x70B9;&#xFF1A;&#x4EAE;&#x5EA6;&#x663E;&#x8457;&#x53D8;&#x5316;&#x7684;&#x70B9;<br>&#x8FB9;&#x7F18;&#x6BB5;&#xFF1A;&#x8FB9;&#x7F18;&#x70B9;&#x5750;&#x6807;&#x548C;&#x65B9;&#x5411;&#x7684;&#x603B;&#x548C;<br>&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x5668;&#xFF1A;&#x62BD;&#x53D6;&#x8FB9;&#x7F18;&#x96C6;&#x5408;&#x7684;&#x7B97;&#x6CD5;<br>&#x8FB9;&#x7F18;&#x8DDF;&#x8E2A;&#xFF1A;&#x786E;&#x5B9A;&#x8F6E;&#x5ED3;&#x7684;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;</p><p>&#x5728;&#x7070;&#x5EA6;&#x56FE;&#x4E0B;&#xFF1A;&#x662F;&#x4E00;&#x9636;&#x5DEE;&#x5206;&#x7684;&#x6781;&#x5927;&#x503C;&#x7684;&#x70B9;&#xFF0C;&#x4E8C;&#x9636;&#x5DEE;&#x5206;&#x8FC7;&#x96F6;&#x70B9;&#x7684;&#x70B9;&#x3002;</p><h2 id="&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x57FA;&#x672C;&#x6B65;&#x9AA4;">&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x57FA;&#x672C;&#x6B65;&#x9AA4;</h2><ol type="1"><li>&#x56FE;&#x50CF;&#x91C7;&#x96C6;</li><li>&#x56FE;&#x50CF;&#x589E;&#x5F3A;</li><li>&#x56FE;&#x50CF;&#x590D;&#x539F;</li><li>&#x5F62;&#x6001;&#x5B66;&#x5904;&#x7406;</li><li>&#x5206;&#x5272;</li><li>&#x8868;&#x793A;&amp;&#x63CF;&#x8FF0;</li><li>&#x5BF9;&#x8C61;&#x8BC6;&#x522B;</li></ol><p>&#x53EF;&#x80FD;&#x6709;&#x7684;&#xFF1A;</p><ol start="8" type="1"><li>&#x5F69;&#x8272;&#x56FE;&#x50CF;&#x5904;&#x7406;</li><li>&#x56FE;&#x50CF;&#x538B;&#x7F29;</li></ol><h2 id="&#x6982;&#x8FF0;">&#x6982;&#x8FF0;</h2><h3 id="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;">&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;</h3><ol type="1"><li>&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x83B7;&#x53D6;&#x56FE;&#x50CF;&#x662F;&#x901A;&#x8FC7;&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#xFF08;&#x5149;&#x5B66;&#x955C;&#x5934;+CCD&#xFF09;&#x5F97;&#x5230;&#xFF1B;</li><li>&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x672C;&#x8EAB;&#x7535;&#x5B50;&#x5E72;&#x6270;&#x548C;&#x5916;&#x754C;&#x73AF;&#x5883;&#x4EA7;&#x751F;&#x7684;&#x968F;&#x673A;&#x5E72;&#x6270;&#xFF0C;&#x4F7F;&#x5F97;&#x56FE;&#x50CF;&#x542B;&#x6709;&#x566A;&#x58F0;&#xFF1B;</li><li>&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x6240;&#x5904;&#x7684;&#x7167;&#x660E;&#x6216;&#x5176;&#x4ED6;&#x73AF;&#x5883;&#xFF0C;&#x4F7F;&#x5F97;&#x56FE;&#x50CF;&#x7684;&#x7070;&#x5EA6;&#x5206;&#x8FA8;&#x7387;&#x4E0D;&#x9AD8;&#xFF0C;&#x751A;&#x81F3;&#x5F88;&#x96BE;&#x533A;&#x5206;&#x56FE;&#x50CF;&#x4E2D;&#x7684;&#x7269;&#x4F53;&#x3002;</li><li>&#x5FC5;&#x987B;&#x5728;&#x89C6;&#x89C9;&#x7684;&#x521D;&#x7EA7;&#x9636;&#x6BB5;&#x5BF9;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x7070;&#x5EA6;&#x4FEE;&#x6B63;&#x3001;&#x566A;&#x58F0;&#x8FC7;&#x6EE4;&#x7B49;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x3002;</li></ol><h3 id="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;">&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h3><ul><li>&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x4E2D;&#x7684;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x5E76;&#x4E0D;&#x8003;&#x8651;&#x56FE;&#x50CF;&#x964D;&#x8D28;&#x539F;&#x56E0;&#xFF0C;&#x53EA;&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x7279;&#x5F81;&#x6709;&#x9009;&#x62E9;&#x7684;&#x7A81;&#x51FA;&#xFF0C;&#x8870;&#x51CF;&#x5176;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x7279;&#x5F81;&#x3002;</li><li>&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x540E;&#x7684;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x53BB;&#x903C;&#x8FD1;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#xFF0C;&#x8FD9;&#x79CD;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x65B9;&#x6CD5;&#x79F0;&#x4E3A;&#x56FE;&#x50CF;&#x589E;&#x5F3A;&#x3002;</li></ul><h3 id="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;">&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;</h3><ul><li>&#x7A7A;&#x95F4;&#x57DF;&#x6CD5;&#x548C;&#x9891;&#x7387;&#x57DF;&#x6CD5;<ul><li>&#x7A7A;&#x95F4;&#x57DF;&#x6CD5;&#x662F;&#x76F4;&#x63A5;&#x5728;&#x7A7A;&#x95F4;&#x57DF;&#x5BF9;&#x56FE;&#x50CF;&#x50CF;&#x7D20;&#x8FD0;&#x7B97;&#x5904;&#x7406;&#xFF1B;</li><li>&#x9891;&#x7387;&#x57DF;&#x6CD5;&#x662F;&#x5148;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x67D0;&#x79CD;&#x53D8;&#x6362;&#xFF08;DFT&#x3001;DCT&#x3001;DWT&#x3001;K-L&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x53D8;&#x6362;&#x57DF;&#x5BF9;&#x56FE;&#x50CF;&#x7684;&#x53D8;&#x6362;&#x503C;&#x8FDB;&#x884C;&#x8FD0;&#x7B97;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x8BA1;&#x7B97;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x9006;&#x53D8;&#x6362;&#x5230;&#x7A7A;&#x95F4;&#x57DF;&#x3002;</li></ul></li><li>&#x5168;&#x5C40;&#x8FD0;&#x7B97;&#x548C;&#x5C40;&#x90E8;&#x8FD0;&#x7B97;</li><li>&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x548C;&#x5F69;&#x8272;&#x56FE;&#x50CF;</li></ul><h2 id="&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;">&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;</h2><h3 id="&#x76F4;&#x65B9;&#x56FE;&#x7684;&#x6982;&#x5FF5;">&#x76F4;&#x65B9;&#x56FE;&#x7684;&#x6982;&#x5FF5;</h3><p>&#x5982;&#x679C;&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x50CF;&#x7D20;&#x4EAE;&#x5EA6;&#xFF08;&#x7070;&#x5EA6;&#x7EA7;&#x522B;&#xFF09;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x53D8;&#x91CF;&#xFF0C; &#x5219;&#x5176;&#x5206;&#x5E03;&#x60C5;&#x51B5;&#x5C31;&#x53CD;&#x6620;&#x4E86;&#x56FE;&#x50CF;&#x7684;&#x7EDF;&#x8BA1;&#x7279;&#x6027;&#xFF0C;&#x8FD9;&#x53EF;&#x7528;Probability Density Function (PDF)&#x6765;&#x523B;&#x753B;&#x548C;&#x63CF;&#x8FF0;&#xFF0C;&#x8868;&#x73B0;&#x4E3A;&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;&#xFF08;Histogram&#xFF09;&#x3002;</p><p>&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;&#x662F;<strong>&#x7070;&#x5EA6;&#x7EA7;</strong>&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x56FE;&#x50CF;&#x4E2D;&#x5177;&#x6709;&#x67D0;&#x79CD;&#x7070;&#x5EA6;&#x7EA7;&#x7684;&#x50CF;&#x7D20;&#x7684;<strong>&#x4E2A;&#x6570;</strong>&#xFF0C;&#x53CD;&#x6620;&#x4E86;&#x56FE;&#x50CF;&#x4E2D;&#x6BCF;&#x79CD;&#x7070;&#x5EA6;&#x51FA;&#x73B0;&#x7684;<strong>&#x9891;&#x7387;</strong>&#xFF0C;&#x5B83;&#x662F;&#x56FE;&#x50CF;&#x6700;&#x57FA;&#x672C;&#x7684;&#x7EDF;&#x8BA1;&#x7279;&#x5F81;&#x3002; <img src="/posts/1d9c933b/&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;.jpg"></p><h3 id="&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;-1">&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;</h3><p><strong>&#x95EE;&#x9898;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x975E;&#x5747;&#x5300;&#x5206;&#x5E03;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x5F88;&#x591A;&#x56FE;&#x50CF;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x96C6;&#x4E2D;&#x5728;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;&#x533A;&#x95F4;&#x5185;&#xFF0C;&#x5BFC;&#x81F4;&#x56FE;&#x50CF;&#x7684;&#x5BF9;&#x6BD4;&#x5EA6;&#x964D;&#x4F4E;&#x3002;</p><p><strong>&#x89E3;&#x51B3;</strong>&#xFF1A;&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x91CD;&#x65B0;&#x5747;&#x5300;&#x5206;&#x5E03;&#x5404;&#x4E2A;&#x7070;&#x5EA6;&#x503C;&#x6765;&#x589E;&#x5F3A;&#x56FE;&#x50CF;&#x7684;&#x5BF9;&#x6BD4;&#x5EA6;&#x3002;&#x7ECF;&#x8FC7;&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x5BF9;&#x505A;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;&#x4E2D;&#x7684;&#x9608;&#x503C;&#x9009;&#x62E9;&#x5F88;&#x6709;&#x5E2E;&#x52A9;&#x3002;</p><p><strong>&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x5C3A;&#x5EA6;&#x53D8;&#x6362;</strong>:<br>- &#x628A;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x533A;&#x95F4;&#x5728;<span class="math inline">\([a,b]\)</span>&#x5185;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x503C;&#x6620;&#x5C04;&#x5230;<span class="math inline">\([z_1,z_k]\)</span>&#x7684;&#x533A;&#x95F4;&#x5185;&#x3002; - &#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7531;&#x4E8E;&#x5149;&#x7167;&#x539F;&#x56E0;&#xFF0C;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x533A;&#x95F4;<span class="math inline">\([a,b]\)</span>&#x5E38;&#x5E38;&#x662F;<span class="math inline">\([z_1,z_k]\)</span>&#x7684;&#x5B50;&#x7A7A;&#x95F4;&#x3002;&#x5982;&#x679C;&#x56FE;&#x50CF;&#x7684;&#x5927;&#x591A;&#x6570;&#x50CF;&#x7D20;&#x7070;&#x5EA6;&#x503C;&#x5206;&#x5E03;&#x5728;&#x533A;&#x95F4;[a,b],&#x4E00;&#x5C0F;&#x90E8;&#x5206;&#x5206;&#x5E03;&#x5728;&#x6B64;&#x533A;&#x95F4;&#x5916;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x6620;&#x5C04;&#x51FD;&#x6570;&#xFF1A;</p><p><span class="math display">\[z&apos;=\left\{\begin{aligned}&amp; \frac {z_k-z_1}{b-a}(z-a)+z_1 \quad &amp; a \le z \le b\\&amp; z_1 \quad &amp;z &lt; a \\&amp; z_k \quad &amp;z&gt;b\end{aligned}\right.\]</span> - &#x4F7F;&#x66DD;&#x5149;&#x4E0D;&#x5145;&#x5206;&#x7684;&#x56FE;&#x50CF;&#x9ED1;&#x7684;&#x66F4;&#x9ED1;&#x767D;&#x7684;&#x66F4;&#x767D;&#x3002; <img src="/posts/1d9c933b/&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x5C3A;&#x5BF8;&#x53D8;&#x6362;.jpg"></p><h3 id="&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x7B97;&#x6CD5;">&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x7B97;&#x6CD5;</h3><p><img src="/posts/1d9c933b/&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x7B97;&#x6CD5;.jpg"></p><h2 id="&#x56FE;&#x50CF;&#x7EBF;&#x6027;&#x8FD0;&#x7B97;">&#x56FE;&#x50CF;&#x7EBF;&#x6027;&#x8FD0;&#x7B97;</h2><h3 id="lsi&#x7CFB;&#x7EDF;">LSI&#x7CFB;&#x7EDF;</h3><p>LSI&#xFF1A;&#x7EBF;&#x6027;&#x79FB;&#x4E0D;&#x53D8;&#x7CFB;&#x7EDF;&#x3002;&#x4E0E;LTI&#xFF08;&#x7EBF;&#x6027;&#x65F6;&#x4E0D;&#x53D8;&#x7CFB;&#x7EDF;&#xFF09;&#x7C7B;&#x4F3C;&#x3002;</p><p>&#x6027;&#x8D28;&#xFF1A;</p><ol type="1"><li>&#x7EBF;&#x6027;&#xFF1A;&#x6EE1;&#x8DB3;&#x53E0;&#x52A0;&#x539F;&#x7406;&#xFF0C;&#x5373;&#x6709;&#xFF08;1&#xFF09;&#x53EF;&#x52A0;&#x6027;&#xFF0C;&#xFF08;2&#xFF09;&#x6BD4;&#x4F8B;&#x6027;&#x3002;</li><li>&#x79FB;&#x4E0D;&#x53D8;&#xFF1A;&#x82E5;&#x7CFB;&#x7EDF;&#x54CD;&#x5E94;&#x4E0E;&#x6FC0;&#x52B1;&#x52A0;&#x4E8E;&#x7CFB;&#x7EDF;&#x7684;&#x65F6;&#x523B;&#x65E0;&#x5173;&#xFF0C;&#x5219;&#x4E3A;&#x79FB;&#x4E0D;&#x53D8;&#x7CFB;&#x7EDF;&#x3002;&#x5373;&#x82E5;&#x8F93;&#x5165;<span class="math inline">\(x(n)\)</span>&#x4EA7;&#x751F;&#x8F93;&#x51FA;<span class="math inline">\(y(n)\)</span>&#xFF0C;&#x5219;&#x8F93;&#x5165;<span class="math inline">\(x(n-m)\)</span>&#x4EA7;&#x751F;&#x8F93;&#x51FA;<span class="math inline">\(y(n-m)\)</span>&#x3002;&#x8F93;&#x5165;&#x79FB;&#x52A8;&#x591A;&#x5C11;&#x4F4D;&#xFF0C;&#x8F93;&#x51FA;&#x4E5F;&#x79FB;&#x52A8;&#x76F8;&#x540C;&#x7684;&#x4F4D;&#x6570;&#x3002;</li></ol><h3 id="&#x4E8C;&#x7EF4;&#x8FDE;&#x7EED;&#x5377;&#x79EF;">&#x4E8C;&#x7EF4;&#x8FDE;&#x7EED;&#x5377;&#x79EF;</h3><p><img src="/posts/1d9c933b/&#x4E8C;&#x7EF4;&#x8FDE;&#x7EED;&#x5377;&#x79EF;.jpg"></p><h3 id="&#x56FE;&#x50CF;&#x79BB;&#x6563;&#x7CFB;&#x7EDF;&#x7684;&#x5377;&#x79EF;">&#x56FE;&#x50CF;&#x79BB;&#x6563;&#x7CFB;&#x7EDF;&#x7684;&#x5377;&#x79EF;</h3><p><img src="/posts/1d9c933b/&#x56FE;&#x50CF;&#x79BB;&#x6563;&#x7CFB;&#x7EDF;&#x7684;&#x5377;&#x79EF;.jpg"></p><p><strong>Mask Format</strong> <img src="/posts/1d9c933b/MaskFormat.jpg"></p><h2 id="&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;">&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;</h2><h3 id="&#x566A;&#x58F0;">&#x566A;&#x58F0;</h3><ul><li>&#x6912;&#x76D0;&#x566A;&#x58F0;&#xFF1A;&#x542B;&#x6709;&#x968F;&#x673A;&#x51FA;&#x73B0;&#x7684;&#x9ED1;&#x767D;&#x4EAE;&#x5EA6;&#x503C;&#x3002;</li><li>&#x9AD8;&#x65AF;&#x566A;&#x58F0;&#xFF1A;&#x542B;&#x6709;&#x4EAE;&#x5EA6;&#x670D;&#x4ECE;&#x9AD8;&#x65AF;&#x6216;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x7684;&#x566A;&#x58F0;&#x3002;&#x9AD8;&#x65AF;&#x566A;&#x58F0;&#x662F;&#x5F88;&#x591A;&#x4F20;&#x611F;&#x5668;&#x566A;&#x58F0;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x5982;&#x6444;&#x50CF;&#x673A;&#x7684;&#x7535;&#x5B50;&#x5E72;&#x6270;&#x566A;&#x58F0;&#x3002;</li></ul><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#x9AD8;&#x65AF;&#x566A;&#x58F0;&#xFF0C;&#x767D;&#x566A;&#x58F0;&#xFF0C;&#x9AD8;&#x65AF;&#x767D;&#x566A;&#x58F0;&#x7684;&#x533A;&#x522B;&#x662F;&#x5565;&#xFF1F;</p><h3 id="&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;">&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;</h3><ol type="1"><li>&#x6700;&#x7B80;&#x5355;&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;&#x662F;&#x5C40;&#x90E8;&#x5747;&#x503C;&#x8FD0;&#x7B97;&#xFF0C;&#x5373;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x53EA;&#x7528;&#x5176;&#x5C40;&#x90E8;&#x90BB;&#x57DF;&#x5185;&#x6240;&#x6709;&#x503C;&#x7684;&#x5E73;&#x5747;&#x503C;&#x6765;&#x7F6E;&#x6362;&#xFF1A;<span class="math display">\[h[i,j]=\frac 1 M \sum_{(k,l)\in N}f[k,l] \]</span></li><li>&#x4E5F;&#x53EF;&#x4EE5;&#x52A0;&#x6743;&#xFF0C;&#x4E00;&#x79CD;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5CF0;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x6C34;&#x5E73;&#x548C;&#x5782;&#x76F4;&#x65B9;&#x5411;&#x4E0A;&#x5BF9;&#x79F0;&#x7684;&#x5178;&#x578B;&#x6743;&#x503C;&#x6A21;&#x677F;&#xFF1A; <img src="/posts/1d9c933b/&#x52A0;&#x6743;&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;.jpg"></li></ol><h3 id="&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;">&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;</h3><h4 id="&#x6982;&#x8FF0;-1">&#x6982;&#x8FF0;</h4><p>&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x662F;&#x4E00;&#x7C7B;&#x6839;&#x636E;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x72B6;&#x6765;&#x9009;&#x62E9;&#x6743;&#x503C;&#x7684;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;&#x3002;<br>&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x5BF9;&#x53BB;&#x9664;&#x670D;&#x4ECE;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x7684;&#x566A;&#x58F0;&#x662F;&#x5F88;&#x6709;&#x6548;&#x7684;&#x3002;</p><h4 id="&#x8BA1;&#x7B97;">&#x8BA1;&#x7B97;</h4><p>&#x4E8C;&#x7EF4;&#x96F6;&#x5747;&#x503C;&#x79BB;&#x6563;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x4E3A;&#xFF1A; <img src="/posts/1d9c933b/&#x4E8C;&#x7EF4;&#x96F6;&#x5747;&#x503C;&#x79BB;&#x6563;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;.jpg"> &#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x601D;&#x60F3;&#xFF1A;&#x968F;&#x7740;&#x8DDD;&#x79BB;&#x7684;&#x589E;&#x5927;&#xFF0C;&#x5BF9;&#x4E2D;&#x5FC3;&#x50CF;&#x7D20;&#x7684;&#x5F71;&#x54CD;&#x51CF;&#x5C0F;&#x3002;</p><h4 id="&#x6027;&#x8D28;">&#x6027;&#x8D28;</h4><p>&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x6709;5&#x4E2A;&#x91CD;&#x8981;&#x6027;&#x8D28;&#xFF0C;&#x5176;&#x6027;&#x8D28;&#x51B3;&#x5B9A;&#x4E86;&#x5B83;&#x5728;&#x7A7A;&#x95F4;&#x57DF;&#x548C;&#x9891;&#x7387;&#x57DF;&#x90FD;&#x662F;&#x5F88;&#x597D;&#x7684;&#x4F4E;&#x901A;&#x6EE4;&#x6CE2;&#x5668;&#x3002;</p><ul><li><strong>&#x4E8C;&#x7EF4;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x5177;&#x6709;&#x65CB;&#x8F6C;&#x5BF9;&#x79F0;&#x6027;</strong>&#xFF1A;&#x6EE4;&#x6CE2;&#x5668;&#x5728;&#x5404;&#x4E2A;&#x65B9;&#x5411;&#x5E73;&#x6ED1;&#x7A0B;&#x5EA6;&#x4E00;&#x81F4;&#x3002;&#x65CB;&#x8F6C;&#x5BF9;&#x79F0;&#x6027;&#x610F;&#x5473;&#x7740;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x5728;&#x540E;&#x7EED;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x4E2D;&#x4E0D;&#x4F1A;&#x504F;&#x5411;&#x4EFB;&#x4E00;&#x65B9;&#x5411;&#x3002;</li><li><strong>&#x9AD8;&#x65AF;&#x662F;&#x5355;&#x503C;&#x51FD;&#x6570;</strong>&#xFF1A;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x5668;&#x7528;&#x50CF;&#x7D20;&#x90BB;&#x57DF;&#x7684;&#x52A0;&#x6743;&#x503C;&#x6765;&#x4EE3;&#x66FF;&#x8BE5;&#x70B9;&#x7684;&#x50CF;&#x7D20;&#x503C;&#xFF0C;&#x6BCF;&#x4E00;&#x90BB;&#x57DF;&#x50CF;&#x7D20;&#x70B9;&#x6743;&#x503C;&#x662F;&#x968F;&#x8BE5;&#x70B9;&#x4E0E;&#x4E2D;&#x5FC3;&#x70B9;&#x7684;&#x8DDD;&#x79BB;&#x5355;&#x8C03;&#x589E;&#x51CF;&#x7684;&#x3002;&#x5E73;&#x6ED1;&#x8FD0;&#x7B97;&#x5BF9;&#x79BB;&#x7B97;&#x5B50;&#x4E2D;&#x5FC3;&#x8D8A;&#x8FDC;&#x7684;&#x70B9;&#xFF0C;&#x4F5C;&#x7528;&#x8D8A;&#x5C0F;&#x3002;</li><li><strong>&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x7684;&#x5085;&#x7ACB;&#x53F6;&#x53D8;&#x6362;&#x9891;&#x8C31;&#x662F;&#x5355;&#x74E3;&#x7684;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x5E38;&#x88AB;&#x4E0D;&#x5E0C;&#x671B;&#x7684;&#x9AD8;&#x9891;&#x4FE1;&#x53F7;&#x6240;&#x6C61;&#x67D3;&#xFF0C;&#x5E73;&#x6ED1;&#x56FE;&#x50CF;&#x4E0D;&#x4F1A;&#x88AB;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x9AD8;&#x9891;&#x566A;&#x58F0;&#x6C61;&#x67D3;&#xFF0C;&#x53EF;&#x4EE5;&#x4FDD;&#x7559;&#x5927;&#x90E8;&#x5206;&#x4FE1;&#x53F7;&#x3002;</li><li><strong>&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x5668;&#x5BBD;&#x5EA6;&#x662F;&#x7531;&#x53C2;&#x6570;<span class="math inline">\(\sigma\)</span>&#x8868;&#x793A;&#x7684;</strong>&#xFF1A;<span class="math inline">\(\sigma\)</span>&#x8D8A;&#x5927;&#xFF0C;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x65F6;&#x57DF;&#x8D8A;&#x5BBD;&#xFF0C;&#x9891;&#x5E26;&#x8D8A;&#x7A84;&#xFF0C;&#x5E73;&#x6ED1;&#x7A0B;&#x5EA6;&#x8D8A;&#x597D;&#x3002;&#x53EF;&#x4EE5;&#x8C03;&#x8282;<span class="math inline">\(\sigma\)</span> &#xFF0C;&#x4F7F;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#x5728;&#x8FC7;&#x5206;&#x6A21;&#x7CCA;&#xFF08;&#x8FC7;&#x5E73;&#x6ED1;&#xFF09;&#x4E0E;&#x5E73;&#x6ED1;&#x56FE;&#x50CF;&#x4E2D;&#x7531;&#x4E8E;&#x566A;&#x58F0;&#x548C;&#x7EC6;&#x7EB9;&#x7406;&#x6240;&#x5F15;&#x8D77;&#x7684;&#x8FC7;&#x591A;&#x4E0D;&#x5E0C;&#x671B;&#x7A81;&#x53D8;&#x91CF;&#xFF08;&#x6B20;&#x5E73;&#x6ED1;&#xFF09;&#x4E4B;&#x95F4;&#x53D6;&#x6298;&#x4E2D;&#x3002;</li><li><strong>&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x6709;&#x53EF;&#x5206;&#x79BB;&#x6027;</strong>&#xFF1A;&#x5B9E;&#x73B0;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x65F6;&#x53EF;&#x5206;&#x6B65;&#x8FDB;&#x884C;&#x3002;</li></ul><h2 id="&#x975E;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;">&#x975E;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;</h2><h3 id="&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;">&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;</h3><h4 id="&#x6982;&#x8FF0;-2">&#x6982;&#x8FF0;</h4><p>&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x548C;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x8FD0;&#x7B97;&#x4E3B;&#x8981;&#x95EE;&#x9898;&#x662F;&#x6709;&#x53EF;&#x80FD;&#x6A21;&#x7CCA;&#x56FE;&#x50CF;&#x4E2D;&#x5C16;&#x9510;&#x4E0D;&#x8FDE;&#x7EED;&#x7684;&#x90E8;&#x5206;&#x3002;</p><p>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x4F7F;&#x7528;&#x50CF;&#x7D20;&#x70B9;&#x90BB;&#x57DF;&#x7070;&#x5EA6;&#x503C;&#x7684;&#x4E2D;&#x503C;&#x6765;&#x4EE3;&#x66FF;&#x8BE5;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x7070;&#x5EA6;&#x503C;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x53BB;&#x9664;&#x8109;&#x51B2;&#x566A;&#x58F0;&#x3001;&#x6912;&#x76D0;&#x566A;&#x58F0;&#x540C;&#x65F6;&#x4FDD;&#x7559;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x7EC6;&#x8282;&#x3002;</p><p>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x4E0D;&#x4F9D;&#x8D56;&#x4E8E;&#x90BB;&#x57DF;&#x5185;&#x4E0E;&#x5178;&#x578B;&#x503C;&#x5DEE;&#x522B;&#x5F88;&#x5927;&#x7684;&#x503C;&#xFF0C;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x4E0D;&#x8FDB;&#x884C;&#x52A0;&#x6743;&#x8FD0;&#x7B97;&#x3002;</p><h4 id="&#x8BA1;&#x7B97;-1">&#x8BA1;&#x7B97;</h4><ol type="1"><li>&#x6309;&#x4EAE;&#x5EA6;&#x503C;&#x5927;&#x5C0F;&#x6392;&#x5217;&#x50CF;&#x7D20;&#x70B9;</li><li>&#x9009;&#x62E9;&#x6392;&#x5E8F;&#x50CF;&#x7D20;&#x96C6;&#x7684;&#x4E2D;&#x95F4;&#x503C;&#x4F5C;&#x4E3A;&#x70B9;[i&#xFF0C;j]&#x7684;&#x65B0;&#x503C;</li><li>&#x4E00;&#x822C;&#x91C7;&#x7528;&#x5947;&#x6570;&#x70B9;&#x7684;&#x90BB;&#x57DF;&#x8BA1;&#x7B97;&#x4E2D;&#x503C;&#xFF0C;&#x5982;&#x679C;&#x50CF;&#x7D20;&#x70B9;&#x6570;&#x4E3A;&#x5076;&#x6570;&#xFF0C;&#x5219;&#x4E2D;&#x503C;&#x5C31;&#x53D6;&#x6392;&#x5E8F;&#x50CF;&#x7D20;&#x4E2D;&#x95F4;&#x4E24;&#x70B9;&#x7684;&#x5E73;&#x5747;&#x503C;&#x3002;</li></ol><p>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5728;&#x4E00;&#x5B9A;&#x6761;&#x4EF6;&#x4E0B;&#x53EF;&#x4EE5;&#x514B;&#x670D;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;&#x6240;&#x9020;&#x6210;&#x7684;&#x56FE;&#x50CF;&#x7EC6;&#x8282;&#x6A21;&#x7CCA;&#xFF0C;&#x800C;&#x5BF9;&#x6EE4;&#x9664;&#x8109;&#x51B2;&#x5E72;&#x6270;&#x5F88;&#x6709;&#x6548;&#x3002;</p><h3 id="&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;">&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;</h3><h4 id="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4F7F;&#x7528;&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;">&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4F7F;&#x7528;&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;</h4><ul><li>&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#xFF1A;&#x5E73;&#x6ED1;&#x56FE;&#x50CF;&#x5916;&#x8FD8;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x6A21;&#x7CCA;&#xFF1B;<br></li><li>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#xFF1A;&#x53BB;&#x9664;&#x8109;&#x51B2;&#x566A;&#x58F0;&#x7684;&#x540C;&#x65F6;&#x53EF;&#x80FD;&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x7684;&#x7EBF;&#x6761;&#x7EC6;&#x8282;&#x6EE4;&#x9664;&#x3002;</li></ul><p>&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;&#x662F;&#x5728;&#x7EFC;&#x5408;&#x8003;&#x8651;&#x4E86;&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;&#x548C;&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x4F18;&#x7F3A;&#x70B9;&#x540E;&#x53D1;&#x5C55;&#x8D77;&#x6765;&#x7684;&#xFF0C;&#x5B83;&#x7684;&#x7279;&#x70B9;&#x662F;&#xFF1A;&#x6EE4;&#x6CE2;&#x5668;&#x5728;&#x9664;&#x566A;&#x58F0;&#x8109;&#x51B2;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x53C8;&#x4E0D;&#x81F3;&#x4E8E;&#x4F7F;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x5341;&#x5206;&#x6A21;&#x7CCA;&#x3002;</p><h4 id="&#x8BA1;&#x7B97;-2">&#x8BA1;&#x7B97;</h4><ol type="1"><li>&#x5BF9;&#x7070;&#x5EA6;&#x56FE;&#x8C61;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;[i&#xFF0C;j]&#x53D6;&#x9002;&#x5F53;&#x5927;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;&#x90BB;&#x57DF;&#xFF08;3&#xD7;3&#x90BB;&#x57DF;&#xFF09;</li><li>&#x5206;&#x522B;&#x8BA1;&#x7B97;[i&#xFF0C;j]&#x7684;<strong>&#x5DE6;&#x4E0A;&#x89D2;</strong>&#x5B50;&#x90BB;&#x57DF;&#x3001;<strong>&#x5DE6;&#x4E0B;&#x89D2;</strong>&#x5B50;&#x90BB;&#x57DF;&#x3001;<strong>&#x53F3;&#x4E0A;&#x89D2;</strong>&#x5B50;&#x90BB;&#x57DF;&#x3001;<strong>&#x53F3;&#x4E0B;&#x89D2;</strong>&#x5B50;&#x90BB;&#x57DF;&#x7684;&#x7070;&#x5EA6;&#x5206;&#x5E03;&#x5747;&#x5300;&#x5EA6;V</li><li>&#x7136;&#x540E;&#x53D6;&#x6700;&#x5C0F;&#x5747;&#x5300;&#x5EA6;&#x5BF9;&#x5E94;&#x533A;&#x57DF;&#x7684;&#x5747;&#x503C;&#x4F5C;&#x4E3A;&#x8BE5;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x65B0;&#x7070;&#x5EA6;&#x503C;&#x3002;<span class="math display">\[V=\sum f^2[i,j]-(\sum f[i,j])^2/N\]</span>&#x6216;&#x8005;<span class="math display">\[V=\sum (f[i,j]-\bar f[i,j])^2\]</span></li></ol><h4 id="&#x4E3E;&#x4F8B;">&#x4E3E;&#x4F8B;</h4><p>&#x4F8B;&#xFF1A;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x90BB;&#x57DF;&#x7684;&#x5747;&#x5300;&#x5EA6;&#x5206;&#x5E03; <img src="/posts/1d9c933b/&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;&#x8BA1;&#x7B97;.jpg"> &#x7531;&#x8BA1;&#x7B97;&#x53EF;&#x77E5;&#xFF0C;&#x5206;&#x5E03;&#x8D8A;&#x5747;&#x5300;&#xFF0C;V&#x503C;&#x8D8A;&#x5C0F;&#x3002;</p><h2 id="&#x8FB9;&#x7F18;&#x4E0E;&#x8F6E;&#x5ED3;">&#x8FB9;&#x7F18;&#x4E0E;&#x8F6E;&#x5ED3;</h2><h3 id="&#x5B9A;&#x4E49;">&#x5B9A;&#x4E49;</h3><ul><li>&#x8FB9;&#x7F18;&#x662F;&#x6307;&#x56FE;&#x50CF;&#x5C40;&#x90E8;&#x4EAE;&#x5EA6;&#x53D8;&#x5316;&#x6700;&#x663E;&#x8457;&#x7684;&#x90E8;&#x5206;</li><li>&#x8FB9;&#x7F18;&#x7684;&#x8FDE;&#x63A5;&#x6784;&#x6210;&#x8F6E;&#x5ED3;&#x3002;</li><li>&#x8F6E;&#x5ED3;&#x662F;&#x7269;&#x4F53;&#x5728;&#x573A;&#x666F;&#x4E2D;&#x7684;&#x5B8C;&#x6574;&#x8FB9;&#x754C;&#x3002;</li></ul><h3 id="&#x56FE;&#x50CF;&#x7684;&#x4EAE;&#x5EA6;&#x53D8;&#x5316;">&#x56FE;&#x50CF;&#x7684;&#x4EAE;&#x5EA6;&#x53D8;&#x5316;</h3><ul><li><strong>&#x9636;&#x8DC3;&#x4E0D;&#x8FDE;&#x7EED;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x4EAE;&#x5EA6;&#x5728;&#x4E0D;&#x8FDE;&#x7EED;&#x5904;&#x4E24;&#x8FB9;&#x7684;&#x50CF;&#x7D20;&#x7070;&#x5EA6;&#x503C;&#x6709;&#x7740;&#x663E;&#x8457;&#x7684;&#x5DEE;&#x5F02;&#x3002;</li><li><strong>&#x7EBF;&#x6761;&#x4E0D;&#x8FDE;&#x7EED;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x4EAE;&#x5EA6;&#x7A81;&#x7136;&#x4ECE;&#x4E00;&#x4E2A;&#x503C;&#x53D8;&#x5316;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;<strong>&#x4FDD;&#x6301;&#x4E00;&#x4E2A;&#x8F83;&#x5C0F;&#x7684;&#x884C;&#x7A0B;</strong>&#x540E;&#x53C8;&#x8FD4;&#x56DE;&#x5230;&#x539F;&#x6765;&#x7684;&#x503C;&#x3002;</li></ul><p>&#x4EE5;&#x4E0A;&#x662F;&#x7406;&#x60F3;&#x72B6;&#x6001;&#xFF0C;&#x5B9E;&#x9645;&#x4E2D;&#x7531;&#x4E8E;&#x5927;&#x591A;&#x6570;&#x4F20;&#x611F;&#x5668;&#x5143;&#x4EF6;&#x5177;&#x6709;&#x4F4E;&#x9891;&#x7279;&#x6027;&#xFF0C;&#x4F7F;&#x5F97;&#x9636;&#x8DC3;&#x8FB9;&#x7F18;&#x53D8;&#x6210;&#x659C;&#x5761;&#x5F62;&#x8FB9;&#x7F18;&#xFF0C;&#x7EBF;&#x6761;&#x8FB9;&#x7F18;&#x53D8;&#x6210;&#x5C4B;&#x9876;&#x5F62;&#x8FB9;&#x7F18;&#x3002;</p><h3 id="&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x8FB9;&#x754C;">&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x8FB9;&#x754C;</h3><p><img src="/posts/1d9c933b/&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x8FB9;&#x754C;.jpg"></p><h3 id="&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;">&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;</h3><h4 id="&#x4E00;&#x4E9B;&#x672F;&#x8BED;">&#x4E00;&#x4E9B;&#x672F;&#x8BED;</h4><ul><li><strong>&#x8FB9;&#x7F18;&#x70B9;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x4E2D;&#x4EAE;&#x5EA6;&#x663E;&#x8457;&#x53D8;&#x5316;&#x7684;&#x70B9;&#x3002;</li><li><strong>&#x8FB9;&#x7F18;&#x6BB5;</strong>&#xFF1A;&#x8FB9;&#x7F18;&#x70B9;&#x5750;&#x6807;[i,j]&#x53CA;&#x5176;&#x65B9;&#x5411;&#x3B8;&#x7684;&#x603B;&#x548C;&#xFF0C;&#x8FB9;&#x7F18;&#x7684;&#x65B9;&#x5411;&#x53EF;&#x4EE5;&#x662F;&#x68AF;&#x5EA6;&#x503C;&#x3002;</li><li><strong>&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x5668;</strong>&#xFF1A;&#x4ECE;&#x56FE;&#x50CF;&#x4E2D;&#x62BD;&#x53D6;&#x8FB9;&#x7F18;&#xFF08;&#x8FB9;&#x7F18;&#x70B9;&#x6216;&#x8FB9;&#x7F18;&#x7EBF;&#x6BB5;&#xFF09;&#x96C6;&#x5408;&#x7684;&#x7B97;&#x6CD5;&#x3002;</li><li><strong>&#x8F6E;&#x5ED3;</strong>&#xFF1A;&#x8FB9;&#x7F18;&#x5217;&#x8868;&#xFF0C;&#x6216;&#x662F;&#x4E00;&#x6761;&#x8FB9;&#x7F18;&#x5217;&#x8868;&#x7684;&#x66F2;&#x7EBF;&#x6A21;&#x578B;&#x3002;</li><li><strong>&#x8FB9;&#x7F18;&#x8FDE;&#x63A5;</strong>&#xFF1A;&#x4ECE;&#x65E0;&#x5E8F;&#x8FB9;&#x7F18;&#x8868;&#x5F62;&#x6210;&#x6709;&#x5E8F;&#x8FB9;&#x7F18;&#x8868;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E60;&#x60EF;&#x4E0A;&#x8FB9;&#x7F18;&#x7684;&#x8868;&#x793A;&#x7528;&#x987A;&#x65F6;&#x9488;&#x65B9;&#x5411;&#x6765;&#x6392;&#x5E8F;&#x3002;</li><li><strong>&#x8FB9;&#x7F18;&#x8DDF;&#x8E2A;</strong>&#xFF1A;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x786E;&#x5B9A;&#x8F6E;&#x5ED3;&#x56FE;&#x50CF;&#x7684;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;&#x3002;</li></ul><h3 id="&#x68AF;&#x5EA6;">&#x68AF;&#x5EA6;</h3><p>&#x4E00;&#x7EF4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9636;&#x8DC3;&#x8FB9;&#x7F18;&#xFF08;&#x5C31;&#x662F;&#x524D;&#x9762;&#x7684;&#x7531;&#x9ED1;&#x7A81;&#x7136;&#x53D8;&#x767D;&#xFF09;&#x540C;&#x56FE;&#x50CF;&#x7684;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#x5C40;&#x90E8;&#x5CF0;&#x503C;&#xFF08;&#x77AC;&#x95F4;&#x53D8;&#x767D;&#xFF09;&#x6709;&#x5173;&#x3002;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x503C;&#x7684;&#x663E;&#x8457;&#x53D8;&#x5316;&#x53EF;&#x7528;&#x68AF;&#x5EA6;&#x7684;&#x79BB;&#x6563;&#x903C;&#x8FD1;&#x51FD;&#x6570;&#x6765;&#x68C0;&#x6D4B;&#xFF0C;&#x68AF;&#x5EA6;&#x662F;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#x7684;&#x4E8C;&#x7EF4;&#x7B49;&#x6548;&#x5F0F;&#xFF1A; <span class="math display">\[G(x,y)=[G_x,G_y]=[\frac {\partial f}{\partial x},\frac {\partial f}{\partial y}]\]</span> &#x68AF;&#x5EA6;&#x7684;&#x5E45;&#x5EA6;&#x503C; <span class="math display">\[|G(x,y)|=\sqrt{G_x^2+G_y^2}\]</span> &#x6216;&#x8005; <span class="math display">\[|G(x,y)|=|G_x|+|G_y|\]</span> &#x68AF;&#x5EA6;&#x7684;&#x5E45;&#x5EA6;&#x503C;&#x662F;&#x4E0E;&#x65B9;&#x5411;&#x65E0;&#x5173;&#x7684;&#xFF0C;&#x7B97;&#x5B50;&#x662F;<strong>&#x5404;&#x5411;&#x540C;&#x6027;</strong>&#x7B97;&#x5B50;&#x3002;</p><p>&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x4E2D;&#xFF0C;&#x5BFC;&#x6570;&#x7528;&#x5DEE;&#x5206;&#x8868;&#x793A;&#xFF1A; <span class="math display">\[G_x=f[i,j+1]-f[i,j]  \\G_y=f[i,j]-f[i+1,j]\]</span></p><h3 id="&#x4E00;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;">&#x4E00;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;</h3><h4 id="roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;">Roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;</h4><p>Roberts&#x7B97;&#x5B50;&#x4E3A;&#x68AF;&#x5EA6;&#x5E45;&#x5EA6;&#x503C;&#x8BA1;&#x7B97;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x7684;&#x8FD1;&#x4F3C;&#xFF1A; <span class="math display">\[|G[i,j]|=|f[i,j]-f[i+1,j+1]|+|f[i+1&#xFF0C;j]-f[i,j+1]|\]</span> &#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;<span class="math inline">\(|G[i,j]|=|G_x|+|G_y|\)</span></p><p>&#x6A21;&#x677F;&#x5377;&#x79EF;&#xFF1A; <img src="/posts/1d9c933b/Roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;gx.jpg"> <img src="/posts/1d9c933b/Roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;gy.jpg"></p><h4 id="sobel&#x7B97;&#x5B50;">Sobel&#x7B97;&#x5B50;</h4><p>Sobel&#x7B97;&#x5B50;&#x4E3A;&#x68AF;&#x5EA6;&#x5E45;&#x5EA6;&#x503C;&#x8BA1;&#x7B97;&#xFF1A; <span class="math display">\[M=\sqrt{s_x^2+s_y^2}\]</span> &#x5176;&#x4E2D; <span class="math display">\[s_x = (a_2+ca_3+a_4)-(a_0+ca_7+a6)  \\s_y =(a_0+ca_1+a_2)-(a_6+ca_5+a4)  \\c = 2\]</span></p><p>&#x5BF9;&#x5E94;&#x7684;&#x56FE;&#x662F; <img src="/posts/1d9c933b/Sobel&#x7B97;&#x5B50;&#x56FE;1.jpg"> Gx&#x548C;Gy&#x6A21;&#x677F;&#x662F;&#xFF1A; <img src="/posts/1d9c933b/Sobel&#x7B97;&#x5B50;gxgy.jpg"></p><h4 id="prewitt&#x7B97;&#x5B50;">Prewitt&#x7B97;&#x5B50;</h4><p>Prewitt&#x7B97;&#x5B50;&#x548C;Sobel&#x7B97;&#x5B50;&#x65B9;&#x7A0B;&#x4E00;&#x6837;&#xFF1A; <span class="math display">\[M=\sqrt{s_x^2+s_y^2}\]</span> &#x5176;&#x4E2D; <span class="math display">\[s_x = (a_2+ca_3+a_4)-(a_0+ca_7+a6)  \\s_y =(a_0+ca_1+a_2)-(a_6+ca_5+a4)  \\c = 1\]</span> &#x5BF9;&#x5E94;&#x7684;&#x56FE;&#x662F; <img src="/posts/1d9c933b/Sobel&#x7B97;&#x5B50;&#x56FE;1.jpg"> Gx&#x548C;Gy&#x6A21;&#x677F;&#x662F;&#xFF1A; <img src="/posts/1d9c933b/Prewitt&#x7B97;&#x5B50;gxgy.jpg"></p><h3 id="&#x4E8C;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;">&#x4E8C;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;</h3><p><strong>&#x63D0;&#x51FA;&#x7684;&#x539F;&#x56E0;</strong>&#xFF1A;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#x7684;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x5668;&#x4F1A;&#x5BFC;&#x81F4;&#x8FB9;&#x7F18;&#x70B9;&#x68C0;&#x6D4B;&#x592A;&#x591A;&#x3002;</p><p><strong>&#x89E3;&#x51B3;&#x601D;&#x8DEF;</strong>&#xFF1A;&#x4F7F;&#x7528;&#x68AF;&#x5EA6;&#x503C;&#x7684;&#x6781;&#x5927;&#x503C;&#x5BF9;&#x5E94;&#x70B9;&#x4F5C;&#x4E3A;&#x8FB9;&#x7F18;&#x70B9;&#xFF0C;&#x5BF9;&#x5E94;&#x7740;&#x4E8C;&#x9636;&#x5BFC;&#x6570;&#x96F6;&#x4EA4;&#x53C9;&#x70B9;&#x3002; <img src="/posts/1d9c933b/&#x4E8C;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x539F;&#x7406;.jpg"></p><h4 id="&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;">&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;</h4><p>&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;&#x662F;&#x4E8C;&#x9636;&#x5BFC;&#x6570;&#x7684;&#x4E8C;&#x7EF4;&#x7B49;&#x6548;&#x5F0F;&#xFF1A;</p><p>&#x5DEE;&#x5206;&#x8868;&#x793A;&#x4E3A;&#xFF1A; <img src="/posts/1d9c933b/&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;&#x5DEE;&#x5206;&#x8868;&#x793A;.jpg"> &#x5377;&#x53CA;&#x6A21;&#x677F;&#x4E3A;&#xFF1A; <img src="/posts/1d9c933b/&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;&#x5377;&#x79EF;&#x6838;.jpg"></p><h4 id="canny&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;">Canny&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;</h4><ol type="1"><li>&#x7528;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x5E73;&#x6ED1;&#x56FE;&#x50CF;</li><li>&#x7528;&#x4E00;&#x9636;&#x504F;&#x5BFC;&#x6570;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6765;&#x8BA1;&#x7B97;&#x56FE;&#x50CF;&#x7684;&#x68AF;&#x5EA6;&#x7684;&#x5E45;&#x5EA6;&#x548C;&#x65B9;&#x5411;</li><li>&#x5BF9;&#x68AF;&#x5EA6;&#x5E45;&#x5EA6;&#x503C;&#x8FDB;&#x884C;&#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236;&#xFF08;NMS&#xFF09;</li><li>&#x7528;&#x53CC;&#x9608;&#x503C;&#x7B97;&#x6CD5;&#x68C0;&#x6D4B;&#x548C;&#x8FDE;&#x63A5;&#x8FB9;&#x7F18;</li></ol><p>&#x8BE6;&#x7EC6;&#x8BF4;&#x660E;&#x5982;&#x4E0B;&#xFF1A; I[i,j]&#x8868;&#x793A;&#x56FE;&#x50CF;&#xFF0C;&#x4F7F;&#x7528;&#x53EF;&#x5206;&#x79BB;&#x6EE4;&#x6CE2;&#x65B9;&#x6CD5;&#x6C42;&#x53D6;&#x56FE;&#x50CF;&#x4E0E;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x5377;&#x79EF;&#xFF0C;&#x5F97;&#x5230;&#x5E73;&#x6ED1;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF1A; <span class="math display">\[S[i,j]=G[i,j;\sigma]*I[i,j]\]</span> &#x5E73;&#x6ED1;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x9635;&#x5217;S[i,j]&#x7684;&#x68AF;&#x5EA6;&#x53EF;&#x4EE5;&#x7528;2&#xD7;2&#x7684;&#x4E00;&#x9636;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x8FD1;&#x4F3C;&#x8BA1;&#x7B97;&#xFF0C;x&#x548C;y&#x65B9;&#x5411;&#x7684;&#x504F;&#x5BFC;&#x6570;P[i,j]&#x4E0E;Q[i,j]: <span class="math display">\[P[i,j]\approx(S[i,j+1]-S[i,j]+S[i+1,j+1]-S[i+1,j])/2  \\Q[i,j]\approx(S[i,j]-S[i+1,j]+S[i,j+1]-S[i+1,j+1])/2\]</span> <span class="math inline">\(P[i,j]\)</span>&#x4E0E;<span class="math inline">\(Q[i,j]\)</span>&#x662F;2&#xD7;2&#x6B63;&#x65B9;&#x5F62;&#x5185;&#x6C42;&#x5F97;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x7684;&#x5747;&#x503C;</p><p>&#x68AF;&#x5EA6;&#x5E45;&#x5EA6;&#x503C;&#x548C;&#x65B9;&#x5411;&#x89D2;&#x5206;&#x522B;&#x662F;&#xFF1A; <span class="math display">\[M[i,j]=\sqrt{P^2[i,j]+Q^2[i,j]} \\\theta[i,j]=arctan(P[i,j]/Q[i,j])\]</span> &#x8001;&#x5E08;&#x7684;PPT&#x91CC;<span class="math inline">\(arctan()\)</span>&#x91CC;&#x6709;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5E94;&#x8BE5;&#x8868;&#x793A;&#x7684;&#x662F;&#x9664;&#x6CD5;&#x5173;&#x7CFB;&#x3002;</p><p><strong>&#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236;</strong>&#xFF1A;</p><ol type="1"><li>&#x7B97;&#x6CD5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;3&#xD7;3&#x90BB;&#x57DF;&#x4F5C;&#x7528;&#x5728;&#x5E45;&#x503C;&#x9635;&#x5217;M[i,j]&#x7684;&#x6240;&#x6709;&#x70B9;&#x4E0A;&#xFF1B;</li><li>&#x6BCF;&#x4E00;&#x4E2A;&#x70B9;&#x4E0A;&#xFF0C;&#x90BB;&#x57DF;&#x7684;&#x4E2D;&#x5FC3;&#x50CF;&#x7D20;M[i,j]&#x4E0E;&#x6CBF;&#x7740;&#x68AF;&#x5EA6;&#x7EBF;&#x7684;&#x4E24;&#x4E2A;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;&#x5176;&#x4E2D;&#x68AF;&#x5EA6;&#x7EBF;&#x662F;&#x7531;&#x90BB;&#x57DF;&#x7684;&#x4E2D;&#x5FC3;&#x70B9;&#x5904;&#x7684;&#x6247;&#x533A;&#x503C;<span class="math inline">\(&#x3B6;[i,j]\)</span>&#x7ED9;&#x51FA;&#x3002;</li><li>&#x5982;&#x679C;&#x5728;&#x90BB;&#x57DF;&#x4E2D;&#x5FC3;&#x70B9;&#x5904;&#x7684;&#x5E45;&#x503C;M[i,j]&#x4E0D;&#x6BD4;&#x68AF;&#x5EA6;&#x7EBF;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x4E24;&#x4E2A;&#x76F8;&#x90BB;&#x70B9;&#x5E45;&#x503C;&#x5927;&#xFF0C;&#x5219;M[i,j]&#x8D4B;&#x503C;&#x4E3A;&#x96F6;&#xFF0C;&#x5426;&#x5219;&#x7EF4;&#x6301;&#x539F;&#x503C;&#xFF1B;</li><li>&#x6B64;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x628A;M[i,j]&#x5BBD;&#x5C4B;&#x810A;&#x5E26;&#x7EC6;&#x5316;&#x6210;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x5BBD;&#xFF0C;&#x5373;&#x4FDD;&#x7559;&#x5C4B;&#x810A;&#x7684;&#x9AD8;&#x5EA6;&#x503C;&#x3002;</li></ol><h2 id="&#x94FE;&#x7801;&#x8F6E;&#x5ED3;&#x8868;&#x793A;">&#x94FE;&#x7801;&#x8F6E;&#x5ED3;&#x8868;&#x793A;</h2><p>&#x94FE;&#x7801;&#xFF1A;&#x6CBF;&#x7740;&#x8F6E;&#x5ED3;&#x8BB0;&#x5F55;&#x8FB9;&#x7F18;&#x8868;&#x7684;&#x4E00;&#x79CD;&#x8868;&#x793A;&#x65B9;&#x6CD5;&#x3002;&#x89C4;&#x5B9A;&#x4E86;&#x8FB9;&#x7F18;&#x8868;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x8FB9;&#x7F18;&#x70B9;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x8F6E;&#x5ED3;&#x65B9;&#x5411;&#xFF0C;&#x8F6E;&#x5ED3;&#x65B9;&#x5411;&#x88AB;&#x91CF;&#x5316;&#x4E3A;4&#x90BB;&#x70B9;&#x94FE;&#x7801;&#x6216;8&#x90BB;&#x70B9;&#x94FE;&#x7801;&#x3002; <img src="/posts/1d9c933b/&#x94FE;&#x7801;&#x8F6E;&#x5ED3;&#x8868;&#x793A;.jpg"></p><p>&#x4E3E;&#x4F8B;&#xFF1A; <img src="/posts/1d9c933b/&#x94FE;&#x7801;&#x4F8B;&#x5B50;1.jpg"> <img src="/posts/1d9c933b/&#x94FE;&#x7801;&#x4F8B;&#x5B50;2.jpg"></p><p>&#x94FE;&#x7801;&#x7684;&#x5FAE;&#x5206;&#xFF08;&#x5DEE;&#x5206;&#x94FE;&#x7801;&#xFF09;&#x53EF;&#x7531;&#x539F;&#x94FE;&#x7801;&#x7684;&#x4E00;&#x9636;&#x5DEE;&#x5206;&#x6C42;&#x5F97;&#x3002;&#x5DEE;&#x5206;&#x94FE;&#x7801;&#x5177;&#x6709;&#x65CB;&#x8F6C;&#x4E0D;&#x53D8;&#x6027;&#xFF0C;&#x53EF;&#x7528;&#x4E8E;&#x624B;&#x5199;&#x4F53;&#x8BC6;&#x522B;&#x3002; <img src="/posts/1d9c933b/&#x5DEE;&#x5206;&#x94FE;&#x7801;1.jpg"> <img src="/posts/1d9c933b/&#x5DEE;&#x5206;&#x94FE;&#x7801;2.jpg"> &#x8BA1;&#x7B97;&#x65B9;&#x6CD5;&#xFF1A;&#x540E;&#x9762;&#x7684;&#x51CF;&#x524D;&#x9762;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5C0F;&#x4E8E;&#x96F6;&#xFF0C;&#x5219;&#x52A0;&#x4E0A;8&#x3002;</p><h2 id="hough&#x53D8;&#x6362;">Hough&#x53D8;&#x6362;</h2><h3 id="&#x6982;&#x8FF0;-3">&#x6982;&#x8FF0;</h3><ul><li>Hough&#x53D8;&#x6362;&#x662F;&#x5229;&#x7528;&#x56FE;&#x50CF;&#x5168;&#x5C40;&#x7279;&#x6027;&#x800C;&#x5C06;&#x8FB9;&#x7F18;&#x50CF;&#x7D20;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x7EC4;&#x6210;&#x533A;&#x57DF;&#x5C01;&#x95ED;&#x8FB9;&#x754C;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x3002;</li><li>&#x5728;&#x9884;&#x5148;&#x77E5;&#x9053;&#x533A;&#x57DF;&#x5F62;&#x72B6;&#x7684;&#x6761;&#x4EF6;&#x4E0B;&#xFF0C;&#x5229;&#x7528;Hough&#x53D8;&#x6362;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x5F97;&#x5230;&#x8FB9;&#x754C;&#x66F2;&#x7EBF;&#x800C;&#x5C06;&#x4E0D;&#x8FDE;&#x7EED;&#x7684;&#x8FB9;&#x7F18;&#x50CF;&#x7D20;&#x70B9;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;</li><li>&#x4E3B;&#x8981;&#x4F18;&#x70B9;&#x662F;&#x53D7;&#x566A;&#x58F0;&#x548C;&#x66F2;&#x7EBF;&#x95F4;&#x65AD;&#x7684;&#x5F71;&#x54CD;&#x8F83;&#x5C0F;&#x3002;</li><li>Hough&#x53D8;&#x6362;&#x7684;&#x4E3B;&#x8981;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x5728;&#x5DF2;&#x77E5;&#x5F62;&#x72B6;&#x7684;&#x6761;&#x4EF6;&#x4E0B;&#xFF0C;&#x5C06;<strong>&#x66F2;&#x7EBF;&#x4ECE;&#x56FE;&#x50CF;&#x5750;&#x6807;&#x7CFB;&#x53D8;&#x6362;&#x5230;&#x53C2;&#x6570;&#x5750;&#x6807;&#x7CFB;</strong>&#xFF0C;&#x901A;&#x8FC7;&#x7814;&#x7A76;&#x53C2;&#x6570;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x4E00;&#x4E9B;&#x7279;&#x5F81;&#xFF0C;&#x5F97;&#x5230;&#x56FE;&#x50CF;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x8868;&#x793A;&#x3002;</li></ul><h3 id="&#x76F4;&#x7EBF;hough&#x53D8;&#x6362;">&#x76F4;&#x7EBF;Hough&#x53D8;&#x6362;</h3><p>&#x76F4;&#x7EBF;Hough&#x53D8;&#x6362;&#x7528;&#x5230;&#x4E86;<strong>&#x70B9;-&#x7EBF;&#x7684;&#x5BF9;&#x5076;&#x6027;</strong></p><ul><li>&#x5728;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x5171;&#x7EBF;&#x7684;&#x70B9;&#x662F;&#x5728;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x4E2D;&#x91CC;&#x76F8;&#x4EA4;&#x7684;&#x7EBF;&#x3002;&#x53CD;&#x8FC7;&#x6765;&#xFF0C;&#x5728;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x4E2D;&#x76F8;&#x4EA4;&#x4E8E;&#x4E00;&#x4E2A;&#x70B9;&#x7684;&#x6240;&#x6709;&#x76F4;&#x7EBF;&#xFF0C;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x5728;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x90FD;&#x662F;&#x5171;&#x7EBF;&#x7684;&#x70B9;&#x3002;</li><li>Hough&#x53D8;&#x6362;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x5BF9;&#x5076;&#x6027;&#x628A;&#x5728;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x68C0;&#x6D4B;&#x95EE;&#x9898;&#x8F6C;&#x6362;&#x5230;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x91CC;&#x8FDB;&#x884C;&#xFF0C;&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x91CC;&#x7684;&#x7B80;&#x5355;&#x7D2F;&#x52A0;&#x7EDF;&#x8BA1;&#x5B8C;&#x6210;&#x68C0;&#x6D4B;&#x3002;</li><li>&#x76F4;&#x7EBF;Hough&#x53D8;&#x6362;&#x5177;&#x4F53;&#x7D2F;&#x52A0;&#x7EDF;&#x8BA1;&#x8FC7;&#x7A0B;&#x662F;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;2D&#x7D2F;&#x52A0;&#x6570;&#x7EC4;&#x8FDB;&#x884C;&#x3002;</li></ul><p><strong>&#x7D2F;&#x52A0;&#x7EDF;&#x8BA1;</strong>&#xFF1A; 1. &#x5728;&#x53C2;&#x6570;&#x7A7A;&#x95F4;PQ&#x4E2D;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;2D&#x7684;&#x7D2F;&#x52A0;&#x6570;&#x7EC4;A(p,q)&#xFF0C;&#x5176;&#x4E2D;p,q&#x7684;&#x53D8;&#x5316;&#x8303;&#x56F4;&#x662F;<span class="math inline">\([p_min,p_max]\)</span>&#xFF0C;<span class="math inline">\([q_min,q_max]\)</span>&#xFF0C;&#x5206;&#x522B;&#x662F;&#x659C;&#x7387;&#x548C;&#x622A;&#x8DDD;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x3002; 2. &#x5F00;&#x59CB;&#x65F6;&#x7F6E;&#x6570;&#x7EC4;A&#x4E3A;&#x96F6;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x7ED9;&#x5B9A;&#x70B9;&#xFF0C;&#x8BA9;p&#x53D6;&#x904D;P&#x8F74;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x503C;&#xFF0C;&#x6839;&#x636E;&#x516C;&#x5F0F;<span class="math inline">\(q=-px_i+y_i\)</span>&#x8BA1;&#x7B97;&#x5BF9;&#x5E94;&#x7684;q&#x3002; 3. &#x518D;&#x6839;&#x636E;p&#x548C;q&#x7684;&#x503C;&#x5BF9;A&#x7D2F;&#x52A0;<span class="math inline">\(A(p,q)=A(p,q)+1\)</span> 4. &#x7D2F;&#x52A0;&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x6839;&#x636E;A(p,q)&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x6709;&#x591A;&#x5C11;&#x70B9;&#x5171;&#x7EBF;&#xFF0C;&#x5373;A(p,q)&#x7684;&#x503C;&#x5C31;&#x662F;&#x5728;(p,q)&#x5904;&#x5171;&#x7EBF;&#x70B9;&#x7684;&#x4E2A;&#x6570;&#x3002;</p><p>&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x51C6;&#x786E;&#x6027;&#x53D6;&#x51B3;&#x4E8E;&#x7D2F;&#x52A0;&#x6570;&#x7EC4;&#x7684;&#x5C3A;&#x5BF8;&#x3002;<br>&#x5982;&#x679C;&#x628A;P&#x8F74;&#x5212;&#x5206;&#x6210;K&#x4EFD;&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x70B9;(xk,yk)&#x8BA1;&#x7B97;&#x53EF;&#x5F97;q&#x7684;K&#x4E2A;&#x503C;&#x3002;&#x5982;&#x679C;&#x56FE;&#x50CF;&#x4E2D;&#x6709;n&#x4E2A;&#x70B9;&#xFF0C;&#x5219;&#x9700;&#x8981;nK&#x6B21;&#x8FD0;&#x7B97;&#xFF0C;&#x5C0F;&#x4E8E;n2&#x6B21;&#x3002;<br>&#x5982;&#x679C;&#x76F4;&#x7EBF;&#x63A5;&#x8FD1;&#x4E8E;&#x5782;&#x76F4;&#x65B9;&#x5411;&#xFF0C;&#x5219;&#x7531;&#x4E8E;p&#x548C;q&#x7684;&#x503C;&#x90FD;&#x63A5;&#x8FD1;&#x65E0;&#x7A77;&#x800C;&#x4F7F;&#x8BA1;&#x7B97;&#x91CF;&#x9661;&#x589E;&#xFF0C;&#x6240;&#x4EE5;&#x4F7F;&#x7528;&#x76F4;&#x7EBF;&#x7684;&#x6781;&#x5750;&#x6807;&#x65B9;&#x7A0B;&#x8868;&#x793A;<span class="math inline">\(r=x_icos \theta + y_i sin \theta\)</span><br>&#x5219;&#x539F;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x70B9;&#x5BF9;&#x5E94;&#x7740;&#x65B0;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x66F2;&#x7EBF;&#xFF0C;&#x90A3;&#x4E48;&#x539F;&#x6765;&#x7684;&#x70B9;&#x2014;&#x76F4;&#x7EBF;&#x5BF9;&#x5076;&#x53D8;&#x6210;&#x4E86;&#x70B9;&#x2014;&#x66F2;&#x7EBF;&#x5BF9;&#x5076;&#x3002;<br>&#x7D2F;&#x52A0;&#x5668;&#x6570;&#x7EC4;&#x662F;<span class="math inline">\(A(&#x3B8;,&#x3BB;)\)</span></p><h2 id="&#x4E8C;&#x503C;&#x56FE;&#x50CF;">&#x4E8C;&#x503C;&#x56FE;&#x50CF;</h2><h3 id="&#x6982;&#x5FF5;">&#x6982;&#x5FF5;</h3><h4 id="&#x8FD1;&#x90BB;">&#x8FD1;&#x90BB;</h4><ul><li>&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x50CF;&#x7D20;&#x53EA;&#x6709;&#x516C;&#x5171;&#x8FB9;&#x754C;&#xFF0C;&#x5219;&#x79F0;&#x5B83;&#x4EEC;&#x4E92;&#x4E3A;4&#x90BB;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x88AB;&#x8BA4;&#x4E3A;&#x4E0E;&#x5B83;&#x7684;4&#x90BB;&#x70B9;&#x662F;4&#x8FDE;&#x901A;&#x5173;&#x7CFB;</li><li>&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x50CF;&#x7D20;&#x81F3;&#x5C11;&#x5171;&#x4EAB;&#x4E00;&#x4E2A;&#x9876;&#x89D2;&#xFF0C;&#x5219;&#x79F0;&#x5B83;&#x4EEC;&#x4E92;&#x4E3A;8&#x90BB;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x88AB;&#x8BA4;&#x4E3A;&#x4E0E;&#x5B83;&#x7684;8&#x90BB;&#x70B9;&#x662F;8&#x8FDE;&#x901A;&#x5173;&#x7CFB; <img src="/posts/1d9c933b/&#x4E34;&#x70B9;&#x4E0E;&#x8FDE;&#x901A;.jpg"></li></ul><h4 id="&#x8DEF;&#x5F84;">&#x8DEF;&#x5F84;</h4><p>&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x8DEF;&#x5F84;&#x6307;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x5E8F;&#x5217;&#xFF0C;&#x6B64;&#x5E8F;&#x5217;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x4E92;&#x4E3A;&#x90BB;&#x70B9;&#x3002;<br>&#x5982;&#x679C;&#x90BB;&#x70B9;&#x5173;&#x7CFB;&#x662F;4&#x8FDE;&#x901A;&#x7684;&#xFF0C;&#x5219;&#x8DEF;&#x5F84;&#x662F;4&#x8DEF;&#x5F84;<br>&#x5982;&#x679C;&#x90BB;&#x70B9;&#x5173;&#x7CFB;&#x662F;8&#x8FDE;&#x901A;&#x7684;&#xFF0C;&#x5219;&#x8DEF;&#x5F84;&#x662F;8&#x8DEF;&#x5F84; <img src="/posts/1d9c933b/&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8DEF;&#x5F84;.jpg"></p><h4 id="&#x524D;&#x666F;">&#x524D;&#x666F;</h4><p>&#x56FE;&#x50CF;&#x4E2D;&#x503C;&#x4E3A;1&#x7684;&#x5168;&#x90E8;&#x50CF;&#x7D20;&#x7684;&#x96C6;&#x5408;&#x79F0;&#x4E3A;&#x524D;&#x666F;&#xFF0C;&#x524D;&#x666F;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4E2D;&#x7684;&#x524D;&#x666F;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x76EE;&#x6807;&#x3002; <img src="/posts/1d9c933b/&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x524D;&#x666F;.jpg"></p><h4 id="&#x8FB9;&#x754C;">&#x8FB9;&#x754C;</h4><p><span class="math inline">\(S\)</span>&#x7684;&#x8FB9;&#x754C;&#x662F;<span class="math inline">\(S_{&#x524D;&#x666F;}\)</span>&#x4E2D;&#x4E0E;<span class="math inline">\(S_{&#x80CC;&#x666F;}\)</span>&#x6709;4&#x8FDE;&#x901A;&#x5173;&#x7CFB;&#x7684;&#x50CF;&#x7D20;&#x96C6;&#x5408;&#xFF0C;&#x7528;<span class="math inline">\(s&apos;\)</span>&#x8868;&#x793A;&#x3002;</p><h4 id="&#x5185;&#x90E8;">&#x5185;&#x90E8;</h4><p><span class="math inline">\(s\)</span>&#x4E2D;&#x4E0D;&#x5C5E;&#x4E8E;&#x5B83;&#x7684;&#x8FB9;&#x754C;&#x7684;&#x50CF;&#x7D20;&#x96C6;&#x5408;&#xFF0C;&#x7528;<span class="math inline">\(s-s&apos;\)</span>&#x8868;&#x793A;</p><h4 id="&#x5305;&#x56F4;">&#x5305;&#x56F4;</h4><p>&#x5982;&#x679C;&#x4ECE;s&#x4E2D;&#x4EFB;&#x610F;&#x4E00;&#x70B9;&#x5230;<strong>&#x56FE;&#x50CF;&#x8FB9;&#x754C;</strong>&#xFF08;&#x4E0D;&#x662F;S&#x7684;&#x8FB9;&#x754C;&#xFF0C;&#x662F;&#x6574;&#x4E2A;&#x56FE;&#x7684;&#x8FB9;&#x754C;&#xFF09;&#x7684;4&#x8DEF;&#x5F84;&#x5FC5;&#x987B;&#x4E0E;&#x533A;&#x57DF;T&#x76F8;&#x4EA4;&#xFF0C;&#x5219;&#x533A;&#x57DF;T&#x5305;&#x56F4;&#x533A;&#x57DF;s&#xFF08;s&#x5728;T&#x5185;&#xFF09;&#x3002; <img src="/posts/1d9c933b/&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x5305;&#x56F4;.jpg"></p><h3 id="&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x4E8C;&#x503C;&#x56FE;&#x50CF;">&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x4E8C;&#x503C;&#x56FE;&#x50CF;</h3><ul><li>&#x4EBA;&#x7C7B;&#x5728;&#x7406;&#x89E3;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x7070;&#x5EA6;&#x7EC4;&#x6210;&#x7684;&#x7EBF;&#x6761;&#x3001;&#x8F6E;&#x5ED3;&#x5F71;&#x50CF;&#x6216;&#x5176;&#x5B83;&#x56FE;&#x50CF;&#x65F6;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x56F0;&#x96BE;&#x3002;</li><li>&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8BA1;&#x7B97;&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x548C;&#x5B9E;&#x73B0;&#xFF0C;&#x8BA1;&#x7B97;&#x901F;&#x5EA6;&#x5FEB;&#x3002;</li><li>&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x6240;&#x9700;&#x5185;&#x5B58;&#x5C0F;&#xFF0C;&#x5BF9;&#x8BA1;&#x7B97;&#x673A;&#x8BBE;&#x5907;&#x8981;&#x6C42;&#x4F4E;</li><li>&#x8BB8;&#x591A;&#x4E8C;&#x503C;&#x89C6;&#x89C9;&#x7CFB;&#x7EDF;&#x7684;&#x6280;&#x672F;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x7070;&#x5EA6;&#x89C6;&#x89C9;&#x7CFB;&#x7EDF;</li></ul><h3 id="&#x5982;&#x4F55;&#x5F97;&#x5230;&#x4E8C;&#x503C;&#x56FE;&#x50CF;">&#x5982;&#x4F55;&#x5F97;&#x5230;&#x4E8C;&#x503C;&#x56FE;&#x50CF;</h3><p>&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x901A;&#x8FC7;<strong>&#x9608;&#x503C;&#x5206;&#x5272;</strong>&#x7684;&#x65B9;&#x6CD5;&#x5F97;&#x5230;&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#xFF0C;&#x9608;&#x503C;&#x53D6;&#x51B3;&#x4E8E;&#x7167;&#x660E;&#x6761;&#x4EF6;&#x548C;&#x7269;&#x4F53;&#x7684;&#x53CD;&#x5C04;&#x7279;&#x6027;&#x3002;</p><p><strong>&#x7B97;&#x6CD5;&#x8FC7;&#x7A0B;</strong>&#xFF1A;&#x6BD4;&#x8F83;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x4E0E;&#x67D0;&#x4E00;&#x7070;&#x5EA6;&#x503C;&#x7684;&#x5173;&#x7CFB;&#x53EF;&#x4EE5;&#x5206;&#x6210;&#x4E24;&#x90E8;&#x5206;&#xFF0C;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x5C0F;&#x4E8E;&#x9608;&#x503C;&#xFF0C;&#x5C06;&#x6B64;&#x90E8;&#x5206;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x8BBE;&#x5B9A;&#x4E3A;0&#xFF1B;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x5927;&#x4E8E;&#x9608;&#x503C;&#xFF0C;&#x5C06;&#x6B64;&#x90E8;&#x5206;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x8BBE;&#x5B9A;&#x4E3A;1&#x3002;</p><p>&#x7531;&#x6B64;&#x5F97;&#x5230;&#x7684;&#x7ECF;&#x8FC7;&#x9608;&#x503C;&#x5904;&#x7406;&#x56FE;&#x50CF;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x7070;&#x5EA6;&#x503C;&#x6545;&#x79F0;&#x4E3A;&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x3002;</p><p>&#x9608;&#x503C;&#x5206;&#x5272;&#x7B97;&#x6CD5;&#x7684;&#x8FC7;&#x7A0B;&#xFF1A; &#x8BBE;(x,y)&#x662F;&#x4E8C;&#x7EF4;&#x56FE;&#x50CF;&#x7684;&#x5E73;&#x9762;&#x5750;&#x6807;&#xFF0C;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x7EA7;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x662F;<span class="math inline">\(G={0,1,2,3,4.....L-1}\)</span>&#xFF08;&#x4E60;&#x60EF;&#x4E0A;0&#x8868;&#x793A;&#x6700;&#x6697;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#xFF0C;L-1&#x4EE3;&#x8868;&#x6700;&#x4EAE;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#xFF09;&#xFF0C;&#x4F4D;&#x4E8E;&#x5750;&#x6807;&#x70B9;(x,y)&#x4E0A;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x7070;&#x5EA6;&#x7EA7;&#x8868;&#x793A;f(x,y)&#x3002;<br>&#x8BBE;t&#x4E3A;&#x5206;&#x5272;&#x9608;&#x503C;&#xFF0C;&#x4E8E;&#x662F;&#x56FE;&#x50CF;&#x51FD;&#x6570;&#x5728;&#x9608;&#x503C;t&#x4E0A;&#x7684;&#x5206;&#x5272;&#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x6709;&#x5982;&#x4E0B;&#x8868;&#x793A;&#xFF1A; <img src="/posts/1d9c933b/&#x9608;&#x503C;&#x5206;&#x5272;&#x7B97;&#x6CD5;.jpg"> &#x9608;&#x503C;&#x5206;&#x5272;&#x7B97;&#x6CD5;&#x5B9E;&#x9645;&#x5C31;&#x662F;&#x6309;&#x67D0;&#x4E2A;&#x51C6;&#x5219;&#x51FD;&#x6570;&#x6C42;&#x6700;&#x4F18;&#x9608;&#x503C;&#x7684;&#x8FC7;&#x7A0B;&#x3002;</p><h3 id="&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;">&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;</h3><h4 id="&#x76F4;&#x65B9;&#x56FE;&#x6CD5;">&#x76F4;&#x65B9;&#x56FE;&#x6CD5;</h4><p>&#x56FE;&#x50CF;&#x76F4;&#x65B9;&#x56FE;&#x4F1A;&#x51FA;&#x73B0;&#x4E24;&#x4E2A;&#x5206;&#x79BB;&#x5CF0;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x76F4;&#x65B9;&#x56FE;&#x4E2D;&#x5206;&#x5272;&#x9608;&#x503C;&#x7684;&#x9009;&#x62E9;&#x5728;&#x4E24;&#x4E2A;&#x6CE2;&#x5CF0;&#x4E4B;&#x95F4;&#x7684;&#x6CE2;&#x8C37;&#x3002; <img src="/posts/1d9c933b/&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;1.jpg"> &#x53CC;&#x5CF0;&#x76F4;&#x65B9;&#x56FE;&#x53EF;&#x4EE5;&#x63A8;&#x5E7F;&#x5230;&#x5177;&#x6709;&#x4E0D;&#x540C;&#x7070;&#x5EA6;&#x503C;&#x7684;&#x591A;&#x4E2A;&#x7269;&#x4F53;&#x56FE;&#x50CF;&#x4E2D;&#x3002;&#x56FE;&#x50CF;&#x4E2D;&#x6709;&#x591A;&#x4E2A;&#x7269;&#x4F53;&#x4E14;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x7070;&#x5EA6;&#x5206;&#x5E03;&#xFF0C;&#x5982;&#x56FE;&#xFF1A; <img src="/posts/1d9c933b/&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;2.jpg"></p><h4 id="&#x76F4;&#x65B9;&#x56FE;&#x53D8;&#x6362;&#x6CD5;">&#x76F4;&#x65B9;&#x56FE;&#x53D8;&#x6362;&#x6CD5;</h4><p>&#x5982;&#x679C;&#x76EE;&#x6807;&#x533A;&#x57DF;&#x548C;&#x80CC;&#x666F;&#x533A;&#x57DF;&#x4E4B;&#x95F4;&#x7684;&#x8C37;&#x4E0D;&#x591F;&#x6DF1;&#xFF0C;&#x4EE5;&#x81F3;&#x4E8E;&#x65E0;&#x6CD5;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;&#x9608;&#x503C;&#xFF0C;&#x5219;&#x5C31;&#x8981;&#x5BF9;&#x76F4;&#x65B9;&#x56FE;&#x8FDB;&#x884C;&#x53D8;&#x6362;&#x3002;</p><h4 id="&#x5C40;&#x9650;&#x6027;">&#x5C40;&#x9650;&#x6027;</h4><ul><li>&#x5982;&#x679C;&#x573A;&#x666F;&#x4E2D;&#x4E0D;&#x540C;&#x90E8;&#x5206;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x7167;&#x660E;&#xFF0C;&#x90A3;&#x4E48;&#x5373;&#x4F7F;&#x56FE;&#x50CF;&#x4E2D;&#x4EC5;&#x5305;&#x542B;&#x6709;&#x4E00;&#x4E2A;&#x7269;&#x4F53;&#x4E5F;&#x65E0;&#x6CD5;&#x7528;&#x4E00;&#x4E2A;&#x9608;&#x503C;&#x6765;&#x5206;&#x5272;&#x56FE;&#x50CF;&#x3002;</li><li>&#x57FA;&#x4E8E;&#x76F4;&#x65B9;&#x56FE;&#x7684;&#x9608;&#x503C;&#x5206;&#x5272;&#x65B9;&#x6CD5;&#x6CA1;&#x6709;&#x5229;&#x7528;&#x56FE;&#x50CF;&#x5F3A;&#x5EA6;&#x7684;&#x7A7A;&#x95F4;&#x4FE1;&#x606F;&#xFF0C;&#x5728;&#x672C;&#x8D28;&#x4E0A;&#x5B58;&#x5728;&#x5C40;&#x9650;&#x6027;&#x3002;</li></ul><h3 id="&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8FD0;&#x7B97;">&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8FD0;&#x7B97;</h3><h4 id="&#x8FDE;&#x901A;&#x6210;&#x5206;&#x6807;&#x8BB0;">&#x8FDE;&#x901A;&#x6210;&#x5206;&#x6807;&#x8BB0;</h4><hr><h1 id="&#x7ACB;&#x4F53;&#x89C6;&#x89C9;">&#x7ACB;&#x4F53;&#x89C6;&#x89C9;</h1><h2 id="&#x89C6;&#x89C9;&#x5750;&#x6807;&#x7CFB;&#x7EDF;">&#x89C6;&#x89C9;&#x5750;&#x6807;&#x7CFB;&#x7EDF;</h2><ol type="1"><li>&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#xFF1A;&#x53C8;&#x53EB;&#x56FE;&#x50CF;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x539F;&#x70B9; <span class="math inline">\(o&apos;\)</span> &#x4F4D;&#x4E8E;&#x56FE;&#x50CF;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C; <span class="math inline">\(u\)</span> &#x8F74;&#x5411;&#x53F3;&#x4E0E; <span class="math inline">\(x\)</span> &#x8F74;&#x5E73;&#x884C;&#xFF0C; <span class="math inline">\(v\)</span>&#x8F74;&#x5411;&#x4E0B;&#x4E0E; <span class="math inline">\(y\)</span> &#x8F74;&#x5E73;&#x884C;&#x3002;</li><li>&#x50CF;&#x5E73;&#x9762;&#x5750;&#x6807;&#x7CFB;&#xFF1A;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#x4E0E;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E4B;&#x95F4;&#xFF0C;&#x76F8;&#x5DEE;&#x4E86;&#x4E00;&#x4E2A;&#x7F29;&#x653E;&#x548C;&#x4E00;&#x4E2A;&#x539F;&#x70B9;&#x7684;&#x5E73;&#x79FB;&#x3002;</li><li>&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;</li><li>&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;</li></ol><h2 id="&#x9488;&#x5B54;&#x76F8;&#x673A;&#x6A21;&#x578B;">&#x9488;&#x5B54;&#x76F8;&#x673A;&#x6A21;&#x578B;</h2><p>&#x5E38;&#x7528;&#x7684;&#x76F8;&#x673A;&#x6A21;&#x578B;&#x90FD;&#x662F;&#x6839;&#x636E;<strong>&#x5C0F;&#x5B54;&#x6210;&#x50CF;</strong>&#x7684;&#x539F;&#x7406;&#x505A;&#x6210;&#x7684;&#x3002;</p><p>&#x4F46;&#x662F;&#x4E3A;&#x4E86;&#x83B7;&#x5F97;&#x597D;&#x7684;&#x6210;&#x50CF;&#x6548;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x76F8;&#x673A;&#x7684;&#x524D;&#x65B9;&#x52A0;&#x4E86;&#x900F;&#x955C;&#x3002;<br>&#x52A0;&#x4E86;&#x900F;&#x955C;&#x4E4B;&#x540E;&#x4F1A;&#x5F15;&#x8D77;&#x7578;&#x53D8;&#xFF0C;&#x53EB;<strong>&#x5F84;&#x5411;&#x7578;&#x53D8;</strong>&#xFF0C;&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x79CD;&#xFF1A;&#x6876;&#x5F62;&#x7578;&#x53D8;&#x548C;&#x6795;&#x5F62;&#x7578;&#x53D8;&#x3002;</p><h2 id="&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;">&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;</h2><p>&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#x4E0E;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E4B;&#x95F4;&#xFF0C;&#x76F8;&#x5DEE;&#x4E86;&#x4E00;&#x4E2A;&#x7F29;&#x653E;&#x548C;&#x4E00;&#x4E2A;&#x539F;&#x70B9;&#x7684;&#x5E73;&#x79FB;&#x3002;&#x8BBE;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x5728; <span class="math inline">\(u\)</span> &#x8F74;&#x4E0A;&#x7F29;&#x653E;&#x4E86; <span class="math inline">\(&#x3B1;\)</span> &#x500D;&#xFF0C;&#x5728;$ v$ &#x4E0A;&#x7F29;&#x653E;&#x4E86;$ &#x3B2;$ &#x500D;&#x3002;</p><p>&#x8BB0;<span class="math inline">\(P=[X&apos;,Y&apos;]\)</span>&#x662F;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x7684;&#x5750;&#x6807;&#x3002;&#x5219;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x5750;&#x6807;&#x5BF9;&#x5E94;&#x7684;&#x50CF;&#x7D20;&#x5750;&#x6807;<span class="math inline">\([u,v]^T\)</span>&#x4E3A; <span class="math display">\[\left\{\begin{aligned}u  &amp;=\alpha X&apos; + c_x\\v  &amp;=\beta Y&apos; + c_y\\\end{aligned}\right.\]</span></p><p>&#x628A;<span class="math inline">\(\alpha f\)</span>&#x5408;&#x5E76;&#x6210;<span class="math inline">\(f_x\)</span>&#xFF0C;&#x628A;<span class="math inline">\(\beta f\)</span>&#x5408;&#x5E76;&#x6210;<span class="math inline">\(f_y\)</span>&#xFF0C;&#x53EF;&#x5F97;&#xFF1A; <span class="math display">\[\left\{\begin{aligned}u  &amp;=f_x \frac X Z + c_x\\v  &amp;=f_y \frac Y Z + c_y\\\end{aligned}\right.\]</span> &#x5176;&#x4E2D;&#xFF0C;<span class="math inline">\(f\)</span> &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x7C73;&#xFF0C; <span class="math inline">\(\alpha,\beta\)</span> &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x50CF;&#x7D20;&#x6BCF;&#x7C73;&#xFF0C;&#x6240;&#x4EE5;$ f_x, f_y $&#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x50CF;&#x7D20;&#x3002;</p><p>&#x82E5;&#x5C06;&#x5176;&#x5199;&#x6210;&#x77E9;&#x9635;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x6709;&#xFF1A; <img src="/posts/1d9c933b/&#x5185;&#x53C2;&#x77E9;&#x9635;.jpg"> &#x4E2D;&#x95F4;&#x6846;&#x8D77;&#x6765;&#x7684;&#x90E8;&#x5206;&#x5C31;&#x53EB;&#x5185;&#x53C2;&#x77E9;&#x9635;&#xFF0C;&#x4E00;&#x822C;&#x7ED9;&#x51FA;&#x5C31;&#x7ED9;&#x8FD9;&#x79CD;&#x5F62;&#x5F0F;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x89C1;<a href="/posts/8837a525/">&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;-LAB2</a>&#x4E2D;&#x7684;&#x62A5;&#x544A;&#x3002;</p><h3 id="&#x5F84;&#x5411;&#x7578;&#x53D8;">&#x5F84;&#x5411;&#x7578;&#x53D8;</h3><p>&#x5F84;&#x5411;&#x7578;&#x53D8;&#x4F1A;&#x4EA7;&#x751F;&#x201C;&#x9C7C;&#x773C;&#x201D;&#x73B0;&#x8C61;&#x3002;&#x6210;&#x50CF;&#x4E2D;&#x5FC3;&#x5904;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x4E3A;0&#xFF0C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x968F;&#x7740;&#x4E0E;&#x6210;&#x50CF;&#x4E2D;&#x5FC3;&#x8DDD;&#x79BB;&#x589E;&#x5927;&#x800C;&#x589E;&#x5927;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x5904;&#x8FBE;&#x5230;&#x6700;&#x5927;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x3002;&#x5E38;&#x5E38;&#x7528;&#x5076;&#x6B21;&#x5E42;&#x7684;&#x6CF0;&#x52D2;&#x516C;&#x5F0F;&#x63CF;&#x8FF0;&#x5F84;&#x5411;&#x7578;&#x53D8; <span class="math display">\[\left\{\begin{aligned}x_{cerrected}=x(1+k_1r^2+k_2r^4+k_3r^6)\\y_{cerrected}=y(1+k_1r^2+k_2r^4+k_3r^6)\end{aligned}\right.\]</span></p><h3 id="&#x5207;&#x5411;&#x7578;&#x53D8;">&#x5207;&#x5411;&#x7578;&#x53D8;</h3><p>&#x5207;&#x5411;&#x7578;&#x53D8;&#x7531;&#x900F;&#x955C;&#x548C;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E0D;&#x5E73;&#x884C;&#x5F15;&#x8D77;&#x3002;&#x5E38;&#x7528;&#x5982;&#x4E0B;&#x516C;&#x5F0F;&#x63CF;&#x8FF0;</p><p><span class="math display">\[\left\{\begin{aligned}x_{cerrected}&amp;=x+2p_1xy+p_2(r^2+2x^2)\\y_{cerrected}&amp;=y+p_1(r^2+2y^2)+2p_2xy\end{aligned}\right.\]</span></p><h3 id="&#x4FEE;&#x590D;&#x7578;&#x53D8;">&#x4FEE;&#x590D;&#x7578;&#x53D8;</h3><p>&#x8054;&#x5408;&#x4E0A;&#x8FF0;&#x4E24;&#x4E2A;&#x516C;&#x5F0F;&#xFF0C;&#x5BF9;&#x4E8E;&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x7684;&#x4E00;&#x70B9; P (X; Y; Z)&#xFF0C;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x4E94;&#x4E2A;&#x7578;&#x53D8;&#x7CFB;&#x6570;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x70B9;&#x5728;&#x50CF;&#x7D20;&#x5E73;&#x9762;&#x4E0A;&#x7684;&#x6B63;&#x786E;&#x4F4D;&#x7F6E;&#xFF1A;</p><ol type="1"><li>&#x5C06;&#x4E09;&#x7EF4;&#x7A7A;&#x95F4;&#x70B9;&#x6295;&#x5F71;&#x5230;&#x5F52;&#x4E00;&#x5316;&#x56FE;&#x50CF;&#x5E73;&#x9762;&#x3002;&#x8BBE;&#x5B83;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x5750;&#x6807;&#x4E3A; <span class="math inline">\([x, y]^T\)</span>&#x3002;</li><li>&#x5BF9;&#x5F52;&#x4E00;&#x5316;&#x5E73;&#x9762;&#x4E0A;&#x7684;&#x70B9;&#x8FDB;&#x884C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x548C;&#x5207;&#x5411;&#x7578;&#x53D8;&#x7EA0;&#x6B63;&#x3002; <span class="math display">\[\left\{\begin{aligned}x_{cerrected}&amp;=x(1+k_1r^2+k_2r^4+k_3r^6)+2p_1xy+p_2(r^2+2x^2)\\y_{cerrected}&amp;=y(1+k_1r^2+k_2r^4+k_3r^6)+p_1(r^2+2y^2)+2p_2xy\end{aligned}\right.\]</span></li><li>&#x5C06;&#x7EA0;&#x6B63;&#x540E;&#x7684;&#x70B9;&#x901A;&#x8FC7;&#x5185;&#x53C2;&#x6570;&#x77E9;&#x9635;&#x6295;&#x5F71;&#x5230;&#x50CF;&#x7D20;&#x5E73;&#x9762;&#xFF0C;&#x5F97;&#x5230;&#x8BE5;&#x70B9;&#x5728;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x6B63;&#x786E;&#x4F4D;&#x7F6E;&#x3002; <span class="math display">\[\left\{\begin{aligned}u&amp;=f_xx_{cerrected}+c_x\\v&amp;=f_yy_{cerrected}+c_y\end{aligned}\right.\]</span></li></ol><p>&#x56E0;&#x6B64;&#x5728;&#x7ED9;&#x7578;&#x53D8;&#x53C2;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F80;&#x5F80;&#x662F;&#x7ED9;&#x4E00;&#x4E2A;1*5&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x4E3E;&#x4F8B;&#x89C1;<a href="/posts/8837a525/">&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;-LAB2</a>&#x4E2D;&#x7684;&#x62A5;&#x544A;&#x3002;</p><h3 id="&#x603B;&#x7ED3;&#x5355;&#x76EE;&#x76F8;&#x673A;&#x7684;&#x6210;&#x50CF;&#x8FC7;&#x7A0B;">&#x603B;&#x7ED3;&#x5355;&#x76EE;&#x76F8;&#x673A;&#x7684;&#x6210;&#x50CF;&#x8FC7;&#x7A0B;</h3><ol type="1"><li>&#x9996;&#x5148;&#xFF0C;&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x6709;&#x4E00;&#x4E2A;&#x56FA;&#x5B9A;&#x7684;&#x70B9; P&#xFF0C;&#x4E16;&#x754C;&#x5750;&#x6807;&#x4E3A; <span class="math inline">\(P_w\)</span>&#xFF1B;</li><li>&#x7531;&#x4E8E;&#x76F8;&#x673A;&#x5728;&#x8FD0;&#x52A8;&#xFF0C;&#x5B83;&#x7684;&#x8FD0;&#x52A8;&#x7531;<span class="math inline">\(R, t\)</span>&#x6216;&#x53D8;&#x6362;&#x77E9;&#x9635;<span class="math inline">\(T\)</span>&#x63CF;&#x8FF0;&#x3002;<span class="math inline">\(P\)</span>&#x7684;&#x76F8;&#x673A;&#x5750;&#x6807;&#x4E3A;&#xFF1A;<span class="math inline">\(\tilde{P_c}= RP_w + t\)</span>&#x3002;</li><li>&#x8FD9;&#x65F6;&#x7684; <span class="math inline">\(\tilde P_c\)</span> &#x4ECD;&#x6709; <span class="math inline">\(X, Y, Z\)</span> &#x4E09;&#x4E2A;&#x91CF;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x6295;&#x5F71;&#x5230;&#x5F52;&#x4E00;&#x5316;&#x5E73;&#x9762; <span class="math inline">\(Z = 1\)</span> &#x4E0A;&#xFF0C;&#x5F97;&#x5230; <span class="math inline">\(P\)</span> &#x7684;&#x5F52; &#x4E00;&#x5316;&#x76F8;&#x673A;&#x5750;&#x6807;&#xFF1A; <span class="math inline">\(P_c = [X/Z, Y /Z, 1]^T\)</span></li><li>&#x6700;&#x540E;&#xFF0C; <span class="math inline">\(P\)</span> &#x7684;&#x5F52;&#x4E00;&#x5316;&#x5750;&#x6807;&#x7ECF;&#x8FC7;&#x5185;&#x53C2;&#x540E;&#xFF0C;&#x5BF9;&#x5E94;&#x5230;&#x5B83;&#x7684;&#x50CF;&#x7D20;&#x5750;&#x6807;&#xFF1A; <span class="math inline">\(P_{uv} = KP_c\)</span></li></ol><p>&#x4E00;&#x5171;4&#x79CD;&#x5750;&#x6807;&#xFF1A;&#x4E16;&#x754C;&#x3001;&#x76F8;&#x673A;&#x3001;&#x5F52;&#x4E00;&#x5316;&#x76F8;&#x673A;&#x548C;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x3002;</p><h2 id="&#x6DF1;&#x5EA6;&#x83B7;&#x53D6;">&#x6DF1;&#x5EA6;&#x83B7;&#x53D6;</h2><ul><li>&#x6563;&#x7126;&#x6DF1;&#x5EA6;&#x6CD5;</li><li>&#x53CC;&#x76EE;&#x89C6;&#x89C9;&#x6CD5;</li><li>&#x6DF1;&#x5EA6;&#x76F8;&#x673A;&#x6CD5;</li></ul><h3 id="&#x53CC;&#x76EE;&#x6A21;&#x578B;">&#x53CC;&#x76EE;&#x6A21;&#x578B;</h3><h4 id="&#x539F;&#x7406;">&#x539F;&#x7406;</h4><p><img src="/posts/1d9c933b/&#x53CC;&#x76EE;&#x6A21;&#x578B;.jpg"> &#x56FE;&#x4E2D;&#x7684;&#x57FA;&#x7EBF;&#xFF08;baseline&#xFF09;&#x4E0D;&#x662F;&#x4E00;&#x6761;&#x7EBF;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x4E2A;&#x8DDD;&#x79BB;&#x3002;<br>&#x7531;&#x4E8E;&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x4E4B;&#x95F4;&#x5B58;&#x5728;&#x89C6;&#x5DEE;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x7528;&#x5B83;&#x6765;&#x8BA1;&#x7B97;&#x6DF1;&#x5EA6;&#x3002;</p><p>&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#x4E3A; <span class="math display">\[z=\frac {fb}{d}\]</span> <span class="math inline">\(z\)</span>&#x8868;&#x793A;&#x6DF1;&#x5EA6;&#xFF0C;<span class="math inline">\(f\)</span>&#x662F;&#x7126;&#x8DDD;&#xFF0C;<span class="math inline">\(d\)</span>&#x4E3A;&#x5DE6;&#x53F3;&#x56FE;&#x7684;&#x6A2A;&#x5750;&#x6807;&#x4E4B;&#x5DEE;&#xFF0C;&#x79F0;&#x4E3A;&#x89C6;&#x5DEE;&#x3002; <span class="math display">\[d=u_L-u_R\]</span> &#x89C6;&#x5DEE;&#x4E0E;&#x8DDD;&#x79BB;&#x6210;&#x53CD;&#x6BD4;&#xFF0C;&#x89C6;&#x5DEE;&#x8D8A;&#x5927;&#xFF0C;&#x8DDD;&#x79BB;&#x8D8A;&#x8FD1;&#x3002;&#x89C6;&#x5DEE;&#x7684;&#x6700;&#x5C0F;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x3002;</p><p>&#x7531;&#x4E8E;&#x89C6;&#x5DEE;&#x6700;&#x5C0F;&#x4E3A;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#xFF0C;&#x4E8E;&#x662F;&#x53CC;&#x76EE;&#x7684;&#x6DF1;&#x5EA6;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x7406;&#x8BBA;&#x4E0A;&#x7684;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x7531; fb &#x786E;&#x5B9A;&#x3002;&#x6211;&#x4EEC;&#x770B;&#x5230;&#xFF0C;&#x5F53;&#x57FA;&#x7EBF;&#x8D8A;&#x957F;&#x65F6;&#xFF0C;&#x53CC;&#x76EE;&#x6700;&#x5927;&#x80FD;&#x6D4B;&#x5230;&#x7684;&#x8DDD;&#x79BB;&#x5C31;&#x4F1A;&#x53D8;&#x8FDC;&#xFF1B;&#x53CD;&#x4E4B;&#xFF0C;&#x5C0F;&#x578B;&#x53CC;&#x76EE;&#x5668;&#x4EF6;&#x5219;&#x53EA;&#x80FD;&#x6D4B;&#x91CF;&#x5F88;&#x8FD1;&#x7684;&#x8DDD;&#x79BB;&#x3002;</p><h4 id="&#x6027;&#x8D28;-1">&#x6027;&#x8D28;</h4><ol type="1"><li>&#x8DDD;&#x79BB;&#x53CD;&#x6BD4;&#x4E8E;&#x5DEE;&#x5F02;&#xFF0C;&#x8D8A;&#x8FD1;&#x7684;&#x76EE;&#x6807;&#x6D4B;&#x91CF;&#x7684;&#x8D8A;&#x51C6;&#x3002;</li><li>&#x5DEE;&#x5F02;&#x6B63;&#x6BD4;&#x4E8E;(&#x5DE6;&#x53F3;&#x76F8;&#x673A;&#x95F4;)&#x57FA;&#x7EBF;&#x5BBD;&#x5EA6;&#x3002;&#x7ED9;&#x5B9A;&#x5DEE;&#x5F02;&#x8BEF;&#x5DEE;&#xFF0C;&#x589E;&#x52A0;&#x57FA;&#x7EBF;&#x5BBD;&#x5EA6;&#x53EF;&#x4EE5;&#x63D0;&#x9AD8;&#x6DF1;&#x5EA6;&#x4F30;&#x8BA1;&#x5F97;&#x7CBE;&#x5EA6;.&#x4F46;&#x589E;&#x52A0;&#x57FA;&#x7EBF;&#x5BBD;&#x5EA6;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x76EE;&#x6807;&#x5728;&#x67D0;&#x4E2A;&#x76F8;&#x673A;&#x4E2D;&#x6D88;&#x5931;&#x7684;&#x60C5;&#x5F62;.</li><li>&#x51FA;&#x73B0;&#x5728;&#x4E24;&#x53F0;&#x76F8;&#x673A;&#x4E2D;&#x7684;&#x540C;&#x4E00;&#x70B9;&#x6784;&#x6210;&#x5171;&#x8F6D;&#x5BF9;.&#x5171;&#x8F6D;&#x5BF9;&#x4F4D;&#x4E8E;&#x6838;&#x7EBF;&#x3002;</li></ol><p><strong>&#x6838;&#x7EBF;&#x662F;&#x5565;</strong></p><h3 id="rgb-d&#x76F8;&#x673A;">RGB-D&#x76F8;&#x673A;</h3><p>&#x539F;&#x7406;&#xFF1A;&#x7269;&#x7406;&#x624B;&#x6BB5;&#x6D4B;&#x91CF;&#x6DF1;&#x5EA6;</p><p>&#x4E3B;&#x8981;&#x5206;&#x7C7B;&#xFF1A;</p><ul><li>&#x901A;&#x8FC7;&#x7EA2;&#x5916;&#x7ED3;&#x6784;&#x5149;</li><li>&#x98DE;&#x884C;&#x65F6;&#x95F4;&#x6CD5;</li></ul><h2 id="&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;">&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;</h2><h3 id="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;-1">&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;</h3><ol type="1"><li>&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x83B7;&#x53D6;&#x56FE;&#x50CF;&#x662F;&#x901A;&#x8FC7;&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x5F97;&#x5230;&#xFF0C;&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x672C;&#x8EAB;&#x7535;&#x5B50;&#x5E72;&#x6270;&#x548C;&#x5916;&#x754C;&#x73AF;&#x5883;&#x4EA7;&#x751F;&#x7684;&#x968F;&#x673A;&#x5E72;&#x6270;&#xFF0C;&#x4F7F;&#x5F97;&#x56FE;&#x50CF;&#x542B;&#x6709;&#x566A;&#x58F0;&#x3002;</li><li>&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x6240;&#x5904;&#x7684;&#x7167;&#x660E;&#x6216;&#x5176;&#x4ED6;&#x73AF;&#x5883;&#xFF0C;&#x4F7F;&#x5F97;&#x56FE;&#x50CF;&#x7684;&#x7070;&#x5EA6;&#x5206;&#x8FA8;&#x7387;&#x4E0D;&#x9AD8;&#xFF0C;&#x751A;&#x81F3;&#x5F88;&#x96BE;&#x533A;&#x5206;&#x56FE;&#x50CF;&#x4E2D;&#x7684;&#x7269;&#x4F53;&#x3002;</li></ol><p>&#x56E0;&#x6B64;&#x5FC5;&#x987B;&#x5728;&#x89C6;&#x89C9;&#x7684;&#x521D;&#x7EA7;&#x9636;&#x6BB5;&#x5BF9;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x7070;&#x5EA6;&#x4FEE;&#x6B63;&#x3001;&#x566A;&#x58F0;&#x8FC7;&#x6EE4;&#x7B49;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x3002;</p><h3 id="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;-1">&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h3><p>&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x4E2D;&#x7684;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x5E76;&#x4E0D;&#x8003;&#x8651;&#x56FE;&#x50CF;&#x964D;&#x8D28;&#x539F;&#x56E0;&#xFF0C;&#x53EA;<strong>&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x7279;&#x5F81;&#x6709;&#x9009;&#x62E9;&#x7684;&#x7A81;&#x51FA;</strong>&#xFF0C;&#x8870;&#x51CF;&#x5176;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x7279;&#x5F81;&#x3002;</p><p>&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x540E;&#x7684;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x53BB;&#x903C;&#x8FD1;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#xFF0C;&#x8FD9;&#x79CD;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x65B9;&#x6CD5;&#x79F0;&#x4E3A;&#x56FE;&#x50CF;&#x589E;&#x5F3A;&#x3002;</p><h3 id="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;-1">&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;</h3><ol type="1"><li>&#x7A7A;&#x95F4;&#x57DF;&#x6CD5;&#x548C;&#x9891;&#x7387;&#x57DF;&#x6CD5;&#xFF1A;<br></li></ol><ul><li>&#x7A7A;&#x95F4;&#x57DF;&#x6CD5;&#x662F;&#x76F4;&#x63A5;&#x5728;&#x7A7A;&#x95F4;&#x57DF;&#x5BF9;&#x56FE;&#x50CF;&#x50CF;&#x7D20;&#x8FD0;&#x7B97;&#x5904;&#x7406;&#xFF1B;</li><li>&#x9891;&#x7387;&#x57DF;&#x6CD5;&#x662F;&#x5148;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x67D0;&#x79CD;&#x53D8;&#x6362;&#xFF08;DFT&#x3001;DCT&#x3001;DWT&#x3001;K-L&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x53D8;&#x6362;&#x57DF;&#x5BF9;&#x56FE;&#x50CF;&#x7684;&#x53D8;&#x6362;&#x503C;&#x8FDB;&#x884C;&#x8FD0;&#x7B97;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x8BA1;&#x7B97;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x9006;&#x53D8;&#x6362;&#x5230;&#x7A7A;&#x95F4;&#x57DF;&#x3002;</li></ul><ol start="2" type="1"><li>&#x5168;&#x5C40;&#x8FD0;&#x7B97;&#x548C;&#x5C40;&#x90E8;&#x8FD0;&#x7B97;</li><li>&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x548C;&#x5F69;&#x8272;&#x56FE;&#x50CF;</li></ol><h3 id="&#x76F4;&#x65B9;&#x6982;&#x5FF5;">&#x76F4;&#x65B9;&#x6982;&#x5FF5;</h3><p>&#x5982;&#x679C;&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x50CF;&#x7D20;&#x4EAE;&#x5EA6;&#xFF08;&#x7070;&#x5EA6;&#x7EA7;&#x522B;&#xFF09;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x53D8;&#x91CF;&#xFF0C; &#x5219;&#x5176;&#x5206;&#x5E03;&#x60C5;&#x51B5;&#x5C31;&#x53CD;&#x6620;&#x4E86;&#x56FE;&#x50CF;&#x7684;&#x7EDF;&#x8BA1;&#x7279;&#x6027;&#xFF0C;&#x8FD9;&#x53EF;&#x7528;Probability Density Function (PDF)&#x6765;&#x523B;&#x753B;&#x548C;&#x63CF;&#x8FF0;&#xFF0C;&#x8868;&#x73B0;&#x4E3A;&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;&#xFF08;Histogram&#xFF09;&#x3002;</p><p>&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;&#x662F;&#x7070;&#x5EA6;&#x7EA7;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x56FE;&#x50CF;&#x4E2D;&#x5177;&#x6709;&#x67D0;&#x79CD;<strong>&#x7070;&#x5EA6;&#x7EA7;</strong>&#x7684;&#x50CF;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x53CD;&#x6620;&#x4E86;&#x56FE;&#x50CF;&#x4E2D;&#x6BCF;&#x79CD;&#x7070;&#x5EA6;&#x51FA;&#x73B0;&#x7684;&#x9891;&#x7387;&#xFF0C;&#x5B83;&#x662F;&#x56FE;&#x50CF;&#x6700;&#x57FA;&#x672C;&#x7684;&#x7EDF;&#x8BA1;&#x7279;&#x5F81;&#x3002;</p><h1 id="&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;">&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;</h1><h2 id="&#x6982;&#x8FF0;-4">&#x6982;&#x8FF0;</h2><p>&#x91CC;&#x7A0B;&#x8BA1;(Odometry)&#x662F;&#x4E00;&#x79CD;&#x5229;&#x7528;&#x4ECE;&#x79FB;&#x52A8;&#x4F20;&#x611F;&#x5668;&#x83B7;&#x5F97;&#x7684;&#x6570;&#x636E;&#x6765;&#x4F30;&#x8BA1;&#x7269;&#x4F53;&#x4F4D;&#x7F6E;<strong>&#x968F;&#x65F6;&#x95F4;&#x7684;&#x53D8;&#x5316;</strong>&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x88AB;&#x7528;&#x5728;&#x8BB8;&#x591A;&#x79CD;&#x673A;&#x5668;&#x4EBA;&#x7CFB;&#x7EDF;&#xFF08;&#x8F6E;&#x5F0F;&#x6216;&#x8005;&#x817F;&#x5F0F;&#xFF09;&#x4E0A;&#x9762;&#xFF0C;&#x6765;&#x4F30;&#x8BA1;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x786E;&#x5B9A;&#x8FD9;&#x4E9B;&#x673A;&#x5668;&#x4EBA;&#x76F8;&#x5BF9;&#x4E8E;&#x521D;&#x59CB;&#x4F4D;&#x7F6E;&#x79FB;&#x52A8;&#x7684;&#x8DDD;&#x79BB;&#x3002;</p><p>&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x662F;&#x4E00;&#x79CD;&#x5229;&#x7528;&#x8FDE;&#x7EED;&#x7684;&#x56FE;&#x50CF;&#x5E8F;&#x5217;&#x6765;&#x4F30;&#x8BA1;&#x673A;&#x5668;&#x4EBA;&#x79FB;&#x52A8;&#x8DDD;&#x79BB;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6309;&#x7167;&#x539F;&#x7406;&#x4E0D;&#x540C;&#xFF0C;&#x53EF;&#x5206;&#x4E3A;&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#xFF0C;&#x5149;&#x6D41;&#x573A;&#x6CD5;&#x53CA;&#x5176;&#x6539;&#x8FDB;&#x7684;&#x76F4;&#x63A5;&#x6CD5;&#x3002;</p><h2 id="&#x7279;&#x5F81;&#x70B9;">&#x7279;&#x5F81;&#x70B9;</h2><p>&#x56FE;&#x50CF;&#x5F53;&#x4E2D;&#x5177;&#x6709;&#x4EE3;&#x8868;&#x6027;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x6709;&#x4EE5;&#x4E0B;&#x7279;&#x70B9;&#xFF1A;</p><ul><li>&#x53EF;&#x91CD;&#x590D;&#x6027;:&#x5728;&#x4E0D;&#x540C;&#x56FE;&#x50CF;&#x4E2D;&#x80FD;&#x91CD;&#x73B0;</li><li>&#x53EF;&#x533A;&#x522B;&#x6027;:&#x4E0D;&#x540C;&#x7684;&#x70B9;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x8868;&#x8FBE;</li><li>&#x9AD8;&#x6548;:&#x7279;&#x5F81;&#x70B9;&#x6570;&#x91CF;&#x5E94;&#x8FDC;&#x5C0F;&#x4E8E;&#x50CF;&#x7D20;&#x7684;&#x6570;&#x91CF;</li><li>&#x672C;&#x5730;:&#x7279;&#x5F81;&#x4EC5;&#x4E0E;&#x4E00;&#x5C0F;&#x7247;&#x56FE;&#x50CF;&#x533A;&#x57DF;&#x76F8;&#x5173;</li></ul><p>&#x7279;&#x5F81;&#x70B9;&#x7684;&#x4FE1;&#x606F;&#xFF1A;</p><ul><li>&#x5173;&#x952E;&#x70B9;(Key point)&#xFF1A;&#x4F4D;&#x7F6E;&#x3001;&#x5927;&#x5C0F;&#x3001;&#x65B9;&#x5411;&#x3001;&#x8BC4;&#x5206;&#x7B49;</li><li>&#x63CF;&#x8FF0;&#x5B50;&#xFF08;Descriptor&#xFF09;&#xFF1A;&#x7279;&#x5F81;&#x70B9;&#x5468;&#x56F4;&#x7684;&#x56FE;&#x50CF;&#x4FE1;&#x606F;</li></ul><p>&#x7279;&#x5F81;&#x63CF;&#x8FF0;&#x5E94;&#x8BE5;&#x5728;&#x5149;&#x7167;&#x3001;&#x89C6;&#x89D2;&#x53D1;&#x751F;&#x5C11;&#x91CF;&#x53D8;&#x5316;&#x65F6;&#x4ECD;&#x80FD;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x3002;</p><h2 id="harris-detector">Harris Detector</h2><p>&#x8FD9;&#x4E2A;&#x90E8;&#x5206;&#x6211;&#x8BB0;&#x5F97;&#x4E0A;&#x8BFE;&#x8BB2;&#x4E86; <img src="/posts/1d9c933b/HarrisDetector.jpg"> <img src="/posts/1d9c933b/HarrisDetector1.jpg"> <span class="math display">\[R=\lambda_1\lambda_2-k(\lambda_1+\lambda_2)^2\]</span></p><p>Harris Detector&#x662F;&#x901A;&#x8FC7;&#x6570;&#x5B66;&#x8BA1;&#x7B97;&#x5728;&#x56FE;&#x50CF;&#x4E0A;&#x53D1;&#x73B0;&#x89D2;&#x5EA6;&#x7279;&#x5F81;&#x7684;&#x4E00;&#x79CD;&#x7B97;&#x6CD5;&#x3002;</p><p><strong>&#x7F3A;&#x70B9;</strong>&#xFF1A;Harris&#x7B97;&#x5B50;&#x5BF9;&#x7070;&#x5EA6;&#x7684;&#x5E73;&#x79FB;&#x662F;&#x4E0D;&#x53D8;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x5DEE;&#x5206;&#xFF0C;&#x5BF9;&#x65CB;&#x8F6C;&#x4E5F;&#x6709;&#x4E0D;&#x53D8;&#x6027;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x5C3A;&#x5EA6;&#x5F88;&#x654F;&#x611F;&#xFF0C;&#x5728;&#x4E00;&#x4E2A;&#x5C3A;&#x5EA6;&#x4E0B;&#x662F;&#x89D2;&#x70B9;&#xFF0C;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x5C3A;&#x5EA6;&#x4E0B;&#x53EF;&#x80FD;&#x5C31;&#x4E0D;&#x662F;&#x4E86;&#x3002; <img src="/posts/1d9c933b/Harris&#x7F3A;&#x70B9;.jpg"></p><h2 id="fast&#x7279;&#x5F81;">FAST&#x7279;&#x5F81;</h2><p>FAST &#x662F;&#x4E00;&#x79CD;&#x89D2;&#x70B9;&#xFF0C;&#x4E3B;&#x8981;&#x68C0;&#x6D4B;&#x5C40;&#x90E8;&#x50CF;&#x7D20;&#x7070;&#x5EA6;&#x53D8;&#x5316;&#x660E;&#x663E;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4EE5;&#x901F;&#x5EA6;&#x5FEB;&#x8457;&#x79F0;&#x3002;&#x5B83;&#x7684;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x4E0E;&#x5B83;&#x90BB;&#x57DF;&#x7684;&#x50CF;&#x7D20;&#x5DEE;&#x522B;&#x8F83;&#x5927;&#xFF08;&#x8FC7;&#x4EAE;&#x6216;&#x8FC7;&#x6697;&#xFF09; , &#x90A3;&#x5B83;&#x66F4;&#x53EF;&#x80FD;&#x662F;&#x89D2;&#x70B9;&#x3002;&#x76F8;&#x6BD4;&#x4E8E;&#x5176;&#x4ED6;&#x89D2;&#x70B9;&#x68C0;&#x6D4B;&#x7B97;&#x6CD5;&#xFF0C; FAST &#x53EA;&#x9700;&#x6BD4;&#x8F83;<strong>&#x50CF;&#x7D20;&#x4EAE;&#x5EA6;</strong>&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5341;&#x5206;&#x5FEB;&#x6377;&#x3002;</p><p>&#x68C0;&#x6D4B;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5728;&#x56FE;&#x50CF;&#x4E2D;&#x9009;&#x53D6;&#x50CF;&#x7D20; <span class="math inline">\(p\)</span>&#xFF0C;&#x5047;&#x8BBE;&#x5B83;&#x7684;&#x4EAE;&#x5EA6;&#x4E3A; <span class="math inline">\(I_p\)</span>&#x3002; 2. &#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x9608;&#x503C; <span class="math inline">\(T\)</span> (&#x6BD4;&#x5982; <span class="math inline">\(I_p\)</span> &#x7684; 20%)&#x3002; 3. &#x4EE5;&#x50CF;&#x7D20; <span class="math inline">\(p\)</span> &#x4E3A;&#x4E2D;&#x5FC3;, &#x9009;&#x53D6;&#x534A;&#x5F84;&#x4E3A; 3 &#x7684;&#x5706;&#x4E0A;&#x7684; 16 &#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x3002; 4. &#x5047;&#x5982;&#x9009;&#x53D6;&#x7684;&#x5706;&#x4E0A;&#xFF0C;&#x6709;&#x8FDE;&#x7EED;&#x7684; N &#x4E2A;&#x70B9;&#x7684;&#x4EAE;&#x5EA6;&#x5927;&#x4E8E; <span class="math inline">\(I_p + T\)</span> <strong>&#x6216;</strong>&#x5C0F;&#x4E8E; <span class="math inline">\(I_p &#x2212; T\)</span>&#xFF0C;&#x90A3;&#x4E48;&#x50CF;&#x7D20; <span class="math inline">\(p\)</span>&#x53EF;&#x4EE5;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x7279;&#x5F81;&#x70B9; (N &#x901A;&#x5E38;&#x53D6; 12&#xFF0C;&#x5373;&#x4E3A; FAST-12&#x3002;&#x5176;&#x5B83;&#x5E38;&#x7528;&#x7684; N &#x53D6;&#x503C;&#x4E3A; 9 &#x548C; 11&#xFF0C;&#x4ED6;&#x4EEC;&#x5206;&#x522B;&#x88AB;&#x79F0;&#x4E3A;FAST-9&#xFF0C; FAST-11)&#x3002; 5. &#x5FAA;&#x73AF;&#x4EE5;&#x4E0A;&#x56DB;&#x6B65;&#xFF0C;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x6267;&#x884C;&#x76F8;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x3002;</p><p><img src="/posts/1d9c933b/FAST&#x6982;&#x8FF0;.jpg"></p><p>&#x5728; FAST-12 &#x7B97;&#x6CD5;&#x4E2D;&#xFF0C;&#x4E3A;&#x4E86;&#x66F4;&#x9AD8;&#x6548;&#xFF0C;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x4E00;&#x9879;&#x9884;&#x6D4B;&#x8BD5;&#x64CD;&#x4F5C;&#xFF0C;&#x4EE5;&#x5FEB;&#x901F;&#x5730;&#x6392;&#x9664;&#x7EDD;&#x5927;&#x591A;&#x6570;&#x4E0D;&#x662F;&#x89D2;&#x70B9;&#x7684;&#x50CF;&#x7D20;&#x3002;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x4E3A;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#xFF0C;&#x76F4;&#x63A5;&#x68C0;&#x6D4B;&#x90BB;&#x57DF;&#x5706;&#x4E0A;&#x7684;&#x7B2C; 1&#xFF0C; 5&#xFF0C; 9&#xFF0C; 13 &#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x4EAE;&#x5EA6;&#x3002;&#x53EA;&#x6709;&#x5F53;&#x8FD9;&#x56DB;&#x4E2A;&#x50CF;&#x7D20;&#x4E2D;&#x6709;&#x4E09;&#x4E2A;&#x540C;&#x65F6;&#x5927;&#x4E8E; <span class="math inline">\(I_p + T\)</span> &#x6216;&#x5C0F;&#x4E8E; <span class="math inline">\(I_p &#x2212; T\)</span>&#x65F6;&#xFF0C;&#x5F53;&#x524D;&#x50CF;&#x7D20;&#x624D;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x4E2A;&#x89D2;&#x70B9;&#xFF0C;&#x5426;&#x5219;&#x5E94;&#x8BE5;&#x76F4;&#x63A5;&#x6392;&#x9664;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x9884;&#x6D4B;&#x8BD5;&#x64CD;&#x4F5C;&#x5927;&#x5927;&#x52A0;&#x901F;&#x4E86;&#x89D2;&#x70B9;&#x68C0;&#x6D4B;&#x3002;</p><p>FAST&#x89D2;&#x70B9;&#x7ECF;&#x5E38;&#x51FA;&#x73B0;&#x201C;&#x624E;&#x5806;&#x201D;&#x7684;&#x73B0;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x7B2C;&#x4E00;&#x904D;&#x68C0;&#x6D4B;&#x4E4B;&#x540E;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x7528;&#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236;&#xFF0C;&#x5728;&#x4E00;&#x5B9A;&#x533A;&#x57DF;&#x5185;&#x4EC5;&#x4FDD;&#x7559;&#x54CD;&#x5E94;&#x6781;&#x5927;&#x503C;&#x7684;&#x89D2;&#x70B9;&#xFF0C;&#x907F;&#x514D;&#x89D2;&#x70B9;&#x96C6;&#x4E2D;&#x7684;&#x95EE;&#x9898;&#x3002; ## ORB&#x89D2;&#x70B9;&#x68C0;&#x6D4B; ### Oriented FAST &#x9996;&#x5148;&#xFF0C;FAST&#x89D2;&#x70B9;&#x6570;&#x91CF;&#x8FC7;&#x591A;&#xFF0C;&#x6839;&#x636E;&#x671F;&#x671B;&#x7684;&#x6570;&#x91CF;N&#xFF0C;&#x5BF9;&#x539F;&#x59CB;FAST&#x89D2;&#x70B9;&#x5206;&#x522B;&#x8BA1;&#x7B97;Harris&#x54CD;&#x5E94;&#x503C;&#xFF0C;&#x9009;&#x53D6;&#x524D;N&#x4E2A;&#x5177;&#x6709;&#x6700;&#x5927;&#x54CD;&#x5E94;&#x503C;&#x7684;&#x89D2;&#x70B9;&#x3002;&#x8BA1;&#x7B97;Harris&#x54CD;&#x5E94;&#x503C;&#xFF0C;&#x5C31;&#x662F;&#x524D;&#x9762;Harris Detector&#x91CC;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x90A3;&#x4E2A;<span class="math inline">\(R\)</span>&#x3002;</p><p>&#x5176;&#x6B21;&#xFF0C;FAST&#x89D2;&#x70B9;&#x4E0D;&#x5177;&#x6709;&#x65B9;&#x5411;&#x4FE1;&#x606F;&#xFF0C;&#x56FA;&#x5B9A;&#x9009;&#x53D6;&#x534A;&#x5F84;&#x4E3A;3&#x7684;&#x5706;&#xFF0C;&#x5B58;&#x5728;&#x5C3A;&#x5EA6;&#x95EE;&#x9898;&#xFF1A;&#x8FDC;&#x770B;&#x662F;&#x89D2;&#x70B9;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x8FD1;&#x770B;&#x5C31;&#x4E0D;&#x662F;&#x4E86;&#xFF0C;ORB&#x6DFB;&#x52A0;&#x4E86;<strong>&#x5C3A;&#x5EA6;</strong>&#x548C;<strong>&#x65CB;&#x8F6C;</strong>&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x5C3A;&#x5EA6;&#x4E0D;&#x53D8;&#x6027;&#x7531;<strong>&#x6784;&#x5EFA;&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;</strong>(&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x7684;&#x964D;&#x91C7;&#x6837;&#xFF0C;&#x4EE5;&#x83B7;&#x5F97;&#x4E0D;&#x540C;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x56FE;&#x50CF;)&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#xFF0C;&#x65CB;&#x8F6C;&#x7684;&#x63CF;&#x8FF0;&#x5219;&#x7531;&#x7070;&#x5EA6;&#x8D28;&#x5FC3;&#x6CD5;&#x5B9E;&#x73B0;&#x3002;</p><h4 id="&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;">&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;</h4><p>&#x662F;&#x6307;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x7684;&#x964D;&#x91C7;&#x6837;&#xFF0C;&#x4EE5;&#x83B7;&#x5F97;&#x4E0D;&#x540C;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x56FE;&#x50CF;&#x3002;</p><p>&#x5728;&#x91D1;&#x5B57;&#x5854;&#x7684;&#x591A;&#x4E2A;&#x5C42;&#x4E0A;&#x90FD;&#x662F;&#x89D2;&#x70B9;&#xFF0C;&#x624D;&#x7B97;&#x662F;&#x89D2;&#x70B9;&#x3002;&#x5C31;&#x662F;&#x653E;&#x5927;&#x6216;&#x7F29;&#x5C0F;&#xFF0C;&#x8FDC;&#x770B;&#x6216;&#x8FD1;&#x770B;&#xFF0C;&#x90FD;&#x8FD8;&#x662F;&#x4E2A;&#x89D2;&#x70B9;&#xFF0C;&#x4E00;&#x822C;&#x662F;&#x89D2;&#x5EA6;&#x660E;&#x663E;&#x7684;&#x5C16;&#x89D2;&#x3002;</p><h4 id="&#x7070;&#x5EA6;&#x8D28;&#x5FC3;&#x6CD5;">&#x7070;&#x5EA6;&#x8D28;&#x5FC3;&#x6CD5;</h4><ol type="1"><li>&#x5728;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;&#x56FE;&#x50CF;&#x5757; <span class="math inline">\(B\)</span>&#x4E2D;&#xFF0C;&#x5B9A;&#x4E49;&#x56FE;&#x50CF;&#x5757;&#x7684;&#x77E9;&#x4E3A;&#xFF1A; <span class="math display">\[m_{pq} = \sum_{x,y\in B}x^py^qI(x, y) \quad p, q =\lbrace 0, 1\rbrace\]</span></li><li>&#x901A;&#x8FC7;&#x77E9;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x56FE;&#x50CF;&#x5757;&#x7684;&#x8D28;&#x5FC3; <span class="math display">\[C=\left( \frac {m_{10}}{m_{00}},\frac {m_{01}} {m_{00}} \right)\]</span></li><li>&#x8FDE;&#x63A5;&#x56FE;&#x50CF;&#x5757;&#x7684;&#x51E0;&#x4F55;&#x4E2D;&#x5FC3;$ O$ &#x4E0E;&#x8D28;&#x5FC3; <span class="math inline">\(C\)</span>&#xFF0C;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x5411;&#x91CF; <span class="math inline">\(\overrightarrow {OC}\)</span>&#xFF0C;&#x4E8E;&#x662F;&#x7279;&#x5F81;&#x70B9;&#x7684;&#x65B9;&#x5411;&#x53EF; &#x4EE5;&#x5B9A;&#x4E49;&#x4E3A; <span class="math display">\[\theta=arctan(m_{01}/m_{10})\]</span></li></ol><p>&#x901A;&#x8FC7;&#x4EE5;&#x4E0A;&#x65B9;&#x6CD5;&#xFF0C; FAST &#x89D2;&#x70B9;&#x4FBF;&#x5177;&#x6709;&#x4E86;&#x5C3A;&#x5EA6;&#x4E0E;&#x65CB;&#x8F6C;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x5927;&#x5927;&#x63D0;&#x5347;&#x4E86;&#x5B83;&#x4EEC;&#x5728;&#x4E0D;&#x540C;&#x56FE;&#x50CF;&#x4E4B;&#x95F4;&#x8868;&#x8FF0;&#x7684;&#x9C81;&#x68D2;&#x6027;&#x3002;&#x6240;&#x4EE5;&#x5728; ORB &#x4E2D;&#xFF0C;&#x628A;&#x8FD9;&#x79CD;&#x6539;&#x8FDB;&#x540E;&#x7684; FAST &#x79F0;&#x4E3A; Oriented FAST&#x3002;</p><h3 id="brief-&#x63CF;&#x8FF0;&#x5B50;">BRIEF &#x63CF;&#x8FF0;&#x5B50;</h3><p>BRIEF &#x662F;&#x4E00;&#x79CD;&#x4E8C;&#x8FDB;&#x5236;&#x63CF;&#x8FF0;&#x5B50;&#xFF0C;&#x5B83;&#x7684;&#x63CF;&#x8FF0;&#x5411;&#x91CF;&#x7531;&#x8BB8;&#x591A;&#x4E2A; 0 &#x548C; 1 &#x7EC4;&#x6210;&#xFF0C;&#x8FD9;&#x91CC;&#x7684; 0 &#x548C; 1 &#x7F16;&#x7801;&#x4E86;&#x5173;&#x952E;&#x70B9;&#x9644;&#x8FD1;&#x4E24;&#x4E2A;&#x50CF;&#x7D20;&#xFF08;&#x6BD4;&#x5982;&#x8BF4; <span class="math inline">\(p\)</span> &#x548C; <span class="math inline">\(q\)</span>&#xFF09;&#x7684;&#x5927;&#x5C0F;&#x5173;&#x7CFB;&#xFF1A;&#x5982;&#x679C; <span class="math inline">\(p\)</span> &#x6BD4; <span class="math inline">\(q\)</span> &#x5927;&#xFF0C;&#x5219;&#x53D6; 1&#xFF0C;&#x53CD;&#x4E4B;&#x5C31;&#x53D6; 0&#x3002;</p><p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x53D6;&#x4E86; 128 &#x4E2A;&#x8FD9;&#x6837;&#x7684; <span class="math inline">\(p&#xFF0C; q\)</span>&#xFF0C;&#x6700;&#x540E;&#x5C31;&#x5F97;&#x5230; 128 &#x7EF4;&#x7531; 0&#xFF0C; 1 &#x7EC4;&#x6210;&#x7684;&#x5411;&#x91CF;&#x3002;</p><p>BRIEF &#x4F7F;&#x7528;&#x4E86;&#x968F;&#x673A;&#x9009;&#x70B9;&#x7684;&#x6BD4;&#x8F83;&#xFF0C;&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x5FEB;&#xFF0C;&#x800C;&#x4E14;&#x7531;&#x4E8E;&#x4F7F;&#x7528;&#x4E86;&#x4E8C;&#x8FDB;&#x5236;&#x8868;&#x8FBE;&#xFF0C;&#x5B58;&#x50A8;&#x8D77;&#x6765;&#x4E5F;&#x5341;&#x5206;&#x65B9;&#x4FBF;&#xFF0C;&#x9002;&#x7528;&#x4E8E;&#x5B9E;&#x65F6;&#x7684;&#x56FE;&#x50CF;&#x5339;&#x914D;&#x3002;</p><p>ORB &#x5728; FAST &#x7279;&#x5F81;&#x70B9;&#x63D0;&#x53D6;&#x9636;&#x6BB5;&#x8BA1;&#x7B97;&#x4E86;&#x5173;&#x952E;&#x70B9;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x65B9;&#x5411;&#x4FE1;&#x606F;&#xFF0C;&#x8BA1;&#x7B97;&#x4E86;&#x65CB;&#x8F6C;&#x4E4B;&#x540E;&#x7684;&#x201C;Steer BRIEF&#x201D;&#x7279;&#x5F81;&#xFF0C;&#x4F7F; ORB &#x7684;&#x63CF;&#x8FF0;&#x5B50;&#x5177;&#x6709;&#x8F83;&#x597D;&#x7684;&#x65CB;&#x8F6C;&#x4E0D;&#x53D8;&#x6027;&#x3002;</p><p>&#x7531;&#x4E8E;&#x8003;&#x8651;&#x5230;&#x4E86;&#x65CB;&#x8F6C;&#x548C;&#x7F29;&#x653E;&#xFF0C;&#x4F7F;&#x5F97; ORB &#x5728;&#x5E73;&#x79FB;&#x3001;&#x65CB;&#x8F6C;&#x3001;&#x7F29;&#x653E;&#x7684;&#x53D8;&#x6362;&#x4E0B;&#x4ECD;&#x6709;&#x826F;&#x597D;&#x7684;&#x8868;&#x73B0;&#x3002;</p><h2 id="&#x7279;&#x5F81;&#x5339;&#x914D;">&#x7279;&#x5F81;&#x5339;&#x914D;</h2><p>&#x901A;&#x8FC7;&#x63CF;&#x8FF0;&#x5B50;&#x7684;&#x5DEE;&#x5F02;&#x5224;&#x65AD;&#x54EA;&#x4E9B;&#x7279;&#x5F81;&#x4E3A;&#x540C;&#x4E00;&#x4E2A;&#x70B9;&#x3002;</p><p>&#x66B4;&#x529B;&#x5339;&#x914D;&#xFF1A;&#x6BD4;&#x8F83;&#x56FE;1&#x4E2D;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x548C;&#x56FE;2&#x7279;&#x5F81;&#x7684;&#x8DDD;&#x79BB;&#xFF08;Brute-Force Matcher&#xFF09;</p><p>&#x52A0;&#x901F;&#xFF1A;&#x5FEB;&#x901F;&#x8FD1;&#x4F3C;&#x6700;&#x8FD1;&#x90BB;&#xFF08;FLANN&#xFF09;</p><h2 id="&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;-&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;">&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;-&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;</h2><p><strong>Input</strong><br>&#x5DE6;&#x56FE;&#x50CF;&#x3001;&#x53F3;&#x56FE;&#x50CF;&#x5E8F;&#x5217;&#x3001;&#x5DE6;&#x53F3;&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;<br><strong>Output</strong><br>&#x56FE;&#x50CF;&#x5BF9;&#x4E4B;&#x95F4;&#x7684;&#x4F4D;&#x59FF;&#x5173;&#x7CFB;&#x3001;&#x76F8;&#x673A;&#x8F68;&#x8FF9;(&#x4E5F;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x57FA;&#x4E8E;&#x7279;&#x5F81;&#x70B9;&#x7684;&#x7A00;&#x758F;3d&#x5730;&#x56FE;&#xFF0C;optional)</p><ol type="1"><li>&#x83B7;&#x5F97;&#x5DE6;&#x53F3;&#x56FE;&#x50CF;&#x3001;&#x56FE;&#x50CF;&#x6821;&#x6B63;</li><li>&#x63D0;&#x53D6;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#x70B9;</li><li>&#x5DE6;&#x53F3;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#x5339;&#x914D;&#xFF0C;&#x83B7;&#x53D6;&#x7279;&#x5F81;&#x70B9;&#x5750;&#x6807;</li><li>&#x524D;&#x540E;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#x5339;&#x914D;</li><li>&#x589E;&#x91CF;&#x5F0F;&#x7684;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;</li></ol><p>&#x5728;&#x6700;&#x540E;&#x4E00;&#x6B65;&#x201C;&#x589E;&#x91CF;&#x5F0F;&#x7684;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;&#x201D;&#x4E2D;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x6839;&#x636E;&#x5339;&#x914D;&#x540E;&#x7684;&#x7279;&#x5F81;&#x70B9;&#x548C;&#x7279;&#x5F81;&#x70B9;&#x7684;&#x5750;&#x6807;&#xFF0C;&#x6062;&#x590D;&#x4E24;&#x4E2A;&#x65F6;&#x523B;&#x76F8;&#x673A;&#x7684;&#x8FD0;&#x52A8;&#x3002;</p><h3 id="&#x589E;&#x91CF;&#x5F0F;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;">&#x589E;&#x91CF;&#x5F0F;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;</h3><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;/</p><h2 id="pnp">PnP</h2><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;</p><h2 id="icp">ICP</h2><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;</p><h2 id="&#x7279;&#x5F81;&#x70B9;&#x6D41;&#x7A0B;">&#x7279;&#x5F81;&#x70B9;&#x6D41;&#x7A0B;</h2><ol type="1"><li>&#x5728;&#x56FE;&#x50CF;&#x4E2D;&#x63D0;&#x53D6;&#x7279;&#x5F81;&#x70B9;&#x5E76;&#x8BA1;&#x7B97;&#x7279;&#x5F81;&#x63CF;&#x8FF0;</li><li>&#x5728;&#x4E0D;&#x540C;&#x56FE;&#x50CF;&#x4E2D;&#x5BFB;&#x627E;&#x7279;&#x5F81;&#x5339;&#x914D;</li><li>&#x5229;&#x7528;&#x5339;&#x914D;&#x70B9;&#x4FE1;&#x606F;&#x8BA1;&#x7B97;&#x76F8;&#x673A;&#x4F4D;&#x59FF;</li></ol><h2 id="&#x7279;&#x5F81;&#x70B9;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x7F3A;&#x70B9;">&#x7279;&#x5F81;&#x70B9;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x7F3A;&#x70B9;</h2><ol type="1"><li>&#x5173;&#x952E;&#x70B9;&#x7684;&#x63D0;&#x53D6;&#x4E0E;&#x63CF;&#x8FF0;&#x5B50;&#x7684;&#x8BA1;&#x7B97;&#x975E;&#x5E38;&#x8017;&#x65F6;&#x3002;</li><li>&#x4F7F;&#x7528;&#x7279;&#x5F81;&#x70B9;&#x65F6;&#xFF0C;&#x5FFD;&#x7565;&#x4E86;&#x9664;&#x7279;&#x5F81;&#x70B9;&#x4EE5;&#x5916;&#x7684;&#x6240;&#x6709;&#x4FE1;&#x606F;&#x3002;</li><li>&#x76F8;&#x673A;&#x6709;&#x65F6;&#x4F1A;&#x8FD0;&#x52A8;&#x5230;&#x7279;&#x5F81;&#x7F3A;&#x5931;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5F80;&#x5F80;&#x8FD9;&#x4E9B;&#x5730;&#x65B9;&#x6CA1;&#x6709;&#x660E;&#x663E;&#x7684;&#x7EB9;&#x7406;&#x4FE1;&#x606F;&#x3002;</li></ol><p>xxxx</p><h1 id="&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;">&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;</h1><h2 id="&#x5149;&#x6D41;&#x7684;&#x6982;&#x5FF5;">&#x5149;&#x6D41;&#x7684;&#x6982;&#x5FF5;</h2><p>&#x5149;&#x6D41;&#x662F;&#x4E00;&#x79CD;&#x63CF;&#x8FF0;&#x50CF;&#x7D20;&#x968F;&#x7740;&#x65F6;&#x95F4;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#x4E4B;&#x95F4;&#x8FD0;&#x52A8;&#x7684;&#x65B9;&#x6CD5;&#x3002;<br>&#x5149;&#x6D41;&#x8868;&#x8FBE;&#x4E86;&#x56FE;&#x50CF;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x7531;&#x4E8E;&#x5B83;&#x5305;&#x542B;&#x4E86;&#x76EE;&#x6807;&#x8FD0;&#x52A8;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&#x7528;&#x6765;&#x786E;&#x5B9A;&#x76EE;&#x6807;&#x7684;&#x8FD0;&#x52A8;&#x60C5;&#x51B5;&#x3002;</p><p>&#x5149;&#x6D41;&#x9664;&#x4E86;&#x63D0;&#x4F9B;&#x8FDC;&#x8FD1;&#x5916;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x89D2;&#x5EA6;&#x4FE1;&#x606F;&#x3002;</p><p>&#x8BA1;&#x7B97;&#x90E8;&#x5206;&#x50CF;&#x7D20;&#x8FD0;&#x52A8;&#x7684;&#x79F0;&#x4E3A;&#x7A00;&#x758F;&#x5149;&#x6D41;&#xFF0C;&#x8BA1;&#x7B97;&#x6240;&#x6709;&#x50CF;&#x7D20;&#x7684;&#x79F0;&#x4E3A;&#x7A20;&#x5BC6;&#x5149;&#x6D41;&#x3002;</p><p>&#x672C;&#x8D28;&#x4E0A;&#x90FD;&#x662F;&#x4F30;&#x8BA1;&#x50CF;&#x7D20;&#x5728;&#x4E0D;&#x540C;&#x65F6;&#x523B;&#x56FE;&#x50CF;&#x4E2D;&#x7684;&#x8FD0;&#x52A8;&#x3002;</p><h2 id="&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;">&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;</h2><p>&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x8BC4;&#x4F30;&#x4E24;&#x5E45;&#x56FE;&#x50CF;&#x7684;&#x4E4B;&#x95F4;&#x7684;&#x53D8;&#x5F62;&#xFF0C;&#x5B83;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4F53;&#x7D20;&#xFF08;&#x4F53;&#x79EF;&#x5143;&#x7D20;&#x7684;&#x7B80;&#x79F0;&#xFF09;&#x548C;&#x56FE;&#x50CF;&#x50CF;&#x7D20;&#x5B88;&#x6052;&#x3002;&#x5B83;&#x5047;&#x8BBE;&#x4E00;&#x4E2A;&#x7269;&#x4F53;&#x7684;&#x989C;&#x8272;&#x5728;&#x524D;&#x540E;&#x4E24;&#x5E27;&#x6CA1;&#x6709;&#x5DE8;&#x5927;&#x800C;&#x660E;&#x663E;&#x7684;&#x53D8;&#x5316;&#x3002;&#x57FA;&#x4E8E;&#x8FD9;&#x4E2A;&#x601D;&#x8DEF;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x56FE;&#x50CF;&#x7EA6;&#x675F;&#x65B9;&#x7A0B;&#x3002;&#x4E0D;&#x540C;&#x7684;&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x89E3;&#x51B3;&#x4E86;&#x5047;&#x5B9A;&#x4E86;&#x4E0D;&#x540C;&#x9644;&#x52A0;&#x6761;&#x4EF6;&#x7684;&#x5149;&#x6D41;&#x95EE;&#x9898;&#x3002;</p><h2 id="&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x8FC7;&#x7A0B;">&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x8FC7;&#x7A0B;</h2><ol type="1"><li>&#x56FE;&#x50CF;&#x83B7;&#x53D6;&#xFF1A;&#x5355;&#x76EE;&#x7167;&#x76F8;&#x673A;&#x3001;&#x53CC;&#x76EE;&#x7167;&#x76F8;&#x673A;&#x6216;&#x8005;&#x5168;&#x5411;&#x7167;&#x76F8;&#x673A;&#xFF1B;</li><li>&#x56FE;&#x50CF;&#x6821;&#x6B63;&#xFF1A;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x6280;&#x672F;&#x6765;&#x53BB;&#x9664;&#x900F;&#x955C;&#x7578;&#x53D8;&#xFF1B;</li><li>&#x7279;&#x5F81;&#x68C0;&#x6D4B;&#xFF1A;&#x786E;&#x5B9A;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x5728;&#x5E27;&#x4E0E;&#x5E27;&#x4E4B;&#x95F4;&#x5339;&#x914D;&#x7279;&#x5F81;&#x5E76;&#x6784;&#x5EFA;&#x5149;&#x6D41;&#x573A;&#x3002;</li></ol><ul><li>&#x4F7F;&#x7528;&#x76F8;&#x5173;&#x6027;&#x6765;&#x5EA6;&#x91CF;&#x4E24;&#x5E45;&#x56FE;&#x50CF;&#x95F4;&#x7684;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x5E76;&#x4E0D;&#x8FDB;&#x884C;&#x957F;&#x65F6;&#x95F4;&#x7684;&#x7279;&#x5F81;&#x8DDF;&#x8E2A;</li><li>&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x3001;&#x5339;&#x914D;&#xFF08;Lucas&#x2013;Kanade method&#xFF09;</li><li>&#x6784;&#x5EFA;&#x5149;&#x6D41;&#x573A;</li></ul><ol start="4" type="1"><li>&#x68C0;&#x67E5;&#x5149;&#x6D41;&#x573A;&#x5411;&#x91CF;&#x662F;&#x5426;&#x5B58;&#x5728;&#x6F5C;&#x5728;&#x7684;&#x8DDF;&#x8E2A;&#x8BEF;&#x5DEE;&#xFF0C;&#x79FB;&#x9664;&#x5916;&#x70B9;</li><li>&#x7531;&#x5149;&#x6D41;&#x573A;&#x4F30;&#x8BA1;&#x7167;&#x76F8;&#x673A;&#x7684;&#x8FD0;&#x52A8;</li></ol><ul><li>&#x53EF;&#x9009;&#x65B9;&#x6CD5;1&#xFF1A;&#x4F7F;&#x7528;&#x5361;&#x5C14;&#x66FC;&#x6EE4;&#x6CE2;&#x8FDB;&#x884C;&#x72B6;&#x6001;&#x4F30;&#x8BA1;</li><li>&#x53EF;&#x9009;&#x65B9;&#x6CD5;2&#xFF1A;&#x67E5;&#x627E;&#x7279;&#x5F81;&#x7684;&#x51E0;&#x4F55;&#x4E0E;3D&#x5C5E;&#x6027;&#xFF0C;&#x4EE5;&#x6700;&#x5C0F;&#x5316;&#x57FA;&#x4E8E;&#x76F8;&#x90BB;&#x4E24;&#x5E27;&#x4E4B;&#x95F4;&#x7684;&#x91CD;&#x6295;&#x5F71;&#x8BEF;&#x5DEE;&#x7684;&#x7F5A;&#x51FD;&#x6570;&#x503C;&#x3002;&#x8FD9;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6570;&#x5B66;&#x4E0A;&#x7684;&#x6700;&#x5C0F;&#x5316;&#x65B9;&#x6CD5;&#x6216;&#x968F;&#x673A;&#x91C7;&#x6837;&#x65B9;&#x6CD5;&#x6765;&#x5B8C;&#x6210;</li></ul><ol start="6" type="1"><li>&#x5468;&#x671F;&#x6027;&#x7684;&#x91CD;&#x5B9A;&#x4F4D;&#x8DDF;&#x8E2A;&#x70B9;&#x3002;</li></ol><h2 id="&#x5149;&#x6D41;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;">&#x5149;&#x6D41;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;</h2><ol type="1"><li>&#x5149;&#x6D41;&#x4EC5;&#x4F30;&#x8BA1;&#x4E86;&#x50CF;&#x7D20;&#x95F4;&#x7684;&#x5E73;&#x79FB;&#xFF0C;&#x6CA1;&#x6709;&#x7528;&#x5230;&#x76F8;&#x673A;&#x672C;&#x8EAB;&#x7684;&#x51E0;&#x4F55;&#x7ED3;&#x6784;</li><li>&#x6CA1;&#x6709;&#x8003;&#x8651;&#x5230;&#x76F8;&#x673A;&#x7684;&#x65CB;&#x8F6C;&#x548C;&#x56FE;&#x50CF;&#x7684;&#x7F29;&#x653E;</li><li>&#x5BF9;&#x4E8E;&#x8FB9;&#x754C;&#x4E0A;&#x7684;&#x70B9;&#xFF0C;&#x5149;&#x6D41;&#x4E0D;&#x597D;&#x8FFD;&#x8E2A;</li></ol><p>&#x4F46;&#x662F;<a href="./#&#x76F4;&#x63A5;&#x6CD5;">&#x76F4;&#x63A5;&#x6CD5;</a>&#x5219;&#x8003;&#x8651;&#x4E86;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;</p><h2 id="lucas-kanade-&#x5149;&#x6D41;">Lucas-Kanade &#x5149;&#x6D41;</h2><h3 id="&#x6982;&#x8FF0;-5">&#x6982;&#x8FF0;</h3><p>&#x8BA1;&#x7B97;&#x4E24;&#x5E27;&#x5728;&#x65F6;&#x95F4;<span class="math inline">\(t\)</span>&#xA0;&#x5230;<span class="math inline">\(t + &#x3B4;t\)</span>&#x4E4B;&#x95F4;&#x6BCF;&#x4E2A;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x4F4D;&#x7F6E;&#x7684;&#x79FB;&#x52A8;&#x3002;&#x7531;&#x4E8E;&#x5B83;&#x662F;&#x57FA;&#x4E8E;&#x56FE;&#x50CF;&#x4FE1;&#x53F7;&#x7684;&#x6CF0;&#x52D2;&#x7EA7;&#x6570;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x79F0;&#x4E3A;&#x5DEE;&#x5206;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;&#x7A7A;&#x95F4;&#x548C;&#x65F6;&#x95F4;&#x5750;&#x6807;&#x4F7F;&#x7528;&#x504F;&#x5BFC;&#x6570;&#x3002;</p><h3 id="&#x4E09;&#x4E2A;&#x5047;&#x8BBE;&#x6761;&#x4EF6;">&#x4E09;&#x4E2A;&#x5047;&#x8BBE;&#x6761;&#x4EF6;</h3><ol type="1"><li>&#x4EAE;&#x5EA6;&#x6052;&#x5B9A;&#xFF0C;&#x5C31;&#x662F;&#x540C;&#x4E00;&#x70B9;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x5176;&#x4EAE;&#x5EA6;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x7528;&#x4E8E;&#x5F97;&#x5230;&#x5149;&#x6D41;&#x6CD5;&#x57FA;&#x672C;&#x65B9;&#x7A0B;&#xFF1B;</li><li>&#x5C0F;&#x8FD0;&#x52A8;&#xFF0C;&#x8FD9;&#x4E2A;&#x5FC5;&#x987B;&#x6EE1;&#x8DB3;&#xFF0C;&#x5C31;&#x662F;&#x65F6;&#x95F4;&#x7684;&#x53D8;&#x5316;&#x4E0D;&#x4F1A;&#x5F15;&#x8D77;&#x4F4D;&#x7F6E;&#x7684;&#x5267;&#x70C8;&#x53D8;&#x5316;&#xFF0C;&#x8FD9;&#x6837;&#x7070;&#x5EA6;&#x624D;&#x80FD;&#x5BF9;&#x4F4D;&#x7F6E;&#x6C42;&#x504F;&#x5BFC;&#xFF08;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5C0F;&#x8FD0;&#x52A8;&#x60C5;&#x51B5;&#x4E0B;&#x6211;&#x4EEC;&#x624D;&#x80FD;&#x7528;&#x524D;&#x540E;&#x5E27;&#x4E4B;&#x95F4;&#x5355;&#x4F4D;&#x4F4D;&#x7F6E;&#x53D8;&#x5316;&#x5F15;&#x8D77;&#x7684;&#x7070;&#x5EA6;&#x53D8;&#x5316;&#x53BB;&#x8FD1;&#x4F3C;&#x7070;&#x5EA6;&#x5BF9;&#x4F4D;&#x7F6E;&#x7684;&#x504F;&#x5BFC;&#x6570;&#xFF09;&#xFF1B;</li><li>&#x7A7A;&#x95F4;&#x4E00;&#x81F4;&#xFF0C;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#x4E0A;&#x90BB;&#x8FD1;&#x7684;&#x70B9;&#x6295;&#x5F71;&#x5230;&#x56FE;&#x50CF;&#x4E0A;&#x4E5F;&#x662F;&#x90BB;&#x8FD1;&#x70B9;&#xFF0C;&#x4E14;&#x90BB;&#x8FD1;&#x70B9;&#x901F;&#x5EA6;&#x4E00;&#x81F4;&#x3002;&#x8FD9;&#x662F;Lucas-Kanade&#x5149;&#x6D41;&#x6CD5;&#x7279;&#x6709;&#x7684;&#x5047;&#x5B9A;&#x3002;</li></ol><p>&#x793A;&#x610F;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; <img src="/posts/1d9c933b/LK&#x5149;&#x6D41;&#x793A;&#x610F;&#x56FE;.jpg"></p><h3 id="lk&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;">LK&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;</h3><ol type="1"><li>&#x8BBE;<span class="math inline">\(t\)</span>&#x65F6;&#x523B;&#x4F4D;&#x4E8E;<span class="math inline">\(x,y\)</span>&#x5904;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x4E3A;<span class="math inline">\(I(x,y,t)\)</span></li><li>&#x5728;<span class="math inline">\(t+dt\)</span>&#x65F6;&#x523B;&#xFF0C;&#x8BE5;&#x50CF;&#x7D20;&#x8FD0;&#x52A8;&#x5230;&#x4E86;<span class="math inline">\(x+dx,y+dy\)</span>&#x5904;</li><li>&#x5E0C;&#x671B;&#x8BA1;&#x7B97;&#x8FD0;&#x52A8;<span class="math inline">\(dx,dy\)</span></li><li>&#x7531;&#x7070;&#x5EA6;&#x4E0D;&#x53D8;&#x5047;&#x8BBE; <span class="math inline">\(I(x+dx,y+dy,t+dt)=I(x,y,t)\)</span>&#x3002;&#x7070;&#x5EA6;&#x4E0D;&#x53D8;&#x5047;&#x8BBE;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x5F3A;&#x7684;&#x5047;&#x8BBE;&#xFF0C;&#x5B9E;&#x9645;&#x5F53;&#x4E2D;&#x5F88;&#x53EF;&#x80FD;&#x4E0D;&#x6210;&#x7ACB;&#x3002;</li><li>&#x5BF9; <span class="math inline">\(t+dt\)</span> &#x65F6;&#x523B;&#x7684;&#x7070;&#x5EA6;&#x8FDB;&#x884C;Taylor&#x5C55;&#x5F00;&#x5E76;&#x4FDD;&#x7559;&#x4E00;&#x9636;&#x9879;&#xFF1A; <img src="/posts/1d9c933b/LK&#x6CF0;&#x52D2;&#x4E00;&#x9636;.jpg"></li><li>&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x4E86;&#x7070;&#x5EA6;&#x4E0D;&#x53D8;&#xFF0C;&#x4E8E;&#x662F;&#x4E0B;&#x4E00;&#x4E2A;&#x65F6;&#x523B;&#x7684;&#x7070;&#x5EA6;&#x7B49;&#x4E8E;&#x4E4B;&#x524D;&#x7684;&#x7070;&#x5EA6;&#xFF0C;&#x4ECE;&#x800C; <img src="/posts/1d9c933b/LK&#x6CF0;&#x52D2;2.jpg"></li><li>&#x4E24;&#x8FB9;&#x9664;&#x4EE5; <span class="math inline">\(dt\)</span>&#xFF0C;&#x5F97;&#xFF1A; <img src="/posts/1d9c933b/LK&#x6CF0;&#x52D2;3.jpg"></li><li>&#x5176;&#x4E2D; <span class="math inline">\(dx/dt\)</span> &#x4E3A;&#x50CF;&#x7D20;&#x5728; <span class="math inline">\(x\)</span> &#x8F74;&#x4E0A;&#x8FD0;&#x52A8;&#x901F;&#x5EA6;&#xFF0C;&#x800C; <span class="math inline">\(dy/dt\)</span> &#x4E3A; <span class="math inline">\(y\)</span> &#x8F74;&#x901F;&#x5EA6;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x8BB0;&#x4E3A; <span class="math inline">\(u,v\)</span>&#x3002;&#x540C;&#x65F6; <span class="math inline">\(\partial I/ \partial x\)</span> &#x4E3A;&#x56FE;&#x50CF;&#x5728;&#x8BE5;&#x70B9;&#x5904; <span class="math inline">\(x\)</span> &#x65B9;&#x5411;&#x7684;&#x68AF;&#x5EA6;&#xFF0C;&#x53E6;&#x4E00;&#x9879;&#x5219;&#x662F;&#x5728; <span class="math inline">\(y\)</span> &#x65B9;&#x5411;&#x7684;&#x68AF;&#x5EA6;&#xFF0C;&#x8BB0;&#x4E3A; <span class="math inline">\(Ix, Iy\)</span>&#x3002;&#x628A;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x5BF9;&#x65F6;&#x95F4;&#x7684;&#x53D8;&#x5316;&#x91CF;&#x8BB0;&#x4E3A; <span class="math inline">\(I_t\)</span>&#xFF0C;&#x5199;&#x6210;&#x77E9;&#x9635;&#x5F62;&#x5F0F;&#xFF0C;&#x6709;&#xFF1A; <img src="/posts/1d9c933b/LK&#x6CF0;&#x52D2;4.jpg"></li><li>8&#x4E2D;&#x7684;&#x5F0F;&#x5B50;&#x662F;&#x4E00;&#x4E2A;&#x4E8C;&#x5143;&#x4E00;&#x6B21;&#x7EBF;&#x6027;&#x65B9;&#x7A0B;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#xFF0C;&#x6B20;&#x5B9A;&#x3002;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5F15;&#x5165;&#x989D;&#x5916;&#x7684;&#x7EA6;&#x675F;&#x3002;&#x5047;&#x5B9A;&#x4E00;&#x4E2A;&#x7A97;&#x53E3;<span class="math inline">\((w*w)\)</span>&#x5185;&#x5149;&#x5EA6;&#x4E0D;&#x53D8;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x8BA1;&#x7B97;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x6765;&#x6C42;&#x89E3;<span class="math inline">\(u&#xFF0C;v\)</span>&#x3002; <img src="/posts/1d9c933b/LK&#x6C42;&#x89E3;.jpg"></li></ol><h2 id="&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;">&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;</h2><p>&#x5BF9;&#x4E8E;&#x5F62;&#x5982;<span class="math inline">\(A_{m&#xD7;n}X=b\)</span>&#x7684;&#x65B9;&#x7A0B;&#xFF0C;&#x8003;&#x8651;&#x6D4B;&#x91CF;&#x6570;&#x636E;&#x548C;&#x6240;&#x9700;&#x89E3;&#x7684;&#x53C2;&#x6570;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x8BE5;&#x65B9;&#x7A0B;&#x7684;&#x89E3;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x60C5;&#x51B5;&#xFF1A; <img src="/posts/1d9c933b/&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x60C5;&#x51B5;.jpg"></p><p>&#x8003;&#x8651;<span class="math inline">\(m&#x2265;n\)</span>&#x5E76;&#x4E14;<span class="math inline">\(R(A)=n\)</span>&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x679C;&#x89E3;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x4F46;&#x627E;&#x4E00;&#x4E2A;&#x6700;&#x63A5;&#x8FD1;<span class="math inline">\(A_{m&#xD7;n}X=b\)</span>&#x7684;&#x89E3;&#x77E2;&#x91CF;&#x4ECD;&#x7136;&#x6709;&#x610F;&#x4E49;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x7A0B;&#x6210;&#x4E3A;&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#xFF08;&#x65B9;&#x7A0B;&#x5927;&#x4E8E;&#x672A;&#x77E5;&#x6570;&#xFF09;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x5BFB;&#x627E;&#x4E00;&#x4E2A;&#x5411;&#x91CF;<span class="math inline">\(x\)</span>&#x4F7F;&#x5F97; <span class="math inline">\(&#x2016;Ax&#x2212;b&#x2016;\)</span>&#x6700;&#x5C0F;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;<span class="math inline">\(&#x2016;&#x2219;&#x2016;\)</span>&#x8868;&#x793A;&#x77E2;&#x91CF;&#x8303;&#x6570;&#x3002;&#x8FD9;&#x6837;&#x7684;xx&#x79F0;&#x4E3A;&#x8BE5;&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x7684;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x3002;</p><h3 id="&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;">&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;</h3><p>&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;&#x7684;&#x76EE;&#x6807;&#xFF1A;&#x6C42;&#x8BEF;&#x5DEE;&#x7684;&#x6700;&#x5C0F;&#x5E73;&#x65B9;&#x548C;&#x3002;</p><p>&#x5BF9;&#x5E94;&#x6709;&#x4E24;&#x79CD;&#x6A21;&#x578B;&#xFF1A;&#x7EBF;&#x6027;&#x6A21;&#x578B;&#x548C;&#x975E;&#x7EBF;&#x6027;&#x6A21;&#x578B;&#x3002;</p><p>&#x5982;&#x679C;&#x77E9;&#x9635;&#x662F;&#x53EF;&#x9006;&#x7684;&#xFF0C;&#x7EBF;&#x6027;&#x6A21;&#x578B;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x7684;&#x89E3;&#x662F;closed-form&#xFF08;&#x95ED;&#x5F0F;&#x89E3;&#xFF09;&#x5373; <span class="math display">\[\theta = (X^TX)^{-1}X^TY\]</span> &#x800C;&#x975E;&#x7EBF;&#x6027;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CA1;&#x6709;closed-form&#xFF08;&#x95ED;&#x5F0F;&#x89E3;&#xFF09;&#xFF0C;&#x901A;&#x5E38;&#x7528;&#x8FED;&#x4EE3;&#x6CD5;&#x6C42;&#x89E3;&#xFF0C;&#x5982;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;(&#x53C8;&#x5206;&#x4E3A;&#x6279;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x3001;&#x968F;&#x673A;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;)&#x3001;&#x725B;&#x987F;&#x6CD5;&#x3001;&#x62DF;&#x725B;&#x987F;&#x6CD5;&#x7B49;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x6761;&#x4EF6;&#x66F4;&#x4E3A;&#x5E7F;&#x6CDB;&#xFF08;&#x65E0;&#x7EA6;&#x675F;&#xFF09;&#xFF0C;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x8FED;&#x4EE3;&#x66F4;&#x65B0;&#x6765;&#x9010;&#x6B65;&#x8FDB;&#x884C;&#x7684;&#x53C2;&#x6570;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#xFF0C;&#x6700;&#x7EC8;&#x7ED3;&#x679C;&#x4E3A;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x3002;</p><p>&#x5982;&#x679C;&#x4F18;&#x5316;&#x7684;&#x51FD;&#x6570;&#x662F;&#x51F8;&#x51FD;&#x6570;&#xFF0C;&#x6781;&#x5C0F;&#x503C;&#x70B9;&#x5373;&#x6700;&#x5C0F;&#x503C;&#x70B9;&#xFF0C;&#x5B58;&#x5728;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#x3002;</p><h3 id="&#x6027;&#x8D28;-2">&#x6027;&#x8D28;</h3><p>&#x4E00;&#x822C;&#x8BF4;&#x6765;&#xFF0C;&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x65E0;&#x89E3;&#xFF08;&#x6B64;&#x65F6;&#x4E3A;&#x77DB;&#x76FE;&#x65B9;&#x7A0B;&#x7EC4;&#xFF09;&#xFF0C;&#x8FD9;&#x65F6;&#x9700;&#x8981;&#x5BFB;&#x627E;&#x65B9;&#x7A0B;&#x7EC4;&#x7684;&#x4E00;&#x4E2A;&#x201C;&#x6700;&#x8FD1;&#x4F3C;&#x201D;&#x7684;&#x89E3;.</p><p><strong>&#x5B9A;&#x4E49;</strong> &#x8BB0;&#x8BEF;&#x5DEE;&#x5411;&#x91CF; <span class="math inline">\(r=b-Ax\)</span>, &#x79F0;&#x4F7F;<span class="math inline">\(||r||^2_2\)</span> &#x6700;&#x5C0F;&#x7684;&#x89E3;<span class="math inline">\(x*\)</span>&#x4E3A;&#x65B9;&#x7A0B;&#x7EC4;<span class="math inline">\(Ax=b\)</span>&#x7684;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x3002;</p><p><strong>&#x5B9A;&#x7406;</strong> <span class="math inline">\(x\*\)</span>&#x662F; <span class="math inline">\(Ax=b\)</span>&#x7684;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x7684;&#x5145;&#x8981;&#x6761;&#x4EF6;&#x4E3A;<span class="math inline">\(x\*\)</span>&#x662F; <span class="math inline">\(A^TAx=A^Tb\)</span> &#x7684;&#x89E3;.</p><h3 id="&#x8303;&#x6570;">&#x8303;&#x6570;</h3><p>L1-&#x8303;&#x6570;&#xFF1A;<span class="math inline">\(||x||_1=\sum_{i=1}^n|x_i|\)</span><br>L2-&#x8303;&#x6570;&#xFF1A;<span class="math inline">\(||x||_2=\sqrt{\sum_{i=1}^nx_i^2}\)</span></p><p>L2&#x8303;&#x6570;&#x662F;&#x6700;&#x5E38;&#x7528;&#x7684;&#x8303;&#x6570;&#xFF0C;&#x6B27;&#x5F0F;&#x7A7A;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x5EA6;&#x91CF;&#x65B9;&#x6CD5;&#x6B27;&#x6C0F;&#x8DDD;&#x79BB;&#x5C31;&#x662F;&#x4E00;&#x79CD;L2&#x8303;&#x6570;</p><p>L2&#x8303;&#x6570;&#x662F;&#x6307;&#x5411;&#x91CF;&#x5404;&#x5143;&#x7D20;&#x7684;&#x5E73;&#x65B9;&#x548C;&#x7136;&#x540E;&#x6C42;&#x5E73;&#x65B9;&#x6839;&#x3002;&#x8BA9;L2&#x8303;&#x6570;&#x7684;&#x89C4;&#x5219;&#x9879;&#x6700;&#x5C0F;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x5F97;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x5F88;&#x5C0F;&#xFF0C;&#x90FD;&#x63A5;&#x8FD1;&#x4E8E;0&#xFF0C;&#x4F46;&#x4E0E;L1&#x8303;&#x6570;&#x4E0D;&#x540C;&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x8BA9;&#x5B83;&#x7B49;&#x4E8E;0&#xFF0C;&#x800C;&#x662F;&#x63A5;&#x8FD1;&#x4E8E;0&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E2D;&#x4E00;&#x822C;&#x7528;&#x6765;&#x9632;&#x6B62;&#x8FC7;&#x62DF;&#x5408;&#x3002;</p><h3 id="&#x8BC1;&#x660E;&#x5B9A;&#x7406;">&#x8BC1;&#x660E;&#x5B9A;&#x7406;</h3><p><strong>&#x5B9A;&#x7406;</strong> <span class="math inline">\(x\*\)</span>&#x662F; <span class="math inline">\(Ax=b\)</span>&#x7684;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x7684;&#x5145;&#x8981;&#x6761;&#x4EF6;&#x4E3A;<span class="math inline">\(x\*\)</span>&#x662F; <span class="math inline">\(A^TAx=A^Tb\)</span> &#x7684;&#x89E3;. <img src="/posts/1d9c933b/&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x5145;&#x5206;&#x6027;.jpg"> <img src="/posts/1d9c933b/&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x5FC5;&#x8981;&#x6027;.jpg"></p><h3 id="&#x8BA1;&#x7B97;&#x4F8B;&#x9898;">&#x8BA1;&#x7B97;&#x4F8B;&#x9898;</h3><p><img src="/posts/1d9c933b/&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x4F8B;&#x9898;1.jpg"> <img src="/posts/1d9c933b/&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x4F8B;&#x9898;2.jpg"> <img src="/posts/1d9c933b/&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x4F8B;&#x9898;3.jpg"></p><h2 id="&#x76F4;&#x63A5;&#x6CD5;">&#x76F4;&#x63A5;&#x6CD5;</h2><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;</p><h3 id="&#x4F18;&#x70B9;">&#x4F18;&#x70B9;</h3><ul><li>&#x7701;&#x7565;&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x7684;&#x65F6;&#x95F4;</li><li>&#x53EA;&#x9700;&#x6709;&#x50CF;&#x7D20;&#x68AF;&#x5EA6;&#x800C;&#x4E0D;&#x5FC5;&#x662F;&#x89D2;&#x70B9;&#xFF08;&#x5BF9;&#x767D;&#x5899;&#x7B49;&#x5730;&#x65B9;&#x6709;&#x8F83;&#x597D;&#x6548;&#x679C;&#xFF09;</li><li>&#x53EF;&#x7A20;&#x5BC6;&#x6216;&#x534A;&#x7A20;&#x5BC6;</li></ul><h3 id="&#x7F3A;&#x70B9;">&#x7F3A;&#x70B9;</h3><ul><li>&#x7070;&#x5EA6;&#x4E0D;&#x53D8;&#x96BE;&#x4EE5;&#x6EE1;&#x8DB3;&#xFF08;&#x6613;&#x53D7;&#x66DD;&#x5149;&#x548C;&#x6A21;&#x7CCA;&#x5F71;&#x54CD;&#xFF09;</li><li>&#x5355;&#x50CF;&#x7D20;&#x533A;&#x5206;&#x6027;&#x5DEE;</li><li>&#x56FE;&#x50CF;&#x975E;&#x51F8;&#x6027;</li></ul><h1 id="slam">SLAM</h1><h2 id="slam&#x6982;&#x5FF5;">SLAM&#x6982;&#x5FF5;</h2><p>&#x673A;&#x5668;&#x4EBA;&#x5728;&#x4E00;&#x4E2A;&#x672A;&#x77E5;&#x73AF;&#x5883;&#x4E2D;&#x4ECE;&#x4E00;&#x4E2A;&#x672A;&#x77E5;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x79FB;&#x52A8;&#xFF0C;&#x5728;&#x79FB;&#x52A8;&#x8FC7;&#x7A0B;&#x4E2D;&#x6839;&#x636E;&#x4F4D;&#x7F6E;&#x4F30;&#x8BA1;&#x548C;&#x5730;&#x56FE;&#x8FDB;&#x884C;&#x81EA;&#x8EAB;&#x5B9A;&#x4F4D;&#xFF0C;&#x540C;&#x65F6;&#x5728;&#x81EA;&#x8EAB;&#x5B9A;&#x4F4D;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5EFA;&#x9020;&#x589E;&#x91CF;&#x5F0F;&#x5730;&#x56FE;&#xFF0C;&#x5B9E;&#x73B0;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x81EA;&#x4E3B;&#x5B9A;&#x4F4D;&#x548C;&#x5BFC;&#x822A;&#x3002;</p><h2 id="slam&#x6982;&#x89C8;">SLAM&#x6982;&#x89C8;</h2><p><img src="/posts/1d9c933b/SLAM&#x6982;&#x89C8;&#x82F1;&#x6587;.jpg"> <img src="/posts/1d9c933b/SLAM&#x6982;&#x89C8;&#x4E2D;&#x6587;.jpg"></p><h2 id="&#x89C6;&#x89C9;slam&#x6D41;&#x7A0B;">&#x89C6;&#x89C9;SLAM&#x6D41;&#x7A0B;</h2><ol type="1"><li>&#x4F20;&#x611F;&#x5668;&#x4FE1;&#x606F;&#x8BFB;&#x53D6;&#x3002;&#x5728;&#x89C6;&#x89C9; SLAM &#x4E2D;&#x4E3B;&#x8981;&#x4E3A;&#x76F8;&#x673A;&#x56FE;&#x50CF;&#x4FE1;&#x606F;&#x7684;&#x8BFB;&#x53D6;&#x548C;&#x9884;&#x5904;&#x7406;&#x3002;&#x5982;&#x679C;&#x5728;&#x673A;&#x5668;&#x4EBA;&#x4E2D;&#xFF0C;&#x8FD8;&#x53EF;&#x80FD;&#x6709;&#x7801;&#x76D8;&#x3001;&#x60EF;&#x6027;&#x4F20;&#x611F;&#x5668;&#x7B49;&#x4FE1;&#x606F;&#x7684;&#x8BFB;&#x53D6;&#x548C;&#x540C;&#x6B65;&#x3002;</li><li>&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1; (Visual Odometry, VO)&#x3002;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x4EFB;&#x52A1;&#x662F;&#x4F30;&#x7B97;&#x76F8;&#x90BB;&#x56FE;&#x50CF;&#x95F4;&#x76F8;&#x673A;&#x7684;&#x8FD0;&#x52A8;&#xFF0C;&#x4EE5;&#x53CA;&#x5C40;&#x90E8;&#x5730;&#x56FE;&#x7684;&#x6837;&#x5B50;&#x3002; VO &#x53C8;&#x79F0;&#x4E3A;&#x524D;&#x7AEF;&#xFF08;Front End&#xFF09;&#x3002;</li><li>&#x540E;&#x7AEF;&#x4F18;&#x5316;&#xFF08;Optimization&#xFF09;&#x3002;&#x540E;&#x7AEF;&#x63A5;&#x53D7;&#x4E0D;&#x540C;&#x65F6;&#x523B;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x6D4B;&#x91CF;&#x7684;&#x76F8;&#x673A;&#x4F4D;&#x59FF;&#xFF0C;&#x4EE5;&#x53CA;&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5BF9;&#x5B83;&#x4EEC;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#xFF0C;&#x5F97;&#x5230;&#x5168;&#x5C40;&#x4E00;&#x81F4;&#x7684;&#x8F68;&#x8FF9;&#x548C;&#x5730;&#x56FE;&#x3002;&#x7531;&#x4E8E;&#x63A5;&#x5728; VO &#x4E4B;&#x540E;&#xFF0C;&#x53C8;&#x79F0;&#x4E3A;&#x540E;&#x7AEF;&#xFF08;Back End&#xFF09;&#x3002;</li><li>&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#xFF08;Loop Closing&#xFF09;&#x3002;&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#x5224;&#x65AD;&#x673A;&#x5668;&#x4EBA;&#x662F;&#x5426;&#x66FE;&#x7ECF;&#x5230;&#x8FBE;&#x8FC7;&#x5148;&#x524D;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x5982;&#x679C;&#x68C0;&#x6D4B;&#x5230;&#x56DE;&#x73AF;&#xFF0C;&#x5B83;&#x4F1A;&#x628A;&#x4FE1;&#x606F;&#x63D0;&#x4F9B;&#x7ED9;&#x540E;&#x7AEF;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;</li><li>&#x5EFA;&#x56FE;&#xFF08;Mapping&#xFF09;&#x3002;&#x5B83;&#x6839;&#x636E;&#x4F30;&#x8BA1;&#x7684;&#x8F68;&#x8FF9;&#xFF0C;&#x5EFA;&#x7ACB;&#x4E0E;&#x4EFB;&#x52A1;&#x8981;&#x6C42;&#x5BF9;&#x5E94;&#x7684;&#x5730;&#x56FE;&#x3002;</li></ol><p>&#x4EE5;&#x4E0B;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;</p><h3 id="slam&#x5E38;&#x7528;&#x7684;&#x4F20;&#x611F;&#x5668;">SLAM&#x5E38;&#x7528;&#x7684;&#x4F20;&#x611F;&#x5668;</h3><ul><li>&#x7EA2;&#x5916;&#x4F20;&#x611F;&#x5668;&#xFF1A;&#x8F83;&#x8FD1;&#x8DDD;&#x79BB;&#x611F;&#x5E94;&#xFF0C;&#x5E38;&#x7528;&#x4E8E;&#x626B;&#x5730;&#x673A;&#x5668;&#x4EBA;&#x3002;</li><li>&#x6FC0;&#x5149;&#x96F7;&#x8FBE;&#x3001;&#x6DF1;&#x5EA6;&#x4F20;&#x611F;&#x5668;&#x3002;</li><li>&#x6444;&#x50CF;&#x5934;&#xFF1A;&#x5355;&#x76EE;&#xFF0C;&#x53CC;&#x76EE;&#xFF0C;&#x591A;&#x76EE;&#x3002;</li><li>&#x60EF;&#x6027;&#x4F20;&#x611F;&#x5668;&#xFF1A;&#x82F1;&#x6587;&#x53EB;IMU&#xFF0C;&#x5305;&#x62EC;&#x9640;&#x87BA;&#x4EEA;&#x3001;&#x52A0;&#x901F;&#x5EA6;&#x8BA1;&#xFF0C;&#x662F;&#x667A;&#x80FD;&#x624B;&#x673A;&#x7684;&#x6807;&#x914D;&#x3002;</li></ul><h3 id="slam&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;">SLAM&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;</h3><ul><li>&#x8BA1;&#x7B97;&#x81EA;&#x8EAB;&#x4F4D;&#x7F6E;&#xFF08;&#x5728;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x671D;&#x5411;&#xFF09;</li><li>&#x6784;&#x5EFA;&#x73AF;&#x5883;&#x5730;&#x56FE;&#xFF08;&#x7A00;&#x758F;&#x6216;&#x8005;&#x7A20;&#x5BC6;&#x7684;&#x4E09;&#x7EF4;&#x70B9;&#x4E91;&#xFF09;</li></ul><h3 id="&#x5730;&#x56FE;&#x8868;&#x793A;">&#x5730;&#x56FE;&#x8868;&#x793A;</h3><ol type="1"><li>&#x6805;&#x683C;&#x5730;&#x56FE;&#xFF1A;&#x6BCF;&#x4E2A;&#x6805;&#x683C;&#x4EE5;&#x6982;&#x7387;&#x7684;&#x5F62;&#x5F0F;&#x8868;&#x793A;&#x3002;3D&#x7684;&#x6805;&#x683C;&#x5730;&#x56FE;&#x91C7;&#x7528;&#x516B;&#x53C9;&#x6811;&#x5B58;&#x50A8;&#x3002;&#x9002;&#x7528;&#x4E8E;&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x4E0E;&#x907F;&#x969C;&#x3002;</li><li>&#x7279;&#x5F81;&#x5730;&#x56FE;&#xFF1A;&#x5730;&#x56FE;&#x6BD4;&#x8F83;&#x7A00;&#x758F;&#x3002;&#x9002;&#x7528;&#x4E8E;&#x5B58;&#x5728;&#x8F83;&#x591A;&#x7279;&#x5F81;&#x7684;&#x573A;&#x666F;&#x3002;</li><li>&#x4F4D;&#x59FF;&#x56FE;&#xFF1A;&#x4EC5;&#x5305;&#x542B;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x4F4D;&#x59FF;&#x4FE1;&#x606F;&#xFF0C;&#x6709;&#x6548;&#x8868;&#x8FBE;&#x4F4D;&#x59FF;&#x4E4B;&#x95F4;&#x7684;&#x7EA6;&#x675F;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0E;&#x6805;&#x683C;&#x5730;&#x56FE;&#x548C;&#x7279;&#x5F81;&#x5730;&#x56FE;&#x7ED3;&#x5408;&#x3002;</li><li>&#x5176;&#x4ED6;&#x5730;&#x56FE;&#xFF1A;&#x7528;&#x4E8E;&#x573A;&#x666F;&#x6784;&#x5EFA;&#xFF0C;TSDF&#x3002;</li></ol><h2 id="&#x89C6;&#x89C9;slam&#x6846;&#x67B6;">&#x89C6;&#x89C9;SLAM&#x6846;&#x67B6;</h2><p><img src="/posts/1d9c933b/&#x89C6;&#x89C9;SLAM&#x6846;&#x67B6;.jpg"></p><h2 id="&#x524D;&#x7AEF;&#x4E0E;&#x540E;&#x7AEF;">&#x524D;&#x7AEF;&#x4E0E;&#x540E;&#x7AEF;</h2><p>&#x524D;&#x7AEF;</p><ul><li>&#x63D0;&#x53D6;&#x4F20;&#x611F;&#x5668;&#x91C7;&#x96C6;&#x7684;&#x6570;&#x636E;</li><li>&#x8FDB;&#x884C;&#x6570;&#x636E;&#x5173;&#x8054;</li></ul><p>&#x540E;&#x7AEF;</p><ul><li>&#x5BF9;&#x524D;&#x7AEF;&#x4EA7;&#x751F;&#x7684;&#x6A21;&#x578B;&#x8FDB;&#x884C;&#x53C2;&#x6570;&#x4F30;&#x8BA1;</li></ul><p>&#x524D;&#x7AEF;&#x7EBF;&#x7A0B;&#xFF1A;</p><ol type="1"><li>&#x8F93;&#x5165;&#x4F20;&#x611F;&#x5668;&#x6570;&#x636E;</li><li>SLAM&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x7279;&#x5F81;&#x8FFD;&#x8E2A;&#x4E0E;&#x4F4D;&#x59FF;&#x5B9E;&#x65F6;&#x6C42;&#x89E3;&#x3002;</li><li>&#x8F93;&#x51FA;&#x8BBE;&#x5907;&#x5B9E;&#x65F6;&#x4F4D;&#x59FF;&#x548C;&#x4E09;&#x7EF4;&#x70B9;&#x4E91;&#x3002;</li></ol><p>&#x540E;&#x7AEF;&#x7EBF;&#x7A0B;&#xFF1A;</p><ol type="1"><li>&#x8FDB;&#x884C;&#x5C40;&#x90E8;&#x6216;&#x5168;&#x5C40;&#x4F18;&#x5316;&#xFF0C;&#x51CF;&#x5C11;&#x8BEF;&#x5DEE;&#x79EF;&#x7D2F;&#x3002;</li><li>&#x573A;&#x666F;&#x56DE;&#x8DEF;&#x68C0;&#x6D4B;&#x3002;</li><li>&#x573A;&#x666F;&#x91CD;&#x5B9A;&#x4F4D;&#x3002;</li></ol><h2 id="&#x5730;&#x56FE;&#x8868;&#x793A;-1">&#x5730;&#x56FE;&#x8868;&#x793A;</h2><ol type="1"><li>&#x6805;&#x683C;&#x5730;&#x56FE;</li></ol><ul><li>&#x6BCF;&#x4E2A;&#x6805;&#x683C;&#x4EE5;&#x6982;&#x7387;&#x7684;&#x5F62;&#x5F0F;&#x8868;&#x793A;</li><li>3D&#x7684;&#x6805;&#x683C;&#x5730;&#x56FE;&#x91C7;&#x7528;&#x516B;&#x53C9;&#x6811;&#x5B58;&#x50A8;</li><li>&#x9002;&#x7528;&#x4E8E;&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x4E0E;&#x907F;&#x969C;</li></ul><ol start="2" type="1"><li>&#x7279;&#x5F81;&#x5730;&#x56FE;</li></ol><ul><li>&#x5730;&#x56FE;&#x6BD4;&#x8F83;&#x7A00;&#x758F;</li><li>&#x9002;&#x7528;&#x4E8E;&#x5B58;&#x5728;&#x8F83;&#x591A;&#x7279;&#x5F81;&#x7684;&#x573A;&#x666F;</li></ul><ol start="3" type="1"><li>&#x4F4D;&#x59FF;&#x56FE;</li></ol><ul><li>&#x4EC5;&#x5305;&#x542B;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x4F4D;&#x59FF;&#x4FE1;&#x606F;</li><li>&#x6709;&#x6548;&#x8868;&#x8FBE;&#x4F4D;&#x59FF;&#x4E4B;&#x95F4;&#x7684;&#x7EA6;&#x675F;</li><li>&#x53EF;&#x4EE5;&#x4E0E;&#x6805;&#x683C;&#x5730;&#x56FE;&#x548C;&#x7279;&#x5F81;&#x5730;&#x56FE;&#x7ED3;&#x5408;</li></ul><ol start="4" type="1"><li>&#x5176;&#x4ED6;&#x5730;&#x56FE;</li></ol><ul><li>&#x7528;&#x4E8E;&#x573A;&#x666F;&#x6784;&#x5EFA;</li><li>TSDF</li></ul><h2 id="slam&#x524D;&#x7AEF;">SLAM&#x524D;&#x7AEF;</h2><h2 id="&#x56DE;&#x73AF;&#x68C0;&#x6D4B;">&#x56DE;&#x73AF;&#x68C0;&#x6D4B;</h2><h3 id="&#x65B9;&#x6CD5;">&#x65B9;&#x6CD5;</h3><ul><li>&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x5BF9;&#x4EFB;&#x610F;&#x4E24;&#x4E2A;&#x5173;&#x952E;&#x5E27;&#x8FDB;&#x884C;&#x7279;&#x5F81;&#x5339;&#x914D;&#x3002;<br></li><li>&#x57FA;&#x4E8E;&#x91CC;&#x7A0B;&#x8BA1;&#x7684;&#x65B9;&#x6CD5;&#x3002;</li><li>&#x57FA;&#x4E8E;&#x5916;&#x89C2;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x4E3B;&#x6D41;&#xFF0C;&#x6838;&#x5FC3;&#x5728;&#x4E8E;&#x8861;&#x91CF;&#x56FE;&#x50CF;&#x95F4;&#x7684;&#x76F8;&#x4F3C;&#x6027;&#x3002;</li></ul><h3 id="&#x8BC4;&#x4EF7;&#x6307;&#x6807;">&#x8BC4;&#x4EF7;&#x6307;&#x6807;</h3><p>ROC&#x66F2;&#x7EBF;&#x3002;<br>&#x7CBE;&#x5EA6;&#xFF1A;&#x6B63;&#x786E;&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#x5360;&#x603B;&#x68C0;&#x6D4B;&#x56DE;&#x73AF;&#x6570;&#x76EE;&#x7684;&#x6BD4;&#x7387;<br>&#x53EC;&#x56DE;&#xFF1A;&#x6B63;&#x786E;&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#x5360;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x603B;&#x56DE;&#x73AF;&#x7684;&#x6BD4;&#x7387;</p><h3 id="&#x8BCD;&#x888B;&#x6A21;&#x578B;">&#x8BCD;&#x888B;&#x6A21;&#x578B;</h3><p>Apperance-based&#x4E3B;&#x8981;&#x65B9;&#x6CD5;&#xFF1A;&#x8BCD;&#x888B;&#x3002;Bag of Words</p><p>BoW&#x662F;&#x5BF9;&#x7279;&#x5F81;&#x7684;&#x805A;&#x7C7B;&#xFF1A;</p><ul><li>&#x7279;&#x5F81;&#x805A;&#x7C7B;&#x5F62;&#x6210;&#x4E86;Word</li><li>&#x8BB8;&#x591A;Word&#x7EC4;&#x6210;&#x4E86;Dictionary</li><li>&#x56FE;&#x50CF;&#x7684;&#x76F8;&#x4F3C;&#x6027;=Word&#x7684;&#x76F8;&#x4F3C;&#x6027;</li><li>&#x53EA;&#x770B;Word&#x7684;&#x6709;&#x65E0;&#xFF0C;&#x65E0;&#x89C6;Word&#x7684;&#x987A;&#x5E8F;</li></ul><p>&#x64CD;&#x4F5C;&#x65B9;&#x6CD5;&#xFF1A;</p><ol type="1"><li>&#x9006;&#x5E8F;&#x7D22;&#x5F15;&#x5355;&#x8BCD;&#x6DB5;&#x76D6;&#x4E86;&#x6240;&#x6709;&#x51FA;&#x73B0;&#x7684;&#x5355;&#x8BCD;</li><li>&#x6BCF;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#x6307;&#x5411;&#x5305;&#x542B;&#x5B83;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x56FE;&#x50CF;</li><li>&#x91C7;&#x7528;&#x6295;&#x7968;&#x673A;&#x5236;&#x9009;&#x53D6;&#x5019;&#x9009;&#x8005;&#xFF0C;&#x52A0;&#x901F;&#x641C;&#x7D22;</li></ol><h3 id="&#x56FE;&#x50CF;-bow&#x5411;&#x91CF;">&#x56FE;&#x50CF;-&gt;BoW&#x5411;&#x91CF;</h3><ol type="1"><li>&#x8F93;&#x5165;&#x4E00;&#x5F20;&#x56FE;&#x50CF;I&#xFF0C;&#x8FDB;&#x884C;&#x7279;&#x5F81;&#x68C0;&#x6D4B;&#x4E0E;&#x7279;&#x5F81;&#x63CF;&#x8FF0;&#xFF0C;&#x7279;&#x5F81;&#x70B9;&#x6570;&#x91CF;&#x6700;&#x591A;&#x4E0D;&#x8D85;&#x8FC7;&#x7EA6;&#x5B9A;&#x503C;&#x3002;</li><li>&#x5C06;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x901A;&#x8FC7;&#x6811;&#x5F62;&#x7ED3;&#x6784;&#x7684;&#x5B57;&#x5178;&#xFF0C;&#x5F97;&#x5230;BoW&#x5411;&#x91CF;v&#xFF0C;&#x8BE5;&#x5411;&#x91CF;&#x7684;&#x7EF4;&#x5EA6;&#x4E3A;&#x7279;&#x5F81;&#x6570;&#x91CF;</li></ol><h2 id="&#x5E38;&#x7528;&#x5F00;&#x6E90;slam&#x7CFB;&#x7EDF;">&#x5E38;&#x7528;&#x5F00;&#x6E90;SLAM&#x7CFB;&#x7EDF;</h2><ol type="1"><li>PTAM</li><li>ORB-SLAM</li><li>LSD-SLAM</li><li>DSO</li><li>SVO</li><li>RDSLAM</li><li>PKSLAM</li></ol><h2 id="orb-slam&#x5206;&#x6790;">ORB-SLAM&#x5206;&#x6790;</h2><p><img src="/posts/1d9c933b/ORB-SLAM&#x57FA;&#x672C;&#x7A0B;&#x5E8F;&#x6846;&#x67B6;.jpg"> &#x4E09;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF1A;Tracking&#x3001;Local Mapping&#x3001;Loop Closing</p><p>&#x7279;&#x70B9;&#xFF1A;&#x57FA;&#x672C;&#x5EF6;&#x7EED;&#x4E86;PTAM&#x7684;&#x7B97;&#x6CD5;&#x6846;&#x67B6;&#xFF0C;&#x4F46;&#x5BF9;&#x6846;&#x67B6;&#x4E2D;&#x7684;&#x5927;&#x90E8;&#x5206;&#x7EC4;&#x4EF6;&#x90FD;&#x505A;&#x4E86;&#x6539;&#x8FDB;&#xFF1A;</p><ul><li>&#x9009;&#x7528;ORB&#x7279;&#x5F81;&#xFF0C;&#x5339;&#x914D;&#x548C;&#x91CD;&#x5B9A;&#x4F4D;&#x6027;&#x80FD;&#x66F4;&#x597D;&#x3002;</li><li>&#x52A0;&#x5165;&#x4E86;&#x5FAA;&#x73AF;&#x8D3F;&#x8D42;&#x7684;&#x68C0;&#x6D4B;&#x548C;&#x95ED;&#x5408;&#x673A;&#x5236;&#xFF0C;&#x4EE5;&#x6D88;&#x9664;&#x8BEF;&#x5DEE;&#x79EF;&#x7D2F;&#x3002;</li><li>&#x901A;&#x8FC7;&#x68C0;&#x6D4B;&#x89C6;&#x5DEE;&#x6765;&#x81EA;&#x52A8;&#x9009;&#x62E9;&#x521D;&#x59CB;&#x5316;&#x7684;&#x4E24;&#x5E27;&#x3002;</li><li>&#x91C7;&#x7528;&#x4E00;&#x79CD;&#x66F4;&#x9C81;&#x68D2;&#x7684;&#x5173;&#x952E;&#x5E27;&#x548C;&#x4E09;&#x7EF4;&#x70B9;&#x7684;&#x9009;&#x62E9;&#x673A;&#x5236;&#x3002;</li></ul><hr><h1 id="&#x8DEF;&#x5F84;&#x89C4;&#x5212;">&#x8DEF;&#x5F84;&#x89C4;&#x5212;</h1><h2 id="&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x6982;&#x5FF5;">&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x6982;&#x5FF5;</h2><p>&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x6280;&#x672F;&#x662F;&#x673A;&#x5668;&#x4EBA;&#x7814;&#x7A76;&#x9886;&#x57DF;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x5206;&#x652F;&#x3002;&#x6240;&#x8C13;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x6700;&#x4F18;&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x95EE;&#x9898;,&#x5C31;&#x662F;&#x4F9D;&#x636E;&#x67D0;&#x4E2A;&#x6216;&#x67D0;&#x4E9B;&#x4F18;&#x5316;&#x51C6;&#x5219;(&#x5982;&#x5DE5;&#x4F5C;&#x4EE3;&#x4EF7;&#x6700;&#x5C0F;&#x3001;&#x884C;&#x8D70;&#x8DEF;&#x7EBF;&#x6700;&#x77ED;&#x3001;&#x884C;&#x8D70;&#x65F6;&#x95F4;&#x6700;&#x77ED;&#x7B49;),&#x5728;&#x5176;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x4E2D;&#x627E;&#x5230;&#x4E00;&#x6761;&#x4ECE;&#x8D77;&#x59CB;&#x72B6;&#x6001;&#x5230;&#x76EE;&#x6807;&#x72B6;&#x6001;&#x7684;&#x80FD;&#x907F;&#x5F00;&#x969C;&#x788D;&#x7269;&#x7684;&#x6700;&#x4F18;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x4F9D;&#x636E;&#x67D0;&#x79CD;&#x6700;&#x4F18;&#x51C6;&#x5219;&#xFF0C;&#x5728;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x4E2D;&#x5BFB;&#x627E;&#x4E00;&#x6761;&#x4ECE;&#x8D77;&#x59CB;&#x72B6;&#x6001;&#x5230;&#x76EE;&#x6807;&#x72B6;&#x6001;&#x7684;&#x907F;&#x5F00;&#x969C;&#x788D;&#x7269;&#x7684;&#x6700;&#x4F18;&#x8DEF;&#x5F84;&#xFF0C;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#xFF1A;</p><ol type="1"><li>&#x59CB;&#x4E8E;&#x521D;&#x59CB;&#x70B9;&#x6B62;&#x4E8E;&#x76EE;&#x6807;&#x70B9;&#x3002;</li><li>&#x907F;&#x969C;&#x3002;</li><li>&#x5C3D;&#x53EF;&#x80FD;&#x4F18;&#x5316;&#x7684;&#x8DEF;&#x5F84;&#x3002;</li></ol><h2 id="&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x5206;&#x7C7B;">&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x5206;&#x7C7B;</h2><p>&#x6839;&#x636E;&#x73AF;&#x5883;&#x7279;&#x70B9;&#xFF0C;&#x53EF;&#x5206;&#x4E3A;</p><ol type="1"><li>&#x9759;&#x6001;&#x7ED3;&#x6784;&#x5316;&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x8DEF;&#x5F84;&#x89C4;&#x5212;</li><li>&#x52A8;&#x6001;&#x5DF2;&#x77E5;&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x8DEF;&#x5F84;&#x89C4;&#x5212;</li><li>&#x52A8;&#x6001;&#x4E0D;&#x786E;&#x5B9A;(&#x5C40;&#x90E8;)&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x8DEF;&#x5F84;&#x89C4;&#x5212;</li></ol><p><img src="/posts/1d9c933b/&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x5206;&#x7C7B;1.jpg"> <img src="/posts/1d9c933b/&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x5206;&#x7C7B;2.jpg"></p><h2 id="&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7B97;&#x6CD5;">&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7B97;&#x6CD5;</h2><ol type="1"><li>&#x8FEA;&#x6770;&#x65AF;&#x7279;&#x62C9;&#x7B97;&#x6CD5;</li><li>&#x6700;&#x4F73;&#x4F18;&#x5148;&#x641C;&#x7D22;BFS&#x7B97;&#x6CD5;</li><li><span class="math inline">\(A^\*\)</span>&#x7B97;&#x6CD5;&#xFF1A;Dijkstra + BFS &#x7B97;&#x6CD5;</li></ol><h2 id="&#x5404;&#x79CD;&#x8DDD;&#x79BB;">&#x5404;&#x79CD;&#x8DDD;&#x79BB;</h2><h3 id="&#x66FC;&#x54C8;&#x987F;&#x4E3E;&#x4F8B;&#x51FA;&#x79DF;&#x8F66;&#x8DDD;&#x79BB;">&#x66FC;&#x54C8;&#x987F;&#x4E3E;&#x4F8B;/&#x51FA;&#x79DF;&#x8F66;&#x8DDD;&#x79BB;</h3><p>&#x4E24;&#x70B9;x&#x8F74;&#x5750;&#x6807;&#x5DEE;&#x52A0;&#x4E0A;y&#x8F74;&#x5750;&#x6807;&#x7684;&#x5DEE;&#xFF0C;&#x4E58;&#x4EE5;&#x5355;&#x4F4D;&#x957F;&#x5EA6;&#x3002;&#x5373;&#xFF1A;<br>[abs(node.x - goal.x)+abs(node.y - goal.y)]*D</p><h3 id="&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;">&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;</h3><p>&#x5982;&#x679C;&#x5730;&#x56FE;&#x5141;&#x8BB8;&#x5BF9;&#x89D2;&#x8FD0;&#x52A8;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x53E6;&#x4E00;&#x79CD;&#x542F;&#x53D1;&#x51FD;&#x6570;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">heuristic</span><span class="params">(node)</span> </span>=</span><br><span class="line">    dx = <span class="built_in">abs</span>(node.x - goal.x)</span><br><span class="line">    dy = <span class="built_in">abs</span>(node.y - goal.y)</span><br><span class="line"><span class="keyword">return</span> D * (dx + dy) + (D2 - <span class="number">2</span> * D) * min(dx, dy)</span><br></pre></td></tr></table></figure></p><p><img src="/posts/1d9c933b/&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;.jpg"></p><h3 id="&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x8DDD;&#x79BB;">&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x8DDD;&#x79BB;</h3><p>&#x76F8;&#x6BD4;&#x4E8E;&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x641C;&#x7D22;&#x7A7A;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x6709;&#x591A;&#x6761;&#x8DDD;&#x79BB;&#x76F8;&#x7B49;&#x7684;&#x8DEF;&#x5F84;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">heuristic</span><span class="params">(node)</span> </span>=</span><br><span class="line">    dx = <span class="built_in">abs</span>(node.x - goal.x)</span><br><span class="line">    dy = <span class="built_in">abs</span>(node.y - goal.y)</span><br><span class="line">    <span class="keyword">return</span> D * <span class="built_in">sqrt</span>(dx * dx + dy * dy)</span><br></pre></td></tr></table></figure></p><p><img src="/posts/1d9c933b/&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x8DDD;&#x79BB;.jpg"></p><h2 id="&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;">&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;</h2><p>&#x57FA;&#x4E8E;&#x56FE;&#x641C;&#x7D22;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x968F;&#x673A;&#x8DEF;&#x56FE;&#xFF08;Probabilistic Road Maps&#xFF0C;PRM&#xFF09;&#x5C31;&#x662F;&#x5728;&#x89C4;&#x5212;&#x7A7A;&#x95F4;&#x5185;&#x968F;&#x673A;&#x9009;&#x53D6;N&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x4E4B;&#x540E;&#x8FDE;&#x63A5;&#x5404;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x53BB;&#x9664;&#x4E0E;&#x969C;&#x788D;&#x7269;&#x63A5;&#x89E6;&#x7684;&#x8FDE;&#x7EBF;&#xFF0C;&#x7531;&#x6B64;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x3002;</p><p>PRM&#x662F;&#x7531;&#x5728;&#x8282;&#x70B9;&#x5904;&#x76F8;&#x8FDE;&#x7684;&#x7B80;&#x5355;&#x66F2;&#x7EBF;&#x6BB5;&#x6216;&#x8005;&#x5F27;&#x7EBF;&#x6BB5;&#x7EC4;&#x6210;&#x7684;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#x3002;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x4F4D;&#x5F62;&#x3002;&#x4E24;&#x4E2A;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x6BCF;&#x4E2A;&#x5F27;&#x7EBF;&#x6BB5;&#x5BF9;&#x5E94;&#x4E24;&#x4E2A;&#x4F4D;&#x5F62;&#x4E4B;&#x95F4;&#x7684;&#x65E0;&#x78B0;&#x649E;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x57FA;&#x4E8E;&#x56FE;&#x641C;&#x7D22;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x968F;&#x673A;&#x8DEF;&#x56FE;&#xFF08;Probabilistic Road Maps&#xFF0C;PRM&#xFF09;&#x5C31;&#x662F;&#x5728;&#x89C4;&#x5212;&#x7A7A;&#x95F4;&#x5185;&#x968F;&#x673A;&#x9009;&#x53D6;N&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x4E4B;&#x540E;&#x8FDE;&#x63A5;&#x5404;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x53BB;&#x9664;&#x4E0E;&#x969C;&#x788D;&#x7269;&#x63A5;&#x89E6;&#x7684;&#x8FDE;&#x7EBF;&#xFF0C;&#x7531;&#x6B64;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x3002;&#x663E;&#x7136;&#xFF0C;&#x5F53;&#x91C7;&#x6837;&#x70B9;&#x592A;&#x5C11;&#xFF0C;&#x6216;&#x8005;&#x5206;&#x5E03;&#x4E0D;&#x5408;&#x7406;&#x65F6;&#xFF0C;PRM&#x7B97;&#x6CD5;&#x662F;&#x4E0D;&#x5B8C;&#x5907;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x968F;&#x7740;&#x91C7;&#x7528;&#x70B9;&#x7684;&#x589E;&#x52A0;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x5B8C;&#x5907;&#x3002;&#x6240;&#x4EE5;PRM&#x662F;&#x6982;&#x7387;&#x5B8C;&#x5907;&#x4E14;&#x4E0D;&#x6700;&#x4F18;&#x7684;&#x3002;</p><p>&#x6982;&#x7387;&#x89C4;&#x5212;&#x5C5E;&#x4E8E;&#x79BB;&#x7EBF;&#x89C4;&#x5212;&#xFF0C;&#x5B83;&#x4EEC;&#x9700;&#x8981;&#x9884;&#x5148;&#x77E5;&#x9053;&#x5173;&#x4E8E;&#x673A;&#x5668;&#x4EBA;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x4E2D;&#x969C;&#x788D;&#x7269;&#x7684;&#x51E0;&#x4F55;&#x5F62;&#x72B6;&#x548C;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x3002; &#x200B;<br>&#x6982;&#x7387;&#x89C4;&#x5212;&#x662F;&#x4E00;&#x7C7B;&#x975E;&#x5E38;&#x9AD8;&#x6548;&#x5730;&#x89C4;&#x5212;&#x65B9;&#x6CD5;,&#x5C5E;&#x4E8E;&#x57FA;&#x4E8E;&#x62BD;&#x6837;&#xFF08;Sampling-based&#xFF09;&#x65B9;&#x6CD5;&#x65CF;&#x3002;</p><p>&#x57FA;&#x672C;&#x601D;&#x60F3;&#xFF1A;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&#x80FD;&#x5145;&#x5206;&#x8868;&#x793A; Qfree &#x8FDE;&#x901A;&#x6027;&#x7684;&#x6709;&#x9650;&#x907F;&#x78B0;&#x4F4D;&#x5F62;&#x96C6;&#x5408;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x8BE5;&#x96C6;&#x5408;&#x5EFA;&#x7ACB;&#x7528;&#x4E8E;&#x89E3;&#x51B3;&#x8FD0;&#x52A8;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x7684;&#x8DEF;&#x5F84;&#x56FE;&#x3002;</p><h3 id="&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;">&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;</h3><p>&#x673A;&#x5668;&#x4EBA;&#x4E0A;&#x5404;&#x70B9;&#x4F4D;&#x7F6E;&#x7684;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x89C4;&#x8303;&#x88AB;&#x79F0;&#x4E3A;<strong>&#x4F4D;&#x5F62;</strong>&#xFF08;Configuration&#xFF09;&#xFF0C;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x4F4D;&#x5F62;&#x7EC4;&#x5408;&#x7684;&#x96C6;&#x5408;&#x88AB;&#x79F0;&#x4E3A;&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;&#x3002;</p><p>&#x7528; Q &#x6765;&#x8868;&#x793A;&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;&#xFF0C;&#x7528; W &#x8868;&#x793A;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#xFF0C; &#x7528; Oi &#x8868;&#x793A;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x969C;&#x788D;&#x7269;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528; A &#x6765;&#x8868;&#x793A;&#x673A;&#x5668;&#x4EBA;&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x5904;&#x4E8E;&#x4F4D;&#x5F62; q &#x7684;&#x673A;&#x5668;&#x4EBA;&#x6240;&#x5360;&#x636E;&#x7684;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x53EF;&#x88AB;&#x8868;&#x793A;&#x4E3A; A(q) &#x3002;&#x4F1A;&#x4E0E;&#x969C;&#x788D;&#x7269;&#x78B0;&#x649E;&#x7684;&#x6240;&#x6709;&#x4F4D;&#x5F62;&#x6240;&#x7EC4;&#x6210;&#x7684;&#x96C6;&#x5408;&#x6210;&#x4E3A;&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;&#x969C;&#x788D;&#xFF08;Configuration Space Obstacle&#xFF09;&#xFF0C;&#x5176;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; <span class="math display">\[QO={q&#x2208;Q|A(q)&#x2229;O&#x2260;&#x2205;}\]</span> &#x5176;&#x4E2D; <span class="math display">\[O=&#x222A;O_i\]</span> &#x90A3;&#x4E48;&#xFF0C;&#x65E0;&#x78B0;&#x649E;&#x4F4D;&#x5F62;&#x7684;&#x96C6;&#x5408;&#x53EF;&#x8868;&#x793A;&#x4E3A;&#x4E0B;&#x9762;&#x7684;&#x5DEE;&#x96C6;&#xA0; <span class="math display">\[Q_{free}=Q\QO\]</span> &#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x662F;&#x5BFB;&#x627E;&#x4E00;&#x6761;&#x4ECE;&#x521D;&#x59CB;&#x4F4D;&#x5F62; qs &#x5230;&#x6700;&#x7EC8;&#x4F4D;&#x5F62; qf &#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x4F7F;&#x5F97;&#x673A;&#x5668;&#x4EBA;&#x5728;&#x901A;&#x8FC7;&#x8DEF;&#x5F84;&#x65F6;&#x4E0D;&#x4E0E;&#x4EFB;&#x4F55;&#x969C;&#x788D;&#x7269;&#x53D1;&#x751F;&#x78B0;&#x649E;.</p><h2 id="&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;-1">&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;</h2><ol type="1"><li><strong>&#x91C7;&#x6837;</strong>&#xFF1A;&#x751F;&#x6210;&#x4E00;&#x7EC4;&#x968F;&#x673A;&#x4F4D;&#x5F62;&#x4F5C;&#x4E3A;&#x8DEF;&#x7EBF;&#x56FE;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x3002;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x5BF9;&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;&#x91C7;&#x7528;&#x5747;&#x5300;&#x968F;&#x673A;&#x91C7;&#x6837;&#xFF0C;&#x7136;&#x540E;&#x4E22;&#x5F03; QO &#x5185;&#x90E8;&#x70B9;&#x4F4D;&#x5F62;&#x6837;&#x672C;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;&#x662F;&#xFF1A;Qfree &#x4E2D;&#x4EFB;&#x4F55;&#x7279;&#x5B9A;&#x533A;&#x57DF;&#x7684;&#x6837;&#x672C;&#x6570;&#x76EE;&#x4E0E;&#x8BE5;&#x533A;&#x57DF;&#x7684;&#x4F53;&#x79EF;&#x6210;&#x6B63;&#x6BD4;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x592A;&#x53EF;&#x80FD;&#x5728;&#x72ED;&#x7A84;&#x7684;&#x901A;&#x9053;&#x5185;&#x8FDB;&#x884C;&#x3002;&#x8FD9;&#x88AB;&#x79F0;&#x4E3A;&#x72ED;&#x7A84;&#x901A;&#x9053;&#x95EE;&#x9898;&#xFF08;Narrow Passage Problem&#xFF09;&#x3002;</li><li><strong>&#x8FDE;&#x63A5;</strong>&#xFF1A;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x5C40;&#x90E8;&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7B97;&#x6CD5;&#xFF0C;&#x6765;&#x751F;&#x6210;&#x8FDE;&#x63A5;&#x4F4D;&#x5F62;&#x5BF9;&#x7684;&#x8DEF;&#x5F84;&#x3002;&#x5178;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x5C1D;&#x8BD5;&#x628A;&#x5404;&#x4E2A;&#x8282;&#x70B9;&#x4E0E;&#x5176; k &#x4E2A;&#x6700;&#x8FD1;&#x90BB;&#x8282;&#x70B9;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;</li><li><strong>&#x589E;&#x5F3A;</strong>&#xFF1A;&#x52A0;&#x5165;&#x65B0;&#x7684;&#x8282;&#x70B9;&#x548C;&#x5F27;&#x7EBF;&#xFF0C;&#x628A;&#x8DEF;&#x7EBF;&#x56FE;&#x4E2D;&#x4E0D;&#x76F8;&#x8FDE;&#x7684;&#x5143;&#x7D20;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;&#x589E;&#x5F3A;&#x7684;&#x76EE;&#x6807;&#x662F;&#x6700;&#x5927;&#x7A0B;&#x5EA6;&#x5730;&#x628A;&#x4E0D;&#x76F8;&#x4EA4;&#x7684;&#x5355;&#x5143;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;&#x4E00;&#x79CD;&#x589E;&#x5F3A;&#x65B9;&#x6CD5;&#x662F;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x4E0D;&#x76F8;&#x4EA4;&#x5355;&#x5143;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF0C;&#x91C7;&#x7528;&#x8F83;&#x590D;&#x6742;&#x7684;&#x89C4;&#x5212;&#x7B97;&#x6CD5;&#x3002;&#x53E6;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x662F;&#xFF1A;&#x5C06;&#x66F4;&#x591A;&#x968F;&#x673A;&#x8282;&#x70B9;&#x6DFB;&#x52A0;&#x5230;&#x8DEF;&#x7EBF;&#x56FE;&#x4E2D;&#x3002;</li></ol><p><img src="/posts/1d9c933b/&#x6982;&#x7387;&#x89C4;&#x5212;&#x56FE;.jpg"> PRM&#x65B9;&#x6CD5;&#x4E0D;&#x5229;&#x7684;&#x4E00;&#x9762;&#x5728;&#x4E8E;&#x5B83;&#x53EA;&#x662F;&#x6982;&#x7387;&#x5B8C;&#x5168;&#xFF08;Probabilistically Complete&#xFF09;&#x7684;&#xFF0C;&#x5373;&#x5F53;&#x6C42;&#x89E3;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x7684;&#x8BA1;&#x7B97;&#x65F6;&#x95F4;&#x8D8B;&#x4E8E;&#x65E0;&#x7A77;&#x5927;&#x65F6;&#xFF0C;&#x6C42;&#x5F97;&#x4E00;&#x4E2A;&#x89E3;&#xFF08;&#x5982;&#x679C;&#x5B58;&#x5728;&#xFF09;&#x7684;&#x6982;&#x7387;&#x8D8B;&#x4E8E;1&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#xFF1A;&#x5982;&#x679C;&#x95EE;&#x9898;&#x65E0;&#x89E3;&#xFF0C;&#x7B97;&#x6CD5;&#x8FD0;&#x884C;&#x65F6;&#x95F4;&#x4E0D;&#x786E;&#x5B9A;&#xFF0C;&#x9700;&#x8981;&#x52A0;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x8FED;&#x4EE3;&#x6B21;&#x6570;&#x4EE5;&#x4FDD;&#x8BC1;&#x7B97;&#x6CD5;&#x7EC8;&#x6B62;&#x3002;</p><h2 id="&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x968F;&#x673A;&#x6811;rapidly-exploring-random-tree-rrt">&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x968F;&#x673A;&#x6811;&#xFF08;&#xFF08;Rapidly-Exploring Random Tree, RRT&#xFF09;&#xFF09;</h2><ol type="1"><li><strong>&#x91C7;&#x6837;</strong>&#xFF1A;&#x4F9D;&#x636E;&#x4E00;&#x4E2A;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x968F;&#x673A;&#x91C7;&#x6837;&#x751F;&#x6210;&#x968F;&#x673A;&#x4F4D;&#x5F62; qrand&#xFF08;&#x4E0E;PRM&#x7C7B;&#x4F3C;&#xFF09;&#x3002;</li><li><strong>&#x8FDE;&#x63A5;</strong>&#xFF1A;&#x5728; T &#x4E0A;&#x627E;&#x5230;&#x6700;&#x9760;&#x8FD1; qrand &#x7684;&#x4F4D;&#x5F62; qnear&#xFF0C;&#x5E76;&#x5728;&#x4ECE; qnear &#x5230; qrand &#x7684;&#x8FDE;&#x7EBF;&#x4E0A;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x5019;&#x9009;&#x70B9; qnew&#xFF0C;&#x4F7F;&#x4E4B;&#x5230; qnear &#x7684;&#x8DDD;&#x79BB;&#x4E3A;&#x9884;&#x5148;&#x7ED9;&#x5B9A;&#x7684;&#x503C; &#x3B4;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8FDB;&#x884C;&#x78B0;&#x649E;&#x68C0;&#x6D4B;&#xFF0C;&#x5982;&#x679C; qnear &#x5230; qnew &#x7684;&#x8FDE;&#x7EBF;&#x6BB5;&#x5C5E;&#x4E8E; Qfree&#xFF0C;&#x5219;&#x5C06;&#x8BE5;&#x8FDE;&#x7EBF;&#x6BB5;&#x548C; qnew &#x6DFB;&#x52A0;&#x5230; T &#x4E2D;&#x3002;<br>&#x6CE8;&#x610F; qrand &#x5E76;&#x672A;&#x88AB;&#x6DFB;&#x52A0;&#x5230; T &#x4E2D;&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x6807;&#x8BC6; T &#x7684;&#x751F;&#x957F;&#x65B9;&#x5411;&#x3002;&#x4E3A;&#x52A0;&#x901F;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;&#xFF0C;&#x53CC;&#x5411;RRT&#x65B9;&#x6CD5;&#x91C7;&#x7528;&#x4E24;&#x4E2A;&#x5206;&#x522B;&#x4EE5; qs &#x548C; qg &#x4E3A;&#x6839;&#x8282;&#x70B9;&#x7684;&#x6811; Ts &#x548C; Tg&#x3002;&#x8FED;&#x4EE3;&#x5230;&#x4E00;&#x5B9A;&#x6B65;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7B97;&#x6CD5;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#xFF1B;</li><li><strong>&#x4E24;&#x68F5;&#x6811;&#x8FDE;&#x63A5;</strong>&#xFF1A;&#x901A;&#x8FC7;&#x4EA7;&#x751F;&#x4E00;&#x4E2A; qnew &#x4F5C;&#x4E3A; <span class="math inline">\(T_s\)</span> &#x7684;&#x751F;&#x957F;&#x70B9;&#x5E76;&#x5C1D;&#x8BD5;&#x5C06; <span class="math inline">\(T_g\)</span> &#x8FDE;&#x63A5;&#x5230;&#x8BE5;&#x70B9;&#x3002;&#x6B64;&#x65F6;&#x7684;&#x8BA1;&#x7B97;&#x6B65;&#x957F;&#x662F;&#x53EF;&#x53D8;&#x7684;&#x800C;&#x975E;&#x5E38;&#x6570; <span class="math inline">\(&#x3B4;\)</span>&#x3002;</li></ol><p>&#x4F18;&#x70B9;&#xFF1A;<br>&#x590D;&#x6742;&#x5EA6;&#x4E3B;&#x8981;&#x51B3;&#x5B9A;&#x4E8E;&#x5BFB;&#x627E;&#x8DEF;&#x5F84;&#x7684;&#x96BE;&#x5EA6;&#xFF0C;&#x8DDF;&#x6574;&#x4E2A;&#x89C4;&#x5212;&#x573A;&#x666F;&#x7684;&#x5927;&#x5C0F;&#x548C;&#x6784;&#x578B;&#x7A7A;&#x95F4;&#x7684;&#x7EF4;&#x6570;&#x57FA;&#x672C;&#x65E0;&#x5173;</p><p>&#x7F3A;&#x70B9;&#xFF1A;</p><ol type="1"><li>&#x57FA;&#x672C;&#x65E0;bias&#x7684;RRT&#x4F1A;&#x5728;&#x7A7A;&#x95F4;&#x968F;&#x673A;&#x6269;&#x5C55;</li><li>&#x8F93;&#x51FA;&#x8DEF;&#x5F84;&#x975E;&#x6700;&#x4F18;&#x8DEF;&#x5F84;</li></ol><h1 id="&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;">&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;</h1><p>&#x53F3;&#x952E;&#x4FDD;&#x5B58;~ <img src="/posts/1d9c933b/&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;.jpg"></p><h1 id="&#x7591;&#x95EE;">&#x7591;&#x95EE;</h1><p><strong>&#x68AF;&#x5EA6;</strong>&#x90E8;&#x5206;&#xFF0C;&#x68AF;&#x5EA6;&#x662F;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#x7684;&#x4E8C;&#x7EF4;&#x7B49;&#x6548;&#x5F0F;&#xFF0C;&#x8FD9;&#x53E5;&#x8BDD;&#x548B;&#x7406;&#x89E3;&#xFF1F;&#x662F;&#x8BF4;&#x5BF9;G(x,y)&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x90FD;&#x6C42;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#xFF0C;&#x7EC4;&#x6210;&#x7684;&#x5411;&#x91CF;&#x5417;&#xFF1F;</p><p>&#x68AF;&#x5EA6;&#x7684;&#x5E45;&#x5EA6;&#x503C;&#x662F;&#x4E0E;&#x65B9;&#x5411;&#x65E0;&#x5173;&#x7684;&#xFF0C;&#x7B97;&#x5B50;&#x662F;&#x5404;&#x5411;&#x540C;&#x6027;&#x7B97;&#x5B50;&#x3002;&#x600E;&#x4E48;&#x7406;&#x89E3;&#x5404;&#x5411;&#x540C;&#x6027;&#xFF1F;</p><p>PPT ch3 94&#x9875; 95&#x9875; 101&#x9875; 105&#x9875; 134</p><p>Canny&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x7B97;&#x6CD5;&#x8BA1;&#x7B97;&#x65B9;&#x5411;&#x89D2;&#x95EE;&#x9898;</p>]]></content>
      
      <categories>
          
          <category> 智能机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 智能机器人 </tag>
            
            <tag> SLAM </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LSTM+CTC实验报告</title>
      <link href="//posts/a9eaf96f/"/>
      <url>//posts/a9eaf96f/</url>
      <content type="html"><![CDATA[<p>LSTM+CTC&#x7528;&#x4E8E;&#x9A8C;&#x8BC1;&#x7801;&#x8BC6;&#x522B;&#x7684;&#x5B9E;&#x9A8C;&#x62A5;&#x544A; <a id="more"></a></p><h1 id="&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;">&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;</h1><p><strong>&#x566A;&#x58F0;&#x80CC;&#x666F;&#x56FE;+&#x9A8C;&#x8BC1;&#x7801;</strong>&#x5728;&#x8001;&#x5E08;&#x7ED9;&#x51FA;&#x7684;&#x4EE3;&#x7801;&#x91CC;&#xFF0C;&#x9A8C;&#x8BC1;&#x7801;&#x662F;&#x9ED1;&#x5E95;&#x767D;&#x5B57;&#xFF0C;&#x4E14;&#x6CA1;&#x6709;&#x566A;&#x58F0;&#x3002;&#x6211;&#x5C06;&#x80CC;&#x666F;&#x56FE;&#x6539;&#x4E3A;&#x968F;&#x673A;&#x751F;&#x6210;&#x7684;&#x4E00;&#x5F20;&#x5E26;&#x566A;&#x58F0;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x5B57;&#x7684;&#x989C;&#x8272;&#x6539;&#x4E3A;&#x9ED1;&#x8272;&#x3002;&#x751F;&#x6210;&#x4E00;&#x5F20;&#x9A8C;&#x8BC1;&#x7801;&#x3002;</p><p>&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5E26;&#x566A;&#x58F0;&#x7684;&#x80CC;&#x666F;&#x56FE;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_beijingtu</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#&#x8BBE;&#x7F6E;&#x5927;&#x5C0F;&#x4E3A;&#xFF1A;&#x9AD8;=32&#xFF0C;&#x5BBD;=256</span></span><br><span class="line">    image = ImageCaptcha(<span class="number">256</span>,<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#captcha_text = random_captcha_text()</span></span><br><span class="line">    captcha_text = <span class="string">&apos; &apos;</span></span><br><span class="line"></span><br><span class="line">    captcha = image.generate(captcha_text)</span><br><span class="line">    <span class="comment"># image.write(captcha_text, captcha_text + &apos;.jpg&apos;)  # &#x5199;&#x5230;&#x6587;&#x4EF6;</span></span><br><span class="line"></span><br><span class="line">    captcha_image = Image.open(captcha)</span><br><span class="line">    captcha_image = np.array(captcha_image)</span><br><span class="line">    <span class="keyword">return</span> captcha_image</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x7C7B;&#x4E2D;&#xFF0C;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#x51E0;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;<br>+ &#x521D;&#x59CB;&#x5316;&#xFF1A;&#x8BBE;&#x5B9A;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x5B57;&#x7B26;&#x96C6;&#xFF0C;&#x5B57;&#x4F53; + &#x751F;&#x6210;&#x4E00;&#x7EC4;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x6587;&#x672C;&#x3002; + &#x6839;&#x636E;&#x751F;&#x6210;&#x7684;&#x672C;&#x6587;&#xFF0C;&#x8F6C;&#x53D8;&#x5E26;&#x566A;&#x58F0;&#x4E3A;&#x56FE;&#x7247;&#x3002; + &#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x901A;&#x8FC7;One-Hot&#x7F16;&#x7801;&#x8F6C;&#x4E3A;&#x5411;&#x91CF; + One-Hot&#x7F16;&#x7801;&#x7684;&#x5411;&#x91CF;&#x8F6C;&#x4E3A;&#x6587;&#x672C;</p><p>&#x6574;&#x4F53;&#x7C7B;&#x7684;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x6B64;&#x5904;&#x4EE3;&#x7801;&#x662F;&#x4E0D;&#x7B26;&#x5408;&#x89C4;&#x8303;&#x7684;&#xFF0C;&#x6211;&#x60F3;&#x8868;&#x8FBE;&#x7684;&#x8FD9;&#x91CC;&#x5C31;&#x662F;&#x7C7B;&#x4F3C;&#x4E8E;&#x7C7B;&#x7684;&#x58F0;&#x660E;&#x3002;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gen_id_card</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">    __init__(self)</span><br><span class="line">    <span class="comment">#&#x968F;&#x673A;&#x751F;&#x6210;&#x4E00;&#x7EC4;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x6587;&#x672C;</span></span><br><span class="line">    random_text(self)</span><br><span class="line">    <span class="comment">#&#x6839;&#x636E;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x6587;&#x672C;&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x56FE;&#x7247;</span></span><br><span class="line">    gen_image(self)</span><br><span class="line">    <span class="comment">#&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x901A;&#x8FC7;One-Hot&#x7F16;&#x7801;&#x8F6C;&#x4E3A;&#x5411;&#x91CF;</span></span><br><span class="line">    char2vec(self, c)</span><br><span class="line">    <span class="comment">#One-Hot&#x7F16;&#x7801;&#x7684;&#x5411;&#x91CF;&#x901A;&#x8FC7;&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x8F6C;&#x4E3A;&#x6587;&#x672C;</span></span><br><span class="line">    vec2text(self, vecs)</span><br></pre></td></tr></table></figure></p><p>&#x5404;&#x4E2A;&#x65B9;&#x6CD5;&#x8BE6;&#x7EC6;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p><p><strong>&#x521D;&#x59CB;&#x5316;</strong>&#xFF1A;&#x5728;&#x751F;&#x6210;&#x5B9E;&#x9645;&#x7684;&#x6709;&#x6548;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x6211;&#x9009;&#x62E9;&#x4E86;&#x4EE5;10&#x4E2A;&#x6570;&#x5B57;&#x4F5C;&#x4E3A;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x96C6;&#xFF0C;&#x6570;&#x5B57;&#x4E2A;&#x6570;&#xFF0C;&#x6700;&#x5C11;&#x4E3A;2&#x4E2A;&#xFF0C;&#x6700;&#x591A;&#x8BBE;&#x5B9A;&#x4E3A;4&#x4E2A;&#xFF0C;&#x5B57;&#x4F53;&#x9009;&#x62E9;&#x4E3A;OCR-B&#x3002;<br>&#x4EE3;&#x7801;&#x4E3A;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment">#self.words = open(&apos;AllWords.txt&apos;, &apos;r&apos;).read().split(&apos; &apos;)</span></span><br><span class="line">    self.number = [<span class="string">&apos;0&apos;</span>, <span class="string">&apos;1&apos;</span>, <span class="string">&apos;2&apos;</span>, <span class="string">&apos;3&apos;</span>, <span class="string">&apos;4&apos;</span>, <span class="string">&apos;5&apos;</span>, <span class="string">&apos;6&apos;</span>, <span class="string">&apos;7&apos;</span>, <span class="string">&apos;8&apos;</span>, <span class="string">&apos;9&apos;</span>]</span><br><span class="line">    <span class="comment">#&#x5B57;&#x7B26;&#x96C6;</span></span><br><span class="line">    self.char_set = self.number</span><br><span class="line">    <span class="comment">#self.char_set = self.words + self.number</span></span><br><span class="line">    <span class="comment">#10&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line">    self.len = len(self.char_set)</span><br><span class="line">   </span><br><span class="line">    <span class="comment">#&#x6700;&#x5927;18&#x4E2A;&#xFF0C;&#x5B57;&#x4F53;&#x662F;OCR-B</span></span><br><span class="line">   self.max_size = <span class="number">4</span></span><br><span class="line">    self.ft = put_chinese_text(<span class="string">&apos;fonts/OCR-B.ttf&apos;</span>)</span><br></pre></td></tr></table></figure></p><p><strong>&#x5B57;&#x7B26;&#x8F6C;&#x5411;&#x91CF;</strong>&#xFF1A;&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x901A;&#x8FC7;One-Hot&#x7F16;&#x7801;&#x8F6C;&#x4E3A;&#x5411;&#x91CF;&#x3002;<br>&#x4EE3;&#x7801;&#x4E3A;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x5355;&#x5B57;&#x8F6C;&#x5411;&#x91CF;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">char2vec</span><span class="params">(self, c)</span>:</span></span><br><span class="line">    vec = np.zeros((self.len))</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(self.len):</span><br><span class="line">        <span class="keyword">if</span> self.char_set[j] == c:</span><br><span class="line">            vec[j] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> vec</span><br></pre></td></tr></table></figure></p><p><strong>&#x5411;&#x91CF;&#x8F6C;&#x6587;&#x672C;</strong>&#xFF1A;One-Hot&#x7F16;&#x7801;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x8F6C;&#x4E3A;&#x6587;&#x672C;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x5411;&#x91CF;&#x8F6C;&#x6587;&#x672C;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vec2text</span><span class="params">(self, vecs)</span>:</span></span><br><span class="line">    text = <span class="string">&apos;&apos;</span></span><br><span class="line">    v_len = len(vecs)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(v_len):</span><br><span class="line">        <span class="keyword">if</span>(vecs[i] == <span class="number">1</span>):</span><br><span class="line">            text = text + self.char_set[i % self.len]</span><br><span class="line">    <span class="keyword">return</span> text</span><br></pre></td></tr></table></figure></p><p><strong>&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x6587;&#x672C;</strong>&#xFF1A;&#x6839;&#x636E;&#x521D;&#x59CB;&#x5316;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x751F;&#x6210;&#x957F;&#x5EA6;&#x5728;&#x89C4;&#x5B9A;&#x8303;&#x56F4;&#x5185;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x6587;&#x672C;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x8C03;&#x7528;&#x524D;&#x9762;&#x6240;&#x8FF0;&#x7684;&#x5355;&#x5B57;&#x8F6C;&#x5411;&#x91CF;&#x65B9;&#x6CD5;&#xFF0C;&#x540C;&#x65F6;&#x8FD4;&#x56DE;&#x6587;&#x672C;&#x5BF9;&#x5E94;&#x7684;&#x5411;&#x91CF;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_text</span><span class="params">(self)</span>:</span></span><br><span class="line">    text = <span class="string">&apos;&apos;</span></span><br><span class="line">    vecs = np.zeros((self.max_size * self.len))</span><br><span class="line">    <span class="comment">#&#x5B57;&#x7B26;2~4&#x4E2A;</span></span><br><span class="line">    size = random.randint(<span class="number">2</span>, self.max_size)</span><br><span class="line">    <span class="comment">#size = self.max_size</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(size):</span><br><span class="line">        <span class="comment">#&#x968F;&#x4FBF;&#x9009;&#x4E00;&#x4E2A;</span></span><br><span class="line">        c = random.choice(self.char_set)</span><br><span class="line">        <span class="comment">#&#x8F6C;&#x4E3A;&#x5411;&#x91CF;</span></span><br><span class="line">        vec = self.char2vec(c)</span><br><span class="line">        <span class="comment">#&#x6DFB;&#x52A0;&#x5230;text&#x5F53;&#x4E2D;&#x53BB;</span></span><br><span class="line">        text = text + c</span><br><span class="line">        vecs[i*self.len:(i+<span class="number">1</span>)*self.len] = np.copy(vec)</span><br><span class="line">    <span class="comment">#vecs&#x7684;shape&#x662F;(10*size,)One-Hot&#x7F16;&#x7801;&#xFF0C;&#x5373;&#x4F7F;&#x662F;3&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x4E5F;&#x662F;(40,)&#x7684;One-Hot</span></span><br><span class="line">    <span class="keyword">return</span> text,vecs</span><br></pre></td></tr></table></figure></p><p><strong>&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x56FE;&#x7247;</strong>&#xFF1A;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6709;&#x4E24;&#x4E2A;&#x7248;&#x672C;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x662F;&#x6839;&#x636E;&#x4E4B;&#x524D;&#x6240;&#x8FF0;&#x7684;&#x5E26;&#x566A;&#x58F0;&#x7684;&#x80CC;&#x666F;&#x56FE;&#xFF0C;&#x52A0;&#x4E0A;&#x9A8C;&#x8BC1;&#x7801;&#x56FE;&#x50CF;&#xFF0C;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5E26;&#x566A;&#x58F0;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x3002;&#x7B2C;&#x4E8C;&#x4E2A;&#x7248;&#x672C;&#x662F;&#x5148;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x767D;&#x5E95;&#x9ED1;&#x5B57;&#x7684;&#xFF0C;&#x65E0;&#x566A;&#x58F0;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x3002;&#x566A;&#x58F0;&#x90E8;&#x5206;&#x7531;&#x540E;&#x9762;&#x518D;&#x8BF4;&#x7684;&#x6DFB;&#x52A0;&#x6912;&#x76D0;&#x566A;&#x58F0;&#xFF08;&#x56E0;&#x4E3A;&#x6211;&#x559C;&#x6B22;&#x5403;&#x6912;&#x76D0;&#x5473;&#x7684;&#xFF09;&#x51FD;&#x6570;&#x6DFB;&#x52A0;&#xFF0C;&#x53BB;&#x566A;&#x51FD;&#x6570;&#x9009;&#x62E9;&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#xFF0C;&#x7531;OpenCV&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#xFF08;&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;&#x8BFE;&#x521A;&#x5B66;&#x7684; : P&#xFF09;</p><p><strong>&#x7248;&#x672C;1</strong>&#xFF1A;&#x6839;&#x636E;&#x5E26;&#x566A;&#x58F0;&#x7684;&#x80CC;&#x666F;&#x56FE;&#xFF0C;&#x4EE5;&#x53CA;&#x524D;&#x6587;&#x6240;&#x8FF0;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x6587;&#x672C;&#xFF0C;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5E26;&#x566A;&#x58F0;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x8001;&#x5E08;&#x7ED9;&#x7684;&#x4EE3;&#x7801;&#x91CC;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x53EA;&#x662F;RGB&#x56FE;&#x50CF;&#x7684;&#x7B2C;&#x4E09;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x628A;&#x6574;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x56FE;&#x50CF;&#x4E5F;&#x4E00;&#x5E76;&#x8FD4;&#x56DE;&#xFF0C;&#x4E3A;&#x540E;&#x9762;&#x7684;&#x8F6C;&#x4E3A;&#x7070;&#x5EA6;&#x4F5C;&#x51C6;&#x5907;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_image</span><span class="params">(self)</span>:</span></span><br><span class="line">    text,vec = self.random_text()</span><br><span class="line">    <span class="comment">#&#x80CC;&#x666F;&#x56FE;&#xFF0C;zeros&#x662F;&#x9ED1;&#x5E95;&#xFF0C;ones&#x662F;&#x767D;&#x5E95;&#xFF0C;&#x7528;&#x4E4B;&#x524D;&#x7684;captcha&#x751F;&#x6210;&#x566A;&#x58F0;&#x80CC;&#x666F;&#x56FE;</span></span><br><span class="line">    <span class="comment">#img = np.zeros([32,256,3])</span></span><br><span class="line">    <span class="comment">#img = np.ones([32,256,3])</span></span><br><span class="line">    img = gen_beijingtu()</span><br><span class="line">    <span class="comment">#color_ = (255,255,255) # &#x5B57;&#x4F53;&#x989C;&#x8272;&#xFF0C;(255,255,255) &#x662F;&#x767D;&#x8272;</span></span><br><span class="line">    color_ = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="comment"># &#x9ED1;&#x8272;</span></span><br><span class="line">    pos = (<span class="number">0</span>, <span class="number">0</span>)            <span class="comment">#&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</span></span><br><span class="line">    <span class="comment">#&#x5B57;&#x4F53;&#x5927;&#x5C0F;</span></span><br><span class="line">    text_size = <span class="number">35</span></span><br><span class="line">    image = self.ft.draw_text(img, pos, text, text_size, color_)</span><br><span class="line"></span><br><span class="line">    <span class="comment">######&#x67E5;&#x770B;&#x56FE;&#x50CF;#######</span></span><br><span class="line">    <span class="comment">#f = plt.figure()</span></span><br><span class="line">    <span class="comment">#ax = f.add_subplot(111)</span></span><br><span class="line">    <span class="comment">#ax.text(0.1, 0.9, text, ha=&apos;center&apos;, va=&apos;center&apos;, transform=ax.transAxes)</span></span><br><span class="line">    <span class="comment">#plt.imshow(image)</span></span><br><span class="line">    <span class="comment">#plt.show()</span></span><br><span class="line">    <span class="comment">#####################</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#&#x8001;&#x5E08;&#x7ED9;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x53EA;&#x662F;&#x56FE;&#x50CF;&#x7684;&#x7B2C;&#x4E09;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x628A;&#x6574;&#x4E2A;&#x56FE;&#x50CF;&#x90FD;&#x8FD4;&#x56DE;&#x4E86;</span></span><br><span class="line">    <span class="comment">#&#x4E3A;&#x540E;&#x9762;&#x518D;&#x8F6C;&#x4E3A;&#x7070;&#x5EA6;&#x505A;&#x51C6;&#x5907;&#x3002;</span></span><br><span class="line">    <span class="keyword">return</span> image[:,:,<span class="number">2</span>],text,vec,image</span><br></pre></td></tr></table></figure></p><p>&#x751F;&#x6210;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x539F;&#x59CB;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; <img src="/posts/a9eaf96f/&#x566A;&#x58F0;&#x80CC;&#x666F;&#x9A8C;&#x8BC1;&#x7801;&#x56FE;.jpg" alt="7334"></p><p><strong>&#x7248;&#x672C;2</strong>&#xFF1A;&#x5148;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x767D;&#x5E95;&#x9ED1;&#x5B57;&#x7684;&#xFF0C;&#x65E0;&#x566A;&#x58F0;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x3002;&#x566A;&#x58F0;&#x90E8;&#x5206;&#x7531;&#x540E;&#x9762;&#x518D;&#x8BF4;&#x7684;&#x6DFB;&#x52A0;&#x6912;&#x76D0;&#x566A;&#x58F0;&#xFF08;&#x56E0;&#x4E3A;&#x6211;&#x559C;&#x6B22;&#x5403;&#x6912;&#x76D0;&#x5473;&#x7684;&#xFF09;&#x51FD;&#x6570;&#x6DFB;&#x52A0;&#xFF0C;&#x53BB;&#x566A;&#x51FD;&#x6570;&#x9009;&#x62E9;&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#xFF0C;&#x7531;OpenCV&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#xFF08;&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;&#x8BFE;&#x521A;&#x5B66;&#x7684; : P&#xFF09; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x6839;&#x636E;&#x751F;&#x6210;&#x7684;text&#xFF0C;&#x751F;&#x6210;image,&#x8FD4;&#x56DE;&#x6807;&#x7B7E;&#x548C;&#x56FE;&#x7247;&#x5143;&#x7D20;&#x6570;&#x636E;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_image</span><span class="params">(self)</span>:</span></span><br><span class="line">    text,vec = self.random_text()</span><br><span class="line">    <span class="comment">#&#x80CC;&#x666F;&#x56FE;&#xFF0C;zeros&#x662F;&#x9ED1;&#x5E95;&#xFF0C;ones&#x662F;&#x767D;&#x5E95;&#xFF0C;&#x7528;&#x4E4B;&#x524D;&#x7684;captcha&#x751F;&#x6210;&#x566A;&#x58F0;&#x80CC;&#x666F;&#x56FE;</span></span><br><span class="line">    <span class="comment">#img = np.zeros([32,256,3])</span></span><br><span class="line">    img = np.ones([<span class="number">32</span>,<span class="number">256</span>,<span class="number">3</span>])</span><br><span class="line">    <span class="comment">#img = gen_beijingtu()</span></span><br><span class="line">    <span class="comment">#color_ = (255,255,255) # Write</span></span><br><span class="line">    color_ = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="comment"># Write</span></span><br><span class="line">    pos = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="comment">#&#x5B57;&#x4F53;&#x5927;&#x5C0F;</span></span><br><span class="line">    text_size = <span class="number">35</span></span><br><span class="line">    image = self.ft.draw_text(img, pos, text, text_size, color_)</span><br><span class="line">    <span class="comment">#&#x67E5;&#x770B;&#x56FE;&#x50CF;</span></span><br><span class="line">    cv2.imshow(<span class="string">&apos;image&apos;</span>,image)</span><br><span class="line">    <span class="comment">#&#x8001;&#x5E08;&#x7ED9;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x53EA;&#x662F;&#x56FE;&#x50CF;&#x7684;&#x7B2C;&#x4E09;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x628A;&#x6574;&#x4E2A;&#x56FE;&#x50CF;&#x90FD;&#x8FD4;&#x56DE;&#x4E86;</span></span><br><span class="line">    <span class="comment">#&#x4E3A;&#x540E;&#x9762;&#x518D;&#x8F6C;&#x4E3A;&#x7070;&#x5EA6;&#x505A;&#x51C6;&#x5907;&#x3002;</span></span><br><span class="line">    <span class="keyword">return</span> image[:,:,<span class="number">2</span>],text,vec,image</span><br></pre></td></tr></table></figure></p><p>&#x751F;&#x6210;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x539F;&#x59CB;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; <img src="/posts/a9eaf96f/&#x65E0;&#x566A;&#x58F0;&#x80CC;&#x666F;&#x9A8C;&#x8BC1;&#x7801;&#x56FE;.jpg"></p><p><strong>&#x6DFB;&#x52A0;&#x6912;&#x76D0;&#x566A;&#x58F0;</strong>&#xFF1A;&#x6912;&#x76D0;&#x566A;&#x58F0;&#x4E5F;&#x79F0;&#x4E3A;&#x8109;&#x51B2;&#x566A;&#x58F0;&#xFF0C;&#x662F;&#x56FE;&#x50CF;&#x4E2D;&#x7ECF;&#x5E38;&#x89C1;&#x5230;&#x7684;&#x4E00;&#x79CD;&#x566A;&#x58F0;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x79CD;&#x968F;&#x673A;&#x51FA;&#x73B0;&#x7684;&#x767D;&#x70B9;&#x6216;&#x8005;&#x9ED1;&#x70B9;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x4EAE;&#x7684;&#x533A;&#x57DF;&#x6709;&#x9ED1;&#x8272;&#x50CF;&#x7D20;&#x6216;&#x662F;&#x5728;&#x6697;&#x7684;&#x533A;&#x57DF;&#x6709;&#x767D;&#x8272;&#x50CF;&#x7D20;&#xFF08;&#x6216;&#x662F;&#x4E24;&#x8005;&#x7686;&#x6709;&#xFF09;&#x3002;<br>&#x6DFB;&#x52A0;&#x6912;&#x76D0;&#x566A;&#x58F0;&#x7684;&#x601D;&#x60F3;&#x662F;&#x5728;&#x56FE;&#x7247;&#x4E2D;&#xFF0C;&#x968F;&#x673A;&#x9009;&#x53D6;&#x4E00;&#x90E8;&#x5206;&#x6DFB;&#x52A0;&#x767D;&#x8272;&#x50CF;&#x7D20;&#x70B9;&#x6216;&#x9ED1;&#x8272;&#x50CF;&#x7D20;&#x70B9;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x6DFB;&#x52A0;&#x6912;&#x76D0;&#x566A;&#x58F0;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saltpepper</span><span class="params">(img,n)</span>:</span></span><br><span class="line">    m=int((img.shape[<span class="number">0</span>]*img.shape[<span class="number">1</span>])*n)</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> range(m):</span><br><span class="line">        i=int(np.random.random()*img.shape[<span class="number">1</span>])</span><br><span class="line">        j=int(np.random.random()*img.shape[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> img.ndim==<span class="number">2</span>:</span><br><span class="line">            img[j,i]=<span class="number">255</span></span><br><span class="line">        <span class="keyword">elif</span> img.ndim==<span class="number">3</span>:</span><br><span class="line">            img[j,i,<span class="number">0</span>]=<span class="number">255</span></span><br><span class="line">            img[j,i,<span class="number">1</span>]=<span class="number">255</span></span><br><span class="line">            img[j,i,<span class="number">2</span>]=<span class="number">255</span></span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> range(m):</span><br><span class="line">        i=int(np.random.random()*img.shape[<span class="number">1</span>])</span><br><span class="line">        j=int(np.random.random()*img.shape[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> img.ndim==<span class="number">2</span>:</span><br><span class="line">            img[j,i]=<span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> img.ndim==<span class="number">3</span>:</span><br><span class="line">            img[j,i,<span class="number">0</span>]=<span class="number">0</span></span><br><span class="line">            img[j,i,<span class="number">1</span>]=<span class="number">0</span></span><br><span class="line">            img[j,i,<span class="number">2</span>]=<span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> img</span><br></pre></td></tr></table></figure></p><p><strong>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;</strong>&#xFF1A;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x68C0;&#x67E5;&#x8F93;&#x5165;&#x4FE1;&#x53F7;&#x4E2D;&#x7684;&#x91C7;&#x6837;&#x5E76;&#x5224;&#x65AD;&#x5B83;&#x662F;&#x5426;&#x4EE3;&#x8868;&#x4E86;&#x4FE1;&#x53F7;&#xFF0C;&#x4F7F;&#x7528;&#x5947;&#x6570;&#x4E2A;&#x91C7;&#x6837;&#x7EC4;&#x6210;&#x7684;&#x89C2;&#x5BDF;&#x7A97;&#x53E3;&#x6765;&#x5B9E;&#x73B0;&#x8FD9;&#x9879;&#x529F;&#x80FD;&#x3002;&#x5BF9;&#x89C2;&#x5BDF;&#x7A97;&#x53E3;&#x4E2D;&#x7684;&#x6570;&#x503C;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x628A;&#x4F4D;&#x4E8E;&#x89C2;&#x5BDF;&#x7A97;&#x53E3;&#x4E2D;&#x95F4;&#x7684;&#x4E2D;&#x503C;&#x4F5C;&#x4E3A;&#x8F93;&#x51FA;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x4E22;&#x5F03;&#x6700;&#x65E9;&#x7684;&#x503C;&#xFF0C;&#x53D6;&#x5F97;&#x65B0;&#x7684;&#x91C7;&#x6837;&#xFF0C;&#x4E0D;&#x65AD;&#x91CD;&#x590D;&#x4E0A;&#x9762;&#x7684;&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#x3002;</p><p>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x662F;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x5E38;&#x7528;&#x6B65;&#x9AA4;&#xFF0C;&#x5B83;&#x5BF9;&#x4E8E;&#x6591;&#x70B9;&#x566A;&#x58F0;&#x548C;&#x6912;&#x76D0;&#x566A;&#x58F0;&#x6765;&#x8BF4;&#x5C24;&#x5176;&#x6709;&#x7528;&#x3002;&#x4FDD;&#x5B58;&#x8FB9;&#x7F18;&#x7684;&#x7279;&#x6027;&#x4F7F;&#x5B83;&#x5728;&#x4E0D;&#x5E0C;&#x671B;&#x51FA;&#x73B0;&#x8FB9;&#x7F18;&#x6A21;&#x7CCA;&#x7684;&#x573A;&#x5408;&#x4E5F;&#x5F88;&#x6709;&#x7528;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quzao</span><span class="params">(image)</span>:</span></span><br><span class="line">    <span class="comment">#&#x663E;&#x793A;&#x539F;&#x59CB;&#x56FE;&#x7247;</span></span><br><span class="line">    cv2.imshow(<span class="string">&apos;image&apos;</span>,image)</span><br><span class="line">    <span class="comment">#&#x7531;&#x4E8E;medianBlur&#x4E0D;&#x652F;&#x6301;float64&#x683C;&#x5F0F;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x5C06;&#x5176;&#x8F6C;&#x4E3A;float32&#x683C;&#x5F0F;&#x7684;&#x3002;</span></span><br><span class="line">    image=image.astype(np.float32)</span><br><span class="line">    <span class="comment">#&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;</span></span><br><span class="line">    image2=cv2.medianBlur(image,<span class="number">3</span>)</span><br><span class="line">    cv2.imshow(<span class="string">&apos;medianBlur&apos;</span>,image2)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> image2</span><br></pre></td></tr></table></figure></p><p>&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x4ECE;&#x4E0A;&#x5230;&#x4E0B;&#x4F9D;&#x6B21;&#x662F;&#xFF1A;&#x539F;&#x59CB;&#x56FE;&#x7247;&#xFF0C;&#x52A0;&#x4E86;&#x6912;&#x76D0;&#x566A;&#x58F0;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x8FDB;&#x884C;&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x4E4B;&#x540E;&#x7684;&#x56FE;&#x7247;&#x3002; <img src="/posts/a9eaf96f/&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;.jpg"></p><p><strong>&#x5F69;&#x8272;&#x8F6C;&#x7070;&#x5EA6;</strong>&#xFF1A;&#x5728;&#x524D;&#x9762;&#x6240;&#x8FF0;&#x4E2D;&#xFF0C;&#x9760;&#x5E26;&#x566A;&#x58F0;&#x7684;&#x80CC;&#x666F;&#x56FE;&#x751F;&#x6210;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x4E2D;&#xFF0C;&#x566A;&#x58F0;&#x4FE1;&#x606F;&#x662F;&#x5F69;&#x8272;&#x7684;&#xFF0C;&#x4E3A;&#x4E86;&#x63D0;&#x9AD8;&#x8BC6;&#x522B;&#x7684;&#x51C6;&#x786E;&#x7387;&#xFF0C;&#x6211;&#x5C06;&#x589E;&#x5E45;&#x56FE;&#x7247;&#x8F6C;&#x4E3A;&#x7070;&#x5EA6;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert2gray</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E00;&#x5217;&#x6240;&#x6709;&#xFF0C;&#x7B2C;&#x4E8C;&#x5217;&#x6240;&#x6709;&#xFF0C;&#x7684;&#x7B2C;1/2/3&#x4E2A;&#x50CF;&#x7D20;</span></span><br><span class="line">    r, g, b = img[:, :, <span class="number">0</span>], img[:, :, <span class="number">1</span>], img[:, :, <span class="number">2</span>]</span><br><span class="line">    gray = <span class="number">0.2989</span> * r + <span class="number">0.5870</span> * g + <span class="number">0.1140</span> * b</span><br><span class="line">    gray=np.rint(gray)</span><br><span class="line">    gray=gray.astype(np.uint8)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#######&#x67E5;&#x770B;&#x56FE;&#x50CF;#########</span></span><br><span class="line">    <span class="comment">#f = plt.figure()</span></span><br><span class="line">    <span class="comment">#ax = f.add_subplot(111)</span></span><br><span class="line">    <span class="comment">#ax.text(0.1, 0.9, text, ha=&apos;center&apos;, va=&apos;center&apos;, transform=ax.transAxes)</span></span><br><span class="line">    <span class="comment">#plt.imshow(img)</span></span><br><span class="line">    <span class="comment">#plt.show()</span></span><br><span class="line">    <span class="comment">#plt.imshow(gray,cmap=&apos;Greys_r&apos;)</span></span><br><span class="line">    <span class="comment">#plt.axis(&apos;off&apos;)</span></span><br><span class="line">    <span class="comment">#plt.show()</span></span><br><span class="line">    <span class="comment">#############################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#return np.rint(gray)</span></span><br><span class="line">    <span class="keyword">return</span> gray</span><br></pre></td></tr></table></figure></p><p><img src="/posts/a9eaf96f/&#x7070;&#x5EA6;&#x56FE;.jpg"></p><p>&#x81F3;&#x6B64;&#xFF0C;&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;&#x90E8;&#x5206;&#x7ED3;&#x675F;&#x3002;</p><h1 id="&#x7A00;&#x758F;&#x77E9;&#x9635;">&#x7A00;&#x758F;&#x77E9;&#x9635;</h1><p>&#x7531;&#x4E8E;&#x9A8C;&#x8BC1;&#x7801;&#x662F;&#x4E0D;&#x5B9A;&#x957F;&#x7684;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;LSTM&#x7F51;&#x7EDC;&#x4E2D;&#xFF0C;&#x90E8;&#x5206;&#x51FD;&#x6570;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x9700;&#x8981;&#x628A;&#x8F93;&#x5165;&#x7684;&#x5B57;&#x7B26;&#x8F6C;&#x4E3A;&#x7A00;&#x758F;&#x77E9;&#x9635;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x8BBE;&#x5B9A;Batch_Size=64&#xFF0C;&#x5373;&#x5728;&#x4E00;&#x4E2A;batch&#x4E2D;&#xFF0C;&#x4E00;&#x5171;&#x6709;64&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#x548C;&#x56FE;&#x7247;&#xFF0C;&#x9700;&#x8981;&#x7528;sparse_tuple_from&#x51FD;&#x6570;&#x628A;&#x4ED6;&#x4EEC;&#x8F6C;&#x4E3A;&#x7A00;&#x758F;&#x77E9;&#x9635;&#x3002;&#x73B0;&#x4EE5;3&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#x4E3A;&#x4F8B;&#xFF0C;&#x7ED3;&#x5408;&#x4EE3;&#x7801;&#x8BF4;&#x660E;&#xFF0C;&#x5982;&#x4E0B; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_next_batch</span><span class="params">(batch_size=<span class="number">128</span>)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">#sparse_targets&#x662F;&#x4E00;&#x4E2A;tuple</span></span><br><span class="line">    <span class="comment">#&#x662F;&#x5C06;&#x9A8C;&#x8BC1;&#x7801;&#x8F6C;&#x4E3A;&#x7684;&#x7A00;&#x758F;&#x77E9;&#x9635;</span></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#x662F;&#x8868;&#x793A;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E8C;&#x4E2A;&#x7EF4;&#x5EA6;&#x8868;&#x793A;&#x6240;&#x6709;&#x6570;&#x5B57;&#xFF0C;&#x6309;&#x987A;&#x5E8F;&#x6392;&#x5217;</span></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E09;&#x4E2A;&#x7EF4;&#x5EA6;&#x8868;&#x793A;&#x539F;&#x77E9;&#x9635;&#x7684;&#x6700;&#x5927;&#x5F62;&#x72B6;</span></span><br><span class="line">    sparse_targets = sparse_tuple_from(targets)</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p><p>&#x73B0;&#x4EE5;3&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#x4E3A;&#x4F8B;&#x8BF4;&#x660E;&#x7A00;&#x758F;&#x77E9;&#x9635;&#x3002;</p><p>&#x7A00;&#x758F;&#x77E9;&#x9635;&#x7684;&#x7EF4;&#x5EA6;&#x4E00;&#x5171;&#x6709;&#x4E09;&#x4E2A;&#xFF1A;</p><ol type="1"><li>&#x7B2C;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#x662F;&#x8868;&#x793A;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x4F4D;&#x7F6E;</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x7EF4;&#x5EA6;&#x8868;&#x793A;&#x6240;&#x6709;&#x6570;&#x5B57;&#xFF0C;&#x6309;&#x987A;&#x5E8F;&#x6392;&#x5217;</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x7EF4;&#x5EA6;&#x8868;&#x793A;&#x539F;&#x77E9;&#x9635;&#x7684;&#x6700;&#x5927;&#x5F62;&#x72B6;</li></ol><p>&#x4E3E;&#x4F8B;&#xFF1A;&#x9A8C;&#x8BC1;&#x7801; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">4</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">9</span>],[<span class="number">2</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">5</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>]]</span><br></pre></td></tr></table></figure></p><p>&#x90A3;&#x4E48;&#x7B2C;&#x4E00;&#x5143;&#x7D20;&#x662F; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">2</span>],[<span class="number">0</span>,<span class="number">3</span>],[<span class="number">1</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">0</span>],[<span class="number">2</span>,<span class="number">1</span>],[<span class="number">2</span>,<span class="number">2</span>]]</span><br></pre></td></tr></table></figure></p><p>&#x8868;&#x793A;&#x7684;&#x662F;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x5143;&#x7D20;&#x662F; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">4</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure></p><p>&#x7B2C;&#x4E09;&#x5143;&#x7D20;&#x5C31;&#x662F; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">3</span>,<span class="number">4</span>]</span><br></pre></td></tr></table></figure></p><p>&#x56E0;&#x4E3A;&#x662F;3&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x6700;&#x5927;&#x957F;&#x5EA6;&#x662F;4&#x3002;</p><h1 id="lstm&#x7F51;&#x7EDC;">LSTM&#x7F51;&#x7EDC;</h1><p>LSTM&#x6709;&#x591A;&#x79CD;&#x53D8;&#x5F62;&#xFF0C;&#x5728;TensorFlow&#x4E2D;&#xFF0C;LSTM&#x7C7B;&#x7684;&#x5B9A;&#x4E49;&#x4E3A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LSTMCell</span><span class="params">(LayerRNNCell)</span>:</span></span><br><span class="line">    __init__(self, num_units,</span><br><span class="line">               use_peepholes=<span class="keyword">False</span>, cell_clip=<span class="keyword">None</span>,</span><br><span class="line">               initializer=<span class="keyword">None</span>, num_proj=<span class="keyword">None</span>, proj_clip=<span class="keyword">None</span>,</span><br><span class="line">               num_unit_shards=<span class="keyword">None</span>, num_proj_shards=<span class="keyword">None</span>,</span><br><span class="line">               forget_bias=<span class="number">1.0</span>, state_is_tuple=<span class="keyword">True</span>,</span><br><span class="line">               activation=<span class="keyword">None</span>, reuse=<span class="keyword">None</span>, name=<span class="keyword">None</span>, dtype=<span class="keyword">None</span>)</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>&#x6CA1;&#x6709;&#x4F7F;&#x7528;peephole&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5176;&#x7ED3;&#x6784;&#x662F;&#x6839;&#x636E; &gt;http://www.bioinf.jku.at/publications/older/2604.pdf</p><p>&#x5728;&#x4F7F;&#x7528;&#x4E86;peephole&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5176;&#x7ED3;&#x6784;&#x662F;&#x6839;&#x636E; &gt;https://research.google.com/pubs/archive/43905.pdf</p><p>&#x8FD9;&#x6B21;&#x5B9E;&#x9A8C;&#x7684;LSTM&#xFF0C;&#x6211;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x672A;&#x4F7F;&#x7528;peephole&#x7248;&#x672C;&#x7684;LSTM&#x3002;</p><p>&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x91C7;&#x53D6;&#x9ED8;&#x8BA4;&#x8BBE;&#x5B9A;&#xFF0C;&#x5373;&#x4E3A;None&#x3002;&#x6211;&#x7684;TensorFlow&#x7684;&#x7248;&#x672C;&#x4E3A;1.10&#xFF0C;&#x5206;&#x6790;<a href="https://github.com/tensorflow/tensorflow/blob/r1.10/tensorflow/python/ops/rnn_cell_impl.py" target="_blank" rel="noopener">&#x6E90;&#x7801;</a>&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x5148;&#x770B;LSTM&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#xFF08;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#x7701;&#x7565;&#xFF09;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num_units,</span></span></span><br><span class="line"><span class="function"><span class="params">            use_peepholes=False, cell_clip=None,</span></span></span><br><span class="line"><span class="function"><span class="params">            initializer=None, num_proj=None, proj_clip=None,</span></span></span><br><span class="line"><span class="function"><span class="params">            num_unit_shards=None, num_proj_shards=None,</span></span></span><br><span class="line"><span class="function"><span class="params">            forget_bias=<span class="number">1.0</span>, state_is_tuple=True,</span></span></span><br><span class="line"><span class="function"><span class="params">            activation=None, reuse=None, name=None, dtype=None)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    self._num_units = num_units</span><br><span class="line">    self._activation = activation <span class="keyword">or</span> math_ops.tanh</span><br><span class="line">    self._forget_bias = forget_bias</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> num_proj:</span><br><span class="line">      ...</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      self._state_size = (</span><br><span class="line">          LSTMStateTuple(num_units, num_units)</span><br><span class="line">          <span class="keyword">if</span> state_is_tuple <span class="keyword">else</span> <span class="number">2</span> * num_units)</span><br><span class="line">      self._output_size = num_units</span><br></pre></td></tr></table></figure></p><p>&#x53EF;&#x77E5;&#xFF0C;&#x5728;&#x5B9A;&#x4E49; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#num_hidden=64</span></span><br><span class="line">cell = tf.contrib.rnn.LSTMCell(num_hidden, state_is_tuple=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure></p><p>&#x65F6;&#xFF0C;&#x8F93;&#x51FA;&#x7684;&#x5927;&#x5C0F;&#x662F;64&#x7684;vector&#x3002;</p><p>&#x7EE7;&#x7EED;&#x5206;&#x6790;build&#x51FD;&#x6570;&#xFF0C;&#x5982;&#x4E0B;&#xFF08;&#x7531;&#x4E8E;&#x672A;&#x4F7F;&#x7528;peephole&#xFF0C;&#x6545;&#x7565;&#x53BB;peephole&#x76F8;&#x5173;&#xFF09;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build</span><span class="params">(self, inputs_shape)</span>:</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    h_depth = self._num_units <span class="keyword">if</span> self._num_proj <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">else</span> self._num_proj</span><br><span class="line"></span><br><span class="line">    self._kernel = self.add_variable(</span><br><span class="line">    _WEIGHTS_VARIABLE_NAME,</span><br><span class="line">    shape=[input_depth + h_depth, <span class="number">4</span> * self._num_units],</span><br><span class="line">    initializer=self._initializer,</span><br><span class="line">    partitioner=maybe_partitioner)</span><br><span class="line"></span><br><span class="line">    self._bias = self.add_variable(</span><br><span class="line">    _BIAS_VARIABLE_NAME,</span><br><span class="line">    shape=[<span class="number">4</span> * self._num_units],</span><br><span class="line">    initializer=initializer)</span><br></pre></td></tr></table></figure></p><p>&#x53EF;&#x89C1;&#xFF0C;&#x5B9E;&#x9645;&#x7528;&#x4E8E;&#x8BA1;&#x7B97;4&#x4E2A;Gates&#x7684;&#x5411;&#x91CF;&#x7684;&#x662F;&#x7531;input vector&#x548C;&#x4E0A;&#x4E00;&#x65F6;&#x523B;LSTM &#x795E;&#x7ECF;&#x5143;&#x8F93;&#x51FA;&#x6240;&#x7EC4;&#x6210;&#x7684;&#x3002;</p><p>&#x5206;&#x6790;call&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x5B9E;&#x9645;&#x8BA1;&#x7B97;&#x65F6;&#xFF0C;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">call</span><span class="params">(self, inputs, state)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Run one step of LSTM.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      inputs: input Tensor, 2D, `[batch, num_units].</span></span><br><span class="line"><span class="string">      state: if `state_is_tuple` is False, this must be a state Tensor,</span></span><br><span class="line"><span class="string">        `2-D, [batch, state_size]`.  If `state_is_tuple` is True, this must be a</span></span><br><span class="line"><span class="string">        tuple of state Tensors, both `2-D`, with column sizes `c_state` and</span></span><br><span class="line"><span class="string">        `m_state`.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ...</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    sigmoid = math_ops.sigmoid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> self._state_is_tuple:</span><br><span class="line">      (c_prev, m_prev) = state</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      c_prev = array_ops.slice(state, [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">-1</span>, self._num_units])</span><br><span class="line">      m_prev = array_ops.slice(state, [<span class="number">0</span>, self._num_units], [<span class="number">-1</span>, num_proj])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># i = input_gate, j = new_input, f = forget_gate, o = output_gate</span></span><br><span class="line">    lstm_matrix = math_ops.matmul(</span><br><span class="line">        array_ops.concat([inputs, m_prev], <span class="number">1</span>), self._kernel)</span><br><span class="line">    lstm_matrix = nn_ops.bias_add(lstm_matrix, self._bias)</span><br><span class="line"></span><br><span class="line">    i, j, f, o = array_ops.split(</span><br><span class="line">        value=lstm_matrix, num_or_size_splits=<span class="number">4</span>, axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> self._use_peepholes:</span><br><span class="line">      ...</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      c = (sigmoid(f + self._forget_bias) * c_prev + sigmoid(i) *</span><br><span class="line">           self._activation(j))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> self._use_peepholes:</span><br><span class="line">      ...</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      m = sigmoid(o) * self._activation(c)</span><br><span class="line"></span><br><span class="line">    new_state = (LSTMStateTuple(c, m) <span class="keyword">if</span> self._state_is_tuple <span class="keyword">else</span></span><br><span class="line">                 array_ops.concat([c, m], <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> m, new_state</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x628A;&#x4E00;&#x6B21;LSTM&#x795E;&#x7ECF;&#x5143;&#x6267;&#x884C;&#x7684;&#x8FC7;&#x7A0B;&#x8BB2;&#x7684;&#x975E;&#x5E38;&#x6E05;&#x695A;&#x4E86;&#x3002;</p><p>&#x7531;&#x4E0A;&#x6587;&#xFF0C;&#x53EF;&#x77E5;&#xFF0C;&#x5355;&#x4E2A;LSTM&#x795E;&#x7ECF;&#x5143;&#x7ED3;&#x6784;&#x5982;&#x56FE;&#xFF1A; <img src="/posts/a9eaf96f/LSTMCell.jpg"></p><p><span class="math inline">\(x_t\)</span>&#x662F;&#x8F93;&#x5165;&#x7684;vector&#xFF0C;size=32&#x3002;<span class="math inline">\(m_{t-1}\)</span>&#x662F;&#x4E0A;&#x4E00;&#x65F6;&#x523B;&#x7684;&#x8F93;&#x51FA;&#xFF0C;size=64&#x3002;<br>&#x4E8C;&#x8005;&#x8FDB;&#x884C;&#x62FC;&#x63A5;&#xFF0C;&#x7EC4;&#x6210;size=96&#x7684;&#x5411;&#x91CF;&#xFF0C;&#x8FD9;&#x4E2A;&#x5411;&#x91CF;&#x7528;&#x4E8E;&#x540E;&#x9762;&#x7684;&#x8BA1;&#x7B97;&#x3002;</p><p>&#x7279;&#x522B;&#x9700;&#x8981;&#x4E00;&#x63D0;&#x7684;&#x662F;forget_gate&#x7684;&#x8F93;&#x5165;<span class="math inline">\(f_t\)</span>&#xFF0C;&#x4EE3;&#x7801;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;forget_gate_bias=1&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x518D;&#x52A0;&#x4E0A;1&#x3002;</p><p>&#x5176;&#x4E2D;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x4E3A;&#x9ED8;&#x8BA4;&#x7684;Logistic&#x51FD;&#x6570;&#x548C;tanh&#x51FD;&#x6570;&#x3002; <span class="math display">\[tanh(x) = \frac{exp(x)-exp(-x)} {exp(x)+exp(-x)}\]</span></p><p>&#x5230;&#x73B0;&#x5728;&#x4E3A;&#x6B62;&#xFF0C;&#x53EA;&#x628A;&#x4E00;&#x4E2A;LSTM&#x795E;&#x7ECF;&#x5143;&#x63CF;&#x8FF0;&#x5B8C;&#x6BD5;&#x3002;&#x5728;&#x8BED;&#x53E5; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cell = tf.contrib.rnn.LSTMCell(num_hidden, state_is_tuple=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x8868;&#x793A;&#xFF0C;&#x4E00;&#x5C42;LSTM&#x4E00;&#x5171;&#x6709;64&#x4E2A;&#x5982;&#x4E0A;&#x6240;&#x8FF0;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x3002;</p><p>&#x5728;&#x8BED;&#x53E5; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stack = tf.contrib.rnn.MultiRNNCell([cell] * num_layers, state_is_tuple=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure></p><p>&#x8868;&#x793A;&#xFF0C;&#x4E0A;&#x8FF0;LSTM&#x5C42;&#xFF0C;&#x4E00;&#x5171;&#x6709;1&#x5C42;&#x3002;</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outputs, _ = tf.nn.dynamic_rnn(cell, inputs, seq_len, dtype=tf.float32)</span><br></pre></td></tr></table></figure><p>&#x8868;&#x793A;&#x52A8;&#x6001;&#x7684;RNN&#x5B9E;&#x73B0;&#x3002;</p><p>&#x4E0A;&#x8FF0;&#x7684;LSTM&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x4E00;&#x5C42;&#x6709;64&#x4E2A;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x5C42;&#x3002;&#x5982;&#x56FE;&#xFF1A;</p><p><img src="/posts/a9eaf96f/LSTM.jpg"></p><p><strong>&#x5168;&#x8FDE;&#x63A5;&#x5C42;</strong>&#xFF1A;&#x63A5;&#x6536;&#x6765;&#x81EA;LSTM&#x5C42;&#x7684;size=64&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x8F93;&#x51FA;size=12&#x7684;&#x8F93;&#x51FA;&#x3002;</p><p>&#x8BA1;&#x7B97;&#x65B9;&#x6CD5;&#x662F;output=input*W+b</p><p><img src="/posts/a9eaf96f/&#x5168;&#x8FDE;&#x63A5;&#x5C42;.jpg"></p><p><strong>&#x6570;&#x636E;&#x6D41;&#x7684;&#x5F62;&#x72B6;&#x5206;&#x6790;</strong>&#xFF1A;&#x4EE3;&#x7801;&#x4E2D;&#x6D89;&#x53CA;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x5F62;&#x72B6;&#x53D8;&#x6362;&#x3002;&#x6211;&#x628A;&#x5F62;&#x72B6;&#x7684;&#x53D8;&#x6362;&#x5199;&#x5230;&#x4E86;&#x4EE3;&#x7801;&#x7684;&#x6CE8;&#x91CA;&#x91CC;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_train_model</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#features = convolutional_layers()</span></span><br><span class="line">    <span class="comment">#print features.get_shape()</span></span><br><span class="line">    <span class="comment">##OUTPUT_SHAPE = (32,256)</span></span><br><span class="line">    <span class="comment">#inputs.shape=(64,256,32)</span></span><br><span class="line">    inputs = tf.placeholder(tf.float32, [<span class="keyword">None</span>, <span class="keyword">None</span>, OUTPUT_SHAPE[<span class="number">0</span>]])</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#&#x5B9A;&#x4E49;ctc_loss&#x9700;&#x8981;&#x7684;&#x7A00;&#x758F;&#x77E9;&#x9635;</span></span><br><span class="line">    <span class="comment">#targets&#x662F;&#x6807;&#x7B7E;&#xFF0C;&#x4EE5;&#x7A00;&#x758F;&#x77E9;&#x9635;&#x7684;&#x5F62;&#x5F0F;&#x7ED9;</span></span><br><span class="line">    targets = tf.sparse_placeholder(tf.int32)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#1&#x7EF4;&#x5411;&#x91CF; &#x5E8F;&#x5217;&#x957F;&#x5EA6; [batch_size,]</span></span><br><span class="line">    <span class="comment">#BATCH_SIZE = 64</span></span><br><span class="line">    <span class="comment">#seq_len=[64],&#x6BCF;&#x4E2A;&#x91CC;&#x9762;&#x90FD;&#x662F;256&#xFF0C;&#x8868;&#x793A; &#x4E00;&#x5171;64&#x4E2A;batch&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x91CC;&#x9762;&#xFF0C;&#x662F;256&#x6761;input  </span></span><br><span class="line">    seq_len = tf.placeholder(tf.int32, [<span class="keyword">None</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#&#x5B9A;&#x4E49;LSTM&#x7F51;&#x7EDC;</span></span><br><span class="line">    <span class="comment">#num_hidden = 64</span></span><br><span class="line">    <span class="comment">#num_layers = 1</span></span><br><span class="line">    cell = tf.contrib.rnn.LSTMCell(num_hidden, state_is_tuple=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment">#temp_input=cell.get_input_at(0)</span></span><br><span class="line">    <span class="comment">#&#x9ED8;&#x8BA4;&#x662F;&#x4E0D;&#x7528;peephole&#x7684;&#x3002;</span></span><br><span class="line">    <span class="comment"># state_is_tuple: If True,</span></span><br><span class="line">    <span class="comment">#  accepted and returned states are 2-tuples of the c_state and m_state.</span></span><br><span class="line">    stack = tf.contrib.rnn.MultiRNNCell([cell] * num_layers, state_is_tuple=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment">#inputs.shape=(64,256,32)</span></span><br><span class="line">    <span class="comment">#train_seq_len&#xFF1A;shape=(64,)&#xFF0C;&#x6BCF;&#x4E2A;&#x91CC;&#x9762;&#x90FD;&#x662F;256&#xFF0C;&#x8868;&#x793A;&#x4E00;&#x5171;64&#x4E2A;batch&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x91CC;&#x9762;&#x662F;256&#x6761;</span></span><br><span class="line">    <span class="comment">#output&#x7684;shape=(64,256,64)(batch_size*256&#x6761;*64&#x4E2A;output)</span></span><br><span class="line">    outputs, _ = tf.nn.dynamic_rnn(cell, inputs, seq_len, dtype=tf.float32)</span><br><span class="line">    <span class="comment">#print(&quot;================================&quot;,outputs.shape)</span></span><br><span class="line">    <span class="comment">#shape=(64,256,32)</span></span><br><span class="line">    shape = tf.shape(inputs)</span><br><span class="line">    batch_s, max_timesteps = shape[<span class="number">0</span>], shape[<span class="number">1</span>]</span><br><span class="line">    <span class="comment">#-1&#x8868;&#x793A;&#x7F3A;&#x7701;&#x503C;&#xFF0C;&#x6700;&#x540E;&#x5269;&#x4E0B;&#x7684;&#x6570;&#x5C31;&#x662F;&#x90A3;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x6570;</span></span><br><span class="line">    <span class="comment">#reshape&#x4E4B;&#x540E;&#xFF0C;output&#x7684;size&#x662F;(64*256,64)</span></span><br><span class="line">    outputs = tf.reshape(outputs, [<span class="number">-1</span>, num_hidden])</span><br><span class="line">    W = tf.Variable(tf.truncated_normal([num_hidden,</span><br><span class="line">                                          num_classes],</span><br><span class="line">                                         stddev=<span class="number">0.1</span>), name=<span class="string">&quot;W&quot;</span>)</span><br><span class="line">    b = tf.Variable(tf.constant(<span class="number">0.</span>, shape=[num_classes]), name=<span class="string">&quot;b&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    logits = tf.matmul(outputs, W) + b</span><br><span class="line">    <span class="comment">#&#x8FD9;&#x91CC;&#x7684;&#x76F8;&#x52A0;&#x662F;&#x628A;b&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x52A0;&#x5230;tf.matmul(outputs, W)&#x7684;&#x6BCF;&#x4E00;&#x5217;&#x4E2D;&#x53BB;&#x3002;</span></span><br><span class="line">    <span class="comment">#reshape&#x4E4B;&#x540E;logits&#x7684;shape&#x662F;(64,256,12)</span></span><br><span class="line">    logits = tf.reshape(logits, [batch_s, <span class="number">-1</span>, num_classes])</span><br><span class="line">    <span class="comment">#&#x4EA4;&#x6362;&#x5750;&#x6807;&#x8F74;&#xFF0C;axis0&#x548C;axis1&#x4E92;&#x6362;&#xFF0C;logits&#x7684;shape&#x662F;(256,64,12)</span></span><br><span class="line">    <span class="comment">#&#x8FD9;&#x662F;&#x4E3A;&#x4E86;&#x6EE1;&#x8DB3;&#x540E;&#x9762;&#x7684;ctc&#x51FD;&#x6570;&#x7684;&#x8981;&#x6C42;</span></span><br><span class="line">    logits = tf.transpose(logits, (<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#return logits, inputs, targets, seq_len, W, b, cell</span></span><br><span class="line">    <span class="keyword">return</span> logits, inputs, targets, seq_len, W, b</span><br></pre></td></tr></table></figure></p><h1 id="ctc&#x539F;&#x7406;">CTC&#x539F;&#x7406;</h1><p>TensorFlow&#x628A;CTC&#x5185;&#x90E8;&#x5C01;&#x88C5;&#x7684;&#x975E;&#x5E38;&#x597D;&#x4E86;&#x3002;&#x6211;&#x8FD9;&#x91CC;&#x5C31;&#x5148;&#x628A;&#x539F;&#x7406;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#x5427;&#x3002;&#xFF08;&#x4EE3;&#x7801;&#x5206;&#x6790;&#x4E0D;&#x52A8;&#x4E86;&#xFF09;</p><p>CTC&#x7B97;&#x6CD5;&#x5168;&#x79F0;&#x53EB;&#xFF1A;Connectionist temporal classification&#x3002;&#x4ECE;&#x5B57;&#x9762;&#x4E0A;&#x7406;&#x89E3;&#x5B83;&#x662F;&#x7528;&#x6765;&#x89E3;&#x51B3;&#x65F6;&#x5E8F;&#x7C7B;&#x6570;&#x636E;&#x7684;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#x3002;</p><p>&#x5728;&#x9A8C;&#x8BC1;&#x7801;&#x8BC6;&#x522B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6BD4;&#x5982;&#x5047;&#x5B9A;&#x9A8C;&#x8BC1;&#x7801;&#x662F;&quot;123&quot;&#xFF0C;&#x6570;&#x5B57;1&#x5BF9;&#x5E94;&#x7684;&#x56FE;&#x50CF;&#x7684;&#x5BBD;&#x5EA6;&#x4E0D;&#x6B62;1&#x4E2A;&#x50CF;&#x7D20;&#xFF0C;&#x540C;&#x7406;2,3&#x4E5F;&#x662F;&#x3002;&#x6240;&#x4EE5;LSTM&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x53EF;&#x80FD;&#x4F1A;&#x662F;&#x5982;&#x4E0B; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3.</span>....</span><br></pre></td></tr></table></figure></p><p>CTC&#x628A;&#x91CD;&#x590D;&#x7684;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#xFF0C;&#x6700;&#x540E;&#x5F97;&#x51FA;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#x662F;&quot;123&quot;&#x3002;</p><p>&#x4F46;&#x662F;&#x5219;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5047;&#x5982;&#x9A8C;&#x8BC1;&#x7801;&#x662F;&quot;112&quot;&#xFF0C;&#x5408;&#x5E76;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x9519;&#x8BEF;&#xFF0C;&#x4E8E;&#x662F;CTC&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x7A7A;&#x767D;&#xFF0C;&#x53EB;CTC-blank&#xFF0C;&#x63D2;&#x5165;&#x5728;&#x4E24;&#x4E2A;1&#x4E2D;&#x95F4;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x786E;&#x8BC6;&#x522B;&#x4E86;&#x3002;</p><p>&#x8003;&#x8651;&#x5230;&#x4E00;&#x5171;&#x6709;10&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;&#x6CA1;&#x6709;&#x6570;&#x5B57;&#x7684;&#x7A7A;&#x767D;&#x90E8;&#x5206;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;&#x4E00;&#x4E2A;ctc-blank&#xFF0C;&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x8981;&#x8BC6;&#x522B;&#x7684;&#x7A7A;&#x95F4;&#x4E00;&#x5171;&#x6709;12&#x4E2A;&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x662F; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num_classes = obj.len + <span class="number">1</span> + <span class="number">1</span>  <span class="comment"># 10&#x4F4D;&#x6570;&#x5B57; + blank + ctc blank</span></span><br></pre></td></tr></table></figure></p><p>&#x7684;&#x7531;&#x6765;&#x3002;</p><p>&#x5728;CTC&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x6807;&#x7B7E;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x540E;&#xFF0C;&#x90FD;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;ctc-blank&#xFF0C;&#x5373;&#x5982;&#x679C;&#x539F;&#x6807;&#x7B7E;&#x6709;<span class="math inline">\(U\)</span>&#x4E2A;&#xFF0C;&#x5219;<span class="math inline">\(U&apos;=2U+1\)</span>&#x4E2A;</p><p><strong>&#x53CD;&#x5411;&#x4F20;&#x64AD;</strong> &#x73B0;&#x5728;&#x7684;&#x6A21;&#x578B;&#x53EF;&#x4EE5;&#x62BD;&#x8C61;&#x6210; <img src="/posts/a9eaf96f/BP.jpg"></p><p>&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x6765;&#x8BA1;&#x7B97;&#x3002;</p><p><strong>LOSS&#x51FD;&#x6570;</strong> &#x7531;&#x6807;&#x7B7E;&#xFF0C;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x771F;&#x5B9E;&#x7684;&#x503C;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x80FD;&#x5F97;&#x5230;&#x8FD9;&#x4E2A;&#x503C;&#x7684;&#x5E8F;&#x5217;&#x6709;&#x5F88;&#x591A;&#xFF0C;&#x8BA1;&#x7B97;&#x8FD9;&#x4E2A;&#x503C;&#x7684;&#x6982;&#x7387;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x628A;&#x8FD9;&#x4E9B;&#x6240;&#x6709;&#x7684;&#x5E8F;&#x5217;&#x7684;&#x6982;&#x7387;&#x6C42;&#x548C;&#xFF0C;&#x5982;&#x679C;&#x91C7;&#x7528;&#x7A77;&#x4E3E;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x5C06;&#x4F1A;&#x662F;<span class="math inline">\(T^N\)</span>&#xFF0C;&#x5176;&#x4E2D;T&#x662F;&#x6B65;&#x6570;&#xFF0C;N&#x662F;&#x5206;&#x7C7B;&#x7684;&#x6570;&#x76EE;&#x3002;</p><p><img src="/posts/a9eaf96f/ctc_dp.jpg"> &#x5982;&#x4E0A;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x5047;&#x5B9A;&#x73B0;&#x5728;&#x6709;&#x4E24;&#x4E2A;&#x5E8F;&#x5217;&#x3010;1,1,1,1,1,2,2,2,2,3,3,3,3,3,3,3&#x3011;&#x548C;&#x5E8F;&#x5217;&#x3010;1,1,1,1,1,1,1,1,2,2,2,2,3,3,3,3&#x3011;&#xFF0C;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x53EA;&#x6709;&#x3010;1,2,3&#x3011;&#xFF0C;&#x5148;&#x4E0D;&#x8003;&#x8651;ctc-blank&#x3002;</p><p>&#x5728;&#x7B2C;9&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#x4E0A;&#xFF0C;&#x9884;&#x6D4B;&#x503C;&#x90FD;&#x662F;2&#x3002;&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x5E8F;&#x5217;&#xFF0C;&#x4EE5;&#x7B2C;9&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#x4E3A;2&#x4F5C;&#x4E3A;&#x7EA6;&#x675F;&#xFF0C;&#x53EF;&#x4EE5;&#x7EC4;&#x6210;4&#x4E2A;&#x5E8F;&#x5217;&#x3002;</p><p>&#x90A3;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x53EF;&#x4EE5;&#x62BD;&#x8C61;&#x6210;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x79CD;&#x6A21;&#x578B; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x3010;&#x524D;&#x5E8F;&#x3011;<span class="number">2</span>&#x3010;&#x540E;&#x5E8F;&#x3011;</span><br></pre></td></tr></table></figure></p><p>&#x90A3;&#x4E48;&#x53EF;&#x77E5;&#xFF0C;&#x5728;&#x7B2C;9&#x4E2A;&#x5E8F;&#x5217;&#x4E3A;2&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;&#x53EF;&#x80FD;&#x7684;&#x60C5;&#x51B5;&#x662F;</p><ol type="1"><li>&#x524D;&#x5E8F;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x662F;1&#xFF0C;&#x7B2C;9&#x4E2A;&#x65F6;&#x523B;&#x7531;1-&gt;2</li><li>&#x524D;&#x5E8F;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x662F;2&#xFF0C;&#x7B2C;9&#x4E2A;&#x65F6;&#x523B;&#x7531;2-&gt;2</li></ol><p>&#x8BB0;<span class="math inline">\(\alpha\)</span>&#x662F;&#x524D;&#x5E8F;&#x7684;&#x6982;&#x7387;&#x3002;&#x5219;<span class="math inline">\(\alpha_{t,2}=(\alpha_{t-1,1}+\alpha_{t-1,2})*p_{t,2}\)</span><br>&#x4E5F;&#x5373;&#xFF0C;&#x5728;t&#x65F6;&#x523B;&#x4E3A;2&#x7684;&#x6982;&#x7387;&#xFF0C;&#x5176;&#x503C;&#x53EA;&#x53EF;&#x80FD;&#x4E0E;t-1&#x65F6;&#x523B;&#xFF0C;&#x503C;&#x4E3A;2&#xFF0C;&#x548C;t-1&#x65F6;&#x523B;&#xFF0C;&#x503C;&#x4E3A;1&#x7684;&#x60C5;&#x51B5;&#x6709;&#x5173;&#x3002;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x53BB;&#x6C42;&#x89E3;&#x3002;</p><p>&#x5982;&#x679C;&#x6D89;&#x53CA;&#x5230;ctc-blank&#xFF0C;&#x6BD4;&#x5982;&#x3010;1&#xFF0C;1&#xFF0C;2&#x3011;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#xFF0C;&#x5BF9;&#x4E8E;1&#x7684;&#x524D;&#x4E00;&#x4E2A;&#xFF0C;&#x53EA;&#x53EF;&#x80FD;&#x662F;1&#xFF0C;&#x6216;&#x8005;&#x662F;ctc-blank&#xFF0C;&#x4E14;ctc-blank&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x8FD8;&#x662F;1&#x3002;</p><p><strong>&#x72B6;&#x6001;&#x8F6C;&#x79FB;</strong> &#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x6BD4;&#x8F83;&#x7ED5;&#xFF0C;&#x5728;&#x524D;&#x9762;&#x8BF4;&#xFF0C;&#x5728;CTC&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x6807;&#x7B7E;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x540E;&#xFF0C;&#x90FD;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;ctc-blank&#xFF0C;&#x5373;&#x5982;&#x679C;&#x539F;&#x6807;&#x7B7E;&#x6709;<span class="math inline">\(U\)</span>&#x4E2A;&#xFF0C;&#x5219;<span class="math inline">\(U&apos;=2U+1\)</span>&#x4E2A;&#x3002;&#x90A3;&#x4E48;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x53EF;&#x80FD;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x6709;&#x5982;&#x4E0B;&#x8F6C;&#x79FB;&#x7684;&#x53EF;&#x80FD;&#xFF1A;</p><ol type="1"><li>&#x4E0D;&#x80FD;&#x8DF3;&#x8FC7;&#x6807;&#x7B7E;&#x7684;<ul><li><span class="math inline">\(z_t=z_{t-2}\)</span>&#x65F6;&#xFF0C;&#x5373;&#x8FD9;&#x4E2A;&#x6807;&#x7B7E;&#x662F;&#x8FDE;&#x7EED;&#x4E24;&#x4E2A;&#x76F8;&#x540C;&#x6807;&#x7B7E;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#xFF0C;&#x5219;&#x4E0D;&#x80FD;&#x8DF3;&#x8FC7;&#x4E0A;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#x6765;&#x8BA1;&#x7B97;&#x3002;</li><li><span class="math inline">\(z_t=\epsilon\)</span> ,&#x5219;&#x4E0D;&#x80FD;&#x8DF3;&#x8FC7;&#x4E0A;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#x8BA1;&#x7B97;&#x3002;</li><li>&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#xFF1A;<span class="math inline">\(\alpha_{s,t}=(\alpha_{s-1,t-1}+\alpha_{s,t-1})p_t(z_s|X)\)</span> <img src="/posts/a9eaf96f/&#x4E0D;&#x80FD;&#x8DF3;&#x8FC7;.jpg"></li></ul></li><li>&#x80FD;&#x8DF3;&#x8FC7;&#x6807;&#x7B7E;&#x7684;<ul><li><span class="math inline">\(z_{s-1}=\epsilon\)</span>&#xFF0C;&#x4E14;<span class="math inline">\(z_{s-1}\)</span>&#x662F;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x6807;&#x7B7E;&#x4E2D;&#x95F4;&#x7684;ctc-blank&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x662F;&#x53EF;&#x4EE5;&#x8DF3;&#x8FC7;&#x4E0A;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#x7684;&#x3002;</li><li>&#x8BA1;&#x7B97;&#x516C;&#x5F0F;:<span class="math inline">\(\alpha_{s,t}=(\alpha_{s-2,t-1}+\alpha_{s-1,t-1}+\alpha_{s,t-1})p_t(z_s|X)\)</span> <img src="/posts/a9eaf96f/&#x80FD;&#x8DF3;&#x8FC7;.jpg"></li></ul></li></ol><p>&#x5982;&#x56FE;&#xFF0C;&#x8DF3;&#x8FC7;&#x7684;&#x6807;&#x7B7E;&#x7528;&#x7EA2;&#x8272;&#x6807;&#x6CE8;&#x51FA;&#x6765;&#x4E86;&#x3002; <img src="/posts/a9eaf96f/&#x8DF3;&#x8FC7;&#x6F14;&#x793A;.jpg"></p><p>&#x56E0;&#x6B64;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E2A;&#x5B9E;&#x9A8C;&#xFF0C;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x5927;&#x5C0F;&#x662F;256*32&#xFF0C;&#x5047;&#x5B9A;&#x9884;&#x6D4B;&#x662F;123&#xFF0C;&#x8BA1;&#x7B97;&#x9884;&#x6D4B;&#x7684;&#x6982;&#x7387;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x6C42;&#x5728;t=256&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x503C;&#x4E3A;3&#x548C;&#x3F5;&#x7684;&#x6982;&#x7387;&#x5373;&#x53EF;&#x3002;&#x5982;&#x56FE; <img src="/posts/a9eaf96f/LOSS2.jpg"></p><p>&#x73B0;&#x5728;&#x5F97;&#x5230;&#x4E86;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x9884;&#x6D4B;&#x503C;&#xFF0C;&#x5047;&#x5B9A;&#x8FD9;&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#x662F;&#x7B2C;<span class="math inline">\(i\)</span>&#x4E2A;&#xFF0C;&#x6982;&#x7387;&#x4E3A;<span class="math inline">\(p_i\)</span>&#x3002;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;batch&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x662F;64&#x4E2A;&#x3002;&#x90A3;&#x4E48;&#x6211;&#x5E0C;&#x671B;&#x9884;&#x6D4B;&#x7684;&#x6982;&#x7387;&#x6700;&#x5927;&#xFF0C;&#x5373;&#x628A;&#x8FD9;64&#x4E2A;&#x6982;&#x7387;&#x8FDE;&#x4E58;&#x3002;&#x5373; <span class="math display">\[L=\mathop{\prod}\limits_{i=0}\limits^n p_i\]</span> &#x73B0;&#x5728;&#x60F3;&#x8BA9;Loss&#x51FD;&#x6570;&#x80FD;&#x4E0B;&#x964D;&#xFF0C;&#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x5BF9;<span class="math inline">\(L\)</span>&#x53D6;&#x8D1F;&#x5BF9;&#x6570;&#x3002;&#x5373; <span class="math display">\[Loss=-ln(L)\]</span></p><p><strong>Beam Search</strong> Beam Search&#x662F;&#x7528;&#x4E8E;&#x9884;&#x6D4B;&#x7684;&#x3002;</p><p>&#x7531;&#x524D;&#x6587;&#x6240;&#x8FF0;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;LSTM&#x7F51;&#x7EDC;&#x90FD;&#x4F1A;&#x7ED9;&#x51FA;(256,12)&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x5176;&#x4E2D;256&#x8868;&#x793A;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x4E00;&#x5171;&#x6709;256&#x6B21;&#x8F93;&#x5165;&#xFF0C;&#x6BCF;&#x6B21;&#x8F93;&#x5165;&#x90FD;&#x7531;&#x4E00;&#x4E2A;size=12&#x7684;&#x8F93;&#x51FA;&#x3002;</p><p>&#x5728;size=12&#x7684;&#x8F93;&#x51FA;&#x4E2D;&#xFF0C;&#x8868;&#x660E;&#x4E86;LSTM&#x8BA4;&#x4E3A;&#xFF0C;&#x5BF9;&#x4E8E;&#x5F53;&#x524D;&#x8FD9;&#x4E2A;size=32&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x5404;&#x4E2A;&#x5B57;&#x7B26;&#x5BF9;&#x5E94;&#x7684;&#x6982;&#x7387;&#x3002;&#x5373;&#x6BCF;&#x4E00;&#x4E2A;&#x56FE;&#x7247;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#xFF08;256,12&#xFF09;&#x7684;&#x8F93;&#x51FA;&#x77E9;&#x9635;&#x3002;</p><p>&#x7531;&#x4E0A;&#x9762;&#x8FD9;&#x4E2A;&#x6982;&#x7387;&#x77E9;&#x9635;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x9884;&#x6D4B;&#x5E8F;&#x5217;&#x3002;&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x662F; greed search&#xFF0C;&#x5373;&#x4ECE;&#x524D;&#x5230;&#x540E;&#xFF0C;&#x6BCF;&#x6B21;&#x9009;&#x53D6;&#x6982;&#x7387;&#x6700;&#x5927;&#x7684;&#x90A3;&#x4E00;&#x4E2A;class&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x6709;&#x9884;&#x6D4B;&#x5E8F;&#x5217;&#x3010;1,1,1&#x3011;&#x548C;&#x5E8F;&#x5217;&#x3010;1,1,&#x3F5;&#x3011;&#xFF0C;&#x4ED6;&#x4FE9;&#x5230;&#x6700;&#x540E;&#x90FD;&#x4F1A;&#x5F97;&#x5230;&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#x3010;1&#x3011;&#xFF0C;&#x53E6;&#x6709;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#x3010;2,2,2&#x3011;&#xFF0C;&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#x4E3A;&#x3010;2&#x3011;&#x3002;&#x6709;&#x53EF;&#x80FD;&#x3010;2,2,2&#x3011;&#x7684;&#x6982;&#x7387;&#x6BD4;&#x3010;1,1,1&#x3011;&#x548C;&#x3010;1,1,&#x3F5;&#x3011;&#x90FD;&#x5927;&#xFF0C;&#x4F46;&#x662F;&#x3010;1,1,1&#x3011;&#x548C;&#x3010;1,1,&#x3F5;&#x3011;&#x7684;&#x6982;&#x7387;&#x7684;&#x548C;&#x6BD4;&#x3010;2,2,2&#x3011;&#x5927;&#xFF0C;&#x56E0;&#x6B64;&#x5E94;&#x8BE5;&#x8F93;&#x51FA;&#x3010;1&#x3011;&#x800C;&#x975E;&#x3010;2&#x3011;&#x3002;</p><p>&#x4F46;&#x662F;&#x7A77;&#x4E3E;&#x641C;&#x7D22;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x592A;&#x9AD8;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x8981;&#x91C7;&#x53D6;&#x4E00;&#x79CD;&#x6298;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;beam search&#x3002;</p><p>&#x539F;&#x7406;&#x5982;&#x56FE; <img src="/posts/a9eaf96f/beamsearch.jpg"> <img src="/posts/a9eaf96f/beamsearch2.jpg"></p><p>&#x6BCF;&#x6B21;&#x90FD;&#x9009;&#x53D6;&#x6982;&#x7387;&#x4E3A;&#x524D;beam_size&#x5927;&#x5C0F;&#x7684;&#x9009;&#x62E9;&#xFF0C;&#x4E0D;&#x65AD;&#x8FDB;&#x884C;&#x641C;&#x7D22;&#xFF0C;&#x6700;&#x540E;&#x6839;&#x636E;&#x641C;&#x7D22;&#x7ED3;&#x679C;&#x9884;&#x6D4B;&#x51FA;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x7684;&#x53EF;&#x80FD;&#x3002;&#x56FE;&#x4E2D;&#x7684;beam size=3&#xFF0C;&#x6700;&#x540E;&#x9884;&#x6D4B;&#x7684;&#x6700;&#x5927;&#x53EF;&#x80FD;&#x662F;&#x3010;a&#x3011;&#x3002;</p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#x622A;&#x56FE;">&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#x622A;&#x56FE;</h1><p>&#x8FED;&#x4EE3;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x9884;&#x6D4B;&#x503C;&#x4E3A;&#x7A7A;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x7EE7;&#x7EED;&#x5B66;&#x4E60;&#x5373;&#x53EF;&#x3002; <img src="/posts/a9eaf96f/&#x7ED3;&#x679C;.jpg"></p><h1 id="qa">QA</h1><p><strong>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4E00;&#x5217;&#x4E00;&#x5217;&#x7684;&#x8F93;&#x5165;</strong> &#x5982;&#x679C;&#x662F;&#x6309;&#x884C;&#x8F93;&#x5165;&#xFF0C;&#x5219;&#x8F93;&#x5165;&#x7684;&#x8FD9;&#x4E00;&#x884C;&#xFF0C;&#x4F1A;&#x5305;&#x62EC;&#x591A;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x5C31;&#x6CA1;&#x6CD5;&#x8BC6;&#x522B;&#x4E86;&#x3002;</p><h1 id="&#x81F4;&#x8C22;">&#x81F4;&#x8C22;</h1><p>&#x611F;&#x8C22;<strong>&#x82CF;&#x7490;&#x5CA9;</strong>&#x540C;&#x5B66;&#x5728;&#x6B64;&#x6B21;&#x8BD5;&#x9A8C;&#x7684;&#x5927;&#x529B;&#x5E2E;&#x52A9;&#x3002;</p><h1 id="todo">TODO</h1><ol type="1"><li>&#x4FEE;&#x6539;&#x4EE3;&#x7801;&#xFF0C;&#x628A;&#x6CA1;&#x7528;&#x7684;&#x5220;&#x6389;&#x3002;</li><li>&#x6DFB;&#x52A0;&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#x6587;&#x6863;&#x3002;</li></ol>]]></content>
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 实验报告 </tag>
            
            <tag> LSTM </tag>
            
            <tag> RNN </tag>
            
            <tag> CTC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>解决Next主题默认CDN太慢问题</title>
      <link href="//posts/734c571b/"/>
      <url>//posts/734c571b/</url>
      <content type="html"><![CDATA[<p>&#x66F4;&#x6362; Valine &#x9ED8;&#x8BA4;CDN&#x5730;&#x5740; <a id="more"></a></p><h1 id="&#x95EE;&#x9898;">&#x95EE;&#x9898;</h1><p>&#x6700;&#x8FD1;&#x535A;&#x5BA2;&#x6253;&#x5F00;&#x5F88;&#x6162;&#xFF0C;&#x7ECF;&#x67E5;&#xFF0C;&#x53D1;&#x73B0;&#x662F;&#x5361;&#x5728;&#x4E86;&#x8FDE;&#x63A5; unpkg.com &#x4E0A;&#xFF0C;&#x8FD9;&#x662F;Valine&#x9ED8;&#x8BA4;&#x7684;CDN&#x5730;&#x5740;(unpkg.com/valine/dist/Valine.min.js)</p><h1 id="&#x89E3;&#x51B3;">&#x89E3;&#x51B3;</h1><p>&#x6362;&#x4E2A;CDN&#xFF0C;&#x5230;<a href="https://www.jsdelivr.com/package/npm/valine" target="_blank" rel="noopener">&#x8FD9;&#x91CC;</a>&#xFF0C;&#x9009;&#x62E9;&#x6700;&#x65B0;&#x7248;&#x672C;&#x7684;Valine&#xFF0C;&#x7136;&#x540E;&#x83B7;&#x53D6;cdn&#x5730;&#x5740;</p><p><img src="/posts/734c571b/get%20CDN.jpg"></p><p>&#x7136;&#x540E;&#x6253;&#x5F00; Next &#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x6700;&#x540E;&#x7684;vendors-&gt;valine&#x91CC;&#x6539;&#x4E3A;&#x65B0;&#x83B7;&#x53D6;&#x7684;CDN</p><p><img src="/posts/734c571b/new%20CDN.jpg"></p><p>&#x5373;&#x53EF;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>人工智能复习笔记</title>
      <link href="//posts/d81a8700/"/>
      <url>//posts/d81a8700/</url>
      <content type="html"><![CDATA[<p>&#x9022;&#x8003;&#x5FC5;&#x8FC7;&#xFF01;&#x80FD;&#x529B;&#x6709;&#x9650;&#xFF0C;&#x96BE;&#x514D;&#x51FA;&#x9519;&#xFF0C;&#x8FD8;&#x8BF7;&#x591A;&#x591A;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#xFF0C;&#x7B14;&#x8005;&#x4F1A;&#x53D1;&#x7EA2;&#x5305;&#x916C;&#x8C22;&#x3002; <a id="more"></a></p><h1 id="&#x7EEA;&#x8BBA;">&#x7EEA;&#x8BBA;</h1><h2 id="ai&#x7684;&#x6D41;&#x6D3E;">AI&#x7684;&#x6D41;&#x6D3E;</h2><p>&#x6211;&#x66F4;&#x503E;&#x5411;&#x4E8E;&#x628A;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x5206;&#x4E94;&#x79CD;</p><ul><li>&#x7B26;&#x53F7;&#x4E3B;&#x4E49;&#x2014;&#x2014;&#x903B;&#x8F91;&#x5B66;&#x3001;&#x54F2;&#x5B66;&#x2014;&#x2014;&#x9006;&#x5411;&#x6F14;&#x7ECE;&#xFF1A;&#x76F8;&#x4FE1;&#x586B;&#x8865;&#x73B0;&#x6709;&#x77E5;&#x8BC6;&#x7684;&#x7A7A;&#x767D;&#x7684;</li><li>&#x8054;&#x7ED3;&#x4E3B;&#x4E49;&#x2014;&#x2014;&#x795E;&#x7ECF;&#x79D1;&#x5B66;&#x2014;&#x2014;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#xFF1A;&#x5E0C;&#x671B;&#x4ECE;&#x5927;&#x8111;&#x8FD0;&#x884C;&#x65B9;&#x5F0F;&#x5F97;&#x5230;&#x542F;&#x53D1;</li><li>&#x8FDB;&#x5316;&#x4E3B;&#x4E49;&#x2014;&#x2014;&#x8FDB;&#x5316;&#x751F;&#x7269;&#x5B66;&#x2014;&#x2014;&#x9057;&#x4F20;&#x7F16;&#x7801;&#xFF1A;&#x9057;&#x4F20;&#x7B97;&#x6CD5;</li><li>&#x8D1D;&#x53F6;&#x65AF;&#x6D3E;&#x2014;&#x2014;&#x7EDF;&#x8BA1;&#x5B66;&#x2014;&#x2014;&#x6982;&#x7387;&#x63A8;&#x7406;</li><li>&#x884C;&#x4E3A;&#x7C7B;&#x63A8;&#x4E3B;&#x4E49;&#x2014;&#x2014;&#x5FC3;&#x7406;&#x5B66;&#x2014;&#x2014;&#x673A;&#x5668;&#x5185;&#x6838;&#xFF08;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#xFF09;</li></ul><h2 id="ai-&#x673A;&#x5668;&#x5B66;&#x4E60;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4E09;&#x8005;&#x4E4B;&#x95F4;&#x7684;&#x5F02;&#x540C;&#x548C;&#x5173;&#x8054;">AI , &#x673A;&#x5668;&#x5B66;&#x4E60;&#xFF0C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4E09;&#x8005;&#x4E4B;&#x95F4;&#x7684;&#x5F02;&#x540C;&#x548C;&#x5173;&#x8054;</h2><p>&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x662F;&#x6307;&#x8BA9;&#x673A;&#x5668;&#x5177;&#x6709;&#x4EBA;&#x7C7B;&#x7684;&#x667A;&#x80FD;&#xFF0C;&#x4E00;&#x822C;&#x8BA4;&#x4E3A;&#x667A;&#x80FD;&#x662F;&#x77E5;&#x8BC6;&#x548C;&#x667A;&#x529B;&#x7684;&#x603B;&#x548C;&#xFF0C;&#x90FD;&#x548C;&#x5927;&#x8111;&#x601D;&#x7EF4;&#x6709;&#x7BA1;&#x3002;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x6709;&#x591A;&#x4E2A;&#x5206;&#x652F;&#xFF0C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x662F;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x3002;</p><p>&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x662F;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x3002;</p><h2 id="&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x5206;&#x7C7B;">&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x5206;&#x7C7B;</h2><p>&#x673A;&#x5668;&#x5B66;&#x4E60;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x8BAD;&#x7EC3;&#x65F6;&#x76D1;&#x7763;&#x7684;&#x91CF;&#x548C;&#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x3002;&#x4E3B;&#x8981;&#x6709;&#x56DB;&#x7C7B;&#xFF1A;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#x3001;&#x975E;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#x3001;&#x534A;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#x548C;&#x5F3A;&#x5316;&#x5B66;&#x4E60;&#x3002;</p><ul><li>&#x76D1;&#x7763;&#x5B66;&#x4E60;&#xFF1A;&#x5229;&#x7528;&#x4E00;&#x7EC4;&#x5DF2;&#x77E5;&#x7C7B;&#x522B;&#x7684;&#x6837;&#x672C;&#x8C03;&#x6574;&#x5206;&#x7C7B;&#x5668;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4F7F;&#x5176;&#x8FBE;&#x5230;&#x6240;&#x8981;&#x6C42;&#x6027;&#x80FD;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x4E3E;&#x4F8B;&#xFF1A;&#x903B;&#x8F91;&#x56DE;&#x5F52;</li><li>&#x975E;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#xFF1A;&#x4ECE;&#x6CA1;&#x6709;&#x6807;&#x8BB0;&#x7684;&#x8F93;&#x5165;&#x6570;&#x636E;&#x7EC4;&#x6210;&#x7684;&#x6570;&#x636E;&#x96C6;&#x4E2D;&#x5F97;&#x51FA;&#x63A8;&#x8BBA;&#x3002;&#x4E3E;&#x4F8B;&#xFF1A;&#x805A;&#x7C7B;&#x7B97;&#x6CD5;</li><li>&#x534A;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#xFF1A;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x6709;&#x6807;&#x7B7E;&#x7684;&#x6570;&#x636E;&#x548C;&#x6CA1;&#x6709;&#x6807;&#x7B7E;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x5B66;&#x4E60;&#x3002;&#x4E3E;&#x4F8B;&#xFF1A;&#x534A;&#x76D1;&#x7763;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A; S3VM</li><li>&#x5F3A;&#x5316;&#x5B66;&#x4E60;&#xFF1A;&#x4E00;&#x4E2A;&#x667A;&#x80FD;&#x4F53;&#x4ECE;&#x4E0E;&#x73AF;&#x5883;&#x7684;&#x4EA4;&#x4E92;&#x4E2D;&#x4E0D;&#x65AD;&#x5B66;&#x4E60;&#x4EE5;&#x5B8C;&#x6210;&#x7279;&#x5B9A;&#x76EE;&#x6807;&#x3002;&#x4E3E;&#x4F8B;&#xFF1A;Q-Learning</li></ul><p>&#x8001;&#x5E08;&#x8FD8;&#x8BF4;&#x4E86;&#x4E00;&#x7C7B;&#xFF1A;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x3002;</p><h2 id="&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x5B9A;&#x4E49;">&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x5B9A;&#x4E49;</h2><p>&#x5BF9;&#x4E8E;&#x67D0;&#x7C7B;&#x4EFB;&#x52A1; T &#x548C;&#x6027;&#x80FD;&#x5EA6;&#x91CF;P&#xFF0C;&#x4E00;&#x4E2A;&#x8BA1;&#x7B97;&#x673A;&#x7A0B;&#x5E8F;&#x88AB;&#x8BA4;&#x4E3A;&#x53EF;&#x4EE5;&#x4ECE;&#x7ECF;&#x9A8C; E &#x4E2D;&#x5B66;&#x4E60;&#x662F;&#x6307;&#xFF0C;&#x901A;&#x8FC7;&#x7ECF;&#x9A8C; E &#x6539;&#x8FDB;&#x540E;&#xFF0C;&#x5B83;&#x5728;&#x4EFB;&#x52A1; T &#x4E0A;&#x7531;&#x6027;&#x80FD;&#x5EA6;&#x91CF; P &#x8861;&#x91CF;&#x7684;&#x6027;&#x80FD;&#x6709;&#x6240;&#x63D0;&#x5347;&#x3002;</p><ul><li>T&#xFF1A;&#x5206;&#x7C7B;&#xFF0C;&#x56DE;&#x5F52;&#xFF0C;&#x8BC6;&#x522B;...</li><li>P&#xFF1A;&#x6700;&#x5E38;&#x7528;&#x7684;&#x6709;&#x51C6;&#x786E;&#x7387;&#xFF0C;&#x53EC;&#x56DE;&#x7387;&#xFF0C;F&#x503C;&#xFF0C;&#x4EA4;&#x53C9;&#x71B5;&#x7B49;&#x3002;&#x6839;&#x636E;&#x4EFB;&#x52A1; T &#x4E0D;&#x540C;&#xFF0C;P&#x4E5F;&#x4E0D;&#x5C3D;&#x76F8;&#x540C;&#x3002;</li><li>E&#xFF1A;&#x6570;&#x636E;&#x96C6;&#x3002;</li></ul><h1 id="&#x6A21;&#x578B;&#x4F18;&#x5316;">&#x6A21;&#x578B;&#x4F18;&#x5316;</h1><h2 id="&#x8BEF;&#x5DEE;&#x5206;&#x89E3;">&#x8BEF;&#x5DEE;&#x5206;&#x89E3;</h2><p>&#x671F;&#x671B;&#x9519;&#x8BEF;&#x53EF;&#x4EE5;&#x5206;&#x89E3;&#x4E3A;<span class="math inline">\(R(f)=bias^2+variance+\epsilon\)</span></p><p>&#x504F;&#x5DEE;bias&#x662F;&#x6307;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x7684;&#x5728;&#x4E0D;&#x540C;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0A;&#x7684;&#x5E73;&#x5747;&#x6027;&#x80FD;&#x548C;&#x6700;&#x4F18;&#x6A21;&#x578B;&#x7684;&#x5DEE;&#x5F02;&#x3002;<span class="math inline">\(bias=E_D[f_D(x)-f^*(x)]\)</span>&#xFF0C;<span class="math inline">\(f^*(x)\)</span>&#x8868;&#x793A;&#x6700;&#x4F18;&#x6A21;&#x578B;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x771F;&#x5B9E;&#x7684;&#x6570;&#x636E;&#x5206;&#x5E03;&#x3002;</p><p>&#x65B9;&#x5DEE;variance&#x662F;&#x6307;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x5728;&#x4E0D;&#x540C;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0A;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x8861;&#x91CF;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x662F;&#x5426;&#x5BB9;&#x6613;&#x8FC7;&#x62DF;&#x5408;&#x3002;<span class="math inline">\(variance=E_D[(f_D(x)-E_D[f_D(x)])^2]\)</span></p><p><span class="math inline">\(\epsilon\)</span>&#x901A;&#x5E38;&#x662F;&#x7531;&#x4E8E;&#x6837;&#x672C;&#x5206;&#x5E03;&#x548C;&#x566A;&#x58F0;&#x5F15;&#x8D77;&#xFF0C;&#x65E0;&#x6CD5;&#x901A;&#x8FC7;&#x4F18;&#x5316;&#x6A21;&#x578B;&#x6765;&#x51CF;&#x5C11;&#x3002;</p><h2 id="&#x6CDB;&#x5316;&#x8BEF;&#x5DEE;">&#x6CDB;&#x5316;&#x8BEF;&#x5DEE;</h2><p>&#x671F;&#x671B;&#x8BEF;&#x5DEE;&#x548C;&#x7ECF;&#x9A8C;&#x8BEF;&#x5DEE;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#x3002;&#x7528;&#x6765;&#x8868;&#x793A;&#x6CDB;&#x5316;&#x6027;&#x80FD;&#x7684;&#x4F18;&#x52A3;&#x3002;&#x8BAD;&#x7EC3;&#x96C6;&#x8D8B;&#x5411;&#x4E8E;&#x65E0;&#x7A77;&#x5927;&#x65F6;&#xFF0C;&#x6CDB;&#x5316;&#x8BEF;&#x5DEE;&#x8D8B;&#x5411;&#x4E8E;0&#x3002;</p><h2 id="&#x8FC7;&#x62DF;&#x5408;&#x4E0E;&#x6B20;&#x62DF;&#x5408;">&#x8FC7;&#x62DF;&#x5408;&#x4E0E;&#x6B20;&#x62DF;&#x5408;</h2><p><strong>&#x8FC7;&#x62DF;&#x5408;</strong>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5047;&#x8BBE;&#x7A7A;&#x95F4; <span class="math inline">\(F\)</span>&#xFF0C;&#x4E00;&#x4E2A;&#x5047;&#x8BBE; <span class="math inline">\(f\)</span> &#x5C5E;&#x4E8E; <span class="math inline">\(F\)</span>&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x5176;&#x4ED6;&#x7684;&#x5047;&#x8BBE; <span class="math inline">\(f&apos;\)</span> &#x4E5F;&#x5C5E;&#x4E8E; <span class="math inline">\(F\)</span>, &#x4F7F;&#x5F97;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0A; <span class="math inline">\(f\)</span> &#x7684;&#x635F;&#x5931;&#x6BD4; <span class="math inline">\(f&apos;\)</span> &#x5C0F;&#xFF0C;&#x4F46;&#x5728;&#x6574;&#x4E2A;&#x6837;&#x672C;&#x7A7A;&#x95F4;&#x4E0A; <span class="math inline">\(&apos;\)</span> &#x6BD4; <span class="math inline">\(f\)</span> &#x7684;&#x635F;&#x5931;&#x5C0F;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8BF4;&#x5047;&#x8BBE; <span class="math inline">\(f\)</span> &#x8FC7;&#x5EA6;&#x62DF;&#x5408;&#x8BAD;&#x7EC3;&#x6570;&#x636E;[Mitchell, 1997]&#x3002;</p><p>&#x8FC7;&#x62DF;&#x5408;&#xFF1A;&#x4F4E;bias error, &#x9AD8;variance error&#x3002;&#x6B20;&#x62DF;&#x5408;&#xFF1A;&#x9AD8;bias error, &#x4F4E; variance error&#x3002;</p><p>&#x89E3;&#x51B3;&#x8FC7;&#x62DF;&#x5408;&#xFF1A;</p><ul><li>More Data<ol type="1"><li>&#x589E;&#x52A0;&#x8BAD;&#x7EC3;&#x6570;&#x636E;</li><li>&#x6570;&#x636E;&#x589E;&#x5F3A;&#xFF0C;&#x6BD4;&#x5982;&#x56FE;&#x50CF;&#x7684;&#x5E73;&#x79FB;&#x3001;&#x65CB;&#x8F6C;&#x3002;</li></ol></li><li>&#x4FEE;&#x6539;&#x6A21;&#x578B;<ol type="1"><li>&#x51CF;&#x5C11;&#x7F51;&#x7EDC;&#x7684;&#x5C42;&#x6570;&#xFF0C;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x51CF;&#x5C11;&#x7279;&#x5F81;&#x503C;&#x7B49;</li><li>&#x6B63;&#x5219;&#x5316;&#xFF0C;&#x52A0;&#x5927;&#x6B63;&#x5219;&#x5316;&#x53C2;&#x6570;</li><li>&#x52A0;&#x566A;&#x58F0;</li></ol></li><li>&#x96C6;&#x6210;&#x5B66;&#x4E60;&#xFF1A;&#x901A;&#x8FC7;&#x67D0;&#x79CD;&#x7B56;&#x7565;&#x5C06;&#x591A;&#x4E2A;&#x6A21;&#x578B;&#x96C6;&#x6210;&#x8D77;&#x6765;&#xFF0C;&#x901A;&#x8FC7;&#x7FA4;&#x4F53;&#x51B3;&#x7B56;&#x6765;&#x63D0;&#x9AD8;&#x51B3;&#x7B56;&#x51C6;&#x786E;&#x7387;&#x3002;<ol type="1"><li>Boosting&#xFF1A;AdaBoosting</li><li>Bagging&#xFF1A;&#x968F;&#x673A;&#x68EE;&#x6797;</li></ol></li><li>Dropout&#xFF1A;&#x5728;&#x67D0;&#x79CD;&#x7A0B;&#x5EA6;&#x4E0A;&#x8BB2;&#x4E5F;&#x662F;&#x96C6;&#x6210;&#x5B66;&#x4E60;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x3002;</li><li>Early Stopping&#xFF0C;&#x8981;&#x5212;&#x5206;&#x51FA;&#x4E00;&#x90E8;&#x5206;&#x4F5C;&#x4E3A;&#x9A8C;&#x8BC1;&#x96C6;&#x3002;</li><li>&#x8D1D;&#x53F6;&#x65AF;&#x65B9;&#x6CD5;</li><li>&#x4EA4;&#x53C9;&#x9A8C;&#x8BC1;&#xFF1A;&#x4EA4;&#x53C9;&#x9A8C;&#x8BC1;&#x76F8;&#x5BF9;&#x4E8E;&#x56FA;&#x5B9A;&#x6D4B;&#x8BD5;&#x96C6;&#x6765;&#x8BF4;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x5168;&#x6837;&#x672C;&#x6765;&#x505A;&#x6D4B;&#x8BD5;&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x6D4B;&#x8BD5;&#x96C6;&#x7684;&#x591A;&#x6837;&#x6027;&#xFF0C;&#x5728;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x53EF;&#x4EE5;&#x8BF4;&#x9632;&#x6B62;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x3002;</li></ul><p>&#x89E3;&#x51B3;&#x6B20;&#x62DF;&#x5408;&#xFF1A;</p><ul><li>&#x8003;&#x8651;&#x66F4;&#x591A;&#x7684;&#x7279;&#x5F81;</li><li>&#x51CF;&#x5C11;&#x6B63;&#x5219;&#x5316;&#x53C2;&#x6570;</li><li>&#x8003;&#x8651;&#x66F4;&#x590D;&#x6742;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x6BD4;&#x5982;&#x589E;&#x5927;&#x7F51;&#x7EDC;&#x5C42;&#x6570;&#xFF0C;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x4E2A;&#x6570;</li><li>&#x6539;&#x6362;&#x6A21;&#x578B;&#xFF1A;&#x5224;&#x522B;&#x5F0F;&#x6A21;&#x578B;&#x6539;&#x6362;&#x751F;&#x6210;&#x5F0F;&#x6A21;&#x578B;&#x7B49;&#x3002;</li><li>Boosting</li></ul><p>boosting&#x4E3B;&#x8981;&#x89E3;&#x51B3;bias&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x80FD;&#x4F1A;&#x5F15;&#x5165;&#x989D;&#x5916;variance&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x7EC8;&#x4E5F;&#x8BB8;&#x4F1A;&#x5BFC;&#x81F4;variance&#x589E;&#x52A0;&#x3002;<br>bagging&#x4E3B;&#x8981;&#x89E3;&#x51B3;variance&#x3002;</p><h2 id="&#x4E09;&#x7C7B;&#x6570;&#x636E;&#x96C6;">&#x4E09;&#x7C7B;&#x6570;&#x636E;&#x96C6;</h2><ul><li>&#x8BAD;&#x7EC3;&#x96C6;&#xFF1A;&#x7528;&#x4E8E;&#x5B66;&#x4E60;&#x53C2;&#x6570;</li><li>&#x5F00;&#x53D1;/&#x9A8C;&#x8BC1;&#x96C6;&#xFF1A;&#x7528;&#x4E8E;&#x6311;&#x9009;&#x8D85;&#x53C2;&#x6570;</li><li>&#x6D4B;&#x8BD5;&#x96C6;&#xFF1A;&#x7528;&#x4E8E;&#x4F30;&#x8BA1;&#x6CDB;&#x5316;&#x8BEF;&#x5DEE;</li></ul><h2 id="k&#x6298;&#x4EA4;&#x53C9;&#x9A8C;&#x8BC1;">K&#x6298;&#x4EA4;&#x53C9;&#x9A8C;&#x8BC1;</h2><p>&#x5C06;&#x6570;&#x636E;&#x96C6;D&#x5212;&#x5206;&#x6210;k&#x4E2A;&#x5927;&#x5C0F;&#x76F8;&#x4F3C;&#x7684;&#x4E92;&#x65A5;&#x5B50;&#x96C6;&#xFF0C;&#x6BCF;&#x6B21;&#x7528;k-1&#x4E2A;&#x5B50;&#x96C6;&#x4F5C;&#x4E3A;&#x8BAD;&#x7EC3;&#x96C6;&#xFF0C;&#x4F59;&#x4E0B;&#x7684;&#x5B50;&#x96C6;&#x505A;&#x6D4B;&#x8BD5;&#x96C6;&#xFF0C;&#x6700;&#x7EC8;&#x8FD4;&#x56DE;k&#x4E2A;&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;&#x7684;&#x5E73;&#x5747;&#x503C;&#x3002;&#x4EA4;&#x53C9;&#x9A8C;&#x8BC1;&#x6CD5;&#x8BC4;&#x4F30;&#x7ED3;&#x679C;&#x7684;&#x7A33;&#x5B9A;&#x6027;&#x548C;&#x4FDD;&#x771F;&#x6027;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x53D6;&#x51B3;&#x4E8E;k&#x7684;&#x53D6;&#x503C;&#x3002;&#x9002;&#x7528;&#x4E8E;&#x6570;&#x636E;&#x96C6;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x5927;&#x65F6;&#x3002;</p><h2 id="&#x53C2;&#x6570;&#x548C;&#x8D85;&#x53C2;&#x6570;">&#x53C2;&#x6570;&#x548C;&#x8D85;&#x53C2;&#x6570;</h2><p>&#x5728;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E2D;&#xFF0C;&#x4F18;&#x5316;&#x53C8;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x53C2;&#x6570;&#x4F18;&#x5316;&#x548C;&#x8D85;&#x53C2;&#x6570;&#x4F18;&#x5316;&#x3002;&#x6A21;&#x578B;f(x, &#x3B8;)&#x4E2D;&#x7684; &#x3B8; &#x79F0;&#x4E3A;&#x6A21;&#x578B;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F18;&#x5316;&#x7B97;&#x6CD5;&#x8FDB;&#x884C;&#x5B66;&#x4E60;&#x3002;&#x9664;&#x4E86;&#x53EF;&#x5B66;&#x4E60;&#x7684;&#x53C2;&#x6570; &#x3B8; &#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x7C7B;&#x53C2;&#x6570;&#x662F;&#x7528;&#x6765;&#x5B9A;&#x4E49;&#x6A21;&#x578B;&#x7ED3;&#x6784;&#x6216;&#x4F18;&#x5316;&#x7B56;&#x7565;&#x7684;&#xFF0C;&#x8FD9;&#x7C7B;&#x53C2;&#x6570;&#x53EB;&#x505A;&#x8D85;&#x53C2;&#x6570;&#xFF08;hyper-parameter&#xFF09;&#x3002;</p><p>&#x5E38;&#x89C1;&#x7684;&#x8D85;&#x53C2;&#x6570;&#x5305;&#x62EC;&#xFF1A;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x6B65;&#x957F;&#xFF0C;&#x6B63;&#x5219;&#x9879;&#x7684;&#x7CFB;&#x6570;&#xFF0C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5C42;&#x6570;&#x7B49;&#x3002;</p><p>&#x4E24;&#x8005;&#x7684;&#x672C;&#x8D28;&#x533A;&#x522B;&#x662F;&#x662F;&#x5426;&#x4EBA;&#x4E3A;&#x8BBE;&#x5B9A;&#x3002;</p><h2 id="&#x6B63;&#x5219;&#x5316;">&#x6B63;&#x5219;&#x5316;</h2><p>L1-Norm&#xFF1A;&#x53C2;&#x6570;&#x7EDD;&#x5BF9;&#x503C;&#x4E4B;&#x548C;&#x3002;<span class="math inline">\(L&apos;(\theta)=L(\theta)+\lambda||\theta||_1\)</span>&#xFF0C;&#x5176;&#x4E2D;<span class="math inline">\(||\theta||_1=\sum_{i=1}^n|\theta_i|\)</span></p><p>&#x4F5C;&#x7528;&#xFF1A;&#x7279;&#x5F81;&#x7B5B;&#x9009;&#xFF0C;&#x628A;&#x5F97;&#x6700;&#x7EC8;&#x7684;&#x53C2;&#x6570;&#x4E3A;&#x7A00;&#x758F;&#x6027;&#x5411;&#x91CF;&#x3002;</p><p>L2-Norm&#xFF1A;&#x53C2;&#x6570;&#x5E73;&#x65B9;&#x7684;&#x548C;&#x3002;<span class="math inline">\(L&apos;(\theta)=L(\theta)+\lambda||\theta||_2\)</span>&#xFF0C;&#x5176;&#x4E2D;<span class="math inline">\(||\theta||_2=\sum_{i=1}^n\theta_i^2\)</span></p><p>&#x4F5C;&#x7528;&#xFF1A;&#x901A;&#x8FC7;&#x9650;&#x5236;&#x6A21;&#x578B;&#x590D;&#x6742;&#x5EA6; &#xFF0C;&#x4ECE;&#x800C;&#x907F;&#x514D;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x63D0;&#x9AD8;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x3002;</p><p>Elastic Net: (L1 + L2)&#xFF1A;<span class="math inline">\(L&apos;(\theta) = L(\theta) + \lambda\cdot[\rho \parallel\theta\parallel_1 + (1-\rho)\cdot\parallel\theta\parallel_2]\)</span></p><h2 id="&#x52A0;&#x5FEB;&#x5B66;&#x4E60;">&#x52A0;&#x5FEB;&#x5B66;&#x4E60;</h2><h3 id="feature-scalingnormalization">Feature Scaling/Normalization</h3><ul><li>Rescaling (min-max normalization) &#x518D;&#x7F29;&#x653E; <span class="math display">\[ x&apos;=\frac {x-min(x)} {max(x)-min(x)} \]</span></li><li>Mean normalization &#x5747;&#x503C;&#x5F52;&#x4E00;&#x5316; <span class="math display">\[x&apos;=\frac {x-average(x)} {max(x)-min(x)} \]</span></li><li>Standardization &#x6807;&#x51C6;&#x5316;<br><span class="math display">\[x&apos;=\frac {x-average(x)} \sigma\]</span>&#x5176;&#x4E2D;<span class="math inline">\(\sigma\)</span>&#x662F;&#x6807;&#x51C6;&#x5DEE;</li></ul><h3 id="variants-of-gradient-descent-&#x4E0D;&#x540C;&#x79CD;&#x7C7B;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;">Variants of Gradient Descent &#x4E0D;&#x540C;&#x79CD;&#x7C7B;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;</h3><h4 id="stochastic-gradient-descent">Stochastic Gradient Descent</h4><p>SGD&#x53C8;&#x540D;&#x968F;&#x673A;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x3002;&#x6BCF;&#x6B21;&#x53EA;&#x7528;&#x4E00;&#x4E2A;&#x5B66;&#x4E60;&#x6570;&#x636E;&#x6765;&#x66F4;&#x65B0;&#x68AF;&#x5EA6;&#x3002;Use 1 example in each iteration&#x3002;<br>&#x4F18;&#x70B9;&#xFF1A;&#x5FEB;&#x3002;BGD&#x66F4;&#x65B0;&#x4E00;&#x4E2A;&#x6B21;&#x7684;&#x65F6;&#x5019;&#xFF0C;SGD&#x80FD;&#x66F4;&#x65B0;&#x7684;&#x6B21;&#x6570;=Batch_size&#x3002;<br>&#x7F3A;&#x70B9;&#xFF1A;&#x5F15;&#x5165;&#x4E86;&#x968F;&#x673A;&#x566A;&#x58F0;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x9707;&#x8361;&#x7684;&#x73B0;&#x8C61;&#x3002;&#x5F53;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x975E;&#x51F8;&#x65F6;&#xFF0C;&#x53CD;&#x800C;&#x53EF;&#x4EE5;&#x4F7F;&#x5176;&#x9003;&#x79BB;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x70B9;&#x3002;&#x65E0;&#x6CD5;&#x5145;&#x5206;&#x5229;&#x7528;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x5E76;&#x884C;&#x80FD;&#x529B;&#x3002;</p><h4 id="batch-gradient-descent">Batch Gradient Descent</h4><p>&#x6279;&#x91CF;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x5728;&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x65F6;&#x9700;&#x8981;&#x8BA1;&#x7B97;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x4E0A;&#x635F;&#x5931;&#x51FD;&#x6570;&#x7684;&#x68AF;&#x5EA6;&#x5E76;&#x6C42;&#x548C;&#x3002;Use all examples in each iteration&#x3002;<br>&#x4F18;&#x70B9;&#xFF1A;&#x80FD;&#x4FDD;&#x8BC1;&#x671D;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x65B9;&#x5411;&#x53BB;&#x4F18;&#x5316;&#xFF0C;&#x6613;&#x4E8E;&#x5E76;&#x884C;&#x5B9E;&#x73B0;&#x3002;<br>&#x7F3A;&#x70B9;&#xFF1A;&#x6837;&#x672C;&#x6570;&#x5F88;&#x591A;&#x65F6;&#xFF0C;&#x4F1A;&#x5F88;&#x6162;&#x3002;</p><h4 id="mini-batch-gradient-descent">Mini-batch Gradient Descent</h4><p>&#x5C0F;&#x6279;&#x91CF;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;SGD&#x548C;BGD&#x7684;&#x6298;&#x4E2D;&#x3002;&#x76EE;&#x524D;&#x6700;&#x5E38;&#x7528;&#x3002;Use b examples in each iteration&#x3002;<br>&#x4F18;&#x70B9;&#xFF1A;&#x6536;&#x655B;&#x5FEB;&#xFF0C;&#x8BA1;&#x7B97;&#x5F00;&#x9500;&#x5C0F;&#x3002;</p><h3 id="&#x6539;&#x53D8;&#x5B66;&#x4E60;&#x7387;">&#x6539;&#x53D8;&#x5B66;&#x4E60;&#x7387;</h3><p>&#x592A;&#x5C0F;&#x5219;&#x6536;&#x655B;&#x6162;&#xFF0C;&#x592A;&#x5927;&#x5219;&#x4F1A;&#x9519;&#x8FC7;&#x6700;&#x4F73;&#x70B9;/&#x9707;&#x8361;&#x3002;</p><h2 id="&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x65B9;&#x6CD5;">&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x65B9;&#x6CD5;</h2><h3 id="vanilla-gradient-descent">Vanilla Gradient Descent</h3><p>&#x4F20;&#x7EDF;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x65B9;&#x6CD5;&#x3002; <span class="math display">\[\theta^{t+1}=\theta^t-\eta\nabla L(\theta^t)\]</span></p><h3 id="adagrad">AdaGrad</h3><p>AdaGrad&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x65F6;&#x81EA;&#x9002;&#x5E94;&#x5730;&#x8C03;&#x6574;&#x6BCF;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x5B66;&#x4E60;&#x7387;&#x3002; &#x5728;&#x7B2C;t&#x8FED;&#x4EE3;&#x65F6;&#xFF0C;&#x5148;&#x8BA1;&#x7B97;&#x6BCF;&#x4E2A;&#x53C2;&#x6570;&#x68AF;&#x5EA6;&#x5E73;&#x65B9;&#x7684;&#x7D2F;&#x8BA1;&#x503C;&#xFF0C;<span class="math inline">\(g_i\)</span>&#x662F;&#x7B2C;<span class="math inline">\(i\)</span>&#x6B21;&#x8FED;&#x4EE3;&#x65F6;&#x7684;&#x68AF;&#x5EA6;&#x3002; <span class="math display">\[\theta^{t+1}=\theta^t-\frac \alpha {\sqrt{\sum ^t_{i=1}g_i^2+\epsilon}} g_t\]</span> &#x5176;&#x4E2D;<span class="math inline">\(\alpha\)</span>&#x662F;&#x521D;&#x59CB;&#x7684;&#x5B66;&#x4E60;&#x7387;&#xFF0C;<span class="math inline">\(\epsilon\)</span>&#x662F;&#x4E3A;&#x4E86;&#x4FDD;&#x6301;&#x6570;&#x503C;&#x7A33;&#x5B9A;&#x6027;&#x800C;&#x8BBE;&#x7F6E;&#x7684;&#x975E;&#x5E38;&#x5C0F;&#x7684;&#x5E38;&#x6570;&#x3002; Adagrad&#x7B97;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;&#x662F;&#x5728;&#x7ECF;&#x8FC7;&#x4E00;&#x5B9A;&#x6B21;&#x6570;&#x7684;&#x8FED;&#x4EE3;&#x4F9D;&#x7136;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x6700;&#x4F18;&#x70B9;&#x65F6;&#xFF0C;&#x7531;&#x4E8E;&#x8FD9;&#x65F6;&#x7684;&#x5B66;&#x4E60;&#x7387;&#x5DF2;&#x7ECF;&#x975E;&#x5E38;&#x5C0F;&#xFF0C;&#x5F88;&#x96BE;&#x518D;&#x7EE7;&#x7EED;&#x627E;&#x5230;&#x6700;&#x4F18;&#x70B9;&#x3002;</p><h3 id="rmsprop">RMSProp</h3><p><span class="math display">\[w^{t+1}=w^t-\frac \eta {\sigma^t}g^t      \\\sigma^t=\sqrt{\alpha(\sigma^{t-1})^2+(1-\alpha)(g^t)^2}\]</span> <span class="math inline">\(\alpha\)</span>&#x9700;&#x8981;&#x4E00;&#x5F00;&#x59CB;&#x8BBE;&#x5B9A;&#xFF0C;&#x8868;&#x793A;&#x8870;&#x51CF;&#x7CFB;&#x6570;&#x3002;<span class="math inline">\(\sigma^0=g^0\)</span></p><h3 id="sgd-with-momentum-sgm">SGD with Momentum &#xFF08;SGM&#xFF09;</h3><p>&#x52A8;&#x91CF;&#x6CD5;&#xFF0C;&#x7528;&#x4E4B;&#x524D;&#x79EF;&#x7D2F;&#x52A8;&#x91CF;&#x6765;&#x66FF;&#x4EE3;&#x771F;&#x6B63;&#x7684;&#x68AF;&#x5EA6;&#x3002;&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x68AF;&#x5EA6;&#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x52A0;&#x901F;&#x5EA6;&#x3002; <span class="math display">\[v^0=0\\v^t=\lambda v^{t-1}-\eta\nabla L(\theta^{t-1})\\\theta^t=\theta^{t-1}+v^t\]</span> &#x5176;&#x4E2D;<span class="math inline">\(\lambda\)</span>&#x662F;&#x52A8;&#x91CF;&#x56E0;&#x5B50;&#xFF0C;<span class="math inline">\(\eta\)</span>&#x662F;&#x5B66;&#x4E60;&#x7387;&#x3002;</p><h3 id="sgd-with-nesterov-nag">SGD with Nesterov (NAG)</h3><p>&#x63A8;&#x5BFC;&#xFF1A;&#x7531;&#x524D;&#x9762;&#x7684;SGM&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x5728;&#x8FDB;&#x884C;<span class="math inline">\(\theta^t=\theta^{t-1}+v^t\)</span>&#x65F6;&#xFF0C;&#x628A;&#x4E24;&#x4E2A;&#x5206;&#x91CF;&#x52A0;&#x8D77;&#x6765;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x8003;&#x8651;&#x5148;&#x8FDB;&#x884C;<span class="math inline">\(\lambda v^{t-1}\)</span>&#x7684;&#x66F4;&#x65B0;&#xFF0C;&#x518D;&#x7528;&#x65B0;&#x7684;<span class="math inline">\(\theta\)</span>&#x8BA1;&#x7B97;&#x68AF;&#x5EA6;&#x3002;<br>&#x76F4;&#x63A5;&#x7ED9;&#x516C;&#x5F0F;&#xFF1A; <span class="math display">\[v^t=\lambda v^{t-1}-\eta\nabla L(\theta^{t-1}+\lambda v^{i-1}) \\\theta^t=\theta^{t-1}+v^t\]</span></p><h1 id="&#x5206;&#x7C7B;">&#x5206;&#x7C7B;</h1><h2 id="&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x7528;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x89E3;&#x51B3;&#x5206;&#x7C7B;&#x95EE;&#x9898;">&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x7528;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x89E3;&#x51B3;&#x5206;&#x7C7B;&#x95EE;&#x9898;</h2><p>&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x89E3;&#x51B3;&#x4E8C;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x65E0;&#x6CD5;&#x89E3;&#x51B3;&#x591A;&#x5206;&#x7C7B;&#x7684;&#x95EE;&#x9898;&#x3002;&#x539F;&#x56E0;&#x662F;&#xFF1A;&#x9700;&#x8981;&#x4EBA;&#x4E3A;&#x7684;&#x5212;&#x5B9A;&#x533A;&#x95F4;&#xFF0C;&#x5F15;&#x5165;&#x8BEF;&#x5DEE;&#x3002;&#x5728;&#x635F;&#x5931;&#x51FD;&#x6570;&#x4E0A;&#xFF0C;MSE&#x65E0;&#x6CD5;&#x5F88;&#x597D;&#x5730;&#x8BC4;&#x4F30;&#x6A21;&#x578B;&#x3002;</p><p>&#x4E3E;&#x4F8B;&#xFF1A;&#x5047;&#x5982;&#x6709;5&#x5143;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#xFF0C;class0~class4&#xFF0C;&#x5982;&#x679C;&#x6B63;&#x786E;&#x5206;&#x7C7B;&#x662F;class4,&#x4F46;&#x662F;&#x9884;&#x6D4B;&#x5230;&#x4E86;class1&#xFF0C;&#x548C;&#x9884;&#x6D4B;&#x5230;&#x4E86;class3&#x3002;&#x6839;&#x636E;MSE&#xFF0C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x8FD9;&#x5C31;&#x65E0;&#x6CD5;&#x5F88;&#x597D;&#x5730;&#x533A;&#x5206;&#x4E86;&#x3002;</p><h2 id="&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x51FD;&#x6570;&#x800C;&#x4E0D;&#x7528;&#x5747;&#x65B9;&#x5DEE;&#x635F;&#x5931;&#x51FD;&#x6570;">&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x51FD;&#x6570;&#x800C;&#x4E0D;&#x7528;&#x5747;&#x65B9;&#x5DEE;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1F;</h2><p>&#x5982;&#x679C;&#x7528;&#x5747;&#x65B9;&#x5DEE;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF0C;&#x5728;too correct &#x548C;too wrong &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x68AF;&#x5EA6;&#x592A;&#x5C0F;&#x3002; <span class="math display">\[f_{w,b}(x)=\sigma(\sum_iw_ix_i+b) \\L(f)=\frac1 2\sum_n(f_{w,b}(x^n)-\hat y^n)^2 \\\nabla L(\theta)=(f_{w,b}(x)-\hat y)f_{w,b}(x)(1-f_{w,b}(x))x_i\]</span> &#x6240;&#x4EE5;&#x79BB;&#x76EE;&#x6807;&#x5F88;&#x8FDC;&#x548C;&#x79BB;&#x76EE;&#x6807;&#x5F88;&#x8FD1;&#x7684;&#x65F6;&#x5019;&#xFF0C;<span class="math inline">\(\frac{\partial L}{w_i}=0\)</span>&#x5BFC;&#x81F4;&#x66F4;&#x65B0;&#x5F88;&#x6162;&#x3002;</p><h2 id="&#x7EA7;&#x8054;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x6A21;&#x578B;">&#x7EA7;&#x8054;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x6A21;&#x578B;</h2><p>&#x591A;&#x4E2A;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x8FDB;&#x884C;&#x7EA7;&#x8054;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x7279;&#x5F81;&#x8F6C;&#x6362;&#x3002;&#x53EF;&#x4EE5;&#x540E;&#x9762;&#x518D;&#x8DDF;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x3002; &#x7EA7;&#x8054;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x662F;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x96CF;&#x5F62;&#x3002;</p><h2 id="&#x4EA4;&#x53C9;&#x71B5;&#x548C;&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x51FD;&#x6570;">&#x4EA4;&#x53C9;&#x71B5;&#x548C;&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x51FD;&#x6570;</h2><p>&#x4EA4;&#x53C9;&#x71B5; <span class="math display">\[H(p,q)=-\sum_xp(x)log\ q(x)\]</span> &#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x51FD;&#x6570; <span class="math display">\[L(\theta)=\frac 1NH(p,q)\]</span> &#x4EE5;&#x4E8C;&#x5143;&#x5206;&#x7C7B;&#x4E3A;&#x4F8B;&#x3002;&#x5206;&#x4E3A;Class0&#x548C;Class1&#xFF0C;&#x5982;&#x679C;&#x662F;Class0&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x6807;&#x7B7E;&#x662F;[1,0]&#xFF0C;&#x5982;&#x679C;&#x662F;CLass1&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;[0,1]&#x3002;&#x73B0;&#x6709;&#x9884;&#x6D4B;&#x8BA4;&#x4E3A;&#x4ED6;&#x662F;Class0&#x7684;&#x6982;&#x7387;&#x65F6;f(x)&#xFF0C;&#x5219;&#x6709;&#x6807;&#x7B7E;[f(x)&#xFF0C;1-f(x)]&#xFF0C;&#x5982;&#x679C;&#x771F;&#x5B9E;&#x503C;&#x662F;[1,0]&#x3002;&#x5219;&#x4ED6;&#x4FE9;&#x7684;&#x4EA4;&#x53C9;&#x71B5;&#x662F;1*log f(x)+0*log(1-f(x))&#x3002;&#x4E8E;&#x662F;&#x9488;&#x5BF9;<strong>&#x4F2F;&#x52AA;&#x5229;&#x5206;&#x5E03;&#xFF0C;&#x5373;0-1&#x4E8C;&#x9879;&#x5206;&#x5E03;</strong>&#xFF0C;&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F; <span class="math display">\[l(f(x^{(n)}),\hat y^{(n)})=&#x2212;\frac 1 N\sum[\hat y^{(n)}logf(x^{(n)})+(1&#x2212;\hat y^{(n)})log(1&#x2212;f(x^{(n)}))]\]</span> <span class="math inline">\(log\)</span>&#x7684;&#x5E95;&#x6570;&#x4E3A;2&#xFF0C;e&#xFF0C;10&#x5747;&#x53EF;&#x3002;&#x6839;&#x636E;&#x5E95;&#x6570;&#x4E0D;&#x540C;&#xFF0C;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x7684;&#x5355;&#x4F4D;&#x4E0D;&#x540C;&#xFF0C;&#x4F46;&#x662F;&#x90FD;&#x8868;&#x8FBE;&#x8BEF;&#x5DEE;&#x7684;&#x76F8;&#x5BF9;&#x5927;&#x5C0F;&#x3002;&#x5DEE;&#x4E86;&#x4E00;&#x4E2A;&#x5E38;&#x6570;&#x9879;&#x7CFB;&#x6570;&#x800C;&#x5DF2;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6362;&#x5E95;&#x516C;&#x5F0F;&#x8BC1;&#x660E;&#x3002;</p><p>&#x4E3E;&#x4E2A;&#x6817;&#x5B50;&#xFF1A;<br>&#x5434;&#x4EA6;&#x51E1;&#x66FE;&#x5531;&#x8FC7;&#xFF0C;&#x4F60;&#x770B;&#x8FD9;&#x4E2A;&#x9762;&#x5B83;&#x53C8;&#x957F;&#x53C8;&#x5BBD;&#xFF0C;&#x5C31;&#x50CF;&#x8FD9;&#x4E2A;&#x7897;&#x5B83;&#x53C8;&#x5927;&#x53C8;&#x5706;&#x3002;&#x90A3;&#x4E48;&#x5BF9;&#x4E8E;&#x9762;&#xFF0C;&#x4ED6;&#x7684;Label=&#x3010;1,1,0,0&#x3011;&#xFF0C;&#x5BF9;&#x4E8E;&#x7897;&#xFF0C;Label=&#x3010;0,0,1,1&#x3011;&#xFF0C;&#x73B0;&#x5728;&#x6709;&#x4E00;&#x4E2A;batch_size=2&#x7684;&#x6D4B;&#x8BD5;&#x96C6;&#xFF0C;&#x5BF9;&#x4E00;&#x4E2A;&#x9762;&#x7684;&#x9884;&#x6D4B;&#x7684;&#x7ED3;&#x679C;&#x4E3A;&#x3010;1,0.1,1,0.1&#x3011;&#xFF0C;&#x5BF9;&#x4E00;&#x4E2A;&#x7897;&#x7684;&#x9884;&#x6D4B;&#x503C;&#x662F;&#x3010;1,1,1,0.1&#x3011;&#xFF0C;&#x5219;&#x4EE5;&#x4EA4;&#x53C9;&#x71B5;&#x4F5C;&#x4E3A;&#x635F;&#x5931;&#x51FD;&#x6570;&#x7684;&#x8BDD;&#xFF0C;&#x8FD9;&#x4E2A;&#x635F;&#x5931;&#x51FD;&#x6570;&#x7684;&#x503C;&#x662F;&#x591A;&#x5C11;&#xFF1F;</p><p>&#x5BF9;&#x4E8E;&#x9762;&#xFF0C;&#x635F;&#x5931;&#x503C;&#x662F;&#xFF1A;<span class="math inline">\(-(1*log1+1*log0.1+0*log1+0*log0.1)\)</span><br>&#x5BF9;&#x4E8E;&#x7897;&#xFF0C;&#x635F;&#x5931;&#x503C;&#x662F;&#xFF1A;<span class="math inline">\(-(0*log1+0*log1+1*log1+1*log0.1)\)</span><br>&#x603B;&#x635F;&#x5931;&#x503C;=&#x9762;+&#x7897;</p><p>&#x6709;&#x4E2A;&#x5730;&#x65B9;&#x9700;&#x8981;&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#xFF0C;&#x5982;&#x679C;&#x9884;&#x6D4B;&#x7684;&#x503C;&#x4E3A;&#x3010;1,1,1,1&#x3011;&#xFF0C;&#x90A3;&#x5C82;&#x4E0D;&#x662F;&#x4EA4;&#x53C9;&#x71B5;&#x4E3A;0&#xFF1F;<br>&#x662F;&#x7684;&#x3002;&#x4F46;&#x662F;&#x4E00;&#x822C;&#x4F1A;&#x52A0;&#x4E0A;&#x4E00;&#x4E2A;&#x7EA6;&#x675F;&#x9879;&#xFF0C;&#x6BD4;&#x5982;&#x8BA9;4&#x4E2A;&#x503C;&#x52A0;&#x8D77;&#x6765;&#xFF0C;&#x6700;&#x5927;&#x4E0D;&#x5F97;&#x8D85;&#x8FC7;2&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x5206;&#x7C7B;&#x6B63;&#x786E;&#x7684;&#x6982;&#x7387;&#x8D8A;&#x9AD8;&#xFF0C;&#x4EA4;&#x53C9;&#x71B5;&#x8D8A;&#x5C0F;&#xFF0C;&#x635F;&#x5931;&#x503C;&#x8D8A;&#x5C0F;&#x3002; ## SoftMax <span class="math display">\[softmax(x_i)=\frac {e^{x_i}}{\sum^K_{k=1} e^{x_i}}\]</span></p><h1 id="&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;">&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;</h1><h2 id="&#x673A;&#x5668;&#x5B66;&#x4E60;&#x548C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4E09;&#x90E8;&#x66F2;">&#x673A;&#x5668;&#x5B66;&#x4E60;&#x548C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4E09;&#x90E8;&#x66F2;</h2><p>&#x673A;&#x5668;&#x5B66;&#x4E60;</p><ul><li>&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x6A21;&#x578B;</li><li>&#x7531;Loss &#x51FD;&#x6570;&#x8BC4;&#x4F30;&#x6027;&#x80FD;&#xFF08;&#x5236;&#x5B9A;&#x8BC4;&#x4EF7;&#x6307;&#x6807;&#xFF09;</li><li>&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6700;&#x597D;&#x7684;&#x51FD;&#x6570;</li></ul><p>&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x4E09;&#x90E8;&#x66F2;&#xFF0C;&#x5373;&#x628A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x7B2C;&#x4E00;&#x6B65;&#x6539;&#x4E3A;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;network structure</p><h2 id="&#x53CD;&#x5411;&#x4F20;&#x64AD;">&#x53CD;&#x5411;&#x4F20;&#x64AD;</h2><h3 id="forward-pass">Forward Pass</h3><p>&#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x6BCF;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x4F5C;&#x4E3A;&#x4E0B;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x5373;<span class="math inline">\(a=\frac {\partial z}{\partial w}\)</span> &#x7528;&#x4E8E;&#x8BA1;&#x7B97;Loss&#x3002; &#x7528;&#x4E8E;&#x9884;&#x6D4B;&#x8F93;&#x51FA;&#xFF08;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x8BA1;&#x7B97;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#xFF09;</p><h3 id="backward-pass">Backward Pass</h3><p>&#x7528;&#x4E8E;&#x5BF9;&#x6BCF;&#x4E00;&#x5C42;&#x8BA1;&#x7B97;<span class="math inline">\(\frac{\partial l}{\partial w}\)</span>&#xFF0C;&#x6765;&#x8BA1;&#x7B97;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x3002;<br>&#x5BF9;&#x4E8E;&#x8F93;&#x51FA;&#x5C42;&#xFF0C;&#x6839;&#x636E;&#x8F93;&#x51FA;&#xFF0C;&#x7531;&#x94FE;&#x5F0F;&#x6CD5;&#x5219;&#x76F4;&#x63A5;&#x8BA1;&#x7B97;&#x3002;<br>&#x5BF9;&#x4E8E;&#x975E;&#x8F93;&#x51FA;&#x5C42;&#xFF0C;&#x6839;&#x636E;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x6765;&#x7684;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#x3002;</p><h2 id="vanishing-gradient-problem">Vanishing Gradient Problem</h2><h3 id="&#x68AF;&#x5EA6;&#x6D88;&#x5931;">&#x68AF;&#x5EA6;&#x6D88;&#x5931;</h3><p>&#x8BEF;&#x5DEE;&#x4ECE;&#x8F93;&#x51FA;&#x5C42;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x65F6;&#xFF0C;&#x5728;&#x6BCF;&#x4E00;&#x5C42;&#x90FD;&#x8981;&#x4E58;&#x4EE5;&#x8BE5;&#x5C42;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x7684;&#x5BFC;&#x6570;&#x3002;<br>&#x82E5;&#x8BE5;&#x5BFC;&#x6570;&#x5C0F;&#x4E8E;1&#xFF0C;&#x5219;&#x8BEF;&#x5DEE;&#x7ECF;&#x8FC7;&#x6BCF;&#x4E00;&#x5C42;&#x4F20;&#x9012;&#x90FD;&#x4F1A;&#x4E0D;&#x65AD;&#x8870;&#x51CF;&#xFF0C;&#x5F53;&#x7F51;&#x7EDC;&#x5C42;&#x6570;&#x5F88;&#x6DF1;&#x65F6;&#xFF0C;&#x68AF;&#x5EA6;&#x5C31;&#x4F1A;&#x4E0D;&#x505C;&#x7684;&#x8870;&#x51CF;&#xFF0C;&#x751A;&#x81F3;&#x6D88;&#x5931;&#xFF0C;&#x4F7F;&#x5F97;&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x5F88;&#x96BE;&#x8BAD;&#x7EC3;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x6240;&#x8C13;&#x7684;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x95EE;&#x9898;&#x3002;</p><h3 id="&#x68AF;&#x5EA6;&#x7206;&#x70B8;">&#x68AF;&#x5EA6;&#x7206;&#x70B8;</h3><p>&#x76F8;&#x6BD4;&#x8F83;&#x4E8E;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#xFF0C;&#x5982;&#x679C;&#x5BFC;&#x6570;&#x5927;&#x4E8E;1&#xFF0C;&#x5219;&#x8FDE;&#x4E58;&#x4F1A;&#x4E0D;&#x65AD;&#x589E;&#x52A0;&#xFF0C;&#x5BFC;&#x81F4;&#x7206;&#x70B8;&#x3002;</p><h3 id="&#x89E3;&#x51B3;&#x529E;&#x6CD5;">&#x89E3;&#x51B3;&#x529E;&#x6CD5;</h3><p>&#x89E3;&#x51B3;&#x529E;&#x6CD5;:<br>- &#x6539;&#x6362;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;eg&#xFF1A;ReLU<br>- &#x9488;&#x5BF9;RNN&#xFF1A;&#x5F15;&#x5165;&#x7EBF;&#x6027;&#x5206;&#x91CF;+&#x95E8;&#x63A7;&#x673A;&#x5236;&#xFF0C;eg&#xFF1A;LSTM - &#x6539;&#x6362;&#x7F51;&#x7EDC;&#x6A21;&#x578B; - &#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;&#x5B66;&#x4E60;&#x7387; - &#x68AF;&#x5EA6;&#x622A;&#x65AD;&#xFF1A;&#x89E3;&#x51B3;&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#x3002;</p><h1 id="rnn">RNN</h1><h2 id="&#x968F;&#x65F6;&#x95F4;&#x53CD;&#x5411;&#x4F20;&#x64AD;bptt">&#x968F;&#x65F6;&#x95F4;&#x53CD;&#x5411;&#x4F20;&#x64AD;BPTT</h2><p>BPTT&#x7B97;&#x6CD5;&#x5C06;&#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x4E2A;&#x5C55;&#x5F00;&#x7684;&#x591A;&#x5C42;&#x524D;&#x9988;&#x7F51;&#x7EDC;&#xFF0C;&#x5176;&#x4E2D;&#x201C;&#x6BCF;&#x4E00;&#x5C42;&#x201D;&#x5BF9;&#x5E94;&#x5FAA;&#x73AF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x201C;&#x6BCF;&#x4E2A;&#x65F6;&#x523B;&#x201D;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5C31;&#x53EF;&#x4EE5;&#x6309;&#x6309;&#x7167;&#x524D;&#x9988;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#x53C2;&#x6570;&#x68AF;&#x5EA6;&#x3002;&#x5728;&#x201C;&#x5C55;&#x5F00;&#x201D;&#x7684;&#x524D;&#x9988;&#x7F51;&#x7EDC;&#x4E2D;&#xFF0C;&#x6240;&#x6709;&#x5C42;&#x7684;&#x53C2;&#x6570;&#x662F;&#x5171;&#x4EAB;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x53C2;&#x6570;&#x7684;&#x771F;&#x5B9E;&#x68AF;&#x5EA6;&#x662F;&#x5C06;&#x6240;&#x6709;&#x201C;&#x5C55;&#x5F00;&#x5C42;&#x201D;&#x7684;&#x53C2;&#x6570;&#x68AF;&#x5EA6;&#x4E4B;&#x548C;&#x3002; &#x5219;&#x6574;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;<span class="math inline">\(L\)</span>&#x662F;&#x6BCF;&#x4E2A;&#x65F6;&#x523B;&#xFF0C;&#x635F;&#x5931;&#x51FD;&#x6570;<span class="math inline">\(L^t\)</span>&#x7684;&#x548C;&#x3002;<br><span class="math inline">\(L\)</span>&#x5173;&#x4E8E;&#x53C2;&#x6570;<span class="math inline">\(\theta\)</span>&#x7684;&#x68AF;&#x5EA6;&#x4E3A;&#xFF0C;&#x6BCF;&#x4E2A;&#x65F6;&#x523B;&#x635F;&#x5931;<span class="math inline">\(L^t\)</span>&#x5BF9;&#x53C2;&#x6570;<span class="math inline">\(\theta\)</span>&#x7684;&#x504F;&#x5BFC;&#x6570;&#x7684;&#x548C;&#x3002;</p><p>&#x8BB0;<span class="math inline">\(z_k=Uh_{k-1}+Wx_k+b\)</span>&#x4E3A;&#x7B2C;k&#x65F6;&#x523B;&#x7684;&#x51C0;&#x8F93;&#x5165;&#xFF0C;<span class="math inline">\(h_k=\sigma(z_k)\)</span>&#x8868;&#x793A;k&#x65F6;&#x523B;&#x7684;&#x8F93;&#x51FA;<br>&#x5B9A;&#x4E49;<span class="math inline">\(\delta_{t,k}=\frac {\partial L_t}{\partial z_k}\)</span>&#x4E3A;&#x7B2C;t&#x65F6;&#x523B;&#x7684;&#x635F;&#x5931;&#x5BF9;&#x7B2C;k&#x65F6;&#x523B;&#x9690;&#x85CF;&#x795E;&#x7ECF;&#x5C42;&#x7684;&#x7ECF;&#x8F93;&#x5165;<span class="math inline">\(z_k\)</span>&#x7684;&#x5BFC;&#x6570;<br>&#x5219;&#xFF1A; <span class="math display">\[\begin{align} \delta_{t,k}&amp;=\frac {\partial L_t}{\partial z_k} \\&amp;=\frac{\partial h_k}{\partial z_k}\frac {\partial z_{k+1}}{\partial h_k}\frac{\partial L_t}{\partial z_{k+1}}\end{align}\]</span></p><p><span class="math display">\[\delta_{t,k}=\frac {\partial L_t}{\partial z_k}=\frac{\partial h_k}{\partial z_k}\frac {\partial z_{k+1}}{\partial h_k}\frac{\partial L_t}{\partial z_{k+1}}\]</span> &#x5219;&#x6574;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;<span class="math inline">\(L\)</span>&#x5BF9;<span class="math inline">\(U,W,b\)</span>&#x7684;&#x68AF;&#x5EA6;:<br><span class="math display">\[\frac {\partial L}{\partial U}=\sum^T_{t=1}\sum^t_{k=1}\frac{\partial L_t}{\partial z_k} h_{k-1}  \\\frac {\partial L}{\partial W}=\sum^T_{t=1}\sum^t_{k=1}\frac{\partial L_t}{\partial z_k} x_{k-1}  \\\frac {\partial L}{\partial b}=\sum^T_{t=1}\sum^t_{k=1}\frac{\partial L_t}{\partial z_k} \]</span></p><h2 id="&#x68AF;&#x5EA6;&#x6D88;&#x5931;-1">&#x68AF;&#x5EA6;&#x6D88;&#x5931;</h2><p>&#x5F62;&#x5F0F;&#x5316;&#x7684;&#x8BB0;<br><span class="math display">\[\gamma=\frac{\partial h_k}{\partial z_k}\frac {\partial z_{k+1}}{\partial h_k}\]</span></p><p>&#x5219;<br><span class="math display">\[\delta_{t,k}=\gamma^{t-k}\delta_{t,t}\]</span> &#xFF08;&#x5176;&#x5B9E;&#x8FD9;&#x91CC;&#x9762;&#x6BCF;&#x4E2A;<span class="math inline">\(\delta\)</span>&#x4E0D;&#x4E00;&#x6837;&#x3002;&#xFF09;<br>&#x4E8E;&#x662F;&#x5728;<span class="math inline">\(\gamma&gt;1\)</span>&#x5F53;<span class="math inline">\(t-K\rightarrow\infty\)</span>&#x4F1A;&#x9020;&#x6210;&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#xFF08;&#x68AF;&#x5EA6;&#x622A;&#x65AD;&#x53EF;&#x89E3;&#x51B3;&#xFF09;&#x3002;<br>&#x76F8;&#x53CD;&#xFF0C;<span class="math inline">\(\gamma&lt;1\)</span>&#x4F1A;&#x51FA;&#x73B0;&#x7C7B;&#x4F3C;&#x524D;&#x9988;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x95EE;&#x9898;&#x3002;</p><p>&#x5728;RNN&#x4E2D;&#xFF0C;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x4E0D;&#x662F;&#x8BF4;<span class="math inline">\(\frac {\partial L_t}{\partial U}\)</span>&#x7684;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x4E86;&#xFF0C;&#x800C;&#x662F;<span class="math inline">\(\frac {\partial L_t}{\partial h_k}\)</span>&#x7684;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x4E86;&#xFF08;&#x5F53;<span class="math inline">\(t-k\)</span>&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x65F6;&#x5019;&#xFF09;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x53C2;&#x6570;<span class="math inline">\(U\)</span>&#x7684;&#x66F4;&#x65B0;&#x4E3B;&#x8981;&#x9760;&#x5F53;&#x524D;&#x65F6;&#x523B;<span class="math inline">\(k\)</span>&#x7684;&#x524D;&#x51E0;&#x4E2A;&#x76F8;&#x90BB;&#x72B6;&#x6001;<span class="math inline">\(h_k\)</span>&#x8FDB;&#x884C;&#x66F4;&#x65B0;&#xFF0C;&#x957F;&#x8DDD;&#x79BB;&#x7684;&#x72B6;&#x6001;&#x5BF9;<span class="math inline">\(U\)</span>&#x6CA1;&#x6709;&#x5F71;&#x54CD;&#x3002;</p><p>&#x7531;&#x4E8E;&#x68AF;&#x5EA6;&#x6D88;&#x5931;/&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;RNN&#x53EA;&#x80FD;&#x5B66;&#x4E60;&#x5230;&#x77ED;&#x671F;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x6240;&#x4EE5;&#x53C8;&#x53EB;&#x957F;&#x671F;&#x4F9D;&#x8D56;&#x95EE;&#x9898;&#x3002;</p><h2 id="&#x89E3;&#x51B3;&#x529E;&#x6CD5;-1">&#x89E3;&#x51B3;&#x529E;&#x6CD5;</h2><p><strong>&#x6DFB;&#x52A0;&#x7EBF;&#x6027;&#x5206;&#x91CF;</strong>&#xFF0C;&#x6BD4;&#x5982;<span class="math inline">\(h_t=h_{t-1}+g(x_t,h_{t-1};\theta)\)</span></p><p>&#x4F46;&#x662F;&#x8FD9;&#x53C8;&#x4F1A;&#x51FA;&#x73B0;&#x65B0;&#x7684;&#x95EE;&#x9898;&#x2014;&#x2014;&#x8BB0;&#x5FC6;&#x5BB9;&#x91CF;&#x95EE;&#x9898;&#xFF0C;&#x968F;&#x7740;<span class="math inline">\(h_t\)</span>&#x4E0D;&#x65AD;&#x7D2F;&#x79EF;&#x5B58;&#x50A8;&#x65B0;&#x7684;&#x8F93;&#x5165;&#x4FE1;&#x606F;&#xFF0C;&#x4F1A;&#x53D1;&#x751F;&#x9971;&#x548C;&#x73B0;&#x8C61;&#x3002;&#x5047;&#x8BBE; <span class="math inline">\(g(&#xB7;)\)</span>&#x4E3A; logistic&#x51FD;&#x6570;&#xFF0C;&#x5219;&#x968F;&#x7740;&#x65F6;&#x95F4; <span class="math inline">\(t\)</span>&#x7684;&#x589E;&#x957F;&#xFF0C;$ h_t$ &#x4F1A;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x5927;&#xFF0C;&#x4ECE;&#x800C;&#x5BFC;&#x81F4;<span class="math inline">\(h\)</span>&#x53D8;&#x5F97;&#x9971;&#x548C;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x9690;&#x85CF;&#x72B6;&#x6001;<span class="math inline">\(h_t\)</span> &#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x7684;&#x4FE1;&#x606F;&#x662F;&#x6709;&#x9650;&#x7684;&#xFF0C;&#x968F;&#x7740;&#x8BB0;&#x5FC6;&#x5355;&#x5143;&#x5B58;&#x50A8;&#x7684;&#x5185;&#x5BB9;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#xFF0C;&#x5176;&#x4E22;&#x5931;&#x7684;&#x4FE1;&#x606F;&#x4E5F;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x3002;</p><p>&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5F15;&#x5165;<strong>&#x95E8;&#x63A7;&#x673A;&#x5236;</strong>&#x6765;&#x63A7;&#x5236;&#x4FE1;&#x606F;&#x79EF;&#x7D2F;&#x7684;&#x901F;&#x5EA6;&#xFF0C;&#x5305;&#x62EC;&#x6709;&#x9009;&#x62E9;&#x7684;&#x52A0;&#x5165;&#x65B0;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x6709;&#x9009;&#x62E9;&#x5730;&#x9057;&#x5FD8;&#x4E4B;&#x524D;&#x79EF;&#x7D2F;&#x7684;&#x4FE1;&#x606F;&#x3002;</p><p>LSTM&#x4E4B;&#x6240;&#x4EE5;&#x80FD;&#x89E3;&#x51B3;&#x68AF;&#x5EA6;&#x6D88;&#x5931;/&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#x95EE;&#x9898;&#xFF0C;&#x5173;&#x952E;&#x5728;&#x4E8E;</p><ol type="1"><li>&#x6DFB;&#x52A0;&#x4E86;&#x7EBF;&#x6027;&#x5206;&#x91CF;</li><li>&#x5F15;&#x5165;&#x4E86;&#x95E8;&#x63A7;&#x673A;&#x5236;</li></ol><p>&#x800C;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x56E0;&#x4E3A;&#x52A0;&#x5165;&#x4E86;cell&#x3002;</p><p>&#x95E8;&#x63A7;&#x5FAA;&#x73AF;&#x5355;&#x5143;&#x7F51;&#x7EDC;&#xFF08;GRU&#xFF09;&#x6CA1;&#x6709;&#x8BB0;&#x5FC6;&#x4F53;cell&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x95E8;&#x63A7;&#x673A;&#x5236;&#x548C;&#x7EBF;&#x6027;&#x5206;&#x91CF;&#xFF0C;&#x6240;&#x4EE5;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x3002;</p><h2 id="&#x5B9E;&#x65F6;&#x5FAA;&#x73AF;&#x5B66;&#x4E60;rtrl">&#x5B9E;&#x65F6;&#x5FAA;&#x73AF;&#x5B66;&#x4E60;RTRL</h2><p>&#x901A;&#x8FC7;&#x524D;&#x5411;&#x4F20;&#x64AD;&#x8BA1;&#x7B97;&#x68AF;&#x5EA6;&#xFF0C;&#x4ECD;&#x7136;&#x4F1A;&#x6709;&#x68AF;&#x5EA6;&#x6D88;&#x5931;/&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#x95EE;&#x9898;&#x3002;</p><h2 id="lstm&#x7ED3;&#x6784;">LSTM&#x7ED3;&#x6784;</h2><p><img src="/posts/d81a8700/LSTM&#x5355;&#x5143;.png"> &#x5728;&#x4E0A;&#x56FE;&#x4E2D;&#xFF0C;&#x4E09;&#x4E2A;&#x95E8;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x5E38;&#x5E38;&#x662F;Logistic&#x51FD;&#x6570;&#xFF08;&#x6A2A;&#x7740;&#x7684;&#xFF09;&#x3002;<br>&#x7AD6;&#x7740;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;<span class="math inline">\(g,h\)</span>&#x7ECF;&#x5E38;&#x662F;&#x662F;<span class="math inline">\(tanh\)</span>&#x51FD;&#x6570;</p><p>&#x5176;&#x4E2D;z&#x662F;&#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x5411;&#x91CF;&#xFF0C;z&#x662F;input+lstm_output&#x7EC4;&#x6210;&#x7684;&#x8054;&#x5408;&#x5411;&#x91CF;&#x3002;</p><h1 id="cnn-&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;">CNN &#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;</h1><h2 id="&#x7279;&#x70B9;">&#x7279;&#x70B9;</h2><p>&#x5377;&#x79EF;&#x5C42;</p><ul><li>&#x5C40;&#x90E8;&#x8FDE;&#x63A5;&#xFF1A;&#x5728;&#x5377;&#x79EF;&#x5C42;&#xFF08;&#x5047;&#x8BBE;&#x662F;&#x7B2C; <span class="math inline">\(l\)</span> &#x5C42;&#xFF09;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#x90FD;&#x53EA;&#x548C;&#x4E0B;&#x4E00;&#x5C42;&#xFF08;&#x7B2C; <span class="math inline">\(l &#x2212; 1\)</span>&#x5C42;&#xFF09;&#x4E2D;&#x67D0;&#x4E2A;&#x5C40;&#x90E8;&#x7A97;&#x53E3;&#x5185;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x76F8;&#x8FDE;&#xFF0C;&#x6784;&#x6210;&#x4E00;&#x4E2A;&#x5C40;&#x90E8;&#x8FDE;&#x63A5;&#x7F51;&#x7EDC;</li><li>&#x6743;&#x91CD;&#x5171;&#x4EAB;&#xFF1A;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x6EE4;&#x6CE2;&#x5668; <span class="math inline">\(w^l\)</span> &#x5BF9;&#x4E8E;&#x7B2C; <span class="math inline">\(l\)</span> &#x5C42;&#x7684;&#x6240;&#x6709;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x90FD;&#x662F;&#x76F8;&#x540C;&#x7684;&#x3002;</li></ul><p>&#x7531;&#x4E8E;&#x5C40;&#x90E8;&#x8FDE;&#x63A5;&#x548C;&#x6743;&#x91CD;&#x5171;&#x4EAB;&#xFF0C;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x53C2;&#x6570;&#x53EA;&#x6709;&#x4E00;&#x4E2A; <span class="math inline">\(m\)</span>&#x7EF4;&#x7684;&#x6743;&#x91CD;$ w^l <span class="math inline">\(&#x548C; 1&#x7EF4;&#x7684;&#x504F;&#x7F6E;\)</span>b^l$</p><p>&#x6C47;&#x805A;&#x5C42;/&#x6C60;&#x5316;&#x5C42;/Pooling Layer</p><ul><li>&#x5B50;&#x91C7;&#x6837;</li></ul><h2 id="&#x5377;&#x79EF;&#x5C42;">&#x5377;&#x79EF;&#x5C42;</h2><p>&#x4F5C;&#x7528;&#xFF1A;&#x63D0;&#x53D6;&#x4E00;&#x4E2A;&#x5C40;&#x90E8;&#x533A;&#x57DF;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x5377;&#x79EF;&#x6838;&#x76F8;&#x5F53;&#x4E8E;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x5668;&#x3002;</p><h2 id="&#x6C47;&#x805A;&#x5C42;&#x6C60;&#x5316;&#x5C42;pooling-layer">&#x6C47;&#x805A;&#x5C42;/&#x6C60;&#x5316;&#x5C42;/pooling layer</h2><p>&#x4F5C;&#x7528;&#xFF1A;&#x8FDB;&#x884C;&#x7279;&#x5F81;&#x9009;&#x62E9;&#xFF0C;&#x964D;&#x4F4E;&#x7279;&#x5F81;&#x6570;&#x91CF;&#xFF0C;&#x5E76;&#x4ECE;&#x800C;&#x51CF;&#x5C11;&#x53C2;&#x6570;&#x6570;&#x91CF;&#x3002;</p><p>&#x5E38;&#x7528;&#x7684;&#x6C47;&#x805A;&#x51FD;&#x6570;&#xFF1A;&#x6700;&#x4F73;&#x6C47;&#x805A;&#xFF0C;&#x5E73;&#x5747;&#x6C47;&#x805A;&#x3002;</p><h2 id="&#x9632;&#x6B62;&#x8FC7;&#x62DF;&#x5408;">&#x9632;&#x6B62;&#x8FC7;&#x62DF;&#x5408;</h2><ol type="1"><li>&#x5728;&#x5377;&#x79EF;&#x5C42;&#x4E4B;&#x540E;&#x52A0;&#x4E00;&#x4E2A;&#x6C47;&#x805A;&#x5C42;&#xFF0C;&#x964D;&#x4F4E;&#x7279;&#x5F81;&#x7EF4;&#x5EA6;</li><li>&#x589E;&#x52A0;&#x5377;&#x79EF;&#x6B65;&#x957F;&#xFF0C;&#x964D;&#x4F4E;&#x7279;&#x5F81;&#x7EF4;&#x5EA6;</li></ol><h2 id="&#x53C2;&#x6570;&#x5B66;&#x4E60;">&#x53C2;&#x6570;&#x5B66;&#x4E60;</h2><p>&#x53EA;&#x9700;&#x8981;&#x8BA1;&#x7B97;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x68AF;&#x5EA6;&#x3002;</p><h1 id="&#x6742;&#x9879;">&#x6742;&#x9879;</h1><h2 id="dropout">Dropout</h2><p>&#x968F;&#x673A;&#x5931;&#x6D3B;&#x3002;<br>&#x6CE8;&#x610F;&#xFF1A;&#x5982;&#x679C;dropout rate=p%&#x3002;&#x5728;&#x8BA1;&#x7B97;weight&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8981;&#x4E58;&#x4EE5;&#xFF08;1-p%&#xFF09;&#x3002;<br>&#x5982;&#x679C;&#x8FD9;&#x6B21;&#x6CA1;&#x66F4;&#x65B0;&#x5230;&#xFF0C;&#x5C31;&#x4E0B;&#x6B21;&#x518D;&#x66F4;&#x65B0;&#x3002;</p><h2 id="maxout">Maxout</h2><h2 id="relu">ReLU</h2><p>&#x5168;&#x79F0;&#xFF1A;Rectified Linear Unit&#xFF0C;&#x7EBF;&#x6027;&#x6574;&#x6D41;&#x51FD;&#x6570;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; <img src="/posts/d81a8700/ReLU.png"> ReLU&#x7684;&#x53D8;&#x79CD; <img src="/posts/d81a8700/ReLU&#x53D8;&#x79CD;.png"></p><h1 id="&#x540D;&#x8BCD;&#x89E3;&#x91CA;">&#x540D;&#x8BCD;&#x89E3;&#x91CA;</h1><h2 id="epoch-iterationbatch_size-batch_num">Epoch&#x3001; Iteration&#x3001;Batch_size&#x3001; Batch_num</h2><p><strong>Epoch</strong>&#xFF1A;&#x4E00;&#x4E2A;Epoch&#x610F;&#x5473;&#x7740;&#x4F1A;&#x4F7F;&#x7528;&#x4E00;&#x6B21;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x6837;&#x4F8B;&#x3002;<br><strong>Batch_size</strong>&#xFF1A;&#x6BCF;&#x4E00;&#x6279;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x5728;&#x4E00;&#x6B21;&#x524D;&#x5411;&#x4F20;&#x64AD;/&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x4E2D;&#xFF0C;&#x6279;&#x91CF;&#x7684;&#x5927;&#x5C0F;&#x3002;<br><strong>Iteration</strong>&#xFF1A;&#x68AF;&#x5EA6;&#x66F4;&#x65B0;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x603B;&#x8FC7;&#x5DF2;&#x7ECF;&#x4F7F;&#x7528;&#x4E86;&#x591A;&#x5C11;&#x4E2A;batch&#x3002;<br><strong>batch_num</strong>&#xFF1A;&#x6BCF;&#x6B21;&#x4F7F;&#x7528;Batch_size&#x4E2A;&#x6570;&#x636E;&#xFF0C;&#x9700;&#x8981;batch_num&#x6B21;&#x8FED;&#x4EE3;&#x5B8C;&#x4E00;&#x4E2A;epoch&#x3002; <span class="math inline">\(batch\_num=\frac{&#x6D4B;&#x8BD5;&#x96C6;&#x6570;&#x91CF;}{Batch\_size}\)</span> &#x4E3E;&#x4F8B;&#xFF1A;&#x6709;1000&#x4E2A;&#x6837;&#x4F8B;&#xFF0C;&#x8BBE;&#x7F6E;batch_size=500&#xFF0C;&#x5219;&#x9700;&#x8981;batch_num=2&#x6765;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;Epoch&#x3002;</p><hr><h1 id="&#x5F15;&#x7528;">&#x5F15;&#x7528;</h1><p>&#x6392;&#x540D;&#x4E0D;&#x5206;&#x5148;&#x540E;<br><a href="http://cjh.zone/2018/12/13/&#x79D1;&#x5927;&#x8F6F;&#x9662;-&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x671F;&#x672B;&#x603B;&#x7ED3;/" target="_blank" rel="noopener">&#x9648;&#x5EFA;&#x864E;&#x7684;&#x535A;&#x5BA2;</a><br><a href="https://www.keyanjie.net/ai%F0%9F%A7%80/396/" target="_blank" rel="noopener">&#x67EF;&#x5EF6;&#x6770;&#x7684;&#x535A;&#x5BA2;</a><br><a href="https://zhuanlan.zhihu.com/p/22810533" target="_blank" rel="noopener">&#x6BD4;Momentum&#x66F4;&#x5FEB;&#xFF1A;&#x63ED;&#x5F00;Nesterov Accelerated Gradient&#x7684;&#x771F;&#x9762;&#x76EE;</a><br><a href="https://github.com/nndl/nndl.github.io" target="_blank" rel="noopener">&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E0E;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;</a><br>&#x4E2D;&#x79D1;&#x5927;&#x8F6F;&#x9662;-&#x4F59;&#x8273;&#x73AE;</p><h1 id="&#x81F4;&#x8C22;">&#x81F4;&#x8C22;</h1><p>&#x6392;&#x540D;&#x4E0D;&#x5206;&#x5148;&#x540E;<br>&#x4F59;&#x8273;&#x73AE;&#x8001;&#x5E08;&#xFF0C;&#x8D75;&#x632F;&#x521A;&#x8001;&#x5E08;&#xFF0C;&#x82CF;&#x7490;&#x5CA9;&#xFF0C;<a href="https://www.keyanjie.net/" target="_blank" rel="noopener">&#x67EF;&#x5EF6;&#x6770;</a>&#xFF0C;&#x9648;&#x5EFA;&#x864E;&#x3002;</p><h1 id="&#x798F;&#x5229;">&#x798F;&#x5229;</h1><p><font color="#FFFFFF"> https://qcloud.coding.net/s/0438a9fe-bb37-4fc7-9ddd-af8d786f9558 </font></p>]]></content>
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>智能机器人  LAB1</title>
      <link href="//posts/113ef49f/"/>
      <url>//posts/113ef49f/</url>
      <content type="html"><![CDATA[<p>&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;-LAB1 &#x5B9E;&#x9A8C;&#x62A5;&#x544A;<br><a id="more"></a><br>&#x5982;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x8BF7;&#x591A;&#x591A;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#xFF0C;&#x4E0D;&#x80DC;&#x611F;&#x6FC0;&#x3002;</p><p><a href="https://qcloud.coding.net/s/a61d590d-d3bd-466f-a306-fa29d81aca29" target="_blank" rel="noopener">&#x4EE3;&#x7801;</a></p><h1 id="&#x7528;&#x81EA;&#x5DF1;&#x7684;&#x8BDD;&#x7ED9;&#x51FA;&#x4E0A;&#x8FF0;&#x5404;&#x6B65;&#x9AA4;&#x6240;&#x8C03;&#x7528;&#x51FD;&#x6570;-api-&#x7684;&#x539F;&#x7406;&#x7406;&#x89E3;&#x4EE3;&#x7801;&#x5206;&#x6790;&#x548C;&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;">&#x7528;&#x81EA;&#x5DF1;&#x7684;&#x8BDD;&#x7ED9;&#x51FA;&#x4E0A;&#x8FF0;&#x5404;&#x6B65;&#x9AA4;&#x6240;&#x8C03;&#x7528;&#x51FD;&#x6570; API &#x7684;&#x539F;&#x7406;&#x7406;&#x89E3;&#xFF0C;&#x4EE3;&#x7801;&#x5206;&#x6790;&#x548C;&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</h1><p><strong>&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x6355;&#x83B7;&#x76F8;&#x673A;&#x6570;&#x636E;</span></span><br><span class="line">self.cam = video.create_capture(<span class="number">0</span>)</span><br><span class="line">cv2.namedWindow(<span class="string">&apos;camshift&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#x6570;&#x636E;&#xFF0C;&#x6839;&#x636E;&#x8FD9;&#x5F20;&#x56FE;&#x7247;&#x4E2D;&#x7684;&#x989C;&#x8272;&#x5206;&#x5E03;&#x53BB;&#x641C;&#x5BFB;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x533A;&#x57DF;</span></span><br><span class="line">self.roi = cv2.imread(<span class="string">&apos;fense.jpg&apos;</span>)</span><br><span class="line">self.selection = <span class="keyword">None</span></span><br><span class="line">self.tracking_state = <span class="number">0</span></span><br><span class="line">self.show_backproj = <span class="keyword">False</span></span><br></pre></td></tr></table></figure></p><p><strong>&#x8BBE;&#x5B9A;&#x641C;&#x5BFB;&#x7684;&#x521D;&#x59CB;&#x5316;&#x7A97;&#x53E3;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">self.selection = (<span class="number">40</span>, <span class="number">54</span>, <span class="number">296</span>, <span class="number">230</span>)</span><br><span class="line">self.tracking_state = <span class="number">1</span></span><br><span class="line"><span class="comment">#&#x5373;&#x4EE5;[40~296,54~230]&#x8FD9;&#x4E2A;&#x7A97;&#x53E3;&#x4E3A;&#x521D;&#x59CB;&#x5316;&#x7A97;&#x53E3;&#xFF0C;&#x5F00;&#x59CB;&#x641C;&#x5BFB;</span></span><br></pre></td></tr></table></figure></p><p><strong>&#x83B7;&#x53D6;&#x76F8;&#x673A;&#x6570;&#x636E;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BFB;&#x53D6;&#x76F8;&#x673A;&#x7684;&#x6570;&#x636E;&#x6D41;</span></span><br><span class="line">ret, self.frame = self.cam.read()</span><br><span class="line"><span class="comment">#&#x5BF9;&#x83B7;&#x53D6;&#x7684;&#x76F8;&#x673A;&#x6570;&#x636E;&#x4F5C;&#x6DF1;&#x590D;&#x5236;</span></span><br><span class="line"><span class="comment">#vis&#x4F5C;&#x4E3A;&#x76F8;&#x673A;&#x89C6;&#x9891;&#x7684;&#x4E00;&#x4E2A;&#x5907;&#x4EFD;&#xFF0C;&#x505A;&#x6DF1;&#x590D;&#x5236;&#xFF0C;&#x7528;&#x4E8E;&#x663E;&#x793A;&#x8F93;&#x51FA;</span></span><br><span class="line">vis = self.frame.copy()</span><br></pre></td></tr></table></figure></p><p><strong>&#x989C;&#x8272;&#x7A7A;&#x95F4;&#x8F6C;&#x6362;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x989C;&#x8272;&#x7A7A;&#x95F4;&#x8F6C;&#x6362;&#xFF0C;flag&#x51B3;&#x5B9A;&#x8F6C;&#x6362;&#x7C7B;&#x578B;&#xFF0C;cv2.COLOR_BGR2HSV&#x4E3A;BGR&#x8F6C;HSV&#x7A7A;&#x95F4;</span></span><br><span class="line"><span class="comment">#HSV &#x4E3A;&#x8272;&#x76F8;&#xFF0C;&#x9971;&#x548C;&#x5EA6;&#xFF0C;&#x660E;&#x5EA6;</span></span><br><span class="line"><span class="comment">#RGB&#x989C;&#x8272;&#x7A7A;&#x95F4;&#x5BF9;&#x5149;&#x7167;&#x4EAE;&#x5EA6;&#x53D8;&#x5316;&#x8F83;&#x4E3A;&#x654F;&#x611F;&#xFF0C;</span></span><br><span class="line"><span class="comment">#&#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x6B64;&#x53D8;&#x5316;&#x5BF9;&#x8DDF;&#x8E2A;&#x6548;&#x679C;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x9996;&#x5148;&#x5C06;&#x56FE;&#x50CF;&#x4ECE;RGB&#x7A7A;&#x95F4;&#x8F6C;&#x6362;&#x5230;HSV&#x7A7A;&#x95F4;&#x3002;</span></span><br><span class="line">hsv = cv2.cvtColor(self.frame, cv2.COLOR_BGR2HSV)</span><br><span class="line"><span class="comment">#&#x8F93;&#x51FA;&#x7785;&#x7785;</span></span><br><span class="line">cv2.imshow(<span class="string">&apos;hsv&apos;</span>, hsv)</span><br></pre></td></tr></table></figure></p><p><strong>&#x8BBE;&#x7F6E;&#x63A9;&#x6A21;</strong> &#x53EA;&#x9760;&#x56FE;&#x7247;&#x4E2D;&#x7684;&#x989C;&#x8272;&#x5206;&#x5E03;&#xFF0C;&#x5F80;&#x5F80;&#x7CBE;&#x5EA6;&#x4E0D;&#x591F;&#xFF0C;&#x73B0;&#x5728;&#x901A;&#x8FC7;&#x6DFB;&#x52A0;&#x63A9;&#x6A21;&#xFF0C;&#x63D0;&#x53D6;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x533A;&#x57DF;&#xFF0C;&#x63D0;&#x9AD8;&#x7CBE;&#x5EA6;&#x3002;</p><p>&#x63A9;&#x6A21;&#x7684;&#x4F5C;&#x7528;&#xFF1A; - &#x63D0;&#x53D6;&#x611F;&#x5174;&#x8DA3;&#x533A;,&#x7528;&#x9884;&#x5148;&#x5236;&#x4F5C;&#x7684;&#x611F;&#x5174;&#x8DA3;&#x533A;&#x63A9;&#x6A21;&#x4E0E;&#x5F85;&#x5904;&#x7406;&#x56FE;&#x50CF;&#x76F8;&#x4E58;,&#x5F97;&#x5230;&#x611F;&#x5174;&#x8DA3;&#x533A;&#x56FE;&#x50CF;,&#x611F;&#x5174;&#x8DA3;&#x533A;&#x5185;&#x56FE;&#x50CF;&#x503C;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;,&#x800C;&#x533A;&#x5916;&#x56FE;&#x50CF;&#x503C;&#x90FD;&#x4E3A;0 - &#x5C4F;&#x853D;&#x4F5C;&#x7528;,&#x7528;&#x63A9;&#x6A21;&#x5BF9;&#x56FE;&#x50CF;&#x4E0A;&#x67D0;&#x4E9B;&#x533A;&#x57DF;&#x4F5C;&#x5C4F;&#x853D;,&#x4F7F;&#x5176;&#x4E0D;&#x53C2;&#x52A0;&#x5904;&#x7406;&#x6216;&#x4E0D;&#x53C2;&#x52A0;&#x5904;&#x7406;&#x53C2;&#x6570;&#x7684;&#x8BA1;&#x7B97;,&#x6216;&#x4EC5;&#x5BF9;&#x5C4F;&#x853D;&#x533A;&#x4F5C;&#x5904;&#x7406;&#x6216;&#x7EDF;&#x8BA1;&#x3002; - &#x7ED3;&#x6784;&#x7279;&#x5F81;&#x63D0;&#x53D6;,&#x7528;&#x76F8;&#x4F3C;&#x6027;&#x53D8;&#x91CF;&#x6216;&#x56FE;&#x50CF;&#x5339;&#x914D;&#x65B9;&#x6CD5;&#x68C0;&#x6D4B;&#x548C;&#x63D0;&#x53D6;&#x56FE;&#x50CF;&#x4E2D;&#x4E0E;&#x63A9;&#x6A21;&#x76F8;&#x4F3C;&#x7684;&#x7ED3;&#x6784;&#x7279;&#x5F81;&#x3002; - &#x7279;&#x6B8A;&#x5F62;&#x72B6;&#x56FE;&#x50CF;&#x7684;&#x5236;&#x4F5C;&#x3002;&#x7528;&#x9009;&#x5B9A;&#x7684;&#x56FE;&#x50CF;&#x3001;&#x56FE;&#x5F62;&#x6216;&#x7269;&#x4F53;,&#x5BF9;&#x5F85;&#x5904;&#x7406;&#x7684;&#x56FE;&#x50CF;(&#x5168;&#x90E8;&#x6216;&#x5C40;&#x90E8;)&#x8FDB;&#x884C;&#x906E;&#x6321;,&#x6765;&#x63A7;&#x5236;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7684;&#x533A;&#x57DF;&#x6216;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x3002;&#x7528;&#x4E8E;&#x8986;&#x76D6;&#x7684;&#x7279;&#x5B9A;&#x56FE;&#x50CF;&#x6216;&#x7269;&#x4F53;&#x79F0;&#x4E3A;&#x63A9;&#x6A21;&#x6216;&#x6A21;&#x677F;&#x3002;</p><p>&#x5177;&#x4F53;&#x989C;&#x8272;&#x7A7A;&#x95F4;&#x7684;&#x8303;&#x56F4;&#x8BE6;&#x89C1;&#x989C;&#x8272;&#x73AF;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BBE;&#x7F6E;&#x9608;&#x503C;&#xFF0C;&#x4E09;&#x901A;&#x9053;&#x4F4E;&#x4E8E;(0,60,32)&#x7684;&#x7F6E;&#x4E3A;0&#xFF0C;&#x9AD8;&#x4E8E;(180,255,255)&#x7684;&#x7F6E;&#x4E3A;0&#xFF0C;&#x5728;&#x4ED6;&#x4FE9;&#x4E4B;&#x95F4;&#x7684;&#xFF0C;&#x8BBE;&#x4E3A;255</span></span><br><span class="line"><span class="comment">#&#x9608;&#x503C;&#x6539;&#x4E3A;&#x68C0;&#x6D4B;&#x504F;&#x7EA2;&#x8272;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x6839;&#x636E;&#x9608;&#x503C;&#x8FDB;&#x884C;&#x63A9;&#x819C;&#xFF0C;</span></span><br><span class="line">mask = cv2.inRange(hsv, np.array((<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">213.</span>)), np.array((<span class="number">255.</span>, <span class="number">128.</span>, <span class="number">255.</span>))) <span class="comment">#&#x504F;&#x7EA2;&#x8272;&#x7684;</span></span><br><span class="line"><span class="comment">#&#x73B0;&#x5728;&#xFF0C;mask&#x662F;&#x4E00;&#x4E2A;&#x53EA;&#x6709;&#x9ED1;&#x767D;&#x7684;&#x56FE;&#x50CF;&#x6D41;&#xFF0C;&#x8FDB;&#x884C;&#x63A9;&#x6A21;&#x540E;&#xFF0C;&#x4E8C;&#x503C;&#x5316;&#x4E86;&#x3002;</span></span><br><span class="line">cv2.imshow(<span class="string">&apos;mask&apos;</span>, mask)</span><br></pre></td></tr></table></figure></p><p><strong>&#x8BBE;&#x5B9A;&#x521D;&#x59CB;&#x7684;&#x641C;&#x7D22;&#x7A97;&#x53E3;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x0, y0, x1, y1 = self.selection</span><br><span class="line">self.track_window = (x0, y0, x1-x0, y1-y0)      <span class="comment">#&#xFF08;40,54&#xFF0C;256,176&#xFF09;&#x521D;&#x59CB;&#x5316;&#x6846;&#x7684;&#x8303;&#x56F4;</span></span><br></pre></td></tr></table></figure></p><p><strong>&#x8BA1;&#x7B97;&#x76F4;&#x65B9;&#x56FE;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#roi&#x662F;&#x8BFB;&#x5165;&#x7684;&#x56FE;&#x7247;&#xFF0C;</span></span><br><span class="line">hsv_roi = cv2. cvtColor(roi,cv2. COLOR_BGR2HSV)</span><br><span class="line"><span class="comment">#&#x8BFB;&#x5165;&#x7684;&#x56FE;&#x7247;&#x4E5F;&#x8981;&#x8FDB;&#x884C;&#x63A9;&#x6A21;&#x5904;&#x7406;</span></span><br><span class="line">mask_roi = cv2.inRange(hsv_roi, np.array((<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">213.</span>)), np.array((<span class="number">255.</span>, <span class="number">128.</span>, <span class="number">255.</span>)))</span><br><span class="line"><span class="comment">#mask_roi = cv2.inRange(hsv_roi, np.array((0., 60., 32.)), np.array((180., 255., 255.)))</span></span><br><span class="line"><span class="comment">#&#x7785;&#x4F60;&#x548B;&#x5730;</span></span><br><span class="line">cv2.namedWindow(<span class="string">&quot;mask_roi&quot;</span>)</span><br><span class="line">cv2.imshow(<span class="string">&apos;mask_roi&apos;</span>, mask_roi)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x4E00;&#x7EF4;&#x76F4;&#x65B9;&#x56FE;</span></span><br><span class="line"><span class="comment">#cv2.calcHist&#x662F;&#x76F4;&#x65B9;&#x56FE;&#x8BA1;&#x7B97;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="comment">##################&#x76F4;&#x65B9;&#x56FE;#################</span></span><br><span class="line"><span class="comment">################&#x51FD;&#x6570;&#x539F;&#x578B;#################</span></span><br><span class="line"><span class="comment">#cv2.calcHist(images, channels, mask, histSize, ranges[, hist[, accumulate ]]) #&#x8FD4;&#x56DE;hist</span></span><br><span class="line"><span class="comment">#&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#xFF1A;</span></span><br><span class="line"><span class="comment">#image = cv2.imread(&quot;D:/histTest.jpg&quot;, 0)</span></span><br><span class="line"><span class="comment">#hist = cv2.calcHist([image],</span></span><br><span class="line"><span class="comment">#[0], #&#x4F7F;&#x7528;&#x7684;&#x901A;&#x9053;</span></span><br><span class="line"><span class="comment">#None, #&#x6CA1;&#x6709;&#x4F7F;&#x7528;mask</span></span><br><span class="line"><span class="comment">#[256], #HistSize</span></span><br><span class="line"><span class="comment">#[0.0,255.0]) #&#x76F4;&#x65B9;&#x56FE;&#x67F1;&#x7684;&#x8303;&#x56F4;</span></span><br><span class="line"></span><br><span class="line">hist = cv2.calcHist( [hsv_roi], [<span class="number">0</span>], mask_roi, [<span class="number">16</span>], [<span class="number">0</span>, <span class="number">180</span>] )</span><br><span class="line"><span class="comment">#hist.shape=(16,1)</span></span><br><span class="line"><span class="comment">#H-S&#x8054;&#x5408;&#x4E8C;&#x7EF4;&#x76F4;&#x65B9;&#x56FE;</span></span><br><span class="line"> hist2 = cv2.calcHist( [hsv_roi], [<span class="number">0</span>,<span class="number">1</span>],<span class="keyword">None</span>, [<span class="number">16</span>,<span class="number">24</span>], [<span class="number">0</span>, <span class="number">180</span>,<span class="number">0</span> , <span class="number">255</span>] )</span><br><span class="line"><span class="comment">#hist2 = cv2.calcHist( [hsv_roi], [0,2],None, [18,24], [0, 180,0 , 255] )</span></span><br><span class="line"><span class="comment">#&#x5F52;&#x4E00;&#x5316;&#xFF0C;&#x8BA9;&#x6700;&#x5927;&#x503C;&#x662F;255</span></span><br><span class="line">cv2.normalize(hist, hist, <span class="number">0</span>, <span class="number">255</span>, cv2.NORM_MINMAX);</span><br><span class="line"><span class="comment">#&#x8F6C;&#x6362;&#x4E3A;&#x4E00;&#x7EF4;&#x5417;&#xFF1F;&#x56E0;&#x4E3A;reshape(-1)&#x662F;&#x6839;&#x636E;&#x5176;&#x4ED6;&#x7684;&#x7EF4;&#x5EA6;&#x6765;&#x7B97;&#x8FD9;&#x4E2A;&#x8FD9;&#x4E2A;&#x7EF4;&#x5EA6;</span></span><br><span class="line">self.hist = hist.reshape(<span class="number">-1</span>)</span><br><span class="line"><span class="comment">#&#x4E8C;&#x7EF4;&#x76F4;&#x65B9;&#x56FE;&#x663E;&#x793A;</span></span><br><span class="line">plt.imshow(hist2,interpolation = <span class="string">&apos;nearest&apos;</span>)</span><br><span class="line">plt.show()</span><br><span class="line">self.show_hist()</span><br></pre></td></tr></table></figure></p><p><strong>&#x53CD;&#x5411;&#x6295;&#x5F71;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x628A;selection = None &#x8FD9;&#x6837;&#x5C31;&#x4E0D;&#x518D;&#x8FDB;&#x884C;&#x7B2C;&#x4E00;&#x6B65;&#x4E86;</span></span><br><span class="line">self.selection = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#cv2.calcBackProject&#x76F4;&#x65B9;&#x56FE;&#x53CD;&#x5411;&#x6295;&#x5F71;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x53CD;&#x5411;&#x6295;&#x5F71;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x505A;&#x56FE;&#x50CF;&#x5206;&#x5272;&#xFF0C;&#x5BFB;&#x627E;&#x611F;&#x5174;&#x8DA3;&#x533A;&#x95F4;&#x3002;&#x5B83;&#x4F1A;&#x8F93;&#x51FA;&#x4E0E;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x5927;&#x5C0F;&#x76F8;&#x540C;&#x7684;&#x56FE;&#x50CF;&#xFF0C;</span></span><br><span class="line"><span class="comment">#&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x503C;&#x4EE3;&#x8868;&#x4E86;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x4E0A;&#x5BF9;&#x5E94;&#x70B9;&#x5C5E;&#x4E8E;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x6982;&#x7387;&#xFF0C;&#x6982;&#x7387;&#x8D8A;&#x9AD8;&#xFF0C;&#x8D8A;&#x4EAE;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x7B80;&#x8A00;&#x4E4B;&#xFF0C;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#x4E2D;&#x50CF;&#x7D20;&#x503C;&#x8D8A;&#x9AD8;&#x7684;&#x70B9;&#x8D8A;&#x53EF;&#x80FD;&#x4EE3;&#x8868;&#x60F3;&#x8981;&#x67E5;&#x627E;&#x7684;&#x76EE;&#x6807;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x76F4;&#x65B9;&#x56FE;&#x6295;&#x5F71;&#x7ECF;&#x5E38;&#x4E0E;camshift&#xFF08;&#x8FFD;&#x8E2A;&#x7B97;&#x6CD5;&#xFF09;&#x7B97;&#x6CD5;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#x3002; </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x7136;&#x540E;&#x5BF9;&#x5176;&#x4E2D;&#x7684;H&#x5206;&#x91CF;(&#x8272;&#x8C03;)&#x4F5C;&#x76F4;&#x65B9;&#x56FE;&#xFF0C;</span></span><br><span class="line"><span class="comment">#&#x5728;&#x76F4;&#x65B9;&#x56FE;&#x4E2D;&#x4EE3;&#x8868;&#x4E86;&#x4E0D;&#x540C;H&#x5206;&#x91CF;&#x503C;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#x6216;&#x8005;&#x50CF;&#x7D20;&#x4E2A;&#x6570;&#xFF0C;</span></span><br><span class="line"><span class="comment">#&#x5C31;&#x662F;&#x8BF4;&#x53EF;&#x4EE5;&#x67E5;&#x627E;&#x51FA;H&#x5206;&#x91CF;&#x5927;&#x5C0F;&#x4E3A;h&#x7684;&#x6982;&#x7387;&#x6216;&#x8005;&#x50CF;&#x7D20;&#x4E2A;&#x6570;&#xFF0C;&#x5373;&#x5F97;&#x5230;&#x4E86;&#x989C;&#x8272;&#x6982;&#x7387;&#x67E5;&#x627E;&#x8868;&#x3002;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x503C;&#x7528;&#x5176;&#x989C;&#x8272;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#x5BF9;&#x66FF;&#x6362;&#xFF0C;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x989C;&#x8272;&#x6982;&#x7387;&#x5206;&#x5E03;&#x56FE;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x5C31;&#x53EB;&#x53CD;&#x5411;&#x6295;&#x5F71;&#xFF0C;&#x989C;&#x8272;&#x6982;&#x7387;&#x5206;&#x5E03;&#x56FE;&#x662F;&#x4E00;&#x4E2A;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x3002;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x5F97;&#x5230;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x6982;&#x7387;&#x56FE;</span></span><br><span class="line">prob = cv2.calcBackProject([hsv], [<span class="number">0</span>], self.hist, [<span class="number">0</span>, <span class="number">180</span>], <span class="number">1</span>)</span><br><span class="line">cv2.namedWindow(<span class="string">&quot;prob1&quot;</span>)</span><br><span class="line"><span class="comment">#&#x663E;&#x793A;&#x6982;&#x7387;&#x56FE;1</span></span><br><span class="line">cv2.imshow(<span class="string">&apos;prob1&apos;</span>, prob)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x4E0E;&#x63A9;&#x819C;&#x76F8;&#x4E0E;</span></span><br><span class="line">prob &amp;= mask</span><br><span class="line">cv2.namedWindow(<span class="string">&quot;prob2&quot;</span>)</span><br><span class="line"><span class="comment">#&#x663E;&#x793A;&#x6982;&#x7387;&#x56FE;2</span></span><br><span class="line">cv2.imshow(<span class="string">&apos;prob2&apos;</span>, prob)</span><br></pre></td></tr></table></figure></p><p><strong>&#x641C;&#x5BFB;&#x5E76;&#x8DDF;&#x8E2A;&#x533A;&#x57DF;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BBE;&#x5B9A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</span></span><br><span class="line"><span class="comment">#&#x8981;&#x4E48;&#x662F;&#x8FED;&#x4EE3;10&#x6B21;&#xFF0C;&#x8981;&#x4E48;&#x662F;&#x79FB;&#x52A8;&#x53EA;&#x662F;&#x5C11;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x6761;&#x4EF6;&#x6210;&#x7ACB;&#x4E00;&#x4E2A;&#x5373;&#x53EF;&#x3002;</span></span><br><span class="line">term_crit = ( cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, <span class="number">10</span>, <span class="number">1</span> )</span><br><span class="line"></span><br><span class="line"><span class="comment">#CamShift&#x7B97;&#x6CD5;&#x7684;&#x5168;&#x79F0;&#x662F;&quot;Continuously Adaptive Mean-SHIFT&quot;&#xFF0C;&#x5373;&#xFF1A;&#x8FDE;&#x7EED;&#x81EA;&#x9002;&#x5E94;&#x7684;MeanShift&#x7B97;&#x6CD5;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x5176;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x662F;&#x5BF9;&#x89C6;&#x9891;&#x5E8F;&#x5217;&#x7684;&#x6240;&#x6709;&#x56FE;&#x50CF;&#x5E27;&#x90FD;&#x4F5C;MeanShift&#x8FD0;&#x7B97;&#xFF0C;</span></span><br><span class="line"><span class="comment">#&#x5E76;&#x5C06;&#x4E0A;&#x4E00;&#x5E27;&#x7684;&#x7ED3;&#x679C;&#xFF08;&#x5373;&#x641C;&#x7D22;&#x7A97;&#x53E3;&#x7684;&#x4E2D;&#x5FC3;&#x4F4D;&#x7F6E;&#x548C;&#x7A97;&#x53E3;&#x5927;&#x5C0F;&#xFF09;&#x4F5C;&#x4E3A;&#x4E0B;&#x4E00;&#x5E27;MeanShift&#x7B97;&#x6CD5;&#x7684;&#x641C;&#x7D22;&#x7A97;&#x53E3;&#x7684;&#x521D;&#x59CB;&#x503C;&#xFF0C;</span></span><br><span class="line"><span class="comment">#&#x5982;&#x6B64;&#x8FED;&#x4EE3;&#x4E0B;&#x53BB;&#x3002;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x7B97;&#x6CD5;&#x8FC7;&#x7A0B;&#x4E3A;&#xFF1A;</span></span><br><span class="line"><span class="comment">#(1).&#x521D;&#x59CB;&#x5316;&#x641C;&#x7D22;&#x7A97;</span></span><br><span class="line"><span class="comment">#(2).&#x8BA1;&#x7B97;&#x641C;&#x7D22;&#x7A97;&#x7684;&#x989C;&#x8272;&#x6982;&#x7387;&#x5206;&#x5E03;&#xFF08;&#x53CD;&#x5411;&#x6295;&#x5F71;&#xFF09;</span></span><br><span class="line"><span class="comment">#(3).&#x8FD0;&#x884C;meanshift&#x7B97;&#x6CD5;&#xFF0C;&#x83B7;&#x5F97;&#x641C;&#x7D22;&#x7A97;&#x65B0;&#x7684;&#x5927;&#x5C0F;&#x548C;&#x4F4D;&#x7F6E;&#x3002;</span></span><br><span class="line"><span class="comment">#(4).&#x5728;&#x4E0B;&#x4E00;&#x5E27;&#x89C6;&#x9891;&#x56FE;&#x50CF;&#x4E2D;&#x7528;(3)&#x4E2D;&#x7684;&#x503C;&#x91CD;&#x65B0;&#x521D;&#x59CB;&#x5316;&#x641C;&#x7D22;&#x7A97;&#x7684;&#x5927;&#x5C0F;&#x548C;&#x4F4D;&#x7F6E;&#xFF0C;&#x518D;&#x8DF3;&#x8F6C;&#x5230;(2)&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#x3002;</span></span><br><span class="line">track_box, self.track_window = cv2.CamShift(prob, self.track_window, term_crit)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x5927;&#x5C0F;&#x8BA1;&#x7B97;&#xFF1A;</span></span><br><span class="line"><span class="comment">#&#x96F6;&#x9636;&#x77E9;&#x662F;&#x641C;&#x7D22;&#x7A97;&#x53E3;&#x5185;&#x6240;&#x6709;&#x50CF;&#x7D20;&#x7684;&#x79EF;&#x5206;&#xFF0C;&#x5373;&#x6240;&#x6709;&#x50CF;&#x7D20;&#x503C;&#x4E4B;&#x548C;&#xFF0C;&#x7269;&#x7406;&#x4E0A;&#x7684;&#x610F;&#x4E49;&#x662F;&#x8BA1;&#x7B97;&#x641C;&#x7D22;&#x7A97;&#x53E3;&#x7684;&#x5C3A;&#x5BF8;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x7ECF;&#x8FC7;&#x76EE;&#x6807;&#x7684;H&#x5206;&#x91CF;&#x76F4;&#x65B9;&#x56FE;&#x53CD;&#x5411;&#x6295;&#x5F71;&#x540E;&#xFF0C;&#x76EE;&#x6807;&#x533A;&#x57DF;&#x7684;&#x641C;&#x7D22;&#x7A97;&#x53E3;&#x5927;&#x90E8;&#x5206;&#x50CF;&#x7D20;&#x503C;&#x5F52;&#x4E00;&#x5316;&#x540E;&#x5E94;&#x8BE5;&#x662F;&#x6700;&#x5927;&#x503C;255&#xFF0C;</span></span><br><span class="line"><span class="comment">#&#x5982;&#x679C;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x96F6;&#x9636;&#x77E9;&#x5927;&#x4E8E;&#x67D0;&#x4E00;&#x9608;&#x503C;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x6B64;&#x65F6;&#x76EE;&#x6807;&#x94FA;&#x6EE1;&#x4E86;&#x6574;&#x4E2A;&#x641C;&#x7D22;&#x7A97;&#x53E3;&#xFF0C;</span></span><br><span class="line"><span class="comment">#&#x6709;&#x7406;&#x7531;&#x8BA4;&#x4E3A;&#x5728;&#x641C;&#x7D22;&#x7A97;&#x53E3;&#x4E4B;&#x5916;&#x7684;&#x533A;&#x57DF;&#x8FD8;&#x5B58;&#x5728;&#x76EE;&#x6807;&#x533A;&#x57DF;&#xFF0C;&#x9700;&#x8981;&#x589E;&#x5927;&#x641C;&#x7D22;&#x7A97;&#x53E3;&#x7684;&#x5C3A;&#x5BF8;&#xFF1B;</span></span><br><span class="line"><span class="comment">#&#x76F8;&#x5E94;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x96F6;&#x9636;&#x77E9;&#x5C0F;&#x4E8E;&#x67D0;&#x4E00;&#x9608;&#x503C;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x7F29;&#x5C0F;&#x641C;&#x7D22;&#x7A97;&#x53E3;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;</span></span><br><span class="line"><span class="comment">#&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C;&#x5F53;&#x76EE;&#x6807;&#x7684;&#x5927;&#x5C0F;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x7684;&#x65F6;&#x5019;&#xFF0C;CamShift&#x7B97;&#x6CD5;&#x5C31;&#x53EF;&#x4EE5;&#x81EA;&#x9002;&#x5E94;&#x7684;&#x8C03;&#x6574;&#x76EE;&#x6807;&#x533A;&#x57DF;&#x8FDB;&#x884C;&#x8DDF;&#x8E2A;&#x3002;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x8FD4;&#x56DE;&#x503C;&#xFF1A;&#x8FD4;&#x56DE;&#x7684;track_box&#x53EF;&#x7528;&#x4E8E;&#x753B;&#x692D;&#x5706;</span></span><br><span class="line"><span class="comment">#&#x4E94;&#x4E2A;&#x53C2;&#x6570;&#xFF1A;&#x692D;&#x5706;&#x4E2D;&#x5FC3;&#xFF0C;&#x534A;&#x957F;&#x8F74;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x692D;&#x5706;&#x65CB;&#x8F6C;&#x7684;&#x89D2;&#x5EA6;&#xFF0C;&#x692D;&#x5706;&#x7684;&#x8D77;&#x59CB;&#x89D2;&#x5EA6;&#xFF0C;&#x692D;&#x5706;&#x7684;&#x7ED3;&#x675F;&#x89D2;&#x5EA6;</span></span><br></pre></td></tr></table></figure></p><p><strong>&#x4EE5;&#x692D;&#x5706;&#x8868;&#x793A;&#x8BC6;&#x522B;&#x7684;&#x533A;&#x57DF;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>: </span><br><span class="line">    <span class="comment">#&#x753B;&#x692D;&#x5706;</span></span><br><span class="line">    <span class="comment">#&#x4E94;&#x4E2A;&#x53C2;&#x6570;&#xFF1A;&#x692D;&#x5706;&#x4E2D;&#x5FC3;&#xFF0C;&#x534A;&#x957F;&#x8F74;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x692D;&#x5706;&#x65CB;&#x8F6C;&#x7684;&#x89D2;&#x5EA6;&#xFF0C;&#x692D;&#x5706;&#x7684;&#x8D77;&#x59CB;&#x89D2;&#x5EA6;&#xFF0C;&#x692D;&#x5706;&#x7684;&#x7ED3;&#x675F;&#x89D2;&#x5EA6;</span></span><br><span class="line">    cv2.ellipse(vis, track_box, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line"><span class="comment">#   &#x8F93;&#x51FA;&#x692D;&#x5706;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line">    a = str(track_box[<span class="number">0</span>][<span class="number">0</span>])+<span class="string">&quot; &quot;</span>+str(track_box[<span class="number">0</span>][<span class="number">1</span>])+<span class="string">&quot; &quot;</span>+str(round(track_box[<span class="number">1</span>][<span class="number">0</span>],<span class="number">2</span>))\</span><br><span class="line">            +<span class="string">&quot; &quot;</span>+str(round(track_box[<span class="number">1</span>][<span class="number">1</span>],<span class="number">2</span>))+<span class="string">&quot; &quot;</span>+str(round(track_box[<span class="number">2</span>],<span class="number">2</span>))+<span class="string">&quot;\r\n&quot;</span></span><br><span class="line">    print( a)</span><br><span class="line">    <span class="keyword">except</span>: print( track_box)</span><br></pre></td></tr></table></figure></p><p><strong>&#x663E;&#x793A;&#x539F;&#x59CB;&#x56FE;&#x50CF;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cv2.imshow(<span class="string">&apos;camshift&apos;</span>, vis)</span><br></pre></td></tr></table></figure></p><p><strong>&#x8BBE;&#x5B9A;&#x63A7;&#x5236;&#x6309;&#x952E;</strong> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ch = <span class="number">0xFF</span> &amp; cv2.waitKey(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">if</span> ch == <span class="number">27</span>:</span><br><span class="line">    <span class="keyword">break</span>               <span class="comment">#ESC=&#x9000;&#x51FA;</span></span><br></pre></td></tr></table></figure></p><p><strong>&#x622A;&#x56FE;</strong> &#x5728;&#x524D;&#x4E24;&#x5F20;&#x56FE;&#x4E2D;&#xFF0C;&#x6211;&#x628A;&#x6211;&#x81EA;&#x5DF1;&#x6263;&#x6389;&#x4E86;&#x3002;<br><img src="/posts/113ef49f/&#x6240;&#x6709;&#x7A97;&#x53E3;.jpg"> &#x7B2C;&#x4E00;&#x6392;&#x5DE6;&#x59CB;&#xFF1A;&#x539F;&#x59CB;&#x56FE;&#xFF0C;&#x8F6C;&#x4E3A;HSV&#x8272;&#x57DF;&#x540E;&#x7684;&#x56FE;&#xFF0C;&#x8FDB;&#x884C;&#x63A9;&#x6A21;&#x540E;&#x7684;&#x56FE;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6211;&#x7684;&#x4E5F;&#x5728;&#x989C;&#x8272;&#x8303;&#x56F4;&#x5185;&#x3002;&#x57FA;&#x51C6;&#x56FE;&#x8FDB;&#x884C;&#x63A9;&#x6A21;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF08;&#x5168;&#x767D;&#xFF09;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x6392;&#x5DE6;&#x59CB;&#xFF1A;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x53D6;&#x53CD;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6839;&#x636E;&#x76F4;&#x65B9;&#x56FE;&#x7B97;&#x51FA;&#x7684;&#x6982;&#x7387;&#x56FE;1&#xFF0C;&#x6982;&#x7387;&#x56FE;1&#x548C;&#x63A9;&#x6A21;&#x540E;&#x7684;&#x56FE;&#xFF0C;&#x5373;maks&#x8FDB;&#x884C;&#x76F8;&#x4E0E;&#x540E;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x6982;&#x7387;&#x56FE;2&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6982;&#x7387;&#x56FE;2&#x5C31;&#x6BD4;&#x8F83;&#x7CBE;&#x786E;&#x4E86;&#x3002;</p><h1 id="&#x56DE;&#x7B54;&#x95EE;&#x9898;">&#x56DE;&#x7B54;&#x95EE;&#x9898;</h1><p><strong>&#x4EC0;&#x4E48;&#x662F;&#x56FE;&#x50CF;&#x7684;&#x76F4;&#x65B9;&#x56FE;&#xFF1F;</strong> &#x56FE;&#x50CF;&#x76F4;&#x65B9;&#x56FE;&#xFF08;&#x82F1;&#x8BED;&#xFF1A;Image Histogram&#xFF09;&#x662F;&#x7528;&#x4EE5;&#x8868;&#x793A;&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x4E2D;&#x4EAE;&#x5EA6;&#x5206;&#x5E03;&#x7684;&#x76F4;&#x65B9;&#x56FE;&#xFF0C;&#x6807;&#x7ED8;&#x4E86;&#x56FE;&#x50CF;&#x4E2D;&#x6BCF;&#x4E2A;&#x4EAE;&#x5EA6;&#x503C;&#x7684;&#x50CF;&#x7D20;&#x6570;&#x3002;&#x53EF;&#x4EE5;&#x501F;&#x52A9;&#x89C2;&#x5BDF;&#x8BE5;&#x76F4;&#x65B9;&#x56FE;&#x4E86;&#x89E3;&#x9700;&#x8981;&#x5982;&#x4F55;&#x8C03;&#x6574;&#x4EAE;&#x5EA6;&#x5206;&#x5E03;&#x3002;&#x8FD9;&#x79CD;&#x76F4;&#x65B9;&#x56FE;&#x4E2D;&#xFF0C;&#x6A2A;&#x5750;&#x6807;&#x7684;&#x5DE6;&#x4FA7;&#x4E3A;&#x7EAF;&#x9ED1;&#x3001;&#x8F83;&#x6697;&#x7684;&#x533A;&#x57DF;&#xFF0C;&#x800C;&#x53F3;&#x4FA7;&#x4E3A;&#x8F83;&#x4EAE;&#x3001;&#x7EAF;&#x767D;&#x7684;&#x533A;&#x57DF;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E00;&#x5F20;&#x8F83;&#x6697;&#x56FE;&#x7247;&#x7684;&#x56FE;&#x50CF;&#x76F4;&#x65B9;&#x56FE;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x591A;&#x96C6;&#x4E2D;&#x4E8E;&#x5DE6;&#x4FA7;&#x548C;&#x4E2D;&#x95F4;&#x90E8;&#x5206;&#xFF1B;&#x800C;&#x6574;&#x4F53;&#x660E;&#x4EAE;&#x3001;&#x53EA;&#x6709;&#x5C11;&#x91CF;&#x9634;&#x5F71;&#x7684;&#x56FE;&#x50CF;&#x5219;&#x76F8;&#x53CD;&#x3002;</p><p>&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x9886;&#x57DF;&#x5E38;&#x501F;&#x52A9;&#x56FE;&#x50CF;&#x76F4;&#x65B9;&#x56FE;&#x6765;&#x5B9E;&#x73B0;&#x56FE;&#x50CF;&#x7684;&#x4E8C;&#x503C;&#x5316;&#x3002;</p><p><strong>HSV &#x7A7A;&#x95F4;&#x901A;&#x8FC7;&#x54EA;&#x51E0;&#x4E2A;&#x7EF4;&#x5EA6;&#x8868;&#x8FBE;&#x989C;&#x8272;&#x5206;&#x5E03;</strong> HSV &#x4E3A;&#x8272;&#x76F8;&#xFF0C;&#x9971;&#x548C;&#x5EA6;&#xFF0C;&#x660E;&#x5EA6;&#x3002;&#x901A;&#x8FC7;&#x4ED6;&#x4EEC;&#x6765;&#x8868;&#x8FBE;&#x989C;&#x8272;&#x5206;&#x5E03;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 智能机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 实验报告 </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 物体检测 </tag>
            
            <tag> 掩模 </tag>
            
            <tag> 颜色空间 </tag>
            
            <tag> 直方图 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>智能机器人  HW2</title>
      <link href="//posts/7b01dffb/"/>
      <url>//posts/7b01dffb/</url>
      <content type="html"><![CDATA[<p>&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;&#x7B2C;&#x4E8C;&#x6B21;&#x4F5C;&#x4E1A;<br><a id="more"></a></p><h1 id="q1">Q1</h1><h2 id="&#x7ED9;&#x51FA;linux&#x7CFB;&#x7EDF;&#x5B89;&#x88C5;&#x540E;&#x7684;&#x622A;&#x56FE;">&#x7ED9;&#x51FA;Linux&#x7CFB;&#x7EDF;&#x5B89;&#x88C5;&#x540E;&#x7684;&#x622A;&#x56FE;</h2><figure><img src="/posts/7b01dffb/Q1.png" alt="&#x5B89;&#x88C5;&#x622A;&#x56FE;"><figcaption>&#x5B89;&#x88C5;&#x622A;&#x56FE;</figcaption></figure><h2 id="&#x7ED9;&#x51FA;&#x7CFB;&#x7EDF;&#x6839;&#x76EE;&#x5F55;&#x7684;&#x529F;&#x80FD;&#x8BF4;&#x660E;">&#x7ED9;&#x51FA;&#x7CFB;&#x7EDF;&#x6839;&#x76EE;&#x5F55;&#x7684;&#x529F;&#x80FD;&#x8BF4;&#x660E;</h2><ol start="0" type="1"><li><strong>/</strong> &#x4E3A;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x76EE;&#x5F55;&#x90FD;&#x6302;&#x5728;&#x5176;&#x4E0B;&#x3002;</li><li><strong>/bin</strong> &#x5305;&#x542B;&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;&#xFF0C;&#x5373;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x3002;&#x4ED6;&#x4EEC;&#x662F;&#x5F15;&#x5BFC;&#x542F;&#x52A8;&#x6240;&#x9700;&#x7684;&#x547D;&#x4EE4;&#x6216;&#x8005;&#x666E;&#x901A;&#x7528;&#x6237;&#x4F1A;&#x4F7F;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x3002;bin&#x662F;binary&#x7684;&#x7B80;&#x79F0;&#x3002;&#x6545;&#x8BE5;&#x76EE;&#x5F55;&#x5B58;&#x653E;&#x7684;&#x90FD;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x3002;</li><li><strong>/boot</strong> &#x8BE5;&#x76EE;&#x5F55;&#x5B58;&#x653E;&#x5F15;&#x5BFC;&#x52A0;&#x8F7D;&#x5668;(bootstraploader)&#x4F7F;&#x7528;&#x7684;&#x6587;&#x4EF6;&#x3002;</li><li><strong>/cdrom</strong> &#x8BE5;&#x76EE;&#x5F55;&#x5728;&#x521A;&#x5B89;&#x88C5;&#x7CFB;&#x7EDF;&#x7684;&#x65F6;&#x5019;&#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x5149;&#x9A71;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x6302;&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;</li><li><strong>/dev</strong>&#x5B58;&#x653E;&#x8BBE;&#x5907;&#x6587;&#x4EF6;&#xFF0C;&#x5373;&#x8BBE;&#x5907;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x6765;&#x8BBF;&#x95EE;&#x5916;&#x8BBE;&#x3002;</li><li><strong>/etc</strong>&#x8BE5;&#x76EE;&#x5F55;&#x5B58;&#x653E;&#x5404;&#x79CD;&#x7CFB;&#x7EDF;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;&#x4F8B;&#x5982;&#xFF1A; ./etc/passwd &#x5B58;&#x653E;&#x7528;&#x6237;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x57DF;&#x7ED9;&#x51FA;&#x4E86;&#x7528;&#x6237;&#x540D;&#x3001;&#x771F;&#x5B9E;&#x59D3;&#x540D;&#x3001;&#x7528;&#x6237;&#x8D77;&#x59CB;&#x76EE;&#x5F55;&#x3001;&#x52A0;&#x5BC6;&#x53E3;&#x4EE4;&#x548C;&#x7528;&#x6237;&#x7684;&#x5176;&#x4ED6;&#x4FE1;&#x606F;&#xFF1B; /etc/group &#x8BF4;&#x660E;&#x7EC4;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5305;&#x62EC;&#x7EC4;&#x7684;&#x5404;&#x79CD;&#x6570;&#x636E;&#xFF1B; /etc/fstab &#x5B9A;&#x542F;&#x52A8;&#x65F6;&#x9700;&#x8981;&#x81EA;&#x52A8;&#x5B89;&#x88C5;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x5217;&#x8868;&#x3002;&#x4E5F;&#x5305;&#x62EC;&#x7528;swapon -a&#x542F;&#x7528;&#x7684;swap&#x533A;&#x7684;&#x4FE1;&#x606F;&#x3002;</li><li><strong>/home</strong>&#x7528;&#x6237;&#x4E3B;&#x76EE;&#x5F55;&#xFF0C;&#x4EE5;&#x767B;&#x5F55;&#x7528;&#x6237;&#x540D;&#x4F5C;&#x4E3A;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x7684;&#x5404;&#x6587;&#x4EF6;&#x5939;&#x3002;</li><li><strong>/lib</strong>&#x5B58;&#x653E;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x6240;&#x9700;&#x8981;&#x7684;&#x5E93;&#x6587;&#x4EF6;&#x3002;</li><li><strong>/media</strong>&#x5A92;&#x4F53;&#x6587;&#x4EF6;&#x3002;</li><li><strong>/mnt</strong>&#x5B89;&#x88C5;&#x8F6F;&#x76D8;&#xFF0C;&#x5149;&#x76D8;&#xFF0C;u&#x76D8;&#x7684;&#x6302;&#x8F7D;&#x70B9;</li><li><strong>/opt</strong>&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x5B58;&#x653E;&#x90A3;&#x4E9B;&#x53EF;&#x9009;&#x7684;&#x7A0B;&#x5E8F;&#x3002;&#x6BD4;&#x5982;FireFox&#x7684;&#x6D4B;&#x8BD5;&#x7248;&#x3002;</li><li><strong>/proc</strong>&#x662F;&#x4E00;&#x4E2A;&#x865A;&#x62DF;&#x76EE;&#x5F55;&#xFF0C;&#x5B58;&#x653E;&#x5F53;&#x524D;&#x5185;&#x5B58;&#x7684;&#x6620;&#x50CF;&#xFF0C;&#x7531;&#x5185;&#x6838;&#x81EA;&#x52A8;&#x4EA7;&#x751F;</li><li><strong>/root</strong>&#x8D85;&#x7EA7;&#x7528;&#x6237;&#x7684;&#x4E2A;&#x4EBA;&#x4E3B;&#x76EE;&#x5F55;</li><li><strong>/run</strong>&#x662F;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x5B58;&#x50A8;&#x7CFB;&#x7EDF;&#x542F;&#x52A8;&#x4EE5;&#x6765;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x5F53;&#x7CFB;&#x7EDF;&#x91CD;&#x542F;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x5E94;&#x8BE5;&#x88AB;&#x5220;&#x6389;&#x6216;&#x6E05;&#x9664;&#x3002;</li><li><strong>/sbin</strong>&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x547D;&#x4EE4;&#xFF0C;&#x5B58;&#x653E;&#x7684;&#x662F;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x5458;&#x4F7F;&#x7528;&#x7684;&#x7BA1;&#x7406;&#x7A0B;&#x5E8F;&#x3002;</li><li><strong>/snap</strong>&#x5B58;&#x50A8;&#x7684;&#x662F;snap&#x7A0B;&#x5E8F;&#x7684;&#x8BBE;&#x7F6E;&#x4FE1;&#x606F;&#x3002;</li><li><strong>/srv</strong>&quot;service&quot;&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x662F;&#x4E00;&#x4E9B;&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x8FD9;&#x4E9B;&#x670D;&#x52A1;&#x6240;&#x9700;&#x8981;&#x53D6;&#x7528;&#x7684;&#x6570;&#x636E;&#x76EE;&#x5F55;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x670D;&#x52A1;&#x4F8B;&#x5982; WWW&#xFF0C;FTP &#x7B49;&#x3002;</li><li><strong>/sys</strong>&#x865A;&#x62DF;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x4E3B;&#x8981;&#x8BB0;&#x5F55;&#x4E0E;&#x5185;&#x6838;&#x76F8;&#x5173;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5305;&#x62EC;&#x76EE;&#x524D;&#x5DF2;&#x52A0;&#x8F7D;&#x7684;&#x5185;&#x6838;&#x6A21;&#x5757;&#x4E0E;&#x5185;&#x6838;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x786C;&#x4EF6;&#x8BBE;&#x5907;&#x4FE1;&#x606F;&#xFF0C;&#x540C;&#x6837;&#x4E0D;&#x5360;&#x786C;&#x76D8;&#x5BB9;&#x91CF;&#x3002;</li><li><strong>/tmp</strong>&#x4E00;&#x822C;&#x7528;&#x6237;&#x6216;&#x8005;&#x662F;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x6682;&#x65F6;&#x653E;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x5730;&#x65B9;&#x3002;</li><li><strong>/usr</strong>&#x5168;&#x7A0B;&#x4E3A;UNIX Software Resource. &#x201C;Unix &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8F6F;&#x4EF6;&#x8D44;&#x6E90;&#x201D; &#x6240;&#x653E;&#x7F6E;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4E0D;&#x662F;&#x7528;&#x6237;&#x6570;&#x636E;&#x3002;FHS &#x5EFA;&#x8BAE;&#x6240;&#x6709;&#x7684;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x8005;&#x5E94;&#x8BE5;&#x5C06;&#x4ED6;&#x4EEC;&#x7684;&#x6570;&#x636E;&#x5408;&#x7406;&#x7684;&#x653E;&#x7F6E;&#x5230;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x5B50;&#x76EE;&#x5F55;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x81EA;&#x884C;&#x65B0;&#x5EFA;&#x8BE5;&#x8F6F;&#x4EF6;&#x81EA;&#x5DF1;&#x72EC;&#x7ACB;&#x7684;&#x76EE;&#x5F55;&#x3002;</li><li><strong>/var</strong>&#x4E3B;&#x8981;&#x5B58;&#x653E;&#x5E38;&#x6001;&#x6027;&#x53D8;&#x52A8;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5305;&#x62EC;&#x7F13;&#x5B58;&#xFF0C;&#x767B;&#x5F55;&#x6587;&#x4EF6;&#x4EE5;&#x53CA;&#x8F6F;&#x4EF6;&#x8FD0;&#x884C;&#x6240;&#x4EA7;&#x751F;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x7CFB;&#x7EDF;&#x4E00;&#x822C;&#x8FD0;&#x884C;&#x65F6;&#x8981;&#x6539;&#x53D8;&#x7684;&#x6570;&#x636E;&#x3002;&#x901A;&#x5E38;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55;&#x7684;&#x5927;&#x5C0F;&#x662F;&#x8981;&#x7ECF;&#x5E38;&#x53D8;&#x5316;&#x6216;&#x6269;&#x5145;&#x7684;&#x3002;</li></ol><h1 id="q2">Q2</h1><p><a href="https://qcloud.coding.net/s/94209cf9-4605-4cdb-bf39-60df3032b19e" target="_blank" rel="noopener">&#x5B8C;&#x6574;&#x6587;&#x4EF6;</a></p><h2 id="&#x6587;&#x4EF6;&#x7ED3;&#x6784;">&#x6587;&#x4EF6;&#x7ED3;&#x6784;</h2><p>&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x5305;&#x62EC;&#x4E09;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF1A;include&#x3001;src&#x3001;build&#xFF0C;&#x5176;&#x4E2D;build&#x4E3A;&#x7A7A;&#x3002;&#x53E6;&#x6709;&#x4E00;&#x4E2A;CMakeLists.txt&#x3002;</p><p><strong>./CMakeLists.txt</strong>&#x5185;&#x5BB9;&#xFF1A; <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BBE;&#x5B9A;&#x5DE5;&#x7A0B;&#x540D;&#x5B57;</span></span><br><span class="line"><span class="keyword">PROJECT</span>(Robot_HW2)</span><br><span class="line"><span class="comment">#&#x6DFB;&#x52A0;&#x5B50;&#x76EE;&#x5F55;</span></span><br><span class="line"><span class="keyword">ADD_SUBDIRECTORY</span>(src <span class="keyword">include</span>)</span><br></pre></td></tr></table></figure></p><p><strong>/include</strong>&#x6587;&#x4EF6;&#x5939;&#x5185;&#x5BB9;&#xFF1B;&#x6709;&#x4E00;&#x4E2A;hello.h&#x3002;</p><p>./include/hello.h&#x5185;&#x5BB9;&#x4E3A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></p><p><strong>/src</strong>&#x6587;&#x4EF6;&#x5939;&#x5185;&#x5BB9;&#xFF1A;&#x4E24;&#x4E2A;.c&#x6587;&#x4EF6;&#xFF0C;&#x4E00;&#x4E2A;CMakeLists.txt&#x3002; ./src/CMakeLists.txt&#x7684;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A; <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">PROJECT</span>(Robot_HW2)</span><br><span class="line"><span class="comment">#&#x53C2;&#x8003;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#xFF0C;&#x7F16;&#x8BD1; include/hello.h &#x548C; src/hello.c &#x6784;&#x6210; libhello.so &#x5E93;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x6DFB;&#x52A0;include&#x7684;&#x5730;&#x5740;</span></span><br><span class="line"><span class="keyword">INCLUDE_DIRECTORIES</span>(<span class="variable">${CMAKE_SOURCE_DIR}</span>/<span class="keyword">include</span>)</span><br><span class="line"><span class="keyword">SET</span>(LIBHELLO_SRC hello.c)</span><br><span class="line"><span class="keyword">ADD_LIBRARY</span>(hello SHARED <span class="variable">${LIBHELLO_SRC}</span>)</span><br><span class="line"><span class="comment">#&#x8BBE;&#x7F6E;&#x5B58;&#x653E;&#x5730;&#x5740;</span></span><br><span class="line"><span class="keyword">SET</span>(LIBRARY_OUTPUT_PATH <span class="variable">${CMAKE_SOURCE_DIR}</span>/lib)</span><br><span class="line"><span class="comment">#&#x2F42;&#x4EF6; useHello.c &#x4E2D;&#x542B;&#x6709;&#x2F00;&#x4E2A; main &#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x7F16;&#x8BD1;&#x6210;&#x2F00;&#x4E2A;&#x53EF;&#x6267;&#x2F8F;&#x2F42;&#x4EF6;&#xFF0C;&#x540D;&#x4E3A;&#x201C;sayhello&#x201D;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;</span></span><br><span class="line"><span class="keyword">ADD_EXECUTABLE</span>(sayhello useHello.c hello.c)</span><br><span class="line"><span class="comment">#&#x8BBE;&#x7F6E;&#x5B58;&#x653E;&#x5730;&#x5740;</span></span><br><span class="line"><span class="keyword">SET</span>(EXECUTABLE_OUTPUT_PATH <span class="variable">${CMAKE_SOURCE_DIR}</span>/bin)</span><br><span class="line"><span class="comment">#&#x5B89;&#x88C5;</span></span><br><span class="line"><span class="comment">#hello.h &#x653E;&#x2F84;/usr/local/include/&#x4E0B;&#xFF0C;&#x5C06; libhello.so &#x653E;&#x2F84;/usr/local/lib/&#x4E0B;</span></span><br><span class="line"><span class="comment">#CMAKE_INSTALL_PREFIX &#x7684;&#x9ED8;&#x8BA4;&#x5B9A;&#x4E49;&#x662F;/usr/local</span></span><br><span class="line"><span class="keyword">INSTALL</span>(FILES <span class="variable">${CMAKE_SOURCE_DIR}</span>/<span class="keyword">include</span>/hello.h DESTINATION <span class="keyword">include</span>)</span><br><span class="line"><span class="keyword">INSTALL</span>(TARGETS hello LIBRARY DESTINATION /usr/local/lib)</span><br></pre></td></tr></table></figure></p><p>./src/hello.c&#x7684;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;hello.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello\n&quot;</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>./src/useHello.c&#x7684;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;hello.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( <span class="keyword">int</span> argc, <span class="keyword">char</span>** argv )</span> </span>{</span><br><span class="line">  sayHello();</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x8FD0;&#x884C;&#x53CA;&#x7ED3;&#x679C;">&#x8FD0;&#x884C;&#x53CA;&#x7ED3;&#x679C;</h2><p>&#x5728;build&#x76EE;&#x5F55;&#x4E0B;&#x6267;&#x884C;&#x547D;&#x4EE4; <figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake ..</span><br></pre></td></tr></table></figure></p><p>&#x7ED3;&#x679C;&#x5982;&#x56FE; <img src="/posts/7b01dffb/cmake.jpg"></p><p>&#x6267;&#x884C; <figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure></p><p>&#x4E4B;&#x540E;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x56FE; <img src="/posts/7b01dffb/install.jpg"></p><p>&#x67E5;&#x770B;&#x5728;./lib&#x4E0B;&#x751F;&#x6210;&#x7684;libhello.so&#x6587;&#x4EF6; <img src="/posts/7b01dffb/lib1.jpg"></p><p>&#x8FD0;&#x884C;&#x5728;./bin&#x4E0B;&#x7684;sayhello&#x6587;&#x4EF6; <img src="/posts/7b01dffb/bin.jpg"></p><p>&#x67E5;&#x770B;&#x88AB;&#x5B89;&#x88C5;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x548C;&#x5E93;&#x6587;&#x4EF6; <img src="/posts/7b01dffb/lib2.jpg"></p><h1 id="q3">Q3</h1><p><strong>&#x7ED9;&#x51FA;&#x9F50;&#x6B21;&#x5750;&#x6807;&#x77E9;&#x9635;&#x3001;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x3001;&#x6B27;&#x62C9;&#x89D2;&#x3001;&#x56DB;&#x5143;&#x6570;&#x8FD9;&#x56DB;&#x4E2A;&#x5E38;&#x7528;&#x59FF;&#x6001;&#x63CF;&#x8FF0;&#x53D8;&#x91CF;&#x7684;&#x6570;&#x636E;&#x5B9A;&#x4E49;</strong></p><h2 id="&#x65CB;&#x8F6C;&#x5411;&#x91CF;">&#x65CB;&#x8F6C;&#x5411;&#x91CF;</h2><p>&#x65B9;&#x5411;&#x4E3A;&#x65CB;&#x8F6C;&#x8F74;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;&#x65CB;&#x8F6C;&#x8FC7;&#x7684;&#x89D2;&#x5EA6;&#x3002; &#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF1A;AngleAxis&#x3002;&#x7531;&#x4E8E;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x662F;double&#xFF0C;&#x6240;&#x4EE5;&#x63D0;&#x4F9B;typedef&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> AngleAxis&lt;<span class="keyword">double</span>&gt; AngleAxisd;</span><br></pre></td></tr></table></figure></p><p>&#x5BF9;&#x4E8E;AngleAxis&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AngleAxis</span> :</span> <span class="keyword">public</span> RotationBase&lt;AngleAxis&lt;_Scalar&gt;,<span class="number">3</span>&gt;</span><br><span class="line">{</span><br><span class="line">  <span class="keyword">typedef</span> RotationBase&lt;AngleAxis&lt;_Scalar&gt;,<span class="number">3</span>&gt; Base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">  <span class="keyword">using</span> Base::<span class="keyword">operator</span>*;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">enum</span> { Dim = <span class="number">3</span> };</span><br><span class="line">  <span class="comment">/** the scalar type of the coefficients */</span></span><br><span class="line">  <span class="keyword">typedef</span> _Scalar Scalar;</span><br><span class="line">  <span class="keyword">typedef</span> Matrix&lt;Scalar,<span class="number">3</span>,<span class="number">3</span>&gt; Matrix3;</span><br><span class="line">  <span class="keyword">typedef</span> Matrix&lt;Scalar,<span class="number">3</span>,<span class="number">1</span>&gt; Vector3;</span><br><span class="line">  <span class="keyword">typedef</span> Quaternion&lt;Scalar&gt; QuaternionType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"></span><br><span class="line">  Vector3 m_axis;</span><br><span class="line">  Scalar m_angle;</span><br><span class="line"></span><br><span class="line">....</span><br></pre></td></tr></table></figure></p><p>&#x7701;&#x7565;&#x8FDB;&#x4E00;&#x6B65;&#x9012;&#x5F52;&#x67E5;&#x770B;&#x5143;&#x7D20;&#x5185;&#x5BB9;&#x3002;</p><p>&#x4EE5;&#x4F8B;&#x7A0B;&#x4E2D;&#x7684; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Eigen::AngleAxisd rotation_vector(M_PI / 4, Eigen::Vector3d(0, 0, 1));</span><br><span class="line">     <span class="comment">//&#x6CBF; Z &#x8F74;&#x65CB;&#x8F6C; 45 &#x5EA6;</span></span><br></pre></td></tr></table></figure></p><p>&#x4E3A;&#x4F8B;&#x3002;</p><p>&#x6267;&#x884C;&#x540E;&#xFF0C;&#x5728;m_angle&#x4E2D;&#x5B58;&#x653E;&#x7684;&#x662F;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x4F8B;&#x7A0B;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x662F;M_PI/4&#xFF0C;&#x5373;&#x65CB;&#x8F6C;&#x4E86;45&#x5EA6;&#x3002;<br>&#x65CB;&#x8F6C;&#x8F74;&#x662F;(0,0,1)&#xFF0C;&#x5373;Z&#x8F74;&#x3002;&#x5B58;&#x653E;&#x5728;m_axis-&gt;m_storage-&gt;m_data&#x4E2D;&#x3002;</p><p>&#x901A;&#x8FC7;&#x8C03;&#x7528;.matrix()&#x51FD;&#x6570;&#xFF0C;&#x628A;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x8F6C;&#x4E3A;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#xFF0C;&#x7531;&#x4E8E;&#x53EA;&#x662F;&#x5355;&#x7EAF;&#x7684;&#x65CB;&#x8F6C;&#xFF0C;&#x4E0D;&#x6D89;&#x53CA;&#x5E73;&#x79FB;&#x53D8;&#x6362;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x7ED5;Z&#x8F74;&#x65CB;&#x8F6C;&#x7684;&#x516C;&#x5F0F;&#x662F;&#xFF1A; <img src="/posts/7b01dffb/&#x7ED5;z&#x65CB;&#x8F6C;.jpg"></p><p>&#x8FD9;&#x91CC;<span class="math inline">\(\theta=45&#xB0;\)</span>&#x3002;&#x56E0;&#x6B64;&#x7ED3;&#x679C;&#x5982;&#x56FE;&#xFF1A; <img src="/posts/7b01dffb/&#x65CB;&#x8F6C;&#x77E9;&#x9635;.jpg"></p><p>&#x65CB;&#x8F6C;&#x65B9;&#x5411;&#x7684;&#x5224;&#x5B9A;&#xFF1A;&#x53F3;&#x624B;&#x5927;&#x62C7;&#x6307;&#x4E3A;&#x8F74;&#xFF0C;&#x56DB;&#x4E2A;&#x624B;&#x6307;&#x5934;&#x6307;&#x5411;&#x7684;&#x65B9;&#x5411;&#x4E3A;&#x65CB;&#x8F6C;&#x65B9;&#x5411;&#xFF08;&#x6211;&#x6CA1;&#x67E5;&#x5230;&#x8FD9;&#x4E2A;&#x5B9A;&#x7406;&#x53EB;&#x4EC0;&#x4E48;&#xFF09;&#x3002;<br>&#x5373;&#xFF0C;&#x6240;&#x7ED5;&#x7684;&#x65CB;&#x8F6C;&#x8F74;&#x662F;&#x6709;&#x65B9;&#x5411;&#x7684;&#x3002;</p><h2 id="&#x6B27;&#x62C9;&#x89D2;">&#x6B27;&#x62C9;&#x89D2;</h2><p>&#x5C06;&#x65CB;&#x8F6C;&#x5206;&#x89E3;&#x4E3A;&#x4E09;&#x4E2A;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x8F6C;&#x52A8;&#xFF0C;&#x6700;&#x5E38;&#x7528;&#x7684;&#x662F;ZYX&#x987A;&#x5E8F;&#xFF0C;&#x5373;roll pitch yaw&#x987A;&#x5E8F;&#x3002;</p><p>&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x5B9A;&#x4E49;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> Eigen::Matrix&lt;<span class="keyword">double</span>,<span class="number">3</span>,<span class="number">1</span>&gt; Eigen::Vector3d</span><br></pre></td></tr></table></figure></p><p>&#x5373;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x90FD;&#x662F;double&#x7C7B;&#x578B;&#xFF0C;3*1&#x7684;&#x77E9;&#x9635;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rotation_matrix.eulerAngles(<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>&#x662F;&#x5C06;&#x4E00;&#x4E2A;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x6309;Z-Y-X&#x7684;&#x987A;&#x5E8F;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;&#x6B27;&#x62C9;&#x89D2;&#x3002;</p><p>&#x77E9;&#x9635;&#x4E2D;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x8868;&#x793A;&#x5728;&#x8BE5;&#x65CB;&#x8F6C;&#x8F74;&#x4E0A;&#x65CB;&#x8F6C;&#x7684;&#x89D2;&#x5EA6;&#xFF0C;&#x91C7;&#x7528;&#x5F27;&#x5EA6;&#x5236;&#x3002;&#x5373;180&#xB0;=&#x3C0;&#x3002;</p><h2 id="&#x56DB;&#x5143;&#x6570;">&#x56DB;&#x5143;&#x6570;</h2><p>&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF1A;Quaternion&#x3002;&#x7531;&#x4E8E;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x662F;double&#xFF0C;&#x6240;&#x4EE5;&#x63D0;&#x4F9B;typedef&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> Quaternion&lt;<span class="keyword">double</span>&gt; Quaterniond;</span><br></pre></td></tr></table></figure></p><p>&#x5BF9;&#x4E8E;Quaternion&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Quaternion</span> :</span> <span class="keyword">public</span> QuaternionBase&lt;Quaternion&lt;_Scalar,_Options&gt; &gt;</span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="keyword">typedef</span> QuaternionBase&lt;Quaternion&lt;_Scalar,_Options&gt; &gt; Base;</span><br><span class="line">  <span class="keyword">enum</span> { NeedsAlignment = internal::traits&lt;Quaternion&gt;::Alignment&gt;<span class="number">0</span> };</span><br><span class="line"></span><br><span class="line">  <span class="keyword">typedef</span> _Scalar Scalar;</span><br><span class="line"></span><br><span class="line">  EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Quaternion)</span><br><span class="line">  <span class="keyword">using</span> Base::<span class="keyword">operator</span>*=;</span><br><span class="line"></span><br><span class="line">....</span><br></pre></td></tr></table></figure></p><p>&#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x628A;&#x4E00;&#x4E2A;&#x4E09;&#x7EF4;&#x65CB;&#x8F6C;&#x5411;&#x91CF;/&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x8D4B;&#x503C;&#x7ED9;&#x56DB;&#x5143;&#x6570;&#x3002;&#x5373;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x628A;AngleAxis&#x8D4B;&#x503C;&#x7ED9;&#x56DB;&#x5143;&#x6570;&#xFF0C;&#x53CD;&#x4E4B;&#x4EA6;&#x7136;</span></span><br><span class="line">Eigen::Quaterniond q = Eigen::Quaterniond(rotation_vector);</span><br><span class="line"><span class="comment">// &#x4E5F;&#x53EF;&#x4EE5;&#x628A;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x8D4B;&#x7ED9;&#x5B83;</span></span><br><span class="line">q = Eigen::Quaterniond(rotation_matrix);</span><br></pre></td></tr></table></figure></p><p>&#x56DB;&#x5143;&#x6570;&#x8F6C;&#x4E09;&#x7EF4;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x7684;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A; <img src="/posts/7b01dffb/&#x56DB;&#x5143;&#x6570;1.jpg"> &#x4E09;&#x7EF4;&#x77E9;&#x9635;&#x8F6C;&#x56DB;&#x5143;&#x6570;&#x7684;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A; <img src="/posts/7b01dffb/&#x56DB;&#x5143;&#x6570;2.jpg"></p><p>&#x4F7F;&#x7528;&#x56DB;&#x5143;&#x6570;&#x53D8;&#x6362;&#x4E00;&#x4E2A;&#x4E09;&#x7EF4;&#x5411;&#x91CF;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x91CD;&#x8F7D;&#x7684;&#x4E58;&#x6CD5;&#x5373;&#x53EF;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x4F7F;&#x7528;&#x56DB;&#x5143;&#x6570;&#x65CB;&#x8F6C;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x4F7F;&#x7528;&#x91CD;&#x8F7D;&#x7684;&#x4E58;&#x6CD5;&#x5373;&#x53EF;</span></span><br><span class="line">v_rotated = q * v; <span class="comment">// &#x6CE8;&#x610F;&#x6570;&#x5B66;&#x4E0A;&#x662F;qvq^{-1}</span></span><br></pre></td></tr></table></figure></p><p>&#x5176;&#x4E2D;v&#x662F;&#x4E00;&#x4E2A;&#x4E09;&#x7EF4;&#x5411;&#x91CF;(1,0,0)&#xFF0C;&#x5373;&#x5B9A;&#x4E49;&#x4E3A;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Eigen::<span class="function">Vector3d <span class="title">v</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span></span>;</span><br></pre></td></tr></table></figure></p><h2 id="&#x9F50;&#x6B21;&#x5750;&#x6807;&#x53D8;&#x6362;&#x77E9;&#x9635;">&#x9F50;&#x6B21;&#x5750;&#x6807;&#x53D8;&#x6362;&#x77E9;&#x9635;</h2><p>&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x5B9A;&#x4E49;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> Eigen::Transform&lt;<span class="keyword">double</span>,<span class="number">3</span>,<span class="number">1</span>&gt; Eigen::Isometry3d</span><br></pre></td></tr></table></figure></p><p>Transform&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> _Scalar, <span class="keyword">int</span> _Dim, <span class="keyword">int</span> _Mode, <span class="keyword">int</span> _Options&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Transform</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF_VECTORIZABLE_FIXED_SIZE(_Scalar,</span><br><span class="line">  _Dim==Dynamic ? Dynamic : (_Dim+<span class="number">1</span>)*(_Dim+<span class="number">1</span>))</span><br><span class="line">  <span class="keyword">enum</span> {</span><br><span class="line">    Mode = _Mode,</span><br><span class="line">    Options = _Options,</span><br><span class="line">    Dim = _Dim,     <span class="comment">///&lt; space dimension in which the transformation holds</span></span><br><span class="line">    HDim = _Dim+<span class="number">1</span>,  <span class="comment">///&lt; size of a respective homogeneous vector</span></span><br><span class="line">    Rows = <span class="keyword">int</span>(Mode)==(AffineCompact) ? Dim : HDim</span><br><span class="line">  };</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"></span><br><span class="line">  MatrixType m_matrix;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>&#x521D;&#x59CB;&#x5316;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Eigen::Isometry3d T = Eigen::Isometry3d::Identity();</span><br></pre></td></tr></table></figure></p><p>&#x8BE5;&#x8BED;&#x53E5;&#x5C06;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x53D8;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x4E3B;&#x5BF9;&#x89D2;&#x7EBF;&#x4E3A;1&#xFF0C;&#x5176;&#x4F59;&#x4E3A;0&#x7684;4*4&#x7684;&#x77E9;&#x9635;&#x3002;</p><p>&#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">T.rotate(rotation_vector);          <span class="comment">// &#x6309;&#x7167;rotation_vector&#x8FDB;&#x884C;&#x65CB;&#x8F6C;</span></span><br><span class="line">T.pretranslate(Eigen::Vector3d(<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>));    <span class="comment">// &#x628A;&#x5E73;&#x79FB;&#x5411;&#x91CF;&#x8BBE;&#x6210;(1,3,4)</span></span><br></pre></td></tr></table></figure></p><p>&#x5373;&#x65CB;&#x8F6C;&#x8F74;&#x53CA;&#x65CB;&#x8F6C;&#x89D2;&#x7531;&#x4E4B;&#x524D;&#x7684;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x6240;&#x5B9A;&#x4E49;&#xFF0C;&#x8F74;&#x662F;Z&#x6B63;&#x65B9;&#x5411;&#xFF0C;&#x503C;&#x662F;&#x3C0;/4&#x3002;</p><p>&#x5E73;&#x79FB;&#x5411;&#x91CF;&#x8D4B;&#x503C;&#x4E3A;(1,3,4)&#x3002;</p><p>&#x5219;&#x8FDB;&#x884C;&#x53D8;&#x6362;&#x4E3A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Eigen::Vector3d v_transformed = T * v;         <span class="comment">// &#x76F8;&#x5F53;&#x4E8E;R*v+t</span></span><br></pre></td></tr></table></figure></p><h2 id="q3_2&#x8FD0;&#x884C;&#x622A;&#x56FE;">Q3_2&#x8FD0;&#x884C;&#x622A;&#x56FE;</h2><p><img src="/posts/7b01dffb/Q3_2.jpg"></p><h1 id="q4">Q4</h1><h2 id="&#x5185;&#x5B58;&#x5360;&#x7528;">&#x5185;&#x5B58;&#x5360;&#x7528;</h2><ul><li>3&#x7EF4;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#xFF1A;32&#x5B57;&#x8282;</li><li>&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#xFF1A;128&#x5B57;&#x8282;</li><li>&#x6B27;&#x62C9;&#x89D2;&#xFF1A;24&#x5B57;&#x8282;</li><li>&#x56DB;&#x5143;&#x6570;&#xFF1A;32&#x5B57;&#x8282;</li><li>&#x4E09;&#x7EF4;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#xFF1A;72&#x5B57;&#x8282;</li></ul><p>&#x5176;&#x4E2D;&#xFF0C;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x5747;&#x4E3A;double&#x7C7B;&#x578B;&#x3002;</p><h2 id="&#x52A8;&#x6001;&#x5E93;&#x4E0E;&#x9759;&#x6001;&#x5E93;&#x7684;&#x533A;&#x522B;">&#x52A8;&#x6001;&#x5E93;&#x4E0E;&#x9759;&#x6001;&#x5E93;&#x7684;&#x533A;&#x522B;</h2><p>&#x4E8C;&#x8005;&#x7684;&#x4E0D;&#x540C;&#x70B9;&#x5728;&#x4E8E;&#x4EE3;&#x7801;&#x88AB;&#x8F7D;&#x5165;&#x7684;&#x65F6;&#x523B;&#x4E0D;&#x540C;&#x3002;</p><p>&#x9759;&#x6001;&#x5E93;&#x5728;&#x7A0B;&#x5E8F;&#x7F16;&#x8BD1;&#x65F6;&#x4F1A;&#x88AB;&#x8FDE;&#x63A5;&#x5230;&#x76EE;&#x6807;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x5C06;&#x4E0D;&#x518D;&#x9700;&#x8981;&#x8BE5;&#x9759;&#x6001;&#x5E93;&#x3002;&#x52A8;&#x6001;&#x5E93;&#x5728;&#x7A0B;&#x5E8F;&#x7F16;&#x8BD1;&#x65F6;&#x5E76;&#x4E0D;&#x4F1A;&#x88AB;&#x8FDE;&#x63A5;&#x5230;&#x76EE;&#x6807;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x662F;&#x624D;&#x88AB;&#x8F7D;&#x5165;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x8FD8;&#x9700;&#x8981;&#x52A8;&#x6001;&#x5E93;&#x5B58;&#x5728;&#x3002;&#x5982;&#x679C;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5982;&#x679C;&#x8C03;&#x7528;&#x76F8;&#x540C;&#x7684;&#x52A8;&#x6001;&#x5E93;,&#x90A3;&#x4E48;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x53EA;&#x9700;&#x8981;&#x6709;&#x4E00;&#x4EFD;&#x8BE5;&#x52A8;&#x6001;&#x5E93;(&#x5171;&#x4EAB;&#x5E93;)&#x7684;&#x5B9E;&#x4F8B;&#x3002;</p><h2 id="main&#x7684;&#x4E24;&#x4E2A;&#x53C2;&#x6570;">main&#x7684;&#x4E24;&#x4E2A;&#x53C2;&#x6570;</h2><p>argc&#x548C;argv&#x7528;&#x4E8E;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x628A;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x4F20;&#x5165;&#x4E3B;&#x7A0B;&#x5E8F;&#x3002;&#x5176;&#x4E2D;ARG&#x662F;&#x6307;arguments&#xFF0C;&#x5373;&#x53C2;&#x6570;&#x3002;</p><p>int argc&#xFF1A;&#x82F1;&#x6587;&#x540D;&#x4E3A;arguments count(&#x53C2;&#x6570;&#x8BA1;&#x6570;) count of cmd line args&#xFF0C;&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#x4F20;&#x9001;&#x7ED9;main&#x51FD;&#x6570;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x603B;&#x4E2A;&#x6570;&#xFF0C;&#x5305;&#x62EC;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x540D;&#xFF0C;&#x5176;&#x4E2D;&#x5F53;argc=1&#x65F6;&#x8868;&#x793A;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x540D;&#x79F0;&#xFF0C;&#x6B64;&#x65F6;&#x5B58;&#x50A8;&#x5728;argv[0]&#x4E2D;&#x3002;</p><p>char **argv&#xFF1A;&#x82F1;&#x6587;&#x540D;&#x4E3A;arguments value/vector(&#x53C2;&#x6570;&#x503C;) pointer to table of cmd line args&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4;&#xFF0C;&#x7528;&#x6765;&#x5B58;&#x653E;&#x6307;&#x5411;&#x5B57;&#x7B26;&#x4E32;&#x53C2;&#x6570;&#x7684;&#x6307;&#x9488;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x957F;&#x5EA6;&#x4E3A;argc&#x3002;&#x6570;&#x7EC4;&#x4E0B;&#x6807;&#x4ECE;0&#x5F00;&#x59CB;,argv[argc]=NULL&#x3002;</p><p>argv[0] &#x6307;&#x5411;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x7684;&#x5168;&#x8DEF;&#x5F84;&#x540D;<br>argv[1] &#x6307;&#x5411;&#x7A0B;&#x5E8F;&#x5728;DOS&#x547D;&#x4EE4;&#x4E2D;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x540D;&#x540E;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;<br>argv[2] &#x6307;&#x5411;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x540D;&#x540E;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x3002;<br>......<br>argv[argc] &#x4E3A;NULL&#x3002;</p><h1 id="todo">TODO</h1><ol type="1"><li>&#x6DFB;&#x52A0;&#x4F5C;&#x4E1A;&#x8BE6;&#x7EC6;&#x8BF4;&#x660E;&#x3002;</li><li>&#x6DFB;&#x52A0;Cmake&#x5B66;&#x4E60;&#x6587;&#x6863;&#x3002;</li></ol>]]></content>
      
      <categories>
          
          <category> 智能机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 笔记 </tag>
            
            <tag> Eigen </tag>
            
            <tag> Cmake </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>numpy笔记</title>
      <link href="//posts/d169ac38/"/>
      <url>//posts/d169ac38/</url>
      <content type="html"><![CDATA[<p>numpy&#x7B14;&#x8BB0;&#x5408;&#x96C6;&#xFF0C;&#x5177;&#x4F53;&#x5C0F;&#x95EE;&#x9898;&#x4EE5;&#x4E00;&#x7EA7;&#x6807;&#x9898;&#x7ED9;&#x51FA;&#x3002; <a id="more"></a></p><h1 id="array">array</h1><p>array&#x662F;&#x5C06;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#x8F6C;&#x4E3A;numpy&#x7684;&#x6570;&#x7EC4;&#x3002;</p><p>&#x4F8B;&#x5B50;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>]])</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></p><p>&#x8F93;&#x51FA;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line">[<span class="number">2</span> <span class="number">3</span>]]</span><br></pre></td></tr></table></figure></p><h1 id="shape">shape</h1><p>shape&#x662F;&#x8F93;&#x51FA;&#x6570;&#x7EC4;&#x7684;&#x683C;&#x5F0F;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>]])</span><br><span class="line">print(a.shape)</span><br><span class="line">print(a.shape[<span class="number">0</span>])</span><br><span class="line">print(a.shape[<span class="number">1</span>])</span><br></pre></td></tr></table></figure></p><p>&#x8F93;&#x51FA; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></p><h1 id="ones">ones</h1><p>&#x6784;&#x5EFA;&#x5143;&#x7D20;&#x90FD;&#x662F;1&#x7684;&#x6570;&#x7EC4;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>]])</span><br><span class="line">b=np.ones((a.shape[<span class="number">0</span>],<span class="number">1</span>))</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure></p><p>&#x8F93;&#x51FA; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1.</span>]</span><br><span class="line"> [<span class="number">1.</span>]</span><br><span class="line">[<span class="number">1.</span>]]</span><br></pre></td></tr></table></figure></p><h1 id="concatenate">concatenate</h1><p>&#x5408;&#x5E76;&#x6570;&#x7EC4;&#xFF0C;&#x53C2;&#x6570;&#x8868;&#x793A;&#x5408;&#x5E76;&#x7684;&#x7EF4;&#x5EA6;&#x3002; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line">b = np.array([[<span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">c = np.concatenate((a, b), axis=<span class="number">0</span>)</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x628A;a,b&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x5728;&#x4E00;&#x7EF4;&#x4E0A;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#x3002;</p><p>&#x8F93;&#x51FA; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">5</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure></p><h1 id="argmax">argmax</h1><p>numpy.argmax(a, axis=None, out=None)</p><p>&#x8FD4;&#x56DE;&#x6CBF;&#x8F74;axis&#x6700;&#x5927;&#x503C;&#x7684;&#x7D22;&#x5F15;&#x3002;</p><p>&#x53C2;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><p>a : array_like &#x6570;&#x7EC4;</p><p>axis : int, &#x53EF;&#x9009; &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7D22;&#x5F15;&#x7684;&#x662F;&#x5E73;&#x94FA;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x5426;&#x5219;&#x6CBF;&#x6307;&#x5B9A;&#x7684;&#x8F74;&#x3002;</p><p>out : array, &#x53EF;&#x9009; &#x5982;&#x679C;&#x63D0;&#x4F9B;&#xFF0C;&#x7ED3;&#x679C;&#x4EE5;&#x5408;&#x9002;&#x7684;&#x5F62;&#x72B6;&#x548C;&#x7C7B;&#x578B;&#x88AB;&#x63D2;&#x5165;&#x5230;&#x6B64;&#x6570;&#x7EC4;&#x4E2D;&#x3002;</p><p>&#x8FD4;&#x56DE;&#x503C;</p><p>index_array : ndarray of ints</p><p>&#x7D22;&#x5F15;&#x6570;&#x7EC4;&#x3002;&#x5B83;&#x5177;&#x6709;&#x4E0E;a.shape&#x76F8;&#x540C;&#x7684;&#x5F62;&#x72B6;&#xFF0C;&#x5176;&#x4E2D;axis&#x88AB;&#x79FB;&#x9664;&#x3002;</p><p>&#x4F8B;&#x5B50; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([</span><br><span class="line">              [</span><br><span class="line">                  [<span class="number">1</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">2</span>],</span><br><span class="line">                  [<span class="number">9</span>, <span class="number">-6</span>, <span class="number">2</span>, <span class="number">8</span>],</span><br><span class="line">                  [<span class="number">-3</span>, <span class="number">7</span>, <span class="number">-9</span>, <span class="number">1</span>]</span><br><span class="line">              ],</span><br><span class="line"></span><br><span class="line">              [</span><br><span class="line">                  [<span class="number">-1</span>, <span class="number">5</span>, <span class="number">-5</span>, <span class="number">2</span>],</span><br><span class="line">                  [<span class="number">9</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">8</span>],</span><br><span class="line">                  [<span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">1</span>]</span><br><span class="line">              ]</span><br><span class="line">          ])</span><br><span class="line"></span><br><span class="line">t1=np.argmax(a,axis=<span class="number">0</span>)</span><br><span class="line">t2=np.argmax(a,axis=<span class="number">1</span>)</span><br><span class="line">t3=np.argmax(a,axis=<span class="number">2</span>)</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x91CC;&#x7684;a&#x7684;shape&#x662F;&#xFF08;2,3,4&#xFF09;&#xFF0C;&#x5F88;&#x597D;&#x770B;&#xFF0C;a&#x7684;&#x6700;&#x5927;&#x7684;&#x62EC;&#x53F7;&#x91CC;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x62EC;&#x53F7;&#xFF0C;&#x5373;&#x7B2C;&#x4E00;&#x7EF4;&#x6709;2&#x4E2A;&#xFF0C;&#x518D;&#x7136;&#x540E;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x62EC;&#x53F7;&#x91CC;&#x6709;&#x4E09;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x5373;&#x7B2C;&#x4E8C;&#x7EF4;&#x662F;3&#xFF0C;&#x518D;&#x7136;&#x540E;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x62EC;&#x53F7;&#x91CC;&#x6709;4&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x5373;&#x7B2C;&#x4E09;&#x7EF4;&#x662F;4.</p><p>&#x73B0;&#x5728;&#x6C42;t1&#xFF0C;t2,t3</p><p>&#x5219;&#xFF0C;t1&#x7684;shape&#x662F;&#xFF08;3,4&#xFF09;&#xFF0C;&#x6B63;&#x597D;&#x662F;&#x628A;&#x7B2C;&#x4E00;&#x7EF4;&#x53BB;&#x6389;&#x4E4B;&#x540E;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x7EF4;&#x5EA6;&#xFF0C;&#x4E4B;&#x524D;&#x662F;&#xFF08;2,3,4&#xFF09;&#xFF0C;&#x53BB;&#x6389;2&#x4E4B;&#x540E;&#xFF0C;&#x5269;&#x4E0B;&#xFF08;3,4&#xFF09;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x5C31;&#x662F;{0,1}&#xFF0C;&#x56E0;&#x4E3A;&#x7B2C;&#x4E00;&#x7EF4;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x561B; &#x8BA1;&#x7B97;&#x65B9;&#x6CD5;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5206;&#x522B;&#x8BA1;&#x7B97;a[0][i][j]&#x548C;a[1][i][j]&#x5BF9;&#x5E94;&#x7684;&#x6700;&#x5927;&#x7684;&#x6570;&#xFF0C;&#x6700;&#x540E;&#x7B97;&#x4E0B;&#x6765;&#xFF0C;&#x662F; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"> [<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line">[<span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>]]</span><br></pre></td></tr></table></figure></p><p>&#x8BA1;&#x7B97;t2&#xFF1A;</p><p>t2&#x7684;shape&#x662F;&#xFF08;2,4&#xFF09;&#xFF0C;&#x6B63;&#x597D;&#x662F;&#x53BB;&#x6389;&#x7B2C;&#x4E8C;&#x4E2A;&#x7EF4;&#x5EA6;&#xFF0C;&#x53D6;&#x503C;&#x4E5F;&#x662F;{0,1,2} &#x5BF9;&#x5E94;&#x7684;&#x662F;a[i][0][j]&#xFF0C;a[i][1][j]&#xFF0C;a[i][2][j]&#x6700;&#x5927;&#x7684;&#x503C;&#x3002; &#x6700;&#x540E;&#x7B97;&#x4E0B;&#x6765;&#xFF0C;t2&#x7684;&#x503C;&#x662F; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">1</span>]]</span><br></pre></td></tr></table></figure></p><p>&#x540C;&#x7406;&#xFF0C;t3&#x7684;&#x503C;&#x662F;&#xFF1A; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span> <span class="number">0</span> <span class="number">2</span>]]</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>李宏毅机器学习HW1-PM2.5预测</title>
      <link href="//posts/8cf3bdf/"/>
      <url>//posts/8cf3bdf/</url>
      <content type="html"><![CDATA[<p>&#x539F;&#x7406;&#x5206;&#x6790;&#x53CA;&#x4EE3;&#x7801;&#x8BE6;&#x89E3;</p><a id="more"></a><h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://ntumlta.github.io/2017fall-ml-hw1/" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><h1 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h1><h2 id="&#x6570;&#x636E;&#x5206;&#x6790;">&#x6570;&#x636E;&#x5206;&#x6790;</h2><p>&#x3B5;=(&#xB4;&#x3BF;&#xFF40;*)))&#x5509;&#xFF0C;&#x8003;&#x5B8C;&#x8BD5;&#x518D;&#x5199;&#x5427;&#x3002;</p><p>12.12&#x66F4;&#x65B0;&#xFF1A;&#x3B5;=(&#xB4;&#x3BF;&#xFF40;*)))&#x5509;&#xFF0C;&#x653E;&#x5047;&#x4E86;&#x518D;&#x5199;&#x5427;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>机器学习笔记</title>
      <link href="//posts/b1b54fd/"/>
      <url>//posts/b1b54fd/</url>
      <content type="html"><![CDATA[<p>&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x5408;&#x96C6;&#xFF0C;&#x5177;&#x4F53;&#x5C0F;&#x95EE;&#x9898;&#x4EE5;&#x4E00;&#x7EA7;&#x6807;&#x9898;&#x7ED9;&#x51FA;&#x3002;</p><a id="more"></a><h1 id="sigmoid&#x51FD;&#x6570;">Sigmoid&#x51FD;&#x6570;</h1><p>&#x73B0;&#x5728;&#x597D;&#x591A;&#x4EBA;&#x8BA4;&#x4E3A;Sigmoid&#x51FD;&#x6570;&#x662F;&#xFF1A; <span class="math display">\[\sigma(x) = \frac1 {1+exp(-x)}\]</span> &#x5176;&#x5B9E;&#x8FD9;&#x79CD;&#x8BF4;&#x6CD5;&#x4E0D;&#x51C6;&#x786E;&#xFF0C;&#x5728;&#x7EF4;&#x57FA;&#x767E;&#x79D1;<a href="https://en.wikipedia.org/wiki/Sigmoid_function#Definition" target="_blank" rel="noopener">Sigmoid Function</a>&#x7684;&#x5B9A;&#x4E49;&#x91CC;&#xFF0C;&#x8BF4;&#x660E;&#x4E86;Sigmoid&#x7684;&#x5B9A;&#x4E49;&#x662F;&#xFF1A;</p><blockquote><p>A sigmoid function is a bounded, differentiable, real function that is defined for all real input values and has a non-negative derivative at each point.</p></blockquote><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;Sigmoid&#x51FD;&#x6570;&#x662F;&#x6709;&#x754C;&#xFF0C;&#x53EF;&#x5FAE;&#x7684;&#x5B9E;&#x51FD;&#x6570;&#xFF0C;&#x5B9A;&#x4E49;&#x57DF;&#x662F;<span class="math inline">\(R\)</span>&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x6BCF;&#x4E2A;&#x70B9;&#x90FD;&#x5177;&#x6709;&#x975E;&#x8D1F;&#x5BFC;&#x6570;&#x3002;</p><p>&#x90A3;&#x524D;&#x9762;&#x8BF4;&#x7684;<span class="math inline">\(\sigma(x)\)</span>&#x7684;&#x51C6;&#x786E;&#x540D;&#x5B57;&#x5176;&#x5B9E;&#x662F;<span class="math inline">\(Logistic\)</span>&#x51FD;&#x6570;&#x3002;</p><p>&#x5176;&#x5B9E;&#x8FD8;&#x6709;&#x5F88;&#x591A;Sigmoid&#x578B;&#x51FD;&#x6570;&#xFF0C;&#x6BD4;&#x5982;tanh&#x51FD;&#x6570;: <span class="math display">\[tanh(x) = \frac{exp(x)-exp(-x)} {exp(x)+exp(-x)}\]</span> &#x90A3;&#x4E48;&#xFF0C;&#x4F7F;&#x7528;&#x4E86;<span class="math inline">\(Logistic\)</span>&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x7684;Regression&#xFF0C;&#x5C31;&#x53EB;&#x505A;Logistic Regression&#x3002;&#x4F7F;&#x7528;softmax&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x7684;Regression&#xFF0C;&#x5C31;&#x53EB;Softmax Regression&#xFF0C;&#x540D;&#x5B57;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x6765;&#x7684;&#x3002;</p><h1 id="pooling&#x7684;&#x7FFB;&#x8BD1;&#x95EE;&#x9898;">Pooling&#x7684;&#x7FFB;&#x8BD1;&#x95EE;&#x9898;</h1><p>&#x8FD9;&#x91CC;&#x5C31;&#x8981;&#x5410;&#x69FD;&#x90A3;&#x4E9B;&#x7FFB;&#x8BD1;&#x4EBA;&#x5458;&#x4E86;&#xFF0C;&#x82F1;&#x8BED;&#x4E0D;&#x597D;&#x5C31;&#x522B;&#x778E;jb&#x7FFB;&#x8BD1;&#x3002;</p><p>Pool&#x4E00;&#x8BCD;&#xFF0C;&#x4E0D;&#x4EC5;&#x6709;&#x201C;&#x6C60;&#x5858;&#x201D;&#x7684;&#x610F;&#x601D;&#xFF0C;&#x8FD8;&#x6709;&#x201C;&#x6C47;&#x805A;&#xFF0C;&#x805A;&#x5408;&#xFF0C;&#x805A;&#x62E2;&#x201D;&#x7684;&#x610F;&#x601D;&#x3002;&#x6240;&#x4EE5;&#x628A;Pooling Layer&#x7FFB;&#x8BD1;&#x6210;&#x201C;&#x6C60;&#x5316;&#x5C42;&#x201D;&#xFF0C;&#x7EAF;&#x5C5E;&#x4E0D;&#x660E;&#x767D;&#x5355;&#x8BCD;&#x610F;&#x601D;&#x778E;jb&#x7FFB;&#x8BD1;&#x3002;&#x6211;&#x8BA4;&#x4E3A;&#x590D;&#x65E6;&#x5927;&#x5B66;&#x90B1;&#x9521;&#x9E4F;&#x8001;&#x5E08;&#x7FFB;&#x8BD1;&#x7684;&#x5C31;&#x975E;&#x5E38;&#x597D;&#xFF0C;&#x7FFB;&#x8BD1;&#x6210;&#x201C;&#x6C47;&#x805A;&#x5C42;&#x201D;&#xFF0C;&#x4E00;&#x770B;&#x5C31;&#x660E;&#x767D;&#x4E86;&#x662F;&#x548B;&#x56DE;&#x4E8B;&#x4E86;&#x6709;&#x6728;&#x6709;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x7FFB;&#x8BD1;&#x7684;&#x529B;&#x91CF;&#x3002;</p><p>&#x6BD5;&#x7ADF;&#xFF0C;&#x8BF4;&#x4E00;&#x4E2A;&#x7537;&#x4EBA;&#x201C;&#x957F;&#xFF08;zhang&#xFF09;&#x5F97;&#x5413;&#x4EBA;&#x201D;&#x548C;&#x201C;&#x957F;&#xFF08;chang&#xFF09;&#x5F97;&#x5413;&#x4EBA;&#x201D;&#x610F;&#x601D;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;</p><h1 id="&#x635F;&#x5931;&#x51FD;&#x6570;&#x671F;&#x671B;&#x98CE;&#x9669;&#x7ECF;&#x9A8C;&#x98CE;&#x9669;&#x7ED3;&#x6784;&#x98CE;&#x9669;">&#x635F;&#x5931;&#x51FD;&#x6570;&#x3001;&#x671F;&#x671B;&#x98CE;&#x9669;&#x3001;&#x7ECF;&#x9A8C;&#x98CE;&#x9669;&#x3001;&#x7ED3;&#x6784;&#x98CE;&#x9669;</h1><h2 id="&#x635F;&#x5931;&#x51FD;&#x6570;">&#x635F;&#x5931;&#x51FD;&#x6570;</h2><p>&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x8D1F;&#x5B9E;&#x6570;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x91CF;&#x5316;&#x6A21;&#x578B;&#x9884;&#x6D4B;&#x548C;&#x771F;&#x5B9E;&#x6807;&#x7B7E;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#x3002; &#x5E38;&#x7528;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x6709;&#xFF1A;</p><h3 id="&#x635F;&#x5931;&#x51FD;&#x6570;-1">0-1&#x635F;&#x5931;&#x51FD;&#x6570;</h3><p><span class="math display">\[L(y,f(x,\theta))=\left\{\begin{aligned}0&amp;  &amp;if\ \  y=f(x,\theta) \\1&amp;  &amp;if\ \  y \neq f(x,\theta) \\\end{aligned}\right.=I(y \neq f(x,\theta))\]</span> &#x5176;&#x4E2D;&#xFF0C;<span class="math inline">\(I(&#xB7;)\)</span>&#x662F;&#x6307;&#x793A;&#x51FD;&#x6570;&#x3002;</p><h3 id="&#x5E73;&#x65B9;&#x635F;&#x5931;&#x51FD;&#x6570;">&#x5E73;&#x65B9;&#x635F;&#x5931;&#x51FD;&#x6570;</h3><p>&#x7ECF;&#x5E38;&#x7528;&#x5728;&#x9884;&#x6D4B;&#x6807;&#x7B7E; y&#x4E3A;&#x5B9E;&#x6570;&#x503C;&#x7684;&#x4EFB;&#x52A1;&#x4E2D;&#x3002; <span class="math display">\[L(y,f(x,\theta))=\frac 12(y-f(x,\theta))^2\]</span> &#x5E73;&#x65B9;&#x635F;&#x5931;&#x51FD;&#x6570;&#x4E00;&#x822C;&#x4E0D;&#x7528;&#x4E8E;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#x3002;</p><h3 id="&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x51FD;&#x6570;">&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x51FD;&#x6570;</h3><p>&#x5BF9;&#x4E8E;&#x4E24;&#x4E2A;&#x6982;&#x7387;&#x5206;&#x5E03;&#xFF0C;&#x4E00;&#x822C;&#x53EF;&#x4EE5;&#x7528;&#x4EA4;&#x53C9;&#x71B5;&#x6765;&#x8861;&#x91CF;&#x5B83;&#x4EEC;&#x7684;&#x5DEE;&#x5F02;&#x3002; <span class="math display">\[L(y,f(x,\theta))=-\sum_{c=1}^Cy_clogf_c(x,\theta)\]</span></p><h2 id="&#x671F;&#x671B;&#x98CE;&#x9669;">&#x671F;&#x671B;&#x98CE;&#x9669;</h2><p>&#x8BC4;&#x4EF7;&#x4E00;&#x4E2A;&#x6A21;&#x578B;<span class="math inline">\(f(x,\theta)\)</span>&#x7684;&#x597D;&#x574F;&#xFF0C;&#x6700;&#x4F73;&#x7684;&#x6307;&#x6807;&#x662F;&#x671F;&#x671B;&#x98CE;&#x9669;&#xFF0C;&#x671F;&#x671B;&#x98CE;&#x9669;&#x662F;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x8868;&#x793A;&#x7684;&#x662F;&#x51B3;&#x7B56;&#x51FD;&#x6570;&#x5BF9;&#x4E8E;&#x6240;&#x6709;&#x7684;&#x6837;&#x672C;&lt;x,y&gt;&#x9884;&#x6D4B;&#x80FD;&#x529B;&#x7684;&#x5927;&#x5C0F;&#x3002; <span class="math display">\[R(\theta)=E_{(x,y)\sim p_r(x,y)}[L(y,f(x,\theta))]\]</span> &#x5176;&#x4E2D;&#xFF0C;<span class="math inline">\(p_r(x,y)\)</span>&#x662F;&#x771F;&#x5B9E;&#x7684;&#x6570;&#x636E;&#x5206;&#x5E03;&#x3002;<span class="math inline">\(L(y,f(x,\theta))\)</span>&#x662F;&#x635F;&#x5931;&#x51FD;&#x6570;. &#x7406;&#x60F3;&#x7684;&#x6A21;&#x578B;&#xFF08;&#x51B3;&#x7B56;&#xFF09;&#x51FD;&#x6570;&#x5E94;&#x8BE5;&#x662F;&#x8BA9;&#x6240;&#x6709;&#x7684;&#x6837;&#x672C;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x6700;&#x5C0F;&#x7684;&#xFF0C;&#x5373;&#x671F;&#x671B;&#x98CE;&#x9669;&#x6700;&#x5C0F;&#x3002;</p><h2 id="&#x7ECF;&#x9A8C;&#x98CE;&#x9669;">&#x7ECF;&#x9A8C;&#x98CE;&#x9669;</h2><p>&#x7531;&#x4E8E;&#x671F;&#x671B;&#x98CE;&#x9669;&#x8981;&#x7528;&#x5230;&#x771F;&#x5B9E;&#x7684;&#x6570;&#x636E;&#x5206;&#x5E03;&#xFF0C;&#x8FD9;&#x4E2A;&#x5F80;&#x5F80;&#x662F;&#x4E0D;&#x73B0;&#x5B9E;&#x7684;&#xFF08;&#x5E9F;&#x8BDD;&#xFF0C;&#x77E5;&#x9053;&#x771F;&#x5B9E;&#x7684;&#x6570;&#x636E;&#x5206;&#x5E03;&#x5C31;&#x4E0D;&#x7528;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E86;&#xFF09;&#x3002;</p><p>&#x56E0;&#x6B64;&#x5C31;&#x7528;&#x5C40;&#x90E8;&#x4EE3;&#x66FF;&#x6574;&#x4F53;&#x7684;&#x601D;&#x60F3;&#xFF0C;&#x7528;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x9884;&#x6D4B;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x7ECF;&#x9A8C;&#x98CE;&#x9669;&#x6700;&#x5C0F;&#x5316;&#x7684;&#x7406;&#x8BBA;&#x57FA;&#x7840;&#x3002;</p><p>&#x7ECF;&#x9A8C;&#x98CE;&#x9669;&#x4E2D;&#xFF0C;&#x8BA1;&#x7B97;&#x7684;&#x662F;&#x4EC5;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0A;&#x7684;&#x5E73;&#x5747;&#x635F;&#x5931;&#x3002; <span class="math display">\[R_D^{emp}=\frac 1N\sum_{n=1}^NL(\hat{y}^{(n)},f(x^{(n)},\theta))\]</span> &#x7531;&#x5927;&#x6570;&#x5B9A;&#x5F8B;&#xFF0C;&#x5F53;&#x8BAD;&#x7EC3;&#x96C6;&#x7684;&#x5927;&#x5C0F;<span class="math inline">\(|D|\)</span>&#x8D8B;&#x5411;&#x4E8E;&#x65E0;&#x7A77;&#x5927;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7ECF;&#x9A8C;&#x98CE;&#x9669;&#x5C31;&#x8D8B;&#x5411;&#x4E8E;&#x671F;&#x671B;&#x98CE;&#x9669;&#x3002;&#x7136;&#x800C;&#x5728;&#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6CA1;&#x6709;&#x65E0;&#x9650;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#xFF0C;&#x5E76;&#x4E14;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x5F80;&#x5F80;&#x662F;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x7684;&#x4E00;&#x4E2A;&#x5F88;&#x5C0F;&#x7684;&#x5B50;&#x96C6;&#x6216;&#x8005;&#x5305;&#x542B;&#x4E00;&#x5B9A;&#x7684;&#x566A;&#x58F0;&#x6570;&#x636E;&#xFF0C;&#x4E0D;&#x80FD;&#x5F88;&#x597D;&#x5730;&#x53CD;&#x6620;&#x5168;&#x90E8;&#x6570;&#x636E;&#x7684;&#x771F;&#x5B9E;&#x5206;&#x5E03;&#x3002;&#x7ECF;&#x9A8C;&#x98CE;&#x9669;&#x6700;&#x5C0F;&#x5316;&#x539F;&#x5219;&#x5F88;&#x5BB9;&#x6613;&#x5BFC;&#x81F4;&#x6A21;&#x578B;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0A;&#x9519;&#x8BEF;&#x7387;&#x5F88;&#x4F4E;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x672A;&#x77E5;&#x6570;&#x636E;&#x4E0A;&#x9519;&#x8BEF;&#x7387;&#x5F88;&#x9AD8;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x6240;&#x8C13;&#x7684;&#x8FC7;&#x62DF;&#x5408;&#xFF08;Overfitting&#xFF09;&#x3002;</p><h2 id="&#x7ED3;&#x6784;&#x98CE;&#x9669;">&#x7ED3;&#x6784;&#x98CE;&#x9669;</h2><p>&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4E00;&#x822C;&#x5728;&#x7ED3;&#x6784;&#x98CE;&#x9669;&#x6700;&#x5C0F;&#x5316;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x518D;&#x5F15;&#x5165;&#x53C2;&#x6570;&#x7684;&#x6B63;&#x5219;&#x5316;&#xFF08;regularization&#xFF09;&#xFF0C;&#x6765;&#x9650;&#x5236;&#x6A21;&#x578B;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x4F7F;&#x5176;&#x4E0D;&#x8981;&#x8FC7;&#x5EA6;&#x7684;&#x6700;&#x5C0F;&#x5316;&#x7ECF;&#x9A8C;&#x98CE;&#x9669;&#x3002;&#x5728;&#x7ECF;&#x9A8C;&#x98CE;&#x9669;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x52A0;&#x4E00;&#x4E2A;&#x6B63;&#x5219;&#x5316;&#x9879;&#xFF0C;&#x5C31;&#x6784;&#x6210;&#x4E86;&#x7ED3;&#x6784;&#x98CE;&#x9669;&#x3002; <span class="math display">\[R_D^{struct}=\frac 1N\sum_{n=1}^NL(\hat{y}^{(n)},f(x^{(n)},\theta))+\frac 12\lambda||\theta||^2\]</span> &#x5176;&#x4E2D;<span class="math inline">\(||\theta||\)</span>&#x662F;&#x2113;2&#x8303;&#x6570;&#x7684;&#x6B63;&#x5219;&#x5316;&#x9879;&#xFF0C;&#x7528;&#x6765;&#x51CF;&#x5C11;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#xFF0C;&#x907F;&#x514D;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;<span class="math inline">\(\lambda\)</span>&#x7528;&#x6765;&#x63A7;&#x5236;&#x6B63;&#x5219;&#x5316;&#x7684;&#x5F3A;&#x5EA6;&#x3002;</p><p>&#x6B63;&#x5219;&#x5316;&#x9879;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5176;&#x5B83;&#x51FD;&#x6570;&#xFF0C;&#x6BD4;&#x5982; &#x2113;1 &#x8303;&#x6570;&#x3002; &#x2113;1 &#x8303;&#x6570;&#x7684;&#x5F15;&#x5165;&#x901A;&#x5E38;&#x4F1A;&#x4F7F;&#x5F97;&#x53C2;&#x6570;&#x6709;&#x4E00;&#x5B9A;&#x7A00;&#x758F;&#x6027;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x5F88;&#x591A;&#x7B97;&#x6CD5;&#x4E2D;&#x4E5F;&#x7ECF;&#x5E38;&#x4F7F;&#x7528;&#x3002;&#x5728;&#x8D1D;&#x53F6;&#x65AF;&#x5B66;&#x4E60;&#x7684;&#x89D2;&#x5EA6;&#x6765;&#x8BB2;&#xFF0C;&#x6B63;&#x5219;&#x5316;&#x662F;&#x5047;&#x8BBE;&#x4E86;&#x53C2;&#x6570;&#x7684;&#x5148;&#x9A8C;&#x5206;&#x5E03;&#xFF0C;&#x4E0D;&#x5B8C;&#x5168;&#x4F9D;&#x8D56;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x3002;</p><h1 id="&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x5B9A;&#x4E49;">&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x5B9A;&#x4E49;</h1><p>&#x770B;&#x8D77;&#x6765;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x770B;&#x4E86;&#x5F88;&#x591A;&#x6750;&#x6599;&#xFF0C;&#x90FD;&#x6CA1;&#x6709;&#x5BF9;&#x8FC7;&#x62DF;&#x5408;&#x6709;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x5B9A;&#x4E49;&#x3002;&#x5927;&#x591A;&#x90FD;&#x662F;&#x7ED9;&#x4E86;&#x4E00;&#x4E2A;&#x5F62;&#x5F0F;&#x5316;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#xFF0C;&#x4F46;&#x662F;&#x603B;&#x611F;&#x89C9;&#x5C11;&#x4E86;&#x70B9;&#x4EC0;&#x4E48;&#x3002;</p><p>&#x5C31;&#x597D;&#x50CF;&#x8BB2;&#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x6709;&#x4ECE;&#x96C6;&#x5408;&#xFF0C;&#x6620;&#x5C04;&#x7684;&#x89D2;&#x5EA6;&#x53BB;&#x7ED9;&#x5B9A;&#x4E00;&#x6837;&#x3002;&#x8BFB;&#x8D77;&#x6765;&#x4E0D;&#x723D;&#x3002;&#x770B;&#x4E86;&#x590D;&#x65E6;&#x90B1;&#x9521;&#x9E4F;&#x8001;&#x5E08;&#x7684;<a href="https://nndl.github.io/" target="_blank" rel="noopener">&#x300A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E0E;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;</a>&#xFF0C;&#x4ED6;&#x7ED9;&#x4E86;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x5B9A;&#x4E49;&#x3002;&#x6458;&#x5F55;&#x5982;&#x4E0B;&#xFF1A;</p><blockquote><p><strong>&#x8FC7;&#x62DF;&#x5408;</strong>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5047;&#x8BBE;&#x7A7A;&#x95F4; <span class="math inline">\(F\)</span>&#xFF0C;&#x4E00;&#x4E2A;&#x5047;&#x8BBE; <span class="math inline">\(f\)</span> &#x5C5E;&#x4E8E; <span class="math inline">\(F\)</span>&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x5176;&#x4ED6;&#x7684;&#x5047;&#x8BBE; <span class="math inline">\(f&#x2032;\)</span> &#x4E5F;&#x5C5E;&#x4E8E; <span class="math inline">\(F\)</span>, &#x4F7F;&#x5F97;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0A; <span class="math inline">\(f\)</span> &#x7684;&#x635F;&#x5931;&#x6BD4; <span class="math inline">\(f&#x2032;\)</span> &#x5C0F;&#xFF0C;&#x4F46;&#x5728;&#x6574;&#x4E2A;&#x6837;&#x672C;&#x7A7A;&#x95F4;&#x4E0A; <span class="math inline">\(f&#x2032;\)</span> &#x6BD4; <span class="math inline">\(f\)</span> &#x7684;&#x635F;&#x5931;&#x5C0F;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8BF4;&#x5047;&#x8BBE; <span class="math inline">\(f\)</span> &#x8FC7;&#x5EA6;&#x62DF;&#x5408;&#x8BAD;&#x7EC3;&#x6570;&#x636E;[Mitchell, 1997]&#x3002;</p></blockquote>]]></content>
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo下添加图片</title>
      <link href="//posts/2ebc16fd/"/>
      <url>//posts/2ebc16fd/</url>
      <content type="html"><![CDATA[<p>&#x5728;Hexo&#x4E0B;&#x4EE5;Markdown&#x8BED;&#x6CD5;&#x6DFB;&#x52A0;&#x56FE;&#x7247; <a id="more"></a> MarkDown&#x8BED;&#x6CD5;&#x6DFB;&#x52A0;&#x56FE;&#x7247;&#x7684;&#x8BED;&#x6CD5;&#x4E3A; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![&#x56FE;&#x7247;&#x63CF;&#x8FF0;](&#x56FE;&#x7247;&#x5730;&#x5740;)</span><br></pre></td></tr></table></figure></p><h1 id="&#x5F00;&#x542F;post_asset_folder">&#x5F00;&#x542F;post_asset_folder</h1><p>&#x7531;&#x4E8E;&#x628A;&#x6240;&#x6709;&#x56FE;&#x7247;&#x653E;&#x5728;&#x4E00;&#x8D77;&#x4F1A;&#x5F88;&#x4E71;&#xFF0C;&#x6240;&#x4EE5;&#x5728;<strong>&#x7AD9;&#x70B9;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</strong>config.yml&#x91CC;&#xFF0C;&#x5F00;&#x542F;post_asset_folder&#x3002;&#x5F53;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x7BA1;&#x7406;&#x529F;&#x80FD;&#x6253;&#x5F00;&#x540E;&#xFF0C;Hexo&#x5C06;&#x4F1A;&#x5728;&#x4F60;&#x6BCF;&#x4E00;&#x6B21;&#x901A;&#x8FC7; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure></p><p>&#x521B;&#x5EFA;&#x65B0;&#x6587;&#x7AE0;&#x65F6;&#x81EA;&#x52A8;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x3002;&#x8FD9;&#x4E2A;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x5939;&#x5C06;&#x4F1A;&#x6709;&#x4E0E;&#x8FD9;&#x4E2A; markdown &#x6587;&#x4EF6;&#x4E00;&#x6837;&#x7684;&#x540D;&#x5B57;&#x3002;&#x5C06;&#x6240;&#x6709;&#x4E0E;&#x4F60;&#x7684;&#x6587;&#x7AE0;&#x6709;&#x5173;&#x7684;&#x8D44;&#x6E90;&#x653E;&#x5728;&#x8FD9;&#x4E2A;&#x5173;&#x8054;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x4E4B;&#x540E;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x6765;&#x5F15;&#x7528;&#x5B83;&#x4EEC;&#x3002;</p><h1 id="&#x5B89;&#x88C5;&#x63D2;&#x4EF6;">&#x5B89;&#x88C5;&#x63D2;&#x4EF6;</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image@0.0.2 --save</span><br></pre></td></tr></table></figure><p>&#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x6700;&#x65B0;&#x7248;&#x672C;&#x662F;0.0.3&#xFF0C;&#x4F46;&#x662F;0.0.3&#x7248;&#x672C;&#x6709;Bug&#xFF0C;&#x6240;&#x4EE5;<strong>&#x4E00;&#x5B9A;&#x8981;&#x5B89;&#x88C5;0.0.2&#x7248;&#x672C;</strong>&#x3002;</p><h1 id="&#x5F15;&#x7528;&#x56FE;&#x7247;">&#x5F15;&#x7528;&#x56FE;&#x7247;</h1><p>&#x6309;&#x7167;&#x5982;&#x4E0B;MarkDown&#x8BED;&#x6CD5;&#x5373;&#x53EF;&#x63D2;&#x5165;&#x56FE;&#x7247; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![&#x56FE;&#x7247;&#x63CF;&#x8FF0;](/&#x535A;&#x6587;&#x7684;&#x540D;&#x5B57;/&#x56FE;&#x7247;&#x540D;.jpg)</span><br></pre></td></tr></table></figure></p><p>&#x6BD4;&#x5982; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![&#x56FE;&#x7247;&#x63CF;&#x8FF0;](/hexo&#x4E0B;&#x6DFB;&#x52A0;&#x56FE;&#x7247;/&#x7B2C;&#x4E00;&#x5F20;&#x56FE;.jpg)</span><br></pre></td></tr></table></figure></p><p>&#x6309;&#x5982;&#x4E0A;&#x6240;&#x8FF0;&#x63D2;&#x5165;&#x56FE;&#x7247;&#xFF0C;&#x652F;&#x6301;MarkDown&#x9884;&#x89C8;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x4E0A;&#x4F20;&#x5230;Hexo&#x535A;&#x5BA2;&#x4E2D;&#x3002; &#x6CE8;&#x610F;&#x540E;&#x7F00;&#x540D;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#xFF0C;&#x5373;png&#x4E0E;PNG&#x4E0D;&#x540C;&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 图片 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Windows下转换网易云音乐ncm格式为mp3</title>
      <link href="//posts/85a86f5b/"/>
      <url>//posts/85a86f5b/</url>
      <content type="html"><![CDATA[<p>ncm&#x662F;&#x7F51;&#x6613;&#x4E91;&#x97F3;&#x4E50;&#x7684;&#x4E13;&#x7528;&#x683C;&#x5F0F;&#xFF0C;ncm&#x52A0;&#x5BC6;&#x7684;&#x97F3;&#x4E50;&#xFF0C;&#x53EA;&#x80FD;&#x5728;&#x4F1A;&#x5458;&#x6709;&#x6548;&#x671F;&#x5185;&#x4F7F;&#x7528;&#x3002;&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x628A;ncm&#x683C;&#x5F0F;&#x7684;&#x97F3;&#x4E50;&#x8F6C;&#x4E3A;MP3&#x683C;&#x5F0F;&#x7684;&#x5DE5;&#x5177; <a id="more"></a></p><h1 id="&#x4E0B;&#x8F7D;&#x5730;&#x5740;">&#x4E0B;&#x8F7D;&#x5730;&#x5740;</h1><p><a href="https://raw.githubusercontent.com/NoColor2/ncmdump/master/main.exe" target="_blank" rel="noopener">&#x4E0B;&#x8F7D;&#x5730;&#x5740;</a></p><h1 id="&#x4F7F;&#x7528;&#x65B9;&#x6CD5;">&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h1><ol type="1"><li>&#x9009;&#x62E9;ncm&#x6587;&#x4EF6;&#x6240;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x62D6;&#x62FD;&#x5230;ncmdump.exe&#x4E0A;</li><li>&#x9009;&#x62E9;ncm&#x6587;&#x4EF6;&#xFF0C;&#x62D6;&#x62FD;&#x5230;ncmdump.exe&#x4E0A;</li></ol><h1 id="&#x6F14;&#x793A;">&#x6F14;&#x793A;</h1><h2 id="&#x6279;&#x91CF;&#x8F6C;&#x6362;">&#x6279;&#x91CF;&#x8F6C;&#x6362;</h2><p><img src="/posts/85a86f5b/1.gif"></p><h2 id="&#x6587;&#x4EF6;&#x5939;&#x6279;&#x91CF;&#x8F6C;&#x6362;">&#x6587;&#x4EF6;&#x5939;&#x6279;&#x91CF;&#x8F6C;&#x6362;</h2><p><img src="/posts/85a86f5b/2.gif"></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ncm </tag>
            
            <tag> mp3 </tag>
            
            <tag> 下载技巧 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>红黑树-C++语言实现</title>
      <link href="//posts/ef3f5fdd/"/>
      <url>//posts/ef3f5fdd/</url>
      <content type="html"><![CDATA[<p>&#x7B97;&#x6CD5;&#x8BFE;&#x4E0A;&#x8001;&#x5E08;&#x8BB2;&#x4E86;&#x7EA2;&#x9ED1;&#x6811;&#x3002;&#x6839;&#x636E;&#x7F51;&#x4E0A;&#x5927;&#x795E;&#x7684;&#x6587;&#x7AE0;&#xFF0C;&#x81EA;&#x5DF1;&#x53C8;&#x6572;&#x4E86;&#x4E00;&#x904D;&#x3002; <a id="more"></a> &#x6839;&#x636E; <a href="https://bbs.pediy.com/thread-225432.htm" target="_blank" rel="noopener">&#x7801;&#x56FE;&#x5E76;&#x8302;&#x7EA2;&#x9ED1;&#x6811;</a>&#x81EA;&#x5DF1;&#x53C8;&#x6572;&#x4E86;&#x4E00;&#x904D;&#x3002;</p><h1 id="&#x7C7B;&#x7684;&#x5B9A;&#x4E49;">&#x7C7B;&#x7684;&#x5B9A;&#x4E49;</h1><p>RBTree.h <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x7EA2;&#x9ED1;&#x6811;&#x662F;&#x4E00;&#x79CD;&#x81EA;&#x5E73;&#x8861;&#x7684;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#xFF0C;&#x5178;&#x578B;&#x7684;&#x7528;&#x9014;&#x662F;&#x5B9E;&#x73B0;&#x5173;&#x8054;&#x6570;&#x7EC4;&#x3002;</span></span><br><span class="line"><span class="comment">&#x7EA2;&#x9ED1;&#x6811;&#x7531;&#x4EE5;&#x4E0B;5&#x4E2A;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x9650;&#x5236;&#xFF1A;</span></span><br><span class="line"><span class="comment">1. &#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6216;&#x8005;&#x662F;&#x9ED1;&#x8272;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x7EA2;&#x8272;&#x3002;</span></span><br><span class="line"><span class="comment">2. &#x6839;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#x3002;</span></span><br><span class="line"><span class="comment">3. &#x6BCF;&#x4E2A;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#xFF08;&#x7A7A;&#x8282;&#x70B9;&#xFF09;&#x662F;&#x9ED1;&#x8272;&#x3002;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x8868;&#x793A;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x8BBE;&#x7F6E;&#x54E8;&#x5175;&#x8282;&#x70B9;&#xFF08;Nil&#xFF09;&#x8868;&#x793A;&#x7A7A;&#x8282;&#x70B9;&#xFF0C;&#x6BCF;&#x4E2A;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x5168;&#x90FD;&#x6307;&#x5411;&#x5B83;&#xFF0C;&#x65B9;&#x4FBF;&#x8868;&#x793A;&#x3002;</span></span><br><span class="line"><span class="comment">4. &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x662F;&#x7EA2;&#x8272;&#x7684;&#xFF0C;&#x5219;&#x5B83;&#x7684;&#x5B50;&#x8282;&#x70B9;&#x5FC5;&#x987B;&#x662F;&#x9ED1;&#x8272;&#x7684;&#x3002;</span></span><br><span class="line"><span class="comment">5. &#x4ECE;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x5230;&#x8BE5;&#x8282;&#x70B9;&#x7684;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x7684;&#x6240;&#x6709;&#x8DEF;&#x5F84;&#x4E0A;&#x5305;&#x542B;&#x76F8;&#x540C;&#x6570;&#x76EE;&#x7684;&#x9ED1;&#x8282;&#x70B9;&#x3002;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#x7531;&#x7EA6;&#x675F;&#x6761;&#x4EF6;5&#xFF0C;&#x53EF;&#x5F97;&#xFF1A;&#x4ECE;&#x6839;&#x5230;&#x6240;&#x6709;&#x6930;&#x5B50;&#x7684;&#x6700;&#x957F;&#x7684;&#x8DEF;&#x5F84;&#x4E0D;&#x591A;&#x4E8E;&#x6700;&#x77ED;&#x7684;&#x8DEF;&#x5F84;&#x7684;2&#x500D;&#x957F;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x68F5;&#x6811;&#x5927;&#x81F4;&#x4E0A;&#x662F;&#x5E73;&#x8861;&#x7684;&#x3002;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x8FD9;&#x4E2A;class&#x91CC;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x6BD4;&#x8F83;&#x7684;&#x8BED;&#x53E5;&#xFF0C;&#x6211;&#x628A;&#x5E38;&#x91CF;&#x503C;&#x5168;&#x90FD;&#x653E;&#x5728;&#x4E86;&#x5DE6;&#x8FB9;&#xFF0C;&#x9632;&#x6B62;&#x5C11;&#x5199;&#x4E00;&#x4E2A;&#x7B49;&#x53F7;&#x7684;&#x60C5;&#x51B5;&#x3002;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RBTree</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">enum</span></span><br><span class="line">    {</span><br><span class="line">        RBT_COLOR_RED,</span><br><span class="line">        RBT_COLOR_BLACK,</span><br><span class="line">    }RBTColor;</span><br><span class="line">    <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> __<span class="title">RBTreeNode</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">        __RBTreeNode* pParent;</span><br><span class="line">        __RBTreeNode* pLeft;</span><br><span class="line">        __RBTreeNode* pRight;</span><br><span class="line">        RBTColor Color;</span><br><span class="line">        <span class="keyword">int</span> Value;</span><br><span class="line">    }RBTreeNode, *pRBTreeNode;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InsertFixUP</span><span class="params">(pRBTreeNode pInsertNode)</span></span>;<span class="comment">//&#x63D2;&#x5165;InsertNode&#x4E4B;&#x540E;&#xFF0C;&#x8C03;&#x6574;&#x7EA2;&#x9ED1;&#x6811;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DeleteFixUp</span><span class="params">(pRBTreeNode pFixNode)</span></span>;<span class="comment">//&#x5220;&#x9664;DeleteNode&#x4E4B;&#x540E;&#xFF0C;&#x8C03;&#x6574;&#x7EA2;&#x9ED1;&#x6811;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SingleLeft</span><span class="params">(pRBTreeNode &amp;pNode, pRBTreeNode &amp;newTop)</span></span>;<span class="comment">//&#x5DE6;&#x65CB;&#x8F6C;&#xFF0C;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9876;&#x70B9;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SingleRight</span><span class="params">(pRBTreeNode &amp;pNode, pRBTreeNode &amp;newTop)</span></span>;<span class="comment">//&#x53F3;&#x65CB;&#x8F6C;&#xFF0C;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9876;&#x70B9;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ReplaceParent</span><span class="params">(pRBTreeNode pBeReplacedNode, pRBTreeNode pReplaceNode)</span></span>;<span class="comment">//&#x628A;pReplaceNode&#x7684;&#x7236;&#x8282;&#x70B9;&#x4FEE;&#x6539;&#x4E3A;pBeReplacedNode&#x7684;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">GetMinNode</span><span class="params">(pRBTreeNode pNode, pRBTreeNode &amp;pMinNode)</span></span>;<span class="comment">//&#x83B7;&#x53D6;&#x6700;&#x5C0F;&#x7684;&#x8282;&#x70B9;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    RBTree();</span><br><span class="line">    ~RBTree();</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">FindElement</span><span class="params">(<span class="keyword">int</span> Value)</span></span>;<span class="comment">//&#x67E5;&#x627E;&#x6570;&#x636E;&#xFF0C;&#x627E;&#x5230;&#x8FD4;&#x56DE;true&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE;false</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">()</span></span>;<span class="comment">//&#x5E7F;&#x5EA6;&#x904D;&#x5386;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">()</span></span>;<span class="comment">//&#x5224;&#x7A7A;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">GetMax</span><span class="params">(pRBTreeNode pNode, <span class="keyword">int</span> &amp;MaxValue)</span></span>;<span class="comment">//&#x83B7;&#x53D6;&#x6700;&#x5927;&#x503C;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">GetMin</span><span class="params">(pRBTreeNode pNode, <span class="keyword">int</span> &amp;MinValue)</span></span>;<span class="comment">//&#x83B7;&#x53D6;&#x6700;&#x5C0F;&#x503C;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DeleteElement</span><span class="params">(<span class="keyword">int</span> DeleteValue)</span></span>;<span class="comment">//&#x5220;&#x9664;&#x5236;&#x5B9A;&#x7684;&#x5143;&#x7D20;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InsertData</span><span class="params">(<span class="keyword">int</span> InsertValue)</span></span>;<span class="comment">//&#x63D2;&#x5165;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    pRBTreeNode pRoot;<span class="comment">//&#x6839;&#x8282;&#x70B9;&#x6307;&#x9488;</span></span><br><span class="line">    pRBTreeNode pNil;<span class="comment">//&#x54E8;&#x5175;&#x8282;&#x70B9;</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::InsertFixUP(pRBTreeNode pInsertNode)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x63D2;&#x5165;&#x8282;&#x70B9;&#x540E;&#xFF0C;&#x5BF9;&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x8C03;&#x6574;&#x64CD;&#x4F5C;&#xFF1A;</span></span><br><span class="line"><span class="comment">&#x6839;&#x636E;&#x88AB;&#x63D2;&#x5165;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x60C5;&#x51B5;&#x5206;&#x4E09;&#x7C7B;&#x6765;&#x8BA8;&#x8BBA;</span></span><br><span class="line"><span class="comment">1. &#x88AB;&#x63D2;&#x5165;&#x7684;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x662F;&#x7EA2;&#x8272;</span></span><br><span class="line"><span class="comment">&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F1A;&#x4EA7;&#x751F;&#x51B2;&#x7A81;&#xFF0C;&#x4E0D;&#x6EE1;&#x8DB3;&#x7EA6;&#x675F;&#x6761;&#x4EF6;5&#x3002;</span></span><br><span class="line"><span class="comment">&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x88AB;&#x63D2;&#x5165;&#x8282;&#x70B9;&#x662F;&#x4E00;&#x5B9A;&#x5B58;&#x5728;&#x975E;&#x7A7A;&#x7956;&#x7236;&#x8282;&#x70B9;&#x7684;&#xFF1B;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x8BB2;&#xFF0C;&#x88AB;&#x63D2;&#x5165;&#x8282;&#x70B9;&#x4E5F;&#x4E00;&#x5B9A;&#x5B58;&#x5728;&#x53D4;&#x53D4;&#x8282;&#x70B9;(&#x5373;&#x4F7F;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#x4E3A;&#x7A7A;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x89C6;&#x4E4B;&#x4E3A;&#x5B58;&#x5728;&#xFF0C;&#x7A7A;&#x8282;&#x70B9;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x9ED1;&#x8272;&#x8282;&#x70B9;)&#x3002;</span></span><br><span class="line"><span class="comment">&#x4F9D;&#x636E;&quot;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#x7684;&#x60C5;&#x51B5;&quot;&#xFF0C;&#x5C06;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x8FDB;&#x4E00;&#x6B65;&#x5212;&#x5206;&#x4E3A;3&#x79CD;&#x60C5;&#x51B5;&#x8FDB;&#x884C;&#x8BA8;&#x8BBA;&#x3002;&#x5904;&#x7406;&#x7684;&#x6838;&#x5FC3;&#x601D;&#x8DEF;&#x662F;&#xFF1A;&#x5C06;&#x7EA2;&#x8272;&#x7684;&#x8282;&#x70B9;&#x79FB;&#x5230;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x6839;&#x8282;&#x70B9;&#x8BBE;&#x7F6E;&#x4E3A;&#x9ED1;&#x8272;&#x3002;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**&#x4EE5;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x662F;&#x7956;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;&#x4E3A;&#x4F8B;**</span></span><br><span class="line"><span class="comment">**&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x82E5;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x662F;&#x7956;&#x7236;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B69;&#x5B50;&#x65F6;&#xFF0C;&#x628A;&#x5BF9;&#x5E94;&#x7684;right&#x548C;left&#x4E92;&#x6362;&#x5373;&#x53EF;**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.1 &#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x662F;&#x7EA2;&#x8272;&#xFF0C;&#x4E14;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;&#x7956;&#x7236;&#x8282;&#x70B9;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x5B50;&#x8282;&#x70B9;&#xFF08;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#xFF09;&#x4E5F;&#x662F;&#x7EA2;&#x8272;&#x3002;</span></span><br><span class="line"><span class="comment">1. &#x5C06;&#x201C;&#x7236;&#x8282;&#x70B9;&#x201D;&#x8BBE;&#x4E3A;&#x9ED1;&#x8272;&#x3002;</span></span><br><span class="line"><span class="comment">2. &#x5C06;&#x201C;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#x201D;&#x8BBE;&#x4E3A;&#x9ED1;&#x8272;&#x3002;</span></span><br><span class="line"><span class="comment">3. &#x5C06;&#x201C;&#x7956;&#x7236;&#x8282;&#x70B9;&#x201D;&#x8BBE;&#x4E3A;&#x201C;&#x7EA2;&#x8272;&#x201D;&#x3002;</span></span><br><span class="line"><span class="comment">4. &#x5C06;&#x201C;&#x7956;&#x7236;&#x8282;&#x70B9;&#x201D;&#x8BBE;&#x4E3A;&#x201C;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x201D;(&#x7EA2;&#x8272;&#x8282;&#x70B9;)&#xFF1B;&#x5373;&#xFF0C;&#x4E4B;&#x540E;&#x7EE7;&#x7EED;&#x5BF9;&#x201C;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x201D;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002;</span></span><br><span class="line"><span class="comment">1.2 &#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x662F;&#x7EA2;&#x8272;&#xFF0C;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#xFF0C;&#x4E14;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5176;&#x7236;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B69;&#x5B50;&#x3002;</span></span><br><span class="line"><span class="comment">1. &#x5C06;&#x201C;&#x7236;&#x8282;&#x70B9;&#x201D;&#x4F5C;&#x4E3A;&#x201C;&#x65B0;&#x7684;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x201D;&#x3002;</span></span><br><span class="line"><span class="comment">2. &#x4EE5;&#x201C;&#x65B0;&#x7684;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x201D;&#x4E3A;&#x652F;&#x70B9;&#x8FDB;&#x884C;&#x5DE6;&#x65CB;&#x3002;</span></span><br><span class="line"><span class="comment">1.3 &#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x662F;&#x7EA2;&#x8272;&#xFF0C;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#xFF0C;&#x4E14;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5176;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;&#x3002;</span></span><br><span class="line"><span class="comment">1. &#x5C06;&#x201C;&#x7236;&#x8282;&#x70B9;&#x201D;&#x8BBE;&#x4E3A;&#x201C;&#x9ED1;&#x8272;&#x201D;&#x3002;</span></span><br><span class="line"><span class="comment">2. &#x5C06;&#x201C;&#x7956;&#x7236;&#x8282;&#x70B9;&#x201D;&#x8BBE;&#x4E3A;&#x201C;&#x7EA2;&#x8272;&#x201D;&#x3002;</span></span><br><span class="line"><span class="comment">3. &#x4EE5;&#x201C;&#x7956;&#x7236;&#x8282;&#x70B9;&#x201D;&#x4E3A;&#x652F;&#x70B9;&#x8FDB;&#x884C;&#x53F3;&#x65CB;&#x3002;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2. &#x88AB;&#x63D2;&#x5165;&#x7684;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;</span></span><br><span class="line"><span class="comment">&#x4EC0;&#x4E48;&#x4E5F;&#x4E0D;&#x9700;&#x8981;&#x505A;&#x3002;&#x8282;&#x70B9;&#x88AB;&#x63D2;&#x5165;&#x540E;&#xFF0C;&#x4ECD;&#x7136;&#x662F;&#x7EA2;&#x9ED1;&#x6811;&#x3002;</span></span><br><span class="line"><span class="comment">3. &#x88AB;&#x63D2;&#x5165;&#x7684;&#x8282;&#x70B9;&#x662F;&#x6839;&#x8282;&#x70B9;&#xFF1A;</span></span><br><span class="line"><span class="comment">&#x76F4;&#x63A5;&#x628A;&#x6B64;&#x8282;&#x70B9;&#x6D82;&#x4E3A;&#x9ED1;&#x8272;&#x3002;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    pRBTreeNode pFixNode = pInsertNode;;</span><br><span class="line">    <span class="comment">//&#x5982;&#x679C;&#x7236;&#x8282;&#x70B9;&#x662F;&#x7EA2;&#x8272;&#x3002;&#xFF08;&#x6839;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x662F;Nil&#xFF0C;&#x4E3A;&#x9ED1;&#x8272;&#x3002;&#xFF09;</span></span><br><span class="line">    <span class="keyword">while</span> (RBT_COLOR_RED == pFixNode-&gt;pParent-&gt;Color)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//1. &#x5982;&#x679C;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x7684;&#x7236;&#x4EB2;&#x4E3A;&#x7956;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;</span></span><br><span class="line">        <span class="keyword">if</span> (pFixNode-&gt;pParent == pFixNode-&gt;pParent-&gt;pParent-&gt;pLeft)</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//&#x83B7;&#x53D6;&#x53D4;&#x53D4;&#x8282;&#x70B9;(&#x7956;&#x7236;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B69;&#x5B50;)</span></span><br><span class="line">            pRBTreeNode pUncle = pFixNode-&gt;pParent-&gt;pParent-&gt;pRight;</span><br><span class="line">            <span class="comment">//1.1 &#x5982;&#x679C;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#x4E3A;&#x7EA2;&#x8272;&#xFF0C;&#x60C5;&#x51B5;1.1.1</span></span><br><span class="line">            <span class="keyword">if</span> (RBT_COLOR_RED == pUncle-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x628A;&#x7236;&#x8282;&#x70B9;&#x548C;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#x90FD;&#x6539;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pUncle-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//&#x628A;&#x7956;&#x7236;&#x8282;&#x70B9;&#x6539;&#x4E3A;&#x7EA2;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x4E3A;&#x7956;&#x7236;&#x8282;&#x70B9;</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent-&gt;pParent;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//1.2 &#x53D4;&#x53D4;&#x8282;&#x70B9;&#x4E0D;&#x4E3A;&#x7EA2;&#x8272;&#xFF0C;&#x4E14;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x4E3A;&#x7236;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B69;&#x5B50;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x7A0D;&#x52A0;&#x5904;&#x7406;&#x53D8;&#x4F1A;&#x8F6C;&#x5316;&#x4E3A;&#x60C5;&#x51B5;1.3</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x4ECE;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x5F00;&#x59CB;&#x65CB;&#x8F6C;</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//&#x8BB0;&#x5F55;&#x4E0B;&#x65B0;&#x7684;&#x9876;&#x70B9;</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                SingleLeft(pFixNode-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                <span class="comment">//&#x91CD;&#x65B0;&#x8BBE;&#x7F6E;&#x8C03;&#x6574;&#x8282;&#x70B9;</span></span><br><span class="line">                pFixNode = pNewTop-&gt;pLeft;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//1.3 &#x53D4;&#x53D4;&#x8282;&#x70B9;&#x4E3A;&#x9ED1;&#xFF0C;&#x4E14;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x4E3A;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x628A;&#x7236;&#x8282;&#x70B9;&#x53D8;&#x6210;&#x9ED1;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//&#x628A;&#x7956;&#x7236;&#x8282;&#x70B9;&#x53D8;&#x6210;&#x7EA2;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//&#x4EE5;&#x7956;&#x7236;&#x8282;&#x70B9;&#x53F3;&#x65CB;&#x8F6C;(&#x6CE8;&#x610F;&#x5230;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#x7684;&#x60C5;&#x51B5;)</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent-&gt;pParent;</span><br><span class="line">                <span class="comment">//&#x8BB0;&#x5F55;&#x4E0B;&#x65B0;&#x7684;&#x9876;&#x70B9;</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (pRoot == pFixNode)</span><br><span class="line">                {</span><br><span class="line">                    SingleRight(pRoot, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">                {</span><br><span class="line">                    SingleRight(pFixNode-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">                {</span><br><span class="line">                    SingleRight(pFixNode-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//&#x91CD;&#x65B0;&#x8BBE;&#x7F6E;&#x8C03;&#x6574;&#x70B9;</span></span><br><span class="line">                pFixNode = pNewTop-&gt;pLeft;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//2. &#x5982;&#x679C;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x4E3A;&#x7956;&#x7236;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B69;&#x5B50;&#xFF0C;&#x76F8;&#x5BF9;&#x4E8E;1&#x4E2D;&#xFF0C;&#x628A;left&#x548C;right&#x4E92;&#x6362;&#x5373;&#x53EF;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode-&gt;pParent == pFixNode-&gt;pParent-&gt;pParent-&gt;pRight)</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//&#x83B7;&#x53D6;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#xFF08;&#x7956;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;&#xFF09;</span></span><br><span class="line">            pRBTreeNode pUncle = pFixNode-&gt;pParent-&gt;pParent-&gt;pLeft;</span><br><span class="line">            <span class="comment">//2.1 &#x5982;&#x679C;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#x4E3A;&#x7EA2;&#x8272;</span></span><br><span class="line">            <span class="keyword">if</span> (RBT_COLOR_RED == pUncle-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x628A;&#x7236;&#x8282;&#x70B9;&#x548C;&#x53D4;&#x53D4;&#x8282;&#x70B9;&#x90FD;&#x6539;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pUncle-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//&#x628A;&#x7956;&#x7236;&#x8282;&#x70B9;&#x6539;&#x4E3A;&#x7EA2;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x4E3A;&#x7956;&#x7236;&#x8282;&#x70B9;</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent-&gt;pParent;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//2.2 &#x53D4;&#x53D4;&#x8282;&#x70B9;&#x4E3A;&#x9ED1;&#x8272;&#xFF0C;&#x4E14;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x4E3A;&#x7236;&#x4EB2;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;&#xFF0C;&#x5BF9;&#x5E94;&#x60C5;&#x51B5;1.2&#xFF08;&#x5DE6;&#x53F3;&#x4E92;&#x6362;&#xFF09;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x4ECE;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x5F00;&#x59CB;&#x65CB;&#x8F6C;</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//&#x8BB0;&#x5F55;&#x4E0B;&#x65B0;&#x7684;&#x9876;&#x70B9;</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                SingleRight(pFixNode-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                <span class="comment">//&#x91CD;&#x65B0;&#x8BBE;&#x7F6E;&#x8C03;&#x6574;&#x8282;&#x70B9;</span></span><br><span class="line">                pFixNode = pNewTop-&gt;pRight;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//2.3 &#x53D4;&#x53D4;&#x8282;&#x70B9;&#x4E3A;&#x9ED1;&#x8272;&#xFF0C;&#x4E14;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x4E3A;&#x7236;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B69;&#x5B50;&#xFF0C;&#x5BF9;&#x5E94;&#x60C5;&#x51B5;1.3&#xFF08;&#x5DE6;&#x53F3;&#x4E92;&#x6362;&#xFF09;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x628A;&#x7236;&#x8282;&#x70B9;&#x53D8;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//&#x628A;&#x7956;&#x7236;&#x8282;&#x70B9;&#x53D8;&#x4E3A;&#x7EA2;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//&#x5BF9;&#x7956;&#x7236;&#x8282;&#x70B9;&#x8FDB;&#x884C;&#x5DE6;&#x65CB;&#x8F6C;&#xFF08;&#x6CE8;&#x610F;&#x5230;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#x7684;&#x60C5;&#x51B5;&#xFF09;</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent-&gt;pParent;</span><br><span class="line">                <span class="comment">//&#x8BB0;&#x5F55;&#x4E0B;&#x65B0;&#x8282;&#x70B9;</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (pRoot == pFixNode)</span><br><span class="line">                {</span><br><span class="line">                    SingleLeft(pRoot, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">                {</span><br><span class="line">                    SingleLeft(pFixNode-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">                {</span><br><span class="line">                    SingleLeft(pFixNode-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//&#x91CD;&#x65B0;&#x8BBE;&#x7F6E;&#x8C03;&#x6574;&#x8282;&#x70B9;</span></span><br><span class="line">                pFixNode = pNewTop-&gt;pRight;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x6700;&#x540E;&#x628A;&#x6839;&#x8282;&#x70B9;&#x8BBE;&#x7F6E;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">    pRoot-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::DeleteFixUp(pRBTreeNode pFixNode)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x6062;&#x590D;&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x3002;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="keyword">while</span> (pFixNode != pRoot&amp;&amp;RBT_COLOR_BLACK == pFixNode-&gt;Color)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//1. &#x5982;&#x679C;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x662F;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;</span></span><br><span class="line">        <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">        {</span><br><span class="line">            pRBTreeNode pBrotherNode = pFixNode-&gt;pParent-&gt;pRight;<span class="comment">//&#x5144;&#x5F1F;&#x8282;&#x70B9;</span></span><br><span class="line">            <span class="comment">//1.1 &#x5982;&#x679C;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x4E3A;&#x7EA2;&#x8272;&#xFF0C;&#x5219;&#x53EA;&#x80FD;&#x8C03;&#x6574;&#x6210;&#x5176;&#x4ED6;&#x7684;&#x60C5;&#x51B5;</span></span><br><span class="line">            <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x628A;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x7684;&#x989C;&#x8272;&#x6539;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">                pBrotherNode-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//&#x628A;&#x7236;&#x8282;&#x70B9;&#x7684;&#x989C;&#x8272;&#x6539;&#x4E3A;&#x7EA2;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//&#x4EE5;&#x7236;&#x8282;&#x70B9;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#x5DE6;&#x65CB;</span></span><br><span class="line">                pRBTreeNode pPivot = pFixNode-&gt;pParent;</span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="comment">//&#x5907;&#x4EFD;parent&#x7684;&#x6307;&#x9488;&#xFF0C;&#x56E0;&#x4E3A;&#x65CB;&#x8F6C;&#x64CD;&#x4F5C;&#x4F1A;&#x4FEE;&#x6539;parent&#x6307;&#x9488;</span></span><br><span class="line">                pRBTreeNode pBackParent = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="keyword">if</span> (pRoot == pPivot)</span><br><span class="line">                {</span><br><span class="line">                    SingleLeft(pRoot, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pLeft)</span><br><span class="line">                {</span><br><span class="line">                    SingleLeft(pPivot-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pRight)</span><br><span class="line">                {</span><br><span class="line">                    SingleLeft(pPivot-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//&#x6062;&#x590D;pFixNode&#x7684;parent&#x6307;&#x9488;</span></span><br><span class="line">                pFixNode-&gt;pParent = pBackParent;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//1.2 &#x5982;&#x679C;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#x4E14;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x53F3;&#x5B69;&#x5B50;&#x5747;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_BLACK == pBrotherNode-&gt;pLeft-&gt;Color&amp;&amp;RBT_COLOR_BLACK == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x628A;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x67D3;&#x6210;&#x7EA2;&#x8272;</span></span><br><span class="line">                pBrotherNode-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//FixUpNode&#x4FEE;&#x6539;&#x4E3A;&#x7236;&#x4EB2;&#x8282;&#x70B9;</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//1.3 &#x5982;&#x679C;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#x5E76;&#x4E14;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x5DE6;&#x5B69;&#x5B50;&#x4E3A;&#x7EA2;&#x8272;&#xFF0C;&#x53F3;&#x5B69;&#x5B50;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;pLeft-&gt;Color&amp;&amp;RBT_COLOR_BLACK == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x4EA4;&#x6362;&#x989C;&#x8272;</span></span><br><span class="line">                RBTColor tempNodeColor = pBrotherNode-&gt;pLeft-&gt;Color;</span><br><span class="line">                pBrotherNode-&gt;pLeft-&gt;Color = pBrotherNode-&gt;Color;</span><br><span class="line">                pBrotherNode-&gt;Color = tempNodeColor;</span><br><span class="line">                <span class="comment">//&#x5907;&#x4EFD;parent&#x7684;&#x6307;&#x9488;&#xFF0C;&#x56E0;&#x4E3A;&#x65CB;&#x8F6C;&#x64CD;&#x4F5C;&#x4F1A;&#x4FEE;&#x6539;parent&#x6307;&#x9488;</span></span><br><span class="line">                pRBTreeNode pBackParent = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//&#x4EE5;pBrotherNode&#x8FDB;&#x884C;&#x53F3;&#x65CB;</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                SingleRight(pBrotherNode-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                <span class="comment">//&#x6062;&#x590D;pFixNode&#x7684;parent&#x6307;&#x9488;</span></span><br><span class="line">                pFixNode-&gt;pParent = pBackParent;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//1.4 &#x5982;&#x679C;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#xFF0C;&#x4E14;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B69;&#x5B50;&#x4E3A;&#x7EA2;&#x8272;&#xFF0C;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;&#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;&#x989C;&#x8272;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                pBrotherNode-&gt;Color = pFixNode-&gt;pParent-&gt;Color;</span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pBrotherNode-&gt;pRight-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//&#x4EE5;pFixNode-&gt;pParent&#x5DE6;&#x65CB;</span></span><br><span class="line">                pRBTreeNode pPivot = pFixNode-&gt;pParent;</span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (pRoot == pPivot)</span><br><span class="line">                {</span><br><span class="line">                    SingleLeft(pPivot, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pLeft)</span><br><span class="line">                {</span><br><span class="line">                    SingleLeft(pPivot-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pRight)</span><br><span class="line">                {</span><br><span class="line">                    SingleLeft(pPivot-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                pFixNode = pRoot;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//2. &#x5982;&#x679C;&#x8C03;&#x6574;&#x8282;&#x70B9;&#x662F;&#x7236;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B69;&#x5B50;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">        {</span><br><span class="line">            pRBTreeNode pBrotherNode = pFixNode-&gt;pParent-&gt;pLeft;</span><br><span class="line">            <span class="comment">//2.1 &#x5982;&#x679C;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x4E3A;&#x7EA2;&#x8272;&#x8282;&#x70B9;&#xFF0C;&#x5219;&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x9009;&#x62E9;&#x8C03;&#x6574;&#x6210;&#x5176;&#x4ED6;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x518D;&#x6765;&#x5904;&#x7406;</span></span><br><span class="line">            <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x628A;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x7684;&#x989C;&#x8272;&#x6539;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">                pBrotherNode-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//&#x628A;&#x7236;&#x8282;&#x70B9;&#x7684;&#x989C;&#x8272;&#x6539;&#x4E3A;&#x7EA2;&#x8272;</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//&#x4EE5;&#x7236;&#x8282;&#x70B9;&#x4E3A;&#x6839;&#xFF0C;&#x8FDB;&#x884C;&#x53F3;&#x65CB;</span></span><br><span class="line">                pRBTreeNode pPivot = pFixNode-&gt;pParent;</span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="comment">//&#x540C;&#x6837;&#x5907;&#x4EFD;&#x7236;&#x8282;&#x70B9;&#x6307;&#x9488;</span></span><br><span class="line">                pRBTreeNode pBackParent = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                <span class="keyword">if</span> (pRoot == pPivot)</span><br><span class="line">                {</span><br><span class="line">                    SingleRight(pRoot, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pLeft)</span><br><span class="line">                {</span><br><span class="line">                    SingleRight(pPivot-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pRight)</span><br><span class="line">                {</span><br><span class="line">                    SingleRight(pPivot-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="comment">//&#x6062;&#x590D;pFixNode&#x7684;Parent&#x6307;&#x9488;</span></span><br><span class="line">                pFixNode-&gt;pParent = pBackParent;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//2.2 &#x5982;&#x679C;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#x4E14;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x53F3;&#x5B69;&#x5B50;&#x5747;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_BLACK == pBrotherNode-&gt;pLeft-&gt;Color&amp;&amp;RBT_COLOR_BLACK == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x7684;&#x989C;&#x8272;&#x6539;&#x4E3A;&#x7EA2;&#x8272;</span></span><br><span class="line">                pBrotherNode-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//FixUpNode &#x4FEE;&#x6539;&#x4E3A;&#x7236;&#x8282;&#x70B9;</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//2.3 &#x5982;&#x679C;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#xFF0C;&#x5E76;&#x4E14;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x53F3;&#x5B69;&#x5B50;&#x4E3A;&#x7EA2;&#x8272;&#xFF0C;&#x5DE6;&#x5B69;&#x5B50;&#x4E3A;&#x9ED1;&#x8272;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_BLACK == pBrotherNode-&gt;pLeft-&gt;Color&amp;&amp;RBT_COLOR_RED == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//&#x4EA4;&#x6362;&#x989C;&#x8272;</span></span><br><span class="line">                RBTColor tempNodeColor = pBrotherNode-&gt;pRight-&gt;Color;</span><br><span class="line">                pBrotherNode-&gt;pRight-&gt;Color = pBrotherNode-&gt;Color;</span><br><span class="line">                pBrotherNode-&gt;Color = tempNodeColor;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//&#x5907;&#x4EFD;parent&#x6307;&#x9488;</span></span><br><span class="line">                pRBTreeNode pBackParent = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//&#x4EE5;pBrotherNode&#x8FDB;&#x884C;&#x53F3;&#x65CB;</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                SingleLeft(pBrotherNode-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                <span class="comment">//&#x6062;&#x590D;pFixNode&#x7684;parent&#x6307;&#x9488;</span></span><br><span class="line">                pFixNode-&gt;pParent = pBrotherNode;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//2.4. &#x5982;&#x679C;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;,&#x4E14;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x5DE6;&#x5B69;&#x5B50;&#x662F;&#x7EA2;&#x8272;,&#x53F3;&#x5B69;&#x5B50;&#x989C;&#x8272;&#x4E0D;&#x9650;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;pLeft-&gt;Color)</span><br><span class="line">            {</span><br><span class="line">                pBrotherNode-&gt;Color = pFixNode-&gt;pParent-&gt;Color;</span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pBrotherNode-&gt;pLeft-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pRBTreeNode pPivot = pFixNode-&gt;pParent;</span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (pRoot == pPivot)</span><br><span class="line">                {</span><br><span class="line">                    SingleRight(pPivot, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pLeft)</span><br><span class="line">                {</span><br><span class="line">                    SingleRight(pPivot-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pRight)</span><br><span class="line">                {</span><br><span class="line">                    SingleRight(pPivot-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//&#x5728;&#x6267;&#x884C;&#x5B8C;&#x8FD9;&#x4E00;&#x6B65;&#x540E;&#xFF0C;&#x4E00;&#x5B9A;&#x4F1A;&#x8C03;&#x6574;&#x597D;&#xFF0C;&#x76F4;&#x63A5;&#x8BBE;&#x7F6E;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#x4E0B;&#x6B21;&#x9000;&#x51FA;</span></span><br><span class="line">                pFixNode = pRoot;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    pFixNode-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::SingleLeft(pRBTreeNode &amp; pNode, pRBTreeNode &amp; newTop)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">k2k1</span></span><br><span class="line"><span class="comment">\ /     \</span></span><br><span class="line"><span class="comment">k1      k2  N</span></span><br><span class="line"><span class="comment">\</span></span><br><span class="line"><span class="comment">N</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    pRBTreeNode k2 = pNode;</span><br><span class="line">    pRBTreeNode k1 = pNode-&gt;pRight;</span><br><span class="line">    k2-&gt;pRight = k1-&gt;pLeft;</span><br><span class="line">    <span class="comment">//&#x4FEE;&#x6539;k1&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x7236;&#x8282;&#x70B9;</span></span><br><span class="line">    <span class="keyword">if</span> (k1-&gt;pLeft)</span><br><span class="line">    {</span><br><span class="line">        k1-&gt;pLeft-&gt;pParent = k2;</span><br><span class="line">    }</span><br><span class="line">    k1-&gt;pLeft = k2;</span><br><span class="line">    <span class="comment">//&#x4FEE;&#x6539;k1&#x7684;&#x7236;&#x8282;&#x70B9;</span></span><br><span class="line">    k1-&gt;pParent = pNode-&gt;pParent;</span><br><span class="line">    <span class="comment">//&#x4FEE;&#x6539;k2&#x7684;&#x7236;&#x8282;&#x70B9;</span></span><br><span class="line">    k2-&gt;pParent = k1;</span><br><span class="line">    <span class="comment">//&#x8FD4;&#x56DE;&#x7ED3;&#x679C;</span></span><br><span class="line">    pNode = k1;</span><br><span class="line">    newTop = k1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::SingleRight(pRBTreeNode &amp; pNode, pRBTreeNode &amp; newTop)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">k2 k1</span></span><br><span class="line"><span class="comment">/   /     \</span></span><br><span class="line"><span class="comment">k1 N         k2</span></span><br><span class="line"><span class="comment">/</span></span><br><span class="line"><span class="comment">N</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    pRBTreeNode k2 = pNode;</span><br><span class="line">    pRBTreeNode k1 = pNode-&gt;pLeft;</span><br><span class="line">    k2-&gt;pLeft = k1-&gt;pRight;</span><br><span class="line">    <span class="comment">//&#x4FEE;&#x6539;k1&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x7236;&#x8282;&#x70B9;</span></span><br><span class="line">    <span class="keyword">if</span> (k1-&gt;pRight)</span><br><span class="line">    {</span><br><span class="line">        k1-&gt;pRight-&gt;pParent = k2;</span><br><span class="line">    }</span><br><span class="line">    k1-&gt;pRight = k2;</span><br><span class="line">    <span class="comment">//&#x4FEE;&#x6539;k1&#x7684;&#x7236;&#x8282;&#x70B9;</span></span><br><span class="line">    k1-&gt;pParent = pNode-&gt;pParent;</span><br><span class="line">    <span class="comment">//&#x4FEE;&#x6539;k2&#x7684;&#x7236;&#x8282;&#x70B9;</span></span><br><span class="line">    k2-&gt;pParent = k1;</span><br><span class="line">    <span class="comment">//&#x8FD4;&#x56DE;&#x7ED3;&#x679C;</span></span><br><span class="line">    pNode = k1;</span><br><span class="line">    newTop = k1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::ReplaceParent(pRBTreeNode pBeReplacedNode, pRBTreeNode pReplaceNode)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">//&#x66FF;&#x6362;&#x8282;&#x70B9;&#x5E76;&#x4FEE;&#x6539;&#x7236;&#x8282;&#x70B9;&#x7684;&#x64CD;&#x4F5C;</span></span><br><span class="line">    <span class="comment">//1. &#x5982;&#x679C;pBeReplacedNode&#x662F;&#x6839;&#x8282;&#x70B9;</span></span><br><span class="line">    <span class="keyword">if</span> (pBeReplacedNode == pRoot)</span><br><span class="line">    {</span><br><span class="line">        pRoot = pReplaceNode;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//2. &#x5982;&#x679C;pBeReplacedNode&#x662F;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pBeReplacedNode == pBeReplacedNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">    {</span><br><span class="line">        pBeReplacedNode-&gt;pParent-&gt;pLeft = pReplaceNode;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//3. &#x5982;&#x679C;pBeReplacedNode&#x662F;&#x7236;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B69;&#x5B50;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pBeReplacedNode == pBeReplacedNode-&gt;pParent-&gt;pRight)</span><br><span class="line">    {</span><br><span class="line">        pBeReplacedNode-&gt;pParent-&gt;pRight = pReplaceNode;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//4. &#x4FEE;&#x6539;pReplaceNode&#x7684;&#x7236;&#x4EB2;&#x8282;&#x70B9;</span></span><br><span class="line">    pReplaceNode-&gt;pParent = pBeReplacedNode-&gt;pParent;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::GetMinNode(pRBTreeNode pNode, pRBTreeNode &amp; pMinNode)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == pNode || pNode == pNil)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    pRBTreeNode pPreNode = pNode-&gt;pParent;</span><br><span class="line">    <span class="keyword">while</span> (pNil != pNode)</span><br><span class="line">    {</span><br><span class="line">        pPreNode = pNode;</span><br><span class="line">        pNode = pNode-&gt;pLeft;</span><br><span class="line">    }</span><br><span class="line">    pMinNode = pPreNode;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">RBTree::RBTree()</span><br><span class="line">{</span><br><span class="line">    pRoot = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">    pNil = <span class="keyword">new</span> RBTreeNode();</span><br><span class="line">    pNil-&gt;pLeft = <span class="literal">nullptr</span>;</span><br><span class="line">    pNil-&gt;pRight = <span class="literal">nullptr</span>;</span><br><span class="line">    pNil-&gt;pParent = <span class="literal">nullptr</span>;</span><br><span class="line">    pNil-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">    pNil-&gt;Value = <span class="number">0xFFFFFFFF</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">RBTree::~RBTree()</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (!isEmpty())</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">queue</span>&lt;pRBTreeNode&gt;nodeQue;</span><br><span class="line">        nodeQue.push(pRoot);<span class="comment">//&#x6839;&#x8282;&#x70B9;&#x5165;&#x961F;</span></span><br><span class="line">        <span class="keyword">while</span> (!nodeQue.empty())<span class="comment">//&#x961F;&#x5217;&#x975E;&#x7A7A;</span></span><br><span class="line">        {</span><br><span class="line">            pRBTreeNode pNode = nodeQue.front();</span><br><span class="line">            pRBTreeNode pLeft = pNode-&gt;pLeft;</span><br><span class="line">            pRBTreeNode pRight = pNode-&gt;pRight;</span><br><span class="line">            <span class="comment">//&#x51FA;&#x961F;&#x91CA;&#x653E;&#x8D44;&#x6E90;</span></span><br><span class="line">            nodeQue.pop();</span><br><span class="line">            <span class="keyword">if</span> (pLeft != pNil)nodeQue.push(pLeft);</span><br><span class="line">            <span class="keyword">if</span> (pRight != pNil)nodeQue.push(pRight);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (pNil)<span class="comment">//&#x5982;&#x679C;&#x662F;&#x7A7A;&#x8282;&#x70B9;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">delete</span> pNil;</span><br><span class="line">        pNil = <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::FindElement(<span class="keyword">int</span> Value)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (isEmpty())</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    pRBTreeNode pCurrent = pRoot;</span><br><span class="line">    <span class="keyword">while</span> (pNil != pCurrent)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (Value&lt;pCurrent-&gt;Value)</span><br><span class="line">        {</span><br><span class="line">            pCurrent = pCurrent-&gt;pLeft;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Value&gt;pCurrent-&gt;Value)</span><br><span class="line">        {</span><br><span class="line">            pCurrent = pCurrent-&gt;pRight;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::BFS()</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (isEmpty())<span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">queue</span>&lt;pRBTreeNode&gt;nodeQue;</span><br><span class="line">    nodeQue.push(pRoot);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//BFS</span></span><br><span class="line">    <span class="keyword">int</span> TreeHeight = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!nodeQue.empty())</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> nCurrentLevelSize = nodeQue.size();<span class="comment">//&#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x5C42;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;</span></span><br><span class="line">        <span class="keyword">int</span> nCnt = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;&#x7B2C;&quot;</span> &lt;&lt; TreeHeight + <span class="number">1</span> &lt;&lt; <span class="string">&quot;&#x5C42;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span> (nCnt &lt; nCurrentLevelSize)</span><br><span class="line">        {</span><br><span class="line">            pRBTreeNode acessNode = nodeQue.front();</span><br><span class="line">            nodeQue.pop();</span><br><span class="line">            <span class="keyword">if</span> (acessNode == pRoot)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; acessNode-&gt;Value &lt;&lt; <span class="string">&quot;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x989C;&#x8272;&quot;</span> &lt;&lt; acessNode-&gt;Color &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (acessNode-&gt;pParent-&gt;pLeft == acessNode)</span><br><span class="line">                {</span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[(&quot;</span> &lt;&lt; acessNode-&gt;Value &lt;&lt; <span class="string">&quot;&#x989C;&#x8272;&quot;</span> &lt;&lt; acessNode-&gt;Color &lt;&lt; <span class="string">&apos;)&apos;</span> &lt;&lt; <span class="string">&apos;(&apos;</span> &lt;&lt; acessNode-&gt;pParent-&gt;Value &lt;&lt; <span class="string">&quot;&#x7684;&#x5DE6;&#x5B69;&#x5B50;)]&quot;</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (acessNode-&gt;pParent-&gt;pRight == acessNode)</span><br><span class="line">                {</span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[(&quot;</span> &lt;&lt; acessNode-&gt;Value &lt;&lt; <span class="string">&quot;&#x989C;&#x8272;&quot;</span> &lt;&lt; acessNode-&gt;Color &lt;&lt; <span class="string">&apos;)&apos;</span> &lt;&lt; <span class="string">&apos;(&apos;</span> &lt;&lt; acessNode-&gt;pParent-&gt;Value &lt;&lt; <span class="string">&quot;&#x7684;&#x53F3;&#x5B69;&#x5B50;)]&quot;</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="comment">//&#x4E0B;&#x4E00;&#x5C42;&#x7684;&#x5143;&#x7D20;</span></span><br><span class="line">            pRBTreeNode pLeft = acessNode-&gt;pLeft;</span><br><span class="line">            pRBTreeNode pRight = acessNode-&gt;pRight;</span><br><span class="line">            <span class="keyword">if</span> (pNil != pLeft)</span><br><span class="line">            {</span><br><span class="line">                nodeQue.push(pLeft);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (pNil != pRight)</span><br><span class="line">            {</span><br><span class="line">                nodeQue.push(pRight);</span><br><span class="line">            }</span><br><span class="line">            ++nCnt;</span><br><span class="line">        }</span><br><span class="line">        TreeHeight++;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::isEmpty()<span class="comment">//&#x5224;&#x7A7A;</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">return</span> pRoot == <span class="literal">nullptr</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::GetMax(pRBTreeNode pNode, <span class="keyword">int</span> &amp; MaxValue)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == pNode)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (pNode)</span><br><span class="line">    {</span><br><span class="line">        MaxValue = pNode-&gt;Value;</span><br><span class="line">        pNode = pNode-&gt;pRight;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::GetMin(pRBTreeNode pNode, <span class="keyword">int</span> &amp; MinValue)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == pNode)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (pNode)</span><br><span class="line">    {</span><br><span class="line">        MinValue = pNode-&gt;Value;</span><br><span class="line">        pNode = pNode-&gt;pLeft;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::DeleteElement(<span class="keyword">int</span> DeleteValue)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x5220;&#x9664;&#x64CD;&#x4F5C;</span></span><br><span class="line"><span class="comment">&#x57FA;&#x672C;&#x601D;&#x8DEF;&#x5982;&#x4E0B;&#xFF1A;</span></span><br><span class="line"><span class="comment">1. &#x5C06;&#x7EA2;&#x9ED1;&#x6811;&#x5F53;&#x505A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#xFF0C;&#x5C06;&#x8282;&#x70B9;&#x5220;&#x9664;&#x3002;</span></span><br><span class="line"><span class="comment">&#x5206;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</span></span><br><span class="line"><span class="comment">1. &#x88AB;&#x5220;&#x9664;&#x8282;&#x70B9;&#x6CA1;&#x6709;&#x513F;&#x5B50;&#xFF0C;&#x5373;&#x4E3A;&#x53F6;&#x8282;&#x70B9;&#xFF0C;&#x6B64;&#x65F6;&#x76F4;&#x63A5;&#x5220;&#x9664;&#x5373;&#x53EF;&#x3002;&#x7528;&#x7A7A;&#x8282;&#x70B9;&#x9876;&#x66FF;&#x5B83;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</span></span><br><span class="line"><span class="comment">2. &#x88AB;&#x5220;&#x9664;&#x8282;&#x70B9;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x5220;&#x9664;&#x8BE5;&#x8282;&#x70B9;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x8BE5;&#x8282;&#x70B9;&#x7684;&#x552F;&#x4E00;&#x5B50;&#x8282;&#x70B9;&#x9876;&#x66FF;&#x4ED6;&#x3002;</span></span><br><span class="line"><span class="comment">3. &#x88AB;&#x5220;&#x9664;&#x8282;&#x70B9;&#x6709;&#x4E24;&#x4E2A;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x5219;&#x8981;&#x5148;&#x627E;&#x5230;&#x5B83;&#x7684;&#x76F4;&#x63A5;&#x540E;&#x7EE7;&#x8282;&#x70B9;&#xFF0C;&#x628A;&#x503C;&#x590D;&#x5236;&#x5230;&#x5B83;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x5220;&#x9664;&#x5B83;&#x7684;&#x540E;&#x7EE7;&#x8282;&#x70B9;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x7684;&#x540E;&#x7EE7;&#x8282;&#x70B9;&#x4E0D;&#x53EF;&#x80FD;&#x6709;&#x4E24;&#x4E2A;&#x975E;&#x7A7A;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x6700;&#x591A;&#x53EA;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x3002;</span></span><br><span class="line"><span class="comment">2. &#x4FEE;&#x6B63;&#x8FD9;&#x68F5;&#x6811;</span></span><br><span class="line"><span class="comment">&#x5728;&#x5220;&#x9664;&#x8282;&#x70B9;&#x540E;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x8FDD;&#x53CD;2,4,5&#x4E09;&#x4E2A;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#xFF0C;&#x7B2C;&#x4E8C;&#x6B65;&#x5373;&#x662F;&#x8C03;&#x6574;&#x6574;&#x68F5;&#x6811;&#xFF0C;&#x4F7F;&#x4E4B;&#x6EE1;&#x8DB3;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x3002;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isEmpty())</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//&#x5148;&#x627E;&#x5230;&#x8981;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;</span></span><br><span class="line">    pRBTreeNode pCurrent = pRoot;</span><br><span class="line">    pRBTreeNode pDeletedNode = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">while</span> (pNil != pCurrent)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (DeleteValue&lt;pCurrent-&gt;Value)</span><br><span class="line">        {</span><br><span class="line">            pCurrent = pCurrent-&gt;pLeft;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (DeleteValue&gt;pCurrent-&gt;Value)</span><br><span class="line">        {</span><br><span class="line">            pCurrent = pCurrent-&gt;pRight;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            pDeletedNode = pCurrent;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//2. &#x5982;&#x679C;&#x672A;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x9000;&#x51FA;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == pDeletedNode)<span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//3. &#x6267;&#x884C;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;pDeletedNode,pRealDeleteNode,pFixUpNode.</span></span><br><span class="line"></span><br><span class="line">    pRBTreeNode pRealDeleteNode = <span class="literal">nullptr</span>;</span><br><span class="line">    pRBTreeNode pFixUpNode = <span class="literal">nullptr</span>;</span><br><span class="line">    RBTColor RealDeleteColor;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.1&#x5982;&#x679C;&#x5DE6;&#x5B50;&#x6811;&#x4E3A;&#x7A7A;</span></span><br><span class="line">    <span class="keyword">if</span> (pNil == pDeletedNode-&gt;pLeft)</span><br><span class="line">    {</span><br><span class="line">        pRealDeleteNode = pDeletedNode;</span><br><span class="line">        RealDeleteColor = pRealDeleteNode-&gt;Color;</span><br><span class="line">        pFixUpNode = pRealDeleteNode-&gt;pRight;</span><br><span class="line">        <span class="comment">//&#x66FF;&#x6362;</span></span><br><span class="line">        ReplaceParent(pRealDeleteNode, pRealDeleteNode-&gt;pRight);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//3.2 &#x5982;&#x679C;&#x53F3;&#x5B50;&#x6811;&#x4E3A;&#x7A7A;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pNil == pDeletedNode-&gt;pRight)</span><br><span class="line">    {</span><br><span class="line">        pRealDeleteNode = pDeletedNode;</span><br><span class="line">        RealDeleteColor = pRealDeleteNode-&gt;Color;</span><br><span class="line">        pFixUpNode = pRealDeleteNode-&gt;pLeft;</span><br><span class="line">        <span class="comment">//&#x66FF;&#x6362;</span></span><br><span class="line">        ReplaceParent(pRealDeleteNode, pRealDeleteNode-&gt;pLeft);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//3.3 &#x5982;&#x679C;&#x5DE6;&#x53F3;&#x5B50;&#x6811;&#x90FD;&#x4E0D;&#x4E3A;&#x7A7A;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x53EF;&#x4EE5;&#x7528;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x6700;&#x5C0F;&#x7684;&#x8282;&#x70B9;&#x6216;&#x8005;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x6700;&#x5927;&#x7684;&#x8282;&#x70B9;&#x6765;&#x66FF;&#x6362;&#xFF0C;&#x8FD9;&#x91CC;&#x9009;&#x62E9;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x6700;&#x5C0F;&#x7684;&#x8282;&#x70B9;&#x3002;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6027;&#x8D28;&#x4E0D;&#x53D8;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        <span class="comment">//&#x83B7;&#x53D6;&#x51C6;&#x5907;&#x5220;&#x9664;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x6700;&#x5C0F;&#x8282;&#x70B9;&#xFF0C;pRealDeleteNode&#x4E00;&#x5B9A;&#x4E0D;&#x662F;pNil</span></span><br><span class="line">        <span class="keyword">bool</span> GetMinRet = GetMinNode(pDeletedNode-&gt;pRight, pRealDeleteNode);</span><br><span class="line">        assert(GetMinRet);</span><br><span class="line">        assert(pRealDeleteNode != pNil);</span><br><span class="line">        RealDeleteColor = pRealDeleteNode-&gt;Color;</span><br><span class="line">        <span class="comment">//&#x6700;&#x5C0F;&#x7684;&#x70B9;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x5DF2;&#x5B9A;&#x4F4D;pNil,&#x6240;&#x4EE5;pRight&#x5C31;&#x662F;&#x5B83;&#x7684;&#x540E;&#x7EE7;&#x8282;&#x70B9;&#x3002;</span></span><br><span class="line">        pFixUpNode = pRealDeleteNode-&gt;pRight;</span><br><span class="line">        <span class="comment">//&#x601D;&#x8DEF;&#x662F;&#x7528;&#x6700;&#x5C0F;&#x70B9;&#xFF08;pRealDeleteNode&#xFF09;&#x6765;&#x66FF;&#x6362;&#x9700;&#x8981;&#x5220;&#x9664;&#x7684;&#x70B9;&#xFF08;pDeletedNode&#xFF09;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5206;&#x4E24;&#x79CD;&#x60C5;&#x51B5;</span></span><br><span class="line">        <span class="keyword">if</span> (pRealDeleteNode-&gt;pParent == pDeletedNode)</span><br><span class="line">        {</span><br><span class="line">            pFixUpNode-&gt;pParent = pRealDeleteNode;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//&#x8BA9;pRealDeleteNode&#x7236;&#x8282;&#x70B9;&#x6307;&#x5411; pRealDeleteNode-&gt;pRight</span></span><br><span class="line">            ReplaceParent(pRealDeleteNode, pRealDeleteNode-&gt;pRight);</span><br><span class="line">            <span class="comment">//&#x8BA9;pRealDeleteNode&#x7684;&#x53F3;&#x8282;&#x70B9;&#x63A5;&#x7BA1;&#x539F;&#x6765;pDeletedNode&#x7684;&#x53F3;&#x8282;&#x70B9;</span></span><br><span class="line">            pRealDeleteNode-&gt;pRight = pDeletedNode-&gt;pRight;</span><br><span class="line">            <span class="comment">//&#x8BA9;pRealDeleteNode&#x7684;&#x53F3;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x6307;&#x5411;pRealDeleteNode(&#x53F3;&#x5B50;&#x6811;&#x4E00;&#x5B9A;&#x4E0D;&#x4E3A;pNil)</span></span><br><span class="line">            pRealDeleteNode-&gt;pRight-&gt;pParent = pRealDeleteNode;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x8BA9;pDeleteNode&#x7236;&#x8282;&#x70B9;&#x6307;&#x5411;pRealDeleteNode</span></span><br><span class="line">        ReplaceParent(pDeletedNode, pRealDeleteNode);</span><br><span class="line">        <span class="comment">//&#x8BA9;pRealDeleteNode&#x7684;&#x5DE6;&#x8282;&#x70B9;&#x63A5;&#x7BA1;&#x539F;&#x6765;pDeleteNode&#x7684;&#x53F3;&#x8282;&#x70B9;</span></span><br><span class="line">        pRealDeleteNode-&gt;pLeft = pDeletedNode-&gt;pLeft;</span><br><span class="line">        <span class="comment">//&#x8BA9;pRealDeleteNode&#x7684;&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x7236;&#x8282;&#x70B9;&#x6307;&#x5411;pRealDeleteNode(&#x5DE6;&#x5B50;&#x6811;&#x4E00;&#x5B9A;&#x4E0D;&#x4E3A;pNil)</span></span><br><span class="line">        pRealDeleteNode-&gt;pLeft-&gt;pParent = pRealDeleteNode;</span><br><span class="line">        <span class="comment">// &#x4F7F;&#x7528;pDeleteNode&#x7684;&#x989C;&#x8272;</span></span><br><span class="line">        pRealDeleteNode-&gt;Color = pDeletedNode-&gt;Color;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//4. &#x5728;pFixUpNode&#x70B9;&#x6267;&#x884C;&#x8C03;&#x6574;</span></span><br><span class="line">    <span class="keyword">if</span> (RBT_COLOR_BLACK == RealDeleteColor)</span><br><span class="line">    {</span><br><span class="line">        DeleteFixUp(pFixUpNode);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//5. &#x5904;&#x7406;&#x6839;&#x8282;&#x70B9;&#x95EE;&#x9898;</span></span><br><span class="line">    <span class="keyword">if</span> (pRoot == pNil)</span><br><span class="line">        pRoot = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">delete</span> pDeletedNode;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::InsertData(<span class="keyword">int</span> InsertValue)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x63D2;&#x5165;&#x8282;&#x70B9;&#xFF1A;</span></span><br><span class="line"><span class="comment">&#x4EE5;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x65B9;&#x6CD5;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x3002;</span></span><br><span class="line"><span class="comment">&#x4E00;&#x5F00;&#x59CB;&#x8981;&#x628A;&#x8282;&#x70B9;&#x7684;&#x989C;&#x8272;&#x6807;&#x8BB0;&#x4E3A;&#x7EA2;&#x8272;&#x3002;&#x5982;&#x679C;&#x8BBE;&#x4E3A;&#x9ED1;&#x8272;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x6839;&#x5230;&#x53F6;&#x5B50;&#x7684;&#x8DEF;&#x5F84;&#x4E0A;&#xFF0C;&#x4F1A;&#x6709;&#x4E00;&#x6761;&#x8DEF;&#x591A;&#x4E00;&#x4E2A;&#x989D;&#x5916;&#x7684;&#x9ED1;&#x8272;&#x8282;&#x70B9;&#x3002;&#x8FD9;&#x4E2A;&#x662F;&#x5F88;&#x96BE;&#x8C03;&#x6574;&#x7684;&#x3002;</span></span><br><span class="line"><span class="comment">&#x53E6;&#x4E00;&#x4E2A;&#x7406;&#x89E3;&#x662F;&#xFF0C;&#x628A;&#x63D2;&#x5165;&#x7684;&#x8282;&#x70B9;&#x7740;&#x8272;&#x4E3A;&#x7EA2;&#x8272;&#xFF0C;&#x4E0D;&#x4F1A;&#x8FDD;&#x80CC;&#x7EA6;&#x675F;&#x6761;&#x4EF6;1235&#xFF0C;&#x53EA;&#x8FDD;&#x80CC;&#x4E00;&#x4E2A;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x5904;&#x7406;&#x7684;&#x60C5;&#x51B5;&#x4F1A;&#x5F88;&#x5C11;&#x3002;</span></span><br><span class="line"><span class="comment">&#x63D2;&#x5165;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x65CB;&#x8F6C;&#x3001;&#x7740;&#x8272;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x4F7F;&#x4E4B;&#x91CD;&#x65B0;&#x6210;&#x4E3A;&#x4E00;&#x9897;&#x7EA2;&#x9ED1;&#x6811;&#x3002;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="comment">//&#x63D2;&#x5165;&#x7684;&#x7279;&#x6B8A;&#x60C5;&#x51B5;&#xFF1A;&#x8981;&#x63D2;&#x5165;&#x7684;&#x8282;&#x70B9;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;</span></span><br><span class="line">    <span class="keyword">if</span> (isEmpty())</span><br><span class="line">    {</span><br><span class="line">        pRoot = <span class="keyword">new</span> RBTreeNode();</span><br><span class="line">        pRoot-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">        pRoot-&gt;Value = InsertValue;</span><br><span class="line">        pRoot-&gt;pLeft = pNil;</span><br><span class="line">        pRoot-&gt;pRight = pNil;</span><br><span class="line">        pRoot-&gt;pParent = pNil;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//2. &#x627E;&#x5230;&#x9700;&#x8981;&#x63D2;&#x5165;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">    pRBTreeNode pPreNode = pRoot-&gt;pParent;</span><br><span class="line">    pRBTreeNode pCurrent = pRoot;</span><br><span class="line">    <span class="keyword">while</span> (pNil != pCurrent)</span><br><span class="line">    {</span><br><span class="line">        pPreNode = pCurrent;</span><br><span class="line">        <span class="keyword">if</span> (InsertValue &lt;= pCurrent-&gt;Value)</span><br><span class="line">        {</span><br><span class="line">            pCurrent = pCurrent-&gt;pLeft;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            pCurrent = pCurrent-&gt;pRight;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//3. &#x628A;&#x6570;&#x636E;&#x63D2;&#x5165;&#x5230;&#x6B63;&#x786E;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">    pRBTreeNode pInsertNode = <span class="keyword">new</span> RBTreeNode();</span><br><span class="line">    pInsertNode-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">    pInsertNode-&gt;Value = InsertValue;</span><br><span class="line">    pInsertNode-&gt;pLeft = pNil;</span><br><span class="line">    pInsertNode-&gt;pRight = pNil;</span><br><span class="line">    pInsertNode-&gt;pParent = pPreNode;</span><br><span class="line">    <span class="keyword">if</span> (InsertValue &lt;= pPreNode-&gt;Value)</span><br><span class="line">    {</span><br><span class="line">        pPreNode-&gt;pLeft = pInsertNode;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        pPreNode-&gt;pRight = pInsertNode;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//4. &#x8C03;&#x6574;</span></span><br><span class="line">    InsertFixUP(pInsertNode);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h1 id="&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;">&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;</h1><p>main.cpp <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;RBTree.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    RBTree rbTree;</span><br><span class="line">    <span class="comment">//&#x63D2;&#x5165;</span></span><br><span class="line">    <span class="keyword">int</span> n[]= { <span class="number">12</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">19</span>, <span class="number">4</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">16</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">17</span> };</span><br><span class="line">    <span class="comment">//int n[] = {1,2,3 };</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        rbTree.InsertData(n[i]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    rbTree.BFS();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;------------------------------&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//&#x5220;&#x9664;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">20</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;&#x5220;&#x9664;&quot;</span> &lt;&lt; n[i] &lt;&lt; <span class="string">&quot;&#x540E;&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        rbTree.DeleteElement(n[i]);</span><br><span class="line">        rbTree.BFS();</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x63D2;&#x5165;&#x4EFB;&#x610F;&#x5E8F;&#x5217;</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;&#x63D2;&#x5165;&#x4EFB;&#x610F;&#x5E8F;&#x5217;&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        rbTree.InsertData(i);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x67E5;&#x627E;3</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;&#x67E5;&#x627E;3&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;&#x7ED3;&#x679C;:&quot;</span> &lt;&lt; rbTree.FindElement(<span class="number">3</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    rbTree.BFS();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;------------------------------&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//&#x5220;&#x9664;&#x4EFB;&#x610F;&#x5E8F;&#x5217;,&#x53EA;&#x7559;&#x4E09;&#x4E2A;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">99</span>; i &gt;= <span class="number">3</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        rbTree.DeleteElement(i);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x5E7F;&#x5EA6;&#x904D;&#x5386;</span></span><br><span class="line">    rbTree.BFS();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;------------------------------&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h1 id="&#x56FE;&#x89E3;">&#x56FE;&#x89E3;</h1><h2 id="&#x5DE6;&#x65CB;">&#x5DE6;&#x65CB;</h2><p>To Do...</p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 红黑树 </tag>
            
            <tag> 算法导论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Win10+Anaconda+1060安装TensorFlowow-GPU版</title>
      <link href="//posts/2e45cbc8/"/>
      <url>//posts/2e45cbc8/</url>
      <content type="html"><![CDATA[<p>1060&#x771F;&#x9999;&#x3002;</p><a id="more"></a><h1 id="&#x5F15;&#x8A00;">&#x5F15;&#x8A00;</h1><p>TensorFlow&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x673A;&#x5668;&#x5B66;&#x4E60;&amp;&amp;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x4F7F;&#x7528;GPU&#x5728;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x5927;&#x5E45;&#x63D0;&#x9AD8;&#x5176;&#x8FD0;&#x7B97;&#x901F;&#x5EA6;&#x3002;</p><p>&#x672C;&#x6587;&#x8BB0;&#x5F55;&#x4E86;&#x6211;&#x5B89;&#x88C5;TensorFlow-GPU&#x7248;&#x672C;&#x7684;&#x8FC7;&#x7A0B;&#x3002; # &#x73AF;&#x5883; 1. &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF1A;Win10&#xFF0C;Windows SDK&#xFF1A;10.0.17134.0 2. GPU&#x578B;&#x53F7;&#xFF1A;GTX1060&#xFF0C;&#x79FB;&#x52A8;&#x7248; 3. IDE&#xFF1A;VS2017&#x4F01;&#x4E1A;&#x7248;&#xFF0C;&#x7248;&#x672C;15.8.5 4. Anaconda&#x7248;&#x672C;1.9.2 5. &#x76EE;&#x6807;TensorFlow&#x7248;&#x672C;&#xFF1A;1.10</p><h1 id="&#x5B89;&#x88C5;nvidia&#x663E;&#x5361;&#x9A71;&#x52A8;">&#x5B89;&#x88C5;NVIDIA&#x663E;&#x5361;&#x9A71;&#x52A8;</h1><p>&#x4E00;&#x822C;&#x7684;&#x90FD;&#x662F;GTX&#x7CFB;&#x5217;&#x7684;&#x663E;&#x5361;&#xFF0C;&#x53EF;&#x7531;NVIDIA&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#x6216;&#x8005;&#x4ECE;&#x7535;&#x8111;&#x5382;&#x5546;&#x7ED9;&#x51FA;&#x7684;&#x9A71;&#x52A8;&#x91CC;&#x5B89;&#x88C5;&#x3002; &#x6211;&#x7684;&#x7B14;&#x8BB0;&#x672C;&#x662F;&#x8054;&#x60F3;&#x62EF;&#x6551;&#x8005;Y7000P&#xFF0C;&#x6211;&#x8FD9;&#x91CC;&#x76F4;&#x63A5;&#x5B89;&#x88C5;&#x7684;&#x8054;&#x60F3;&#x7ED9;&#x7684;&#x9A71;&#x52A8;&#x3002;</p><h1 id="&#x5B89;&#x88C5;cuda&#x548C;cudnn">&#x5B89;&#x88C5;CUDA&#x548C;cudnn</h1><p>&#x5728;TensorFlow&#x7684;&#x5B89;&#x88C5;&#x4ECB;&#x7ECD;&#x91CC;&#x7684;&#x663E;&#x793A;&#xFF0C;TensorFlow&#x652F;&#x6301;CUDA9.0&#x3002;</p><p>&#x4E0B;&#x8F7D;CUDA&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#xFF0C;CUDA9.0&#x7ADF;&#x7136;&#x4E0D;&#x652F;&#x6301;1060&#x3002;&#x66FE;&#x8003;&#x8651;&#x5728;Docker&#x73AF;&#x5883;&#x4E0B;&#x5B89;&#x88C5;TensorFlow&#xFF0C;&#x4F46;&#x662F;&#x53D1;&#x73B0;NVIDIA&#x7ED9;&#x7684;GPU&#x652F;&#x6301;&#x7684;Docker&#x73AF;&#x5883;&#x662F;Linux&#x4E0B;&#x7684;&#xFF0C;&#x4E0D;&#x652F;&#x6301;Windows&#x3002;</p><p>&#x5982;&#x679C;&#x8981;&#x5728;CUDA9.2&#x4E0B;&#x5B89;&#x88C5;TensorFlow&#xFF0C;&#x5219;&#x8981;&#x901A;&#x8FC7;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x3002;&#x4E0D;&#x8FC7;&#x597D;&#x5728;&#x6709;&#x5927;&#x795E;&#x5DF2;&#x7ECF;&#x7F16;&#x8BD1;&#x597D;&#x4E86;&#x3002;</p><p>&#x5B89;&#x88C5;CUDA9.2&#xFF0C;&#x53CA;&#x5176;&#x8865;&#x4E01;&#x7A0B;&#x5E8F;&#x3002;</p><p>&#x5728;cudnn&#x91CC;&#x627E;&#x5230;&#x652F;&#x6301;CUDA9.2&#x7684;&#x7248;&#x672C;&#x3002;&#x89E3;&#x538B;&#x540E;&#x5C06;bin,include,lib&#x6587;&#x4EF6;&#x5939;&#x7684;&#x6587;&#x4EF6;&#xFF08;&#x4E00;&#x5171;&#x5C31;&#x4E09;&#x4E2A;&#xFF09;&#x590D;&#x5236;&#x5230;CUDA9.2&#x7684;&#x76EE;&#x5F55;&#xFF08;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.2&#xFF09;&#x91CC;&#x3002;</p><p>&#x81F3;&#x6B64;&#xFF0C;CUDA9.2&#x5DF2;&#x5B89;&#x88C5;&#x5B8C;&#x6BD5;&#x3002;</p><p>&#x6211;&#x7684;VS&#x662F;VS2017&#x4F01;&#x4E1A;&#x7248;&#xFF0C;&#x7248;&#x672C;15.8.5&#x3002;&#x4E3A;&#x4E86;&#x80FD;&#x6B63;&#x5E38;&#x7684;&#x8FD0;&#x884C;CUDA9.2&#x7ED9;&#x51FA;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#xFF0C;&#x9700;&#x8981;&#x5C06;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.2\include\crt&#x91CC;&#x7684;host_config.h &#x7B2C;131&#x884C;&#xFF0C;&#x6539;&#x4E3A; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#if _MSC_VER &lt; 1600 || _MSC_VER &gt; 1920</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x6253;&#x5F00;&#x5BF9;&#x5E94;&#x7684;VS2017&#x7684;.sln&#x6587;&#x4EF6;&#xFF0C;&#x8FD0;&#x884C;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x4E86;&#x3002;</p><h1 id="&#x5728;anaconda&#x73AF;&#x5883;&#x4E2D;&#x5B89;&#x88C5;tensorflow1.10">&#x5728;Anaconda&#x73AF;&#x5883;&#x4E2D;&#x5B89;&#x88C5;TensorFlow1.10</h1><p>&#x4EE5;&#x7BA1;&#x7406;&#x5458;&#x8EAB;&#x4EFD;&#x8FD0;&#x884C;anaconda prompt&#x3002;</p><p>&#x9996;&#x5148;&#x5728;anaconda&#x91CC;&#x5EFA;&#x4E00;&#x4E2A;&#x76EE;&#x5F55; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n tensorflow pip python=3.6</span><br></pre></td></tr></table></figure></p><p>&#x6FC0;&#x6D3B; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate tensorflow</span><br></pre></td></tr></table></figure></p><p>&#x66F4;&#x65B0;pip <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure></p><p>&#x5728;<a href="https://github.com/fo40225/tensorflow-windows-wheel/tree/master/1.10.0/py36/GPU/cuda92cudnn72sse2" target="_blank" rel="noopener">&#x8FD9;&#x91CC;</a>&#x4E0B;&#x8F7D;&#x7531;&#x5927;&#x795E;&#x7F16;&#x8BD1;&#x597D;&#x7684;TensorFlow1.10GPU&#x7248;&#x672C;&#x3002;</p><p>&#x8F6C;&#x5230;&#x4E0B;&#x8F7D;&#x76EE;&#x5F55;&#xFF0C;&#x901A;&#x8FC7;pip install&#x547D;&#x4EE4;&#x5B89;&#x88C5;&#x3002; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install tensorflow_gpu-1.10.0-cp36-cp36m-win_amd64.whl</span><br></pre></td></tr></table></figure></p><p>&#x7ED3;&#x679C;&#x5982;&#x56FE; <img src="/posts/2e45cbc8/&#x5B89;&#x88C5;TF1.png" alt="&#x5B89;&#x88C5;TF1"></p><h1 id="&#x6D4B;&#x8BD5;">&#x6D4B;&#x8BD5;</h1><h2 id="&#x5B89;&#x88C5;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;">&#x5B89;&#x88C5;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;</h2><p>&#x68C0;&#x6D4B;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</p><ol type="1"><li><p>&#x8C03;&#x7528;Python <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python</span><br></pre></td></tr></table></figure></p></li><li><p>&#x5728; Python &#x4EA4;&#x4E92;&#x5F0F; shell &#x4E2D;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x51E0;&#x884C;&#x7A0B;&#x5E8F;&#x4EE3;&#x7801;&#xFF1A; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import tensorflow as tf</span><br><span class="line">&gt;&gt;&gt; hello = tf.constant(&apos;Hello, TensorFlow!&apos;)</span><br><span class="line">&gt;&gt;&gt; sess = tf.Session()</span><br><span class="line">&gt;&gt;&gt; print(sess.run(hello))</span><br></pre></td></tr></table></figure></p></li></ol><p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x56FE; <img src="/posts/2e45cbc8/&#x5B89;&#x88C5;TF2.png" alt="&#x5B89;&#x88C5;TF2"> &#x8868;&#x793A;&#x5B89;&#x88C5;&#x6210;&#x529F;&#x3002; ## &#x6D4B;&#x8BD5;GPU&#x901F;&#x5EA6;&#x4EE3;&#x7801; <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">device_name=<span class="string">&quot;/cpu:0&quot;</span></span><br><span class="line"></span><br><span class="line">shape=(int(<span class="number">10000</span>),int(<span class="number">10000</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.device(device_name):</span><br><span class="line"><span class="comment">#&#x5F62;&#x72B6;&#x4E3A;shap,&#x5143;&#x7D20;&#x670D;&#x4ECE;minval&#x548C;maxval&#x4E4B;&#x95F4;&#x7684;&#x5747;&#x5300;&#x5206;&#x5E03;</span></span><br><span class="line">    random_matrix = tf.random_uniform(shape=shape, minval=<span class="number">0</span>, maxval=<span class="number">1</span>)</span><br><span class="line">    dot_operation = tf.matmul(random_matrix, tf.transpose(random_matrix))</span><br><span class="line">    sum_operation = tf.reduce_sum(dot_operation)</span><br><span class="line"></span><br><span class="line">startTime = datetime.now()</span><br><span class="line"><span class="keyword">with</span> tf.Session(config=tf.ConfigProto(log_device_placement=<span class="keyword">True</span>)) <span class="keyword">as</span> session:</span><br><span class="line">    result = session.run(sum_operation)</span><br><span class="line">    print(result)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;\n&quot;</span> * <span class="number">2</span>)</span><br><span class="line">print(<span class="string">&quot;Shape:&quot;</span>, shape, <span class="string">&quot;Device:&quot;</span>, device_name)</span><br><span class="line">print(<span class="string">&quot;Time taken:&quot;</span>, datetime.now() - startTime)</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x6211;&#x7684;&#x7535;&#x8111;&#x4E0A;&#xFF0C;&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x4F7F;&#x7528;GPU&#xFF1A; <img src="/posts/2e45cbc8/gpu.png" alt="gpu"> &#x4F7F;&#x7528;CPU&#xFF1A; <img src="/posts/2e45cbc8/cpu.png" alt="cpu"></p><p>&#x53EF;&#x89C1;&#xFF0C;&#x5C31;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x800C;&#x8A00;&#xFF0C;&#x4F7F;&#x7528;GPU&#x662F;&#x6BD4;&#x4F7F;&#x7528;CPU&#x5FEB;&#x597D;&#x51E0;&#x500D;&#x7684;&#x3002;</p><h1 id="&#x4F7F;&#x7528;vs2017&#x8C03;&#x8BD5;tensorflow&#x4EE3;&#x7801;">&#x4F7F;&#x7528;VS2017&#x8C03;&#x8BD5;TensorFlow&#x4EE3;&#x7801;</h1><p>&#x521A;&#x624D;&#x6F14;&#x793A;&#x7684;&#x662F;&#x5728;Anaconda Prompt&#x4E2D;&#x8FD0;&#x884C;python&#x4EE3;&#x7801;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x60F3;&#x7528;VS2017&#x8FD0;&#x884C;python&#x4EE3;&#x7801;&#xFF0C;&#x9700;&#x8981;&#x5728;&quot;&#x9879;&#x76EE;-&quot;python&#x73AF;&#x5883;&quot;&#x4E2D;&#x8FDB;&#x884C;&#x8BBE;&#x7F6E;&#x3002;&#x5982;&#x4E0B;: <img src="/posts/2e45cbc8/python&#x73AF;&#x5883;.jpg" alt="&#x8BBE;&#x7F6E;python&#x73AF;&#x5883;"></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> TensorFlow </tag>
            
            <tag> GPU </tag>
            
            <tag> Anaconda </tag>
            
            <tag> GTX1060 </tag>
            
            <tag> 安装教程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>01背包笔记</title>
      <link href="//posts/829adb17/"/>
      <url>//posts/829adb17/</url>
      <content type="html"><![CDATA[<h1 id="&#x80CC;&#x5305;&#x95EE;&#x9898;&#x63CF;&#x8FF0;">01&#x80CC;&#x5305;&#x95EE;&#x9898;&#x63CF;&#x8FF0;</h1><p>&#x5DF2;&#x77E5;:&#x6709;&#x4E00;&#x4E2A;&#x5BB9;&#x91CF;&#x4E3A;V&#x7684;&#x80CC;&#x5305;&#x548C;N&#x4EF6;&#x7269;&#x54C1;&#xFF0C;&#x7B2C;i&#x4EF6;&#x7269;&#x54C1;&#x7684;&#x91CD;&#x91CF;&#x662F;weight[i]&#xFF0C;&#x6536;&#x76CA;&#x662F;cost[i]&#x3002;</p><p>&#x9650;&#x5236;:&#x6BCF;&#x79CD;&#x7269;&#x54C1;&#x53EA;&#x6709;&#x4E00;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x653E;&#x6216;&#x8005;&#x4E0D;&#x653E;</p><p>&#x95EE;&#x9898;:&#x5728;&#x4E0D;&#x8D85;&#x8FC7;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6700;&#x591A;&#x80FD;&#x83B7;&#x5F97;&#x591A;&#x5C11;&#x4EF7;&#x503C;&#x6216;&#x6536;&#x76CA;</p><p>&#x76F8;&#x4F3C;&#x95EE;&#x9898;:&#x5728;&#x6070;&#x597D;&#x88C5;&#x6EE1;&#x80CC;&#x5305;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6700;&#x591A;&#x80FD;&#x83B7;&#x5F97;&#x591A;&#x5C11;&#x4EF7;&#x503C;&#x6216;&#x6536;&#x76CA;</p><p>&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x8BA8;&#x8BBA;&#x5728;&#x4E0D;&#x8D85;&#x8FC7;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6700;&#x591A;&#x80FD;&#x83B7;&#x5F97;&#x591A;&#x5C11;&#x4EF7;&#x503C;&#x6216;&#x6536;&#x76CA;&#x3002; <a id="more"></a></p><h1 id="&#x601D;&#x8DEF;">&#x601D;&#x8DEF;</h1><h2 id="&#x95EE;&#x9898;&#x7279;&#x70B9;">&#x95EE;&#x9898;&#x7279;&#x70B9;</h2><p>&#x6BCF;&#x79CD;&#x7269;&#x54C1;&#x53EA;&#x6709;&#x4E00;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x653E;&#x6216;&#x8005;&#x4E0D;&#x653E;&#x3002;</p><h2 id="&#x5B50;&#x95EE;&#x9898;">&#x5B50;&#x95EE;&#x9898;</h2><p>&#x5B9A;&#x4E49;f[i][v]:&#x524D;i&#x4EF6;&#x7269;&#x54C1;&#x653E;&#x5230;&#x4E00;&#x4E2A;&#x5BB9;&#x91CF;&#x4E3A;v&#x7684;&#x80CC;&#x5305;&#x4E2D;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x7684;&#x6700;&#x5927;&#x4EF7;&#x503C;&#x3002;</p><h2 id="&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;">&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;</h2><p>f[i][v]=max(f[i - 1][v],f[i - 1][v - weight[i]] + cost[i])</p><p>&#x4EE3;&#x7801;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)  </span><br><span class="line">    {  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= W; j++)  </span><br><span class="line">        {  </span><br><span class="line">            <span class="keyword">if</span>(j &lt; w[i])    dp[i][j]  = dp[i<span class="number">-1</span>][j];  </span><br><span class="line">            <span class="keyword">else</span> dp[i][j] =  max(dp[i<span class="number">-1</span>][j], dp[i<span class="number">-1</span>][j - w[i]] + v[i]);  </span><br><span class="line">        }  </span><br><span class="line">  }</span><br></pre></td></tr></table></figure></p><p>&#x5373;&#x5BF9;&#x4E8E;&#x7B2C;i&#x4EF6;&#x7269;&#x54C1;&#xFF0C;&#x653E;&#x5165;&#x80CC;&#x5305;&#x6216;&#x8005;&#x4E0D;&#x653E;&#x5165;&#x80CC;&#x5305;&#x3002;</p><h2 id="&#x89E3;&#x91CA;">&#x89E3;&#x91CA;</h2><p>&#x8003;&#x8651;&#x6211;&#x4EEC;&#x7684;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x5C06;&#x524D;i&#x4EF6;&#x7269;&#x54C1;&#x653E;&#x5230;&#x5BB9;&#x91CF;&#x4E3A;v&#x7684;&#x80CC;&#x5305;&#x4E2D;&#xFF0C;&#x82E5;&#x6211;&#x4EEC;&#x53EA;&#x8003;&#x8651;&#x7B2C;i&#x4EF6;&#x7269;&#x54C1;&#x65F6;&#xFF0C;&#x5B83;&#x6709;&#x4E24;&#x79CD;&#x9009;&#x62E9;&#xFF0C;&#x653E;&#x6216;&#x8005;&#x4E0D;&#x653E;&#x3002;</p><ol type="1"><li>&#x5982;&#x679C;&#x7B2C;i&#x4EF6;&#x7269;&#x54C1;&#x4E0D;&#x653E;&#x5165;&#x80CC;&#x5305;&#x4E2D;&#xFF0C;&#x90A3;&#x4E48;&#x95EE;&#x9898;&#x5C31;&#x8F6C;&#x6362;&#x4E3A;&#xFF1A;&#x5C06;&#x524D;i - 1&#x4EF6;&#x7269;&#x54C1;&#x653E;&#x5230;&#x5BB9;&#x91CF;&#x4E3A;v&#x7684;&#x80CC;&#x5305;&#x4E2D;&#xFF0C;&#x5E26;&#x6765;&#x7684;&#x6536;&#x76CA;f[i - 1][v]</li><li>&#x5982;&#x679C;&#x7B2C;i&#x4EF6;&#x7269;&#x54C1;&#x80FD;&#x653E;&#x5165;&#x80CC;&#x5305;&#x4E2D;&#xFF0C;&#x90A3;&#x4E48;&#x95EE;&#x9898;&#x5C31;&#x8F6C;&#x6362;&#x4E3A;&#xFF1A;&#x5C06;&#x524D;i - 1&#x4EF6;&#x7269;&#x54C1;&#x653E;&#x5230;&#x5BB9;&#x91CF;&#x4E3A;v - weight[i]&#x7684;&#x80CC;&#x5305;&#x4E2D;&#xFF0C;&#x5E26;&#x6765;&#x7684;&#x6536;&#x76CA;f[i - 1][v - weight[i]] + cost[i]&#x3002;</li></ol><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3</span>;<span class="comment">//&#x7269;&#x54C1;&#x4E2A;&#x6570;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> V = <span class="number">5</span>;<span class="comment">//&#x80CC;&#x5305;&#x6700;&#x5927;&#x5BB9;&#x91CF;</span></span><br><span class="line"><span class="keyword">int</span> weight[N + <span class="number">1</span>] = {<span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>};<span class="comment">//&#x7269;&#x54C1;&#x91CD;&#x91CF;</span></span><br><span class="line"><span class="keyword">int</span> value[N + <span class="number">1</span>] = {<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">20</span>};<span class="comment">//&#x7269;&#x54C1;&#x4EF7;&#x503C;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[N + <span class="number">1</span>][V + <span class="number">1</span>] = {{<span class="number">0</span>}};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x76EE;&#x6807;&#xFF1A;&#x5728;&#x4E0D;&#x8D85;&#x8FC7;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6700;&#x591A;&#x80FD;&#x83B7;&#x5F97;&#x591A;&#x5C11;&#x4EF7;&#x503C;</span></span><br><span class="line"><span class="comment">&#x5B50;&#x95EE;&#x9898;&#x72B6;&#x6001;:f[i][j]:&#x8868;&#x793A;&#x524D;i&#x4EF6;&#x7269;&#x54C1;&#x653E;&#x5165;&#x5BB9;&#x91CF;&#x4E3A;j&#x7684;&#x80CC;&#x5305;&#x5F97;&#x5230;&#x7684;&#x6700;&#x5927;&#x4EF7;&#x503C;</span></span><br><span class="line"><span class="comment">&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;:f[i][j] = max{f[i - 1][j],f[i - 1][j - weight[i]] + value[i]}</span></span><br><span class="line"><span class="comment">&#x521D;&#x59CB;&#x5316;:f&#x6570;&#x7EC4;&#x5168;&#x8BBE;&#x7F6E;&#x4E3A;0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Knapsack</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="comment">//&#x9012;&#x63A8;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++) <span class="comment">//&#x679A;&#x4E3E;&#x7269;&#x54C1;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt;= V;j++) <span class="comment">//&#x679A;&#x4E3E;&#x80CC;&#x5305;&#x5BB9;&#x91CF;</span></span><br><span class="line">        {</span><br><span class="line">            f[i][j] = f[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= weight[i])</span><br><span class="line">            {</span><br><span class="line">                f[i][j] = Max(f[i - <span class="number">1</span>][j],f[i - <span class="number">1</span>][j - weight[i]] + value[i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> f[N][V];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;Knapsack()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6548;&#x7387;&#x5206;&#x6790;">&#x6548;&#x7387;&#x5206;&#x6790;</h2><p>&#x4EE5;&#x4E0A;&#x7B97;&#x6CD5;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O&#xFF08;N*V&#xFF09;&#xFF0C;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E5F;&#x662F;O&#xFF08;N*V&#xFF09;&#x3002;&#x5176;&#x4E2D;N&#x4EE3;&#x8868;&#x7269;&#x54C1;&#x7684;&#x4E2A;&#x6570;&#xFF0C;V&#x662F;&#x80CC;&#x5305;&#x7684;&#x5BB9;&#x91CF;&#x3002;</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E0D;&#x53EF;&#x4EE5;&#x518D;&#x4F18;&#x5316;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x662F;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x4F18;&#x5316;&#x5230;O(V)&#x3002;</p><h3 id="&#x4F18;&#x5316;&#x5206;&#x6790;">&#x4F18;&#x5316;&#x5206;&#x6790;</h3><p>&#x53EF;&#x4EE5;&#x53EA;&#x7528;f[V]&#x8868;&#x793A;&#x4E2D;&#x95F4;&#x72B6;&#x6001;&#x3002;&#x6839;&#x636E;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#xFF1A;</p><p>f[i][v]=max(f[i - 1][v],f[i - 1][v - weight[i]] + cost[i])</p><p>&#x8981;&#x60F3;&#x5F97;&#x5230;f[i][v]&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053; f[i - 1][v] &#x548C; f[i - 1][v - weight[i]]&#x3002;</p><p>&#x6211;&#x7684;&#x7406;&#x89E3;&#xFF1A;&#x7531;&#x4E8E;&#x53EA;&#x6709;&#x4E00;&#x4F4D;&#x6570;&#x7EC4;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x6C42;&#x5F97;f[i][v]&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x8981;&#x628A;f[i - 1][v]&#x8986;&#x76D6;&#x6389;&#x4E86;&#x3002;</p><p>&#x56E0;&#x6B64;&#x6C42;f&#x6570;&#x7EC4;&#x7684;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 1. &#x521D;&#x59CB;&#x72B6;&#x6001;&#xFF1A;&#x8BA1;&#x7B97;&#x524D;1&#x4EF6;&#x7269;&#x54C1;&#x653E;&#x5230;&#x5BB9;&#x91CF;&#x4E3A;V&#x7684;&#x80CC;&#x5305;&#x4E2D;&#x5E26;&#x6765;&#x7684;&#x6536;&#x76CA;&#x3002; 2. &#x9012;&#x63A8;&#x5173;&#x7CFB;&#xFF1A;&#x5728;i&gt;=2&#x65F6;&#xFF0C;&#x6839;&#x636E;&#x524D;i-1&#x4E2A;&#x7269;&#x54C1;&#x653E;&#x5230;&#x5BB9;&#x91CF;&#x4E3A;v&#x4E2D;&#x7684;&#x80CC;&#x5305;&#x4E2D;&#x5E26;&#x6765;&#x7684;&#x6536;&#x76CA;&#xFF0C;&#x5373;&#x7528;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x7684;&#x65F6;&#x5019;&#x7684;f[i-1][v]&#x3002;&#x6839;&#x636E;&#x524D;i-1&#x4E2A;&#x7269;&#x54C1;&#x653E;&#x5230;&#x5BB9;&#x91CF;&#x4E3A;v-weight[i]&#x7684;&#x80CC;&#x5305;&#x4E2D;&#x5E26;&#x6765;&#x7684;&#x6536;&#x76CA;&#xFF0C;&#x5373;&#x7528;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x7684;&#x65F6;&#x5019;&#x7684;f[i-1][v-weight[i]]&#x3002;&#x8BA1;&#x7B97;f[i-1][v-weight[i]]+cost[i]&#x3002; 3. &#x5728;&#x6267;&#x884C;&#x7B2C;i&#x6B21;&#x5FAA;&#x73AF;&#x4E4B;&#x524D;&#xFF0C;f[0~v]&#x4E2D;&#x4FDD;&#x5B58;&#x7684;&#x662F;&#x7B2C;i-1&#x6B21;&#x5FAA;&#x73AF;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5373;&#x662F;&#x524D;i-1&#x4E2A;&#x7269;&#x4F53;&#x5206;&#x522B;&#x653E;&#x5230;&#x5BB9;&#x91CF;0~V&#x65F6;&#x7684;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x5373;f[i-1][0~V]&#x3002; 4. &#x7531;&#x9012;&#x63A8;&#x516C;&#x5F0F;&#xFF1A;f[i][v]=max(f[i - 1][v],f[i - 1][v - weight[i]] + cost[i])&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF1A;&#x5728;&#x66F4;&#x65B0;f[v]&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8981;&#x7528;&#x5230;f[v]&#x548C;f[v-weight[i]]&#x5219;&#x4E24;&#x4E2A;&#x503C;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;<strong>&#x9006;&#x5E8F;</strong>&#x66F4;&#x65B0;&#x3002;&#x5373;&#x4ECE;V...0&#x66F4;&#x65B0;&#x3002;</p><p>&#x9006;&#x5E8F;&#x66F4;&#x65B0;&#x6570;&#x7EC4;&#x7684;&#x539F;&#x56E0;&#xFF1A;</p><p>&#x6211;&#x4EEC;&#x662F;&#x7531;&#x7B2C; i-1 &#x6B21;&#x5FAA;&#x73AF;&#x7684;&#x4E24;&#x4E2A;&#x72B6;&#x6001;&#x63A8;&#x51FA;&#x7B2C;i&#x4E2A;&#x72B6;&#x6001;&#x7684;&#xFF0C;&#x800C;&#x4E14;v&gt;v-weight[i]&#xFF0C;&#x5219;&#x5BF9;&#x4E8E;&#x7B2C;i&#x6B21;&#x5FAA;&#x73AF;&#xFF0C;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x53EA;&#x6709;&#x5F53;V..0&#x5FAA;&#x73AF;&#x65F6;&#xFF0C;&#x624D;&#x4F1A;&#x5148;&#x5904;&#x7406;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x4E3A;v&#x7684;&#x72B6;&#x51B5;&#xFF0C;&#x540E;&#x5904;&#x7406;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x4E3A; v-weight[i] &#x7684;&#x60C5;&#x51B5;&#x3002;</p><p>&#x5177;&#x4F53;&#x6765;&#x8BF4;&#xFF0C;&#x7531;&#x4E8E;&#xFF0C;&#x5728;&#x6267;&#x884C;v&#x65F6;&#xFF0C;&#x8FD8;&#x6CA1;&#x6267;&#x884C;&#x5230;v - weight[i]&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;f[v-weight[i]]&#x4FDD;&#x5B58;&#x7684;&#x8FD8;&#x662F;&#x7B2C;i - 1&#x6B21;&#x5FAA;&#x73AF;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x5373;&#x5728;&#x6267;&#x884C;&#x7B2C;i&#x6B21;&#x5FAA;&#x73AF; &#x4E14; &#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x4E3A;v&#x65F6;&#xFF0C;&#x6B64;&#x65F6;&#x7684;f[v]&#x5B58;&#x50A8;&#x7684;&#x662F; f[i-1][v] &#xFF0C;&#x6B64;&#x65F6;f[v-weight[i]]&#x5B58;&#x50A8;&#x7684;&#x662F;f[i-1][v-weight[i]]&#x3002;</p><p>&#x76F8;&#x53CD;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x6267;&#x884C;&#x7B2C; i &#x6B21;&#x5FAA;&#x73AF;&#x65F6;&#xFF0C;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x6309;&#x7167;0..V&#x7684;&#x987A;&#x5E8F;&#x904D;&#x5386;&#x4E00;&#x904D;&#xFF0C;&#x6765;&#x68C0;&#x6D4B;&#x7B2C; i &#x4EF6;&#x7269;&#x54C1;&#x662F;&#x5426;&#x80FD;&#x653E;&#x3002;&#x6B64;&#x65F6;&#x5728;&#x6267;&#x884C;&#x7B2C;i&#x6B21;&#x5FAA;&#x73AF; &#x4E14; &#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x4E3A;v&#x65F6;&#xFF0C;&#x6B64;&#x65F6;&#x7684;f[v]&#x5B58;&#x50A8;&#x7684;&#x662F; f[i - 1][v] &#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x6B64;&#x65F6;f[v-weight[i]]&#x5B58;&#x50A8;&#x7684;&#x662F;f[i][v-weight[i]]&#x3002;</p><p>&#x4E3E;&#x4F8B;&#x5B50;&#x5C31;&#x662F;&#xFF0C;&#x5047;&#x8BBE;&#x66F4;&#x65B0;f[8]&#x8981;&#x7528;&#x5230;f[8]&#x548C;f[6]&#xFF0C;&#x66F4;&#x65B0;f[6]&#x8981;&#x7528;&#x5230;f[6]&#x548C;f[4]&#xFF0C;&#x5982;&#x679C;&#x5148;&#x66F4;&#x65B0;&#x4E86;f[4]&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x65E0;&#x6CD5;&#x66F4;&#x65B0;&#x540E;&#x9762;&#x7684;f[6]&#x548C;f[8]&#x3002;</p><p>&#x56E0;&#x6B64;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1.</span>.N <span class="comment">//&#x679A;&#x4E3E;&#x7269;&#x54C1;</span></span><br><span class="line">    <span class="keyword">for</span> v=V.<span class="number">.0</span> <span class="comment">//&#x679A;&#x4E3E;&#x5BB9;&#x91CF;&#xFF0C;&#x4ECE;&#x5927;&#x5230;&#x5C0F;</span></span><br><span class="line">        f[v]=max{f[v],f[v-weight[i]] + cost[i]};</span><br></pre></td></tr></table></figure></p><p>&#x591A;&#x8BF4;&#x4E00;&#x70B9;&#xFF0C;&#x987A;&#x5E8F;&#x66F4;&#x65B0;&#x6570;&#x7EC4;&#xFF08;&#x987A;&#x5E8F;&#x679A;&#x4E3E;&#x5BB9;&#x91CF;&#xFF09;&#x662F;<strong>&#x5B8C;&#x5168;&#x80CC;&#x5305;&#x95EE;&#x9898;</strong>&#x7684;&#x6700;&#x4F73;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;</p><h3 id="&#x5E38;&#x6570;&#x9636;&#x4F18;&#x5316;1">&#x5E38;&#x6570;&#x9636;&#x4F18;&#x5316;1</h3><p>&#x6839;&#x636E;&#x524D;&#x6587;&#x8BF4;&#x7684;&#xFF0C;&#x4F7F;&#x7528;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;&#x63CF;&#x8FF0;&#x72B6;&#x6001;&#x66F4;&#x65B0;&#x7684;&#x4F2A;&#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1.</span>.N <span class="comment">//&#x679A;&#x4E3E;&#x7269;&#x54C1;</span></span><br><span class="line">    <span class="keyword">for</span> v=V.<span class="number">.0</span> <span class="comment">//&#x679A;&#x4E3E;&#x5BB9;&#x91CF;&#xFF0C;&#x4ECE;&#x5927;&#x5230;&#x5C0F;</span></span><br><span class="line">        f[v]=max{f[v],f[v-weight[i]] + cost[i]};</span><br></pre></td></tr></table></figure></p><p>&#x5BF9;&#x4E8E;&#x7B2C;i&#x4E2A;&#x7269;&#x54C1;&#xFF0C;&#x679A;&#x4E3E;&#x5BB9;&#x91CF;&#x5230;weight[i]&#x5C31;&#x53EF;&#x4EE5;&#x505C;&#x6B62;&#x4E86;&#x3002;&#x4E00;&#x662F;&#x53EF;&#x4EE5;&#x9632;&#x6B62;&#x8D8A;&#x754C;&#xFF0C;&#x4E8C;&#x662F;&#x5BB9;&#x91CF;&#x4E3A;&#x8D1F;&#x7684;&#x80CC;&#x5305;&#x65E0;&#x610F;&#x4E49;&#x3002;</p><p>&#x56E0;&#x6B64;&#x4F2A;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x66F4;&#x65B0;&#x4E3A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1.</span>.N <span class="comment">//&#x679A;&#x4E3E;&#x7269;&#x54C1;</span></span><br><span class="line">    <span class="keyword">for</span> v=V..weight[i] <span class="comment">//&#x679A;&#x4E3E;&#x5BB9;&#x91CF;&#xFF0C;&#x4ECE;&#x5927;&#x5230;&#x5C0F;</span></span><br><span class="line">        f[v]=max{f[v],f[v-weight[i]] + cost[i]};</span><br></pre></td></tr></table></figure></p><p>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5C0F;&#x4F18;&#x5316;&#x5C31;&#x662F;&#xFF0C;&#x5148;&#x5904;&#x7406;&#x82B1;&#x8D39;&#x8F83;&#x5927;&#x7684;&#x7269;&#x54C1;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4F7F;&#x540E;&#x7EED;&#x7269;&#x54C1;&#x7684;&#x5FAA;&#x73AF;&#x6B21;&#x6570;&#x66F4;&#x5C11;&#x3002;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5148;&#x628A;&#x7269;&#x54C1;&#x6309;&#x7167;&#x82B1;&#x8D39;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x6392;&#x5E8F;&#x3002;</p><h3 id="&#x5E38;&#x6570;&#x9636;&#x4F18;&#x5316;2">&#x5E38;&#x6570;&#x9636;&#x4F18;&#x5316;2</h3><p>&#x5728;&#x5E38;&#x6570;&#x9636;&#x4F18;&#x5316;1&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x628A;&#x4E0B;&#x754C;&#x5B9A;&#x4E3A;&#x4E86;weight[i]&#xFF0C;&#x610F;&#x601D;&#x662F;&#xFF0C;&#x81F3;&#x5C11;&#x9700;&#x8981;weight[i]&#x624D;&#x53EF;&#x4EE5;&#x653E;&#x4E0B;&#x7B2C;i&#x4E2A;&#x7269;&#x54C1;&#x3002;</p><p>&#x7EE7;&#x7EED;&#x60F3;&#x5982;&#x4E0B;&#x60C5;&#x51B5;&#xFF0C;&#x52A0;&#x5165;&#x8FD9;&#x4E2A;&#x80CC;&#x5305;&#x7684;&#x5BB9;&#x91CF;&#x975E;&#x5E38;&#x975E;&#x5E38;&#x5927;&#xFF0C;&#x5927;&#x5230;&#x80FD;&#x628A;i&#x53CA;&#x4E4B;&#x540E;&#x7684;&#x6240;&#x6709;&#x7684;&#x7269;&#x54C1;&#x5168;&#x653E;&#x8FDB;&#x53BB;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x5C31;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x518D;&#x53BB;&#x8BA1;&#x7B97;&#x4E4B;&#x540E;&#x7684;&#x60C5;&#x51B5;&#x4E86;&#x3002;&#x5373;&#x5BF9;&#x4E8E;&#x7269;&#x54C1;i&#xFF0C;&#x8BA1;&#x7B97;&#x5C0F;&#x4E8E;V-sum{weight[i..n]}&#x7684;v&#x7684;&#x503C;&#xFF0C;&#x65E0;&#x610F;&#x4E49;&#xFF0C;&#x53CD;&#x6B63;&#x6240;&#x6709;&#x4E1C;&#x897F;&#x90FD;&#x80FD;&#x653E;&#x8FDB;&#x53BB;&#x3002;</p><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;&#x4E0B;&#x754C;&#x8C03;&#x6574;&#x5230;bound=max{V-sum{weight[i..n]},weight[i]}&#x3002;</p><p>&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1.</span>.N <span class="comment">//&#x679A;&#x4E3E;&#x7269;&#x54C1;</span></span><br><span class="line">    bound=max{V-sum{weight[i..n]},weight[i]}<span class="comment">//&#x786E;&#x5B9A;&#x9700;&#x8981;&#x679A;&#x4E3E;&#x5BB9;&#x91CF;&#x7684;&#x4E0B;&#x754C;</span></span><br><span class="line">    <span class="keyword">for</span> v=V..bound</span><br><span class="line">        f[v]=max{f[v],f[v-weight[i]] + cost[i]};</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x4E2A;&#x4F18;&#x5316;&#x5BF9;&#x4E8E;V&#x5F88;&#x5927;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6548;&#x679C;&#x5F88;&#x597D;&#x3002;</p><h2 id="&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;">&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;</h2><p>&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x6CA1;&#x6709;&#x5BF9;weight&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3</span>;<span class="comment">//&#x7269;&#x54C1;&#x4E2A;&#x6570;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> V = <span class="number">5</span>;<span class="comment">//&#x80CC;&#x5305;&#x6700;&#x5927;&#x5BB9;&#x91CF;</span></span><br><span class="line"><span class="keyword">int</span> weight[N + <span class="number">1</span>] = {<span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>};<span class="comment">//&#x7269;&#x54C1;&#x91CD;&#x91CF;</span></span><br><span class="line"><span class="keyword">int</span> value[N + <span class="number">1</span>] = {<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">20</span>};<span class="comment">//&#x7269;&#x54C1;&#x4EF7;&#x503C;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[V + <span class="number">1</span>] = {<span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x76EE;&#x6807;&#xFF1A;&#x5728;&#x4E0D;&#x8D85;&#x8FC7;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6700;&#x591A;&#x80FD;&#x83B7;&#x5F97;&#x591A;&#x5C11;&#x4EF7;&#x503C;</span></span><br><span class="line"><span class="comment">&#x5B50;&#x95EE;&#x9898;&#x72B6;&#x6001;:f[j]:&#x8868;&#x793A;&#x524D;i&#x4EF6;&#x7269;&#x54C1;&#x653E;&#x5165;&#x5BB9;&#x91CF;&#x4E3A;j&#x7684;&#x80CC;&#x5305;&#x5F97;&#x5230;&#x7684;&#x6700;&#x5927;&#x4EF7;&#x503C;</span></span><br><span class="line"><span class="comment">&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;:f[j] = max{f[j],f[j - weight[i]] + value[i]}</span></span><br><span class="line"><span class="comment">&#x521D;&#x59CB;&#x5316;:f&#x6570;&#x7EC4;&#x5168;&#x8BBE;&#x7F6E;&#x4E3A;0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Knapsack</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;<span class="comment">//&#x5B58;&#x50A8;&#x8FD8;&#x672A;&#x5904;&#x7406;&#x7269;&#x54C1;&#x7684;&#x603B;&#x5BB9;&#x91CF;</span></span><br><span class="line">    <span class="keyword">int</span> bound = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">    {</span><br><span class="line">        sum += weight[i];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x9012;&#x63A8;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++) <span class="comment">//&#x679A;&#x4E3E;&#x7269;&#x54C1;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//&#x8BBE;&#x7F6E;&#x4E0B;&#x754C;</span></span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            sum -= weight[i - <span class="number">1</span>];</span><br><span class="line">        }</span><br><span class="line">        bound = Max(V - sum,weight[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = V;j &gt;= bound;j--) <span class="comment">//&#x679A;&#x4E3E;&#x80CC;&#x5305;&#x5BB9;&#x91CF;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (f[j] &lt; f[j - weight[i]] + value[i])</span><br><span class="line">            {</span><br><span class="line">                f[j] = f[j - weight[i]] + value[i];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> f[V];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;Knapsack()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 01背包 </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> NP-Hard </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>读研日记</title>
      <link href="//posts/52379290/"/>
      <url>//posts/52379290/</url>
      <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">&#x8F93;&#x5165;&#x5BC6;&#x7801;&#x8BBF;&#x95EE;</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 研究生 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-2996 Help Me with the Game</title>
      <link href="//posts/a5731d96/"/>
      <url>//posts/a5731d96/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=2996" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5E2E;&#x6211;&#x5B8C;&#x6210;&#x6E38;&#x620F; <a id="more"></a></p><h2 id="description">Description</h2><p>Your task is to read a picture of a chessboard position and print it in the chess notation.</p><h2 id="input-specification">Input Specification</h2><p>The input consists of an ASCII-art picture of a chessboard with chess pieces on positions described by the input. The pieces of the white player are shown in upper-case letters, while the black player&apos;s pieces are lower-case letters. The letters are one of &quot;K&quot; (King), &quot;Q&quot; (Queen), &quot;R&quot; (Rook), &quot;B&quot; (Bishop), &quot;N&quot; (Knight), or &quot;P&quot; (Pawn). The chessboard outline is made of plus (&quot;+&quot;), minus (&quot;-&quot;), and pipe (&quot;|&quot;) characters. The black fields are filled with colons (&quot;:&quot;), white fields with dots (&quot;.&quot;).</p><h2 id="output-specification">Output Specification</h2><p>The output consists of two lines. The first line consists of the string &quot;White: &quot;, followed by the description of positions of the pieces of the white player. The second line consists of the string &quot;Black: &quot;, followed by the description of positions of the pieces of the black player.</p><p>The description of the position of the pieces is a comma-separated list of terms describing the pieces of the appropriate player. The description of a piece consists of a single upper-case letter that denotes the type of the piece (except for pawns, for that this identifier is omitted). This letter is immediatelly followed by the position of the piece in the standard chess notation -- a lower-case letter between &quot;a&quot; and &quot;h&quot; that determines the column (&quot;a&quot; is the leftmost column in the input) and a single digit between 1 and 8 that determines the row (8 is the first row in the input).</p><p>The pieces in the description must appear in the following order: King(&quot;K&quot;), Queens (&quot;Q&quot;), Rooks (&quot;R&quot;), Bishops (&quot;B&quot;), Knights (&quot;N&quot;), and pawns. Note that the numbers of pieces may differ from the initial position because of capturing the pieces and the promotions of pawns. In case two pieces of the same type appear in the input, the piece with the smaller row number must be described before the other one if the pieces are white, and the one with the larger row number must be described first if the pieces are black. If two pieces of the same type appear in the same row, the one with the smaller column letter must appear first.</p><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x6839;&#x636E;&#x68CB;&#x76D8;&#x6253;&#x5370;&#x56FD;&#x9645;&#x8C61;&#x68CB;&#x7684;&#x68CB;&#x5B50;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x767D;&#x8272;&#x73A9;&#x5BB6;&#x7684;&#x68CB;&#x5B50;&#x7528;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x663E;&#x793A;&#xFF0C;&#x9ED1;&#x8272;&#x73A9;&#x5BB6;&#x7684;&#x68CB;&#x5B50;&#x7528;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#x663E;&#x793A;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x8F93;&#x51FA;&#x7531;&#x4E24;&#x884C;&#x7EC4;&#x6210;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x5B57;&#x7B26;&#x4E32;&#x201C;White:&#x201D;&#xFF0C;&#x540E;&#x9762;&#x8DDF;&#x767D;&#x8272;&#x68CB;&#x5B50;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x662F;&#x201C;Black&#x201D;&#x540E;&#x9762;&#x8DDF;&#x9ED1;&#x8272;&#x68CB;&#x5B50;&#x7684;&#x63CF;&#x8FF0;&#x3002;</p><p>&#x6BCF;&#x4E2A;&#x68CB;&#x5B50;&#x7684;&#x63CF;&#x8FF0;&#x7531;&#x4E00;&#x4E2A;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x7EC4;&#x6210;&#xFF08;&#x5982;&#x679C;&#x4E0D;&#x662F;Pawns&#x7684;&#x8BDD;&#xFF09;&#x3002;&#x7136;&#x540E;&#x7D27;&#x8DDF;&#x7684;&#x662F;&#x68CB;&#x5B50;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;a<sub>h&#x7528;&#x4E8E;&#x786E;&#x5B9A;&#x5217;&#xFF0C;1</sub>8&#x7528;&#x4E8E;&#x786E;&#x5B9A;&#x884C;&#xFF08;8&#x662F;&#x8F93;&#x5165;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#xFF09;&#x3002;</p><p>&#x63CF;&#x8FF0;&#x90E8;&#x5206;&#x5FC5;&#x987B;&#x6309;&#x7167;&#x4EE5;&#x4E0B;&#x987A;&#x5E8F;&#x51FA;&#x73B0;&#xFF1A;K,Q,R,B,N&#x548C;Pawns&#x3002;&#x8F93;&#x51FA;&#x7684;&#x6392;&#x5E8F;&#x89C4;&#x5219;&#x5982;&#x4E0B;&#xFF1A;&#x7C7B;&#x578B;&#x4E0D;&#x540C;&#xFF0C;&#x6309;&#x7167;&#x524D;&#x8FF0;&#x987A;&#x5E8F;&#xFF0C;&#x5982;&#x679C; &#x7C7B;&#x578B;&#x76F8;&#x540C;&#xFF0C;&#x767D;&#x8272;&#x68CB;&#x5B50;&#x5177;&#x6709;&#x8F83;&#x5C0F;&#x884C;&#x53F7;&#x7684;&#x4F18;&#x5148;&#xFF0C;&#x9ED1;&#x8272;&#x68CB;&#x5B50;&#x5219;&#x662F;&#x884C;&#x53F7;&#x5927;&#x7684;&#x4F18;&#x5148;&#x3002;&#x5982;&#x679C;&#x4ECD;&#x7136;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x5217;&#x8F83;&#x5C0F;&#x7684;&#x4F18;&#x5148;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x6A21;&#x62DF;</p><h2 id="&#x4EE3;&#x7801;-c">&#x4EE3;&#x7801; C++</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> lieshu[<span class="number">9</span>] = {<span class="string">&apos;z&apos;</span>, <span class="string">&apos;a&apos;</span>,<span class="string">&apos;b&apos;</span>,<span class="string">&apos;c&apos;</span>,<span class="string">&apos;d&apos;</span>,<span class="string">&apos;e&apos;</span>,<span class="string">&apos;f&apos;</span>,<span class="string">&apos;g&apos;</span>,<span class="string">&apos;h&apos;</span> };</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">bool</span> xiaobing;</span><br><span class="line">    <span class="keyword">char</span> qizi;</span><br><span class="line">    <span class="keyword">char</span> lie;</span><br><span class="line">    <span class="keyword">int</span> hang;</span><br><span class="line">}node;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;yingshe;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; Black;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; White;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    yingshe[<span class="string">&apos;K&apos;</span>] = <span class="number">6</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;Q&apos;</span>] = <span class="number">5</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;R&apos;</span>] = <span class="number">4</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;B&apos;</span>] = <span class="number">3</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;N&apos;</span>] = <span class="number">2</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;P&apos;</span>] = <span class="number">1</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;k&apos;</span>] = <span class="number">6</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;q&apos;</span>] = <span class="number">5</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;r&apos;</span>] = <span class="number">4</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;b&apos;</span>] = <span class="number">3</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;n&apos;</span>] = <span class="number">2</span>;</span><br><span class="line">    yingshe[<span class="string">&apos;p&apos;</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(node a, node b)</span><span class="comment">//&#x767D;&#x8272;&#x7684;&#xFF0C;&#x884C;&#x8F83;&#x5C0F;&#x4F18;&#x5148;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.xiaobing != b.xiaobing)</span><br><span class="line">        <span class="keyword">return</span>(a.xiaobing &lt; b.xiaobing);</span><br><span class="line">    <span class="keyword">if</span> (yingshe[a.qizi] != yingshe[b.qizi])</span><br><span class="line">        <span class="keyword">return</span> yingshe[a.qizi] &gt; yingshe[b.qizi];</span><br><span class="line">    <span class="keyword">if</span> (a.hang != b.hang)</span><br><span class="line">        <span class="keyword">return</span> a.hang &lt; b.hang;</span><br><span class="line">    <span class="keyword">if</span> (a.lie != b.lie)</span><br><span class="line">        <span class="keyword">return</span> a.lie &lt; b.lie;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(node a, node b)</span><span class="comment">//&#x9ED1;&#x8272;&#x7684;&#xFF0C;&#x884C;&#x8F83;&#x5927;&#x4F18;&#x5148;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.xiaobing != b.xiaobing)</span><br><span class="line">        <span class="keyword">return</span>(a.xiaobing &lt; b.xiaobing);</span><br><span class="line">    <span class="keyword">if</span> (yingshe[a.qizi] != yingshe[b.qizi])</span><br><span class="line">        <span class="keyword">return</span> yingshe[a.qizi] &gt; yingshe[b.qizi];</span><br><span class="line">    <span class="keyword">if</span> (a.hang != b.hang)</span><br><span class="line">        <span class="keyword">return</span> a.hang &gt; b.hang;</span><br><span class="line">    <span class="keyword">if</span> (a.lie != b.lie)</span><br><span class="line">        <span class="keyword">return</span> a.lie &lt; b.lie;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> cntb = <span class="number">0</span>, cntw = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">17</span>;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">int</span> z = <span class="number">1</span>;</span><br><span class="line">    node temp;</span><br><span class="line">    <span class="keyword">while</span> (z++!=t)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>] == <span class="string">&apos;+&apos;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">&apos;.&apos;</span>||str[i]==<span class="string">&apos;:&apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (str[i + <span class="number">1</span>] != <span class="string">&apos;.&apos;</span>&amp;&amp;str[i + <span class="number">1</span>] != <span class="string">&apos;:&apos;</span>&amp;&amp;str[i + <span class="number">1</span>] != <span class="string">&apos;|&apos;</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span> (str[i+<span class="number">1</span>]&lt;=<span class="string">&apos;Z&apos;</span>&amp;&amp;str[i+<span class="number">1</span>]&gt;=<span class="string">&apos;A&apos;</span>)<span class="comment">//&#x5927;&#x5199;&#x5B57;&#x6BCD;&#xFF0C;&#x767D;&#x8272;</span></span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span> (str[i + <span class="number">1</span>] == <span class="string">&apos;P&apos;</span>)</span><br><span class="line">                            temp.xiaobing = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            temp.xiaobing = <span class="literal">false</span>;</span><br><span class="line">                        temp.qizi = str[i + <span class="number">1</span>];</span><br><span class="line">                        temp.hang = (t - z + <span class="number">2</span>) / <span class="number">2</span>;</span><br><span class="line">                        temp.lie = (i + <span class="number">3</span>) / <span class="number">4</span>;</span><br><span class="line">                        White.push_back(temp);</span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span> (str[i + <span class="number">1</span>] == <span class="string">&apos;p&apos;</span>)</span><br><span class="line">                            temp.xiaobing = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            temp.xiaobing = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                        temp.qizi = str[i + <span class="number">1</span>];</span><br><span class="line">                        temp.hang = (t - z + <span class="number">2</span>) / <span class="number">2</span>;</span><br><span class="line">                        temp.lie = (i + <span class="number">3</span>) / <span class="number">4</span>;</span><br><span class="line">                        Black.push_back(temp);</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    sort(White.begin(), White.end(), cmp1);</span><br><span class="line">    sort(Black.begin(), Black.end(), cmp2);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;White: &quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; White.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (White[i].qizi != <span class="string">&apos;P&apos;</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; White[i].qizi;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; lieshu[White[i].lie] &lt;&lt; White[i].hang;</span><br><span class="line">        <span class="keyword">if</span> (i != White.size() - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;,&apos;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Black: &quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Black.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (Black[i].qizi != <span class="string">&apos;p&apos;</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, Black[i].qizi - <span class="string">&apos;a&apos;</span> + <span class="string">&apos;A&apos;</span>);<span class="comment">//&#x5C0F;&#x5199;&#x6362;&#x5927;&#x5199;</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; lieshu[Black[i].lie] &lt;&lt; Black[i].hang;</span><br><span class="line">        <span class="keyword">if</span> (i != Black.size() - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;,&apos;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|...|:::|.n.|:::|...|:::|...|:p:|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|:::|...|:::|...|:::|...|:::|...|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|...|:::|...|:::|.P.|:::|...|:::|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|:P:|...|:::|...|:::|...|:::|...|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line">White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4</span><br><span class="line">Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-1573 Robot Motion</title>
      <link href="//posts/5035921d/"/>
      <url>//posts/5035921d/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=1573" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x673A;&#x5668;&#x4EBA;&#x79FB;&#x52A8; <a id="more"></a> ## Description A robot has been programmed to follow the instructions in its path. Instructions for the next direction the robot is to move are laid down in a grid. The possible instructions are - N north (up the page) - S south (down the page) - E east (to the right on the page) - W west (to the left on the page)</p><p>For example, suppose the robot starts on the north (top) side of Grid 1 and starts south (down). The path the robot follows is shown. The robot goes through 10 instructions in the grid before leaving the grid.</p><p>Compare what happens in Grid 2: the robot goes through 3 instructions only once, and then starts a loop through 8 instructions, and never exits.</p><p>You are to write a program that determines how long it takes a robot to get out of the grid or how the robot loops around. ## Input Specification There will be one or more grids for robots to navigate. The data for each is in the following form. On the first line are three integers separated by blanks: the number of rows in the grid, the number of columns in the grid, and the number of the column in which the robot enters from the north. The possible entry columns are numbered starting with one at the left. Then come the rows of the direction instructions. Each grid will have at least one and at most 10 rows and columns of instructions. The lines of instructions contain only the characters N, S, E, or W with no blanks. The end of input is indicated by a row containing 0 0 0. ## Output Specification For each grid in the input there is one line of output. Either the robot follows a certain number of instructions and exits the grid on any one the four sides or else the robot follows the instructions on a certain number of locations once, and then the instructions on some number of locations repeatedly. The sample input below corresponds to the two grids above and illustrates the two forms of output. The word &quot;step&quot; is always immediately followed by &quot;(s)&quot; whether or not the number before it is 1. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x673A;&#x5668;&#x4EBA;&#x6309;&#x7167;&#x6307;&#x4EE4;&#x79FB;&#x52A8;&#xFF0C;&#x95EE;&#x6700;&#x540E;&#x662F;&#x8D70;&#x51FA;&#x4E86;&#x77E9;&#x9635;&#x8FD8;&#x662F;&#x8FDB;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x5FAA;&#x73AF;&#x5F53;&#x4E2D;&#x3002; ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E09;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x77E9;&#x9635;&#x7684;&#x884C;&#xFF0C;&#x77E9;&#x9635;&#x7684;&#x5217;&#xFF0C;&#x4EE5;&#x53CA;&#x673A;&#x5668;&#x4EBA;&#x6700;&#x521D;&#x6240;&#x5728;&#x7684;&#x4F4D;&#x7F6E;&#x3002; ## &#x8F93;&#x51FA; &#x5982;&#x679C;&#x673A;&#x5668;&#x4EBA;&#x8D70;&#x51FA;&#x77E9;&#x9635;&#xFF0C;&#x8F93;&#x51FA;t step(s) to exit &#x53CD;&#x4E4B;&#x8F93;&#x51FA;x step(s) before a loop of y step(s) # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x6A21;&#x62DF; ## Tips ## &#x4EE3;&#x7801; C++ <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> m, n, Start;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt;G;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;visit;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; Start;</span><br><span class="line">        <span class="keyword">if</span> (!n &amp;&amp; !m &amp;&amp; !Start)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        G.clear(); visit.clear();</span><br><span class="line">        G.resize(n); visit.resize(n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            G[i].resize(m); visit[i].resize(m);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; G[i][j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>, loop = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = Start<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        {</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span> (visit[i][j] == <span class="number">1</span>)</span><br><span class="line">                loop++;</span><br><span class="line">            visit[i][j]++;</span><br><span class="line">            <span class="keyword">switch</span> (G[i][j])</span><br><span class="line">            {</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;N&apos;</span>:</span><br><span class="line">                i--; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;E&apos;</span>:</span><br><span class="line">                j++; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;W&apos;</span>:</span><br><span class="line">                j--; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;S&apos;</span>:</span><br><span class="line">                i++; <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (j &lt; <span class="number">0</span> || i &lt; <span class="number">0</span> || j &gt;= m || i &gt;= n)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="string">&quot; step(s) to exit&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (visit[i][j] == <span class="number">2</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; cnt - loop - loop &lt;&lt; <span class="string">&quot; step(s) before a loop of &quot;</span> &lt;&lt; loop &lt;&lt; <span class="string">&quot; step(s)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">6</span> <span class="number">5</span></span><br><span class="line">NEESWE</span><br><span class="line">WWWESS</span><br><span class="line">SNWWWW</span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">1</span></span><br><span class="line">SESWE</span><br><span class="line">EESNW</span><br><span class="line">NWEEN</span><br><span class="line">EWSEN</span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">10</span> step(s) to <span class="built_in">exit</span></span><br><span class="line"><span class="number">3</span> step(s) before a loop of <span class="number">8</span> step(s)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-1860 Currency Exchange</title>
      <link href="//posts/d8ff61b5/"/>
      <url>//posts/d8ff61b5/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=1860" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a><br>&#x4EA4;&#x6362;&#x8D27;&#x5E01; <a id="more"></a></p><h2 id="description">Description</h2><p>Several currency exchange points are working in our city. Let us suppose that each point specializes in two particular currencies and performs exchange operations only with these currencies. There can be several points specializing in the same pair of currencies. Each point has its own exchange rates, exchange rate of A to B is the quantity of B you get for 1A. Also each exchange point has some commission, the sum you have to pay for your exchange operation. Commission is always collected in source currency. For example, if you want to exchange 100 US Dollars into Russian Rubles at the exchange point, where the exchange rate is 29.75, and the commission is 0.39 you will get (100 - 0.39) * 29.75 = 2963.3975RUR. You surely know that there are N different currencies you can deal with in our city. Let us assign unique integer number from 1 to N to each currency. Then each exchange point can be described with 6 numbers: integer A and B - numbers of currencies it exchanges, and real R<sub>AB</sub>, C<sub>AB</sub>, R<sub>BA</sub> and C<sub>BA</sub> - exchange rates and commissions when exchanging A to B and B to A respectively. Nick has some money in currency S and wonders if he can somehow, after some exchange operations, increase his capital. Of course, he wants to have his money in currency S in the end. Help him to answer this difficult question. Nick must always have non-negative sum of money while making his operations.</p><h2 id="input-specification">Input Specification</h2><p>The first line of the input contains four numbers: N - the number of currencies, M - the number of exchange points, S - the number of currency Nick has and V - the quantity of currency units he has. The following M lines contain 6 numbers each - the description of the corresponding exchange point - in specified above order. Numbers are separated by one or more spaces. 1&lt;=S&lt;=N&lt;=100, 1&lt;=M&lt;=100, V is real number, 0&lt;=V&lt;=10<sup>3</sup>. For each point exchange rates and commissions are real, given with at most two digits after the decimal point, 10<sup>-2</sup>&lt;=rate&lt;=10<sup>2</sup>, 0&lt;=commission&lt;=10<sup>2</sup>. Let us call some sequence of the exchange operations simple if no exchange point is used more than once in this sequence. You may assume that ratio of the numeric values of the sums at the end and at the beginning of any simple sequence of the exchange operations will be less than 10<sup>4</sup>.</p><h2 id="output-specification">Output Specification</h2><p>If Nick can increase his wealth, output YES, in other case output NO to the output file.</p><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x6709;&#x591A;&#x79CD;&#x6C47;&#x5E01;&#xFF0C;&#x6C47;&#x5E01;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x4EA4;&#x6362;&#xFF0C;&#x8FD9;&#x9700;&#x8981;&#x624B;&#x7EED;&#x8D39;&#xFF0C;&#x5F53;&#x4F60;&#x7528;100A&#x5E01;&#x4EA4;&#x6362;B&#x5E01;&#x65F6;&#xFF0C;A&#x5230;B&#x7684;&#x6C47;&#x7387;&#x662F;29.75&#xFF0C;&#x624B;&#x7EED;&#x8D39;&#x662F;0.39&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x53EF;&#x4EE5;&#x5F97;&#x5230;(100 - 0.39) * 29.75 = 2963.3975 B&#x5E01;&#x3002;&#x95EE;s&#x5E01;&#x7684;&#x91D1;&#x989D;&#x7ECF;&#x8FC7;&#x4EA4;&#x6362;&#x6700;&#x7EC8;&#x5F97;&#x5230;&#x7684;s&#x5E01;&#x91D1;&#x989D;&#x6570;&#x80FD;&#x5426;&#x589E;&#x52A0;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;4&#x4E2A;&#x6570;&#x5B57;&#xFF0C;N-&#x8D27;&#x5E01;&#x7684;&#x79CD;&#x7C7B;&#xFF0C;M-&#x4EA4;&#x6613;&#x6240;&#x7684;&#x6570;&#x91CF;&#x3002;S-Nick&#x4E00;&#x5F00;&#x59CB;Nick&#x6240;&#x6301;&#x6709;&#x7684;&#x8D27;&#x5E01;&#x79CD;&#x7C7B;&#x3002;V-Nick&#x4E00;&#x5F00;&#x59CB;&#x6301;&#x6709;&#x7684;&#x8D27;&#x5E01;&#x7684;&#x989D;&#x6570;&#x91CF;&#x3002;</p><p>&#x63A5;&#x7740;&#x662F;M&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x5305;&#x62EC;6&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x6574;&#x6570;A&#x548C;B-&#x8FD9;&#x4E2A;&#x4EA4;&#x6613;&#x6240;&#x4EA4;&#x6362;&#x7684;&#x8D27;&#x5E01;&#x7684;&#x79CD;&#x7C7B;&#xFF0C;R<sub>AB</sub>, C<sub>AB</sub>, R<sub>BA</sub> &#x548C; C<sub>BA</sub>&#x4E24;&#x79CD;&#x8D27;&#x5E01;&#x95F4;&#x7684;&#x6C47;&#x7387;&#x548C;&#x624B;&#x7EED;&#x8D39;&#x3002;</p><p>&#x6C47;&#x7387;&#x548C;&#x624B;&#x7EED;&#x8D39;&#x4FDD;&#x7559;&#x5C0F;&#x6570;&#x70B9;&#x540E;2&#x4F4D;&#xFF0C;10<sup>-2</sup>&lt;=&#x6C47;&#x7387;&lt;=10<sup>2</sup>, 0&lt;=&#x624B;&#x7EED;&#x8D39;&lt;=10<sup>2</sup></p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x5982;&#x679C;&#x94B1;&#x80FD;&#x8D8A;&#x6362;&#x8D8A;&#x591A;&#xFF0C;&#x8F93;&#x51FA;YES&#xFF0C;&#x53CD;&#x4E4B;&#x8F93;&#x51FA;NO&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x8FD9;&#x4E2A;&#x9898;&#x975E;&#x5E38;&#x597D;&#xFF0C;&#x4EE5;&#x524D;&#x505A;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x7684;&#x9898;&#xFF0C;&#x90FD;&#x771F;&#x7684;&#x662F;&#x5B57;&#x9762;&#x4E0A;&#x7684;&#x627E;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x9898;&#x662F;&#x7528;BF&#x7B97;&#x6CD5;&#x627E;&#x4E00;&#x4E2A;&#x6B63;&#x6743;&#x56DE;&#x8DEF;&#x3002;<br>&#x627E;&#x51FA;&#x4E00;&#x6761;&#x6B63;&#x6743;&#x56DE;&#x8DEF;&#x5373;&#x53EF;&#x3002;</p><p>&#x4E00;&#x79CD;&#x8D27;&#x5E01;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x3002;<br>&#x4E00;&#x4E2A;&#x201C;&#x5151;&#x6362;&#x70B9;&#x201D;&#x5C31;&#x662F;&#x56FE;&#x4E0A;&#x4E24;&#x79CD;&#x8D27;&#x5E01;&#x4E4B;&#x95F4;&#x7684;&#x4E00;&#x4E2A;&#x5151;&#x6362;&#x65B9;&#x5F0F;&#xFF0C;&#x662F;&#x53CC;&#x8FB9;&#xFF0C;&#x4F46;A&#x5230;B&#x7684;&#x6C47;&#x7387;&#x548C;&#x624B;&#x7EED;&#x8D39;&#x53EF;&#x80FD;&#x4E0E;B&#x5230;A&#x7684;&#x6C47;&#x7387;&#x548C;&#x624B;&#x7EED;&#x8D39;&#x4E0D;&#x540C;&#x3002;</p><p>&#x552F;&#x4E00;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x6743;&#x503C;&#xFF0C;&#x5F53;&#x62E5;&#x6709;&#x8D27;&#x5E01;A&#x7684;&#x6570;&#x91CF;&#x4E3A;V&#x65F6;&#xFF0C;A&#x5230;A&#x7684;&#x6743;&#x503C;&#x4E3A;V&#xFF0C;&#x5373;&#x6CA1;&#x6709;&#x5151;&#x6362;,&#x800C;A&#x5230;B&#x7684;&#x6743;&#x503C;&#x4E3A;(V-Cab)*Rab&#x3002;</p><p>&#x672C;&#x9898;&#x662F;&#x201C;&#x6C42;&#x6700;&#x5927;&#x8DEF;&#x5F84;&#x201D;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x88AB;&#x5F52;&#x7C7B;&#x4E3A;&#x201C;&#x6C42;&#x6700;&#x5C0F;&#x8DEF;&#x5F84;&#x201D;&#x662F;&#x56E0;&#x4E3A;&#x672C;&#x9898;&#x9898;&#x6070;&#x6070;&#x4E0E;bellman-Ford&#x7B97;&#x6CD5;&#x7684;&#x677E;&#x5F1B;&#x6761;&#x4EF6;&#x76F8;&#x53CD;&#xFF0C;&#x6C42;&#x7684;&#x662F;&#x80FD;&#x65E0;&#x9650;&#x677E;&#x5F1B;&#x7684;&#x6700;&#x5927;&#x6B63;&#x6743;&#x8DEF;&#x5F84;&#xFF0C;&#x4F46;&#x662F;&#x4F9D;&#x7136;&#x80FD;&#x591F;&#x5229;&#x7528;bellman-Ford&#x7684;&#x601D;&#x60F3;&#x53BB;&#x89E3;&#x9898;&#x3002;</p><p>&#x56E0;&#x6B64;&#x521D;&#x59CB;&#x5316;dis(S)=V &#x800C;&#x6E90;&#x70B9;&#x5230;&#x5176;&#x4ED6;&#x70B9;&#x7684;&#x8DDD;&#x79BB;&#xFF08;&#x6743;&#x503C;&#xFF09;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x65E0;&#x7A77;&#x5C0F;&#xFF08;0&#xFF09;&#xFF0C;&#x5F53;s&#x5230;&#x5176;&#x4ED6;&#x67D0;&#x70B9;&#x7684;&#x8DDD;&#x79BB;&#x80FD;&#x4E0D;&#x65AD;&#x53D8;&#x5927;&#x65F6;&#xFF0C;&#x8BF4;&#x660E;&#x5B58;&#x5728;&#x6700;&#x5927;&#x8DEF;&#x5F84;&#xFF1B;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x4E00;&#x76F4;&#x53D8;&#x5927;&#xFF0C;&#x8BF4;&#x660E;&#x5B58;&#x5728;&#x6B63;&#x73AF;&#x3002;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5B58;&#x5728;&#x73AF;&#x8DEF;&#xFF0C;&#x7528;Bellman-Ford&#x548C;spfa&#x90FD;&#x53EF;&#x4EE5;&#x3002;</p><h2 id="&#x4EE3;&#x7801;-c">&#x4EE3;&#x7801; C++</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, s, cnt;<span class="comment">//n&#x8D27;&#x5E01;&#x6570;&#x91CF;&#xFF0C;m&#x4EA4;&#x6613;&#x6240;&#x6570;&#x91CF;&#xFF0C;S&#x521D;&#x8BD5;&#x8D27;&#x5E01;&#x7684;&#x79CD;&#x7C7B;&#xFF0C;V&#x521D;&#x59CB;&#x8D27;&#x5E01;&#x7684;&#x6570;&#x91CF;&#xFF0C;C&#x4E3A;&#x8BA1;&#x6570;&#x53D8;&#x91CF;&#x3002;</span></span><br><span class="line"><span class="keyword">double</span> v, dis[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">double</span> rate, cost;</span><br><span class="line">}node;</span><br><span class="line">node p[<span class="number">220</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Bellman_Ford</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(dis, <span class="number">0</span>, <span class="keyword">sizeof</span>(dis));  <span class="comment">//&#x6B64;&#x5904;&#x4E0E;Bellman-Ford&#x7684;&#x5904;&#x7406;&#x76F8;&#x53CD;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x6E90;&#x70B9;&#x5230;&#x5404;&#x70B9;&#x8DDD;&#x79BB;0&#xFF0C;&#x5230;&#x81EA;&#x8EAB;&#x7684;&#x503C;&#x4E3A;&#x539F;&#x503C;</span></span><br><span class="line">    dis[s] = v;<span class="comment">//&#x4E00;&#x5F00;&#x59CB;&#x81EA;&#x5DF1;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x6570;&#x91CF;&#x662F;V</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>; i++)<span class="comment">//&#x9650;&#x5B9A;&#x6700;&#x5927;&#x5FAA;&#x73AF;&#x6B21;&#x6570;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; j++)<span class="comment">//&#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x4EA4;&#x6613;&#x6240;&#x4E2D;&#xFF0C;&#x6C42;&#x5F97;&#x80FD;&#x6362;&#x6700;&#x591A;&#x94B1;&#x7684;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> a = p[j].a, b = p[j].b;</span><br><span class="line">            <span class="keyword">double</span> r = p[j].rate, c = p[j].cost;</span><br><span class="line">            <span class="keyword">if</span> (dis[b] &lt; (dis[a] - c) * r)</span><br><span class="line">            {</span><br><span class="line">                dis[b] = (dis[a] - c) * r;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (!flag)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">        <span class="keyword">if</span> (dis[p[i].b] &lt; (dis[p[i].a] - p[i].cost) * p[i].rate)    <span class="comment">//dis[p[i].b]&#x662F;&#x6362;&#x4E86;&#x4E00;&#x5708;&#x4E4B;&#x540E;&#xFF0C;&#x80FD;&#x62FF;&#x5230;&#x7684;&#x94B1;&#xFF0C;&#x73B0;&#x5728;&#x5728;&#x8FD9;&#x4E2A;&#x4EA4;&#x6613;&#x6240;&#x80FD;&#x62FF;&#x5230;&#x66F4;&#x591A;&#xFF0C;&#x8868;&#x793A;&#x80FD;&#x677E;&#x5F1B;&#x8DEF;&#x5F84;&#x3002;</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i, j, a, b;</span><br><span class="line">    <span class="keyword">double</span> rab, rba, cab, cba;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%lf&quot;</span>, &amp;n, &amp;m, &amp;s, &amp;v))</span><br><span class="line">    {</span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; rab &gt;&gt; cab &gt;&gt; rba &gt;&gt; cba;<span class="comment">//&#x8F93;&#x5165;&#x4EA4;&#x6613;&#x6240;&#x4FE1;&#x606F;</span></span><br><span class="line">            p[cnt].a = a;</span><br><span class="line">            p[cnt].b = b;</span><br><span class="line">            p[cnt].rate = rab;</span><br><span class="line">            p[cnt++].cost = cab;</span><br><span class="line">            p[cnt].a = b;</span><br><span class="line">            p[cnt].b = a;</span><br><span class="line">            p[cnt].rate = rba;</span><br><span class="line">            p[cnt++].cost = cba;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (Bellman_Ford())</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">20.0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1.00</span> <span class="number">1.00</span> <span class="number">1.00</span> <span class="number">1.00</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">1.10</span> <span class="number">1.00</span> <span class="number">1.10</span> <span class="number">1.00</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line">YES</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 最短路径 </tag>
            
            <tag> POJ </tag>
            
            <tag> Bellman_Ford </tag>
            
            <tag> 正权回路 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-2632 Crashing Robots</title>
      <link href="//posts/53ad7638/"/>
      <url>//posts/53ad7638/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=2632" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5D29;&#x6E83;&#x7684;&#x673A;&#x5668;&#x4EBA; <a id="more"></a></p><h2 id="description">Description</h2><p>In a modernized warehouse, robots are used to fetch the goods. Careful planning is needed to ensure that the robots reach their destinations without crashing into each other. Of course, all warehouses are rectangular, and all robots occupy a circular floor space with a diameter of 1 meter. Assume there are N robots, numbered from 1 through N. You will get to know the position and orientation of each robot, and all the instructions, which are carefully (and mindlessly) followed by the robots. Instructions are processed in the order they come. No two robots move simultaneously; a robot always completes its move before the next one starts moving. A robot crashes with a wall if it attempts to move outside the area of the warehouse, and two robots crash with each other if they ever try to occupy the same spot.</p><h2 id="input-specification">Input Specification</h2><p>The first line of input is K, the number of test cases. Each test case starts with one line consisting of two integers, 1 &lt;= A, B &lt;= 100, giving the size of the warehouse in meters. A is the length in the EW-direction, and B in the NS-direction. The second line contains two integers, 1 &lt;= N, M &lt;= 100, denoting the numbers of robots and instructions respectively. Then follow N lines with two integers, 1 &lt;= Xi &lt;= A, 1 &lt;= Yi &lt;= B and one letter (N, S, E or W), giving the starting position and direction of each robot, in order from 1 through N. No two robots start at the same position. <img src="/posts/53ad7638/2632_1.jpg" alt="2632"> Finally there are M lines, giving the instructions in sequential order. An instruction has the following format: &lt; robot #&gt; &lt; action&gt; &lt; repeat&gt; Where is one of L: turn left 90 degrees, R: turn right 90 degrees, or F: move forward one meter,</p><p>and 1 &lt;= &lt; repeat&gt; &lt;= 100 is the number of times the robot should perform this single move.</p><h2 id="output-specification">Output Specification</h2><p>Output one line for each test case: Robot i crashes into the wall, if robot i crashes into a wall. (A robot crashes into a wall if Xi = 0, Xi = A + 1, Yi = 0 or Yi = B + 1.) Robot i crashes into robot j, if robots i and j crash, and i is the moving robot. OK, if no crashing occurs.</p><p>Only the first crash is to be reported.</p><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x673A;&#x5668;&#x4EBA;&#x5728;&#x4ED3;&#x5E93;&#x4E2D;&#x53D6;&#x8D27;&#xFF0C;&#x4ED3;&#x5E93;&#x662F;&#x77E9;&#x5F62;&#x7684;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x673A;&#x5668;&#x4EBA;&#x90FD;&#x5360;&#x76F4;&#x5F84;1M&#x7684;&#x5706;&#x5F62;&#x5730;&#x677F;&#x7A7A;&#x95F4;&#xFF0C;&#x5047;&#x8BBE;&#x6709;N&#x4E2A;&#x673A;&#x5668;&#x4EBA;&#xFF0C;&#x4ECE;1~N&#x7F16;&#x53F7;&#x3002;&#x73B0;&#x5728;&#x77E5;&#x9053;&#x6BCF;&#x4E2A;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x65B9;&#x5411;&#x3002;&#x673A;&#x5668;&#x4EBA;&#x4F1A;&#x65E0;&#x610F;&#x8BC6;&#x7684;&#x9075;&#x4ECE;&#x6240;&#x6709;&#x7684;&#x6307;&#x4EE4;&#xFF0C;&#x6309;&#x7167;&#x987A;&#x5E8F;&#x8FDB;&#x884C;&#x3002;&#x4FDD;&#x8BC1;&#x6CA1;&#x6709;&#x4E24;&#x4E2A;&#x673A;&#x5668;&#x4EBA;&#x540C;&#x65F6;&#x79FB;&#x52A8;&#xFF0C;&#x673A;&#x5668;&#x4EBA;&#x603B;&#x662F;&#x5728;&#x4E0B;&#x4E00;&#x4E2A;&#x6307;&#x4EE4;&#x4E4B;&#x524D;&#x5904;&#x7406;&#x5F53;&#x524D;&#x4E4B;&#x7075;&#x3002;</p><p>&#x5982;&#x679C;&#x673A;&#x5668;&#x4EBA;&#x8BD5;&#x56FE;&#x79FB;&#x52A8;&#x5230;&#x4ED3;&#x5E93;&#x533A;&#x57DF;&#x4E4B;&#x5916;&#xFF0C;&#x673A;&#x5668;&#x4EBA;&#x4F1A;&#x649E;&#x5899;&#x3002;&#x5982;&#x679C;&#x673A;&#x5668;&#x4EBA;&#x8BD5;&#x56FE;&#x5360;&#x636E;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x6709;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x70B9;&#xFF0C;&#x5219;&#x8FD9;&#x4E24;&#x4E2A;&#x673A;&#x5668;&#x4EBA;&#x4F1A;&#x4E92;&#x76F8;&#x649E;&#x51FB;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x7B2C;&#x4E00;&#x884C;&#x8F93;&#x5165;K&#xFF0C;&#x8868;&#x793A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p>&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x4EE5;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#x7684;&#x884C;&#x5F00;&#x59CB;&#xFF0C;1 &lt;= A&#xFF0C;B &lt;= 100&#xFF0C;&#x4EE5;&#x7C73;&#x4E3A;&#x5355;&#x4F4D;&#x7ED9;&#x51FA;&#x4ED3;&#x5E93;&#x7684;&#x5927;&#x5C0F;&#x3002;A&#x662F;EW&#x65B9;&#x5411;&#x7684;&#x957F;&#x5EA6;&#xFF0C;B&#x662F;NS&#x65B9;&#x5411;&#x7684;&#x957F;&#x5EA6;&#x3002; &#x7B2C;&#x4E8C;&#x884C;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#xFF0C;1 &lt;= N&#xFF0C;M &lt;= 100&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x673A;&#x5668;&#x4EBA;&#x548C;&#x6307;&#x4EE4;&#x7684;&#x6570;&#x91CF;&#x3002; &#x7136;&#x540E;&#x8DDF;&#x968F;N&#x884C;&#xFF0C;&#x7528;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#xFF0C;1 &lt;= Xi &lt;= A&#xFF0C;1 &lt;= Yi &lt;= B&#x548C;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#xFF08;N&#xFF0C;S&#xFF0C;E&#x6216;W&#xFF09;&#xFF0C;&#x7ED9;&#x51FA;&#x6BCF;&#x4E2A;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;&#x548C;&#x65B9;&#x5411;&#xFF0C;&#x4FDD;&#x8BC1;&#x6CA1;&#x6709;&#x4E24;&#x4E2A;&#x673A;&#x5668;&#x4EBA;&#x4ECE;&#x540C;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x3002;</p><p>&#x6700;&#x540E;&#x6709;M&#x884C;&#xFF0C;&#x6309;&#x987A;&#x5E8F;&#x7ED9;&#x51FA;&#x8BF4;&#x660E;&#x3002; &#x6307;&#x4EE4;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x683C;&#x5F0F;&#xFF1A;</p><ul><li>&lt;robot&#xFF03;&gt; <action> <repeat></repeat></action></li></ul><p>&#x5176;&#x4E2D;&#xFF0C;<action> &#x662F;&#x4EE5;&#x4E0B;&#x7684;&#x5176;&#x4E2D;&#x4E4B;&#x4E00; - L&#xFF1A;&#x5411;&#x5DE6;&#x8F6C;90&#x5EA6;&#x3002; - R&#xFF1A;&#x5411;&#x53F3;&#x8F6C;90&#x5EA6; - F&#xFF1A;&#x524D;&#x8FDB;&#x4E00;&#x7C73;&#x3002;</action></p><p>1 &lt;= <repeat> &lt;= 100&#x662F;&#x673A;&#x5668;&#x4EBA;&#x6267;&#x884C;&#x6B64;&#x5355;&#x6B21;&#x64CD;&#x4F5C;&#x7684;&#x6B21;&#x6570;&#x3002;</repeat></p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x6709;&#x4E00;&#x884C;&#x8F93;&#x51FA;&#xFF1A; - Robot i crashes into the wall &#x5982;&#x679C;&#x673A;&#x5668;&#x4EBA;&#x649E;&#x5899;&#x4E86; - Robot i crashes into robot j &#x5982;&#x679C;i&#x662F;&#x6B63;&#x5728;&#x79FB;&#x52A8;&#x7684;&#x673A;&#x5668;&#x4EBA;&#xFF0C;&#x649E;&#x5230;&#x4E86;j&#x3002; - OK, if no crashing occurs.</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x6A21;&#x62DF;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> Directions[<span class="number">4</span>] = { <span class="string">&apos;N&apos;</span>,<span class="string">&apos;E&apos;</span>,<span class="string">&apos;S&apos;</span>,<span class="string">&apos;W&apos;</span> };</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> Direction;<span class="comment">//&#x65B9;&#x5411;</span></span><br><span class="line">    <span class="keyword">int</span> x;<span class="comment">//&#x5750;&#x6807;</span></span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">}robot;</span><br><span class="line"><span class="built_in">vector</span>&lt;robot&gt;R;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">int</span> times;</span><br><span class="line">}command;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;G;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="keyword">int</span> K, A, B, N, M;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(command comm,<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (!flag)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (comm.c == <span class="string">&apos;L&apos;</span>)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            R[comm.num].Direction = (R[comm.num].Direction + <span class="number">3</span>) % <span class="number">4</span>;<span class="comment">//&#x5411;&#x5DE6;</span></span><br><span class="line">    <span class="keyword">if</span> (comm.c == <span class="string">&apos;R&apos;</span>)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            R[comm.num].Direction = (R[comm.num].Direction + <span class="number">1</span>) % <span class="number">4</span>;<span class="comment">//&#x5411;&#x53F3;</span></span><br><span class="line">    <span class="keyword">if</span> (comm.c == <span class="string">&apos;F&apos;</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">switch</span> (R[comm.num].Direction)</span><br><span class="line">        {</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//&#x5411;&#x5317;&#x8D70;</span></span><br><span class="line">            G[R[comm.num].y][R[comm.num].x] = <span class="number">0</span>;<span class="comment">//&#x8D77;&#x6B65;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            {</span><br><span class="line">                R[comm.num].y += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (R[comm.num].y &gt; B)</span><br><span class="line">                {</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Robot %d crashes into the wall\n&quot;</span>, comm.num);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (G[R[comm.num].y][R[comm.num].x] != <span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Robot %d crashes into robot %d\n&quot;</span>, comm.num, G[R[comm.num].y][R[comm.num].x]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                G[R[comm.num].y][R[comm.num].x] = comm.num;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//&#x5411;&#x4E1C;&#x8D70;</span></span><br><span class="line">            G[R[comm.num].y][R[comm.num].x] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            {</span><br><span class="line">                R[comm.num].x += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (R[comm.num].x &gt; A)</span><br><span class="line">                {</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Robot %d crashes into the wall\n&quot;</span>, comm.num);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (G[R[comm.num].y][R[comm.num].x] != <span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Robot %d crashes into robot %d\n&quot;</span>, comm.num, G[R[comm.num].y][R[comm.num].x]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">                G[R[comm.num].y][R[comm.num].x] = comm.num;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//&#x5411;&#x5357;&#x8D70;</span></span><br><span class="line">            G[R[comm.num].y][R[comm.num].x] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            {</span><br><span class="line">                R[comm.num].y -= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (R[comm.num].y == <span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Robot %d crashes into the wall\n&quot;</span>, comm.num);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (G[R[comm.num].y][R[comm.num].x] != <span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Robot %d crashes into robot %d\n&quot;</span>, comm.num, G[R[comm.num].y][R[comm.num].x]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                G[R[comm.num].y][R[comm.num].x] = comm.num;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//&#x5411;&#x897F;&#x8D70;</span></span><br><span class="line">            G[R[comm.num].y][R[comm.num].x] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            {</span><br><span class="line">                R[comm.num].x -= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (R[comm.num].x == <span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Robot %d crashes into the wall\n&quot;</span>, comm.num);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (G[R[comm.num].y][R[comm.num].x] != <span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Robot %d crashes into robot %d\n&quot;</span>, comm.num, G[R[comm.num].y][R[comm.num].x]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                G[R[comm.num].y][R[comm.num].x] = comm.num;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (cnt == M&amp;&amp;flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;OK&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> Dir;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; K;</span><br><span class="line">    <span class="keyword">while</span> (K--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; B;</span><br><span class="line">        G.clear();</span><br><span class="line">        G.resize(B+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= B; i++)</span><br><span class="line">            G[i].resize(A+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">        R.resize(N + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; R[i].x &gt;&gt; R[i].y &gt;&gt; Dir;</span><br><span class="line">            G[R[i].y][R[i].x] = i;</span><br><span class="line">            <span class="keyword">switch</span> (Dir)</span><br><span class="line">            {</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;N&apos;</span>: R[i].Direction = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;E&apos;</span>: R[i].Direction = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;S&apos;</span>: R[i].Direction = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;W&apos;</span>: R[i].Direction = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        command comm;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; comm.num &gt;&gt; comm.c &gt;&gt; comm.times;</span><br><span class="line">            move(comm, cnt);</span><br><span class="line">            cnt++;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="built_in">stdout</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><div class="sourceCode" id="cb1"><pre class="sourceCode cpp"><code class="sourceCode cpp"></code></pre></div>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-1068 Parencodings</title>
      <link href="//posts/d837b83f/"/>
      <url>//posts/d837b83f/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=1068" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> Parencodings <a id="more"></a> ## Description Let S = s1 s2...s2n be a well-formed string of parentheses. S can be encoded in two different ways: q By an integer sequence P = p1 p2...pn where pi is the number of left parentheses before the ith right parenthesis in S (P-sequence). q By an integer sequence W = w1 w2...wn where for each right parenthesis, say a in S, we associate an integer which is the number of right parentheses counting from the matched left parenthesis of a up to a. (W-sequence).</p><p>Following is an example of the above encodings:</p><ul><li><p>S (((()()())))</p></li><li><p>P-sequence 4 5 6666</p></li><li><p>W-sequence 1 1 1456</p></li></ul><p>Write a program to convert P-sequence of a well-formed string to the W-sequence of the same string. ## Input Specification The first line of the input contains a single integer t (1 &lt;= t &lt;= 10), the number of test cases, followed by the input data for each test case. The first line of each test case is an integer n (1 &lt;= n &lt;= 20), and the second line is the P-sequence of a well-formed string. It contains n positive integers, separated with blanks, representing the P-sequence. ## Output Specification The output file consists of exactly t lines corresponding to test cases. For each test case, the output line should contain n integers describing the W-sequence of the string corresponding to its given P-sequence. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; S&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x62EC;&#x53F7;&#x7EC4;&#x6210;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;S&#x53EF;&#x4EE5;&#x6709;&#x4E24;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x7F16;&#x7801;&#xFF1A; - P&#x5E8F;&#x5217;&#xFF0C;P = p1 p2...pn&#xFF0C;pi&#x662F;S&#x5E8F;&#x5217;&#x4E2D;&#x7B2C;i&#x4E2A;&#x53F3;&#x62EC;&#x53F7;&#x4E4B;&#x524D;&#x7684;&#x5DE6;&#x62EC;&#x53F7;&#x7684;&#x6570;&#x91CF;&#x3002; - W&#x5E8F;&#x5217;&#xFF0C;W = w1 w2...wn&#xFF0C;Wi&#x662F;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x53F3;&#x62EC;&#x53F7;&#xFF0C;&#x4E0E;&#x4E4B;&#x5339;&#x914D;&#x7684;&#x54CD;&#x5E94;&#x7684;&#x5DE6;&#x62EC;&#x53F7;&#x4E4B;&#x95F4;&#x7684;&#xFF0C;&#x53F3;&#x62EC;&#x53F7;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p>&#x73B0;&#x5728;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;P&#x5E8F;&#x5217;&#xFF0C;&#x6C42;&#x51FA;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684;W&#x5E8F;&#x5217;&#x3002; ## &#x8F93;&#x5165; &#x8F93;&#x5165;&#x5305;&#x62EC;&#x591A;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6574;&#x6570;t&#xFF0C;&#x8868;&#x793A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x7136;&#x540E;&#x662F;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6574;&#x6570;n&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x662F;P&#x5E8F;&#x5217;&#xFF0C;&#x6709;N&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;P&#x5E8F;&#x5217;&#xFF0C;&#x8F93;&#x51FA;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684;W&#x5E8F;&#x5217;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x6A21;&#x62DF; ## &#x4EE3;&#x7801; C++ <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t, n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;P(n);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; W;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; S;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; P[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = cnt; j &lt; P[i]; j++)</span><br><span class="line">                S.push_back(<span class="string">&apos;(&apos;</span>);</span><br><span class="line">            cnt = P[i];</span><br><span class="line">            S.push_back(<span class="string">&apos;)&apos;</span>);</span><br><span class="line">        }</span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;<span class="comment">//&#x62EC;&#x53F7;&#x91CC;&#x5F85;&#x5339;&#x914D;&#x7684;&#x53F3;&#x62EC;&#x53F7;&#x7684;&#x4E2A;&#x6570;</span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">1</span>;<span class="comment">//&#x53F3;&#x62EC;&#x53F7;&#x7684;&#x4E2A;&#x6570;</span></span><br><span class="line">        <span class="keyword">while</span> (cnt &lt; S.size())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (S[cnt] != <span class="string">&apos;)&apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            num = <span class="number">0</span>;</span><br><span class="line">            res = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = cnt<span class="number">-1</span>; i &gt;=<span class="number">0</span>; i--)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (S[i] == <span class="string">&apos;(&apos;</span>)</span><br><span class="line">                    <span class="keyword">if</span> (num == <span class="number">0</span>)</span><br><span class="line">                    {</span><br><span class="line">                        W.push_back(res);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        num--;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                {</span><br><span class="line">                    num++;</span><br><span class="line">                    res++;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            cnt++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; W.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; W[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">4</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">1</span> <span class="number">3</span> <span class="number">9</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-3295 Tautology</title>
      <link href="//posts/8893c4a8/"/>
      <url>//posts/8893c4a8/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=3295" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6C38;&#x771F;&#x5F0F; <a id="more"></a></p><h2 id="description">Description</h2><p>WFF &apos;N PROOF is a logic game played with dice. Each die has six faces representing some subset of the possible symbols K, A, N, C, E, p, q, r, s, t. A Well-formed formula (WFF) is any string of these symbols obeying the following rules: - p, q, r, s, and t are WFFs - if w is a WFF, Nw is a WFF - if w and x are WFFs, Kwx, Awx, Cwx, and Ewx are WFFs.</p><p>The meaning of a WFF is defined as follows: - p, q, r, s, and t are logical variables that may take on the value 0 (false) or 1 (true). - K, A, N, C, E mean and, or, not, implies, and equals as defined in the truth table below.</p><p>Definitions of K, A, N, C, and E</p><table><thead><tr class="header"><th>w x</th></tr></thead><tbody><tr class="odd"><td>1 1</td></tr><tr class="even"><td>0 0</td></tr><tr class="odd"><td>0 1</td></tr><tr class="even"><td>0 0</td></tr></tbody></table><p>A tautology is a WFF that has value 1 (true) regardless of the values of its variables. For example, ApNp is a tautology because it is true regardless of the value of p. On the other hand, ApNq is not, because it has the value 0 for p=0, q=1.</p><p>You must determine whether or not a WFF is a tautology.</p><h2 id="input-specification">Input Specification</h2><p>Input consists of several test cases. Each test case is a single line containing a WFF with no more than 100 symbols. A line containing 0 follows the last case.</p><h2 id="output-specification">Output Specification</h2><p>For each test case, output a line containing tautology or not as appropriate.</p><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x7ED9;&#x5B9A;5&#x4E2A;&#x53D8;&#x91CF;&#x548C;5&#x4E2A;&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;&#x6C42;&#x7ED9;&#x51FA;&#x7684;&#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x662F;&#x5426;&#x6052;&#x4E3A;&#x771F;&#x3002;</p><p>5&#x4E2A;&#x53D8;&#x91CF;&#x5168;&#x90FD;&#x662F;&#x5E03;&#x5C14;&#x53D8;&#x91CF;&#xFF0C;&#x53D6;&#x503C;&#x53EA;&#x6709;0&#x548C;1&#x4E24;&#x79CD;&#x3002;&#x64CD;&#x4F5C;&#x7B26;&#x7684;&#x771F;&#x503C;&#x8868;&#x5982;&#x4E0B;&#xFF1A;</p><table><thead><tr class="header"><th>w x</th></tr></thead><tbody><tr class="odd"><td>1 1</td></tr><tr class="even"><td>0 0</td></tr><tr class="odd"><td>0 1</td></tr><tr class="even"><td>0 0</td></tr></tbody></table><p>&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#xFF1A; 1. ApNp&#x6052;&#x4E3A;&#x771F;&#xFF0C;&#x4E0D;&#x8BBA;p&#x53D6;&#x503C;&#x662F;0&#x8FD8;&#x662F;1&#xFF0C;ApNp&#x90FD;&#x662F;&#x771F;&#x3002; 2. ApNq&#x5C31;&#x4E0D;&#x662F;&#x6052;&#x4E3A;&#x771F;&#x7684;&#xFF0C;&#x5F53;p=0, q=1&#x65F6;&#xFF0C;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x503C;&#x4E3A;&#x5047;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x8F93;&#x5165;&#x5305;&#x62EC;&#x591A;&#x4E2A;&#x6D4B;&#x8BD5;&#xFF0C;&#x6BCF;&#x884C;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#xFF0C;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;100&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x3002;&#x7528;&#x4E00;&#x4E2A;&#x72EC;&#x5360;&#x4E00;&#x884C;&#x7684;0&#x8868;&#x793A;&#x6D4B;&#x8BD5;&#x7ED3;&#x675F;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x5BF9;&#x4E8E;&#x6CA1;&#x4E2A;&#x6D4B;&#x8BD5;&#xFF0C;&#x5982;&#x679C;&#x6052;&#x4E3A;&#x771F;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;tautology&#x3002;&#x53CD;&#x4E4B;&#x8F93;&#x51FA;not&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><ul><li>&#x679A;&#x4E3E;&#x6240;&#x6709;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x4E00;&#x5171;&#x6709;2^5=32&#x79CD;&#x53EF;&#x80FD;&#x3002;</li><li>&#x6216;&#x8005;&#x5229;&#x7528;&#x6808;&#xFF0C;&#x6A21;&#x62DF;&#x64CD;&#x4F5C;&#x3002;</li></ul><h2 id="&#x4EE3;&#x7801;-&#x679A;&#x4E3E;">&#x4EE3;&#x7801;-&#x679A;&#x4E3E;</h2><p><strong>&#x7F16;&#x8BD1;&#x73AF;&#x5883;&#xFF1A;&#x53EA;&#x5728;G++&#x4E2D;AC&#xFF0C;&#x5728;C++&#x4E2D;&#x4F1A;WA&#xFF0C;&#x6211;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x5565;</strong> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, p, q, r, s, t;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">res</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    n++;</span><br><span class="line">    <span class="keyword">int</span> t1, t2;</span><br><span class="line">    <span class="keyword">switch</span> (str[n])</span><br><span class="line">    {</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;K&apos;</span>:t1 = res(); t2 = res(); <span class="keyword">return</span> t1 &amp;&amp; t2;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;A&apos;</span>:t1 = res(); t2 = res(); <span class="keyword">return</span> t1 || t2;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;N&apos;</span>:t1 = res(); <span class="keyword">return</span> !t1;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;C&apos;</span>:t1 = res(); t2 = res(); <span class="keyword">return</span> (!t1) || t2;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;E&apos;</span>:t1 = res(); t2 = res(); <span class="keyword">return</span> t1== t2;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;p&apos;</span>:<span class="keyword">return</span> p;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;q&apos;</span>:<span class="keyword">return</span> q;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;r&apos;</span>:<span class="keyword">return</span> r;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;s&apos;</span>:<span class="keyword">return</span> s;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;t&apos;</span>:<span class="keyword">return</span> t;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; str)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (str == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>; p &lt; <span class="number">2</span> &amp;&amp; flag; p++)</span><br><span class="line">            <span class="keyword">for</span> (q = <span class="number">0</span>; q &lt; <span class="number">2</span> &amp;&amp; flag; q++)</span><br><span class="line">                <span class="keyword">for</span> (r = <span class="number">0</span>; r &lt; <span class="number">2</span> &amp;&amp; flag; r++)</span><br><span class="line">                    <span class="keyword">for</span> (s = <span class="number">0</span>; s &lt; <span class="number">2</span> &amp;&amp; flag; s++)</span><br><span class="line">                        <span class="keyword">for</span> (t = <span class="number">0</span>; t &lt; <span class="number">2</span> &amp;&amp; flag; t++)</span><br><span class="line">                        {</span><br><span class="line">                            n = <span class="number">-1</span>;</span><br><span class="line">                            <span class="keyword">if</span> (!res())</span><br><span class="line">                                flag = <span class="literal">false</span>;</span><br><span class="line">                        }</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;tautology&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;not&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="built_in">stdout</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x4EE3;&#x7801;-&#x679A;&#x4E3E;-&#x6808;">&#x4EE3;&#x7801;-&#x679A;&#x4E3E;-&#x6808;</h2><p><strong>&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x5728;G++&#x548C;C++&#x4E2D;AC</strong> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p, q, r, s, t;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">    <span class="keyword">int</span> t1, t2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = str.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">switch</span> (str[i])</span><br><span class="line">        {</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;p&apos;</span>:</span><br><span class="line">            res.push(p);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;q&apos;</span>:</span><br><span class="line">            res.push(q);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;r&apos;</span>:</span><br><span class="line">            res.push(r);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;s&apos;</span>:</span><br><span class="line">            res.push(s);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;t&apos;</span>:</span><br><span class="line">            res.push(t);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;K&apos;</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            t2 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (t1&amp;&amp;t2)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;A&apos;</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            t2 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (t1 || t2)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;N&apos;</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (!t1)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;C&apos;</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            t2 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (!t1 || t2)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&apos;E&apos;</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            t2 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (t1 == t2)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    t1 = res.top(); res.pop();</span><br><span class="line">    <span class="keyword">return</span> t1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;str)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (str == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>; p &lt; <span class="number">2</span> &amp;&amp; flag; p++)</span><br><span class="line">            <span class="keyword">for</span> (q = <span class="number">0</span>; q &lt; <span class="number">2</span> &amp;&amp; flag; q++)</span><br><span class="line">                <span class="keyword">for</span> (r = <span class="number">0</span>; r &lt; <span class="number">2</span> &amp;&amp; flag; r++)</span><br><span class="line">                    <span class="keyword">for</span> (s = <span class="number">0</span>; s &lt; <span class="number">2</span> &amp;&amp; flag; s++)</span><br><span class="line">                        <span class="keyword">for</span> (t = <span class="number">0</span>; t &lt; <span class="number">2</span> &amp;&amp; flag; t++)</span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">if</span> (!judge())</span><br><span class="line">                                flag = <span class="literal">false</span>;</span><br><span class="line">                        }</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;tautology&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;not&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="built_in">stdout</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line">ApNp</span><br><span class="line">ApNq</span><br><span class="line"><span class="number">0</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line">tautology</span><br><span class="line"><span class="keyword">not</span></span><br></pre></td></tr></table></figure><p><strong>&#x826F;&#x5FC3;&#x5927;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x6765;&#x81EA;Waterloo Local Contest, 2006.9.30</strong> &#x8F93;&#x5165; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">p</span><br><span class="line">q</span><br><span class="line">r</span><br><span class="line">s</span><br><span class="line">t</span><br><span class="line">Cpp</span><br><span class="line">App</span><br><span class="line">Kpp</span><br><span class="line">Epp</span><br><span class="line">NNNNNNNNNNNNNNNNNNNAKKKEEKEEKppppppppppp</span><br><span class="line">NNNNNNNNNNNNNCAKKEEEAACKKKKKCEEEACKKEKCCEKAppqqqppppqqpqppppqqppppqqqppppp</span><br><span class="line">NNNNNNNNNNNACKCAKEAAEKCAKECEKKKACAAEAKAKCKKrqqqprpppprpqprqprrppqrqqrqrqppqp</span><br><span class="line">NNNNNNNNCAEACACKEEEKKAEEEEAKKEECACKACECCCEKAECEECCCACrrrrprrqssrprrqpsssrrpsqssqprrqpprrpqrppqqsqqs</span><br><span class="line">NNNNNNNNNNNKAEEACEKKCCCKKAAECACAECAEKKECKAAAECCCKEAACArqpsrstpqsspsppssrpsprstsqspsspptrqrprptstps</span><br><span class="line">NNNNNNNNNNNNEAAECEAEAECKCEAAAEEACAACCKEAKtqptstpttssrptqrtsstpptqtssppp</span><br><span class="line">NNNNNNNNNNNNNNNNNNNCAAAKEEAEACCCACECCCCCCEKCKCAKCpqpssqsppprttrqprspsssttsrprtqq</span><br><span class="line">NNNNNNNNNNNNEEKKCCCACACECEACCKCCAEKKKKCEKCEKEppsrrpqtqrrspqrqrpprtpqpqqrqqqtprp</span><br><span class="line">NNNNCAAEAECKKEKKEAACEAECAEEECCCCEKAKCKKAAEKrrtssrrppprrpstsrqqrrqprqrsprsspsrpsspsq</span><br><span class="line">NNNNNNNNNECCKAAACAKAAECCKAECKEAEKEACCKErstrqpqrtrtrqstqpptprttprtrrqtq</span><br><span class="line">NNAKAKEAKEAEAKACCEECCKKAACECAACACrrtrqtsttstspqrstqrpspqttrpspqsp</span><br><span class="line">NNNEECEACEECKAAKKKCEKECKAKKAAAAAKsrtpprtrqqtpsssrrprtsqtsrpssspt</span><br><span class="line">NNNNNNCEECAKAACEKECAKCCAEECCCAEAEKKKrpqqqsqprqqsqtqstsrpqsqsqsrqsqs</span><br><span class="line">NNNAEAEKEACEECECKCAEAKCEEEKEKEKKCECEqtpssqrptpsqppqpprsqpttqrsqqrqqtrq</span><br><span class="line">CNNNEECEEEKECAAEACAsppsrqpptpspppqqNNNEECEEEKECAAEACAsppsrqpptpspppqq</span><br><span class="line">ANNNEECEEEKECAAEACAsppsrqpptpspppqqNNNEECEEEKECAAEACAsppsrqpptpspppqq</span><br><span class="line">KNNNEECEEEKECAAEACAsppsrqpptpspppqqNNNEECEEEKECAAEACAsppsrqpptpspppqq</span><br><span class="line">ENNNEECEEEKECAAEACAsppsrqpptpspppqqNNNEECEEEKECAAEACAsppsrqpptpspppqq</span><br><span class="line">CNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">ANNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">KNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">ENNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NCNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NANNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NKNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NENNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NNNNEEEEEAAACKEKAAEEAqpptpsqsrqpprssptt</span><br><span class="line">NNNKAKCEECACCEECACEKrtrrsstpqptpstsrsq</span><br><span class="line">NNNNNNNNNCACCCEKEACEACpqrqpsststtpps</span><br><span class="line">NNNNKKCACEACECCssqptqptrrtr</span><br><span class="line">NNNAAAACKECCAKAKACprspqspspsttpttr</span><br><span class="line">NNNECCCECCAAEpqstpspppss</span><br><span class="line">NNNNNCEAECACCEKAEEEppsptpsppprpqrq</span><br><span class="line">AEAAKKEEEKAEAKpqqtpppsssqrqsp</span><br><span class="line">NNAKEKAAKprqrpqpt</span><br><span class="line">NNNAKACAKEKCECKtqppqtpqsqspr</span><br><span class="line">NCEKEEACCCppsstppprp</span><br><span class="line">NNNAEKCEKAEEECEEKEtrqpppqqpppqstpp</span><br><span class="line">NNNNCKEAACAKEKACECCEKstppprrptqqpqqpppp</span><br><span class="line">NNEAKCECKACEEECKprrpqqsppppttqr</span><br><span class="line">NNNNNCKAAAKKEKKKECKECppqrppttpsttrtqtq</span><br><span class="line">NNEKKACCKKACEKErpprsptppppptq</span><br><span class="line">NNNCKECCAEAECAEspqpqpprsptpr</span><br><span class="line">NNNCKECKCEEECstrtppsrtrp</span><br><span class="line">NNKCCKACKAACKprtttttpttpp</span><br><span class="line">NNNNEACCKKEArqpptrppt</span><br><span class="line">NKECKACAptrrrttt</span><br><span class="line">NNAEEEKECAAptpspptqpp</span><br><span class="line">NNNACKEEAAKAKKpsrttqtssrrt</span><br><span class="line">NNKKAKAKEEECACEEtstqqrsptttrprp</span><br><span class="line">CKAKECKKKtttppptptq</span><br><span class="line">NNNCEEEKCECCtsptqqqptp</span><br><span class="line">NAECCAKKCCttttpptpsr</span><br><span class="line">NCEEKCCAErpptpsppt</span><br><span class="line">NKKEEKtppttt</span><br><span class="line">NCKCAECEpttqqttp</span><br><span class="line">NNNNNEEKAAECqqpqpppt</span><br><span class="line">NECAACAECCAACKtrpptpptqtpppp</span><br><span class="line">NNKECKKACrttttrtp</span><br><span class="line">AECAECrrtsptt</span><br><span class="line">0</span><br></pre></td></tr></table></figure></p><p>&#x8F93;&#x51FA; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> POJ </tag>
            
            <tag> 枚举 </tag>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-2586 Y2K Accounting Bug</title>
      <link href="//posts/b572d5b3/"/>
      <url>//posts/b572d5b3/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=2586" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5343;&#x5E74;&#x866B;&#x9519;&#x8BEF; <a id="more"></a></p><h2 id="description">Description</h2><p>Accounting for Computer Machinists (ACM) has sufferred from the Y2K bug and lost some vital data for preparing annual report for MS Inc. All what they remember is that MS Inc. posted a surplus or a deficit each month of 1999 and each month when MS Inc. posted surplus, the amount of surplus was s and each month when MS Inc. posted deficit, the deficit was d. They do not remember which or how many months posted surplus or deficit. MS Inc., unlike other companies, posts their earnings for each consecutive 5 months during a year. ACM knows that each of these 8 postings reported a deficit but they do not know how much. The chief accountant is almost sure that MS Inc. was about to post surplus for the entire year of 1999. Almost but not quite.</p><p>Write a program, which decides whether MS Inc. suffered a deficit during 1999, or if a surplus for 1999 was possible, what is the maximum amount of surplus that they can post.</p><h2 id="input-specification">Input Specification</h2><p>Input is a sequence of lines, each containing two positive integers s and d.</p><h2 id="output-specification">Output Specification</h2><p>For each line of input, output one line containing either a single integer giving the amount of surplus for the entire year, or output Deficit if it is impossible.</p><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x9898;&#x76EE;&#x770B;&#x7684;&#x6211;&#x5410;&#x8840;....</p><p>&#x5927;&#x610F;&#xFF1A;&#x67D0;&#x516C;&#x53F8;&#x6BCF;&#x4E2A;&#x6708;&#x7684;&#x76C8;&#x4F59;&#x6216;&#x8005;&#x8D64;&#x5B57;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;&#x8981;&#x4E48;&#x662F;&#x8D5A;&#x4E86;s&#xFF0C;&#x8981;&#x4E48;&#x662F;&#x4E8F;&#x4E86;d&#xFF0C;&#x53EA;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x8FD9;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x800C;&#x4E14;&#x91D1;&#x989D;&#x56FA;&#x5B9A;&#xFF0C;&#x5C31;&#x662F;s&#x6216;&#x8005;d&#xFF0C;&#x4E0D;&#x4F1A;&#x662F;&#x5176;&#x4ED6;&#x7684;&#x6570;&#x3002;</p><p>&#x4F46;&#x662F;&#x5751;&#x7239;&#x7684;&#x662F;&#xFF0C;&#x4ED6;&#x4EEC;&#x4E0D;&#x8BB0;&#x5F97;&#x8FD9;&#x4E00;&#x5E74;&#x4E2D;&#xFF0C;&#x54EA;&#x51E0;&#x4E2A;&#x6708;&#x8D5A;&#x4E86;&#xFF0C;&#x54EA;&#x51E0;&#x4E2A;&#x6708;&#x8D54;&#x4E86;&#x3002;&#x4ED6;&#x4EEC;&#x53EA;&#x77E5;&#x9053;&#xFF1A;&#x4ED6;&#x4EEC;&#x6BCF;&#x6B21;&#x7EDF;&#x8BA1;&#x5F53;&#x5E74;&#x7684;&#x8D22;&#x52A1;&#x62A5;&#x8868;&#x65F6;&#xFF0C;&#x90FD;&#x662F;&#x4E00;&#x8FDE;&#x8BA1;&#x7B97;5&#x4E2A;&#x6708;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x4E00;&#x5E74;&#x5171;&#x516C;&#x5E03;8&#x6B21;&#x8D22;&#x52A1;&#x62A5;&#x8868;&#xFF08;1<sub>5,2</sub>6,3<sub>7,4</sub>8,5<sub>9,6</sub>10,7<sub>11,8</sub>12&#xFF09;&#x3002;&#x8FD9;8&#x4E2A;&#x6708;&#x7684;&#x8D22;&#x52A1;&#x62A5;&#x8868;&#x5168;&#x90FD;&#x662F;&#x4E8F;&#x635F;&#x7684;&#x3002;</p><p>&#x5751;&#x7239;&#x6210;&#x8FD9;&#x4E2A;&#x6837;&#x5B50;&#xFF0C;&#x4ED6;&#x4EEC;&#x8FD8;&#x62B1;&#x6709;&#x4E00;&#x4E1D;&#x4FA5;&#x5E78;&#x5FC3;&#x7406;&#xFF0C;&#x8BA4;&#x4E3A;&#x4ED6;&#x4EEC;&#x4ECA;&#x5E74;&#x6709;&#x53EF;&#x80FD;&#x8D5A;&#x94B1;&#xFF0C;&#x95EE;&#xFF0C;&#x4ED6;&#x4EEC;&#x4ECA;&#x5E74;&#x6700;&#x591A;&#x53EF;&#x80FD;&#x80FD;&#x8D5A;&#x591A;&#x5C11;&#x94B1;&#xFF0C;&#x5982;&#x679C;&#x91D1;&#x989D;&lt;0&#xFF0C;&#x5219;&#x8F93;&#x51FA;&quot;Deficit&quot;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6709;&#x591A;&#x4E2A;&#x8F93;&#x5165;&#xFF0C;&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x53EA;&#x6709;&#x4E00;&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x6709;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;s&#x548C;d&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x8F93;&#x51FA;&#x53EF;&#x80FD;&#x7684;&#x6700;&#x5927;&#x7684;&#x8425;&#x5229;&#xFF0C;&#x5982;&#x679C;&#x4E8F;&#x635F;&#xFF0C;&#x8F93;&#x51FA;&quot;Deficit&quot;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p><贪心>&#x56E0;&#x4E3A;&#x6BCF;5&#x4E2A;&#x6708;&#x7EDF;&#x8BA1;&#x4E00;&#x6B21;&#x90FD;&#x4E8F;&#x7A7A;&#xFF0C;&#x90A3;&#x4E48;&#x6709;5&#x79CD;&#x60C5;&#x51B5;&#xFF1A; 1. &#x82E5;SSSSD&#x4E8F;&#x7A7A;&#xFF0C;&#x90A3;&#x4E48;&#x5168;&#x5E74;&#x53EF;&#x80FD;&#x6700;&#x5927;&#x76C8;&#x5229;&#x60C5;&#x51B5;&#x4E3A;: SSSSDSSSSDSS 2. &#x82E5;SSSDD&#x4E8F;&#x7A7A;&#xFF0C;&#x90A3;&#x4E48;&#x5168;&#x5E74;&#x53EF;&#x80FD;&#x6700;&#x5927;&#x76C8;&#x5229;&#x60C5;&#x51B5;&#x4E3A;&#xFF1A;SSSDDSSSDDSS 3. &#x82E5;SSDDD&#x4E8F;&#x7A7A;&#xFF0C;&#x90A3;&#x4E48;&#x5168;&#x5E74;&#x53EF;&#x80FD;&#x6700;&#x5927;&#x76C8;&#x5229;&#x60C5;&#x51B5;&#x4E3A;: SSDDDSSDDDSS 4. &#x82E5;SDDDD&#x4E8F;&#x7A7A;&#xFF0C;&#x90A3;&#x4E48;&#x5168;&#x5E74;&#x53EF;&#x80FD;&#x6700;&#x5927;&#x76C8;&#x5229;&#x60C5;&#x51B5;&#x4E3A;: SDDDDSDDDDSD 5. &#x82E5;DDDDD&#x4E8F;&#x7A7A;&#xFF0C;&#x90A3;&#x4E48;&#x5168;&#x5E74;&#x53EF;&#x80FD;&#x6700;&#x5927;&#x76C8;&#x5229;&#x60C5;&#x51B5;&#x4E3A;: DDDDDDDDDDDD</贪心></p><p><dfs>&#x679A;&#x4E3E;&#x548C;&#x904D;&#x5386; 1. &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6708;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x53EA;&#x6709;&#x8D5A;&#x4E86;s&#x548C;&#x4E8F;&#x4E86;d&#xFF0C;&#x56E0;&#x6B64;&#x5206;&#x522B;&#x5047;&#x8BBE;&#xFF0C;&#x8FDB;&#x884C;&#x6DF1;&#x5EA6;&#x641C;&#x7D22;&#xFF0C;&#x8981;&#x7528;&#x5230;2<sup>12</sup>&#x4E2A;&#x53EF;&#x80FD;&#x3002;</dfs></p><h2 id="&#x4EE3;&#x7801;&#x8D2A;&#x5FC3;">&#x4EE3;&#x7801;&#xFF08;&#x8D2A;&#x5FC3;&#xFF09;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> s, d;</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; s &amp;&amp; <span class="built_in">cin</span> &gt;&gt; d)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (d&gt;<span class="number">4</span> * s)ans = <span class="number">10</span> * s - <span class="number">2</span> * d;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> * d&gt;<span class="number">3</span> * s)ans = <span class="number">8</span> * s - <span class="number">4</span> * d;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">3</span> * d&gt;<span class="number">2</span> * s)ans = <span class="number">6</span> * (s - d);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">4</span> * d&gt;s)ans = <span class="number">3</span> * (s - <span class="number">3</span> * d);</span><br><span class="line">        <span class="keyword">else</span> ans = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ans&lt;<span class="number">0</span>)<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Deficit&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x4EE3;&#x7801;dfs">&#x4EE3;&#x7801;&#xFF08;DFS&#xFF09;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s, d;</span><br><span class="line"><span class="keyword">int</span> month[<span class="number">12</span>];</span><br><span class="line"><span class="keyword">int</span> res;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">// &#x4ECE;5&#x6708;&#x5F00;&#x59CB;&#xFF0C;&#x6BCF;&#x4E2A;&#x6708;&#x53D1;&#x5E03;&#x4E00;&#x4E2A;&#x62A5;&#x8868;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x68C0;&#x67E5;</span></span><br><span class="line">    <span class="comment">// &#x68C0;&#x67E5;&#x8FD9;&#x4E2A;&#x62A5;&#x8868;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x5426;&#x4E3A;&#x4E8F;&#x635F;</span></span><br><span class="line">    <span class="keyword">if</span> (m &gt; <span class="number">4</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = m - <span class="number">5</span>; j &lt; m; j++) {</span><br><span class="line">            tmp += month[j];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (tmp &gt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// &#x5E74;&#x5E95;&#x67E5;&#x770B;&#x53EF;&#x80FD;&#x7684;&#x5229;&#x6DA6;&#xFF0C;&#x4FDD;&#x7559;&#x6700;&#x5927;&#x5229;&#x6DA6;</span></span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">12</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">12</span>; j++) sum += month[j];</span><br><span class="line">        <span class="keyword">if</span> (sum &gt; res) res = sum;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// &#x8425;&#x5229;&#x6216;&#x4E8F;&#x635F;&#x90FD;&#x8BD5;&#x4E00;&#x8BD5;</span></span><br><span class="line">    month[m] = s;</span><br><span class="line">    dfs(m + <span class="number">1</span>);</span><br><span class="line">    month[m] = -d;</span><br><span class="line">    dfs(m + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;s&gt;&gt;d)</span><br><span class="line">    {</span><br><span class="line">        res = <span class="number">-1e9</span>;</span><br><span class="line">        dfs(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (res &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Deficit&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">59</span> <span class="number">237</span></span><br><span class="line"><span class="number">375</span> <span class="number">743</span></span><br><span class="line"><span class="number">200000</span> <span class="number">849694</span></span><br><span class="line"><span class="number">2500000</span> <span class="number">8000000</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">116</span></span><br><span class="line"><span class="number">28</span></span><br><span class="line"><span class="number">300612</span></span><br><span class="line">Deficit</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 贪心 </tag>
            
            <tag> DFS </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-2109 Power of Cryptography</title>
      <link href="//posts/ea1deaf6/"/>
      <url>//posts/ea1deaf6/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=2109" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5BC6;&#x7801;&#x5B66;&#x7684;&#x529B;&#x91CF; <a id="more"></a> ## Description Current work in cryptography involves (among other things) large prime numbers and computing powers of numbers among these primes. Work in this area has resulted in the practical use of results from number theory and other branches of mathematics once considered to be only of theoretical interest. This problem involves the efficient computation of integer roots of numbers. Given an integer n&gt;=1 and an integer p&gt;= 1 you have to write a program that determines the n th positive root of p. In this problem, given such integers n and p, p will always be of the form k to the nth. power, for an integer k (this integer is what your program must find). ## Input Specification The input consists of a sequence of integer pairs n and p with each integer on a line by itself. For all such pairs 1&lt;=n&lt;= 200, 1&lt;=p&lt;10<sup>101</sup> and there exists an integer k, 1&lt;=k&lt;=10<sup>9</sup> such that k<sup>n</sup> = p. ## Output Specification For each integer pair n and p the value k should be printed, i.e., the number k such that k n =p. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;N&#x548C;P&#xFF0C;&#x6C42;&#x4E00;&#x4E2A;&#x6570;K&#xFF0C;&#x4F7F;&#x5F97;K<sup>N</sup>=P&#x3002; ## &#x8F93;&#x5165; &#x4E00;&#x884C;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x662F;N&#xFF08;1&lt;=n&lt;= 200&#xFF09;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x6570;&#x662F;P(1&lt;=p&lt;10<sup>101</sup>),&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x6574;&#x6570;K&#xFF0C;1&lt;=k&lt;=10<sup>9</sup>&#xFF0C;&#x6EE1;&#x8DB3; k<sup>n</sup> = p&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;K&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x9898;&#x5C31;&#x662F;&#x7528;pow&#x51FD;&#x6570;&#x6765;&#x6C42;&#x7684;&#x3002;</p><p>&#x5728;double&#x7CBE;&#x5EA6;&#x5185;&#xFF0C;&#x4E00;&#x4E2A;&#x5927;&#x6570;&#xFF0C;&#x5F00;N&#x6B21;&#x65B9;&#x548C;&#x5F00;N+1&#x6B21;&#x65B9;&#xFF0C;&#x662F;&#x80FD;&#x611F;&#x77E5;&#x5230;&#x7684;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">double</span> n, p;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;n,&amp;p)!=EOF)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.0lf\n&quot;</span>, <span class="built_in">pow</span>(p, <span class="number">1.0</span> / n));</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> <span class="number">16</span></span><br><span class="line"><span class="number">3</span> <span class="number">27</span></span><br><span class="line"><span class="number">7</span> <span class="number">4357186184021382204544</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line">Source</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 数学问题 </tag>
            
            <tag> POJ </tag>
            
            <tag> 幂运算 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-1328 Radar Installation</title>
      <link href="//posts/be1dc362/"/>
      <url>//posts/be1dc362/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=1328" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5B89;&#x88C5;&#x96F7;&#x8FBE; <a id="more"></a></p><h2 id="description">Description</h2><p>Assume the coasting is an infinite straight line. Land is in one side of coasting, sea in the other. Each small island is a point locating in the sea side. And any radar installation, locating on the coasting, can only cover d distance, so an island in the sea can be covered by a radius installation, if the distance between them is at most d.</p><p>We use Cartesian coordinate system, defining the coasting is the x-axis. The sea side is above x-axis, and the land side below. Given the position of each island in the sea, and given the distance of the coverage of the radar installation, your task is to write a program to find the minimal number of radar installations to cover all the islands. Note that the position of an island is represented by its x-y coordinates. <img src="/posts/be1dc362/1328_1.jpg" alt="1328"></p><h2 id="input-specification">Input Specification</h2><p>The input consists of several test cases. The first line of each case contains two integers n (1&lt;=n&lt;=1000) and d, where n is the number of islands in the sea and d is the distance of coverage of the radar installation. This is followed by n lines each containing two integers representing the coordinate of the position of each island. Then a blank line follows to separate the cases.</p><p>The input is terminated by a line containing pair of zeros</p><h2 id="output-specification">Output Specification</h2><p>For each test case output one line consisting of the test case number followed by the minimal number of radar installations needed. &quot;-1&quot; installation means no solution for that case.</p><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x5E73;&#x9762;&#x76F4;&#x89D2;&#x5750;&#x6807;&#x7CFB;&#x4E0A;&#x6709;n&#x4E2A;&#x70B9;&#xFF0C;&#x6C42;&#x5728;x&#x8F74;&#x4E0A;&#x627E;&#x5C3D;&#x91CF;&#x5C11;&#x7684;&#x70B9;&#xFF0C;&#x4EE5;&#x8FD9;&#x4E9B;&#x70B9;&#x4E3A;&#x5706;&#x5FC3;&#x753B;&#x4E00;&#x4E2A;&#x534A;&#x5F84;&#x4E3A;d&#x7684;&#x5706;&#xFF0C;&#x4F7F;&#x5F97;&#x7ED9;&#x5B9A;&#x7684;&#x70B9;&#x90FD;&#x5728;&#x753B;&#x51FA;&#x6765;&#x7684;&#x5706;&#x91CC;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x80FD;&#x8F93;&#x51FA;-1&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x591A;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6574;&#x6570;n&#xFF08;1 &lt;= n &lt;= 1000&#xFF09;&#x548C;d&#xFF0C;&#x5176;&#x4E2D;n&#x662F;&#x6D77;&#x4E2D;&#x5C9B;&#x5C7F;&#x7684;&#x6570;&#x91CF;&#xFF0C;d&#x662F;&#x96F7;&#x8FBE;&#x88C5;&#x7F6E;&#x7684;&#x8986;&#x76D6;&#x8DDD;&#x79BB;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x662F;n&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x6BCF;&#x4E2A;&#x5C9B;&#x7684;&#x4F4D;&#x7F6E;&#x5750;&#x6807;&#x3002;&#x7136;&#x540E;&#x662F;&#x4E00;&#x4E2A;&#x7A7A;&#x767D;&#x884C;&#x6765;&#x5206;&#x9694;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;</p><p>&#x8F93;&#x5165;&#x7531;&#x5305;&#x542B;&#x4E24;&#x4E2A;0&#x7684;&#x884C;&#x8868;&#x793A;&#x7EC8;&#x6B62;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x542B;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7F16;&#x53F7;&#xFF0C;&#x7136;&#x540E;&#x662F;&#x6240;&#x9700;&#x7684;&#x5B89;&#x88C5;&#x6570;&#x91CF;&#x6700;&#x5C11;&#x7684;&#x96F7;&#x8FBE;&#x7684;&#x4E2A;&#x6570;&#x3002;&#x201C;-1&#x201D;&#x8868;&#x793A;&#x6CA1;&#x6709;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><ol type="1"><li>&#x8003;&#x8651;&#x5728;&#x4EC0;&#x4E48;&#x60C5;&#x51B5;&#x4E0B;&#x6CA1;&#x6709;&#x89E3;&#xFF1A;&#x5F53;&#x4E14;&#x4EC5;&#x5F53;&#x4EE5;&#xFF08;a,b&#xFF09;&#x4E3A;&#x5706;&#x5FC3;&#xFF0C;D&#x4E3A;&#x534A;&#x5F84;&#x753B;&#x4E00;&#x4E2A;&#x5706;&#xFF0C;&#x8FD9;&#x4E2A;&#x5706;&#x4E0E;x&#x8F74;&#x6CA1;&#x6709;&#x4EA4;&#x70B9;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x6D77;&#x5C9B;&#x662F;&#x65E0;&#x6CD5;&#x88AB;&#x96F7;&#x8FBE;&#x8986;&#x76D6;&#x7684;&#x3002;&#x5982;&#x56FE;&#xFF1A;<img src="/posts/be1dc362/1328-2.png" alt="1328"></li><li>&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x5706;&#x5FC3;&#x548C;&#x534A;&#x5F84;&#xFF0C;&#x53EF;&#x4EE5;&#x6C42;&#x51FA;&#x5706;&#x7684;&#x65B9;&#x7A0B;&#xFF1A;(x-a)<sup>2</sup>+(y-b)<sup>2</sup>=d<sup>2</sup>&#xFF0C;&#x4E0E;y=0&#x8054;&#x7ACB;&#x3002;&#x53EF;&#x5F97;&#xFF1A;x<sup>2</sup>-2ax+a<sup>2</sup>+b<sup>2</sup>-d<sup>2</sup>=0&#x3002;</li><li>&#x5224;&#x522B;&#x5F0F;&#x25B3;=4a<sup>2</sup>-4(a<sup>2</sup>+b<sup>2</sup>-d<sup>2</sup>)=d<sup>2</sup>-b<sup>2</sup>&#x3002;</li><li>&#x5982;&#x679C;&#x65E0;&#x89E3;&#xFF0C;&#x5219;&#x25B3;&lt;0&#xFF0C;&#x5373;d<sup>2</sup>&lt;b<sup>2</sup>&#x3002;</li><li>&#x5982;&#x679C;&#x6709;&#x89E3;&#xFF0C;&#x6839;&#x636E;&#x6C42;&#x6839;&#x516C;&#x5F0F;&#xFF1A;x<sub>1</sub>=a-(d<sup>2</sup>-b<sup>2</sup>)&#xFF0C;x<sub>2</sub>=a+(d<sup>2</sup>-b<sup>2</sup>)&#x3002;</li></ol><p>&#x90A3;&#x4E48;&#x56DE;&#x5230;&#x56FE;&#x4E2D;&#xFF0C;&#x4E24;&#x4E2A;&#x70B9;&#x5728;&#x5750;&#x6807;&#x8F74;&#x7684;&#x4F4D;&#x7F6E;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; <img src="/posts/be1dc362/1328-3.png" alt="1328"></p><p>&#x7EE7;&#x7EED;&#x60F3;&#xFF1A; 1. &#x5982;&#x679C;&#x8981;&#x5728;x&#x8F74;&#x4E0A;&#x9009;&#x70B9;&#x753B;&#x5706;&#x8986;&#x76D6;(a,b),&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x70B9;&#x7684;&#x6A2A;&#x5750;&#x6807;&#x5C31;&#x4E00;&#x5B9A;&#x5728;[a-d&#xB2;+b&#xB2;,a+d&#xB2;-b&#xB2;]&#x533A;&#x95F4;&#x5185;&#x3002; 2. &#x56E0;&#x6B64;&#x8FD9;&#x9053;&#x9898;&#x53D8;&#x6210;&#x4E86;&#x5728;&#x6570;&#x8F74;&#x4E0A;&#x9009;&#x6700;&#x5C11;&#x7684;&#x70B9;&#xFF0C;&#x8986;&#x76D6;&#x7ED9;&#x5B9A;&#x7EBF;&#x6BB5;&#x3002;&#x8FD9;&#x5C31;&#x7C7B;&#x4F3C;&#x4E8E;&#x6574;&#x6570;&#x533A;&#x95F4;&#x4E86;&#x3002; 3. &#x5047;&#x8BBE;&#x6570;&#x8F74;&#x4E0A;&#x6709;&#x5F88;&#x591A;&#x6BB5;&#x533A;&#x95F4;&#xFF0C;&#x6211;&#x4EEC;&#x628A;&#x5B83;&#x4EEC;&#x4ECE;&#x6570;&#x8F74;&#x4E0A;&#x5206;&#x79BB;&#x51FA;&#x6765;&#x3002; <img src="/posts/be1dc362/1328-4.png" alt="1328"> 4. &#x53D6;&#x70B9;&#x7684;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x753B;&#x4E00;&#x6761;&#x94C5;&#x5782;&#x7EBF;&#x6765;&#x5272;&#x8FD9;&#x4E9B;&#x7EBF;&#x6BB5;&#x3002;<img src="/posts/be1dc362/1328-5.png" alt="1328"> 5. &#x628A;&#x6240;&#x6709;&#x7EBF;&#x6BB5;&#x6309;&#x7167;&#x53F3;&#x7AEF;&#x70B9;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F;&#x3002; 6. &#x5982;&#x4E0A;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x5C31;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x800C;&#x8A00;&#xFF0C;&#x9009;&#x62E9;&#x7B2C;&#x4E00;&#x6761;&#x7EBF;&#x6BB5;&#x7684;&#x53F3;&#x7AEF;&#x70B9;&#xFF0C;&#x8BB0;&#x4F4D;&#x7F6E;&#x4E3A;P&#xFF0C;&#x5982;&#x679C;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x51E0;&#x6761;&#x7EBF;&#x6BB5;&#x7684;&#x5DE6;&#x7AEF;&#x70B9;&#x90FD;&#x5728;P&#x7684;&#x5DE6;&#x8FB9;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x6309;&#x7167;&#x53F3;&#x7AEF;&#x70B9;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5176;&#x53F3;&#x7AEF;&#x70B9;&#x7684;&#x4F4D;&#x7F6E;&#x4E00;&#x5B9A;&#x5927;&#x4E8E;P&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;P&#x5728;&#x8FD9;&#x6761;&#x7EBF;&#x6BB5;&#x5185;&#x3002;&#x5373;&#x9009;&#x5728;P&#x70B9;&#xFF0C;&#x53EF;&#x4EE5;&#x5C3D;&#x80AF;&#x80FD;&#x591A;&#x7684;&#x8986;&#x76D6;&#x5230;&#x6D77;&#x5C9B;&#x3002; 7. &#x5F53;&#x9047;&#x5230;&#x67D0;&#x4E2A;&#x70B9;&#x7684;&#x5DE6;&#x7AEF;&#x70B9;&#x4F4D;&#x7F6E;&#x5927;&#x4E8E;P&#x65F6;&#x3002;P&#x5C31;&#x65E0;&#x6CD5;&#x8986;&#x76D6;&#x5230;&#x8FD9;&#x4E2A;&#x6D77;&#x5C9B;&#x4E86;&#xFF0C;&#x9009;&#x62E9;&#x8FD9;&#x4E2A;&#x7EBF;&#x6BB5;&#x7684;&#x53F3;&#x7AEF;&#x70B9;&#xFF0C;&#x8BB0;&#x4E3A;P&#xFF0C;&#x91CD;&#x590D;6~7&#x6D41;&#x7A0B;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, D;<span class="comment">//N&#x662F;&#x6D77;&#x5C9B;&#x7684;&#x6570;&#x91CF;&#xFF0C;D&#x662F;&#x8DDD;&#x79BB;.</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">}node;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">double</span> left;</span><br><span class="line">    <span class="keyword">double</span> right;</span><br><span class="line">}Radar;</span><br><span class="line">node temp;</span><br><span class="line">Radar r;</span><br><span class="line"><span class="built_in">vector</span>&lt;Radar&gt;p;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Radar a, Radar b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.right &lt; b.right;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    {</span><br><span class="line">        p.clear();</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; D;</span><br><span class="line">        <span class="keyword">if</span> (!N &amp;&amp; !D)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case %d: &quot;</span>, ++cnt);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; temp.x &gt;&gt; temp.y;</span><br><span class="line">            <span class="keyword">double</span> delta = <span class="number">1.0</span>*D*D - <span class="number">1.0</span>*temp.y*temp.y;</span><br><span class="line">            <span class="keyword">if</span> (D &gt;= temp.y&amp;&amp;flag)</span><br><span class="line">            {</span><br><span class="line">                r.left = <span class="number">1.0</span>*temp.x - <span class="built_in">sqrt</span>(delta);</span><br><span class="line">                r.right = <span class="number">1.0</span>*temp.x + <span class="built_in">sqrt</span>(delta);</span><br><span class="line">                p.push_back(r);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">        sort(p.begin(), p.end(), cmp);</span><br><span class="line">        <span class="keyword">double</span> now = p[<span class="number">0</span>].right;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; p.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (p[i].left &gt; now)<span class="comment">//&#x4E0B;&#x4E00;&#x4E2A;&#x70B9;&#x7684;&#x6700;&#x5DE6;&#x8FB9;&#x5DF2;&#x7ECF;&#x5927;&#x4E8E;&#x73B0;&#x5728;&#x7684;&#x70B9;&#x7684;&#x4F4D;&#x7F6E;&#x4E86;&#xFF0C;&#x65E0;&#x6CD5;&#x8986;&#x76D6;&#xFF0C;&#x53EA;&#x80FD;&#x518D;&#x5B89;&#x7F6E;&#x4E00;&#x4E2A;&#x96F7;&#x8FBE;</span></span><br><span class="line">            {</span><br><span class="line">                res++;</span><br><span class="line">                now = p[i].right;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">-3</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line">Case <span class="number">1</span>: <span class="number">2</span></span><br><span class="line">Case <span class="number">2</span>: <span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h2 id="&#x5F15;&#x7528;">&#x5F15;&#x7528;</h2><p>https://blog.csdn.net/c20182030/article/details/75107606</p>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 数学问题 </tag>
            
            <tag> POJ </tag>
            
            <tag> 区间覆盖 </tag>
            
            <tag> 圆 </tag>
            
            <tag> 二次方程 </tag>
            
            <tag> 解析几何 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-2965 The Pilots Brothers&#39; refrigerator</title>
      <link href="//posts/9424e4c0/"/>
      <url>//posts/9424e4c0/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=2965" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x98DE;&#x884C;&#x5458;&#x5144;&#x5F1F;&#x7684;&#x51B0;&#x7BB1; <a id="more"></a></p><h2 id="description">Description</h2><p>The game &#x201C;The Pilots Brothers: following the stripy elephant&#x201D; has a quest where a player needs to open a refrigerator.</p><p>There are 16 handles on the refrigerator door. Every handle can be in one of two states: open or closed. The refrigerator is open only when all handles are open. The handles are represented as a matrix 4&#x445;4. You can change the state of a handle in any location [i, j] (1 &#x2264; i, j &#x2264; 4). However, this also changes states of all handles in row i and all handles in column j.</p><p>The task is to determine the minimum number of handle switching necessary to open the refrigerator.</p><h2 id="input-specification">Input Specification</h2><p>The input contains four lines. Each of the four lines contains four characters describing the initial state of appropriate handles. A symbol &#x201C;+&#x201D; means that the handle is in closed state, whereas the symbol &#x201C;&#x2212;&#x201D; means &#x201C;open&#x201D;. At least one of the handles is initially closed.</p><h2 id="output-specification">Output Specification</h2><p>The first line of the input contains N &#x2013; the minimum number of switching. The rest N lines describe switching sequence. Each of the lines contains a row number and a column number of the matrix separated by one or more spaces. If there are several solutions, you may give any one of them.</p><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x51B0;&#x7BB1;&#x95E8;&#x4E0A;&#x6709;16&#x4E2A;&#x628A;&#x624B;&#x3002;&#x6BCF;&#x4E2A;&#x628A;&#x624B;&#x53EF;&#x4EE5;&#x662F;&#x5173;&#x95ED;&#x6216;&#x8005;&#x662F;&#x6253;&#x5F00;&#x7684;&#x3002;&#x5F53;&#x6240;&#x6709;&#x7684;&#x628A;&#x624B;&#x90FD;&#x6253;&#x5F00;&#x65F6;&#xFF0C;&#x51B0;&#x7BB1;&#x624D;&#x4F1A;&#x6253;&#x5F00;&#x3002;&#x628A;&#x624B;&#x7684;&#x77E9;&#x9635;&#x662F;4*4&#xFF0C;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x628A;&#x624B;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x548C;&#x5B83;&#x540C;&#x884C;&#x540C;&#x5217;&#x7684;&#x628A;&#x624B;&#x7684;&#x72B6;&#x6001;&#x4E5F;&#x4F1A;&#x968F;&#x4E4B;&#x6539;&#x53D8;&#x3002;&#x6C42;&#x6253;&#x5F00;&#x51B0;&#x7BB1;&#x6240;&#x9700;&#x8981;&#x7684;&#x6700;&#x5C11;&#x7684;&#x6B21;&#x6570;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x8F93;&#x5165;&#x5305;&#x62EC;4&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x6709;4&#x4E2A;&#x5B57;&#x7B26;&#x8868;&#x793A;&#x628A;&#x624B;&#x7684;&#x72B6;&#x6001;&#xFF0C;&quot;+&quot;&#x8868;&#x793A;&#x628A;&#x624B;&#x5904;&#x4E8E;&#x95ED;&#x5408;&#x72B6;&#x6001;&#xFF0C;&quot;-&quot;&#x8868;&#x793A;&#x628A;&#x624B;&#x5904;&#x4E8E;&#x6253;&#x5F00;&#x72B6;&#x6001;&#x3002;&#x4FDD;&#x8BC1;&#x6700;&#x521D;&#x72B6;&#x6001;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x628A;&#x624B;&#x662F;&#x5173;&#x95ED;&#x7684;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6574;&#x6570;N&#xFF0C;&#x8868;&#x793A;&#x6700;&#x5C0F;&#x5207;&#x6362;&#x6B21;&#x6570;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x7684;N&#x884C;&#x91CC;&#x63CF;&#x8FF0;&#x5207;&#x6362;&#x987A;&#x5E8F;&#xFF0C;&#x6BCF;&#x884C;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#x7684;&#x884C;&#x53F7;&#x548C;&#x5217;&#x53F7;&#xFF0C;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002;&#x5982;&#x679C;&#x6709;&#x591A;&#x79CD;&#x89E3;&#x90FD;&#x7B26;&#x5408;&#x8981;&#x6C42;&#xFF0C;&#x4EFB;&#x610F;&#x8F93;&#x51FA;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x679A;&#x4E3E;+DFS+&#x4FDD;&#x5B58;&#x8DEF;&#x5F84;&#x3002;</p><h2 id="tips">Tips</h2><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;POJ-1753&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">bool</span> handle[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> minn = <span class="number">16</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res, temp;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">char</span> h;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; h;</span><br><span class="line">            <span class="keyword">if</span> (h == <span class="string">&apos;+&apos;</span>)</span><br><span class="line">                handle[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                handle[i][j] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">finish</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        {</span><br><span class="line">            res += handle[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res == <span class="number">16</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> x = cnt / <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> y = cnt % <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        handle[x][i] = !handle[x][i];</span><br><span class="line">        handle[i][y] = !handle[i][y];</span><br><span class="line">    }</span><br><span class="line">    handle[x][y] = !handle[x][y];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (finish())</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (res.size() &lt; temp.size())</span><br><span class="line">            res = temp;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    DFS(i + <span class="number">1</span>);</span><br><span class="line">    change(i);</span><br><span class="line">    temp.push_back(i);</span><br><span class="line">    DFS(i + <span class="number">1</span>);</span><br><span class="line">    change(i);</span><br><span class="line">    temp.pop_back();</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    build();</span><br><span class="line">    DFS(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res[i] / <span class="number">4</span> + <span class="number">1</span> &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; res[i] % <span class="number">4</span> + <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line">-+--</span><br><span class="line">----</span><br><span class="line">----</span><br><span class="line">-+--</span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> DFS </tag>
            
            <tag> POJ </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-1753 Flip Game</title>
      <link href="//posts/a4273118/"/>
      <url>//posts/a4273118/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=1753" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a><br>&#x53CD;&#x8F6C;&#x6E38;&#x620F; <a id="more"></a></p><h2 id="description">Description</h2><p>Flip game is played on a rectangular 4x4 field with two-sided pieces placed on each of its 16 squares. One side of each piece is white and the other one is black and each piece is lying either it&apos;s black or white side up. Each round you flip 3 to 5 pieces, thus changing the color of their upper side from black to white and vice versa. The pieces to be flipped are chosen every round according to the following rules: 1. Choose any one of the 16 pieces. 2. Flip the chosen piece and also all adjacent pieces to the left, to the right, to the top, and to the bottom of the chosen piece (if there are any).</p><p>Consider the following position as an example: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bwbw</span><br><span class="line">wwww</span><br><span class="line">bbwb</span><br><span class="line">bwwb</span><br></pre></td></tr></table></figure></p><p>Here &quot;b&quot; denotes pieces lying their black side up and &quot;w&quot; denotes pieces lying their white side up. If we choose to flip the 1st piece from the 3rd row (this choice is shown at the picture), then the field will become: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bwbw</span><br><span class="line">bwww</span><br><span class="line">wwwb</span><br><span class="line">wwwb</span><br></pre></td></tr></table></figure></p><figure><img src="/posts/a4273118/1753_1.jpg" alt="1753"><figcaption>1753</figcaption></figure><p>The goal of the game is to flip either all pieces white side up or all pieces black side up. You are to write a program that will search for the minimum number of rounds needed to achieve this goal.</p><h2 id="input-specification">Input Specification</h2><p>The input consists of 4 lines with 4 characters &quot;w&quot; or &quot;b&quot; each that denote game field position.</p><h2 id="output-specification">Output Specification</h2><p>Write to the output file a single integer number - the minimum number of rounds needed to achieve the goal of the game from the given position. If the goal is initially achieved, then write 0. If it&apos;s impossible to achieve the goal, then write the word &quot;Impossible&quot; (without quotes).</p><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x53CD;&#x8F6C;&#x6E38;&#x620F;&#xFF0C;&#x68CB;&#x76D8;&#x5927;&#x5C0F;&#x4E3A;4*4&#xFF0C;&#x5171;16&#x4E2A;&#x68CB;&#x5B50;&#x3002;&#x6BCF;&#x4E2A;&#x68CB;&#x5B50;&#x6709;&#x9ED1;&#x767D;&#x4E24;&#x9762;&#x3002;&#x53CD;&#x8F6C;&#x4E00;&#x4E2A;&#x68CB;&#x5B50;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8981;&#x628A;&#x8FD9;&#x4E2A;&#x68CB;&#x5B50;&#x548C;&#x5176;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x76F8;&#x8FDE;&#x7684;&#x68CB;&#x5B50;&#x4E5F;&#x4E00;&#x5E76;&#x7FFB;&#x8F6C;&#x3002;&#x6C42;&#x628A;&#x8FD9;16&#x4E2A;&#x68CB;&#x5B50;&#x7FFB;&#x8F6C;&#x5230;&#x7EDF;&#x4E00;&#x989C;&#x8272;&#x6240;&#x9700;&#x7684;&#x6700;&#x5C0F;&#x6B21;&#x6570;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>4&#x884C;&#x8F93;&#x5165;&#xFF0C;&#x6BCF;&#x884C;4&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x201C;w&#x201D;&#x8868;&#x793A;&#x767D;&#x8272;&#xFF0C;&#x201C;b&#x201D;&#x8868;&#x793A;&#x9ED1;&#x8272;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x8F93;&#x51FA;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;16&#x4E2A;&#x68CB;&#x5B50;&#x5168;&#x90E8;&#x7FFB;&#x8F6C;&#x5230;&#x540C;&#x4E00;&#x989C;&#x8272;&#x6240;&#x9700;&#x8981;&#x7684;&#x6700;&#x5C11;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x65E0;&#x6CD5;&#x7FFB;&#x8F6C;&#x6210;&#x540C;&#x4E00;&#x989C;&#x8272;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&quot;Impossible&quot;&#xFF08;&#x6CA1;&#x6709;&#x5F15;&#x53F7;&#xFF09;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x679A;&#x4E3E;&#x51FA;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x72B6;&#x6001;&#x3002;&#x4F7F;&#x7528;DFS&#x6DF1;&#x641C;&#x3002;&#x8BB0;&#x5F97;&#x7FFB;&#x8FC7;&#x53BB;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x7FFB;&#x8FC7;&#x6765;&#x3002;</p><h2 id="tips">Tips</h2><p>&#x7531;&#x9898;&#x610F;&#xFF0C;&#x6BCF;&#x4E2A;&#x68CB;&#x5B50;&#x7FFB;&#x8F6C;&#x8FC7;&#x53BB;&#x518D;&#x7FFB;&#x8F6C;&#x8FC7;&#x6765;&#xFF0C;&#x7ED3;&#x679C;&#x4E0D;&#x53D8;&#x3002;&#x56E0;&#x6B64;&#x6700;&#x591A;&#x7FFB;&#x8F6C;&#x7684;&#x6B21;&#x6570;&#x4E3A;15&#x6B21;&#x3002;&#xFF08;&#x7FFB;&#x8F6C;16&#x6B21;&#x548C;&#x4E0D;&#x7FFB;&#x8F6C;&#x68CB;&#x9762;&#x4E00;&#x6837;&#xFF09;</p><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;POJ-2965&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> chess[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> maxn = <span class="number">16</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&apos;w&apos;</span>)</span><br><span class="line">                chess[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                chess[i][j] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">turn</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">4</span> &amp;&amp; x &gt;= <span class="number">0</span> &amp;&amp; y &lt; <span class="number">4</span> &amp;&amp; y &gt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> chess[x][y] = !chess[x][y];<span class="comment">//&#x53D6;&#x975E;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flip</span><span class="params">(<span class="keyword">int</span> cnt)</span><span class="comment">//cnt&#x8868;&#x793A;&#x53CD;&#x8F6C;&#x7684;&#x6B21;&#x6570;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> x = cnt / <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> y = cnt % <span class="number">4</span>;</span><br><span class="line">    turn(x - <span class="number">1</span>, y);</span><br><span class="line">    turn(x + <span class="number">1</span>, y);</span><br><span class="line">    turn(x, y + <span class="number">1</span>);</span><br><span class="line">    turn(x, y - <span class="number">1</span>);</span><br><span class="line">    turn(x, y);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">finish</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        {</span><br><span class="line">            res += chess[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> !(res % <span class="number">16</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> cnt)</span><span class="comment">//i&#x8868;&#x793A;&#x8FED;&#x4EE3;&#x7684;&#x6B21;&#x6570;&#xFF0C;cnt&#x8868;&#x793A;&#x53CD;&#x8F6C;&#x7684;&#x4E2A;&#x6570;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (finish())</span><br><span class="line">    {</span><br><span class="line">        maxn = min(maxn, cnt);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    DFS(i + <span class="number">1</span>,cnt);<span class="comment">//&#x5148;&#x5230;&#x6700;&#x540E;&#x4E00;&#x4E2A;</span></span><br><span class="line">    flip(i);</span><br><span class="line">    DFS(i + <span class="number">1</span>, cnt + <span class="number">1</span>);<span class="comment">//&#x5047;&#x8BBE;&#x4ED6;&#x7FFB;&#x8FC7;&#x53BB;&#x7684;&#xFF0C;&#x904D;&#x5386;&#x7ED3;&#x679C;</span></span><br><span class="line">    flip(i);<span class="comment">//&#x518D;&#x7FFB;&#x8FC7;&#x6765;</span></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    build();</span><br><span class="line">    DFS(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (maxn != <span class="number">16</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; maxn &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Impossible&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line">bwwb</span><br><span class="line">bbwb</span><br><span class="line">bwwb</span><br><span class="line">bwww</span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> DFS </tag>
            
            <tag> POJ </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1114 Family Property（25）</title>
      <link href="//posts/9bf38d02/"/>
      <url>//posts/9bf38d02/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805356599820288" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5BB6;&#x5EAD;&#x8D22;&#x4EA7; <a id="more"></a> ## Description This time, you are supposed to help us collect the data for family-owned property. Given each person&apos;s family members, and the estate&#xFF08;&#x623F;&#x4EA7;&#xFF09;info under his/her own name, we need to know the size of each family, and the average area and number of sets of their real estate. ## Input Specification Each input file contains one test case. For each case, the first line gives a positive integer N (&lt;=1000). Then N lines follow, each gives the infomation of a person who owns estate in the format:</p><p>ID Father Mother k Child1 &#x2026; Childk M_estate Area</p><p>where ID is a unique 4-digit identification number for each person; Father and Mother are the ID&#x2019;s of this person&#x2019;s parents (if a parent has passed away, -1 will be given instead); k (0&lt;=k&lt;=5) is the number of children of this person; Childi&#x2019;s are the ID&#x2019;s of his/her children; M_estate is the total number of sets of the real estate under his/her name; and Area is the total area of his/her estate. ## Output Specification For each case, first print in a line the number of families (all the people that are related directly or indirectly are considered in the same family). Then output the family info in the format:</p><p>ID M AVG_sets AVG_area</p><p>where ID is the smallest ID in the family; M is the total number of family members; AVG_sets is the average number of sets of their real estate; and AVG_area is the average area. The average numbers must be accurate up to 3 decimal places. The families must be given in descending order of their average areas, and in ascending order of the ID&#x2019;s if there is a tie. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; ## &#x8F93;&#x5165; ## &#x8F93;&#x51FA; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; ## Tips ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">## &#x6D4B;&#x8BD5;&#x6570;&#x636E;</span><br><span class="line">``` cpp</span><br><span class="line">Sample Input:</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">6666</span> <span class="number">5551</span> <span class="number">5552</span> <span class="number">1</span> <span class="number">7777</span> <span class="number">1</span> <span class="number">100</span></span><br><span class="line"><span class="number">1234</span> <span class="number">5678</span> <span class="number">9012</span> <span class="number">1</span> <span class="number">0002</span> <span class="number">2</span> <span class="number">300</span></span><br><span class="line"><span class="number">8888</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1000</span></span><br><span class="line"><span class="number">2468</span> <span class="number">0001</span> <span class="number">0004</span> <span class="number">1</span> <span class="number">2222</span> <span class="number">1</span> <span class="number">500</span></span><br><span class="line"><span class="number">7777</span> <span class="number">6666</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">300</span></span><br><span class="line"><span class="number">3721</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">2333</span> <span class="number">2</span> <span class="number">150</span></span><br><span class="line"><span class="number">9012</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">3</span> <span class="number">1236</span> <span class="number">1235</span> <span class="number">1234</span> <span class="number">1</span> <span class="number">100</span></span><br><span class="line"><span class="number">1235</span> <span class="number">5678</span> <span class="number">9012</span> <span class="number">0</span> <span class="number">1</span> <span class="number">50</span></span><br><span class="line"><span class="number">2222</span> <span class="number">1236</span> <span class="number">2468</span> <span class="number">2</span> <span class="number">6661</span> <span class="number">6662</span> <span class="number">1</span> <span class="number">300</span></span><br><span class="line"><span class="number">2333</span> <span class="number">-1</span> <span class="number">3721</span> <span class="number">3</span> <span class="number">6661</span> <span class="number">6662</span> <span class="number">6663</span> <span class="number">1</span> <span class="number">100</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">8888</span> <span class="number">1</span> <span class="number">1.000</span> <span class="number">1000.000</span></span><br><span class="line"><span class="number">0001</span> <span class="number">15</span> <span class="number">0.600</span> <span class="number">100.000</span></span><br><span class="line"><span class="number">5551</span> <span class="number">4</span> <span class="number">0.750</span> <span class="number">100.000</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1113 Integer Set Partition（25）</title>
      <link href="//posts/59718a1/"/>
      <url>//posts/59718a1/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805357258326016" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5212;&#x5206;&#x6574;&#x6570;&#x96C6; <a id="more"></a> ## Description Given a set of N (&gt;1) positive integers, you are supposed to partition them into two disjoint sets A<sub>1</sub> and A<sub>2</sub> of n<sub>1</sub> and n<sub>2</sub> numbers, respectively. Let S<sub>1</sub>and S<sub>2</sub> denote the sums of all the numbers in A<sub>1</sub> and A<sub>2</sub>, respectively. You are supposed to make the partition so that &#x2223;n<sub>1</sub>&#x2212;n<sub>2</sub>&#x2223; is minimized first, and then &#x2223;S<sub>1</sub>&#x2212;S<sub>2</sub>&#x2223; is maximized. ## Input Specification Each input file contains one test case. For each case, the first line gives an integer N (2&#x2264;N&#x2264;10<sup> &#x200B;5</sup>), and then N positive integers follow in the next line, separated by spaces. It is guaranteed that all the integers and their sum are less than 2<sup>31</sup>. ## Output Specification For each case, print in a line two numbers: &#x2223;n<sub>1</sub>&#x2212;n<sub>2</sub>&#x2223; and &#x2223;S<sub>1</sub>&#x2212;S<sub>2</sub>&#x2223;, separated by exactly one space. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x8981;&#x6C42;&#x628A;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x5206;&#x6210;&#x4E24;&#x4E2A;&#x4E0D;&#x76F8;&#x4EA4;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x4F7F;&#x5F97;&#x8FD9;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x7684;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x76F8;&#x5DEE;&#x6700;&#x5C0F;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x7684;&#x603B;&#x548C;&#x4E4B;&#x5DEE;&#x6700;&#x5927;&#x3002; ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N(2&#x2264;N&#x2264;10<sup>&#xFF0C;&#x7136;&#x540E;&#x5728;&#x4E0B;&#x4E00;&#x884C;&#x7ED9;&#x51FA;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x6570;&#x4E2D;&#x95F4;&#x7531;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x7684;&#x6574;&#x6570;&#x53CA;&#x5176;&#x603B;&#x548C;&#x5C0F;&#x4E8E;2<sup>31</sup>&#x3002; ## &#x8F93;&#x51FA; &#x5728;&#x4E00;&#x884C;&#x4E2D;&#x6253;&#x5370;&#x4E24;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x2223;n<sub>1</sub>&#x2212;n<sub>2</sub>&#x2223; &#x548C; &#x2223;S<sub>1</sub>&#x2212;S<sub>2</sub>&#x2223; &#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. &#x5C06;&#x6240;&#x6709;&#x6570;&#x6392;&#x5E8F;&#x3002; 2. &#x8BA1;&#x7B97;&#x524D;n/2&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x603B;&#x548C;&#xFF0C;&#x2223;S<sub>1</sub>&#x2212;S<sub>2</sub>&#x2223;&#x7684;&#x503C;&#x7B49;&#x4E8E;sum-2*&#x524D;n/2&#x5143;&#x7D20;&#x7684;&#x548C;&#x3002; 3. &#x2223;n<sub>1</sub>&#x2212;n<sub>2</sub>&#x2223;&#x4E3A;n%2&#xFF0C;&#x5947;&#x6570;&#x4E3A;1&#xFF0C;&#x5076;&#x6570;&#x4E3A;0&#x3002;</sup></p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N, sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N; v.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; v[i];</span><br><span class="line">    sort(v.begin(), v.end());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N/<span class="number">2</span>; i++)</span><br><span class="line">        sum1 += v[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = N/<span class="number">2</span>; i &lt; N; i++)</span><br><span class="line">        sum2 += v[i];</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; N % <span class="number">2</span> &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt;  sum2 - sum1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">23</span> <span class="number">8</span> <span class="number">10</span> <span class="number">99</span> <span class="number">46</span> <span class="number">2333</span> <span class="number">46</span> <span class="number">1</span> <span class="number">666</span> <span class="number">555</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"><span class="number">0</span> <span class="number">3611</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">110</span> <span class="number">79</span> <span class="number">218</span> <span class="number">69</span> <span class="number">3721</span> <span class="number">100</span> <span class="number">29</span> <span class="number">135</span> <span class="number">2</span> <span class="number">6</span> <span class="number">13</span> <span class="number">5188</span> <span class="number">85</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"><span class="number">1</span> <span class="number">9359</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1112</title>
      <link href="//posts/72902837/"/>
      <url>//posts/72902837/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805357933608960" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x7834;&#x635F;&#x7684;&#x952E;&#x76D8; <a id="more"></a> ## Description On a broken keyboard, some of the keys are always stucked. So when you type some sentences, the characters corresponding to those keys will appear repeatedly on screen for k times.</p><p>Now given a resulting string on screen, you are supposed to list all the possible stucked keys, and the original string.</p><p>Notice that there might be some characters that are typed repeatedly. The stucked key will always repeat output for a fixed k times whenever it is pressed. For example, when k=3, from the string thiiis iiisss a teeeeeest we know that the keys i and e might be stucked, but s is not even though it appears repeatedly sometimes. The original string could be this isss a teest. ## Input Specification Each input file contains one test case. For each case, the 1st line gives a positive integer k (1&lt;k&#x2264;100) which is the output repeating times of a stucked key. The 2nd line contains the resulting string on screen, which consists of no more than 1000 characters from {a-z}, {0-9} and _. It is guaranteed that the string is non-empty. ## Output Specification For each test case, print in one line the possible stucked keys, in the order of being detected. Make sure that each key is printed once only. Then in the next line print the original string. It is guaranteed that there is at least one stucked key. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; ## &#x8F93;&#x5165; ## &#x8F93;&#x51FA; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">bool</span>&gt;res, temp;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; str;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= str.size()-N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; N; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i + j] == str[i])</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (!res.count(str[i]))</span><br><span class="line">                    res[str[i]] = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                res[str[i]] = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (res[str[i]] == <span class="literal">true</span>)</span><br><span class="line">            i += (N - <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; str.size(); i++)</span><br><span class="line">        res[str[i]] = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); i++)</span><br><span class="line">        <span class="keyword">if</span> (res[str[i]] == <span class="literal">true</span>&amp;&amp;!temp.count(str[i]))</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; str[i];</span><br><span class="line">            temp[str[i]] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (res[str[i]] == <span class="literal">false</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; str[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; str[i];</span><br><span class="line">            i += (N - <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">3</span></span><br><span class="line">caseee1__thiiis_iiisss_a_teeeeeest</span><br><span class="line">Sample Output:</span><br><span class="line">ei</span><br><span class="line">case1__this_isss_a_teest</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串处理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1099 Build A Binary Search Tree (30)</title>
      <link href="//posts/23974e8/"/>
      <url>//posts/23974e8/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805367987355648" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6784;&#x5EFA;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811; <a id="more"></a> ## Description A Binary Search Tree (BST) is recursively defined as a binary tree which has the following properties: - The left subtree of a node contains only nodes with keys less than the node&apos;s key. - The right subtree of a node contains only nodes with keys greater than or equal to the node&apos;s key. - Both the left and right subtrees must also be binary search trees.</p><p>Given the structure of a binary tree and a sequence of distinct integer keys, there is only one way to fill these keys into the tree so that the resulting tree satisfies the definition of a BST. You are supposed to output the level order traversal sequence of that tree. The sample is illustrated by Figure 1 and 2. ## Input Specification Each input file contains one test case. For each case, the first line gives a positive integer N (&lt;=100) which is the total number of nodes in the tree. The next N lines each contains the left and the right children of a node in the format &quot;left_index right_index&quot;, provided that the nodes are numbered from 0 to N-1, and 0 is always the root. If one child is missing, then -1 will represent the NULL child pointer. Finally N distinct integer keys are given in the last line. ## Output Specification For each test case, print in one line the level order traversal sequence of that tree. All the numbers must be separated by a space, with no extra space at the end of the line. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF08;BST&#xFF09;&#x662F;&#x4EE5;&#x9012;&#x5F52;&#x65B9;&#x5F0F;&#x5B9A;&#x4E49;&#x4E3A;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x5C5E;&#x6027;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#xFF1A; - &#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x4EC5;&#x5305;&#x542B;&#x952E;&#x503C;&#x5C0F;&#x4E8E;&#x8282;&#x70B9;&#x952E;&#x503C;&#x7684;&#x8282;&#x70B9;&#x3002; - &#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x4EC5;&#x5305;&#x542B;&#x952E;&#x503C;&#x5927;&#x4E8E;&#x8282;&#x70B9;&#x8282;&#x70B9;&#x952E;&#x503C;&#x7684;&#x8282;&#x70B9;&#x3002; - &#x5DE6;&#x53F3;&#x5B50;&#x6811;&#x4E5F;&#x5FC5;&#x987B;&#x662F;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x3002;</p><p>&#x7ED9;&#x5B9A;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x7ED3;&#x6784;&#x548C;&#x4E00;&#x7CFB;&#x5217;&#x4E0D;&#x540C;&#x7684;&#x6574;&#x6570;&#x952E;&#x503C;&#xFF0C;&#x4FDD;&#x8BC1;&#x53EA;&#x6709;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5C06;&#x8FD9;&#x4E9B;&#x952E;&#x586B;&#x5145;&#x5230;&#x4E66;&#x4E2D;&#xFF0C;&#x4F7F;&#x5F97;&#x751F;&#x6210;&#x7684;&#x6811;&#x86EE;&#x65CF;BST&#x7684;&#x5B9A;&#x4E49;&#x3002;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x8FD9;&#x68F5;&#x6811;&#x7684;&#x5C42;&#x6B21;&#x904D;&#x5386;&#x84C4;&#x529B;&#xFF0C;&#x793A;&#x4F8B;&#x56FE;&#x5982;&#x4E0B;&#x56FE;1&#x548C;2&#x6240;&#x793A;&#x3002;</p><p><img src="/posts/23974e8/1099.png" alt="1099-1"> ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=100&#xFF09;&#xFF0C;&#x8868;&#x793A;&#x6811;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x6570;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x7684;N&#x884C;&#x5305;&#x62EC;&#x8282;&#x70B9;&#x7684;&#x505A;&#x5B69;&#x5B50;&#x548C;&#x53F3;&#x5B69;&#x5B50;&#xFF0C;&#x683C;&#x5F0F;&#x4E3A;&#x201C;left_index right_index&#x201D;&#xFF0C;&#x8282;&#x70B9;&#x7684;&#x7F16;&#x53F7;&#x4ECE;0~N-1&#x3002;0&#x59CB;&#x7EC8;&#x662F;&#x6839;&#x8282;&#x70B9;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5B69;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x8FD9;&#x7528;-1&#x8868;&#x793A;NULL&#x3002;&#x6700;&#x540E;&#xFF0C;&#x5728;&#x6700;&#x540E;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E86;N&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6574;&#x6570;&#x952E;&#x503C;&#x3002; ## &#x8F93;&#x51FA; &#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x8FD9;&#x68F5;&#x6811;&#x7684;&#x5C42;&#x6B21;&#x904D;&#x5386;&#x5E8F;&#x5217;&#x3002;&#x6240;&#x6709;&#x7684;&#x6570;&#x5B57;&#x5FC5;&#x987B;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF0C;&#x672B;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7684;&#x7A7A;&#x683C;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. &#x6839;&#x636E;&#x6761;&#x4EF6;&#x5EFA;&#x6811;&#x3002; 2. &#x5C42;&#x6B21;&#x904D;&#x5386;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="keyword">int</span> lchild, rchild;</span><br><span class="line">}node;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; BT;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;num;</span><br><span class="line"><span class="keyword">int</span> N, l, r, cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (BT[root].lchild != <span class="number">-1</span>)</span><br><span class="line">        insert(BT[root].lchild);</span><br><span class="line">    BT[root].value = num[cnt++];</span><br><span class="line">    <span class="keyword">if</span> (BT[root].rchild != <span class="number">-1</span>)</span><br><span class="line">        insert(BT[root].rchild);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; que;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bianli</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; BT[que.front()].value;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; BT[que.front()].value;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (BT[que.front()].lchild!=<span class="number">-1</span>)</span><br><span class="line">            que.push(BT[que.front()].lchild);</span><br><span class="line">        <span class="keyword">if</span>(BT[que.front()].rchild!=<span class="number">-1</span>)</span><br><span class="line">            que.push(BT[que.front()].rchild);</span><br><span class="line">        que.pop();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    BT.resize(N); num.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; BT[i].lchild &gt;&gt; BT[i].rchild;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">    sort(num.begin(), num.end());</span><br><span class="line">    insert(<span class="number">0</span>);</span><br><span class="line">    que.push(<span class="number">0</span>);</span><br><span class="line">    bianli();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">1</span> <span class="number">6</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">-1</span> <span class="number">-1</span></span><br><span class="line"><span class="number">-1</span> <span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="number">-1</span></span><br><span class="line"><span class="number">-1</span> <span class="number">-1</span></span><br><span class="line"><span class="number">7</span> <span class="number">-1</span></span><br><span class="line"><span class="number">-1</span> <span class="number">8</span></span><br><span class="line"><span class="number">-1</span> <span class="number">-1</span></span><br><span class="line"><span class="number">73</span> <span class="number">45</span> <span class="number">11</span> <span class="number">58</span> <span class="number">82</span> <span class="number">25</span> <span class="number">67</span> <span class="number">38</span> <span class="number">42</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">58</span> <span class="number">25</span> <span class="number">82</span> <span class="number">11</span> <span class="number">38</span> <span class="number">67</span> <span class="number">45</span> <span class="number">73</span> <span class="number">42</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 二叉搜索树 </tag>
            
            <tag> 层次遍历 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1111</title>
      <link href="//posts/eb99798d/"/>
      <url>//posts/eb99798d/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805358663417856" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5728;&#x7EBF;&#x5730;&#x56FE; <a id="more"></a> ## Description Input our current position and a destination, an online map can recommend several paths. Now your job is to recommend two paths to your user: one is the shortest, and the other is the fastest. It is guaranteed that a path exists for any request. ## Input Specification Each input file contains one test case. For each case, the first line gives two positive integers N (2&#x2264;N&#x2264;500), and M, being the total number of streets intersections on a map, and the number of streets, respectively. Then M lines follow, each describes a street in the format:</p><p>V1 V2 one-way length time</p><p>where V1 and V2 are the indices (from 0 to N&#x2212;1) of the two ends of the street; one-way is 1 if the street is one-way from V1 to V2, or 0 if not; length is the length of the street; and time is the time taken to pass the street.</p><p>Finally a pair of source and destination is given. ## Output Specification For each case, first print the shortest path from the source to the destination with distance D in the format:</p><p>Distance = D: source -&gt; v1 -&gt; ... -&gt; destination</p><p>Then in the next line print the fastest path with total time T:</p><p>Time = T: source -&gt; w1 -&gt; ... -&gt; destination</p><p>In case the shortest path is not unique, output the fastest one among the shortest paths, which is guaranteed to be unique. In case the fastest path is not unique, output the one that passes through the fewest intersections, which is guaranteed to be unique.</p><p>In case the shortest and the fastest paths are identical, print them in one line in the format:</p><p>Distance = D; Time = T: source -&gt; u1 -&gt; ... -&gt; destination ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x8F93;&#x5165;&#x6211;&#x4EEC;&#x5F53;&#x524D;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x76EE;&#x7684;&#x5730;&#xFF0C;&#x5728;&#x7EBF;&#x5730;&#x56FE;&#x53EF;&#x4EE5;&#x63A8;&#x8350;&#x51E0;&#x6761;&#x8DEF;&#x5F84;&#x3002;&#x73B0;&#x5728;&#x4F60;&#x7684;&#x5DE5;&#x4F5C;&#x662F;&#x5411;&#x7528;&#x6237;&#x63A8;&#x8350;&#x4E24;&#x6761;&#x8DEF;&#x5F84;&#xFF1A;&#x4E00;&#x6761;&#x662F;&#x6700;&#x77ED;&#x7684;&#xFF0C;&#x53E6;&#x4E00;&#x6761;&#x662F;&#x6700;&#x5FEB;&#x7684;&#x3002;&#x4FDD;&#x8BC1;&#x4EFB;&#x4F55;&#x9700;&#x6C42;&#x90FD;&#x5B58;&#x5728;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570; N (2&#x2264;N&#x2264;500)&#x548C;M&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x5730;&#x56FE;&#x4E0A;&#x7684;&#x8857;&#x9053;&#x4EA4;&#x53C9;&#x70B9;&#x7684;&#x603B;&#x6570;&#x548C;&#x8857;&#x9053;&#x7684;&#x6570;&#x91CF;&#x3002;&#x7136;&#x540E;&#x662F;M&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4EE5;&#x4EE5;&#x4E0B;&#x683C;&#x5F0F;&#x63CF;&#x8FF0;&#x63A5;&#x5230;&#x4FE1;&#x606F;&#xFF1A;</p><p>V1 V2 one-way length time</p><p>V1&#x548C;V2&#x662F;&#x8857;&#x9053;&#x4E24;&#x7AEF;&#x7684;&#x7F16;&#x53F7;&#xFF08;&#x4ECE;0~N-1&#xFF09;&#xFF0C;oneway&#x662F;1&#x8868;&#x793A;&#x8857;&#x9053;&#x662F;V1-&gt;V2&#x7684;&#x5355;&#x884C;&#x7EBF;&#x3002;0&#x8868;&#x793A;&#x4E0D;&#x662F;&#x3002;length&#x662F;&#x8857;&#x9053;&#x7684;&#x957F;&#x5EA6;&#xFF0C;time&#x662F;&#x901A;&#x8FC7;&#x8857;&#x9053;&#x7684;&#x65F6;&#x95F4;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x9996;&#x5148;&#x8F93;&#x51FA;&#x4ECE;&#x6E90;&#x5230;&#x76EE;&#x7684;&#x5730;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;D&#x4E3A;&#x8DDD;&#x79BB;&#xFF1A;</p><p>Distance = D: source -&gt; v1 -&gt; ... -&gt; destination</p><p>&#x7136;&#x540E;&#x5728;&#x4E0B;&#x4E00;&#x884C;&#x6253;&#x5370;&#x603B;&#x65F6;&#x95F4;&#x6700;&#x5FEB;&#x7684;&#x8DEF;&#x5F84;T:</p><p>Time = T: source -&gt; w1 -&gt; ... -&gt; destination</p><p>&#x82E5;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4E0D;&#x552F;&#x4E00;&#xFF0C;&#x8FD9;&#x8F93;&#x51FA;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4E2D;&#x7684;&#x6700;&#x5FEB;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x4FDD;&#x8BC1;&#x8FD9;&#x4E2A;&#x662F;&#x552F;&#x4E00;&#x7684;&#x3002;&#x5982;&#x679C;&#x6700;&#x5FEB;&#x8DEF;&#x5F84;&#x4E0D;&#x552F;&#x4E00;&#xFF0C;&#x8FD9;&#x8F93;&#x51FA;&#x901A;&#x8FC7;&#x4EA4;&#x53C9;&#x70B9;&#x6700;&#x5C11;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x4FDD;&#x8BC1;&#x8FD9;&#x4E2A;&#x662F;&#x552F;&#x4E00;&#x7684;&#x3002;</p><p>&#x5982;&#x679C;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x548C;&#x6700;&#x5FEB;&#x8DEF;&#x5F84;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x6309;&#x7167;&#x4E0B;&#x5217;&#x5404;&#x5F0F;&#x5728;&#x4E00;&#x884C;&#x5185;&#x8F93;&#x51FA;&#xFF1A;</p><p>Distance = D; Time = T: source -&gt; u1 -&gt; ... -&gt; destination # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; Dijkstra+DFS ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 99999999</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> l;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">} node;</span><br><span class="line"><span class="keyword">int</span> N, M, OneWay, len, t_cost, v1, v2, kaishi, jieshu, dis[<span class="number">501</span>];</span><br><span class="line"><span class="keyword">int</span> Gdis[<span class="number">501</span>][<span class="number">501</span>], Gcost[<span class="number">501</span>][<span class="number">501</span>];</span><br><span class="line"><span class="keyword">int</span> mindis=INF, mincost = INF,costvalue;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; disres, costres, distemp, costtemp;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;pre[<span class="number">501</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    distemp.push_back(v);</span><br><span class="line">    <span class="keyword">if</span> (v==kaishi)</span><br><span class="line">    {</span><br><span class="line">        costvalue = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; distemp.size() - <span class="number">1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            costvalue += Gcost[distemp[i + <span class="number">1</span>]][distemp[i]];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (mincost&gt;costvalue)</span><br><span class="line">        {</span><br><span class="line">            mincost = costvalue;</span><br><span class="line">            disres = distemp;</span><br><span class="line">        }</span><br><span class="line">        distemp.pop_back();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pre[v].size(); i++)</span><br><span class="line">    {</span><br><span class="line">        DFS(pre[v][i]);</span><br><span class="line">    }</span><br><span class="line">    distemp.pop_back();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS2</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    costtemp.push_back(v);</span><br><span class="line">    <span class="keyword">if</span> (v == kaishi)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (costtemp.size()&lt;mindis)</span><br><span class="line">        {</span><br><span class="line">            mindis = costtemp.size();</span><br><span class="line">            costres = costtemp;</span><br><span class="line">        }</span><br><span class="line">        costtemp.pop_back();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pre[v].size(); i++)</span><br><span class="line">    {</span><br><span class="line">        DFS2(pre[v][i]);</span><br><span class="line">    }</span><br><span class="line">    costtemp.pop_back();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dij</span><span class="params">(<span class="keyword">int</span> G[<span class="number">501</span>][<span class="number">501</span>])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">501</span>; i++)</span><br><span class="line">        pre[i].clear();</span><br><span class="line">    fill(dis, dis + <span class="number">501</span>, INF);</span><br><span class="line">    <span class="keyword">bool</span> visit[<span class="number">501</span>] = { <span class="number">0</span> };</span><br><span class="line">    dis[kaishi] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> u = <span class="number">-1</span>, mindis = INF;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (visit[j] == <span class="literal">false</span> &amp;&amp; dis[j] &lt; mindis)</span><br><span class="line">            {</span><br><span class="line">                u = j;</span><br><span class="line">                mindis = dis[j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (u == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        visit[u] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> v = <span class="number">0</span>; v &lt; N; v++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (visit[v]==<span class="literal">false</span>&amp;&amp;G[u][v]!=INF)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (dis[u] + G[u][v] &lt; dis[v])</span><br><span class="line">                {</span><br><span class="line">                    dis[v] = dis[u] + G[u][v];</span><br><span class="line">                    pre[v].clear();</span><br><span class="line">                    pre[v].push_back(u);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (dis[u] + G[u][v] == dis[v])</span><br><span class="line">                    pre[v].push_back(u);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    fill(Gdis[<span class="number">0</span>], Gdis[<span class="number">0</span>] + <span class="number">501</span> * <span class="number">501</span>, INF);</span><br><span class="line">    fill(Gcost[<span class="number">0</span>], Gcost[<span class="number">0</span>] + <span class="number">501</span> * <span class="number">501</span>, INF);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; v1 &gt;&gt; v2 &gt;&gt; OneWay &gt;&gt; len &gt;&gt; t_cost;</span><br><span class="line">        <span class="keyword">if</span> (OneWay)</span><br><span class="line">        {</span><br><span class="line">            Gdis[v1][v2] = len;</span><br><span class="line">            Gcost[v1][v2] = t_cost;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            Gdis[v1][v2] = len;</span><br><span class="line">            Gcost[v1][v2] = t_cost;</span><br><span class="line">            Gdis[v2][v1] = len;</span><br><span class="line">            Gcost[v2][v1] = t_cost;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; kaishi &gt;&gt; jieshu;</span><br><span class="line">    dij(Gdis);</span><br><span class="line">    DFS(jieshu);</span><br><span class="line">    <span class="keyword">int</span> temp1 = dis[jieshu];</span><br><span class="line">    dij(Gcost);</span><br><span class="line">    DFS2(jieshu);</span><br><span class="line">    <span class="keyword">int</span> temp2 = dis[jieshu];</span><br><span class="line">    <span class="keyword">if</span> (disres!=costres)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Distance = &quot;</span> &lt;&lt; temp1 &lt;&lt; <span class="string">&quot;: &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = disres.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; disres[i];</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; -&gt; &quot;</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Time = &quot;</span> &lt;&lt; temp2 &lt;&lt; <span class="string">&quot;: &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = costres.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; costres[i];</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; -&gt; &quot;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Distance = &quot;</span> &lt;&lt; temp1 &lt;&lt; <span class="string">&quot;; Time = &quot;</span> &lt;&lt; temp2 &lt;&lt; <span class="string">&quot;: &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = disres.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; disres[i];</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; -&gt; &quot;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"><span class="number">10</span> <span class="number">15</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">8</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="number">8</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">0</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">9</span> <span class="number">1</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">6</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">7</span> <span class="number">5</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">8</span> <span class="number">5</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">0</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">0</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">9</span> <span class="number">7</span> <span class="number">1</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">5</span> <span class="number">1</span> <span class="number">0</span> <span class="number">5</span> <span class="number">2</span></span><br><span class="line"><span class="number">6</span> <span class="number">5</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line">Distance = <span class="number">6</span>: <span class="number">3</span> -&gt; <span class="number">4</span> -&gt; <span class="number">8</span> -&gt; <span class="number">5</span></span><br><span class="line">Time = <span class="number">3</span>: <span class="number">3</span> -&gt; <span class="number">1</span> -&gt; <span class="number">5</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"><span class="number">7</span> <span class="number">9</span></span><br><span class="line"><span class="number">0</span> <span class="number">4</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">6</span> <span class="number">1</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">6</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">0</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">6</span> <span class="number">5</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line">Distance = <span class="number">3</span>; Time = <span class="number">4</span>: <span class="number">3</span> -&gt; <span class="number">2</span> -&gt; <span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> Dijkstra </tag>
            
            <tag> DFS </tag>
            
            <tag> 最短路径 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1110 Complete Binary Tree（25）</title>
      <link href="//posts/1a7984cb/"/>
      <url>//posts/1a7984cb/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805359372255232" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x6811; <a id="more"></a> ## Description Given a tree, you are supposed to tell if it is a complete binary tree. ## Input Specification Each input file contains one test case. For each case, the first line gives a positive integer N (&#x2264;20) which is the total number of nodes in the tree -- and hence the nodes are numbered from 0 to N&#x2212;1. Then N lines follow, each corresponds to a node, and gives the indices of the left and right children of the node. If the child does not exist, a - will be put at the position. Any pair of children are separated by a space. ## Output Specification For each case, print in one line YES and the index of the last node if the tree is a complete binary tree, or NO and the index of the root if not. There must be exactly one space separating the word and the number. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x7ED9;&#x5B9A;&#x4E00;&#x68F5;&#x6811;&#xFF0C;&#x8981;&#x6C42;&#x5224;&#x65AD;&#x5176;&#x662F;&#x5426;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x6811;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N(&#x2264;20)&#xFF0C;&#x8868;&#x793A;&#x6811;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x603B;&#x6570;&#xFF0C;&#x8282;&#x70B9;&#x7684;&#x7F16;&#x53F7;0~N-1&#x3002;&#x968F;&#x540E;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x7ED9;&#x51FA;&#x8282;&#x70B9;&#x5DE6;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x7D22;&#x5F15;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x4E3A;&#x201C;-&#x201D;&#xFF0C;&#x4E00;&#x5BF9;&#x5B69;&#x5B50;&#x4E2D;&#xFF0C;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5982;&#x679C;&#x662F;&#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x8F93;&#x51FA;&#x201C;YES&#x201D;&#xFF0C;&#x5E76;&#x8F93;&#x51FA;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x7F16;&#x53F7;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x5C31;&#x8F93;&#x51FA;&#x201C;NO&#x201D;&#x548C;&#x6839;&#x8282;&#x70B9;&#x7684;&#x7F16;&#x53F7;&#x3002;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. &#x627E;&#x5230;&#x6839;&#x8282;&#x70B9;&#xFF1A;&#x6240;&#x6709;&#x8282;&#x70B9;&#x4E2D;&#xFF0C;&#x4E0D;&#x662F;&#x5B69;&#x5B50;&#x7684;&#x90A3;&#x4E2A;&#x8282;&#x70B9;&#x3002; 2. &#x5DF2;&#x77E5;&#x6839;&#x8282;&#x70B9;&#x548C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x53F3;&#x5B69;&#x5B50;&#xFF0C;&#x6309;&#x7167;&#x4E8C;&#x53C9;&#x6811;&#x5C42;&#x6B21;&#x904D;&#x5386;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x904D;&#x5386;&#x4E8C;&#x53C9;&#x6811;&#x3002; 3. &#x8FD9;&#x91CC;&#x6211;&#x6309;&#x7167;&#x5C42;&#x6B21;&#x904D;&#x5386;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x7ED9;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x4ECE;1~N&#x8FDB;&#x884C;&#x4E86;&#x91CD;&#x65B0;&#x7F16;&#x53F7;&#x3002;&#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x6811;&#x6EE1;&#x8DB3;&#xFF1A;&#x82E5;i&#x7F16;&#x53F7;&#x7684;&#x8282;&#x70B9;&#x6709;&#x5B69;&#x5B50;&#xFF0C;&#x8FD9;&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x7F16;&#x53F7;&#x4E3A;2<em>i&#xFF0C;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x7F16;&#x53F7;&#x4E3A;2</em>i+1&#x3002;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x8FDB;&#x884C;&#x5224;&#x65AD;&#x5373;&#x53EF;&#x3002;</p><h2 id="tips">Tips</h2><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;1102 ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> ID;</span><br><span class="line">    <span class="keyword">int</span> lchild, rchild;</span><br><span class="line">}node;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;que;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; v, s;</span><br><span class="line"><span class="built_in">string</span> temp;</span><br><span class="line"><span class="keyword">bool</span> FindRoot[<span class="number">21</span>] = { <span class="number">0</span> };</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.ID &lt; b.ID;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    v.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        <span class="keyword">if</span> (temp[<span class="number">0</span>] != <span class="string">&apos;-&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            v[i].lchild = stoi(temp);</span><br><span class="line">            FindRoot[v[i].lchild] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            v[i].lchild = <span class="number">-1</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        <span class="keyword">if</span> (temp[<span class="number">0</span>] != <span class="string">&apos;-&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            v[i].rchild = stoi(temp);</span><br><span class="line">            FindRoot[v[i].rchild] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            v[i].rchild = <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> root;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (FindRoot[i] == <span class="literal">false</span>)</span><br><span class="line">        {</span><br><span class="line">            root = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    que.push(root);</span><br><span class="line">    <span class="keyword">int</span> f, cnt = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!que.empty())     <span class="comment">//&#x5C42;&#x6B21;&#x904D;&#x5386;&#xFF0C;&#x91CD;&#x6392;&#x4E00;&#x4E0B;&#x5E8F;&#x53F7;</span></span><br><span class="line">    {</span><br><span class="line">        f = que.front(); que.pop(); v[f].ID = cnt++;</span><br><span class="line">        <span class="keyword">if</span> (v[f].lchild != <span class="number">-1</span>)</span><br><span class="line">            que.push(v[f].lchild);</span><br><span class="line">        <span class="keyword">if</span> (v[f].rchild != <span class="number">-1</span>)</span><br><span class="line">            que.push(v[f].rchild);</span><br><span class="line">    }</span><br><span class="line">    s = v;</span><br><span class="line">    sort(s.begin(), s.end(), cmp);</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)      <span class="comment">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (s[i].lchild != <span class="number">-1</span> &amp;&amp; v[s[i].lchild].ID != s[i].ID * <span class="number">2</span>)</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (s[i].rchild != <span class="number">-1</span> &amp;&amp; v[s[i].rchild].ID != s[i].ID * <span class="number">2</span> + <span class="number">1</span>)</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;YES &quot;</span> &lt;&lt; f;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NO &quot;</span> &lt;&lt; root;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">7</span> <span class="number">8</span></span><br><span class="line">- -</span><br><span class="line">- -</span><br><span class="line">- -</span><br><span class="line"><span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span></span><br><span class="line">- -</span><br><span class="line">- -</span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line">YES <span class="number">8</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"><span class="number">8</span></span><br><span class="line">- -</span><br><span class="line"><span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">0</span> <span class="number">6</span></span><br><span class="line">- -</span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line">- <span class="number">7</span></span><br><span class="line">- -</span><br><span class="line">- -</span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line">NO <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 完全二叉树 </tag>
            
            <tag> 层次遍历 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1109 Group Photo（25）</title>
      <link href="//posts/fde4c840/"/>
      <url>//posts/fde4c840/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805360043343872" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5408;&#x5F71; <a id="more"></a> ## Description Formation is very important when taking a group photo. Given the rules of forming K rows with N people as the following:</p><ul><li>The number of people in each row must be N/K (round down to the nearest integer), with all the extra people (if any) standing in the last row;</li><li>All the people in the rear row must be no shorter than anyone standing in the front rows;</li><li>In each row, the tallest one stands at the central position (which is defined to be the position (m/2+1), where m is the total number of people in that row, and the division result must be rounded down to the nearest integer);</li><li>In each row, other people must enter the row in non-increasing order of their heights, alternately taking their positions first to the right and then to the left of the tallest one (For example, given five people with their heights 190, 188, 186, 175, and 170, the final formation would be 175, 188, 190, 186, and 170. Here we assume that you are facing the group so your left-hand side is the right-hand side of the one at the central position.);</li><li>When there are many people having the same height, they must be ordered in alphabetical (increasing) order of their names, and it is guaranteed that there is no duplication of names.</li></ul><p>Now given the information of a group of people, you are supposed to write a program to output their formation. ## Input Specification Each input file contains one test case. For each test case, the first line contains two positive integers N (&#x2264;10<sup>4</sup>), the total number of people, and K (&#x2264;10), the total number of rows. Then N lines follow, each gives the name of a person (no more than 8 English letters without space) and his/her height (an integer in [30, 300]). ## Output Specification For each case, print the formation -- that is, print the names of people in K lines. The names must be separated by exactly one space, but there must be no extra space at the end of each line. Note: since you are facing the group, people in the rear rows must be printed above the people in the front rows. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x5728;&#x62CD;&#x6444;&#x5408;&#x5F71;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x961F;&#x5F62;&#x5F88;&#x91CD;&#x8981;&#x3002;&#x7528;N&#x4E2A;&#x4EBA;&#x5F62;&#x6210;K&#x884C;&#x961F;&#x5F62;&#x7684;&#x89C4;&#x5219;&#x5982;&#x4E0B;&#xFF1A; - &#x6BCF;&#x884C;&#x4E2D;&#x7684;&#x4EBA;&#x6570;&#x5FC5;&#x987B;&#x662F;N/K&#xFF08;&#x5411;&#x4E0B;&#x53D6;&#x6574;&#xFF09;&#xFF0C;&#x6240;&#x6709;&#x989D;&#x5916;&#x7684;&#x4EBA;&#xFF08;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;&#xFF09;&#x7AD9;&#x5728;&#x6700;&#x540E;&#x4E00;&#x884C;&#x3002; - &#x540E;&#x6392;&#x7684;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x4E0D;&#x5F97;&#x6BD4;&#x7AD9;&#x5728;&#x524D;&#x6392;&#x7684;&#x4EFB;&#x4F55;&#x4EBA;&#x66F4;&#x77EE;&#x3002; - &#x5728;&#x6BCF;&#x884C;&#x4E2D;&#xFF0C;&#x6700;&#x9AD8;&#x7684;&#x4EBA;&#x7AD9;&#x5728;&#x4E2D;&#x5FC3;&#x4F4D;&#x7F6E;&#xFF08;&#x5373;m/2+1&#x7684;&#x4F4D;&#x7F6E;&#xFF09;&#xFF0C;m&#x662F;&#x8FD9;&#x4E00;&#x884C;&#x7684;&#x603B;&#x4EBA;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x9664;&#x6CD5;&#x7ED3;&#x679C;&#x5FC5;&#x987B;&#x5411;&#x4E0B;&#x53D6;&#x6574;&#x3002; - &#x5728;&#x6BCF;&#x884C;&#x4E2D;&#xFF0C;&#x5176;&#x4ED6;&#x4EBA;&#x5FC5;&#x987B;&#x4EE5;&#x975E;&#x9012;&#x589E;&#x7684;&#x8EAB;&#x9AD8;&#x987A;&#x5E8F;&#x8FDB;&#x5165;&#x8BE5;&#x884C;&#xFF0C;&#x4EA4;&#x66FF;&#x5730;&#x8FDB;&#x5165;&#x3002;&#x5148;&#x8FDB;&#x5230;&#x8EAB;&#x9AD8;&#x6700;&#x9AD8;&#x540C;&#x5B66;&#x7684;&#x53F3;&#x4FA7;&#xFF0C;&#x518D;&#x8FDB;&#x5230;&#x5176;&#x5DE6;&#x4FA7;&#x3002;&#x4F8B;&#x5982;&#xFF0C;5&#x4E2A;&#x4EBA;&#x7684;&#x8EAB;&#x9AD8;&#x5206;&#x522B;&#x662F;190, 188, 186, 175, and 170&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x9635;&#x578B;&#x4F1A;&#x662F;175, 188, 190, 186, 170.&#x8FD9;&#x91CC;&#x5047;&#x8BBE;&#x4F60;&#x9762;&#x671D;&#x8FD9;&#x4E2A;&#x5C0F;&#x7EC4;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x7684;&#x5DE6;&#x624B;&#x8FB9;&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x961F;&#x5217;&#x4E2D;&#x95F4;&#x7684;&#x4EBA;&#x7684;&#x53F3;&#x624B;&#x8FB9;&#x3002; - &#x5F53;&#x8BB8;&#x591A;&#x4EBA;&#x90FD;&#x6709;&#x540C;&#x6837;&#x7684;&#x8EAB;&#x9AD8;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x6309;&#x7167;&#x5176;&#x540D;&#x79F0;&#x7684;&#x5B57;&#x6BCD;&#x589E;&#x5E8F;&#x5BF9;&#x4ED6;&#x4EEC;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x4FDD;&#x8BC1;&#x4E0D;&#x5B58;&#x5728;&#x91CD;&#x540D;&#x7684;&#x4EBA;&#x3002;</p><p>&#x73B0;&#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x4EBA;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x8981;&#x6C42;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x8F93;&#x51FA;&#x4ED6;&#x4EEC;&#x7684;&#x961F;&#x5217;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x6709;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570; N (&#x2264;10<sup>4</sup>)&#x8868;&#x793A;&#x4EBA;&#x7684;&#x603B;&#x6570;&#xFF0C;K (&#x2264;10)&#x8868;&#x793A;&#x884C;&#x7684;&#x603B;&#x6570;&#x3002;&#x63A5;&#x4E0B;&#x91CC;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x59D3;&#x540D;&#xFF08;&#x4E0D;&#x8D85;&#x8FC7;8&#x4E2A;&#x6CA1;&#x6709;&#x7A7A;&#x683C;&#x7684;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#xFF09;&#x548C;&#x4ED6;&#x7684;&#x8EAB;&#x9AD8;&#xFF0C;&#x8EAB;&#x9AD8;&#x8303;&#x56F4;&#x5728;[30, 300]&#x5185;&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x5F62;&#x6210;&#x7684;&#x961F;&#x5217;&#x2014;&#x2014;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728;K&#x884C;&#x4E2D;&#x6253;&#x5370;&#x8FD9;&#x4E9B;&#x4EBA;&#x7684;&#x540D;&#x5B57;&#x3002;&#x540D;&#x5B57;&#x5FC5;&#x987B;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF0C;&#x6BCF;&#x884C;&#x672B;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7684;&#x7A7A;&#x683C;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x5047;&#x5B9A;&#x73B0;&#x5728;&#x662F;&#x9762;&#x5411;&#x961F;&#x5217;&#xFF0C;&#x6240;&#x4EE5;&#x540E;&#x6392;&#x7684;&#x4EBA;&#x5458;&#x5FC5;&#x987B;&#x5728;&#x524D;&#x6392;&#x4EBA;&#x5458;&#x7684;&#x4E0A;&#x65B9;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x6A21;&#x62DF;&#x540E;&#xFF0C;&#x5B58;&#x4E8E;res vector&#x4E2D;&#xFF0C;&#x6309;&#x7167;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x5373;&#x53EF;&#x3002; ## Tips &#x4ECE;&#x540E;&#x5F80;&#x524D;&#x6392;&#x6BD4;&#x8F83;&#x597D;&#xFF0C;&#x5148;&#x6392;&#x4E2A;&#x5B50;&#x9AD8;&#x7684;&#x4EBA;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">}node;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.len != b.len)</span><br><span class="line">        <span class="keyword">return</span> a.len &gt; b.len;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.name &lt; b.name;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; v;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; res;</span><br><span class="line"><span class="keyword">int</span> N, K, row, cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; K;</span><br><span class="line">    v.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; v[i].name &gt;&gt; v[i].len;</span><br><span class="line">    sort(v.begin(), v.end(), cmp);</span><br><span class="line">    row = K;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">while</span> (row&gt;<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (row == K)</span><br><span class="line">            num = N - N / K*(K - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            num = N / K;</span><br><span class="line">        res.resize(num);</span><br><span class="line">        res[num / <span class="number">2</span>] = v[cnt++].name;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; num; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (flag==<span class="literal">false</span>)</span><br><span class="line">            {</span><br><span class="line">                res[num / <span class="number">2</span> - (i + <span class="number">1</span>) / <span class="number">2</span>] = v[cnt++].name;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                res[num / <span class="number">2</span> + (i + <span class="number">1</span>) / <span class="number">2</span>] = v[cnt++].name;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        row--;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; res[i];</span><br><span class="line">            <span class="keyword">if</span> (i!=res.size()<span class="number">-1</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span> <span class="number">3</span></span><br><span class="line">Tom <span class="number">188</span></span><br><span class="line">Mike <span class="number">170</span></span><br><span class="line">Eva <span class="number">168</span></span><br><span class="line">Tim <span class="number">160</span></span><br><span class="line">Joe <span class="number">190</span></span><br><span class="line">Ann <span class="number">168</span></span><br><span class="line">Bob <span class="number">175</span></span><br><span class="line">Nick <span class="number">186</span></span><br><span class="line">Amy <span class="number">160</span></span><br><span class="line">John <span class="number">159</span></span><br><span class="line"></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line">Bob Tom Joe Nick</span><br><span class="line">Ann Mike Eva</span><br><span class="line">Tim Amy John</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1108 Finding Average（20）</title>
      <link href="//posts/8b5ef068/"/>
      <url>//posts/8b5ef068/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805360777347072" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x627E;&#x5230;&#x5E73;&#x5747;&#x6570; <a id="more"></a> ## Description The basic task is simple: given N real numbers, you are supposed to calculate their average. But what makes it complicated is that some of the input numbers might not be legal. A legal input is a real number in [&#x2212;1000,1000] and is accurate up to no more than 2 decimal places. When you calculate the average, those illegal numbers must not be counted in. ## Input Specification Each input file contains one test case. For each case, the first line gives a positive integer N (&#x2264;100). Then N numbers are given in the next line, separated by one space. ## Output Specification For each illegal input number, print in a line ERROR: X is not a legal number where X is the input. Then finally print in a line the result: The average of K numbers is Y where K is the number of legal inputs and Y is their average, accurate to 2 decimal places. In case the average cannot be calculated, output Undefined instead of Y. In case K is only 1, output The average of 1 number is Y instead. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x7ED9;&#x5B9A;N&#x4E2A;&#x6570;&#xFF0C;&#x8981;&#x6C42;&#x8BA1;&#x7B97;&#x4ED6;&#x4EEC;&#x7684;&#x5E73;&#x5747;&#x503C;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x67D0;&#x4E9B;&#x8F93;&#x5165;&#x7684;&#x6570;&#x5B57;&#x53EF;&#x80FD;&#x4E0D;&#x5408;&#x6CD5;&#x3002;&#x4E00;&#x4E2A;&#x5408;&#x6CD5;&#x7684;&#x8F93;&#x5165;&#x662F;&#x5728; [&#x2212;1000,1000] &#x95F4;&#x7684;&#x5B9E;&#x6570;&#xFF0C;&#x6700;&#x591A;&#x7CBE;&#x786E;&#x5230;&#x5C0F;&#x6570;&#x70B9;&#x540E;2&#x4F4D;&#x3002;&#x8BA1;&#x7B97;&#x5E73;&#x5747;&#x503C;&#x65F6;&#xFF0C;&#x4E0D;&#x5F97;&#x8BA1;&#x5165;&#x8FD9;&#x4E9B;&#x975E;&#x6CD5;&#x7684;&#x6570;&#x5B57;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N(&#x2264;100)&#x3002;&#x7136;&#x540E;&#x5728;&#x4E0B;&#x4E00;&#x884C;&#x7ED9;&#x51FA;N&#x4E2A;&#x6570;&#xFF0C;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x975E;&#x6CD5;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x8F93;&#x51FA;ERROR: X is not a legal number&#xFF0C;&#x5176;&#x4E2D;X&#x662F;&#x90A3;&#x4E2A;&#x975E;&#x6CD5;&#x7684;&#x8F93;&#x5165;&#x3002;&#x7136;&#x540E;&#x5728;&#x6700;&#x540E;&#x4E00;&#x884C;&#x4E2D;&#x6253;&#x5370;&#x7ED3;&#x679C;&#xFF1A;The average of K numbers is Y &#x3002;K&#x662F;&#x5408;&#x6CD5;&#x8F93;&#x5165;&#x7684;&#x6570;&#x91CF;&#xFF0C;Y&#x4F7F;&#x4ED6;&#x4EEC;&#x7684;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x7CBE;&#x786E;&#x5230;2&#x4F4D;&#x5C0F;&#x6570;&#x3002;&#x5982;&#x679C;&#x65E0;&#x6CD5;&#x8BA1;&#x7B97;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x5219;&#x8F93;&#x51FA;Undefined&#x3002;&#x5982;&#x679C;K&#x53EA;&#x6709;1&#xFF0C;&#x5219;&#x8F93;&#x51FA;The average of 1 number is Y&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x5B57;&#x7B26;&#x4E32;&#x5904;&#x7406;&#x3002;&#x4F7F;&#x7528;sscanf()&#x548C;sprintf()&#x3002;&#x5177;&#x4F53;&#x7EC6;&#x8282;&#x89C1;&#x4EE3;&#x7801;&#x6CE8;&#x91CA; ## Tips 1. sscanf() &#x2013; &#x4ECE;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x8BFB;&#x8FDB;&#x4E0E;&#x6307;&#x5B9A;&#x683C;&#x5F0F;&#x76F8;&#x7B26;&#x7684;&#x6570;&#x636E; 2. sprintf() &#x2013; &#x5B57;&#x7B26;&#x4E32;&#x683C;&#x5F0F;&#x5316;&#x547D;&#x4EE4;&#xFF0C;&#x4E3B;&#x8981;&#x529F;&#x80FD;&#x662F;&#x628A;&#x683C;&#x5F0F;&#x5316;&#x7684;&#x6570;&#x636E;&#x5199;&#x5165;&#x67D0;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> num[<span class="number">50</span>],s[<span class="number">50</span>];</span><br><span class="line"><span class="keyword">int</span> N, cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> numSum = <span class="number">0.0</span>, temp;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">        <span class="built_in">sscanf</span>(num, <span class="string">&quot;%lf&quot;</span>, &amp;temp);<span class="comment">//temp&#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x6C42;&#x548C;</span></span><br><span class="line">        <span class="built_in">sprintf</span>(s, <span class="string">&quot;%.2lf&quot;</span>, temp);<span class="comment">//s&#x5B57;&#x7B26;&#x4E32;&#x7528;&#x4E8E;&#x6BD4;&#x8F83;&#xFF0C;&#x8FD9;&#x6837;&#x6BD4;&#x8F83;&#x8D77;&#x6765;&#x6BD4;&#x8F83;&#x65B9;&#x4FBF;</span></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">strlen</span>(num); j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num[j] != s[j])</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (flag || temp &lt; <span class="number">-1000</span> || temp&gt;<span class="number">1000</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ERROR: %s is not a legal number\n&quot;</span>, num);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            numSum += temp;</span><br><span class="line">            cnt++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (cnt == <span class="number">1</span>) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The average of 1 number is %.2lf&quot;</span>, numSum);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (cnt &gt; <span class="number">1</span>) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The average of %d numbers is %.2lf&quot;</span>, cnt, numSum / cnt);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The average of 0 numbers is Undefined&quot;</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">5</span> <span class="number">-3.2</span> aaa <span class="number">9999</span> <span class="number">2.3</span><span class="number">.4</span> <span class="number">7.123</span> <span class="number">2.35</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line">ERROR: aaa is <span class="keyword">not</span> a legal number</span><br><span class="line">ERROR: <span class="number">9999</span> is <span class="keyword">not</span> a legal number</span><br><span class="line">ERROR: <span class="number">2.3</span><span class="number">.4</span> is <span class="keyword">not</span> a legal number</span><br><span class="line">ERROR: <span class="number">7.123</span> is <span class="keyword">not</span> a legal number</span><br><span class="line">The average of <span class="number">3</span> numbers is <span class="number">1.38</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"><span class="number">2</span></span><br><span class="line">aaa <span class="number">-9999</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line">ERROR: aaa is <span class="keyword">not</span> a legal number</span><br><span class="line">ERROR: <span class="number">-9999</span> is <span class="keyword">not</span> a legal number</span><br><span class="line">The average of <span class="number">0</span> numbers is Undefined</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串处理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1107 Social Clusters（30）</title>
      <link href="//posts/45a41abd/"/>
      <url>//posts/45a41abd/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805361586847744" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x793E;&#x4EA4;&#x96C6;&#x7FA4; <a id="more"></a> ## Description When register on a social network, you are always asked to specify your hobbies in order to find some potential friends with the same hobbies. A social cluster is a set of people who have some of their hobbies in common. You are supposed to find all the clusters. ## Input Specification Each input file contains one test case. For each test case, the first line contains a positive integer N (&#x2264;1000), the total number of people in a social network. Hence the people are numbered from 1 to N. Then N lines follow, each gives the hobby list of a person in the format:</p><p>K<sub>i</sub>: h<sub>i</sub>[1] h<sub>i</sub>[2] ... h<sub>i</sub>[Ki]</p><p>where K<sub>i</sub>(&gt;0) is the number of hobbies, and h<sub>i</sub>[j] is the index of the j-th hobby, which is an integer in [1, 1000]. ## Output Specification For each case, print in one line the total number of clusters in the network. Then in the second line, print the numbers of people in the clusters in non-increasing order. The numbers must be separated by exactly one space, and there must be no extra space at the end of the line. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x5728;&#x793E;&#x4EA4;&#x7F51;&#x7EDC;&#x4E0A;&#x6CE8;&#x518C;&#x65F6;&#xFF0C;&#x603B;&#x4F1A;&#x8981;&#x6C42;&#x4F60;&#x6765;&#x6307;&#x5B9A;&#x81EA;&#x5DF1;&#x7684;&#x7231;&#x597D;&#xFF0C;&#x4E00;&#x8FB9;&#x627E;&#x5230;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7231;&#x597D;&#x7684;&#x6F5C;&#x5728;&#x7684;&#x670B;&#x53CB;&#x3002;&#x4E00;&#x4E2A;&#x793E;&#x4EA4;&#x96C6;&#x7FA4;&#x5C31;&#x662F;&#x4E00;&#x7EC4;&#x62E5;&#x6709;&#x4ED6;&#x4EEC;&#x7684;&#x4E00;&#x4E9B;&#x5171;&#x540C;&#x7231;&#x597D;&#x7684;&#x4EBA;&#x3002;&#x8981;&#x6C42;&#x4F60;&#x627E;&#x5230;&#x6240;&#x6709;&#x7684;&#x96C6;&#x7FA4;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N(&#x2264;1000)&#xFF0C;&#x8868;&#x793A;&#x6574;&#x4E2A;&#x793E;&#x4EA4;&#x7F51;&#x7EDC;&#x7684;&#x603B;&#x4EBA;&#x6570;&#xFF0C;&#x4EBA;&#x4EEC;&#x7684;&#x7F16;&#x53F7;&#x662F;&#x4ECE;1~N&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4EE5;&#x4EE5;&#x4E0B;&#x683C;&#x5F0F;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x7231;&#x597D;&#x5217;&#x8868;&#xFF1A;</p><p>K<sub>i</sub>: h<sub>i</sub>[1] h<sub>i</sub>[2] ... h<sub>i</sub>[Ki]</p><p>K<sub>i</sub>(&gt;0) &#x662F;&#x7231;&#x597D;&#x7684;&#x6570;&#x91CF;&#xFF0C;h<sub>i</sub>[j]&#x662F;&#x7B2C;j&#x4E2A;&#x7231;&#x597D;&#x7684;&#x6807;&#x53F7;&#xFF0C;&#x4ED6;&#x662F;[1, 1000]&#x4E2D;&#x7684;&#x6B63;&#x6570;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x6253;&#x5370;&#x8FD9;&#x4E2A;&#x793E;&#x4EA4;&#x7F51;&#x7EDC;&#x7684;&#x96C6;&#x7FA4;&#x603B;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x7B2C;&#x4E8C;&#x884C;&#x4E2D;&#xFF0C;&#x4EE5;&#x975E;&#x9012;&#x589E;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#x96C6;&#x7FA4;&#x4E2D;&#x7684;&#x4EBA;&#x7684;&#x603B;&#x6570;&#x3002;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x5FC5;&#x987B;&#x7531;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF0C;&#x6BCF;&#x884C;&#x7684;&#x672B;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7684;&#x7A7A;&#x683C;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x4F7F;&#x7528;&#x5E76;&#x67E5;&#x96C6;&#xFF0C;&#x8BB0;&#x5F97;&#x4FDD;&#x7559;&#x96C6;&#x7FA4;&#x7684;&#x603B;&#x4EBA;&#x6570;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; par;</span><br><span class="line"><span class="keyword">int</span> hobby[<span class="number">1001</span>] = { <span class="number">0</span> }, N;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">1001</span>];<span class="comment">//&#x8868;&#x793A;&#x4EE5;i&#x4E3A;&#x6839;&#x7684;&#x5708;&#x5B50;&#x7684;&#x5927;&#x5C0F;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a &gt; b;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> num[a] &gt; num[b];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FindRoot</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> j, k = x;</span><br><span class="line">    <span class="keyword">while</span> (x != par[x])</span><br><span class="line">        x = par[x];</span><br><span class="line">    <span class="keyword">while</span> (k != x)</span><br><span class="line">    {</span><br><span class="line">        j = par[k];</span><br><span class="line">        par[k] = x;</span><br><span class="line">        k = j;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    x = FindRoot(x);</span><br><span class="line">    y = FindRoot(y);</span><br><span class="line">    <span class="keyword">if</span> (x == y)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        par[y] = x;</span><br><span class="line">        num[x] += num[y];</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    par.resize(N + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        par[i] = i;</span><br><span class="line">        num[i] = <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> k, h;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d: &quot;</span>, &amp;k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; h;</span><br><span class="line">            <span class="keyword">if</span> (hobby[h] == <span class="number">0</span>)</span><br><span class="line">                hobby[h] = i;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                merge(i, hobby[h]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (par[i] == i)</span><br><span class="line">        {</span><br><span class="line">            cnt++;</span><br><span class="line">            res.push_back(i);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    sort(res.begin(), res.end(), cmp2);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; num[res[i]];</span><br><span class="line">        <span class="keyword">if</span> (i != res.size() - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">3</span>: <span class="number">2</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span>: <span class="number">4</span></span><br><span class="line"><span class="number">2</span>: <span class="number">5</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span>: <span class="number">4</span></span><br><span class="line"><span class="number">1</span>: <span class="number">3</span></span><br><span class="line"><span class="number">1</span>: <span class="number">4</span></span><br><span class="line"><span class="number">4</span>: <span class="number">6</span> <span class="number">8</span> <span class="number">1</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span>: <span class="number">4</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">3</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1106 Lowest Price in Supply Chain（25）</title>
      <link href="//posts/d7add263/"/>
      <url>//posts/d7add263/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805362341822464" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x4F9B;&#x5E94;&#x94FE;&#x4E2D;&#x7684;&#x6700;&#x4F4E;&#x4EF7;&#x683C; <a id="more"></a> ## Description A supply chain is a network of retailers&#xFF08;&#x96F6;&#x552E;&#x5546;&#xFF09;, distributors&#xFF08;&#x7ECF;&#x9500;&#x5546;&#xFF09;, and suppliers&#xFF08;&#x4F9B;&#x5E94;&#x5546;&#xFF09;-- everyone involved in moving a product from supplier to customer.</p><p>Starting from one root supplier, everyone on the chain buys products from one&apos;s supplier in a price P and sell or distribute them in a price that is r% higher than P. Only the retailers will face the customers. It is assumed that each member in the supply chain has exactly one supplier except the root supplier, and there is no supply cycle.</p><p>Now given a supply chain, you are supposed to tell the lowest price a customer can expect from some retailers. ## Input Specification Each input file contains one test case. For each case, The first line contains three positive numbers: N (&#x2264;10<sup>&#x200B;5</sup>), the total number of the members in the supply chain (and hence their ID&apos;s are numbered from 0 to N&#x2212;1, and the root supplier&apos;s ID is 0); P, the price given by the root supplier; and r, the percentage rate of price increment for each distributor or retailer. Then N lines follow, each describes a distributor or retailer in the following format:</p><p>K&#x200B;<sub>i</sub>&#x200B;&#x200B; ID[1] ID[2] ... ID[K<sub>&#x200B;i</sub>]</p><p>where in the i-th line, K&#x200B;<sub>i</sub> is the total number of distributors or retailers who receive products from supplier i, and is then followed by the ID&apos;s of these distributors or retailers. K&#x200B;<sub>j</sub> being 0 means that the j-th member is a retailer. All the numbers in a line are separated by a space. ## Output Specification For each test case, print in one line the lowest price we can expect from some retailers, accurate up to 4 decimal places, and the number of retailers that sell at the lowest price. There must be one space between the two numbers. It is guaranteed that the all the prices will not exceed 10<sup>10</sup>. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x4E00;&#x4E2A;&#x4F9B;&#x5E94;&#x94FE;&#x662F;&#x7531;&#x96F6;&#x552E;&#x5546;&#xFF0C;&#x5206;&#x9500;&#x5546;&#x548C;&#x4F9B;&#x5E94;&#x5546;&#x7EC4;&#x6210;&#x7684;&#x7F51;&#x7EDC;&#xFF0C;&#x6BCF;&#x4E2A;&#x90FD;&#x5C06;&#x53C2;&#x4E0E;&#x628A;&#x4EA7;&#x54C1;&#x4ECE;&#x4F9B;&#x5E94;&#x5546;&#x8F6C;&#x79FB;&#x5230;&#x5BA2;&#x6237;&#x7684;&#x6D41;&#x7A0B;&#x4E2D;&#x3002;</p><p>&#x4ECE;&#x4E00;&#x4E2A;&#x6839;&#x4F9B;&#x5E94;&#x5546;&#x5F00;&#x59CB;&#xFF0C;&#x94FE;&#x4E0A;&#x7684;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x4EE5;&#x4E00;&#x4E2A;&#x4EF7;&#x683C;&#x4ECE;&#x4ED6;&#x7684;&#x4E0A;&#x5BB6;&#x4EE5;P&#x7684;&#x4EF7;&#x683C;&#x8D2D;&#x4E70;&#x5E76;&#x52A0;&#x4EF7;r%&#x5356;&#x51FA;&#x53BB;&#x3002;&#x53EA;&#x6709;&#x96F6;&#x552E;&#x5546;&#x624D;&#x4F1A;&#x9762;&#x5BF9;&#x5BA2;&#x6237;&#x3002;&#x5047;&#x8BBE;&#x4F9B;&#x5E94;&#x94FE;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x6210;&#x5458;&#x9664;&#x4E86;&#x6839;&#x4F9B;&#x5E94;&#x5546;&#x4E4B;&#x5916;&#x90FD;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x4E0A;&#x5BB6;&#xFF0C;&#x6CA1;&#x6709;&#x4F9B;&#x5E94;&#x5468;&#x671F;&#x3002;</p><p>&#x5148;&#x7ED9;&#x5B9A;&#x4F9B;&#x5E94;&#x94FE;&#xFF0C;&#x6C42;&#x5BA2;&#x6237;&#x53EF;&#x4EE5;&#x4ECE;&#x4E00;&#x4E9B;&#x96F6;&#x552E;&#x5546;&#x54EA;&#x91CC;&#x5F97;&#x5230;&#x7684;&#x6700;&#x4F4E;&#x7684;&#x4EF7;&#x683C;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF1A;N(&#x2264;10<sup>&#x200B;5</sup>)&#xFF0C;&#x4F9B;&#x5E94;&#x94FE;&#x4E2D;&#x6210;&#x5458;&#x7684;&#x603B;&#x6570;&#x91CF;&#xFF08;&#x7F16;&#x53F7;&#x4ECE;0~N-1&#xFF0C;&#x6839;&#x4F9B;&#x5E94;&#x5546;&#x7684;ID&#x4E3A;0&#xFF09;&#xFF1B;P&#xFF0C;&#x6839;&#x4F9B;&#x5E94;&#x5546;&#x7ED9;&#x51FA;&#x7684;&#x4EF7;&#x683C;&#xFF0C;r&#x6BCF;&#x4E2A;&#x7ECF;&#x9500;&#x5546;&#x6216;&#x8005;&#x96F6;&#x552E;&#x5546;&#x52A0;&#x4EF7;&#x7684;&#x767E;&#x5206;&#x6BD4;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4EE5;&#x4EE5;&#x4E0B;&#x683C;&#x5F0F;&#x63CF;&#x8FF0;&#x5206;&#x9500;&#x5546;&#x6216;&#x8005;&#x96F6;&#x552E;&#x5546;&#xFF1A;</p><p>K&#x200B;<sub>i</sub>&#x200B;&#x200B; ID[1] ID[2] ... ID[K<sub>&#x200B;i</sub>]</p><p>K&#x200B;<sub>i</sub>&#x662F;&#x7B2C;i&#x53F7;&#x5546;&#x6237;&#x4E0B;&#x5BB6;&#x7684;&#x603B;&#x6570;&#xFF08;&#x5373;&#x4ECE;&#x7B2C;i&#x53F7;&#x5546;&#x6237;&#x8FD9;&#x91CC;&#x91C7;&#x8D2D;&#x5546;&#x54C1;&#x7684;&#x6709;&#x591A;&#x5C11;&#x4EBA;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x662F;&#x8FD9;&#x4E9B;&#x7ECF;&#x9500;&#x5546;&#x7684;ID&#x3002;K&#x200B;<sub>j</sub>&#x4E3A;0&#x8868;&#x793A;&#x7B2C;j&#x53F7;&#x5546;&#x6237;&#x662F;&#x96F6;&#x552E;&#x5546;&#x3002;&#x4E00;&#x884C;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x90FD;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x4ECE;&#x96F6;&#x552E;&#x5546;&#x90A3;&#x91CC;&#x4E70;&#x5230;&#x7684;&#x6700;&#x4F4E;&#x4EF7;&#x683C;&#xFF0C;&#x7CBE;&#x786E;&#x5230;4&#x4F4D;&#x5C0F;&#x6570;&#xFF0C;&#x4EE5;&#x53CA;&#x7ED9;&#x51FA;&#x6700;&#x4F4E;&#x4EF7;&#x683C;&#x7684;&#x96F6;&#x552E;&#x5546;&#x7684;&#x6570;&#x91CF;&#x3002;&#x4E24;&#x4E2A;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x5FC5;&#x987B;&#x6709;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#xFF0C;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x7684;&#x4EF7;&#x683C;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;10<sup>10</sup>&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. &#x5148;&#x6839;&#x636E;&#x8F93;&#x5165;&#x7684;&#x4FE1;&#x606F;&#x5EFA;&#x7ACB;&#x51FA;&#x6574;&#x4E2A;&#x96F6;&#x552E;&#x7F51;&#x7EDC;&#x3002; 2. DFS&#x6216;&#x8005;BFS&#x8FDB;&#x884C;&#x904D;&#x5386;&#x3002;</p><h2 id="tips">Tips</h2><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;1079&#xFF0C;1090&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, num[<span class="number">10001</span>];</span><br><span class="line"><span class="keyword">int</span> M[<span class="number">400</span>][<span class="number">400</span>], a, b, temp, cnt = <span class="number">0</span>, model = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a &gt; b;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i = <span class="built_in">sqrt</span>((<span class="keyword">double</span>)N);</span><br><span class="line">    <span class="keyword">while</span> (i&gt;=<span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (N%i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        i--;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y1, <span class="keyword">int</span> y2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span> (cnt!= N)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (model % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = x1; i &lt; x2; i++)</span><br><span class="line">                M[y1][i] = num[cnt++];</span><br><span class="line">            model++;</span><br><span class="line">            y1++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (model % <span class="number">4</span> == <span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = y1; i &lt; y2; i++)</span><br><span class="line">                M[i][x2<span class="number">-1</span>] = num[cnt++];</span><br><span class="line">            model++;</span><br><span class="line">            x2--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (model%<span class="number">4</span>==<span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = x2<span class="number">-1</span>; i &gt;= x1; i--)</span><br><span class="line">                M[y2<span class="number">-1</span>][i] = num[cnt++];</span><br><span class="line">            model++;</span><br><span class="line">            y2--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (model % <span class="number">4</span> == <span class="number">3</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = y2<span class="number">-1</span>; i &gt;= y1; i--)</span><br><span class="line">                M[i][x1] = num[cnt++];</span><br><span class="line">            model++;</span><br><span class="line">            x1++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">    sort(num, num + N, cmp);</span><br><span class="line">    a = b = <span class="built_in">sqrt</span>(N); temp = N;</span><br><span class="line">    b = f(); a = N / b;</span><br><span class="line">    insert(<span class="number">0</span>, b, <span class="number">0</span>, a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; b; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; M[i][j];</span><br><span class="line">            <span class="keyword">if</span> (j != b - <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">10</span> <span class="number">1.80</span> <span class="number">1.00</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">9</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">7</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span> <span class="number">6</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">8</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">1.8362</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 层次遍历 </tag>
            
            <tag> 树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1105 Spiral Matrix (25)</title>
      <link href="//posts/7507f506/"/>
      <url>//posts/7507f506/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805363117768704" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x87BA;&#x65CB;&#x77E9;&#x9635; <a id="more"></a> ## Description This time your job is to fill a sequence of N positive integers into a <strong>spiral matrix</strong> in non-increasing order. A <strong>spiral matrix</strong> is filled in from the first element at the upper-left corner, then move in a clockwise spiral. The matrix has <strong>m</strong> rows and <strong>n</strong> columns, where <strong>m</strong> and <strong>n</strong> satisfy the following: <strong>m<em>n<strong> must be equal to N; </strong>m<strong>&gt;=</strong>n<strong>; and </strong>m<strong>-</strong>n<strong> is the minimum of all the possible values. ## Input Specification Each input file contains one test case. For each case, the first line gives a positive integer N. Then the next line contains N positive integers to be filled into the spiral matrix. All the numbers are no more than 10<sup>4</sup>. The numbers in a line are separated by spaces. ## Output Specification For each test case, output the resulting matrix in m lines, each contains n numbers. There must be exactly 1 space between two adjacent numbers, and no extra space at the end of each line. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x8FD9;&#x6B21;&#x4F60;&#x7684;&#x5DE5;&#x4F5C;&#x662F;&#x4EE5;&#x975E;&#x9012;&#x589E;&#x7684;&#x987A;&#x5E8F;&#x5C06;&#x4E00;&#x7CFB;&#x5217;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x586B;&#x5145;&#x5230;&#x87BA;&#x65CB;&#x77E9;&#x9635;&#x4E2D;&#xFF0C;&#x4ECE;&#x87BA;&#x65CB;&#x77E9;&#x9635;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x5F00;&#x59CB;&#x586B;&#x5145;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x7167;&#x987A;&#x65F6;&#x9488;&#x87BA;&#x65CB;&#x5F62;&#x79FB;&#x52A8;&#x3002;&#x77E9;&#x9635;&#x6709;m&#x884C;&#x548C;n&#x5217;&#xFF0C;&#x5176;&#x4E2D;m&#x548C;n&#x8981;&#x6EE1;&#x8DB3;&#x4EE5;&#x4E0B;&#x8981;&#x6C42;&#xFF1A;</strong>m</em>n</strong> &#x5FC5;&#x987B;&#x4E3A;&#x7B49;&#x4E8E;N&#xFF0C;<strong>m</strong>&gt;=<strong>n</strong> &#x5E76;&#x4E14; <strong>m</strong>-<strong>n</strong> &#x8981;&#x6700;&#x5C0F;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x7136;&#x540E;&#x4E0B;&#x4E00;&#x884C;&#x5305;&#x542B;&#x8981;&#x586B;&#x5145;&#x5230;&#x87BA;&#x65CB;&#x77E9;&#x9635;&#x4E2D;&#x7684;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x3002;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x7684;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x8D85;&#x8FC7;10<sup>4</sup>&#x3002;&#x4E00;&#x884C;&#x4E2D;&#x7684;&#x6570;&#x5B57;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x4EE5;m&#x884C;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x77E9;&#x9635;&#xFF0C;&#x6BCF;&#x884C;&#x5305;&#x62EC;n&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x4E24;&#x4E2A;&#x76F8;&#x90BB;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x5FC5;&#x987B;&#x6709;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#xFF0C;&#x6BCF;&#x884C;&#x672B;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7684;&#x7A7A;&#x683C;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x6A21;&#x62DF;&#x53BB;&#x505A;&#x5373;&#x53EF;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, num[<span class="number">10001</span>];</span><br><span class="line"><span class="keyword">int</span> M[<span class="number">400</span>][<span class="number">400</span>], a, b, temp, cnt = <span class="number">0</span>, model = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a &gt; b;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i = <span class="built_in">sqrt</span>((<span class="keyword">double</span>)N);</span><br><span class="line">    <span class="keyword">while</span> (i&gt;=<span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (N%i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        i--;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y1, <span class="keyword">int</span> y2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span> (cnt!= N)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (model % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = x1; i &lt; x2; i++)</span><br><span class="line">                M[y1][i] = num[cnt++];</span><br><span class="line">            model++;</span><br><span class="line">            y1++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (model % <span class="number">4</span> == <span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = y1; i &lt; y2; i++)</span><br><span class="line">                M[i][x2<span class="number">-1</span>] = num[cnt++];</span><br><span class="line">            model++;</span><br><span class="line">            x2--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (model%<span class="number">4</span>==<span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = x2<span class="number">-1</span>; i &gt;= x1; i--)</span><br><span class="line">                M[y2<span class="number">-1</span>][i] = num[cnt++];</span><br><span class="line">            model++;</span><br><span class="line">            y2--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (model % <span class="number">4</span> == <span class="number">3</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = y2<span class="number">-1</span>; i &gt;= y1; i--)</span><br><span class="line">                M[i][x1] = num[cnt++];</span><br><span class="line">            model++;</span><br><span class="line">            x1++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">    sort(num, num + N, cmp);</span><br><span class="line">    a = b = <span class="built_in">sqrt</span>(N); temp = N;</span><br><span class="line">    b = f(); a = N / b;</span><br><span class="line">    insert(<span class="number">0</span>, b, <span class="number">0</span>, a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; b; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; M[i][j];</span><br><span class="line">            <span class="keyword">if</span> (j != b - <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">37</span> <span class="number">76</span> <span class="number">20</span> <span class="number">98</span> <span class="number">76</span> <span class="number">42</span> <span class="number">53</span> <span class="number">95</span> <span class="number">60</span> <span class="number">81</span> <span class="number">58</span> <span class="number">93</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">98</span> <span class="number">95</span> <span class="number">93</span></span><br><span class="line"><span class="number">42</span> <span class="number">37</span> <span class="number">81</span></span><br><span class="line"><span class="number">53</span> <span class="number">20</span> <span class="number">76</span></span><br><span class="line"><span class="number">58</span> <span class="number">60</span> <span class="number">76</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1104 Sum of Number Segments (20)</title>
      <link href="//posts/bd559055/"/>
      <url>//posts/bd559055/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805363914686464" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6570;&#x5B57;&#x6BB5;&#x7684;&#x603B;&#x548C; <a id="more"></a> ## Description Given a sequence of positive numbers, a segment is defined to be a consecutive subsequence. For example, given the sequence {0.1, 0.2, 0.3, 0.4}, we have 10 segments: (0.1) (0.1, 0.2) (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4) (0.2) (0.2, 0.3) (0.2, 0.3, 0.4) (0.3) (0.3, 0.4) (0.4).</p><p>Now given a sequence, you are supposed to find the sum of all the numbers in all the segments. For the previous example, the sum of all the 10 segments is 0.1 + 0.3 + 0.6 + 1.0 + 0.2 + 0.5 + 0.9 + 0.3 + 0.7 + 0.4 = 5.0. ## Input Specification Each input file contains one test case. For each case, the first line gives a positive integer N, the size of the sequence which is no more than 10<sup>5</sup>. The next line contains N positive numbers in the sequence, each no more than 1.0, separated by a space. ## Output Specification For each test case, print in one line the sum of all the numbers in all the segments, accurate up to 2 decimal places. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x7ED9;&#x5B9A;&#x4E00;&#x7CFB;&#x5217;&#x6574;&#x6570;&#xFF0C;&#x5C06;&#x4E00;&#x4E2A; <em>&#x6BB5;&#xFF08;segment&#xFF09;</em> &#x5B9A;&#x4E49;&#x4E3A;&#x8FDE;&#x7EED;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x7ED9;&#x5B9A;&#x5E8F;&#x5217;{0.1, 0.2, 0.3, 0.4}&#xFF0C;&#x6211;&#x4EEC;&#x6709;10&#x4E2A;&#x6BB5;&#xFF1A; (0.1) (0.1, 0.2) (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4) (0.2) (0.2, 0.3) (0.2, 0.3, 0.4) (0.3) (0.3, 0.4) (0.4)&#x3002;</p><p>&#x73B0;&#x5728;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#xFF0C;&#x8BF7;&#x4F60;&#x627E;&#x5230;&#x6240;&#x6709;&#x6BB5;&#x4E2D;&#xFF0C;&#x6240;&#x6709;&#x6570;&#x5B57;&#x7684;&#x603B;&#x548C;&#x3002;&#x5BF9;&#x4E8E;&#x524D;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x8FD9;&#x6240;&#x6709;&#x7684;10&#x4E2A;&#x6BB5;&#x7684;&#x603B;&#x548C;&#x662F;0.1 + 0.3 + 0.6 + 1.0 + 0.2 + 0.5 + 0.9 + 0.3 + 0.7 + 0.4 = 5.0&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x8868;&#x793A;&#x5E8F;&#x5217;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x4E0B;&#x4E00;&#x884C;&#x662F;&#x8FD9;&#x4E2A;&#x5E8F;&#x5217;&#x7684;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x6BCF;&#x4E2A;&#x90FD;&#x4E0D;&#x8D85;&#x8FC7;1.0&#xFF0C;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x6240;&#x6709;&#x7684;&#x6BB5;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x7684;&#x548C;&#x3002;&#x4FDD;&#x7559;&#x4E24;&#x4F4D;&#x5C0F;&#x6570;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x8FD9;&#x4E2A;&#x9898;&#x53EA;&#x9700;&#x8981;&#x8BA1;&#x7B97;&#x51FA;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x591A;&#x5C11;&#x6B21;&#xFF0C;&#x5373;&#x53EF;&#x76F4;&#x63A5;&#x6C42;&#x51FA;&#x7ED3;&#x679C;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;i&#x4F4D;&#x4E0A;&#x51FA;&#x73B0;&#x7684;&#x6570;&#xFF0C;&#x4EE5;&#x4ED6;&#x5F00;&#x5934;&#x7684;&#x5E8F;&#x5217;&#x5171;N-i+1&#x4E2A;&#x3002;</p><p>&#x4EE5;0.2&#x4E3A;&#x4F8B;&#xFF0C;&#x5171;(0.2) (0.2, 0.3) (0.2, 0.3, 0.4)&#x3002;&#x5171;4-2+1=3&#x4E2A;&#x3002;</p><p>&#x4F46;&#x662F;&#x5305;&#x542B;&#x4E0A;&#x8FF0;&#x4E09;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x5E8F;&#x5217;&#x5171;i&#x4E2A;&#xFF0C;&#x4EE5;0.2&#x4E3A;&#x4F8B;&#xFF0C;&#x9664;&#x4E86;&#x4E0A;&#x8FF0;&#x7684;&#x4E09;&#x4E2A;&#xFF0C;&#x8FD8;&#x6709;&#x4EE5;0.1&#x5F00;&#x5934;&#x7684;&#x4E09;&#x4E2A;&#x5E8F;&#x5217;&#x3002;&#x5373;(0.1, 0.2) (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4)&#x3002;</p><p>&#x540C;&#x7406;0.3&#x7C7B;&#x4F3C;&#xFF0C;(0.3) (0.3, 0.4)&#x3002;&#x9664;&#x4E86;&#x8FD9;&#x4E24;&#x4E2A;&#xFF0C;&#x5305;&#x542B;&#x8FD9;&#x4E24;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x5E8F;&#x5217;&#x6709;&#xFF1A; (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4)&#x8FD8;&#x6709;(0.2, 0.3) (0.2, 0.3, 0.4)&#x3002;</p><h2 id="tips">Tips</h2><p>&#x627E;&#x51FA;&#x6570;&#x5B66;&#x89C4;&#x5F8B;&#xFF0C;&#x6BD4;&#x76F4;&#x63A5;&#x6A21;&#x62DF;&#x6C42;&#x51FA;&#x6240;&#x6709;&#x7684;&#x5E8F;&#x5217;&#x518D;&#x6C42;&#x548C;&#x8981;&#x65B9;&#x4FBF;&#x5F97;&#x591A;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">double</span> num[<span class="number">100001</span>], sum = <span class="number">0.0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">        sum += num[i] * i * (N - i + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, sum);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">0.1</span> <span class="number">0.2</span> <span class="number">0.3</span> <span class="number">0.4</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">5.00</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1103 Integer Factorization (30)</title>
      <link href="//posts/5efed0ac/"/>
      <url>//posts/5efed0ac/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805364711604224" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6574;&#x6570;&#x7684;&#x56E0;&#x5F0F;&#x5206;&#x89E3; <a id="more"></a> ## Description The K-P factorization of a positive integer N is to write N as the sum of the P-th power of K positive integers. You are supposed to write a program to find the K-P factorization of N for any positive integers N, K and P. ## Input Specification Each input file contains one test case which gives in a line the three positive integers N (&lt;=400), K (&lt;=N) and P (1&lt;P&lt;=7). The numbers in a line are separated by a space. ## Output Specification For each case, if the solution exists, output in the format:</p><p>N = n<sub>1</sub><sup>P</sup> + ... n<sub>K</sub><sup>P</sup></p><p>where n<sub>i</sub> (i=1, ... K) is the i-th factor. All the factors must be printed in non-increasing order.</p><p>Note: the solution may not be unique. For example, the 5-2 factorization of 169 has 9 solutions, such as 12<sup>2</sup> + 4<sup>2</sup> + 2<sup>2</sup> + 2<sup>2</sup> + 1<sup>2</sup>, or 11<sup>2</sup> + 6<sup>2</sup> + 2<sup>2</sup> + 2<sup>2</sup> + 2<sup>2</sup>, or more. You must output the one with the maximum sum of the factors. If there is a tie, the largest factor sequence must be chosen -- sequence { a<sub>1</sub>, a<sub>2</sub>, ... a<sub>K</sub> } is said to be larger than { b<sub>1</sub>, b<sub>2</sub>, ... b<sub>K</sub> } if there exists 1&lt;=L&lt;=K such that a<sub>i</sub>=b<sub>i</sub> for i&lt;L and a<sub>L</sub>&gt;b<sub>L</sub>&#x3002;</p><p>If there is no solution, simple output &quot;Impossible&quot;. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x6574;&#x6570;&#x7684;k-P&#x56E0;&#x5F0F;&#x5206;&#x89E3;&#x662F;&#x628A;&#x4E00;&#x4E2A;&#x6574;&#x6570;N&#x5199;&#x4F5C;K&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x7684;P&#x6B21;&#x5E42;&#x7684;&#x548C;&#x7684;&#x5F62;&#x5F0F;&#x3002;&#x73B0;&#x5728;&#x5E0C;&#x671B;&#x4F60;&#x5199;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x6765;&#x627E;&#x5230;&#x5BF9;&#x4E8E;&#x4EFB;&#x4F55;&#x6B63;&#x6574;&#x6570;N&#xFF0C;K&#x548C;P&#xFF0C;&#x5199;&#x51FA;&#x5176;K-P&#x5F62;&#x5F0F;&#x7684;&#x56E0;&#x5F0F;&#x5206;&#x89E3;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x4E09;&#x4E2A;&#x6B63;&#x6574;&#x6570;N (&lt;=400), K (&lt;=N) &#x548C; P (1&lt;P&lt;=7)&#x3002;&#x7531;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x89E3;&#x6CD5;&#xFF0C;&#x5219;&#x6309;&#x7167;&#x4EE5;&#x4E0B;&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#xFF1A;</p><p>N = n<sub>1</sub><sup>P</sup> + ... n<sub>K</sub><sup>P</sup></p><p>&#x5176;&#x4E2D;n<sub>i</sub> (i=1, ... K)&#x662F;&#x7B2C;i&#x4E2A;&#x56E0;&#x5B50;&#x3002;&#x6240;&#x6709;&#x7684;&#x56E0;&#x5B50;&#x5FC5;&#x987B;&#x4EE5;&#x975E;&#x9012;&#x589E;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#x3002;</p><p>&#x6CE8;&#x610F;&#xFF1A;&#x89E3;&#x6CD5;&#x53EF;&#x80FD;&#x4E0D;&#x552F;&#x4E00;&#xFF0C;&#x6BD4;&#x5982;169&#x7684;2-5&#x56E0;&#x5F0F;&#x5206;&#x89E3;&#xFF0C;&#x5177;&#x6709;9&#x4E2A;&#x89E3;&#xFF0C;&#x4F8B;&#x5982;12<sup>2</sup> + 4<sup>2</sup> + 2<sup>2</sup> + 2<sup>2</sup> + 1<sup>2</sup>, &#x6216;&#x8005; 11<sup>2</sup> + 6<sup>2</sup> + 2<sup>2</sup> + 2<sup>2</sup> + 2<sup>2</sup>,&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x5177;&#x6709;&#x6700;&#x5927;&#x56E0;&#x5B50;&#x603B;&#x548C;&#x7684;&#x90A3;&#x4E2A;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x662F;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x5177;&#x6709;&#x6700;&#x5927;&#x56E0;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x89E3;&#x3002;</p><p>&#x56E0;&#x5B50;&#x5E8F;&#x5217;&#x5927;&#x5C0F;&#x7684;&#x5224;&#x65AD;&#x89C4;&#x5219;&#xFF1A;</p><p>&#x5BF9;&#x4E8E;&#x5E8F;&#x5217;A{ a<sub>1</sub>, a<sub>2</sub>, ... a<sub>K</sub> }&#x548C;&#x5E8F;&#x5217;B{ b<sub>1</sub>, b<sub>2</sub>, ... b<sub>K</sub> } &#xFF0C;&#x82E5;&#x5B58;&#x5728;L&#x6EE1;&#x8DB3;1&lt;=L&lt;=K&#xFF0C;&#x4E14;&#x5BF9;&#x4E8E;&#x4EFB;&#x610F;i&lt;L&#xFF0C;&#x90FD;&#x6709;a<sub>i</sub>=b<sub>i</sub>&#xFF0C;&#x5E76;&#x4E14;a<sub>L</sub>&gt;b<sub>L</sub>&#xFF0C;&#x5219;&#x8BA4;&#x4E3A;&#x5E8F;&#x5217;A&gt;&#x5E8F;&#x5217;B&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><ol type="1"><li>&#x56E0;&#x4E3A;&#x8981;&#x7528;&#x7684;&#x90FD;&#x662F;&#x6570;&#x7684;P&#x6B21;&#x5E42;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5148;&#x5C06;pow(i,P)&#x4FDD;&#x5B58;&#x4E0B;&#x6765;&#xFF0C;&#x5176;&#x4E2D;pow(i,P)&lt;=N&#x3002;</li><li>&#x7136;&#x540E;&#x5C31;&#x662F;DFS&#x8FDB;&#x884C;&#x641C;&#x7D22;&#x3002;</li><li>&#x5BF9;&#x4E8E;&#x6BCF;&#x6B21;&#x627E;&#x5230;&#x7684;K&#x4E2A;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x5176;P&#x6B21;&#x5E42;&#x7684;&#x548C;&#x4E5F;&#x4E3A;N&#x7684;&#x6570;&#xFF0C;&#x6C42;&#x51FA;&#x8FD9;&#x4E9B;&#x6570;&#x7684;&#x548C;&#xFF0C;&#x5BF9;&#x4E8E;&#x548C;&#x6700;&#x5927;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x4FDD;&#x7559;&#x4E3A;&#x7ED3;&#x679C;&#x3002;</li></ol><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, K, P, sum = <span class="number">0</span>, maxsum = <span class="number">0</span>, upbound;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v, temp, res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> cur)</span><span class="comment">//cur&#x8868;&#x793A;&#x76EE;&#x524D;&#x627E;&#x6253;&#x4E86;&#x591A;&#x5C11;&#x4E2A;&#x6570;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (cur==K)<span class="comment">//&#x627E;&#x5230;&#x4E86;K&#x4E2A;&#x6570;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (s==<span class="number">0</span>)<span class="comment">//s&#x8868;&#x793A;&#x76EE;&#x524D;&#x8FD8;&#x5269;&#x591A;&#x5C11;</span></span><br><span class="line">        {</span><br><span class="line">            sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp.size(); i++)</span><br><span class="line">                sum += temp[i];</span><br><span class="line">            <span class="keyword">if</span> (sum&gt;maxsum)<span class="comment">//sum&#x8868;&#x793A;&#x5F53;&#x524D;&#x5E8F;&#x5217;&#x5404;&#x4E2A;&#x6570;&#x7684;&#x548C;&#xFF0C;&#x53EA;&#x4FDD;&#x7559;&#x6700;&#x5927;&#x7684;</span></span><br><span class="line">            {</span><br><span class="line">                res = temp;</span><br><span class="line">                maxsum = sum;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    upbound = cur &gt; <span class="number">0</span> ? temp[cur - <span class="number">1</span>] : v.size() - <span class="number">1</span>;<span class="comment">//&#x7531;&#x4E8E;&#x662F;&#x5148;&#x627E;&#x5927;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5C31;&#x4ECE;&#x5927;&#x5411;&#x5C0F;&#x53BB;&#x627E;&#x3002;upbound&#x8868;&#x793A;&#x67E5;&#x627E;&#x7684;&#x4E0A;&#x754C;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = upbound; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (v[i] &lt;= s)</span><br><span class="line">        {</span><br><span class="line">            temp[cur] = i;</span><br><span class="line">            DFS(s - v[i], cur + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; K &gt;&gt; P;</span><br><span class="line">    v.push_back(<span class="number">0</span>); temp.resize(K);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; <span class="built_in">pow</span>(i, P) &lt;= N; i++)</span><br><span class="line">        v.push_back(<span class="built_in">pow</span>(i, P));</span><br><span class="line">    DFS(N, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (res.size() == K)<span class="comment">//&#x53EA;&#x6709;&#x627E;&#x5230;&#x4E86;K&#x4E2A;&#x6570;&#x624D;&#x8F93;&#x51FA;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; N &lt;&lt; <span class="string">&quot; = &quot;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d^%d&quot;</span>, res[<span class="number">0</span>], P);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; res.size(); i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; + %d^%d&quot;</span>, res[i], P);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Impossible&quot;</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">169</span> <span class="number">5</span> <span class="number">2</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">169</span> = <span class="number">6</span>^<span class="number">2</span> + <span class="number">6</span>^<span class="number">2</span> + <span class="number">6</span>^<span class="number">2</span> + <span class="number">6</span>^<span class="number">2</span> + <span class="number">5</span>^<span class="number">2</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">169</span> <span class="number">167</span> <span class="number">3</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">Impossible</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> DFS </tag>
            
            <tag> 记忆化搜索 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1102 Invert a Binary Tree (25)</title>
      <link href="//posts/9691409a/"/>
      <url>//posts/9691409a/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805365537882112" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x53CD;&#x8F6C;&#x4E8C;&#x53C9;&#x6811; <a id="more"></a> ## description The following is from Max Howell <span class="citation" data-cites="twitter">@twitter</span>:</p><p>Google: 90% of our engineers use the software you wrote (Homebrew), but you can&apos;t invert a binary tree on a whiteboard so fuck off.</p><p>Now it&apos;s your turn to prove that YOU CAN invert a binary tree!</p><h2 id="input-specification">Input Specification</h2><p>Each input file contains one test case. For each case, the first line gives a positive integer N (&lt;=10) which is the total number of nodes in the tree -- and hence the nodes are numbered from 0 to N-1. Then N lines follow, each corresponds to a node from 0 to N-1, and gives the indices of the left and right children of the node. If the child does not exist, a &quot;-&quot; will be put at the position. Any pair of children are separated by a space.</p><h2 id="output-specification">Output Specification</h2><p>For each test case, print in the first line the level-order, and then in the second line the in-order traversal sequences of the inverted tree. There must be exactly one space between any adjacent numbers, and no extra space at the end of the line. ## &#x9898;&#x76EE;&#x63CF;&#x8FF0; &#x73B0;&#x5728;&#x8F6E;&#x5230;&#x4F60;&#x6765;&#x8BC1;&#x660E;&#x4F60;&#x53EF;&#x4EE5;&#x53CD;&#x8F6C;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#x4E86;&#xFF01; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=10&#xFF09;&#xFF0C;&#x4ED6;&#x662F;&#x6811;&#x4E2D;&#x8282;&#x70B9;&#x7684;&#x603B;&#x6570;&#x3002;&#x8282;&#x70B9;&#x4ECE;0~N-1&#x7F16;&#x53F7;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x4ECE;0&#x5230;N-1&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x7ED9;&#x51FA;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x53F3;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x7D22;&#x5F15;&#xFF0C;&#x5982;&#x679C;&#x5B69;&#x5B50;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5C31;&#x5728;&#x8BE5;&#x4F4D;&#x7F6E;&#x653E;&#x7F6E;&apos;-&apos;&#x3002;&#x4E24;&#x4E2A;&#x5B69;&#x5B50;&#x4E4B;&#x95F4;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5C42;&#x6B21;&#x904D;&#x5386;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x7B2C;&#x4E8C;&#x884C;&#x4E2D;&#xFF0C;&#x8F93;&#x51FA;&#x8FD9;&#x68F5;&#x6811;&#x7684;&#x53CD;&#x8F6C;&#x7684;&#x5C42;&#x6B21;&#x904D;&#x5386;&#xFF0C;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF0C;&#x5E76;&#x4E14;&#x884C;&#x7684;&#x672B;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x989D;&#x5916;&#x7684;&#x7A7A;&#x683C;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. &#x627E;&#x5230;&#x8FD9;&#x68F5;&#x6811;&#x7684;&#x6839;&#x3002; 2. &#x5C42;&#x6B21;&#x904D;&#x5386;&#x6CA1;&#x5565;&#x597D;&#x8BF4;&#x7684;&#xFF0C;&#x4F7F;&#x7528;queue&#x961F;&#x5217;&#xFF0C;&#x4E00;&#x5C42;&#x5C42;&#x7684;&#x904D;&#x5386;&#x5C31;&#x597D;&#x4E86;&#x3002; 3. &#x5BF9;&#x4E8E;&#x53CD;&#x5411;&#x7684;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#xFF0C;&#x904D;&#x5386;&#x987A;&#x5E8F;&#x662F;&#x201C;<strong>&#x53F3;&#x5DE6;&#x6839;</strong>&#x201D;&#x3002;&#x9012;&#x5F52;&#x53BB;&#x5199;&#x5373;&#x53EF;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> lchild=<span class="number">-1</span>, rchild=<span class="number">-1</span>;</span><br><span class="line">}node;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; T;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; FindRoot;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">char</span> temp1, temp2;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">(<span class="keyword">int</span> root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (T[root].rchild != <span class="number">-1</span>)</span><br><span class="line">        InOrder(T[root].rchild);</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; root;</span><br><span class="line">    flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (T[root].lchild != <span class="number">-1</span>)</span><br><span class="line">        InOrder(T[root].lchild);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;que;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">levelOrder</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> root = que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; root;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (T[root].rchild != <span class="number">-1</span>)</span><br><span class="line">            que.push(T[root].rchild);</span><br><span class="line">        <span class="keyword">if</span> (T[root].lchild != <span class="number">-1</span>)</span><br><span class="line">            que.push(T[root].lchild);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    T.resize(N); FindRoot.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp1&gt;&gt;temp2;</span><br><span class="line">        <span class="keyword">if</span> (temp1 != <span class="string">&apos;-&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            T[i].lchild = temp1 - <span class="string">&apos;0&apos;</span>;</span><br><span class="line">            FindRoot[temp1 - <span class="string">&apos;0&apos;</span>] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (temp2 != <span class="string">&apos;-&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            T[i].rchild = temp2 - <span class="string">&apos;0&apos;</span>;</span><br><span class="line">            FindRoot[temp2 - <span class="string">&apos;0&apos;</span>] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> root;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (FindRoot[i] == <span class="literal">false</span>)</span><br><span class="line">        {</span><br><span class="line">            root = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">    que.push(root);</span><br><span class="line">    levelOrder();</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">    InOrder(root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">1</span> -</span><br><span class="line">- -</span><br><span class="line"><span class="number">0</span> -</span><br><span class="line"><span class="number">2</span> <span class="number">7</span></span><br><span class="line">- -</span><br><span class="line">- -</span><br><span class="line"><span class="number">5</span> -</span><br><span class="line"><span class="number">4</span> <span class="number">6</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">7</span> <span class="number">2</span> <span class="number">6</span> <span class="number">4</span> <span class="number">0</span> <span class="number">5</span> <span class="number">1</span></span><br><span class="line"><span class="number">6</span> <span class="number">5</span> <span class="number">7</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 二叉树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1095 Cars on Campus (30)</title>
      <link href="//posts/18272c90/"/>
      <url>//posts/18272c90/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6821;&#x56ED;&#x91CC;&#x7684;&#x6C7D;&#x8F66; <a id="more"></a> ## &#x8F93;&#x5165; ## &#x8F93;&#x51FA; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; ## Tips 1. &#x8FD9;&#x4E2A;&#x9898;&#x65F6;&#x95F4;&#x9650;&#x5236;&#x7684;&#x5F88;&#x7D27;&#xFF0C;&#x5C3D;&#x91CF;&#x7528;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#x4EE3;&#x66FF;string&#xFF0C;&#x4F7F;&#x7528;scanf&#x4EE3;&#x66FF;cin&#x3002; 2. &#x6700;&#x540E;&#x5728;&#x7ED9;&#x51FA;&#x65F6;&#x95F4;&#x7684;&#x65F6;&#x5019;&#x662F;&#x6309;&#x5347;&#x5E8F;&#x7ED9;&#x51FA;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x5229;&#x7528;&#x6B64;&#x6761;&#x4EF6;&#xFF0C;&#x7F29;&#x5C0F;&#x67E5;&#x627E;&#x8303;&#x56F4;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">char</span> ID[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> time = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">}node;</span><br><span class="line"><span class="keyword">int</span> N, K, f;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; input, car;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(a.ID, b.ID) != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">strcmp</span>(a.ID, b.ID) &lt; <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.time &lt; b.time;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.time &lt; b.time;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; K;</span><br><span class="line">    input.resize(N);</span><br><span class="line">    <span class="keyword">int</span> time2, h, m, s;</span><br><span class="line">    <span class="keyword">char</span> status[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %d:%d:%d %s\n&quot;</span>, input[i].ID, &amp;h, &amp;m, &amp;s, &amp;status);</span><br><span class="line">        input[i].time = h * <span class="number">3600</span> + m * <span class="number">60</span> + s;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(status, <span class="string">&quot;in&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">            input[i].flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> input[i].flag = <span class="number">-1</span>;<span class="comment">//&#x8FDB;&#x8FDB;&#x51FA;&#x51FA;</span></span><br><span class="line">    }</span><br><span class="line">    sort(input.begin(), input.end(), cmp1);</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; lasttime;</span><br><span class="line">    <span class="keyword">int</span> maxtime = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N - <span class="number">1</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(input[i].ID, input[i + <span class="number">1</span>].ID) == <span class="number">0</span> &amp;&amp; input[i].flag == <span class="number">1</span> &amp;&amp; input[i + <span class="number">1</span>].flag == <span class="number">-1</span>)</span><br><span class="line">        {</span><br><span class="line">            car.push_back(input[i]); car.push_back(input[i + <span class="number">1</span>]);</span><br><span class="line">            lasttime[input[i].ID] += (input[i + <span class="number">1</span>].time - input[i].time);</span><br><span class="line">            <span class="keyword">if</span> (maxtime &lt; lasttime[input[i].ID])</span><br><span class="line">                maxtime = lasttime[input[i].ID];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    sort(car.begin(), car.end(), cmp2);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; carInSchool(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; car.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">            carInSchool[i] += car[i].flag;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            carInSchool[i] = carInSchool[i - <span class="number">1</span>] + car[i].flag;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> temp,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d:%d:%d&quot;</span>, &amp;h, &amp;m, &amp;s);</span><br><span class="line">        time2 = h * <span class="number">3600</span> + m * <span class="number">60</span> + s;</span><br><span class="line">        <span class="keyword">for</span> (j=temp; j &lt; car.size(); j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (car[j].time &gt; time2)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, carInSchool[j - <span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (j == car.size() - <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; carInSchool[j] &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x4E86;&#xFF0C;&#x6709;&#x591A;&#x5C11;&#x8F66;&#x5C31;&#x7B97;&#x591A;&#x5C11;&#x8F86;&#x8F66;</span></span><br><span class="line">        }</span><br><span class="line">        temp = j;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = lasttime.begin(); i != lasttime.end(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (i-&gt;second == maxtime)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i-&gt;first &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d:%02d&quot;</span>, maxtime / <span class="number">3600</span>, (maxtime % <span class="number">3600</span>) / <span class="number">60</span>, maxtime % <span class="number">60</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">16</span> <span class="number">7</span></span><br><span class="line">JH007BD <span class="number">18</span>:<span class="number">00</span>:<span class="number">01</span> in</span><br><span class="line">ZD00001 <span class="number">11</span>:<span class="number">30</span>:<span class="number">08</span> out</span><br><span class="line">DB8888A <span class="number">13</span>:<span class="number">00</span>:<span class="number">00</span> out</span><br><span class="line">ZA3Q625 <span class="number">23</span>:<span class="number">59</span>:<span class="number">50</span> out</span><br><span class="line">ZA133CH <span class="number">10</span>:<span class="number">23</span>:<span class="number">00</span> in</span><br><span class="line">ZD00001 <span class="number">04</span>:<span class="number">09</span>:<span class="number">59</span> in</span><br><span class="line">JH007BD <span class="number">05</span>:<span class="number">09</span>:<span class="number">59</span> in</span><br><span class="line">ZA3Q625 <span class="number">11</span>:<span class="number">42</span>:<span class="number">01</span> out</span><br><span class="line">JH007BD <span class="number">05</span>:<span class="number">10</span>:<span class="number">33</span> in</span><br><span class="line">ZA3Q625 <span class="number">06</span>:<span class="number">30</span>:<span class="number">50</span> in</span><br><span class="line">JH007BD <span class="number">12</span>:<span class="number">23</span>:<span class="number">42</span> out</span><br><span class="line">ZA3Q625 <span class="number">23</span>:<span class="number">55</span>:<span class="number">00</span> in</span><br><span class="line">JH007BD <span class="number">12</span>:<span class="number">24</span>:<span class="number">23</span> out</span><br><span class="line">ZA133CH <span class="number">17</span>:<span class="number">11</span>:<span class="number">22</span> out</span><br><span class="line">JH007BD <span class="number">18</span>:<span class="number">07</span>:<span class="number">01</span> out</span><br><span class="line">DB8888A <span class="number">06</span>:<span class="number">30</span>:<span class="number">50</span> in</span><br><span class="line"><span class="number">05</span>:<span class="number">10</span>:<span class="number">00</span></span><br><span class="line"><span class="number">06</span>:<span class="number">30</span>:<span class="number">50</span></span><br><span class="line"><span class="number">11</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">23</span>:<span class="number">42</span></span><br><span class="line"><span class="number">14</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="number">18</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="number">23</span>:<span class="number">59</span>:<span class="number">00</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">JH007BD ZD00001 <span class="number">07</span>:<span class="number">20</span>:<span class="number">09</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
            <tag> Map </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1098 Insertion or Heap Sort (25)</title>
      <link href="//posts/45a528a9/"/>
      <url>//posts/45a528a9/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x63D2;&#x5165;&#x6392;&#x5E8F;&#x8FD8;&#x662F;&#x5806;&#x6392;&#x5E8F; <a id="more"></a> &#x7ED9;&#x5B9A;&#x521D;&#x8BD5;&#x5E8F;&#x5217;&#x548C;&#x7ECF;&#x8FC7;&#x82E5;&#x5E72;&#x8D9F;&#x6392;&#x5E8F;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x8FD9;&#x4E2A;&#x5E8F;&#x5217;&#x662F;&#x67D0;&#x79CD;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x51E0;&#x6B21;&#x8FED;&#x4EE3;&#x4E4B;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6C42;&#x8FD9;&#x662F;&#x54EA;&#x79CD;&#x6392;&#x5E8F;&#x65B9;&#x6CD5;&#x3002; ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x6B63;&#x6574;&#x6570;N(&lt;=100)&#x3002;&#x4E0B;&#x4E00;&#x884C;&#x7ED9;&#x51FA;N&#x4E2A;&#x6574;&#x6570;&#x4F5C;&#x4E3A;&#x521D;&#x8BD5;&#x5E8F;&#x5217;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x884C;&#x5305;&#x62EC;N&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x90E8;&#x5206;&#x6392;&#x5E8F;&#x5E8F;&#x5217;&#x3002;&#x5047;&#x8BBE;&#x662F;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#x3002;&#x6240;&#x6709;&#x6570;&#x5B57;&#x89C1;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5728;&#x7B2C;&#x4E00;&#x884C;&#x8F93;&#x51FA;&#x662F;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x8FD8;&#x662F;&#x5806;&#x6392;&#x5E8F;&#x3002;&#x5373;&quot;Insertion Sort&quot;&#x6216;&#x8005;&quot;Heap Sort&quot;&#x3002;&#x7136;&#x540E;&#x518D;&#x8FD0;&#x884C;&#x4E00;&#x6B21;&#x8FD9;&#x79CD;&#x6392;&#x5E8F;&#xFF0C;&#x5728;&#x7B2C;&#x4E8C;&#x884C;&#x8F93;&#x51FA;&#x518D;&#x8FD0;&#x884C;&#x4E00;&#x6B21;&#x4E4B;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x5E8F;&#x5217;&#x3002;</p><p>&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x7684;&#x7B54;&#x6848;&#x90FD;&#x662F;&#x552F;&#x4E00;&#x7684;&#xFF0C;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x76F8;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;PAT-A-1089 ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">101</span>], num_sort[<span class="number">101</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adjust</span><span class="params">(<span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (j&lt;=high)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (j + <span class="number">1</span> &lt;= high&amp;&amp;num_sort[j] &lt; num_sort[j + <span class="number">1</span>])</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> (num_sort[i] &lt; num_sort[j])</span><br><span class="line">        {</span><br><span class="line">            swap(num_sort[i], num_sort[j]);</span><br><span class="line">            i = j; j = i * <span class="number">2</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num_sort[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">bool</span> isInsert = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> temp = num_sort[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> range;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (temp &gt; num_sort[i])</span><br><span class="line">        {</span><br><span class="line">            range = i;</span><br><span class="line">            <span class="keyword">for</span> (; i &lt; N; i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (num[i] != num_sort[i])</span><br><span class="line">                {</span><br><span class="line">                    isInsert = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (i&lt;N)</span><br><span class="line">            temp = num_sort[i];</span><br><span class="line">        <span class="keyword">if</span> (isInsert == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (isInsert)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Insertion Sort&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        sort(num+<span class="number">1</span>, num + range + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; num[i];</span><br><span class="line">            <span class="keyword">if</span> (i != N)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Heap Sort&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">int</span> temp = N;</span><br><span class="line">        <span class="keyword">while</span> (temp &gt;= <span class="number">2</span> &amp;&amp; num_sort[temp] &gt; num_sort[temp - <span class="number">1</span>])</span><br><span class="line">            temp--;</span><br><span class="line">        swap(num_sort[<span class="number">1</span>], num_sort[temp]);</span><br><span class="line">        adjust(<span class="number">1</span>, temp - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; num_sort[i];</span><br><span class="line">            <span class="keyword">if</span> (i != N)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Insertion Sort</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line"><span class="number">6</span> <span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">0</span> <span class="number">3</span> <span class="number">2</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">Heap Sort</span><br><span class="line"><span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 插入排序 </tag>
            
            <tag> 堆排序 </tag>
            
            <tag> Sort </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1091 Acute Stroke (30)</title>
      <link href="//posts/228299b2/"/>
      <url>//posts/228299b2/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6025;&#x6027;&#x8111;&#x731D;&#x6B7B; <a id="more"></a> &#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x8111;&#x90E8;&#x626B;&#x63CF;&#x7684;&#x5207;&#x7247;&#x56FE;&#xFF0C;&#x6C42;&#x8D85;&#x51FA;&#x9608;&#x503C;&#x7684;&#x80BF;&#x7624;&#x7684;&#x603B;&#x4F53;&#x79EF;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x662F;4&#x4E2A;&#x6574;&#x6570;&#xFF1A;M&#xFF0C;N&#xFF0C;L&#xFF0C;T&#x3002;&#x5176;&#x4E2D;M&#x548C;N&#x8868;&#x793A;&#x5207;&#x7247;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5373;&#x5207;&#x7247;&#x5728;M*N&#x7684;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x6700;&#x5927;&#x5206;&#x8FA8;&#x7387;&#x4E3A;1286*128&#x3002;L&#xFF08;&lt;=60&#xFF09;&#x8868;&#x793A;&#x5207;&#x7247;&#x7684;&#x6570;&#x91CF;&#x3002;T&#x662F;&#x9608;&#x503C;&#x3002;</p><p>&#x7ED9;&#x51FA;L&#x4E2A;&#x5207;&#x7247;&#xFF0C;&#x5207;&#x7247;&#x7531;0&#x548C;1&#x7684;M*N&#x7684;&#x77E9;&#x9635;&#x8868;&#x793A;&#xFF0C;1&#x8868;&#x793A;&#x80BF;&#x7624;&#xFF0C;0&#x8868;&#x793A;&#x6B63;&#x5E38;&#x3002;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x8BA1;&#x7B97;1&#x7684;&#x4F53;&#x79EF;&#x6765;&#x6765;&#x5224;&#x65AD;&#x80BF;&#x7624;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x5927;&#x8111;&#x4E2D;&#x53EF;&#x80FD;&#x6709;&#x597D;&#x51E0;&#x4E2A;&#x80BF;&#x7624;&#xFF0C;&#x53EA;&#x8BA1;&#x7B97;&#x80BF;&#x7624;&#x5927;&#x5C0F;&#x8D85;&#x8FC7;&#x9608;&#x503C;&#x7684;&#x90E8;&#x5206;&#x3002;</p><p>&#x5224;&#x5B9A;&#x4E24;&#x4E2A;&#x70B9;&#x76F8;&#x8FDE;&#x7684;&#x4F9D;&#x636E;&#x662F;&#x4ED6;&#x4EEC;&#x5171;&#x4EAB;&#x516C;&#x5171;&#x8FB9;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x6709;6&#x4E2A;&#x7EA2;&#x8272;&#x50CF;&#x7D20;&#x8FDE;&#x63A5;&#x5230;&#x84DD;&#x8272;&#x50CF;&#x7D20;&#x3002; <img src="/posts/228299b2/1091.jpg" alt="1091"> ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x80BF;&#x7624;&#x7684;&#x603B;&#x4F53;&#x79EF;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x56FE;&#x7684;&#x904D;&#x5386;&#x3002; ## Tips 1. &#x5728;&#x6C42;&#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x5FAA;&#x73AF;&#xFF0C;&#x5C06;&#x4F4D;&#x79FB;&#x4FDD;&#x5B58;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x3002;&#x89C1;&#x540E;&#x8FB9;&#x7684;&#x4EE3;&#x7801;&#x3002; 2. DFS&#x4E0D;&#x80FD;&#x7528;&#x9012;&#x5F52;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x7206;&#x6808;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DFS&#xFF0C;&#x975E;&#x9012;&#x5F52;&#x5B9E;&#x73B0;&#xFF0C;&#x7528;&#x9012;&#x5F52;&#x4F1A;&#x7206;&#x6808;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Brain[<span class="number">1300</span>][<span class="number">130</span>][<span class="number">80</span>];</span><br><span class="line"><span class="keyword">int</span> M, N, L, T;</span><br><span class="line"><span class="keyword">int</span> search = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> neighbor[<span class="number">6</span>][<span class="number">3</span>] =</span><br><span class="line">{</span><br><span class="line"> {<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>},</span><br><span class="line"> {<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>},</span><br><span class="line"> {<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>},</span><br><span class="line"> {<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>},</span><br><span class="line"> {<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>},</span><br><span class="line"> {<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>}</span><br><span class="line">};</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"> <span class="keyword">int</span> x, y, z;</span><br><span class="line">}location;</span><br><span class="line"><span class="built_in">stack</span>&lt;location&gt; sta;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"> <span class="keyword">while</span> (!sta.empty())</span><br><span class="line"> {</span><br><span class="line">   location l = sta.top();sta.pop();</span><br><span class="line">   <span class="keyword">if</span> (Brain[l.x][l.y][l.z] == <span class="number">1</span>)</span><br><span class="line">   {</span><br><span class="line">     search++;</span><br><span class="line">     Brain[l.x][l.y][l.z] = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">     {</span><br><span class="line">       <span class="keyword">int</span> x1 = l.x + neighbor[i][<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">int</span> y1 = l.y + neighbor[i][<span class="number">1</span>];</span><br><span class="line">       <span class="keyword">int</span> z1 = l.z + neighbor[i][<span class="number">2</span>];</span><br><span class="line">       <span class="keyword">if</span> (x1 &gt;= <span class="number">0</span> &amp;&amp; x1&lt;M&amp;&amp;y1 &gt;= <span class="number">0</span> &amp;&amp; y1&lt;N&amp;&amp;z1 &gt;= <span class="number">0</span> &amp;&amp; z1&lt;L)</span><br><span class="line">       {</span><br><span class="line">         sta.push({ x1,y1,z1 });</span><br><span class="line">       }</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line"> }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"> <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; N &gt;&gt; L &gt;&gt; T;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line"> {</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">   {</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; N; k++)</span><br><span class="line">     {</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;Brain[j][k][i]);</span><br><span class="line">       <span class="comment">//cin &gt;&gt; Brain[j][k][i];</span></span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line"> }</span><br><span class="line"> <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line"> {</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">   {</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; N; k++)</span><br><span class="line">     {</span><br><span class="line">       <span class="keyword">if</span> (Brain[j][k][i] == <span class="number">1</span>)</span><br><span class="line">       {</span><br><span class="line">         search = <span class="number">0</span>;</span><br><span class="line">         sta.push({ j,k,i });</span><br><span class="line">         DFS();</span><br><span class="line">         <span class="keyword">if</span> (search&gt;=T)</span><br><span class="line">         {</span><br><span class="line">           res += search;</span><br><span class="line">         }</span><br><span class="line">       }</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line"> }</span><br><span class="line"> <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"> freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"> solution();</span><br><span class="line"> system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//BFS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"> <span class="keyword">int</span> x, y, z;</span><br><span class="line">}location;</span><br><span class="line"><span class="built_in">queue</span>&lt;location&gt; que;</span><br><span class="line"><span class="keyword">int</span> neighbor[<span class="number">3</span>][<span class="number">6</span>] =</span><br><span class="line">{</span><br><span class="line"> { <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> },</span><br><span class="line"> { <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span> },</span><br><span class="line"> { <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span> }</span><br><span class="line">};</span><br><span class="line"><span class="keyword">int</span> Brain[<span class="number">1300</span>][<span class="number">130</span>][<span class="number">80</span>];</span><br><span class="line"><span class="keyword">int</span> M, N, L, T, res=<span class="number">0</span>, temp=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"> <span class="keyword">while</span> (!que.empty())</span><br><span class="line"> {</span><br><span class="line">   location l = que.front(); que.pop();</span><br><span class="line">   <span class="keyword">if</span> (Brain[l.x][l.y][l.z] == <span class="number">1</span>)</span><br><span class="line">   {</span><br><span class="line">     temp++;</span><br><span class="line">     Brain[l.x][l.y][l.z] = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">     {</span><br><span class="line">       <span class="keyword">int</span> x1 = l.x + neighbor[<span class="number">0</span>][i];</span><br><span class="line">       <span class="keyword">int</span> y1 = l.y + neighbor[<span class="number">1</span>][i];</span><br><span class="line">       <span class="keyword">int</span> z1 = l.z + neighbor[<span class="number">2</span>][i];</span><br><span class="line">       <span class="keyword">if</span> (x1 &gt;= <span class="number">0</span> &amp;&amp; x1&lt;M&amp;&amp;y1 &gt;= <span class="number">0</span> &amp;&amp; y1&lt;N&amp;&amp;z1 &gt;= <span class="number">0</span> &amp;&amp; z1&lt;L)</span><br><span class="line">       {</span><br><span class="line">         que.push({ x1,y1,z1 });</span><br><span class="line">       }</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line"> }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"> <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; N &gt;&gt; L &gt;&gt; T;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line"> {</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">   {</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; N; k++)</span><br><span class="line">     {</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;Brain[j][k][i]);</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line"> }</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line"> {</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">   {</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; N; k++)</span><br><span class="line">     {</span><br><span class="line">       <span class="keyword">if</span> (Brain[j][k][i]==<span class="number">1</span>)</span><br><span class="line">       {</span><br><span class="line">         temp = <span class="number">0</span>;</span><br><span class="line">         que.push({ j,k,i });</span><br><span class="line">         BFS();</span><br><span class="line">         <span class="keyword">if</span> (temp&gt;=T)</span><br><span class="line">         {</span><br><span class="line">           res += temp;</span><br><span class="line">         }</span><br><span class="line">       }</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line"> }</span><br><span class="line"> <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"> freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"> solution();</span><br><span class="line"> system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">26</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> BFS </tag>
            
            <tag> DFS </tag>
            
            <tag> 图的遍历 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1087 All Roads Lead to Rome (30)</title>
      <link href="//posts/5777fec1/"/>
      <url>//posts/5777fec1/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6761;&#x6761;&#x5927;&#x8DEF;&#x901A;&#x7F57;&#x9A6C; <a id="more"></a> &#x6709;&#x597D;&#x591A;&#x901A;&#x5F80;&#x7F57;&#x9A6C;&#x7684;&#x7EBF;&#x8DEF;&#xFF0C;&#x8981;&#x627E;&#x51FA;&#x6765;&#x4E00;&#x6761;&#x6210;&#x672C;&#x6700;&#x4F4E;&#x7684;&#x7EBF;&#x8DEF;&#xFF0C;&#x540C;&#x65F6;&#x83B7;&#x5F97;&#x6700;&#x5927;&#x7684;&#x5FEB;&#x4E50;&#x503C;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;2 &lt;= N &lt;= 200&#xFF09;&#xFF0C;&#x8868;&#x793A;&#x57CE;&#x5E02;&#x7684;&#x6570;&#x91CF;&#x3002;&#x548C;K&#xFF0C;&#x57CE;&#x5E02;&#x5BF9;&#x4E4B;&#x95F4;&#x7684;&#x8DEF;&#x7EBF;&#x603B;&#x6570;&#x3002;&#x63A5;&#x7740;&#x662F;&#x8D77;&#x59CB;&#x57CE;&#x5E02;&#x7684;&#x540D;&#x5B57;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x7684;N-1&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x57CE;&#x5E02;&#x7684;&#x540D;&#x79F0;&#x548C;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x51FA;&#x4E86;&#x51FA;&#x53D1;&#x57CE;&#x5E02;&#x4E4B;&#x5916;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE;&#x8BE5;&#x57CE;&#x5E02;&#x83B7;&#x5F97;&#x7684;&#x5E78;&#x798F;&#x6307;&#x6570;&#x3002;</p><p>&#x7136;&#x540E;&#x662F;K&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4EE5;&#x201C;&#x57CE;&#x5E02;&#x540D;&#xFF0C;&#x57CE;&#x5E02;&#x540D;&#xFF0C;&#x82B1;&#x8D39;&#x201D;&#x7684;&#x683C;&#x5F0F;&#x63CF;&#x8FF0;&#x8DEF;&#x7EBF;&#x3002; &#x8FD9;&#x91CC;&#x7684;&#x57CE;&#x5E02;&#x540D;&#x79F0;&#x662F;&#x4E00;&#x4E2A;&#x7531;3&#x4E2A;&#x5927;&#x5199;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x7EC4;&#x6210;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6700;&#x7EC8;&#x76EE;&#x7684;&#x5730;&#x662F;&#x4EE3;&#x8868;&#x7F57;&#x9A6C;&#x7684;ROM ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x8981;&#x6C42;&#x4EE5;&#x6700;&#x4F4E;&#x7684;&#x6210;&#x672C;&#x627E;&#x5230;&#x8DEF;&#x7EBF;&#x3002;&#x5982;&#x679C;&#x8DEF;&#x7EBF;&#x4E0D;&#x552F;&#x4E00;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x5177;&#x6709;&#x6700;&#x5927;&#x5E78;&#x798F;&#x6307;&#x6570;&#x7684;&#x8DEF;&#x7EBF;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x4E0D;&#x552F;&#x4E00;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x5177;&#x6709;&#x6700;&#x5927;&#x5E73;&#x5747;&#x5E78;&#x798F;&#x6307;&#x6570;&#x7684;&#x8DEF;&#x7EBF;&#x3002; &#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x4FDD;&#x8BC1;&#x6700;&#x540E;&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x7ED3;&#x679C;&#x3002;</p><p>&#x5728;&#x8F93;&#x51FA;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x8F93;&#x51FA;4&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x63A8;&#x8350;&#x8DEF;&#x7EBF;&#x4E2D;&#x6210;&#x672C;&#x6700;&#x4F4E;&#x7684;&#xFF0C;&#x4E0D;&#x540C;&#x8DEF;&#x7EBF;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x6210;&#x672C;&#xFF0C;&#x5E78;&#x798F;&#x6307;&#x6570;&#x548C;&#x5E73;&#x5747;&#x5E78;&#x798F;&#x6307;&#x6570;&#xFF08;&#x4EC5;&#x9650;&#x6574;&#x6570;&#x90E8;&#x5206;&#xFF09;&#x3002; &#x7136;&#x540E;&#x518D;&#x4E0B;&#x4E00;&#x884C;&#x4E2D;&#xFF0C;&#x8F93;&#x51FA;&#x683C;&#x5F0F;&#x4E3A;&#x201C;City1-&gt; City2 - &gt; ...-&gt; ROM&#x201D;&#x7684;&#x8DEF;&#x7EBF;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x8FD9;&#x4E2A;&#x9898;&#x548C;1003&#x7C7B;&#x4F3C;&#x3002; ## Tips Dij&#x6C42;&#x6700;&#x77ED;&#x8DEF;&#x5F84;+DFS&#xFF0C;DFS&#x4ECE;&#x540E;&#x5F80;&#x524D;&#x904D;&#x5386;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 99999999</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">201</span>][<span class="number">201</span>], weight[<span class="number">201</span>], dis[<span class="number">201</span>];</span><br><span class="line"><span class="keyword">bool</span> visit[<span class="number">201</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pre[<span class="number">201</span>], temppath, path;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m1;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;m2;</span><br><span class="line"><span class="keyword">int</span> maxvalue = <span class="number">0</span>, mindepth = <span class="number">0</span>, cntpath = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> maxavg;</span><br><span class="line"><span class="keyword">int</span> N, K;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    temppath.push_back(v);</span><br><span class="line">    <span class="keyword">if</span> (v==<span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temppath.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            value += weight[temppath[i]];<span class="comment">//&#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x6743;&#x91CD;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">double</span> tempavg = <span class="number">1.0</span>*value / (temppath.size() - <span class="number">1</span>);<span class="comment">//&#x4E0D;&#x7B97;&#x7F57;&#x9A6C;&#x57CE;&#x7684;</span></span><br><span class="line">        <span class="keyword">if</span> (value&gt;maxvalue)</span><br><span class="line">        {</span><br><span class="line">            maxvalue = value; maxavg = tempavg; path = temppath;<span class="comment">//&#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x6700;&#x5927;&#x503C;&#x4E86;&#x89E3;&#x4E00;&#x54C8;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (value==maxvalue&amp;&amp;tempavg&gt;maxavg)</span><br><span class="line">        {</span><br><span class="line">            maxavg = tempavg; path = temppath;</span><br><span class="line">        }</span><br><span class="line">        temppath.pop_back();</span><br><span class="line">        cntpath++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pre[v].size(); i++)</span><br><span class="line">    {</span><br><span class="line">        DFS(pre[v][i]);</span><br><span class="line">    }</span><br><span class="line">    temppath.pop_back();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    fill(e[<span class="number">0</span>], e[<span class="number">0</span>] + <span class="number">201</span> * <span class="number">201</span>, INF);</span><br><span class="line">    fill(dis, dis + <span class="number">201</span>, INF);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; K;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">    m1[str] = <span class="number">1</span>;</span><br><span class="line">    m2[<span class="number">1</span>] = str;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; str &gt;&gt; weight[i + <span class="number">1</span>];</span><br><span class="line">        m1[str] = i + <span class="number">1</span>;</span><br><span class="line">        m2[i + <span class="number">1</span>] = str;<span class="comment">//&#x5B58;&#x50A8;&#x6620;&#x5C04;&#x5173;&#x7CFB;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//input cost information</span></span><br><span class="line">    <span class="built_in">string</span> a, b;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; temp;</span><br><span class="line">        e[m1[a]][m1[b]] = temp;</span><br><span class="line">        e[m1[b]][m1[a]] = temp;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//dij&#x7B97;&#x6CD5;</span></span><br><span class="line">    dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> u = <span class="number">-1</span>,mindis = INF;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= N; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (visit[j]==<span class="literal">false</span>&amp;&amp;dis[j]&lt;mindis)</span><br><span class="line">            {</span><br><span class="line">                u = j; mindis = dis[j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (u == <span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">        visit[u] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> v = <span class="number">1</span>; v &lt;= N; v++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (visit[v] == <span class="literal">false</span> &amp;&amp; e[u][v] != INF)</span><br><span class="line">            {<span class="comment">//dij</span></span><br><span class="line">                <span class="keyword">if</span> (dis[u] + e[u][v] &lt; dis[v])</span><br><span class="line">                {</span><br><span class="line">                    dis[v] = dis[u] + e[u][v];</span><br><span class="line">                    pre[v].clear();</span><br><span class="line">                    pre[v].push_back(u);<span class="comment">//&#x8BB0;&#x5F55;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F84;</span></span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (dis[v] == dis[u] + e[u][v])</span><br><span class="line">                {</span><br><span class="line">                    pre[v].push_back(u);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> rom = m1[<span class="string">&quot;ROM&quot;</span>];</span><br><span class="line">    DFS(rom);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cntpath &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; dis[rom] &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; maxvalue &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; (<span class="keyword">int</span>)maxavg &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = path.size()<span class="number">-1</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; m2[path[i]] &lt;&lt; <span class="string">&quot;-&gt;&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ROM&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">6</span> <span class="number">7</span> HZH</span><br><span class="line">ROM <span class="number">100</span></span><br><span class="line">PKN <span class="number">40</span></span><br><span class="line">GDN <span class="number">55</span></span><br><span class="line">PRS <span class="number">95</span></span><br><span class="line">BLN <span class="number">80</span></span><br><span class="line">ROM GDN <span class="number">1</span></span><br><span class="line">BLN ROM <span class="number">1</span></span><br><span class="line">HZH PKN <span class="number">1</span></span><br><span class="line">PRS ROM <span class="number">2</span></span><br><span class="line">BLN HZH <span class="number">2</span></span><br><span class="line">PKN GDN <span class="number">1</span></span><br><span class="line">HZH PRS <span class="number">1</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">3</span> <span class="number">195</span> <span class="number">97</span></span><br><span class="line">HZH-&gt;PRS-&gt;ROM</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> Dijkstra </tag>
            
            <tag> DFS </tag>
            
            <tag> 最短路径 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1101 Quick Sort (25)</title>
      <link href="//posts/4a5f9413/"/>
      <url>//posts/4a5f9413/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805366343188480" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5FEB;&#x901F;&#x6392;&#x5E8F; <a id="more"></a> &#x8457;&#x540D;&#x7684;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x4E3A;partition&#x7684;&#x7ECF;&#x5178;&#x8FC7;&#x7A0B;&#x3002;&#x5728;&#x6B64;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x901A;&#x5E38;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x4F5C;&#x4E3A;&#x67A2;&#x8F74;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x5C0F;&#x4E8E;&#x67A2;&#x8F74;&#x7684;&#x5143;&#x7D20;&#x5411;&#x5DE6;&#x79FB;&#x52A8;&#xFF0C;&#x800C;&#x5927;&#x4E8E;&#x67A2;&#x8F74;&#x7684;&#x5143;&#x7D20;&#x5411;&#x53F3;&#x79FB;&#x52A8;&#x3002;&#x5728;&#x7B97;&#x6CD5;&#x8FD0;&#x884C;&#x540E;&#xFF0C;&#x7ED9;&#x5B9A;N&#x4E2A;<strong>&#x4E0D;&#x540C;</strong>&#x7684;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x6C42;&#x8FD9;N&#x4E2A;&#x6570;&#x4E2D;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x53EF;&#x4EE5;&#x9009;&#x5B9A;&#x4F5C;&#x4E3A;&#x67A2;&#x8F74;&#xFF1F; &#x4F8B;&#x5982;&#xFF0C;&#x7ED9;&#x5B9A;N = 5&#x548C;&#x6570;&#x5B57;1,3,2,4&#x548C;5.&#x6211;&#x4EEC;&#x6709;&#xFF1A;</p><ol type="1"><li>1&#x53EF;&#x4EE5;&#x662F;&#x67A2;&#x8F74;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x7684;&#x5DE6;&#x8FB9;&#x6CA1;&#x6709;&#x5143;&#x7D20;&#xFF0C;&#x53F3;&#x8FB9;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x6BD4;&#x5B83;&#x5927;;</li><li>3&#x4E0D;&#x80FD;&#x662F;&#x67A2;&#x8F74;&#xFF0C;&#x56E0;&#x4E3A;&#x867D;&#x7136;&#x5B83;&#x5DE6;&#x8FB9;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x8F83;&#x5C0F;&#xFF0C;&#x4F46;&#x5B83;&#x53F3;&#x8FB9;&#x7684;&#x6570;&#x5B57;2&#x5C0F;&#x4E8E;&#x5B83;;</li><li>2&#x4E0D;&#x80FD;&#x662F;&#x67A2;&#x8F74;&#xFF0C;&#x56E0;&#x4E3A;&#x867D;&#x7136;&#x5B83;&#x53F3;&#x8FB9;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x8F83;&#x5927;&#xFF0C;&#x4F46;&#x5B83;&#x5DE6;&#x8FB9;&#x7684;&#x6570;&#x5B57;3&#x5927;&#x4E8E;&#x5B83;;</li></ol><p>&#x5E76;&#x4E14;&#x7531;&#x4E8E;&#x7C7B;&#x4F3C;&#x7684;&#x539F;&#x56E0;&#xFF0C;4&#x548C;5&#x4E5F;&#x53EF;&#x80FD;&#x6210;&#x4E3A;&#x67A2;&#x8F74;&#x3002;</p><p>&#x56E0;&#x6B64;&#x603B;&#x5171;&#x6709;3&#x4E2A;&#x53EF;&#x4EE5;&#x9009;&#x4F5C;&#x67A2;&#x8F74;&#x7684;&#x70B9;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#x3002;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=10<sup>5</sup>&#xFF09;&#x3002;&#x7136;&#x540E;&#x4E0B;&#x4E00;&#x884C;&#x662F;N&#x4E2A;&#x4E0D;&#x5927;&#x4E8E;10<sup>9</sup>&#x7684;&#x6B63;&#x6574;&#x6570;&#x3002;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5728;&#x7B2C;&#x4E00;&#x884C;&#x8F93;&#x51FA;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x67A2;&#x8F74;&#x7684;&#x5143;&#x7D20;&#x7684;&#x6570;&#x91CF;&#x3002;&#x7136;&#x540E;&#x5728;&#x4E0B;&#x4E00;&#x884C;&#x4E2D;&#x6309;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#x8FD9;&#x4E9B;&#x5143;&#x7D20;&#xFF0C;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF0C;&#x6BCF;&#x884C;&#x672B;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7684;&#x7A7A;&#x683C;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x6709;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x6027;&#x8D28;&#xFF0C;&#x6BCF;&#x4E2A;&#x67A2;&#x8F74;&#x5143;&#x7D20;&#x5728;&#x8FD9;&#x6B21;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#xFF0C;&#x90FD;&#x4F1A;&#x4E3A;&#x5B83;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x5C31;&#x662F;&#x6392;&#x5E8F;&#x5168;&#x90E8;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#xFF0C;&#x5B83;&#x6240;&#x5728;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x5373;&#x6BCF;&#x8D9F;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#xFF0C;&#x81F3;&#x5C11;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><p>&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x601D;&#x8DEF;&#xFF0C;&#x6211;&#x4EEC;&#x7528;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x5B58;&#x50A8;&#x5C06;&#x8FD9;&#x4E9B;&#x6570;&#x5B57;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x770B;&#x6392;&#x5E8F;&#x524D;&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x5426;&#x7B49;&#x4E8E;&#x6392;&#x5E8F;&#x540E;&#x7684;&#x4F4D;&#x7F6E;&#x3002; ## Tips &#x4E3A;&#x4E86;&#x907F;&#x514D;&#x4F8B;&#x5982; 1 4 3 2 5 &#x4E2D;&#xFF0C;&#x5BF9; 3 &#x7684;&#x8BEF;&#x5224;&#xFF0C;&#x9700;&#x8981;&#x518D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5224;&#x65AD;&#x6761;&#x4EF6;&#xFF0C;&#x5224;&#x65AD; 3 &#x662F;&#x4E0D;&#x662F;&#x4ECE;&#x6700;&#x5F00;&#x59CB;&#x5230;&#x73B0;&#x5728;&#x6700;&#x5927;&#x7684;&#x6570;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp1, num, res;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N; num.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[i]);</span><br><span class="line">    temp1 = num;</span><br><span class="line">    sort(temp1.begin(), temp1.end());</span><br><span class="line">    <span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (num[i] == temp1[i] &amp;&amp; num[i] &gt; maxn)</span><br><span class="line">            res.push_back(num[i]);</span><br><span class="line">        maxn = max(maxn, num[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res[i];</span><br><span class="line">        <span class="keyword">if</span> (i != res.size() - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 快速排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1100 Mars Numbers (20)</title>
      <link href="//posts/463096a8/"/>
      <url>//posts/463096a8/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x706B;&#x661F;&#x4E0A;&#x7684;&#x6570;&#x5B57; <a id="more"></a> &#x706B;&#x661F;&#x4EBA;&#x4F7F;&#x7528;13&#x8FDB;&#x5236;&#x3002; - &#x5730;&#x7403;&#x4E0A;&#x7684;&#x96F6;&#x70B9;&#x5728;&#x706B;&#x661F;&#x4E0A;&#x88AB;&#x79F0;&#x4E3A;&#x201C;tret&#x201D;&#x3002; - &#x5730;&#x7403;&#x4E0A;&#x7684;&#x6570;&#x5B57;1&#x5230;12&#x5728;&#x706B;&#x661F;&#x4E0A;&#x5206;&#x522B;&#x88AB;&#x79F0;&#x4E3A;&#x201C;jan&#xFF0C;feb&#xFF0C;mar&#xFF0C;apr&#xFF0C;may&#xFF0C;jun&#xFF0C;jly&#xFF0C;aug&#xFF0C;sep&#xFF0C;oct&#xFF0C;nov&#xFF0C;dec&#x201D;&#x3002; - &#x5BF9;&#x4E8E;&#x66F4;&#x9AD8;&#x4E00;&#x4F4D;&#xFF0C;&#x706B;&#x661F;&#x4EBA;&#x5C06;12&#x4E2A;&#x6570;&#x5B57;&#x5206;&#x522B;&#x53EB;&#x505A;&#x201C;tam&#xFF0C;hel&#xFF0C;maa&#xFF0C;huh&#xFF0C;tou&#xFF0C;kes&#xFF0C;hei&#xFF0C;elo&#xFF0C;syy&#xFF0C;lok&#xFF0C;mer&#xFF0C;jou&#x201D;&#x3002;</p><p>&#x4F8B;&#x5982;&#xFF0C;&#x5730;&#x7403;&#x4E0A;&#x7684;29&#x5728;&#x706B;&#x661F;&#x4E0A;&#x88AB;&#x79F0;&#x4E3A;&#x201C;hel mar&#x201D;; &#x706B;&#x661F;&#x4E0A;&#x7684;&#x201C;elo nov&#x201D;&#x5BF9;&#x5E94;&#x5730;&#x7403;&#x4E0A;&#x7684;115&#x3002;&#x4E3A;&#x4E86;&#x5E2E;&#x52A9;&#x8FD9;&#x4E24;&#x4E2A;&#x884C;&#x661F;&#x4E4B;&#x95F4;&#x4EBA;&#x4EEC;&#x7684;&#x4EA4;&#x6D41;&#xFF0C;&#x8981;&#x6C42;&#x5199;&#x51FA;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x7528;&#x4E8E;&#x5730;&#x7403;&#x548C;&#x706B;&#x661F;&#x6570;&#x5B57;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x7684;&#x76F8;&#x4E92;&#x8F6C;&#x6362;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#x3002;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;100&#xFF09;&#x3002;&#x7136;&#x540E;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x6709;&#x4E00;&#x4E2A;[0,169)&#x4E2D;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x4EE5;&#x5730;&#x7403;&#x6570;&#x5B57;&#x6216;&#x706B;&#x661F;&#x6570;&#x5B57;&#x7684;&#x5F62;&#x5F0F;&#x7ED9;&#x51FA;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x6253;&#x5370;&#x53E6;&#x4E00;&#x79CD;&#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x76F8;&#x5E94;&#x6570;&#x5B57;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x4F7F;&#x7528;Map&#x5B58;&#x50A8;string to int&#x7684;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#x3002;&#x4F7F;&#x7528;&#x6570;&#x7EC4;&#x5B58;&#x50A8;int to string&#x7684;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; gewei, shiwei;</span><br><span class="line"><span class="built_in">string</span> a[<span class="number">13</span>] = { <span class="string">&quot;tret&quot;</span>, <span class="string">&quot;jan&quot;</span>, <span class="string">&quot;feb&quot;</span>, <span class="string">&quot;mar&quot;</span>, <span class="string">&quot;apr&quot;</span>, <span class="string">&quot;may&quot;</span>, <span class="string">&quot;jun&quot;</span>, <span class="string">&quot;jly&quot;</span>, <span class="string">&quot;aug&quot;</span>, <span class="string">&quot;sep&quot;</span>, <span class="string">&quot;oct&quot;</span>,<span class="string">&quot;nov&quot;</span>, <span class="string">&quot;dec&quot;</span> };</span><br><span class="line"><span class="built_in">string</span> b[<span class="number">13</span>] = { <span class="string">&quot;&quot;</span>, <span class="string">&quot;tam&quot;</span>, <span class="string">&quot;hel&quot;</span>, <span class="string">&quot;maa&quot;</span>, <span class="string">&quot;huh&quot;</span>, <span class="string">&quot;tou&quot;</span>, <span class="string">&quot;kes&quot;</span>, <span class="string">&quot;hei&quot;</span>, <span class="string">&quot;elo&quot;</span>, <span class="string">&quot;syy&quot;</span>,<span class="string">&quot;lok&quot;</span>, <span class="string">&quot;mer&quot;</span>, <span class="string">&quot;jou&quot;</span> };</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">13</span>; i++)</span><br><span class="line">        gewei[a[i]] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">13</span>; i++)</span><br><span class="line">        shiwei[b[i]] = i;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f1</span><span class="params">(<span class="built_in">string</span> str)</span><span class="comment">//&#x8F93;&#x5165;&#x7684;&#x662F;&#x6570;&#x5B57;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> temp = stoi(str);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (temp / <span class="number">13</span> &gt; <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; b[temp / <span class="number">13</span>];</span><br><span class="line">        <span class="keyword">if</span> (temp % <span class="number">13</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; a[temp % <span class="number">13</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a[temp % <span class="number">13</span>];</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f2</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (str.length() == <span class="number">4</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (str.length() == <span class="number">3</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (gewei.count(str))</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; gewei[str];</span><br><span class="line">        <span class="keyword">if</span> (shiwei.count(str))</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; shiwei[str]* <span class="number">13</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">string</span> s1 = str.substr(<span class="number">0</span>, <span class="number">3</span>), s2 = str.substr(<span class="number">4</span>, <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">int</span> temp = shiwei[s1] * <span class="number">13</span> + gewei[s2];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; temp;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> N,temp;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N; getchar();</span><br><span class="line">    <span class="built_in">string</span> num;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        getline(<span class="built_in">cin</span>, num);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(num[<span class="number">0</span>]))<span class="comment">//&#x662F;&#x4E2A;&#x6570;&#x5B57;</span></span><br><span class="line">            f1(num);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            f2(num);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">29</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">elo nov</span><br><span class="line">tam</span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line">hel mar</span><br><span class="line">may</span><br><span class="line"><span class="number">115</span></span><br><span class="line"><span class="number">13</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> C++ STL </tag>
            
            <tag> 字符串处理 </tag>
            
            <tag> Map </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1097 Deduplication on a Linked List (25)</title>
      <link href="//posts/b2a66fb6/"/>
      <url>//posts/b2a66fb6/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5220;&#x9664;&#x94FE;&#x8868;&#x4E0A;&#x7684;&#x91CD;&#x590D;&#x6570;&#x636E; <a id="more"></a> &#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5E26;&#x6709;&#x6574;&#x6570;&#x952E;&#x503C;&#x7684;&#x5355;&#x94FE;&#x8868;L&#xFF0C;&#x8981;&#x6C42;&#x5220;&#x9664;&#x90A3;&#x4E9B;&#x952E;&#x503C;&#x7684;&#x7EDD;&#x5BF9;&#x503C;&#x91CD;&#x590D;&#x7684;&#x8282;&#x70B9;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x503C;K&#xFF0C;&#x4EC5;&#x4FDD;&#x7559;&#x8282;&#x70B9;&#x7684;&#x952E;&#x7684;&#x503C;&#x6216;&#x7EDD;&#x5BF9;&#x503C;&#x7B49;&#x4E8E;K&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x6240;&#x6709;&#x5DF2;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x5FC5;&#x987B;&#x4FDD;&#x5B58;&#x5728;&#x5355;&#x72EC;&#x7684;&#x5217;&#x8868;&#x4E2D;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;L&#x4E3A;21&#x2192;-15&#x2192;-15&#x2192;-7&#x2192;15&#xFF0C;&#x5219;&#x5FC5;&#x987B;&#x8F93;&#x51FA;21&#x2192;-15&#x2192;-7&#xFF0C;&#x5E76;&#x5220;&#x9664;&#x94FE;&#x8868;-15&#x2192;15&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF1A;&#x7B2C;&#x4E00;&#x884C;&#x4E2D;&#x5206;&#x522B;&#x662F;&#xFF1A;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=10<sup>5</sup>&#xFF09;&#x8868;&#x793A;&#x8282;&#x70B9;&#x7684;&#x603B;&#x6570;&#x3002;&#x8282;&#x70B9;&#x7684;&#x5730;&#x5740;&#x662F;5&#x4F4D;&#x975E;&#x8D1F;&#x6574;&#x6570;&#xFF0C;NULL&#x7531;-1&#x8868;&#x793A;&#x3002;</p><p>&#x7136;&#x540E;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4EE5;&#x5982;&#x4E0B;&#x683C;&#x5F0F;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF1A;</p><p>&#x5730;&#x5740; &#x952E;&#x503C; &#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;</p><p>&#x5176;&#x4E2D;&#x952E;&#x503C;&#x4E3A;&#x7EDD;&#x5BF9;&#x503C;&#x4E0D;&#x8D85;&#x8FC7;10<sup>4</sup>&#x7684;&#x6574;&#x6570;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x9996;&#x5148;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x94FE;&#x8868;&#xFF0C;&#x7136;&#x540E;&#x8F93;&#x51FA;&#x5220;&#x9664;&#x7684;&#x94FE;&#x8868;&#x3002;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5360;&#x7528;&#xFF0C;&#x5E76;&#x4EE5;&#x4E0E;&#x8F93;&#x5165;&#x4E2D;&#x76F8;&#x540C;&#x7684;&#x683C;&#x5F0F;&#x6253;&#x5370;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x8003;&#x5BDF;&#x7528;&#x7A7A;&#x95F4;&#x6362;&#x65F6;&#x95F4;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> key;</span><br><span class="line">    <span class="keyword">int</span> next;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">}node;</span><br><span class="line"></span><br><span class="line">node saveLink[<span class="number">100001</span>],deleLink[<span class="number">100001</span>],inputLink[<span class="number">100001</span>];</span><br><span class="line"><span class="keyword">bool</span> flag[<span class="number">10001</span>] = { <span class="number">0</span> };</span><br><span class="line"><span class="keyword">int</span> N, addr, first;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; first &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; addr;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; inputLink[addr].key &gt;&gt; inputLink[addr].next;</span><br><span class="line">        inputLink[addr].id = addr;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> save=<span class="number">0</span>,dele=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = first; i!=<span class="number">-1</span>; i=inputLink[i].next)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (!flag[<span class="built_in">abs</span>(inputLink[i].key)])</span><br><span class="line">        {</span><br><span class="line">            saveLink[save++] = inputLink[i];</span><br><span class="line">            flag[<span class="built_in">abs</span>(inputLink[i].key)] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            deleLink[dele++] = inputLink[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; save<span class="number">-1</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%05d %d %05d\n&quot;</span>, saveLink[i].id, saveLink[i].key, saveLink[i + <span class="number">1</span>].id);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%05d %d -1\n&quot;</span>, saveLink[save - <span class="number">1</span>].id, saveLink[save - <span class="number">1</span>].key);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dele<span class="number">-1</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%05d %d %05d\n&quot;</span>, deleLink[i].id, deleLink[i].key, deleLink[i + <span class="number">1</span>].id);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(dele&gt;<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%05d %d -1\n&quot;</span>, deleLink[dele - <span class="number">1</span>].id, deleLink[dele - <span class="number">1</span>].key);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">00100</span> <span class="number">5</span></span><br><span class="line"><span class="number">99999</span> <span class="number">-7</span> <span class="number">87654</span></span><br><span class="line"><span class="number">23854</span> <span class="number">-15</span> <span class="number">00000</span></span><br><span class="line"><span class="number">87654</span> <span class="number">15</span> <span class="number">-1</span></span><br><span class="line"><span class="number">00000</span> <span class="number">-15</span> <span class="number">99999</span></span><br><span class="line"><span class="number">00100</span> <span class="number">21</span> <span class="number">23854</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">00100</span> <span class="number">21</span> <span class="number">23854</span></span><br><span class="line"><span class="number">23854</span> <span class="number">-15</span> <span class="number">99999</span></span><br><span class="line"><span class="number">99999</span> <span class="number">-7</span> <span class="number">-1</span></span><br><span class="line"><span class="number">00000</span> <span class="number">-15</span> <span class="number">87654</span></span><br><span class="line"><span class="number">87654</span> <span class="number">15</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1096 Consecutive Factors (20)</title>
      <link href="//posts/1596ce8c/"/>
      <url>//posts/1596ce8c/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x8FDE;&#x7EED;&#x7684;&#x56E0;&#x6570; <a id="more"></a> &#x5728;&#x6B63;&#x6574;&#x6570;N&#x7684;&#x6240;&#x6709;&#x56E0;&#x5B50;&#x4E2D;&#xFF0C;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x51E0;&#x4E2A;&#x8FDE;&#x7EED;&#x7684;&#x6570;&#x5B57;&#x3002;&#x4F8B;&#x5982;&#xFF0C;630&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;3<em>5</em>6*7&#xFF0C;&#x5176;&#x4E2D;5,6,7&#x662F;&#x4E09;&#x4E2A;&#x8FDE;&#x7EED;&#x7684;&#x6570;&#x5B57;&#x3002;&#x73B0;&#x5728;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x6C42;&#x8FD9;&#x4E2A;&#x6811;&#x7684;&#x8FDE;&#x7EED;&#x56E0;&#x5B50;&#x7684;&#x6700;&#x5927;&#x6570;&#x91CF;&#xFF0C;&#x5E76;&#x5217;&#x51FA;&#x8FDE;&#x7EED;&#x56E0;&#x5B50;&#x7684;&#x6700;&#x5C0F;&#x5E8F;&#x5217;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7ED9;&#x51FA;&#x6B63;&#x6574;&#x6570;N&#xFF08;1&lt;N&lt;2<sup>31</sup>&#xFF09;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x6253;&#x5370;&#x6700;&#x5927;&#x7684;&#x8FDE;&#x7EED;&#x56E0;&#x5B50;&#x6570;&#x3002;&#x7136;&#x540E;&#x5728;&#x7B2C;&#x4E8C;&#x884C;&#x4E2D;&#xFF0C;&#x4EE5;&#x201C;&#x56E0;&#x5B50;1*&#x56E0;&#x5B50;2*.....*&#x56E0;&#x5B50;k&#x201D;&#x7684;&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#x8FDE;&#x7EED;&#x56E0;&#x5B50;&#x7684;&#x6700;&#x5C0F;&#x5E8F;&#x5217;&#xFF0C;&#x5176;&#x4E2D;&#x56E0;&#x5B50;&#x6309;&#x9012;&#x589E;&#x987A;&#x5E8F;&#x7ED9;&#x51FA;&#xFF0C;1&#x4E3A;&#x4E0D;&#x5305;&#x542B;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. &#x5982;&#x679C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x56E0;&#x5B50;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x6570;&#x53EA;&#x80FD;&#x4E3A;1&#x6216;&#x8005;&#x8D28;&#x6570;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x53BB;&#x8BA1;&#x7B97;&#x4E24;&#x4E2A;&#x53CA;&#x4EE5;&#x4E0A;&#x56E0;&#x6570;&#x7684;&#x60C5;&#x51B5;&#x3002; 2. &#x5728;&#x6709;&#x4E24;&#x4E2A;&#x53CA;&#x4EE5;&#x4E0A;&#x7684;&#x6570;&#x8FDE;&#x4E58;&#x4E2D;&#xFF0C;&#x56E0;&#x6570;&#x7684;&#x6700;&#x5927;&#x4E0A;&#x9650;&#x4E3A;sqrt(N)&#xFF0C;&#x5373;N&#x7684;&#x5E73;&#x65B9;&#x6839;&#x3002; 3. &#x56E0;&#x6B64;&#x601D;&#x8DEF;&#x5C31;&#x662F;&#xFF0C;&#x4E0D;&#x65AD;&#x6784;&#x9020;&#x8FDE;&#x4E58;&#xFF0C;&#x770B;&#x8FDE;&#x4E58;&#x7684;&#x79EF;&#x662F;&#x5426;&#x662F;N&#x7684;&#x56E0;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x662F;&#xFF0C;&#x5219;&#x770B;&#x8FD9;&#x90E8;&#x5206;&#x8FDE;&#x4E58;&#x7684;&#x6570;&#x7684;&#x4E2A;&#x6570;&#x662F;&#x5426;&#x6BD4;&#x5DF2;&#x8BB0;&#x5F55;&#x7684;&#x591A;&#x3002; 4. &#x7528;&#x53D8;&#x91CF;first&#x8BB0;&#x5F55;&#x8FDE;&#x4E58;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x628A;&#x5B83;&#x8D4B;&#x521D;&#x503C;&#x4E3A;0&#xFF0C;&#x5982;&#x679C;&#x5728;&#x5BFB;&#x627E;N&#x7684;&#x56E0;&#x6570;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;first&#x6CA1;&#x6709;&#x6539;&#x53D8;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8868;&#x660E;N&#x662F;1&#x6216;&#x8005;&#x662F;&#x4E00;&#x4E2A;&#x8D28;&#x6570;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> temp = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> first = <span class="number">0</span>, len = <span class="number">0</span>, maxn = <span class="built_in">sqrt</span>(num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= maxn; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> j, temp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (j= i;j&lt;=maxn;  j++)</span><br><span class="line">        {</span><br><span class="line">            temp *= j;</span><br><span class="line">            <span class="keyword">if</span> (num%temp != <span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (j - i &gt; len)</span><br><span class="line">        {</span><br><span class="line">            len = j - i;</span><br><span class="line">            first = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (first==<span class="number">0</span>)<span class="built_in">cout</span> &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; num;<span class="comment">//&#x6CA1;&#x6709;&#x627E;&#x5230;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; len &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; first + i;</span><br><span class="line">            <span class="keyword">if</span> (i != len - <span class="number">1</span>)<span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;*&apos;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">630</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span>*<span class="number">6</span>*<span class="number">7</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 逻辑 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1094 The Largest Generation (25)</title>
      <link href="//posts/ba347fc6/"/>
      <url>//posts/ba347fc6/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x4EBA;&#x53E3;&#x6700;&#x591A;&#x7684;&#x4E00;&#x4EE3; <a id="more"></a> &#x65CF;&#x7684;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x901A;&#x5E38;&#x7531;&#x8C31;&#x7CFB;&#x6811;&#x6765;&#x5448;&#x73B0;&#xFF0C;&#x5176;&#x4E2D;&#x540C;&#x4E00;&#x7EA7;&#x522B;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x7684;&#x8282;&#x70B9;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4EE3;&#x3002;&#x8981;&#x6C42;&#x627E;&#x5230;&#x4EBA;&#x53E3;&#x6700;&#x591A;&#x7684;&#x4E00;&#x4EE3;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x4EE5;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;N(&lt;100)&#x5F00;&#x59CB;&#xFF0C;&#x5B83;&#x662F;&#x6811;&#x4E2D;&#x5BB6;&#x5EAD;&#x6210;&#x5458;&#x7684;&#x603B;&#x6570;&#xFF08;&#x56E0;&#x6B64;&#x5047;&#x8BBE;&#x6240;&#x6709;&#x6210;&#x5458;&#x7684;&#x7F16;&#x53F7;&#x4ECE;01~N&#xFF09;&#x3002;M&#xFF08;&lt;N&#xFF09;&#x662F;&#x8FD9;&#x4E2A;&#x65CF;&#x4E2D;&#xFF0C;&#x6709;&#x5B69;&#x5B50;&#x7684;&#x6210;&#x5458;&#x7684;&#x6570;&#x91CF;&#x3002;&#x7136;&#x540E;&#x662F;M&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x5305;&#x542B;&#x4EE5;&#x4E0B;&#x683C;&#x5F0F;&#x7684;&#x6210;&#x5458;&#x4FE1;&#x606F;&#xFF1A;</p><p>ID K ID<sub>1</sub> ID<sub>2</sub>......ID<sub>k</sub></p><p>&#x5176;&#x4E2D;ID&#x662F;&#x4EE3;&#x8868;&#x65CF;&#x6210;&#x5458;&#x7684;&#x4E24;&#x4F4D;&#x6570;&#x5B57;&#xFF0C;K(&gt;0)&#x662F;&#x4ED6;&#x7684;&#x5B69;&#x5B50;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x540E;&#x9762;&#x8DDF;&#x7740;&#x4ED6;&#x5B69;&#x5B50;&#x7684;&#x4E24;&#x4F4D;&#x6570;ID&#xFF0C;&#x4E3A;&#x4E86;&#x7B80;&#x5355;&#x8D77;&#x89C1;&#xFF0C;&#x5C06;&#x6839;&#x7684;ID&#x56FA;&#x5B9A;&#x4F4D;01&#xFF0C;&#x4E00;&#x884C;&#x4E2D;&#x6240;&#x6709;&#x6570;&#x5B57;&#x90FD;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5177;&#x6709;&#x6700;&#x591A;&#x7684;&#x6210;&#x5458;&#x6570;&#x548C;&#x5176;&#x5BF9;&#x5E94;&#x662F;&#x7B2C;&#x51E0;&#x4EE3;&#x3002;&#x4FDD;&#x8BC1;&#x7ED3;&#x679C;&#x662F;&#x552F;&#x4E00;&#x7684;&#xFF0C;&#x6839;&#x662F;&#x7B2C;&#x4E00;&#x4EE3;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x5C42;&#x6B21;&#x904D;&#x5386;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="keyword">int</span> id, k, temp;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; que;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; level;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; T;</span><br><span class="line">    T.resize(N+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; id &gt;&gt; k;</span><br><span class="line">        T[id].resize(k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">            T[id][j] = temp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    level.resize(N+<span class="number">1</span>);</span><br><span class="line">    level[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    que.push(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    {</span><br><span class="line">        id = que.front(); que.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T[id].size(); i++)</span><br><span class="line">        {</span><br><span class="line">            que.push(T[id][i]);</span><br><span class="line">            level[T[id][i]] = level[id] + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; cnt; cnt.resize(N + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        cnt[level[i]]++;</span><br><span class="line">    }</span><br><span class="line">    level = cnt;</span><br><span class="line">    sort(cnt.begin(), cnt.end());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt[N] &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (level[i] == cnt[N])</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">23</span> <span class="number">13</span></span><br><span class="line"><span class="number">21</span> <span class="number">1</span> <span class="number">23</span></span><br><span class="line"><span class="number">01</span> <span class="number">4</span> <span class="number">03</span> <span class="number">02</span> <span class="number">04</span> <span class="number">05</span></span><br><span class="line"><span class="number">03</span> <span class="number">3</span> <span class="number">06</span> <span class="number">07</span> <span class="number">08</span></span><br><span class="line"><span class="number">06</span> <span class="number">2</span> <span class="number">12</span> <span class="number">13</span></span><br><span class="line"><span class="number">13</span> <span class="number">1</span> <span class="number">21</span></span><br><span class="line"><span class="number">08</span> <span class="number">2</span> <span class="number">15</span> <span class="number">16</span></span><br><span class="line"><span class="number">02</span> <span class="number">2</span> <span class="number">09</span> <span class="number">10</span></span><br><span class="line"><span class="number">11</span> <span class="number">2</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"><span class="number">17</span> <span class="number">1</span> <span class="number">22</span></span><br><span class="line"><span class="number">05</span> <span class="number">1</span> <span class="number">11</span></span><br><span class="line"><span class="number">07</span> <span class="number">1</span> <span class="number">14</span></span><br><span class="line"><span class="number">09</span> <span class="number">1</span> <span class="number">17</span></span><br><span class="line"><span class="number">10</span> <span class="number">1</span> <span class="number">18</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">9</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 层次遍历 </tag>
            
            <tag> 树的遍历 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1093 Count PAT’s (25)</title>
      <link href="//posts/cc8cf89e/"/>
      <url>//posts/cc8cf89e/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x8BA1;&#x7B97;&#x6709;&#x591A;&#x5C11;&#x4E2A;PAT <a id="more"></a> &#x5B57;&#x7B26;&#x4E32;APPAPT&#x5305;&#x62EC;&#x4E24;&#x4E2A;PAT&#x4F5C;&#x4E3A;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x7B2C;&#x4E00;&#x4E2A;&#x7531;&#x7B2C;2&#x4E2A;&#xFF0C;&#x7B2C;4&#x4E2A;&#xFF0C;&#x7B2C;6&#x4E2A;&#x5B57;&#x7B26;&#x7EC4;&#x6210;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x7531;&#x7B2C;3&#x4E2A;&#xFF0C;&#x7B2C;4&#x4E2A;&#xFF0C;&#x7B2C;6&#x4E2A;&#x5B57;&#x7B26;&#x7EC4;&#x6210;&#x3002;</p><p>&#x73B0;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6C42;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5305;&#x542B;&#x7684;PAT&#x7684;&#x6570;&#x91CF;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x4E0D;&#x8D85;&#x8FC7;10<sup>5</sup> &#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4EC5;&#x5305;&#x62EC;P&#x3001;A&#x548C;T&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5305;&#x62EC;&#x7684;PAT&#x7684;&#x6570;&#x91CF;&#x3002;&#x7531;&#x4E8E;&#x7ED3;&#x679C;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x4E2A;&#x5DE8;&#x5927;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8F93;&#x51FA;&#x5176;&#x5BF9;1000000007&#x53D6;&#x6A21;&#x7684;&#x7ED3;&#x679C;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x4F7F;&#x7528;&#x4E58;&#x6CD5;&#x539F;&#x7406;&#x53BB;&#x505A;&#x3002;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x5BF9;&#x4E8E;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x201C;A&#x201D;&#xFF0C;&#x8BA1;&#x7B97;&#x5176;&#x524D;&#x9762;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x201C;P&#x201D;&#xFF0C;&#x8BA1;&#x7B97;&#x5176;&#x540E;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x201C;T&#x201D;&#x3002;&#x7136;&#x540E;&#x5C06;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x76F8;&#x4E58;&#xFF0C;&#x7136;&#x540E;&#x76F8;&#x52A0;&#x3002; 1. &#x9996;&#x5148;&#x8BA1;&#x7B97;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x201C;T&#x201D;&#x3002; 2. &#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x5F00;&#x59CB;&#xFF0C;&#x8BA1;&#x7B97;&#x9047;&#x5230;&#x591A;&#x5C11;&#x4E2A;&#x4E2A;&#x201C;P&#x201D;&#xFF0C;&#x8868;&#x793A;&#x201C;A&#x201D;&#x524D;&#x9762;&#x7684;&#x201C;P&#x201D;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x6BCF;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x201C;T&#x201D;&#xFF0C;&#x5C31;&#x4ECE;&#xFF08;1&#xFF09;&#x4E2D;&#x7684;&#x8BA1;&#x6570;&#x503C;&#x4E2D;&#x51CF;1&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x662F;&#x201C;A&#x201D;&#x4E4B;&#x540E;&#x201C;T&#x201D;&#x7684;&#x4E2A;&#x6570;&#x3002; 3. &#x5F53;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x201C;A&#x201D;&#x65F6;&#xFF0C;&#x5C06;&#x5176;&#x524D;&#x9762;&#x9047;&#x5230;&#x7684;&#x201C;P&#x201D;&#x7684;&#x4E2A;&#x6570;&#x4E0E;&#x5176;&#x4E4B;&#x540E;&#x201C;T&#x201D;&#x7684;&#x4E2A;&#x6570;&#x76F8;&#x4E58;&#xFF0C;&#x7136;&#x540E;&#x7D2F;&#x52A0;&#x3002;&#x7ED3;&#x679C;&#x5373;&#x4E3A;&#x6240;&#x6C42;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> P = <span class="number">0</span>, A = <span class="number">0</span>, T = <span class="number">0</span>;<span class="comment">//&#x8BA1;&#x6570;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6709;&#x591A;&#x5C11;&#x4E2A;PAT</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">&apos;T&apos;</span>) T++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">&apos;P&apos;</span>) P++;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">&apos;T&apos;</span>) T--;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">&apos;A&apos;</span>)res += P*T;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res % <span class="number">1000000007</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line">APPAPT</span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 乘法原理 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1092 To Buy or Not to Buy (20)</title>
      <link href="//posts/bb8bc808/"/>
      <url>//posts/bb8bc808/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x4E70;&#x8FD8;&#x662F;&#x4E0D;&#x4E70; <a id="more"></a> Eva&#x60F3;&#x7528;&#x4ED6;&#x6700;&#x559C;&#x6B22;&#x7684;&#x989C;&#x8272;&#x5236;&#x4F5C;&#x4E00;&#x4E32;&#x73E0;&#x5B50;&#xFF0C;&#x4ED6;&#x53BB;&#x4E00;&#x5BB6;&#x5E97;&#x4E70;&#x3002;&#x5E97;&#x91CC;&#x9762;&#x6709;&#x5F88;&#x591A;&#x4E94;&#x989C;&#x516D;&#x8272;&#x7684;&#x73E0;&#x5B50;&#x4E32;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x5546;&#x5E97;&#x7684;&#x6240;&#x6709;&#x8005;&#x53EA;&#x5356;&#x6574;&#x4E2A;&#x4E32;&#xFF0C;&#x4E0D;&#x96F6;&#x5356;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;Eva&#x5FC5;&#x987B;&#x68C0;&#x67E5;&#x5356;&#x7684;&#x4E32;&#x4E2D;&#x662F;&#x5426;&#x5305;&#x542B;&#x4E86;&#x4ED6;&#x9700;&#x8981;&#x7684;&#x6240;&#x6709;&#x7684;&#x73E0;&#x5B50;&#x3002;&#x4ED6;&#x73B0;&#x5728;&#x6765;&#x627E;&#x4F60;&#x5E2E;&#x5FD9;&#xFF1A;&#x5982;&#x679C;&#x201C;&#x5305;&#x542B;&#x4E86;&#x6240;&#x6709;&#x8981;&#x4E70;&#x7684;&#x73E0;&#x5B50;&#x201D;&#xFF0C;&#x5C31;&#x8981;&#x544A;&#x8BC9;&#x4ED6;&#xFF0C;&#x7531;&#x4E8E;&#x4E0D;&#x96F6;&#x5356;&#xFF0C;&#x591A;&#x4E70;&#x4E86;&#x591A;&#x5C11;&#x4E2A;&#x73E0;&#x5B50;&#xFF0C;&#x5982;&#x679C;&#x201C;&#x6CA1;&#x6709;&#x5305;&#x542B;&#x6240;&#x6709;&#x60F3;&#x4E70;&#x7684;&#x73E0;&#x5B50;&#x201D;&#xFF0C;&#x5C31;&#x8981;&#x544A;&#x8BC9;&#x4ED6;&#x7F3A;&#x5C11;&#x7684;&#x73E0;&#x5B50;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p>&#x4E3A;&#x4E86;&#x7B80;&#x5355;&#x8D77;&#x89C1;&#xFF0C;&#x4F7F;&#x7528;&#x8303;&#x56F4;[0-9]&#x3001;[a-z]&#x3001;[A-Z]&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x6765;&#x8868;&#x793A;&#x989C;&#x8272;&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x4E0B;&#x56FE;&#x4E2D;&#x7684;&#x7B2C;&#x4E09;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x662F;Eva&#x60F3;&#x8981;&#x7684;&#xFF0C;&#x7136;&#x540E;&#x53EA;&#x9700;&#x8981;&#x7B2C;&#x4E00;&#x6839;&#x73E0;&#x5B50;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5305;&#x542B;&#x4E86;&#x6240;&#x6709;&#x5FC5;&#x8981;&#x7684;&#x73E0;&#x5B50;&#xFF0C;&#x4F46;&#x662F;&#x591A;&#x4E86;8&#x4E2A;&#x989D;&#x5916;&#x7684;&#x73E0;&#x5B50;&#x3002;&#x7136;&#x800C;&#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x4E0D;&#x53EF;&#x4EE5;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x9ED1;&#x73E0;&#x5B50;&#x548C;&#x5C11;&#x4E00;&#x4E2A;&#x7EA2;&#x8272;&#x7684;&#x73E0;&#x5B50;&#x3002;</p><p><img src="/posts/bb8bc808/PAT-A-1092.png" alt="&#x56FE;1"> ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x5206;&#x4E24;&#x884C;&#x7ED9;&#x51FA;&#x4E0D;&#x8D85;&#x8FC7;1000&#x4E2A;&#x73E0;&#x5B50;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x5E97;&#x4E3B;&#x7684;&#x548C;Eva&#x60F3;&#x8981;&#x7684;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x8BF7;&#x5C06;&#x7B54;&#x6848;&#x8F93;&#x51FA;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x7B54;&#x6848;&#x662F;&#x201C;&#x662F;&#x201D;&#xFF0C;&#x90A3;&#x4E48;&#x8FD8;&#x8981;&#x8F93;&#x51FA;Eva&#x989D;&#x5916;&#x8D2D;&#x4E70;&#x7684;&#x73E0;&#x5B50;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x5982;&#x679C;&#x7B54;&#x6848;&#x662F;&#x201C;&#x5426;&#x201D;&#xFF0C;&#x90A3;&#x4E48;&#x8F93;&#x51FA;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7F3A;&#x5C11;&#x7684;&#x73E0;&#x5B50;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x7B54;&#x6848;&#x548C;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x5FC5;&#x987B;&#x95F4;&#x9694;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x4F7F;&#x7528;Hash&#x6563;&#x5217;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> res[<span class="number">256</span>] = { <span class="number">0</span> };</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a, b;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.size(); i++)</span><br><span class="line">        res[a[i]]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (res[b[i]] &gt; <span class="number">0</span>)</span><br><span class="line">            res[b[i]]--;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cnt++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (cnt == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Yes &quot;</span> &lt;&lt; a.size() - b.size();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;No &quot;</span> &lt;&lt; cnt;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">ppRYYGrrYBR2258</span><br><span class="line">YrR8RrY</span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Yes <span class="number">8</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">ppRYYGrrYB225</span><br><span class="line">YrR8RrY</span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">No <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> Hash </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1088 Rational Arithmetic (20)</title>
      <link href="//posts/fea59011/"/>
      <url>//posts/fea59011/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6709;&#x7406;&#x6570;&#x7684;&#x8FD0;&#x7B97;</p><a id="more"></a><p>&#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x6709;&#x7406;&#x6570;&#xFF0C;&#x8981;&#x6C42;&#x5B9E;&#x73B0;&#x5B83;&#x4EEC;&#x7684;&#x57FA;&#x672C;&#x7B97;&#x6570;&#x8FD0;&#x7B97;&#xFF0C;&#x5373;&#x8BA1;&#x7B97;&#x5B83;&#x4EEC;&#x7684;&#x548C;&#xFF0C;&#x5DEE;&#xFF0C;&#x4E58;&#x79EF;&#xFF0C;&#x5546;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x683C;&#x5F0F;&#x4E3A;&quot;a1/b1 a2/b2&quot;&#x683C;&#x5F0F;&#x7684;&#x4E24;&#x4E2A;&#x6709;&#x7406;&#x6570;&#x3002;&#x5206;&#x5B50;&#x548C;&#x5206;&#x6BCD;&#x90FD;&#x5728;long int&#x7684;&#x8303;&#x56F4;&#x5185;&#x3002;&#x5982;&#x679C;&#x6709;&#x8D1F;&#x53F7;&#xFF0C;&#x5219;&#x8D1F;&#x53F7;&#x51FA;&#x73B0;&#x4E14;&#x4EC5;&#x51FA;&#x73B0;&#x5728;&#x5206;&#x5B50;&#x524D;&#x9762;&#x3002;&#x5206;&#x6BCD;&#x4FDD;&#x8BC1;&#x4E3A;&#x975E;&#x96F6;&#x6570;&#x5B57;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5206;&#x522B;&#x5728;4&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x4E24;&#x4E2A;&#x6709;&#x7406;&#x6570;&#x7684;&#x548C;&#xFF0C;&#x5DEE;&#xFF0C;&#x4E58;&#x79EF;&#xFF0C;&#x5546;&#x3002;&#x6BCF;&#x884C;&#x7684;&#x683C;&#x5F0F;&#x4E3A;&#x201C;number1 operator number2 = result&#x201D;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x6709;&#x7406;&#x6570;&#x4F18;&#x5148;&#x5316;&#x6210;<strong>&#x5E26;&#x5206;&#x6570;</strong>&#x7684;&#x5F62;&#x5F0F;&#x3002;&#x5982;&#x679C;&#x6570;&#x5B57;&#x4E3A;&#x8D1F;&#x6570;&#xFF0C;&#x5219;&#x5FC5;&#x987B;&#x5C06;&#x5176;&#x5305;&#x542B;&#x5728;&#x4E00;&#x5BF9;&#x62EC;&#x53F7;&#x4E2D;&#x3002;&#x5982;&#x679C;&#x9664;&#x6CD5;&#x4E2D;&#x7684;&#x5206;&#x6BCD;&#x4E3A;0&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x201C;Inf&#x201D;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;&#x3002;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x8F93;&#x51FA;&#x7684;&#x6574;&#x6570;&#x90FD;&#x5728;long int&#x7684;&#x8303;&#x56F4;&#x5185;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x57FA;&#x7840;&#x9898;&#xFF0C;&#x6309;&#x7167;&#x56DB;&#x5219;&#x8FD0;&#x7B97;&#x7684;&#x89C4;&#x5219;&#x6765;&#x3002;</p><h2 id="tips">Tips</h2><p>&#x76F8;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;PAT-A-1081&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> member;<span class="comment">//&#x5206;&#x5B50;&#x90E8;&#x5206;</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> deno;<span class="comment">//&#x5206;&#x6BCD;&#x90E8;&#x5206;</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> inte;<span class="comment">//&#x6574;&#x6570;&#x90E8;&#x5206;</span></span><br><span class="line">}fraction;</span><br><span class="line">fraction num[<span class="number">2</span>];</span><br><span class="line">fraction res[<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> a, <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> b)</span><span class="comment">//&#x6700;&#x5927;&#x516C;&#x7EA6;&#x6570;,abs&#x6C42;&#x7EDD;&#x5BF9;&#x503C;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? <span class="built_in">abs</span>(a) : gcd(b, a%b);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuchu</span><span class="params">(fraction a)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.inte &lt; <span class="number">0</span> || a.member &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;(&apos;</span>;</span><br><span class="line">    <span class="keyword">if</span> (a.inte!=<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a.inte;</span><br><span class="line">        <span class="keyword">if</span> (a.member!=<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (a.member != <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a.member &lt;&lt; <span class="string">&apos;/&apos;</span> &lt;&lt; a.deno;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (a.inte == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;0&apos;</span>;</span><br><span class="line">    <span class="keyword">if</span> (a.inte &lt; <span class="number">0</span> || a.member &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;)&apos;</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jiafenshu</span><span class="params">(fraction &amp;a)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> gcd_num = gcd(a.member, a.deno);</span><br><span class="line">    a.deno /= gcd_num; a.member /= gcd_num;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">daifenshu</span><span class="params">(fraction &amp;a)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    a.inte = a.member / a.deno;</span><br><span class="line">    a.member -= (a.deno*a.inte);</span><br><span class="line">    <span class="keyword">if</span> (a.inte &lt; <span class="number">0</span>)</span><br><span class="line">        a.member = <span class="built_in">abs</span>(a.member);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld/%lld&quot;</span>, &amp;num[i].member, &amp;num[i].deno);</span><br><span class="line">        jiafenshu(num[i]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//+</span></span><br><span class="line">    res[<span class="number">0</span>].member = num[<span class="number">1</span>].member*num[<span class="number">0</span>].deno + num[<span class="number">1</span>].deno*num[<span class="number">0</span>].member;</span><br><span class="line">    res[<span class="number">0</span>].deno = num[<span class="number">1</span>].deno*num[<span class="number">0</span>].deno;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//-</span></span><br><span class="line">    res[<span class="number">1</span>].member = num[<span class="number">1</span>].deno*num[<span class="number">0</span>].member - num[<span class="number">1</span>].member*num[<span class="number">0</span>].deno;</span><br><span class="line">    res[<span class="number">1</span>].deno = num[<span class="number">1</span>].deno*num[<span class="number">0</span>].deno;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//*</span></span><br><span class="line">    res[<span class="number">2</span>].member = num[<span class="number">1</span>].member*num[<span class="number">0</span>].member;</span><br><span class="line">    res[<span class="number">2</span>].deno = num[<span class="number">1</span>].deno*num[<span class="number">0</span>].deno;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// /</span></span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (num[<span class="number">1</span>].member == <span class="number">0</span> &amp;&amp; num[<span class="number">1</span>].inte == <span class="number">0</span>)</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (!flag)</span><br><span class="line">    {</span><br><span class="line">        res[<span class="number">3</span>].member = num[<span class="number">0</span>].member*num[<span class="number">1</span>].deno;</span><br><span class="line">        res[<span class="number">3</span>].deno = num[<span class="number">0</span>].deno*num[<span class="number">1</span>].member;</span><br><span class="line">        <span class="keyword">if</span> (res[<span class="number">3</span>].deno*res[<span class="number">3</span>].member &lt; <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            res[<span class="number">3</span>].member = <span class="number">0</span> - <span class="built_in">abs</span>(res[<span class="number">3</span>].member);</span><br><span class="line">            res[<span class="number">3</span>].deno = <span class="built_in">abs</span>(res[<span class="number">3</span>].deno);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        res[<span class="number">3</span>] = { <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span> };</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        daifenshu(num[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    {<span class="comment">//&#x5316;&#x7B80;</span></span><br><span class="line">        jiafenshu(res[i]);</span><br><span class="line">        daifenshu(res[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x8F93;&#x51FA;</span></span><br><span class="line">    shuchu(num[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; + &quot;</span>; shuchu(num[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; = &quot;</span>; shuchu(res[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    shuchu(num[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; - &quot;</span>; shuchu(num[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; = &quot;</span>; shuchu(res[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    shuchu(num[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; * &quot;</span>; shuchu(num[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; = &quot;</span>; shuchu(res[<span class="number">2</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    shuchu(num[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; / &quot;</span>; shuchu(num[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; = &quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Inf&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        shuchu(res[<span class="number">3</span>]);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> <span class="number">-4</span>/<span class="number">2</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> + (<span class="number">-2</span>) = (<span class="number">-1</span> <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> - (<span class="number">-2</span>) = <span class="number">2</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> * (<span class="number">-2</span>) = (<span class="number">-1</span> <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> / (<span class="number">-2</span>) = (<span class="number">-1</span>/<span class="number">3</span>)</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>/<span class="number">3</span> <span class="number">0</span>/<span class="number">6</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">2</span>/<span class="number">3</span> + <span class="number">0</span> = <span class="number">1</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span>/<span class="number">3</span> - <span class="number">0</span> = <span class="number">1</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span>/<span class="number">3</span> * <span class="number">0</span> = <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span>/<span class="number">3</span> / <span class="number">0</span> = Inf</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 分数 </tag>
            
            <tag> 四则运算 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1090 Highest Price in Supply Chain (25)</title>
      <link href="//posts/5585a924/"/>
      <url>//posts/5585a924/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x4F9B;&#x5E94;&#x94FE;&#x4E2D;&#x7684;&#x6700;&#x9AD8;&#x4EF7;&#x683C; <a id="more"></a> &#x4F9B;&#x5E94;&#x94FE;&#x662F;&#x7531;&#x96F6;&#x552E;&#x5546;&#xFF0C;&#x5206;&#x9500;&#x5546;&#x548C;&#x4F9B;&#x5E94;&#x5546;&#x7EC4;&#x6210;&#x7684;&#x7F51;&#x7EDC;&#xFF0C;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x53C2;&#x4E0E;&#x5176;&#x4E2D;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x4EA7;&#x54C1;&#x4ECE;&#x4F9B;&#x5E94;&#x5546;&#x8F6C;&#x79FB;&#x5230;&#x5BA2;&#x6237;&#x3002;</p><p>&#x4ECE;&#x4E00;&#x4E2A;&#x6839;&#x4F9B;&#x5E94;&#x5546;&#x5F00;&#x59CB;&#xFF0C;&#x94FE;&#x4E0A;&#x6BCF;&#x4E2A;&#x4EBA;&#x4EE5;&#x4EF7;&#x683C;P&#x4ECE;&#x4E00;&#x4E2A;&#x4F9B;&#x5E94;&#x5546;&#x5904;&#x8D2D;&#x4E70;&#x4EA7;&#x54C1;&#xFF0C;&#x5E76;&#x4EE5;&#x9AD8;&#x4E8E;P&#x7684;r%&#x7684;&#x4EF7;&#x683C;&#x51FA;&#x552E;&#x6216;&#x8005;&#x5206;&#x53D1;&#x7ED9;&#x4ED6;&#x4EEC;&#x3002;&#x5047;&#x8BBE;&#x4F9B;&#x5E94;&#x94FE;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x6210;&#x5458;&#x6709;&#x4E14;&#x4EC5;&#x6709;&#x4E00;&#x4E2A;&#x4F9B;&#x5E94;&#x5546;&#x3002;</p><p>&#x73B0;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4F9B;&#x5E94;&#x94FE;&#xFF0C;&#x6C42;&#x4E00;&#x4E9B;&#x96F6;&#x552E;&#x5546;&#x53EF;&#x4EE5;&#x671F;&#x5F85;&#x7684;&#x6700;&#x9AD8;&#x7684;&#x4EF7;&#x683C;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x62EC;&#x4E09;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF1A;N&#xFF08;&lt;=10<sup>5</sup>&#xFF09;&#x8868;&#x793A;&#x4F9B;&#x5E94;&#x94FE;&#x4E2D;&#x7684;&#x6210;&#x5458;&#x6570;&#xFF08;&#x7F16;&#x53F7;&#x4ECE;0~N-1&#xFF09;&#xFF0C;P&#xFF1A;&#x6839;&#x4F9B;&#x5E94;&#x5546;&#x7ED9;&#x51FA;&#x7684;&#x4EF7;&#x683C;&#xFF0C;r&#xFF1A;&#x6BCF;&#x4E2A;&#x5206;&#x9500;&#x5546;&#x6216;&#x96F6;&#x552E;&#x5546;&#x52A0;&#x4EF7;&#x7684;&#x767E;&#x5206;&#x6BD4;&#x3002;</p><p>&#x7136;&#x540E;&#x4E0B;&#x4E00;&#x884C;&#x5305;&#x62EC;N&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;S<sub>i</sub>&#x662F;&#x7B2C;i&#x4E2A;&#x6210;&#x5458;&#x7684;&#x4F9B;&#x5E94;&#x5546;&#x7684;&#x7D22;&#x5F15;&#x3002;&#x6839;&#x4F9B;&#x5E94;&#x5546;&#x7684;S<sub>root</sub>&#x5B9A;&#x4E49;&#x4E3A;-1&#x3002;&#x4E00;&#x884C;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x6570;&#x5B57;&#x90FD;&#x7531;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x7B2C;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x4E00;&#x4E9B;&#x96F6;&#x552E;&#x5546;&#x8FDB;&#x8D27;&#x7684;&#x6700;&#x9AD8;&#x4EF7;&#x683C;&#xFF0C;&#x7CBE;&#x786E;&#x5230;&#x5C0F;&#x6570;&#x70B9;&#x540E;2&#x4F4D;&#xFF0C;&#x4EE5;&#x53CA;&#x8FD9;&#x4E9B;&#x96F6;&#x552E;&#x5546;&#x7684;&#x4E2A;&#x6570;&#x3002;<strong>&#x6CE8;&#x610F;&#xFF01;&#xFF0C;&#x662F;&#x96F6;&#x552E;&#x5546;&#x7684;&#x8FDB;&#x8D27;&#x4EF7;&#xFF01;</strong> &#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF0C;&#x4FDD;&#x8BC1;&#x4EF7;&#x683C;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;10<sup>10<sup>&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x5C42;&#x6B21;&#x904D;&#x5386; ## Tips &#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;PAT-A-1079&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">double</span> P, r;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;M;<span class="comment">//&#x5B58;&#x50A8;&#x6574;&#x4E2A;&#x9500;&#x552E;&#x7F51;&#x7EDC;</span></span><br><span class="line"><span class="keyword">int</span> level[<span class="number">100011</span>] = { <span class="number">0</span> };</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a &gt; b;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; P &gt;&gt; r;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    M.resize(N + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        M[temp + <span class="number">1</span>].push_back(i);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; que;que.push(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    {</span><br><span class="line">        temp = que.front(); que.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M[temp].size(); i++)</span><br><span class="line">        {</span><br><span class="line">            que.push(M[temp][i]);</span><br><span class="line">            level[M[temp][i]] = level[temp] + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    sort(level, level + N + <span class="number">1</span>, cmp);</span><br><span class="line">    temp = level[<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f &quot;</span>, P*<span class="built_in">pow</span>(<span class="number">1</span> + r / <span class="number">100</span>, temp - <span class="number">1</span>));</span><br><span class="line">    <span class="comment">//cout &lt;&lt; P*pow(1 + r / 100, temp-1) &lt;&lt; &apos; &apos;;</span></span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (level[cnt]==temp)</span><br><span class="line">    {</span><br><span class="line">        cnt++;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//freopen(&quot;1.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></sup></sup></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">9</span> <span class="number">1.80</span> <span class="number">1.00</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">4</span> <span class="number">4</span> <span class="number">-1</span> <span class="number">4</span> <span class="number">5</span> <span class="number">3</span> <span class="number">6</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">1.85</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 层次遍历 </tag>
            
            <tag> 树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1089 Insert or Merge (25)</title>
      <link href="//posts/354220c1/"/>
      <url>//posts/354220c1/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x63D2;&#x5165;&#x6392;&#x5E8F;&#x8FD8;&#x662F;&#x5F52;&#x5E76;&#x6392;&#x5E8F; <a id="more"></a> ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=100&#xFF09;&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x6709;N&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x521D;&#x59CB;&#x72B6;&#x6001;&#x3002;&#x7B2C;&#x4E09;&#x884C;&#x6709;N&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x4E2D;&#x95F4;&#x72B6;&#x6001;&#xFF0C;&#x6C42;&#x4E2D;&#x95F4;&#x72B6;&#x6001;&#x662F;&#x7531;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x5F97;&#x51FA;&#x8FD8;&#x662F;&#x7531;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x5F97;&#x51FA;&#x7684;&#x3002; ## &#x8F93;&#x51FA; &#x7B2C;&#x4E00;&#x884C;&#x8F93;&#x51FA;&quot;Insertion Sort&quot; &#x6216;&#x8005; &quot;Merge Sort&quot; &#x6765;&#x8868;&#x793A;&#x5B83;&#x662F;&#x7531;&#x63D2;&#x5165;&#x6392;&#x5E8F;/&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x5F97;&#x51FA;&#x7684;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x884C;&#x8F93;&#x51FA;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x72B6;&#x6001;&#x3002;&#x5373;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x518D;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x5219;&#x662F;&#x628A;&#x76F8;&#x90BB;&#x4E24;&#x4E2A;&#x5F52;&#x5E76;&#x8D77;&#x6765;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x63D2;&#x5165;&#x6392;&#x5E8F;&#x6709;&#x4E2A;&#x7279;&#x70B9;&#xFF0C;&#x5DF2;&#x7ECF;&#x6392;&#x5E8F;&#x7684;&#x90E8;&#x5206;&#x662F;&#x6309;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#xFF0C;&#x672A;&#x6392;&#x5E8F;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x548C;&#x521D;&#x8BD5;&#x6570;&#x7EC4;&#x4E00;&#x6837;&#x3002;</p><p>&#x56E0;&#x6B64;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x6765;&#x5224;&#x65AD;&#x3002; ## Tips &#x6700;&#x540E;&#x6C42;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x7684;&#x65F6;&#x5019;&#x8981;&#x7528;&#x6A21;&#x62DF;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x6765;&#x8BA1;&#x7B97;&#x3002;&#x4F46;&#x662F;&#x771F;&#x6B63;&#x7684;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x662F;&#x9012;&#x5F52;&#x5F97;&#x51FA;&#x7684;&#xFF0C;&#x6B64;&#x65F6;&#x662F;&#x5148;&#x6392;&#x5E8F;&#x5DE6;&#x534A;&#x90E8;&#x5206;&#xFF0C;&#x518D;&#x6392;&#x5E8F;&#x53F3;&#x534A;&#x90E8;&#x5206;&#x7684;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x5F52;&#x5E76;&#x4E0D;&#x662F;&#x8FD9;&#x4E2A;&#x610F;&#x601D;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">101</span>], num_sort[<span class="number">101</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num_sort[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">bool</span> isInsert = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> temp = num_sort[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> range;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (temp &gt; num_sort[i])</span><br><span class="line">        {</span><br><span class="line">            range = i;</span><br><span class="line">            <span class="keyword">for</span> (; i &lt; N; i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (num[i] != num_sort[i])</span><br><span class="line">                {</span><br><span class="line">                    isInsert = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(i&lt;N)</span><br><span class="line">            temp = num_sort[i];</span><br><span class="line">        <span class="keyword">if</span> (isInsert == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (isInsert)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Insertion Sort&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        sort(num, num + range + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Merge Sort&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">int</span> range = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//&#x901A;&#x8FC7;&#x6A21;&#x62DF;&#x6765;&#x8FDB;&#x884C;&#x5F52;&#x5E76;&#x6392;&#x5E8F;</span></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;<span class="comment">//&#x7528;&#x4E8E;&#x6807;&#x8BB0;&#x662F;&#x5426;&#x8FBE;&#x5230;&#x5F53;&#x524D;&#x72B6;&#x6001;</span></span><br><span class="line">        <span class="keyword">while</span> (flag)</span><br><span class="line">        {</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (num[i] != num_sort[i])</span><br><span class="line">                {</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        range *= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N/range; i++)</span><br><span class="line">        {</span><br><span class="line">            sort(num + i*range, num + (i + <span class="number">1</span>)* range);</span><br><span class="line">        }</span><br><span class="line">        sort(num + N / range*range, num + N);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; num[i];</span><br><span class="line">        <span class="keyword">if</span> (i != N<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Insertion Sort</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">0</span> <span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">8</span> <span class="number">5</span> <span class="number">7</span> <span class="number">4</span> <span class="number">9</span> <span class="number">0</span> <span class="number">6</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">Merge Sort</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">8</span> <span class="number">4</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">0</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 插入排序 </tag>
            
            <tag> 归并排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1086 Tree Traversals Again (25)</title>
      <link href="//posts/c2c1493b/"/>
      <url>//posts/c2c1493b/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x91CD;&#x65B0;&#x904D;&#x5386;&#x4E8C;&#x53C9;&#x6811; <a id="more"></a> &#x7528;&#x6808;&#x7684;&#x5F62;&#x5F0F;&#x7ED9;&#x51FA;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x5EFA;&#x7ACB;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x6C42;&#x8FD9;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x540E;&#x5E8F;&#x904D;&#x5386;. ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=30&#xFF09;&#x8868;&#x793A;&#x6811;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x603B;&#x6570;&#xFF08;&#x8282;&#x70B9;&#x4ECE;1~N&#x8FDB;&#x884C;&#x7F16;&#x53F7;&#xFF09;&#x3002;&#x7136;&#x540E;&#x662F;2N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x63CF;&#x8FF0;&#x4E00;&#x79CD;&#x5806;&#x6808;&#x64CD;&#x4F5C;&#xFF0C;&#x6BD4;&#x5982;Push X&#xFF0C;&#x5176;&#x4E2D;X&#x662F;&#x88AB;&#x538B;&#x5165;&#x5806;&#x6808;&#x7684;&#x8282;&#x70B9;&#x7684;&#x7D22;&#x5F15;&#xFF1B;&#x6216;Pop&#xFF0C;&#x8868;&#x793A;&#x4ECE;&#x5806;&#x6808;&#x4E2D;&#x5F39;&#x51FA;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x3002; ## &#x8F93;&#x51FA; &#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x76F8;&#x5E94;&#x7684;&#x6811;&#x7684;&#x540E;&#x7EED;&#x904D;&#x5386;&#x5E8F;&#x5217;&#x3002;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. push&#x7684;&#x987A;&#x5E8F;&#x6B63;&#x597D;&#x5BF9;&#x5E94;&#x524D;&#x5E8F;&#x3002; 2. pop&#x51FA;&#x6765;&#x7684;&#x987A;&#x5E8F;&#x6B63;&#x597D;&#x5BF9;&#x5E94;&#x4E2D;&#x5E8F;&#x3002;</p><h2 id="tips">Tips</h2><ol type="1"><li>&#x7279;&#x522B;&#x6CE8;&#x610F;&#xFF1A;&#x6570;&#x5B57;&#x53EF;&#x4EE5;&#x6709;&#x91CD;&#x590D;&#x3002;&#x6240;&#x4EE5;&#x8981;&#x52A0;&#x4E00;&#x4E2A;&#x7D22;&#x5F15;&#x3002;</li><li>&#x7ECF;&#x8FC7;&#x5B9E;&#x6D4B;&#xFF0C;&#x4E0D;&#x52A0;&#x7D22;&#x5F15;&#x4E5F;&#x80FD;&#x901A;&#x8FC7;PAT&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x4F46;&#x662F;&#x65E0;&#x6CD5;&#x901A;&#x8FC7;&#x725B;&#x5BA2;&#x7F51;&#x7684;&#x6D4B;&#x8BD5;&#x3002;</li></ol><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">string</span> temp;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;pre, mid,value;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">post</span><span class="params">(<span class="keyword">int</span> root, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (start &gt; end)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> i = start;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;end&amp;&amp;mid[i]!=pre[root])</span><br><span class="line">    {</span><br><span class="line">        i++;</span><br><span class="line">    }</span><br><span class="line">    post(root + <span class="number">1</span>, start, i - <span class="number">1</span>);</span><br><span class="line">    post(root + <span class="number">1</span> + i - start, i + <span class="number">1</span>, end);</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; value[mid[i]];</span><br><span class="line">    flag = <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> num, top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">stack</span>[<span class="number">31</span>] = {<span class="number">0</span>};</span><br><span class="line">    <span class="keyword">int</span> c1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n*<span class="number">2</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        <span class="keyword">if</span> (temp==<span class="string">&quot;Push&quot;</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">            value.push_back(num);</span><br><span class="line">            pre.push_back(c1);</span><br><span class="line">            <span class="built_in">stack</span>[top++]=c1++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (temp==<span class="string">&quot;Pop&quot;</span>)</span><br><span class="line">        {</span><br><span class="line">            mid.push_back(<span class="built_in">stack</span>[--top]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    post(<span class="number">0</span>, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">6</span></span><br><span class="line">Push <span class="number">1</span></span><br><span class="line">Push <span class="number">2</span></span><br><span class="line">Push <span class="number">3</span></span><br><span class="line">Pop</span><br><span class="line">Pop</span><br><span class="line">Push <span class="number">4</span></span><br><span class="line">Pop</span><br><span class="line">Pop</span><br><span class="line">Push <span class="number">5</span></span><br><span class="line">Push <span class="number">6</span></span><br><span class="line">Pop</span><br><span class="line">Pop</span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">2</span> <span class="number">6</span> <span class="number">5</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 二叉树 </tag>
            
            <tag> 前序遍历 </tag>
            
            <tag> 中序遍历 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1085 Perfect Sequence (25)</title>
      <link href="//posts/6fa331c/"/>
      <url>//posts/6fa331c/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5B8C;&#x7F8E;&#x7684;&#x5E8F;&#x5217;&#x3002; <a id="more"></a> &#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x5E8F;&#x5217;&#x548C;&#x53E6;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;p&#xFF0C;&#x5982;&#x679C;M&lt;=m*p&#xFF0C;&#x5219;&#x8FD9;&#x4E2A;&#x5E8F;&#x5217;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x7F8E;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x5176;&#x4E2D;M&#x548C;m&#x5206;&#x522B;&#x662F;&#x8FD9;&#x4E2A;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x6700;&#x5927;&#x548C;&#x6700;&#x5C0F;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x73B0;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#x548C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;p&#xFF0C;&#x8981;&#x6C42;&#x4ECE;&#x8FD9;&#x4E2A;&#x5E8F;&#x5217;&#x4E2D;&#x627E;&#x5230;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x4EE5;&#x5F62;&#x6210;&#x4E00;&#x4E2A;&#x5B8C;&#x7F8E;&#x7684;&#x5E8F;&#x5217;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x90FD;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x62EC;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#x548C;p&#xFF0C;&#x5176;&#x4E2D;N&lt;=10<sup>5&#xFF0C;&#x8868;&#x793A;&#x5E8F;&#x5217;&#x4E2D;&#x6574;&#x6570;&#x7684;&#x6570;&#x91CF;&#xFF0C;p(&lt;=10</sup>9)&#x662F;&#x53C2;&#x6570;&#x3002;&#x7B2C;&#x4E8C;&#x884C;&#x6709;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x6BCF;&#x4E2A;&#x4E0D;&#x5927;&#x4E8E;10^9&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x5728;&#x4E00;&#x4E2A;&#x5B8C;&#x7F8E;&#x5E8F;&#x5217;&#x4E2D;&#xFF0C;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x6574;&#x6570;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x4E8C;&#x5206;&#x6CD5;&#x67E5;&#x627E;&#x3002;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;m*&#x7684;&#x6700;&#x5C0F;&#x7684;&#x6570;&#x5B57;&#x3002; ## Tips &#x4F7F;&#x7528;upper_bound()&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x7C97;&#x66B4;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x4F7F;&#x7528;upper_bound()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">list</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> N, p;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;<span class="comment">//num&#x8868;&#x793A;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x6570;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; p;</span><br><span class="line">    <span class="built_in">list</span>.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; <span class="built_in">list</span>[i];</span><br><span class="line">    }</span><br><span class="line">    sort(<span class="built_in">list</span>.begin(), <span class="built_in">list</span>.end());</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="built_in">list</span>.begin(); i !=<span class="built_in">list</span>.end(); i++)</span><br><span class="line">    {</span><br><span class="line">        res=max((<span class="keyword">int</span>)(upper_bound(<span class="built_in">list</span>.begin(), <span class="built_in">list</span>.end(), *i * p)-i),res);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x4E8C;&#x5206;&#x641C;&#x7D22;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">list</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> N, p;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;<span class="comment">//num&#x8868;&#x793A;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x6570;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; p;</span><br><span class="line">    <span class="built_in">list</span>.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; <span class="built_in">list</span>[i];</span><br><span class="line">    }</span><br><span class="line">    sort(<span class="built_in">list</span>.begin(), <span class="built_in">list</span>.end());</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">int</span> front = <span class="number">0</span>, mid = (front + N - <span class="number">1</span>) / <span class="number">2</span>, end = N - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        temp = <span class="built_in">list</span>[i]*p;</span><br><span class="line">        <span class="keyword">while</span> (front&lt;end&amp;&amp;<span class="built_in">list</span>[mid]!=temp)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">list</span>[mid] &lt; temp) front = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">list</span>[mid] &gt; temp)end = mid - <span class="number">1</span>;</span><br><span class="line">            mid = (front + end) / <span class="number">2</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (mid &lt; N&amp;&amp;temp &gt;= <span class="built_in">list</span>[mid])</span><br><span class="line">            mid++;</span><br><span class="line">        res = max(res, mid - i);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x66F4;&#x76F4;&#x89C2;&#x7684;&#x601D;&#x8DEF;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> N, p;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">list</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; p;</span><br><span class="line">    <span class="built_in">list</span>.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; <span class="built_in">list</span>[i];</span><br><span class="line">    }</span><br><span class="line">    sort(<span class="built_in">list</span>.begin(), <span class="built_in">list</span>.end());</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i+res; j &lt; N; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">list</span>[j] &lt;= <span class="built_in">list</span>[i] * p)</span><br><span class="line">            {</span><br><span class="line">                temp = j - i + <span class="number">1</span>;</span><br><span class="line">                res = max(res, temp);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span> <span class="number">8</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">20</span> <span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> STL </tag>
            
            <tag> 二分法查找 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1084 Broken Keyboard (20)</title>
      <link href="//posts/1feaae6d/"/>
      <url>//posts/1feaae6d/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x574F;&#x6389;&#x7684;&#x952E;&#x76D8;&#x3002; <a id="more"></a> &#x5728;&#x4E00;&#x4E2A;&#x574F;&#x6389;&#x7684;&#x952E;&#x76D8;&#x4E0A;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x952E;&#x574F;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5F53;&#x4F60;&#x8F93;&#x5165;&#x4E00;&#x4E9B;&#x53E5;&#x5B50;&#x65F6;&#xFF0C;&#x8FD9;&#x4E9B;&#x574F;&#x6389;&#x7684;&#x952E;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x7B26;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#x3002;</p><p>&#x73B0;&#x5728;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5E94;&#x8F93;&#x5165;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4E00;&#x4E2A;&#x5B9E;&#x9645;&#x8F93;&#x5165;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6C42;&#x54EA;&#x4E9B;&#x952E;&#x662F;&#x574F;&#x6389;&#x7684;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x539F;&#x59CB;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x662F;&#x5B9E;&#x9645;&#x8F93;&#x5165;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E0D;&#x8D85;&#x8FC7;80&#x4E2A;&#x82F1;&#x6587;&#x5B57;&#x6BCD;[A-Z]&#xFF0C;&#x4E0D;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x3002;&#x6570;&#x5B57;[0-9]&#xFF0C;&#x6216;&#x8005;&#x201C;_&#x201D;&#x8868;&#x793A;&#x7A7A;&#x683C;&#xFF0C;&#x786E;&#x4FDD;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x90FD;&#x662F;&#x975E;&#x7A7A;&#x7684;&#x3002; ## &#x8F93;&#x51FA; &#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x574F;&#x6389;&#x7684;&#x952E;&#xFF0C;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x5FC5;&#x987B;&#x5927;&#x5199;&#xFF0C;&#x6BCF;&#x4E2A;&#x574F;&#x6389;&#x7684;&#x952E;&#x53EA;&#x6253;&#x5370;&#x4E00;&#x6B21;&#x3002;&#x4FDD;&#x8BC1;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x952E;&#x662F;&#x574F;&#x6389;&#x7684;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x5168;&#x90E8;&#x8F6C;&#x6362;&#x4E3A;&#x5927;&#x5199;&#x540E;&#xFF0C;&#x4F7F;&#x7528;find&#x51FD;&#x6570;&#x6BD4;&#x8F83;&#xFF0C;&#x7136;&#x540E;&#x5F00;&#x4E2A;&#x6570;&#x7EC4;&#x6807;&#x8BB0;&#x662F;&#x5426;&#x8F93;&#x51FA;&#x8FC7;&#x4E86;&#x3002; ## Tips <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x8F6C;&#x6362;&#x4E3A;&#x5927;&#x5199;</span><br><span class="line">transform(a.begin(), a.end(),a.begin(), ::<span class="built_in">toupper</span>);</span><br></pre></td></tr></table></figure></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x67E5;&#x627E;&#x5B57;&#x6BCD;</span><br><span class="line"><span class="keyword">if</span> (b.find(*i) == <span class="built_in">string</span>::npos&amp;&amp;key[*i]==<span class="literal">false</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; *i;</span><br><span class="line">            key[*i] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br></pre></td></tr></table></figure><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> key[<span class="number">256</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="built_in">string</span> a, b;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; b;</span><br><span class="line">    transform(a.begin(), a.end(),a.begin(), ::<span class="built_in">toupper</span>);</span><br><span class="line">    transform(b.begin(), b.end(),b.begin(), ::<span class="built_in">toupper</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = a.begin(); i != a.end(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (b.find(*i) == <span class="built_in">string</span>::npos&amp;&amp;key[*i]==<span class="literal">false</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; *i;</span><br><span class="line">            key[*i] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>_This_is_a_test</span><br><span class="line">_hs_s_a_es</span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>TI</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串处理 </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1083 List Grades (25)</title>
      <link href="//posts/d597c9df/"/>
      <url>//posts/d597c9df/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x8F93;&#x51FA;&#x6210;&#x7EE9;&#x5728;&#x7ED9;&#x5B9A;&#x533A;&#x95F4;&#x7684;&#x540C;&#x5B66;&#x4FE1;&#x606F;&#x3002; <a id="more"></a> &#x57FA;&#x7840;&#x9898;&#xFF0C;&#x5C31;&#x662F;&#x4E00;&#x4E2A;cmp&#x51FD;&#x6570;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">string</span> ID;</span><br><span class="line">    <span class="keyword">int</span> g;</span><br><span class="line">}student;</span><br><span class="line"><span class="built_in">vector</span>&lt;student&gt; s;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(student a, student b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.g &gt; b.g;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    s.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; s[i].name &gt;&gt; s[i].ID &gt;&gt; s[i].g;</span><br><span class="line">    }</span><br><span class="line">    sort(s.begin(), s.end(), cmp);</span><br><span class="line">    <span class="keyword">int</span> grade1, grade2;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; grade1 &gt;&gt; grade2;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = s.begin(); i != s.end(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (i-&gt;g&gt;=grade1&amp;&amp;i-&gt;g&lt;=grade2)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i-&gt;name &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; i-&gt;ID &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (!flag)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NONE&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//freopen(&quot;2.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br><span class="line">Tom CS000001 <span class="number">59</span></span><br><span class="line">Joe Math990112 <span class="number">89</span></span><br><span class="line">Mike CS991301 <span class="number">100</span></span><br><span class="line">Mary EE990830 <span class="number">95</span></span><br><span class="line"><span class="number">60</span> <span class="number">100</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Mike CS991301</span><br><span class="line">Mary EE990830</span><br><span class="line">Joe Math990112</span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line">Jean AA980920 <span class="number">60</span></span><br><span class="line">Ann CS01 <span class="number">80</span></span><br><span class="line"><span class="number">90</span> <span class="number">95</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">NONE</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1081 Rational Sum (20)</title>
      <link href="//posts/3b99a8f3/"/>
      <url>//posts/3b99a8f3/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6709;&#x7406;&#x6570;&#x7684;&#x548C;&#x3002; <a id="more"></a></p><p>&#x5C0F;&#x5B66;&#x7684;&#x6570;&#x5B66;&#x9898;&#xFF0C;&#x8FD9;&#x6B21;&#x7528;&#x5199;&#x7A0B;&#x5E8F;&#x6765;&#x6C42;&#x89E3;&#x3002;</p><p>&#x7ED9;&#x5B9A;&#x201C;&#x5206;&#x652F;/&#x5206;&#x6BCD;&#x201D;&#x5F62;&#x5F0F;&#x7684;N&#x4E2A;&#x6709;&#x7406;&#x6570;&#xFF0C;&#x6C42;&#x4ED6;&#x4EEC;&#x7684;&#x603B;&#x548C;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x90FD;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x6BCF;&#x79CD;&#x60C5;&#x51B5;&#x90FD;&#x5DF2;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;= 100&#xFF09;&#x5F00;&#x59CB;&#xFF0C;&#x5728;&#x4E0B;&#x4E00;&#x884C;&#xFF0C;&#x6709;N&#x4E2A;&#x6709;&#x7406;&#x6570;&#x3002;&#x4EE5;&#x201C;&#x5206;&#x5B50;/&#x5206;&#x6BCD;&#x201D;&#x7684;&#x5F62;&#x5F0F;&#x7ED9;&#x51FA;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x5206;&#x5B50;&#x548C;&#x5206;&#x6BCD;&#x90FD;&#x5728;long int&#x7684;&#x8303;&#x56F4;&#x5185;&#x3002;&#x5982;&#x679C;&#x6709;&#x8D1F;&#x6570;&#xFF0C;&#x5219;&#x7B26;&#x53F7;&#x5FC5;&#x987B;&#x51FA;&#x73B0;&#x5728;&#x5206;&#x5B50;&#x4E4B;&#x524D;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x8F93;&#x51FA;&#x8FD9;&#x4E9B;&#x6570;&#x7684;&#x603B;&#x548C;&#xFF0C;&#x4EE5;&#x5E26;&#x5206;&#x6570;&#x7684;&#x6700;&#x7B80;&#x5F62;&#x5F0F;&#x7ED9;&#x51FA;&#xFF0C;&#x4E5F;&#x5373;&#xFF0C;&#x201C;&#x6574;&#x6570; &#x5206;&#x5B50;/&#x5206;&#x6BCD;&#x201D;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x5206;&#x5B50;&#x548C;&#x5206;&#x6BCD;&#x6CA1;&#x6709;&#x516C;&#x56E0;&#x5B50;&#x3002;&#x5982;&#x679C;&#x6574;&#x6570;&#x90E8;&#x5206;&#x4E3A;0&#xFF0C;&#x5373;&#x603B;&#x548C;&#x5C0F;&#x4E8E;1&#xFF0C;&#x5C31;&#x53EA;&#x8F93;&#x51FA;&#x5C0F;&#x6570;&#x90E8;&#x5206;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x8F97;&#x8F6C;&#x76F8;&#x9664;&#x6CD5;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x8D1F;&#x6570;&#xFF0C;&#x6C42;&#x516C;&#x7EA6;&#x6570;&#x7684;&#x65F6;&#x5019;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6B63;&#x503C;&#x3002;</p><h2 id="tips">Tips</h2><p>&#x6C42;&#x7EDD;&#x5BF9;&#x503C;&#x51FD;&#x6570;&#x5728;abs()&#x91CC;&#xFF0C;&#x5934;&#x6587;&#x4EF6;&#x662F;iostream</p><p>return b == 0 ? abs(a) : gcd(b, a%b);</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> member;<span class="comment">//&#x5206;&#x5B50;&#x90E8;&#x5206;</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> deno;<span class="comment">//&#x5206;&#x6BCD;&#x90E8;&#x5206;</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> inte;<span class="comment">//&#x6574;&#x6570;&#x90E8;&#x5206;</span></span><br><span class="line">}fraction;</span><br><span class="line">fraction num;</span><br><span class="line">fraction res = {<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>};</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> a, <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> b)</span><span class="comment">//&#x6700;&#x5927;&#x516C;&#x7EA6;&#x6570;,abs&#x6C42;&#x7EDD;&#x5BF9;&#x503C;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? <span class="built_in">abs</span>(a) : gcd(b, a%b);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld/%lld&quot;</span>, &amp;num.member,&amp;num.deno);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> gcd_num = gcd(num.member,num.deno);</span><br><span class="line">        num.deno /= gcd_num; num.member /= gcd_num;</span><br><span class="line">        res.member = res.member*num.deno + res.deno*num.member;</span><br><span class="line">        res.deno = res.deno*num.deno;</span><br><span class="line">        gcd_num = gcd(res.deno, res.member);</span><br><span class="line">        res.deno /= gcd_num; res.member /= gcd_num;</span><br><span class="line">    }</span><br><span class="line">    res.inte = res.member / res.deno;</span><br><span class="line">    res.member -= (res.deno*res.inte);</span><br><span class="line">    <span class="keyword">if</span> (res.inte!=<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res.inte;</span><br><span class="line">        <span class="keyword">if</span> (res.member!=<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (res.member!=<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res.member &lt;&lt; <span class="string">&apos;/&apos;</span> &lt;&lt; res.deno;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (res.inte==<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;0&apos;</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">2</span>/<span class="number">5</span> <span class="number">4</span>/<span class="number">15</span> <span class="number">1</span>/<span class="number">30</span> <span class="number">-2</span>/<span class="number">60</span> <span class="number">8</span>/<span class="number">3</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">1</span>/<span class="number">3</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line">Sample Input <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span>/<span class="number">3</span> <span class="number">-1</span>/<span class="number">6</span> <span class="number">1</span>/<span class="number">8</span></span><br><span class="line">Sample Output <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 分数加法 </tag>
            
            <tag> 辗转相除法 </tag>
            
            <tag> 最大公约数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1082 Read Number in Chinese (25)</title>
      <link href="//posts/a290f949/"/>
      <url>//posts/a290f949/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6570;&#x5B57;&#x7684;&#x4E2D;&#x6587;&#x8BFB;&#x6CD5;&#x3002; <a id="more"></a> &#x8FD9;&#x9053;&#x9898;&#x548C;1081&#x4E00;&#x6837;&#xFF0C;&#x90FD;&#x662F;&#x5C0F;&#x5B66;&#x7684;&#x6570;&#x5B66;&#x9898;&#x3002;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;9&#x4F4D;&#x6570;&#x7684;&#x6B63;&#x6570;&#xFF0C;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x4ED6;&#x7684;&#x4E2D;&#x6587;&#x8BFB;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x6570;&#x662F;&#x8D1F;&#x6570;&#xFF0C;&#x5219;&#x8981;&#x9996;&#x5148;&#x8F93;&#x51FA;&#x8D1F;&#x6570;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#xFF0C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;9&#x4F4D;&#x6570;&#x7684;&#x6574;&#x6570;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#xFF0C;&#x8F93;&#x51FA;&#x6570;&#x5B57;&#x7684;&#x4E2D;&#x6587;&#x8BFB;&#x6CD5;&#x3002;&#x5B57;&#x7B26;&#x4E4B;&#x95F4;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF0C;&#x884C;&#x5C3E;&#x4E0D;&#x80FD;&#x6709;&#x591A;&#x4F59;&#x7684;&#x7A7A;&#x683C;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x628A;9&#x4F4D;&#x6570;&#x5206;&#x4E3A;3&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x4EBF;&#xFF0C;&#x4E07;&#xFF0C;&#x4E2A;&#x3002;</p><p>&#x5728;&#x6BCF;&#x4E00;&#x90E8;&#x5206;&#x4E2D;&#xFF0C;&#x5176;&#x8BFB;&#x6CD5;&#x90FD;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002;&#x90FD;&#x662F;X&#x5343;X&#x767E;X&#x5341;X&#x3002;</p><p>&#x6211;&#x8BA4;&#x4E3A;&#x5173;&#x952E;&#x5728;&#x4E8E;0&#x7684;&#x5904;&#x7406;&#x3002;&#x5C0F;&#x5B66;&#x6570;&#x5B66;&#x6CA1;&#x5B66;&#x597D;&#xFF0C;&#x5927;&#x6982;&#x5199;&#x5199;&#x3002; 1. &#x5C06;&#x6240;&#x6709;&#x7684;&#x6570;&#x90FD;&#x770B;&#x4F5C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x5373;&#x90FD;&#x770B;&#x4F5C;9&#x4F4D;&#x6570;&#x6765;&#x5904;&#x7406;&#x3002; 2. &#x6709;&#x591A;&#x4E2A;&#x96F6;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EA;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x96F6;&#x3002;&#x6BD4;&#x5982;&#xFF0C;10024&#xFF0C;&#x8F93;&#x51FA;yi Wan ling er Shi si&#x3002; 3. &#x5BF9;&#x4E8E;&#x6700;&#x9AD8;&#x4F4D;&#x975E;&#x4EBF;&#x7684;&#xFF0C;&#x7B2C;&#x4E00;&#x4F4D;&#x4E4B;&#x524D;&#x4E0D;&#x8F93;&#x51FA;&#x96F6;&#xFF0C;&#x5373;405&#xFF0C;&#x8F93;&#x51FA;si Bai ling wu&#x3002;&#x800C;&#x4E0D;&#x662F;ling si Bai ling wu&#x3002; 4. &#x5982;&#x679C;&#x6A2A;&#x8DE8;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x6BD4;&#x5982;100001234&#xFF0C;&#x4E5F;&#x53EA;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;ling&#xFF0C;&#x5373;yi Yi ling yi Qian er Bai san Shi si&#x3002; 5. &#x5BF9;&#x4E8E;&#x5343;&#x767E;&#x5341;&#xFF0C;&#x8F93;&#x51FA;&#x6570;&#x5B57;&#x4E4B;&#x540E;&#xFF0C;&#x8FD8;&#x8981;&#x8F93;&#x51FA;&#x5355;&#x4F4D;&#x3002; 6. &#x6BCF;&#x90E8;&#x5206;&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x8F93;&#x51FA;&#x8FD9;&#x4E2A;&#x90E8;&#x5206;&#x5BF9;&#x5E94;&#x7684;&#x5355;&#x4F4D;&#xFF08;Yi / Wan / &#xFF09;&#x3002;</p><h2 id="tips">Tips</h2><ol type="1"><li>&#x8F93;&#x51FA;ling&#x65F6;&#xFF0C;&#x7528;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x6807;&#x8BB0;&#xFF0C;&#x5728;&#x96F6;&#x540E;&#x9047;&#x5230;&#x7684;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x975E;&#x96F6;&#x6570;&#x65F6;&#xFF0C;&#x8F93;&#x51FA;ling&#x3002;</li></ol><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> num[<span class="number">10</span>] = { <span class="string">&quot;ling&quot;</span>,<span class="string">&quot;yi&quot;</span>, <span class="string">&quot;er&quot;</span>, <span class="string">&quot;san&quot;</span>, <span class="string">&quot;si&quot;</span>, <span class="string">&quot;wu&quot;</span>, <span class="string">&quot;liu&quot;</span>, <span class="string">&quot;qi&quot;</span>, <span class="string">&quot;ba&quot;</span>, <span class="string">&quot;jiu&quot;</span> };</span><br><span class="line"><span class="built_in">string</span> c[<span class="number">6</span>] = { <span class="string">&quot;Ge&quot;</span>,<span class="string">&quot;Shi&quot;</span>, <span class="string">&quot;Bai&quot;</span>, <span class="string">&quot;Qian&quot;</span>, <span class="string">&quot;Yi&quot;</span>, <span class="string">&quot;Wan&quot;</span> };</span><br><span class="line"><span class="keyword">int</span> J[] = {</span><br><span class="line">    <span class="number">1</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">1000</span>,</span><br><span class="line">    <span class="number">10000</span>, <span class="number">100000</span>, <span class="number">1000000</span>, <span class="number">10000000</span>,</span><br><span class="line">    <span class="number">100000000</span> };</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;res;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ling&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (n&lt;<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Fu &quot;</span>;</span><br><span class="line">        n = -n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> part[<span class="number">3</span>];</span><br><span class="line">    part[<span class="number">0</span>]= n / <span class="number">100000000</span>;</span><br><span class="line">    <span class="comment">//int yi =</span></span><br><span class="line">    part[<span class="number">1</span>]= (n % <span class="number">100000000</span>) / <span class="number">10000</span>;</span><br><span class="line">    part[<span class="number">2</span>] = n % <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">bool</span> zero = <span class="literal">false</span>;<span class="comment">//&#x662F;&#x5426;&#x5728;&#x975E;&#x96F6;&#x6570;&#x5B57;&#x524D;&#x8F93;&#x51FA;&#x5408;&#x9002;&#x7684;ling</span></span><br><span class="line">    <span class="keyword">int</span> printCnt = <span class="number">0</span>;<span class="comment">//&#x7528;&#x4E8E;&#x7EF4;&#x62A4;&#x5355;&#x8BCD;&#x524D;&#x6CA1;&#x6709;&#x7A7A;&#x683C;&#xFF0C;&#x4E4B;&#x540E;&#x8F93;&#x5165;&#x7684;&#x5355;&#x8BCD;&#x90FD;&#x5728;&#x524D;&#x9762;&#x52A0;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x3002;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> temp = part[i];<span class="comment">//&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x6BCF;&#x90E8;&#x5206;&#x5185;&#x90E8;&#x7684;&#x547D;&#x540D;&#x89C4;&#x5219;&#x90FD;&#x4E00;&#x6837;&#xFF0C;&#x90FD;&#x662F;X&#x5343;X&#x767E;X&#x5341;X</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">3</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> curPos = <span class="number">8</span> - i * <span class="number">4</span> + j;<span class="comment">//&#x5F53;&#x524D;&#x6570;&#x5B57;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">            <span class="keyword">if</span> (curPos &gt;= <span class="number">9</span>)</span><br><span class="line">                <span class="keyword">continue</span>;<span class="comment">//&#x6700;&#x591A;&#x4E5D;&#x4F4D;&#x6570;</span></span><br><span class="line">            <span class="keyword">int</span> cur = (temp / J[j]) % <span class="number">10</span>;<span class="comment">//&#x53D6;&#x51FA;&#x5F53;&#x524D;&#x6570;&#x5B57;</span></span><br><span class="line">            <span class="keyword">if</span> (cur!=<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (zero)<span class="comment">//&#x524D;&#x9762;&#x6709;&#x96F6;</span></span><br><span class="line">                {</span><br><span class="line">                     printCnt++ == <span class="number">0</span> ? <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;ling&quot;</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot; ling&quot;</span>;</span><br><span class="line">                     zero = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    printCnt++ == <span class="number">0</span> ? <span class="built_in">cout</span> &lt;&lt; num[cur] : <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; num[cur];<span class="comment">//&#x5728;&#x4E2A;&#x4F4D;&#xFF0C;&#x76F4;&#x63A5;&#x8F93;&#x51FA;</span></span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                {<span class="comment">//&#x5728;&#x5176;&#x4ED6;&#x4F4D;&#xFF0C;&#x8FD8;&#x8981;&#x8F93;&#x51FA;&#x5341;&#x767E;&#x5343;</span></span><br><span class="line">                    printCnt++ == <span class="number">0</span> ? <span class="built_in">cout</span> &lt;&lt; num[cur] &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; c[j] : <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; num[cur] &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; c[j];</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (!zero&amp;&amp;j != <span class="number">0</span> &amp;&amp; n / J[curPos] &gt;= <span class="number">10</span>)<span class="comment">//&#x6CE8;&#x610F;100020&#x8FD9;&#x6837;&#x7684;&#x60C5;&#x51B5;</span></span><br><span class="line">                {</span><br><span class="line">                    zero = <span class="literal">true</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x5904;&#x7406;&#x5B8C;&#x6BCF;&#x90E8;&#x5206;&#x4E4B;&#x540E;&#xFF0C;&#x6700;&#x540E;&#x8F93;&#x51FA;&#x5355;&#x4F4D;&#xFF0C;Yi/Wan</span></span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">2</span> &amp;&amp; part[i]&gt;<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; c[i + <span class="number">4</span>];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x8F93;&#x5165;</span><br><span class="line"><span class="number">100001234</span></span><br><span class="line"></span><br><span class="line">&#x8F93;&#x51FA;</span><br><span class="line">yi Yi ling yi Qian er Bai san Shi si</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">-123456789</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Fu yi Yi er Qian san Bai si Shi wu Wan liu Qian qi Bai ba Shi jiu</span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">100800</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">yi Shi Wan ling ba Bai</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串处理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1079 Total Sales of Supply Chain (25)</title>
      <link href="//posts/b2da3c0e/"/>
      <url>//posts/b2da3c0e/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6C42;&#x4F9B;&#x5E94;&#x94FE;&#x7684;&#x9500;&#x552E;&#x603B;&#x989D;&#x3002; <a id="more"></a> &#x4E00;&#x5F20;&#x5305;&#x62EC;&#x96F6;&#x552E;&#x5546;&#xFF0C;&#x4E2D;&#x95F4;&#x7ECF;&#x9500;&#x5546;&#xFF0C;&#x4F9B;&#x5E94;&#x5546;&#x7684;&#x4E00;&#x5F20;&#x7F51;&#x7EDC;&#x3002;&#x8FD9;&#x5F20;&#x7F51;&#x7EDC;&#x91CC;&#x6CA1;&#x6709;&#x73AF;&#x3002;</p><p>&#x4ECE;&#x4E00;&#x4E2A;&#x6E90;&#x4F9B;&#x5E94;&#x5546;&#x5F00;&#x59CB;&#xFF0C;&#x4F9B;&#x5E94;&#x94FE;&#x4E0A;&#x6BCF;&#x4E2A;&#x6210;&#x5458;&#x4ECE;&#x63D0;&#x4F9B;&#x8005;&#x624B;&#x91CC;&#x7528;&#x4EF7;&#x683C;P&#x8D2D;&#x4E70;&#x5546;&#x54C1;&#xFF0C;&#x7136;&#x540E;&#x4EE5;&#x9AD8;&#x4E8E;P&#x767E;&#x5206;&#x4E4B;r&#x7684;&#x4EF7;&#x683C;&#xFF0C;&#x52A0;&#x4EF7;&#x5356;&#x7ED9;&#x4E0B;&#x5BB6;&#x3002;&#x53EA;&#x6709;&#x96F6;&#x552E;&#x5546;&#x662F;&#x9762;&#x5411;&#x987E;&#x5BA2;&#x7684;&#x3002;</p><p>&#x5047;&#x8BBE;&#x9664;&#x4E86;&#x6E90;&#x4F9B;&#x5E94;&#x5546;&#x4EE5;&#x5916;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x6210;&#x5458;&#x90FD;&#x53EA;&#x9762;&#x5411;&#x4E00;&#x4E2A;&#x4F9B;&#x5E94;&#x5546;&#x3002;</p><p>&#x73B0;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4F9B;&#x5E94;&#x94FE;&#xFF0C;&#x8981;&#x6C42;&#x8BA1;&#x7B97;&#x51FA;&#x6240;&#x6709;&#x96F6;&#x552E;&#x5546;&#x51FA;&#x552E;&#x6240;&#x6709;&#x5546;&#x54C1;&#x7684;&#x603B;&#x989D;&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x62EC;&#x662F;&#x4E09;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;N&#xFF0C;&#x8868;&#x793A;&#x4F9B;&#x5E94;&#x94FE;&#x4E0A;&#x6240;&#x6709;&#x6210;&#x5458;&#x7684;&#x4E2A;&#x6570;&#x3002;ID&#x4ECE;0~N-1&#x7F16;&#x53F7;&#xFF0C;&#x6E90;&#x4F9B;&#x5E94;&#x5546;&#x7684;&#x7F16;&#x53F7;&#x4E3A;0&#x3002;P&#xFF0C;&#x4E3A;&#x6E90;&#x4F9B;&#x5E94;&#x5546;&#x7ED9;&#x51FA;&#x7684;&#x4EF7;&#x683C;&#xFF0C;r&#xFF0C;&#x4E3A;&#x6BCF;&#x6B21;&#x52A0;&#x4EF7;&#x7684;&#x767E;&#x5206;&#x6BD4;&#x3002;</p><p>&#x63A5;&#x7740;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4EE5;&#x5982;&#x4E0B;&#x683C;&#x5F0F;&#x63CF;&#x8FF0;&#x4E86;&#x7ECF;&#x9500;&#x5546;&#x6216;&#x8005;&#x96F6;&#x552E;&#x5546;&#x7684;&#x4FE1;&#x606F;&#xFF1A;</p><p>Ki ID[1] ID[2] ... ID[Ki]</p><p>&#x7B2C;i&#x884C;&#x4E2D;&#x3002;Ki&#x6307;&#x4ECE;ID&#x4E3A;i&#x7684;&#x7ECF;&#x9500;&#x5546;&#x624B;&#x4E2D;&#x8FDB;&#x8D27;&#x7684;&#x96F6;&#x552E;&#x5546;&#x548C;&#x7ECF;&#x9500;&#x5546;&#x7684;&#x603B;&#x6570;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7684;ID&#x5C31;&#x662F;&#x8868;&#x660E;&#x6709;&#x54EA;&#x4E9B;&#x7ECF;&#x9500;&#x5546;&#x548C;&#x96F6;&#x552E;&#x5546;&#x3002;</p><p>&#x82E5;Ki&#x4E3A;0&#xFF0C;&#x90A3;&#x4E48;&#x4EE3;&#x8868;&#x8FD9;&#x4E2A;&#x4E3A;&#x96F6;&#x552E;&#x5546;&#xFF0C;&#x76F4;&#x63A5;&#x9762;&#x5BF9;&#x987E;&#x5BA2;&#xFF0C;&#x65E0;&#x4E0B;&#x5BB6;&#x4E86;&#x3002;&#x7136;&#x540E;&#x4EA7;&#x54C1;&#x603B;&#x6570;&#x4F1A;&#x5728;Ki&#x4E4B;&#x540E;&#x51FA;&#x7ED9;&#x3002;&#x6240;&#x6709;&#x6570;&#x636E;&#x4E4B;&#x95F4;&#xFF0C;&#x7531;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x5185;&#x8F93;&#x51FA;&#x6240;&#x6709;&#x96F6;&#x552E;&#x5546;&#x7684;&#x603B;&#x9500;&#x552E;&#x989D;&#xFF0C;&#x7CBE;&#x786E;&#x5230;&#x5C0F;&#x6570;&#x70B9;&#x540E;&#x4E00;&#x4F4D;&#x3002;&#x4FDD;&#x8BC1;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;10^10&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; DFS&#xFF0C;&#x6CE8;&#x610F;&#x4FDD;&#x5B58;DFS&#x7684;&#x5C42;&#x6570;&#xFF0C;&#x6700;&#x540E;&#x6309;&#x5E42;&#x6B21;&#x4E58;&#x5728;P&#x4E0A;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; buy;<span class="comment">//&#x8868;&#x793A;&#x96F6;&#x552E;&#x5546;&#x5356;&#x51FA;&#x53BB;&#x591A;&#x5C11;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;G;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">double</span> r, P, res=<span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> step)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> end = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G[num].size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> v = G[num][i];</span><br><span class="line">        end = <span class="number">0</span>;</span><br><span class="line">        DFS(v, step + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (end)</span><br><span class="line">    {</span><br><span class="line">        res += P*(<span class="built_in">pow</span>((<span class="number">1</span> + r*<span class="number">0.01</span>), step)* buy[num]);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; P &gt;&gt; r;</span><br><span class="line">    G.resize(N);</span><br><span class="line">    buy.resize(N);</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; b;</span><br><span class="line">            G[i].push_back(b);<span class="comment">//b&#x662F;a&#x7684;&#x4E0B;&#x5BB6;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; b;</span><br><span class="line">            buy[i] = b;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    DFS(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.1f\n&quot;</span>, res);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span> <span class="number">1.80</span> <span class="number">1.00</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">9</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">7</span></span><br><span class="line"><span class="number">0</span> <span class="number">7</span></span><br><span class="line"><span class="number">2</span> <span class="number">6</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">8</span></span><br><span class="line"><span class="number">0</span> <span class="number">9</span></span><br><span class="line"><span class="number">0</span> <span class="number">4</span></span><br><span class="line"><span class="number">0</span> <span class="number">3</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">42.4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> DFS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1080 Graduate Admission (30)</title>
      <link href="//posts/f4728b59/"/>
      <url>//posts/f4728b59/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x7814;&#x7A76;&#x751F;&#x62DB;&#x751F;&#x5F55;&#x53D6;&#x3002; <a id="more"></a> &#x53C8;&#x5230;&#x4E86;&#x4E00;&#x5E74;&#x7814;&#x62DB;&#x5B63;&#x3002;&#x5728;&#x6D59;&#x6C5F;&#x7701;&#xFF0C;&#x5927;&#x7EA6;&#x6709;100&#x4E2A;&#x7814;&#x62DB;&#x70B9;&#x548C;&#x8D85;&#x8FC7;40000&#x4E2A;&#x7533;&#x8BF7;&#x4EBA;&#x3002;&#x8981;&#x6C42;&#x4F60;&#x5199;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;&#xFF0C;&#x6C42;&#x51FA;&#x54EA;&#x4E9B;&#x4EBA;&#x53EF;&#x4EE5;&#x8003;&#x4E0A;&#x3002;</p><p>&#x7ED9;&#x51FA;&#x521D;&#x8BD5;&#x6210;&#x7EE9;Ge&#x548C;&#x590D;&#x8BD5;&#x6210;&#x7EE9;Gi&#xFF0C;&#x6700;&#x540E;&#x7684;&#x603B;&#x6210;&#x7EE9;&#x662F;&#xFF08;Ge+Gi&#xFF09;/2&#x3002;</p><p>&#x89C4;&#x5219;&#x5982;&#x4E0B;&#xFF1A; 1. &#x8003;&#x751F;&#x6839;&#x636E;&#x4ED6;&#x4EEC;&#x7684;&#x6700;&#x7EC8;&#x6210;&#x7EE9;&#x6392;&#x540D;&#xFF0C;&#x7531;&#x9AD8;&#x5230;&#x4F4E;&#x9010;&#x4E00;&#x5F55;&#x53D6;&#x3002; 2. &#x5982;&#x679C;&#x603B;&#x6210;&#x7EE9;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x521D;&#x8BD5;&#x6210;&#x7EE9;Ge&#x9AD8;&#x8005;&#x4F18;&#x5148;&#x3002;&#x5982;&#x679C;&#x4EFB;&#x7136;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x4ED6;&#x4EEC;&#x7684;&#x6700;&#x7EC8;&#x6392;&#x540D;&#x76F8;&#x540C;&#x3002; 3. &#x6BCF;&#x4E2A;&#x8003;&#x751F;&#x53EF;&#x4EE5;&#x586B;K&#x4E2A;&#x5FD7;&#x613F;&#xFF0C;&#x6309;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x8FDB;&#x884C;&#x6295;&#x6863;&#x3002;&#x6839;&#x636E;&#x540D;&#x6B21;&#x6392;&#x540D;&#xFF0C;&#x8F6E;&#x5230;&#x4ED6;&#x6295;&#x6863;&#x65F6;&#xFF0C;&#x5BF9;&#x4ED6;&#x7684;K&#x4E2A;&#x5FD7;&#x613F;&#x6309;&#x5148;&#x540E;&#x4F9D;&#x6B21;&#x68C0;&#x6D4B;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x5FD7;&#x613F;&#x5B66;&#x6821;&#x8FD8;&#x5269;&#x6709;&#x540D;&#x989D;&#xFF0C;&#x5219;&#x6295;&#x6863;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x540D;&#x8003;&#x751F;&#x88AB;&#x6240;&#x6709;&#x7684;&#x5B66;&#x6821;&#x90FD;&#x62D2;&#x7EDD;&#x4E86;&#xFF0C;&#x5219;&#x4ED6;&#x843D;&#x699C;&#x3002; 4. &#x5BF9;&#x4E8E;&#x540D;&#x6B21;&#x5E76;&#x5217;&#xFF0C;&#x5E76;&#x4E14;&#x90FD;&#x7533;&#x8BF7;&#x540C;&#x4E00;&#x6240;&#x5B66;&#x6821;&#x7684;&#x8003;&#x751F;&#xFF0C;&#x82E5;&#x6709;&#x4E00;&#x4E2A;&#x4EBA;&#x88AB;&#x5F55;&#x53D6;&#xFF0C;&#x5219;&#x6240;&#x6709;&#x7684;&#x8003;&#x751F;&#x90FD;&#x5F97;&#x88AB;&#x5F55;&#x53D6;&#xFF0C;&#x5373;&#x4F7F;&#x8D85;&#x8FC7;&#x4E86;&#x8BE5;&#x5B66;&#x6821;&#x7684;&#x914D;&#x989D;&#x3002;</p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E09;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;N&#xFF08;&lt;=40000&#xFF09;&#xFF0C;&#x8868;&#x793A;&#x7533;&#x8BF7;&#x7684;&#x603B;&#x4EBA;&#x6570;&#xFF1B;M(&lt;=100)&#xFF0C;&#x7814;&#x7A76;&#x751F;&#x62DB;&#x751F;&#x70B9;&#x7684;&#x6570;&#x91CF;&#xFF1B;K&#xFF08;&lt;=5&#xFF09;&#x6BCF;&#x4E2A;&#x8003;&#x751F;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x586B;&#x7684;&#x5FD7;&#x613F;&#x6570;&#x3002;</p><p>&#x5728;&#x4E0B;&#x4E00;&#x884C;&#xFF0C;&#x6709;M&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x7B2C;i&#x4E2A;&#x8868;&#x793A;&#x7B2C;i&#x4E2A;&#x7814;&#x7A76;&#x751F;&#x62DB;&#x751F;&#x70B9;&#x7684;&#x914D;&#x989D;&#x3002;</p><p>&#x968F;&#x540E;&#x6709;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x6709;K+2&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x524D;&#x4E24;&#x4E2A;&#x662F;&#x8003;&#x751F;&#x7684;Ge&#x548C;Gi&#xFF0C;&#x540E;K&#x4E2A;&#x4EE3;&#x8868;&#x5FD7;&#x613F;&#x3002;</p><p>&#x4E3A;&#x7B80;&#x5355;&#x8D77;&#x89C1;&#xFF0C;&#x5047;&#x8BBE;&#x62DB;&#x751F;&#x70B9;&#x7684;&#x7F16;&#x53F7;&#x4E3A;0<sub>M-1&#xFF0C;&#x8003;&#x751F;&#x7F16;&#x53F7;&#x4E3A;0</sub>N-1&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x6240;&#x6709;&#x7814;&#x62DB;&#x70B9;&#x7684;&#x5F55;&#x53D6;&#x7ED3;&#x679C;&#xFF0C;&#x6BCF;&#x4E2A;&#x7814;&#x62DB;&#x70B9;&#x7684;&#x6210;&#x7EE9;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x5F55;&#x53D6;&#x7684;&#x8003;&#x751F;&#x7684;&#x7F16;&#x53F7;&#x3002;&#x6309;&#x5347;&#x5E8F;&#x6392;&#x5217;&#xFF0C;&#x7531;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002;</p><p>&#x5982;&#x679C;&#x6B64;&#x7814;&#x62DB;&#x70B9;&#x6CA1;&#x6709;&#x5F55;&#x53D6;&#x4EFB;&#x4F55;&#x8003;&#x751F;&#xFF0C;&#x5219;&#x76F8;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x7A7A;&#x884C;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x7167;&#x6210;&#x7EE9;&#x8FDB;&#x884C;&#x6295;&#x6863;&#xFF0C;&#x5F55;&#x53D6;&#x6761;&#x4EF6;&#x53EF;&#x4EE5;&#x7B80;&#x5316;&#x4E3A;&#xFF1A; 1. &#x6240;&#x6295;&#x7684;&#x5355;&#x4F4D;&#x672A;&#x62DB;&#x6EE1; 2. &#x62DB;&#x6EE1;&#x4E86;&#x4F46;&#x662F;&#x548C;&#x6700;&#x540E;&#x4E00;&#x540D;&#x7684;&#x603B;&#x5206;&#x548C;Ge&#x5206;&#x76F8;&#x540C;</p><p>&#x4EE5;&#x4E0A;&#x4E24;&#x4E2A;&#x6761;&#x4EF6;&#xFF0C;&#x4EFB;&#x610F;&#x6EE1;&#x8DB3;&#x5176;&#x4E00;&#x5373;&#x53EF;&#x3002; ## Tips &#x65F6;&#x95F4;&#x9650;&#x5236;&#x5F88;&#x77ED;&#xFF0C;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x53C8;&#x6709;&#x5F88;&#x591A;&#xFF0C;&#x8981;&#x7528;scanf/printf&#x4EE3;&#x66FF;cin/cout&#x3002;&#x5426;&#x5219;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x8D85;&#x65F6; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, M, K;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> Ge;</span><br><span class="line">    <span class="keyword">int</span> Gi;</span><br><span class="line">    <span class="keyword">int</span> Total;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; wish;<span class="comment">//&#x5FD7;&#x613F;&#x96C6;&#x5408;</span></span><br><span class="line">    <span class="keyword">int</span> ID;</span><br><span class="line">}student;</span><br><span class="line"><span class="built_in">vector</span>&lt;student&gt; S;<span class="comment">//&#x5B66;&#x751F;&#x96C6;&#x5408;</span></span><br><span class="line"><span class="keyword">int</span> college[<span class="number">101</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(student a, student b)</span><span class="comment">//&#x6392;&#x5E8F;&#x51FD;&#x6570;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.Total != b.Total)</span><br><span class="line">        <span class="keyword">return</span> a.Total &gt; b.Total;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.Ge &gt; b.Ge;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M &gt;&gt; K;</span><br><span class="line">    S.resize(N);</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; college[i];<span class="comment">//&#x8F93;&#x5165;&#x540D;&#x989D;&#x6570;&#x91CF;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d &quot;</span>, &amp;S[i].Ge, &amp;S[i].Gi);</span><br><span class="line">        S[i].Total = S[i].Ge + S[i].Gi;</span><br><span class="line">        S[i].wish.resize(K);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; K; j++)<span class="comment">//&#x8F93;&#x5165;&#x5FD7;&#x613F;&#x4FE1;&#x606F;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;S[i].wish[j]);</span><br><span class="line">        }</span><br><span class="line">        S[i].ID = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">vector</span>&lt;student&gt; S1 = S;<span class="comment">//&#x4FDD;&#x5B58;ID&#x4FE1;&#x606F;</span></span><br><span class="line">    sort(S.begin(), S.end(), cmp);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res;<span class="comment">//&#x5B58;&#x653E;&#x7ED3;&#x679C;</span></span><br><span class="line">    res.resize(M);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; K; j++)</span><br><span class="line">        {</span><br><span class="line">            temp = S[i].wish[j];<span class="comment">//&#x5F53;&#x524D;&#x5FD7;&#x613F;</span></span><br><span class="line">            <span class="keyword">if</span> (college[temp] &gt; <span class="number">0</span>||(S1[res[temp].back()].Ge == S[i].Ge&amp;&amp;S1[res[temp].back()].Total == S[i].Total))<span class="comment">//&#x8FD8;&#x6709;&#x540D;&#x989D;&#xFF0C;&#x6216;&#x8005;&#x62DB;&#x6EE1;&#x60C5;&#x51B5;&#xFF0C;&#x6BD4;&#x8F83;&#x62A5;&#x8003;&#x5B66;&#x6821;&#x6700;&#x540E;&#x4E00;&#x540D;&#x5B66;&#x751F;&#x7684;&#x6210;&#x7EE9;&#x548C;&#x5F53;&#x524D;&#x5B66;&#x751F;&#x7684;&#x6210;&#x7EE9;</span></span><br><span class="line">            {</span><br><span class="line">                res[temp].push_back(S[i].ID);<span class="comment">//&#x6295;&#x6863;</span></span><br><span class="line">                college[temp]--;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    {</span><br><span class="line">        sort(res[i].begin(), res[i].end());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; res[i].size(); j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res[i][j]);</span><br><span class="line">            <span class="keyword">if</span> (j!= res[i].size()<span class="number">-1</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">11</span> <span class="number">6</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">100</span> <span class="number">100</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">60</span> <span class="number">60</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">100</span> <span class="number">90</span> <span class="number">0</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">90</span> <span class="number">100</span> <span class="number">1</span> <span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="number">90</span> <span class="number">90</span> <span class="number">5</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">80</span> <span class="number">90</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="number">80</span> <span class="number">80</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">80</span> <span class="number">80</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">80</span> <span class="number">70</span> <span class="number">1</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">70</span> <span class="number">80</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">100</span> <span class="number">100</span> <span class="number">0</span> <span class="number">2</span> <span class="number">4</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span> <span class="number">7</span></span><br><span class="line"><span class="number">2</span> <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#x8F93;&#x5165;</span><br><span class="line"><span class="number">20</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">9</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="number">7</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">6</span> <span class="number">0</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">3</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="number">6</span> <span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">6</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">4</span> <span class="number">8</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">6</span> <span class="number">2</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span> <span class="number">9</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="number">7</span> <span class="number">0</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">7</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">9</span> <span class="number">7</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">6</span> <span class="number">7</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&#x8F93;&#x51FA;</span><br><span class="line"><span class="number">0</span> <span class="number">4</span> <span class="number">8</span> <span class="number">11</span></span><br><span class="line"><span class="number">2</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">10</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span></span><br><span class="line"><span class="number">19</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1078 Hashing (25)</title>
      <link href="//posts/923495e5/"/>
      <url>//posts/923495e5/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x5E73;&#x65B9;&#x63A2;&#x67E5;&#x6CD5;&#x3002; <a id="more"></a> &#x6563;&#x5217;&#x51FD;&#x6570;&#x662F;H(key) = key % TSize &#xFF0C;&#x5176;&#x4E2D;Tsize&#x662F;&#x6563;&#x5217;&#x8868;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5E73;&#x65B9;&#x63A2;&#x67E5;&#x6CD5;&#x7528;&#x4E8E;&#x89E3;&#x51B3;&#x51B2;&#x7A81;&#xFF0C;&#x53EA;&#x8003;&#x8651;&#x589E;&#x91CF;&#x3002;&#x5982;&#x679C;&#x8868;&#x683C;&#x5927;&#x5C0F;&#x4E0D;&#x4E3A;&#x7D20;&#x6570;&#xFF0C;&#x5219;&#x8981;&#x5C06;&#x5176;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x4E3A;&#x5927;&#x4E8E;&#x7528;&#x6237;&#x7ED9;&#x5B9A;&#x5927;&#x5C0F;&#x7684;&#x6700;&#x5C0F;&#x7D20;&#x6570;&#x3002; ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x8F93;&#x5165;&#x4E24;&#x4E2A;&#x6B63;&#x6570;&#xFF0C;Msizie&#xFF08;&lt;=10000&#xFF09;&#x548C;N&#xFF0C;&#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x7528;&#x6237;&#x7684;hash&#x8868;&#x5927;&#x5C0F;&#x548C;&#x6570;&#x5B57;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p>&#x7136;&#x540E;&#x7ED9;&#x51FA;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x7531;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x6570;&#x5B57;&#x76F8;&#x5E94;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4ECE;0&#x5F00;&#x59CB;&#x7D22;&#x5F15;&#xFF0C;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x95F4;&#x7531;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002;&#x82E5;&#x65E0;&#x6CD5;&#x63D2;&#x5165;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&quot;-&quot;&#x3002; # &#x89E3;&#x9898;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> num)</span><span class="comment">//&#x5224;&#x65AD;&#x7D20;&#x6570;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (num == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i *i&lt;= num; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (num%i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> hashTable[<span class="number">10010</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> tsize, n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; tsize &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (!isPrime(tsize))</span><br><span class="line">    {</span><br><span class="line">        tsize++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        <span class="keyword">int</span> j,k;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; tsize; j++)</span><br><span class="line">        {</span><br><span class="line">            k = (temp + j*j) % tsize;<span class="comment">//&#x5E73;&#x65B9;&#x63A2;&#x6D4B;</span></span><br><span class="line">            <span class="keyword">if</span> (!hashTable[k])</span><br><span class="line">            {</span><br><span class="line">                hashTable[k] = <span class="literal">true</span>;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; k;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (j == tsize)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (i != n - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="number">10</span> <span class="number">6</span> <span class="number">4</span> <span class="number">15</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">4</span> -</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> Hash </tag>
            
            <tag> 平方探查法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1077 Kuchiguse (20)</title>
      <link href="//posts/6e8a40c3/"/>
      <url>//posts/6e8a40c3/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1077" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x65E5;&#x8BED;&#x7684;&#x5C3E;&#x97F3;&#x3002; <a id="more"></a> &#x7ED9;&#x5B9A;N&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6C42;&#x4ED6;&#x4EEC;&#x7684;&#x516C;&#x5171;&#x540E;&#x7F00;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x516C;&#x5171;&#x540E;&#x7F00;&#xFF0C;&#x8F93;&#x51FA;nai&#x3002; ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x6574;N&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x662F;N&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6BCF;&#x4E2A;&#x5360;&#x4E00;&#x884C;&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x8FD9;N&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x516C;&#x5171;&#x540E;&#x7F00;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x5B57;&#x7B26;&#x4E32;&#x5904;&#x7406; ## Tips &#x53EF;&#x4EE5;&#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x9006;&#x7F6E;&#xFF0C;&#x8FD9;&#x6837;&#x53EA;&#x9700;&#x8981;&#x6BD4;&#x8F83;&#x524D;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">string</span> ans,s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//cin &gt;&gt; N;</span></span><br><span class="line">    <span class="comment">//cin.ignore();          //&#x7528;&#x8FD9;&#x4E24;&#x4E2A;&#x6216;&#x8005;&#x4E0B;&#x9762;&#x7684;scanf</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d\n&quot;</span>, &amp;N);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        getline(<span class="built_in">cin</span>, s);</span><br><span class="line">        <span class="keyword">int</span> length = s.length();</span><br><span class="line">        reverse(s.begin(), s.end());</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            ans = s;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> ans_length = ans.length();</span><br><span class="line">            <span class="keyword">int</span> min_length = min(ans_length, length);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; min_length; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (ans[j]!=s[j])</span><br><span class="line">                {</span><br><span class="line">                    ans = ans.substr(<span class="number">0</span>, j);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    reverse(ans.begin(), ans.end());</span><br><span class="line">    <span class="keyword">if</span> (ans.length() == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;nai&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line">Itai nyan~</span><br><span class="line">Ninjin wa iyadanyan~</span><br><span class="line">uhhh nyan~</span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">nyan~</span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line">Itai!</span><br><span class="line">Ninjinnwaiyada T_T</span><br><span class="line">T_T</span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">nai</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>已知二叉树的中序和前序序列(或后序)求解树</title>
      <link href="//posts/b3684980/"/>
      <url>//posts/b3684980/</url>
      <content type="html"><![CDATA[<h1 id="&#x5E8F;&#x8A00;">&#x5E8F;&#x8A00;</h1><p>&#x8FD9;&#x79CD;&#x9898;&#x4E00;&#x822C;&#x6709;&#x4E24;&#x79CD;&#x5F62;&#x5F0F;&#xFF0C;&#x5171;&#x540C;&#x70B9;&#x662F;&#x90FD;&#x5DF2;&#x77E5;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;&#xFF0C;&#x662F;&#x65E0;&#x6CD5;&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x68F5;&#x6811;&#x7684;&#xFF0C;&#x8BC1;&#x660E;&#x7565;&#x3002; <a id="more"></a></p><h1 id="&#x5DF2;&#x77E5;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x524D;&#x5E8F;&#x5E8F;&#x5217;&#x548C;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;">&#x5DF2;&#x77E5;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x524D;&#x5E8F;&#x5E8F;&#x5217;&#x548C;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;</h1><p>&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p><ol type="1"><li>&#x786E;&#x5B9A;&#x6811;&#x7684;&#x6839;&#x8282;&#x70B9;&#x3002;<strong>&#x6811;&#x6839;&#x662F;&#x5F53;&#x524D;&#x6811;&#x4E2D;&#x6240;&#x6709;&#x5143;&#x7D20;&#x5728;&#x524D;&#x5E8F;&#x904D;&#x5386;&#x4E2D;&#x6700;&#x5148;&#x51FA;&#x73B0;&#x7684;&#x5143;&#x7D20;&#x3002;</strong></li><li>&#x6C42;&#x89E3;&#x6811;&#x7684;&#x5B50;&#x6811;&#x3002;&#x627E;&#x51FA;&#x6839;&#x8282;&#x70B9;&#x5728;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x6839;&#x5DE6;&#x8FB9;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x5C31;&#x662F;&#x5DE6;&#x5B50;&#x6811;&#xFF0C;&#x6839;&#x53F3;&#x8FB9;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x5C31;&#x662F;&#x53F3;&#x5B50;&#x6811;&#x3002;&#x82E5;&#x6839;&#x8282;&#x70B9;&#x5DE6;&#x8FB9;&#x6216;&#x53F3;&#x8FB9;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8BE5;&#x65B9;&#x5411;&#x5B50;&#x6811;&#x4E3A;&#x7A7A;&#xFF1B;&#x82E5;&#x6839;&#x8282;&#x70B9;&#x5DE6;&#x8FB9;&#x548C;&#x53F3;&#x8FB9;&#x90FD;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x6839;&#x8282;&#x70B9;&#x5DF2;&#x7ECF;&#x4E3A;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x3002;</li><li>&#x9012;&#x5F52;&#x6C42;&#x89E3;&#x6811;&#x3002;&#x5C06;&#x5DE6;&#x5B50;&#x6811;&#x548C;&#x53F3;&#x5B50;&#x6811;&#x5206;&#x522B;&#x770B;&#x6210;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x91CD;&#x590D;1&#x3001;2&#x3001;3&#x6B65;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x7684;&#x8282;&#x70B9;&#x5B8C;&#x6210;&#x5B9A;&#x4F4D;&#x3002;</li></ol><h1 id="&#x5DF2;&#x77E5;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x540E;&#x5E8F;&#x5E8F;&#x5217;&#x548C;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;">&#x5DF2;&#x77E5;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x540E;&#x5E8F;&#x5E8F;&#x5217;&#x548C;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;</h1><ol type="1"><li>&#x786E;&#x5B9A;&#x6811;&#x7684;&#x6839;&#x3002;<strong>&#x6811;&#x6839;&#x662F;&#x5F53;&#x524D;&#x6811;&#x4E2D;&#x6240;&#x6709;&#x5143;&#x7D20;&#x5728;&#x540E;&#x5E8F;&#x904D;&#x5386;&#x4E2D;&#x6700;&#x540E;&#x51FA;&#x73B0;&#x7684;&#x5143;&#x7D20;&#x3002;</strong></li><li>&#x6C42;&#x89E3;&#x6811;&#x7684;&#x5B50;&#x6811;&#x3002;&#x627E;&#x51FA;&#x6839;&#x8282;&#x70B9;&#x5728;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x6839;&#x5DE6;&#x8FB9;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x5C31;&#x662F;&#x5DE6;&#x5B50;&#x6811;&#xFF0C;&#x6839;&#x53F3;&#x8FB9;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x5C31;&#x662F;&#x53F3;&#x5B50;&#x6811;&#x3002;&#x82E5;&#x6839;&#x8282;&#x70B9;&#x5DE6;&#x8FB9;&#x6216;&#x53F3;&#x8FB9;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8BE5;&#x65B9;&#x5411;&#x5B50;&#x6811;&#x4E3A;&#x7A7A;&#xFF1B;&#x82E5;&#x6839;&#x8282;&#x70B9;&#x5DE6;&#x8FB9;&#x548C;&#x53F3;&#x8FB9;&#x90FD;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x6839;&#x8282;&#x70B9;&#x5DF2;&#x7ECF;&#x4E3A;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x3002;</li><li>&#x9012;&#x5F52;&#x6C42;&#x89E3;&#x6811;&#x3002;&#x5C06;&#x5DE6;&#x5B50;&#x6811;&#x548C;&#x53F3;&#x5B50;&#x6811;&#x5206;&#x522B;&#x770B;&#x6210;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x91CD;&#x590D;1&#x3001;2&#x3001;3&#x6B65;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x7684;&#x8282;&#x70B9;&#x5B8C;&#x6210;&#x5B9A;&#x4F4D;&#x3002;</li></ol><h1 id="&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;">&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;</h1><p>&#x4E3E;&#x4E2A;&#x6817;&#x5B50;&#xFF1A;<br>&#x4E2D;&#x5E8F;&#x5E8F;&#x5217; HLDBEKAFCG<br>&#x540E;&#x5E8F;&#x5E8F;&#x5217; LHDKEBFGCA</p><ol type="1"><li>&#x5728;&#x540E;&#x5E8F;&#x5E8F;&#x5217;LHDKEBFGCA&#x4E2D;&#x6700;&#x540E;&#x51FA;&#x73B0;&#x7684;&#x5143;&#x7D20;&#x4E3A;A&#xFF0C;HLDBEK|<font color="#FF0000">A</font>|FCG</li><li>&#x5728;&#x540E;&#x5E8F;&#x5E8F;&#x5217;LHDKEB&#x4E2D;&#x6700;&#x540E;&#x51FA;&#x73B0;&#x7684;&#x5143;&#x7D20;&#x4E3A;B&#xFF0C;HLD|<font color="#FF0000">B</font>|EK|A|FCG</li><li>&#x5728;&#x540E;&#x5E8F;&#x5E8F;&#x5217;LHD&#x4E2D;&#x6700;&#x540E;&#x51FA;&#x73B0;&#x7684;&#x5143;&#x7D20;&#x4E3A;D&#xFF0C;HL|<font color="#FF0000">D</font>|B|EK|A|FCG</li><li>&#x5728;&#x540E;&#x5E8F;&#x5E8F;&#x5217;LH&#x4E2D;&#x6700;&#x540E;&#x51FA;&#x73B0;&#x7684;&#x5143;&#x7D20;&#x4E3A;H&#xFF0C;<font color="#FF0000">H</font>|L|D|B|EK|A|FCG</li><li>&#x5728;&#x540E;&#x5E8F;&#x5E8F;&#x5217;KE&#x4E2D;&#x6700;&#x540E;&#x51FA;&#x73B0;&#x7684;&#x5143;&#x7D20;&#x4E3A;E&#xFF0C;H|L|D|B|<font color="#FF0000">E</font>|K|A|FCG</li><li>&#x5728;&#x540E;&#x5E8F;&#x5E8F;&#x5217;FGC&#x4E2D;&#x6700;&#x540E;&#x51FA;&#x73B0;&#x7684;&#x5143;&#x7D20;&#x4E3A;C&#xFF0C;H|L|D|B|E|K|A|F|<font color="#FF0000">C</font>|G</li><li>&#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x5DF2;&#x7ECF;&#x5B9A;&#x4F4D;&#xFF0C;&#x4E8C;&#x53C9;&#x6811;&#x6C42;&#x89E3;&#x5B8C;&#x6210;&#x3002; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">        A</span><br><span class="line">     /     \</span><br><span class="line">    B       C</span><br><span class="line">   / \     /  \</span><br><span class="line">  D  E     F   G</span><br><span class="line"> /    \</span><br><span class="line">H      K                                   </span><br><span class="line"> \                        </span><br><span class="line">  L</span><br></pre></td></tr></table></figure></li></ol><h1 id="&#x53C2;&#x8003;&#x4EE3;&#x7801;">&#x53C2;&#x8003;&#x4EE3;&#x7801;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x529F;&#x80FD;: 1.&#x5229;&#x7528;&#x6811;&#x7684;&#x524D;&#x5E8F;&#x548C;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;&#x521B;&#x5EFA;&#x6811;</span></span><br><span class="line"><span class="comment">2.&#x5229;&#x7528;&#x6811;&#x7684;&#x540E;&#x5E8F;&#x548C;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;&#x521B;&#x5EFA;&#x6811;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> pre[<span class="number">50</span>] = <span class="string">&quot;ABDHLEKCFG&quot;</span>;        <span class="comment">//&#x524D;&#x5E8F;&#x5E8F;&#x5217;</span></span><br><span class="line"><span class="keyword">char</span> mid[<span class="number">50</span>] = <span class="string">&quot;HLDBEKAFCG&quot;</span>;        <span class="comment">//&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;</span></span><br><span class="line"><span class="keyword">char</span> post[<span class="number">50</span>] = <span class="string">&quot;LHDKEBFGCA&quot;</span>;        <span class="comment">//&#x540E;&#x5E8F;&#x5E8F;&#x5217;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">Node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">char</span> v;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">Node</span> *<span class="title">left</span> = <span class="title">NULL</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">Node</span> *<span class="title">right</span> = <span class="title">NULL</span>;</span></span><br><span class="line">}Node, *PNode;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostTravelTree</span><span class="params">(PNode pn)</span></span>;        <span class="comment">//&#x6811;&#x7684;&#x540E;&#x5E8F;&#x9012;&#x5F52;&#x904D;&#x5386;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreTravelTree</span><span class="params">(PNode pn)</span></span>;        <span class="comment">//&#x6811;&#x7684;&#x524D;&#x5E8F;&#x9012;&#x5F52;&#x904D;&#x5386;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreMidCreateTree</span><span class="params">(PNode &amp;pn, <span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> len)</span></span>;        <span class="comment">//&#x5229;&#x7528;&#x524D;&#x5E8F;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;&#x521B;&#x5EFA;&#x6811;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostMidCreateTree</span><span class="params">(PNode &amp;pn, <span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> len)</span></span>;        <span class="comment">//&#x5229;&#x7528;&#x540E;&#x5E8F;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;&#x521B;&#x5EFA;&#x6811;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Position</span><span class="params">(<span class="keyword">char</span> c)</span></span>;                <span class="comment">//&#x786E;&#x5B9A;c&#x5728;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;mid&#x4E2D;&#x7684;&#x4E0B;&#x6807;,&#x5047;&#x8BBE;&#x6811;&#x7684;&#x5404;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x503C;&#x5404;&#x4E0D;&#x76F8;&#x540C;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    PNode root1 = <span class="literal">NULL</span>, root2 = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    PreMidCreateTree(root1, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">strlen</span>(mid));</span><br><span class="line">    PostTravelTree(root1); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//&#x540E;&#x5E8F;</span></span><br><span class="line">    PostMidCreateTree(root2, <span class="built_in">strlen</span>(post) - <span class="number">1</span>, <span class="number">0</span>, <span class="built_in">strlen</span>(mid));</span><br><span class="line">    PreTravelTree(root2); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//&#x5148;&#x5E8F;</span></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Position</span><span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strchr</span>(mid, c) - mid;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*        i: &#x5B50;&#x6811;&#x7684;&#x524D;&#x5E8F;&#x5E8F;&#x5217;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x9996;&#x5B57;&#x7B26;&#x5728;pre[]&#x4E2D;&#x7684;&#x4E0B;&#x6807;</span></span><br><span class="line"><span class="comment">*        j: &#x5B50;&#x6811;&#x7684;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x9996;&#x5B57;&#x7B26;&#x5728;mid[]&#x4E2D;&#x7684;&#x4E0B;&#x6807;</span></span><br><span class="line"><span class="comment">*      len: &#x5B50;&#x6811;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreMidCreateTree</span><span class="params">(PNode &amp;pn, <span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (len &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    pn = <span class="keyword">new</span> Node;</span><br><span class="line">    pn-&gt;v = pre[i];</span><br><span class="line">    <span class="keyword">int</span> m = Position(pre[i]);</span><br><span class="line">    PreMidCreateTree(pn-&gt;left, i + <span class="number">1</span>, j, m - j);            <span class="comment">//m-j&#x4E3A;&#x5DE6;&#x5B50;&#x6811;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;</span></span><br><span class="line">    PreMidCreateTree(pn-&gt;right, i + (m - j) + <span class="number">1</span>, m + <span class="number">1</span>, len - <span class="number">1</span> - (m - j));    <span class="comment">//len-1-(m-j)&#x4E3A;&#x53F3;&#x5B50;&#x6811;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*  &#x5229;&#x7528;&#x540E;&#x5E8F;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;&#x521B;&#x5EFA;&#x6811;</span></span><br><span class="line"><span class="comment">*        i: &#x5B50;&#x6811;&#x7684;&#x540E;&#x5E8F;&#x5E8F;&#x5217;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5C3E;&#x5B57;&#x7B26;&#x5728;post[]&#x4E2D;&#x7684;&#x4E0B;&#x6807;</span></span><br><span class="line"><span class="comment">*        j: &#x5B50;&#x6811;&#x7684;&#x4E2D;&#x5E8F;&#x5E8F;&#x5217;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x9996;&#x5B57;&#x7B26;&#x5728;mid[]&#x4E2D;&#x7684;&#x4E0B;&#x6807;</span></span><br><span class="line"><span class="comment">*      len: &#x5B50;&#x6811;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostMidCreateTree</span><span class="params">(PNode &amp;pn, <span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (len &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    pn = <span class="keyword">new</span> Node;</span><br><span class="line">    pn-&gt;v = post[i];</span><br><span class="line">    <span class="keyword">int</span> m = Position(post[i]);</span><br><span class="line">    PostMidCreateTree(pn-&gt;left, i - <span class="number">1</span> - (len - <span class="number">1</span> - (m - j)), j, m - j);<span class="comment">//&#x6CE8;&#x610F;&#x53C2;&#x6570;:m-j&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x957F;&#x5EA6;,len-1-(m-j)&#x53F3;&#x5B50;&#x6811;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line">    PostMidCreateTree(pn-&gt;right, i - <span class="number">1</span>, m + <span class="number">1</span>, len - <span class="number">1</span> - (m - j));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostTravelTree</span><span class="params">(PNode pn)</span>        <span class="comment">//&#x540E;&#x5E8F;&#x9012;&#x5F52;&#x904D;&#x5386;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (pn)</span><br><span class="line">    {</span><br><span class="line">        PostTravelTree(pn-&gt;left);</span><br><span class="line">        PostTravelTree(pn-&gt;right);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; pn-&gt;v &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreTravelTree</span><span class="params">(PNode pn)</span>        <span class="comment">//&#x524D;&#x5E8F;&#x9012;&#x5F52;&#x904D;&#x5386;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (pn)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; pn-&gt;v &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        PreTravelTree(pn-&gt;left);</span><br><span class="line">        PreTravelTree(pn-&gt;right);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 二叉树 </tag>
            
            <tag> 重建二叉树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何下载知乎中的短视频</title>
      <link href="//posts/581e27f1/"/>
      <url>//posts/581e27f1/</url>
      <content type="html"><![CDATA[<p>&#x5173;&#x4E8E;&#x77E5;&#x4E4E;&#x91CC;&#x7684;&#x89C6;&#x9891;&#x7684;&#x4E0B;&#x8F7D;&#x6280;&#x5DE7;&#x3002; <a id="more"></a> # &#x4E3E;&#x4F8B; &#x4EE5;<a href="https://www.zhihu.com/question/266137847/answer/317574998" target="_blank" rel="noopener">&#x62E5;&#x6709;&#x914D;&#x97F3;&#x6280;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x4F53;&#x9A8C;</a>&#x8FD9;&#x4E2A;&#x56DE;&#x7B54;&#x4E2D;&#x7684;&#x89C6;&#x9891;&#x4E3A;&#x4F8B;&#x3002;</p><h1 id="&#x65B9;&#x6CD5;">&#x65B9;&#x6CD5;</h1><p>&#x6211;&#x7528;&#x7684;&#x662F;chrome&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x4E0D;&#x6D89;&#x53CA;&#x63D2;&#x4EF6;&#x3002;</p><h2 id="&#x83B7;&#x53D6;&#x89C6;&#x9891;&#x5730;&#x5740;">&#x83B7;&#x53D6;&#x89C6;&#x9891;&#x5730;&#x5740;</h2><p>&#x53F3;&#x952E;&#x70B9;&#x51FB;&#x89C6;&#x9891;&#xFF0C;&#x68C0;&#x67E5;&#x3002;&#x627E;&#x5230; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=&#x201D;0&#x2033; allowfullscreen=&#x201D;&#x201D; src=&#x201D;https://www.zhihu.com/video/946365677783703552&#x2033;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure></p><p>&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/posts/581e27f1/&#x5982;&#x4F55;&#x4E0B;&#x8F7D;&#x77E5;&#x4E4E;&#x56DE;&#x7B54;&#x4E2D;&#x7684;&#x77ED;&#x89C6;&#x9891;-&#x63D2;&#x56FE;1.jpg"></p><p>&#x590D;&#x5236;&#x5730;&#x5740; https://www.zhihu.com/video/946365677783703552 &#x5728;&#x65B0;&#x7684;&#x6807;&#x7B7E;&#x4E2D;&#x6253;&#x5F00;&#x3002;</p><h2 id="&#x83B7;&#x53D6;m3u8&#x5730;&#x5740;">&#x83B7;&#x53D6;m3u8&#x5730;&#x5740;</h2><p>&#x6309;F12&#xFF0C;&#x6253;&#x5F00;NetWork&#x2014;&#x2014;All&#xFF0C;&#x641C;&#x7D22;m3u8&#xFF1A;</p><p><img src="/posts/581e27f1/&#x5982;&#x4F55;&#x4E0B;&#x8F7D;&#x77E5;&#x4E4E;&#x56DE;&#x7B54;&#x4E2D;&#x7684;&#x77ED;&#x89C6;&#x9891;-&#x63D2;&#x56FE;2.jpg"></p><p>&#x53F3;&#x952E;&#x2014;&#x2014;Copy&#x2014;&#x2014;Copy link address</p><h2 id="&#x7528;gohls&#x4E0B;&#x8F7D;">&#x7528;gohls&#x4E0B;&#x8F7D;</h2><p>&#x4E0B;&#x8F7D;<a href="https://github.com/kz26/gohls/releases" target="_blank" rel="noopener"></a></p><p>&#x89E3;&#x538B;&#x540E;&#xFF0C;&#x5728;&#x7EC8;&#x7AEF;&#x91CC;&#xFF0C;&#x8F93;&#x5165; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gohls -l=true &#x201C;m3u8&#x5730;&#x5740;&#x201D; &#x201C;&#x4FDD;&#x5B58;&#x7684;&#x6587;&#x4EF6;&#x540D;.mp4&#x201D;</span><br></pre></td></tr></table></figure></p><p>&#x5176;&#x4E2D;m3u8&#x7684;&#x5730;&#x5740;&#x5C31;&#x662F;&#x521A;&#x624D;&#x590D;&#x5236;&#x7684;&#x3002;</p><p>&#x6B64;&#x65B9;&#x6CD5;&#x9002;&#x7528;&#x4E8E;&#x5927;&#x90E8;&#x5206;&#x76F4;&#x64AD;&#x7F51;&#x7AD9;&#xFF08;&#x6597;&#x9C7C;&#x89C6;&#x9891;&#x56DE;&#x653E;&#x3001;&#x4E00;&#x76F4;&#x64AD;&#x56DE;&#x653E;&#x3001;&#x7F8E;&#x62CD;&#x76F4;&#x64AD;&#x3001;&#x718A;&#x732B;&#x3001;&#x9F99;&#x73E0;&#x3001;AF&#x3001;&#x6218;&#x65D7;&#x3001;&#x864E;&#x7259;&#x3001;YYLive&#x2026;&#xFF09;</p><hr><h1 id="&#x53C2;&#x8003;&#x8D44;&#x6599;">&#x53C2;&#x8003;&#x8D44;&#x6599;</h1><p><a href="https://zhuanlan.zhihu.com/p/30818462" target="_blank" rel="noopener">&#x6559;&#x5927;&#x5BB6;&#x600E;&#x4E48;&#x4E0B;&#x8F7D;&#x5404;&#x5927;&#x5E73;&#x53F0;&#x7684;m3u8&#x76F4;&#x64AD;&#x5F55;&#x50CF;</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载技巧 </tag>
            
            <tag> m3u8 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>帽子颜色问题</title>
      <link href="//posts/3ffb6ae9/"/>
      <url>//posts/3ffb6ae9/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p>&#x5B66;&#x6821;&#x6700;&#x8FD1;&#x4E3E;&#x884C;&#x4E00;&#x573A;&#x8FD0;&#x52A8;&#x4F1A;&#xFF0C;&#x5171;&#x6709;17&#x540D;&#x8EAB;&#x9AD8;&#x4E0D;&#x540C;&#x7684;&#x5B66;&#x751F;&#x53C2;&#x52A0;&#x3002;&#x88C1;&#x5224;&#x51C6;&#x5907;&#x4E86;&#x5982;&#x4E0B;&#x989C;&#x8272;&#x7684;&#x5E3D;&#x5B50;&#xFF1A;3&#x9876;&#x7EA2;&#x8272;&#xFF0C;4&#x9876;&#x9EC4;&#x8272;&#xFF0C;5&#x9876;&#x84DD;&#x8272;&#xFF0C;7&#x9876;&#x7EFF;&#x8272;&#x3002;&#x89C4;&#x5219;&#x5982;&#x4E0B;&#xFF1A;&#x8BA9;17&#x4E2A;&#x4EBA;&#x6309;&#x987A;&#x5E8F;&#x7AD9;&#x6210;&#x4E00;&#x5217;&#xFF0C;&#x7ED9;&#x4ED6;&#x4EEC;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x6234;&#x4E00;&#x9876;&#x5E3D;&#x5B50;&#xFF0C;&#x6BCF;&#x4E2A;&#x4EBA;&#x770B;&#x4E0D;&#x89C1;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x5374;&#x80FD;&#x770B;&#x5230;&#x7AD9;&#x5728;&#x524D;&#x9762;&#x7684;&#x90A3;&#x4E9B;&#x4EBA;&#x7684;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x3002;&#x5373;&#xFF0C; &#x4ECE;&#x961F;&#x5934;&#x5230;&#x961F;&#x5C3E;&#xFF0C;&#x5206;&#x522B;&#x6807;&#x8BB0;&#x4E3A;1,2,4,5....17&#x3002;1&#x53F7;&#x5565;&#x90FD;&#x770B;&#x4E0D;&#x5230;&#xFF0C;17&#x53F7;&#x80FD;&#x770B;&#x5230;1~16&#x53F7;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#x3002;&#x8FD9;17&#x540D;&#x5B66;&#x751F;&#x77E5;&#x9053;&#x5E3D;&#x5B50;&#x90FD;&#x6709;&#x4EC0;&#x4E48;&#x989C;&#x8272;&#x4EE5;&#x53CA;&#x6709;&#x591A;&#x5C11;&#x9876;&#x3002;</p><p>&#x73B0;&#x5728;&#x4ECE;&#x961F;&#x5C3E;&#x5F00;&#x59CB;&#xFF0C;&#x5373;17&#x53F7;&#xFF0C;&#x5F00;&#x59CB;&#x4F9D;&#x6B21;&#x95EE;&#xFF0C;&#x4F60;&#x662F;&#x5426;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x6234;&#x7684;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x5982;&#x679C;&#x4ED6;&#x56DE;&#x7B54;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x5C31;&#x7EE7;&#x7EED;&#x95EE;&#x4ED6;&#x524D;&#x9762;&#x7684;&#x4EBA;&#xFF0C;&#x5373;16,15,14...&#x4F9D;&#x6B21;&#x5F80;&#x524D;&#x95EE;&#x3002;&#x95EE;&#x6700;&#x591A;&#x95EE;&#x5230;&#x51E0;&#x53F7;&#xFF0C;&#x4ED6;&#x5C31;&#x4E00;&#x5B9A;&#x80FD;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x6234;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x989C;&#x8272;&#x7684;&#x5E3D;&#x5B50;&#x3002; <a id="more"></a></p><p>&#x7B54;&#x6848;&#x6700;&#x591A;&#x662F;&#x95EE;&#x5230;11&#x53F7;&#x3002;</p><h1 id="&#x5206;&#x6790;">&#x5206;&#x6790;</h1><p>&#x5148;&#x770B;&#x4E00;&#x4E2A;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x7B80;&#x5316;&#x7248;&#xFF1A;<br>&#x6709;3&#x9876;&#x9ED1;&#x5E3D;&#x5B50;&#xFF0C;2&#x9876;&#x767D;&#x5E3D;&#x5B50;&#x3002;&#x8BA9;&#x4E09;&#x4E2A;&#x4EBA;&#x4ECE;&#x524D;&#x5230;&#x540E;&#x7AD9;&#x6210;&#x4E00;&#x6392;&#x3002;&#x4ECE;&#x524D;&#x5230;&#x540E;&#x5206;&#x522B;&#x6807;&#x8BB0;&#x4E3A;1&#x53F7;&#xFF0C;2,&#x53F7;&#xFF0C;3&#x53F7;&#x3002;&#x7ED9;&#x4ED6;&#x4EEC;&#x6BCF;&#x4E2A;&#x4EBA;&#x5934;&#x4E0A;&#x6234;&#x4E00;&#x9876;&#x5E3D;&#x5B50;&#x3002;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x770B;&#x4E0D;&#x89C1;&#x81EA;&#x5DF1;&#x6234;&#x7684;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x5374;&#x53EA;&#x80FD;&#x770B;&#x89C1;&#x7AD9;&#x5728;&#x524D;&#x9762;&#x90A3;&#x4E9B;&#x4EBA;&#x7684;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x3002;&#xFF08;&#x6240;&#x4EE5;3&#x53F7;&#x53EF;&#x4EE5;&#x770B;&#x89C1;&#x524D;&#x9762;&#x4E24;&#x4E2A;&#x4EBA;&#x5934;&#x4E0A;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#xFF0C;2&#x53F7;&#x770B;&#x5F97;&#x89C1;1&#x53F7;&#x7684;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x4F46;&#x770B;&#x4E0D;&#x89C1;&#x5728;&#x4ED6;&#x540E;&#x9762;&#x90A3;&#x4E2A;&#x4EBA;&#x7684;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#xFF0C;&#x800C;1&#x53F7;&#x8C01;&#x7684;&#x5E3D;&#x5B50;&#x90FD;&#x770B;&#x4E0D;&#x89C1;&#x3002;&#x73B0;&#x5728;&#x4ECE;3&#x53F7;&#x5F00;&#x59CB;&#xFF0C;&#x95EE;&#x4ED6;&#x662F;&#x4E0D;&#x662F;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x6234;&#x7684;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#xFF0C;&#x5982;&#x679C;&#x4ED6;&#x56DE;&#x7B54;&#x8BF4;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x5C31;&#x7EE7;&#x7EED;&#x95EE;&#x4ED6;&#x524D;&#x9762;&#x90A3;&#x4E2A;&#x4EBA;&#x3002;&#x95EE;&#x6700;&#x591A;&#x95EE;&#x5230;&#x51E0;&#x53F7;&#xFF0C;&#x4ED6;&#x5C31;&#x4E00;&#x5B9A;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x6234;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x5E3D;&#x5B50;&#x3002;</p><p>&#x7B54;&#x6848;&#x662F;&#xFF0C;1&#x53F7;&#x3002;&#x5206;&#x6790;&#x5982;&#x4E0B;&#xFF1A; 1. 3&#x53F7;&#x8BF4;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x90A3;&#x4E48;3&#x53F7;&#x770B;&#x5230;&#x7684;&#x60C5;&#x51B5;&#x6709;&#xFF1A;1&#x9ED1;1&#x767D;&#xFF0C;2&#x9ED1;&#x3002; 2. &#x5728;&#x95EE;2&#x53F7;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;2&#x53F7;&#x770B;&#x5230;&#x7684;&#x662F;&#x767D;&#x8272;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x5C31;&#x53EA;&#x80FD;&#x662F;1&#x9ED1;1&#x767D;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x56E0;&#x6B64;2&#x53F7;&#x5C31;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x6234;&#x7684;&#x662F;&#x9ED1;&#x8272;&#x7684;&#x3002; 3. &#x5982;&#x679C;2&#x53F7;&#x770B;&#x5230;&#x7684;&#x662F;&#x9ED1;&#x8272;&#x7684;&#xFF0C;&#x90A3;&#x4E48;2&#x53F7;&#x5C31;&#x4E0D;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x6234;&#x7684;&#x662F;&#x767D;&#x8FD8;&#x662F;&#x9ED1;&#x8272;&#xFF0C;&#x53EA;&#x597D;&#x8BF4;&#x4E0D;&#x77E5;&#x9053;&#x3002;&#x56E0;&#x6B64;&#x5728;1&#x53F7;&#x542C;&#x89C1;&#x4E86;2,3&#x90FD;&#x8BF4;&#x4E0D;&#x77E5;&#x9053;&#x4E4B;&#x540E;&#xFF0C;&#x4ED6;&#x5C31;&#x77E5;&#x9053;&#x4E86;&#x81EA;&#x5DF1;&#x6234;&#x7684;&#x662F;&#x9ED1;&#x8272;&#x7684;&#x5E3D;&#x5B50;&#x3002;</p><p>&#x6362;&#x4E2A;&#x590D;&#x6742;&#x70B9;&#x7684;&#xFF1A;<br>3&#x9876;&#x7EA2;&#x5E3D;&#x5B50;&#xFF0C;4&#x9876;&#x9ED1;&#x5E3D;&#x5B50;&#xFF0C;5&#x9876;&#x767D;&#x5E3D;&#x5B50;&#xFF0C;10&#x4E2A;&#x4EBA;&#x3002;&#x8BE6;&#x7EC6;&#x5217;&#x4E3E;&#x5982;&#x4E0B;&#xFF1A;</p><ol type="1"><li>&#x4ECE;&#x6700;&#x540E;&#x9762;&#x7684;10&#x53F7;&#x5F00;&#x59CB;&#x5206;&#x6790;&#xFF0C;3&#x9876;&#x7EA2;&#x5E3D;&#x5B50;&#xFF0C;4&#x9876;&#x9ED1;&#x5E3D;&#x5B50;&#xFF0C;5&#x9876;&#x767D;&#x5E3D;&#x5B50;&#xFF0C;&#x4ED6;&#x8981;&#x60F3;&#x63A8;&#x7406;&#x51FA;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x770B;&#x5230;&#x7684;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#x60C5;&#x5F62;&#x4E00;&#x5B9A;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;&#x67D0;&#x4E24;&#x79CD;&#x989C;&#x8272;&#x5E3D;&#x5B50;&#x5168;&#x90E8;&#x51FA;&#x73B0;&#x3002;</li><li>10&#x53F7;&#x4E0D;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x7531;&#x6B64;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#xFF0C;&#x4ED6;&#x770B;&#x5230;&#x7684;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x4E0D;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#xFF1A;3&#x7EA2;4&#x9ED1;&#x3001;3&#x7EA2;5&#x767D;&#x3001;4&#x9ED1;5&#x767D;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x770B;&#x5230;&#x7684;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x53EA;&#x53EF;&#x80FD;&#x6709;&#x4E0B;&#x8868;7&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</li></ol><p><img src="/posts/3ffb6ae9/1.png"> 3. &#x5206;&#x6790;9&#x53F7;&#x7684;&#x60C5;&#x51B5;&#xFF0C;9&#x53F7;&#x542C;&#x5230;10&#x8BF4;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x5C31;&#x53EF;&#x80FD;&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x77E5;&#x9053;10&#x53F7;&#x770B;&#x5230;&#x7684;&#x5E3D;&#x5B50;&#x60C5;&#x51B5;&#x662F;&#x4E0A;&#x9762;7&#x79CD;&#x60C5;&#x51B5;&#x3002;&#x9488;&#x5BF9;&#x4E0A;&#x9762;&#x7684;&#x6BCF;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x6709;&#x7EA2;&#x3001;&#x9ED1;&#x3001;&#x767D;3&#x79CD;&#x53EF;&#x80FD;&#xFF0C;&#x90A3;&#x4E48;&#x603B;&#x5171;&#x5C31;&#x6709;7 &#xD7; 3 = 21 &#x79CD;&#x53EF;&#x80FD;&#x3002;&#x5982;&#x4E0B;&#x8868;&#xFF1A;</p><p><img src="/posts/3ffb6ae9/2.png"> 4. &#x4E0A;&#x8868;&#x5217;&#x51FA;&#x4E86;9&#x53F7;&#x80FD;&#x591F;&#x770B;&#x5230;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x60C5;&#x51B5;&#xFF0C;&#x7B2C;&#x4E00;&#x5217;&#x8868;&#x793A;9&#x53F7;&#x662F;&#x7EA2;&#x8272;&#x5E3D;&#x5B50;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x7684;&#x989C;&#x8272;&#x7EC4;&#x5408;&#xFF0C;&#x7B2C;&#x4E8C;&#x5217;&#x8868;&#x793A;&#x4ED6;&#x662F;&#x9ED1;&#x8272;&#x5E3D;&#x5B50;&#x65F6;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x7B2C;&#x4E09;&#x5217;&#x5C31;&#x662F;&#x4ED6;&#x662F;&#x767D;&#x8272;&#x5E3D;&#x5B50;&#x65F6;&#x7684;&#x7EC4;&#x5408;&#x3002;</p><p>&#x4E0A;&#x56FE;&#x7EA2;&#x8272;&#x6807;&#x8BB0;&#x7684;&#xFF0C;&#x8868;&#x793A;&#x5728;21&#x79CD;&#x60C5;&#x51B5;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x91CD;&#x590D;&#x51FA;&#x73B0;&#x7684;&#x989C;&#x8272;&#x7EC4;&#x5408;&#xFF0C;&#x800C;&#x9EC4;&#x8272;&#x6807;&#x8BB0;&#x7684;&#x5219;&#x662F;&#x6709;&#x91CD;&#x590D;&#x51FA;&#x73B0;&#x7684;&#x989C;&#x8272;&#x7EC4;&#x5408;&#x3002;</p><p>&#x5982;&#x7EC4;&#x5408;&#xFF08;1&#xFF09;&#xFF1A;&#x7EA2;0&#x9ED1;4&#x767D;4&#xFF0C;&#x5982;&#x679C;9&#x53F7;&#x770B;&#x5230;&#x8FD9;&#x79CD;&#x989C;&#x8272;&#x7EC4;&#x5408;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x5C31;&#x80FD;&#x5224;&#x65AD;&#x51FA;&#x81EA;&#x5DF1;&#x5E26;&#x7684;&#x662F;&#x7EA2;&#x5E3D;&#x5B50;&#xFF0C;&#x56E0;&#x4E3A;&#xFF0C;&#x6240;&#x6709;21&#x79CD;&#x7EC4;&#x5408;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E2A;&#x7EC4;&#x5408;&#x662F;&#x552F;&#x4E00;&#x7684;&#x3002;<br>&#x800C;&#x5BF9;&#x4E8E;&#x7EC4;&#x5408;&#xFF08;3&#xFF09;&#xFF1A;&#x7EA2;1&#x9ED1;4&#x767D;3&#xFF0C;&#x5728;21&#x79CD;&#x7EC4;&#x5408;&#x4E2D;&#x6709;&#x91CD;&#x590D;&#xFF0C;&#x548C;&#x7EC4;&#x5408;&#xFF08;15&#xFF09;&#x91CD;&#x590D;&#xFF0C;9&#x53F7;&#x6234;&#x7EA2;&#x8272;&#x5E3D;&#x5B50;&#x6216;&#x8005;&#x6234;&#x767D;&#x8272;&#x5E3D;&#x5B50;&#x90FD;&#x662F;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;9&#x53F7;&#x65E0;&#x6CD5;&#x5224;&#x65AD;&#x81EA;&#x5DF1;&#x7684;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#x662F;&#x7EA2;&#x8272;&#x8FD8;&#x662F;&#x767D;&#x8272;&#x3002;<br>9&#x53F7;&#x65E0;&#x6CD5;&#x5224;&#x65AD;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x53EA;&#x53EF;&#x80FD;&#x662F;&#x91CD;&#x590D;&#x51FA;&#x73B0;&#x7684;&#x6807;&#x8BB0;&#x4E3A;&#x9EC4;&#x8272;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x4E00;&#x5171;&#x6709;6&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x4E0B;&#x8868;&#xFF1A;</p><p><img src="/posts/3ffb6ae9/3.png"></p><ol start="5" type="1"><li>&#x5206;&#x6790;8&#x53F7;&#x7684;&#x60C5;&#x51B5;&#xFF0C;8&#x53F7;&#x542C;&#x5230;9&#x53F7;&#x8BF4;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x5C31;&#x53EF;&#x80FD;&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x77E5;&#x9053;9&#x53F7;&#x770B;&#x5230;&#x7684;&#x5E3D;&#x5B50;&#x60C5;&#x51B5;&#x662F;&#x4E0A;&#x9762;6&#x79CD;&#x60C5;&#x51B5;&#x3002;&#x9488;&#x5BF9;&#x4E0A;&#x9762;&#x7684;&#x6BCF;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x6709;&#x7EA2;&#x3001;&#x9ED1;&#x3001;&#x767D;3&#x79CD;&#x53EF;&#x80FD;&#xFF0C;&#x90A3;&#x4E48;&#x603B;&#x5171;&#x5C31;&#x6709;6 &#xD7; 3 = 18 &#x79CD;&#x53EF;&#x80FD;&#x3002;&#x5982;&#x4E0B;&#x8868;&#xFF1A;</li></ol><p><img src="/posts/3ffb6ae9/4.png"></p><ol start="6" type="1"><li>&#x7C7B;&#x4F3C;&#x524D;&#x9762;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x4E0A;&#x9762;&#x6807;&#x8BB0;&#x4E3A;&#x7EA2;&#x8272;&#x7684;&#x989C;&#x8272;&#x7EC4;&#x5408;&#xFF0C;&#x662F;&#x5728;18&#x79CD;&#x7EC4;&#x5408;&#x4E2D;&#x552F;&#x4E00;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x5C31;&#x662F;8&#x53F7;&#x53EF;&#x4EE5;&#x63A8;&#x65AD;&#x51FA;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x9EC4;&#x8272;&#x7684;&#x7EC4;&#x5408;&#x5219;&#x662F;&#x4ED6;&#x65E0;&#x6CD5;&#x5224;&#x65AD;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x8FD9;&#x79CD;&#x7EC4;&#x5408;&#x4E00;&#x5171;&#x6709;3&#x79CD;&#xFF0C;&#x5982;&#x4E0B;&#x8868;&#xFF1A;</li></ol><p><img src="/posts/3ffb6ae9/5.png"></p><ol start="7" type="1"><li>&#x5206;&#x6790;7&#x53F7;&#x7684;&#x60C5;&#x51B5;&#xFF0C;7&#x53F7;&#x542C;&#x5230;8&#x53F7;&#x8BF4;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x5C31;&#x53EF;&#x80FD;&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x77E5;&#x9053;8&#x53F7;&#x770B;&#x5230;&#x7684;&#x5E3D;&#x5B50;&#x60C5;&#x51B5;&#x662F;&#x4E0A;&#x9762;3&#x79CD;&#x60C5;&#x51B5;&#x3002;&#x9488;&#x5BF9;&#x4E0A;&#x9762;&#x7684;&#x6BCF;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x6709;&#x7EA2;&#x3001;&#x9ED1;&#x3001;&#x767D;3&#x79CD;&#x53EF;&#x80FD;&#xFF0C;&#x90A3;&#x4E48;&#x603B;&#x5171;&#x5C31;&#x6709;3 &#xD7; 3 = 9 &#x79CD;&#x53EF;&#x80FD;&#x3002;&#x5982;&#x4E0B;&#x8868;&#xFF1A;</li></ol><p><img src="/posts/3ffb6ae9/6.png"></p><ol start="8" type="1"><li>&#x7C7B;&#x4F3C;&#x524D;&#x9762;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x4E0A;&#x9762;&#x6807;&#x8BB0;&#x4E3A;&#x7EA2;&#x8272;&#x7684;&#x989C;&#x8272;&#x7EC4;&#x5408;&#xFF0C;&#x662F;&#x5728;9&#x79CD;&#x7EC4;&#x5408;&#x4E2D;&#x552F;&#x4E00;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x5C31;&#x662F;7&#x53F7;&#x53EF;&#x4EE5;&#x63A8;&#x65AD;&#x51FA;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x9EC4;&#x8272;&#x7684;&#x7EC4;&#x5408;&#x5219;&#x662F;&#x4ED6;&#x65E0;&#x6CD5;&#x5224;&#x65AD;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x8FD9;&#x79CD;&#x7EC4;&#x5408;&#x53EA;&#x6709;&#x4E00;&#x79CD;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#xFF1A;&#x7EA2;1&#x9ED1;2&#x767D;3&#x3002;</li><li>&#x73B0;&#x5728;&#x5206;&#x6790;6&#x53F7;&#x7684;&#x60C5;&#x51B5;&#xFF0C;6&#x53F7;&#x542C;&#x5230;7&#x53F7;&#x8BF4;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x5C31;&#x53EF;&#x80FD;&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x77E5;&#x9053;7&#x53F7;&#x770B;&#x5230;&#x7684;&#x5E3D;&#x5B50;&#x60C5;&#x51B5;&#x53EA;&#x6709;&#x4E00;&#x79CD;&#xFF1A;&#x7EA2;1&#x9ED1;2&#x767D;3&#x3002;&#x9488;&#x5BF9;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x6709;&#x7EA2;&#x3001;&#x9ED1;&#x3001;&#x767D;3&#x79CD;&#x53EF;&#x80FD;&#xFF0C;&#x90A3;&#x4E48;&#x603B;&#x5171;&#x5C31;&#x6709;1 &#xD7; 3 = 3 &#x79CD;&#x53EF;&#x80FD;&#x3002;&#x5982;&#x4E0B;&#x8868;&#xFF1A;</li></ol><p><img src="/posts/3ffb6ae9/7.png"></p><p>&#x4E0A;&#x9762;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x90FD;&#x662F;&#x552F;&#x4E00;&#x7684;&#xFF0C;6&#x53F7;&#x770B;&#x5230;&#x5176;&#x5B83;&#x4EBA;&#x7684;&#x5E3D;&#x5B50;&#x989C;&#x8272;&#x7EC4;&#x5408;&#x5C31;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x51FA;&#x81EA;&#x5DF1;&#x5E3D;&#x5B50;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x5982;&#x679C;&#x770B;&#x5230;2&#x9876;&#x9ED1;&#x5E3D;3&#x9876;&#x767D;&#x5E3D;&#xFF0C;&#x90A3;6&#x53F7;&#x5C31;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x51FA;&#x81EA;&#x5DF1;&#x7684;&#x5E3D;&#x5B50;&#x662F;&#x7EA2;&#x8272;&#x3002;</p><h2 id="&#x6362;&#x4E2A;&#x601D;&#x8DEF;&#x7406;&#x89E3;">&#x6362;&#x4E2A;&#x601D;&#x8DEF;&#x7406;&#x89E3;</h2><p>&#x5E3D;&#x5B50;&#x6BD4;&#x4EBA;&#x6570;&#x591A;2&#xFF0C;&#x56E0;&#x6B64;&#x6BCF;&#x79CD;&#x989C;&#x8272;&#x7684;&#x5E3D;&#x5B50;&#x5206;&#x522B;&#x81F3;&#x5C11;&#x51FA;&#x73B0;1,2,3,5&#x6B21;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x8FD9;&#x4E2A;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x8BA9;&#x4E00;&#x4E2A;&#x4EBA;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x9762;&#x524D;&#x5FC5;&#x5B9A;&#x6709;&#x56DB;&#x79CD;&#x989C;&#x8272;&#xFF0C;&#x4E14;&#x6700;&#x5C11;&#x4E3A;1,2,3,5&#x3002;<br>&#x56E0;&#x6B64;&#x5BF9;&#x4E8E;11&#x53F7;&#xFF0C;&#x4ED6;&#x53EA;&#x80FD;&#x770B;&#x5230;10&#x4E2A;&#xFF0C;&#x4E14;&#x77E5;&#x9053;&#x4E86;12~17&#x5168;&#x90FD;&#x8BF4;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x6240;&#x4EE5;&#x5305;&#x62EC;&#x4ED6;&#x5728;&#x5185;&#xFF0C;&#x6EE1;&#x8DB3;4&#x79CD;&#x989C;&#x8272;&#xFF0C;&#x5206;&#x522B;&#x6709;1,2,3,5&#x9876;&#x3002;</p><p><strong>&#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x4E8E;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x9898;&#xFF0C;&#x628A;&#x6240;&#x6709;&#x989C;&#x8272;&#x7684;&#x5E3D;&#x5B50;&#x7684;&#x6700;&#x5C0F;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x76F8;&#x52A0;&#xFF0C;&#x5176;&#x548C;&#x5373;&#x4E3A;&#x6700;&#x591A;&#x95EE;&#x5230;&#x51E0;&#x53F7;&#x3002;&#x5177;&#x4F53;&#x989C;&#x8272;=&#x5404;&#x989C;&#x8272;&#x6700;&#x5C11;&#x4E2A;&#x6570;-&#x4ED6;&#x6240;&#x770B;&#x5230;&#x7684;</strong></p><p>&#x4E8E;&#x662F;&#xFF0C;&#x5F15;&#x8A00;&#x4E2D;&#x8BF4;&#x7684;&#x90A3;&#x4E2A;&#x9898;&#xFF0C;&#x6700;&#x591A;&#x95EE;&#x5230;11&#x53F7;&#x3002;</p><h2 id="&#x9898;&#x76EE;&#x6765;&#x6E90;">&#x9898;&#x76EE;&#x6765;&#x6E90;</h2><p>2018&#x963F;&#x91CC;&#x7F51;&#x4E0A;&#x7B14;&#x8BD5;&#x9898;&#x3002;</p><hr><h1 id="&#x81F4;&#x8C22;&#x5F15;&#x7528;">&#x81F4;&#x8C22;&amp;&#x5F15;&#x7528;</h1><p>&#x5F15;&#x7528;&#xFF1A;<a href="http://blog.sina.com.cn/s/blog_17f3b16300102xe3h.html" target="_blank" rel="noopener">&#x5E3D;&#x5B50;&#x731C;&#x8272;</a></p><p>&#x7279;&#x522B;&#x611F;&#x8C22;&#xFF1A;yz1509</p>]]></content>
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逻辑推理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>X86与ARM中的原子操作-原理及实现</title>
      <link href="//posts/2a85d31f/"/>
      <url>//posts/2a85d31f/</url>
      <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;">&#x524D;&#x8A00;</h1><p>&#x8FD9;&#x4E2A;&#x662F;&#x5728;&#x9762;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5F53;&#x65F6;&#x6CA1;&#x6709;&#x7B54;&#x51FA;&#x6765;&#x3002;&#x56DE;&#x5230;&#x5BB6;&#x4EE5;&#x540E;&#x67E5;&#x4E86;&#x67E5;&#xFF0C;&#x6574;&#x7406;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x3002;</p><p>&#x539F;&#x95EE;&#x9898;&#xFF1A;&#x4EC0;&#x4E48;&#x6307;&#x4EE4;&#x96C6;&#x652F;&#x6301;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF1F;&#x5176;&#x539F;&#x7406;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; <a id="more"></a> &#x5982;&#x679C;&#x8003;&#x8651;&#x5230;&#x5168;&#x90E8;&#x7684;&#x6307;&#x4EE4;&#x96C6;&#xFF0C;&#x95EE;&#x9898;&#x592A;&#x5927;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x7B80;&#x5316;&#x4E0B;&#x3002;&#x4EE5;X86&#x548C;ARM&#x4E3A;&#x4F8B;&#x3002;</p><p>&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x662F;&#x4E0D;&#x53EF;&#x5206;&#x5272;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5728;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x65F6;&#x5B83;&#x4E0D;&#x4F1A;&#x88AB;&#x4EFB;&#x4F55;&#x4E8B;&#x4EF6;&#x4E2D;&#x65AD;&#x3002;&#x5728;&#x5355;&#x5904;&#x7406;&#x5668;&#x7CFB;&#x7EDF;(UniProcessor&#xFF0C;&#x7B80;&#x79F0; UP)&#x4E2D;&#xFF0C;&#x80FD;&#x591F;&#x5728;&#x5355;&#x6761;&#x6307;&#x4EE4;&#x4E2D;&#x5B8C;&#x6210;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF0C;&#x56E0;&#x4E3A;&#x4E2D;&#x65AD;&#x53EA;&#x80FD;&#x53D1;&#x751F;&#x5728;&#x6307;&#x4EE4;&#x4E0E;&#x6307;&#x4EE4;&#x4E4B;&#x95F4;&#x3002;</p><p>&#x6BD4;&#x5982;&#xFF0C;C&#x8BED;&#x8A00;&#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count++</span><br></pre></td></tr></table></figure></p><p>&#x5982;&#x679C;&#x672A;&#x7ECF;&#x4F18;&#x5316;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x751F;&#x6210;&#x5982;&#x4E0B;&#x6C47;&#x7F16;&#xFF1A; <figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mov</span> <span class="built_in">eax</span>,[count]</span><br><span class="line"><span class="keyword">inc</span> <span class="built_in">eax</span></span><br><span class="line"><span class="keyword">mov</span> [count],<span class="built_in">eax</span></span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x6837;&#x5728;&#x6709;&#x591A;&#x4E2A;&#x8FDB;&#x7A0B;&#x6267;&#x884C;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x5C31;&#x6709;&#x53EF;&#x80FD;&#x4EA7;&#x751F;&#x5E76;&#x53D1;&#x95EE;&#x9898;&#xFF1A; <figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">P1&#xFF1A;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;P2&#xFF1A;</span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">eax</span>,[count]&#xA0; &#xA0; &#xA0; &#xA0;   &#xA0;          &#xA0;wait</span><br><span class="line">wait&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">mov</span> <span class="built_in">eax</span>,[count]</span><br><span class="line">wait&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">inc</span> <span class="built_in">eax</span></span><br><span class="line">wait&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; <span class="keyword">mov</span> [count],<span class="built_in">eax</span></span><br><span class="line"><span class="keyword">inc</span> <span class="built_in">eax</span>&#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0;   wait</span><br><span class="line"><span class="keyword">mov</span> [count],<span class="built_in">eax</span>&#xA0; &#xA0; &#xA0; &#xA0; &#xA0;           &#xA0; wait</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x3002;</p><p>&#x5728;&#x5355;&#x5904;&#x7406;&#x5668;&#x4E2D;&#xFF0C;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#xFF0C;&#x5C06;count++&#x8BED;&#x53E5;&#x7FFB;&#x8BD1;&#x6210;&#x5355;&#x6307;&#x4EE4;&#x64CD;&#x4F5C; <figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inc</span> [count]</span><br></pre></td></tr></table></figure></p><p>X86&#x6307;&#x4EE4;&#x96C6;&#x652F;&#x6301;inc&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x6837;count&#x64CD;&#x4F5C;&#x53EF;&#x4EE5;&#x5728;&#x4E00;&#x6761;&#x6307;&#x5185;&#x5B8C;&#x6210;&#x3002;</p><p>&#x8FDB;&#x7A0B;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x603B;&#x662F;&#x5728;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#x6267;&#x884C;&#x4E4B;&#x540E;&#x5B8C;&#x6210;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x4E0A;&#x8FF0;&#x7684;&#x5E76;&#x53D1;&#x95EE;&#x9898;&#x3002;&#x5BF9;&#x4E8E;&#x5355;&#x5904;&#x7406;&#x5668;&#x6765;&#x8BF4;&#xFF0C;&#x4E00;&#x6761;&#x5904;&#x7406;&#x5668;&#x6307;&#x4EE4;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x540C;&#x6837;&#xFF0C;ARM&#x91CC;&#x7684;SWP&#x548C;X86&#x91CC;&#x7684;XCHG&#x90FD;&#x662F;&#x5BF9;&#x4E8E;&#x5355;&#x5904;&#x7406;&#x5668;&#x6765;&#x8BF4;&#xFF0C;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x4F46;&#x662F;&#xFF0C;&#x5728;&#x591A;&#x5904;&#x7406;&#x5668;&#x7CFB;&#x7EDF;(Symmetric Multi-Processor&#xFF0C;&#x7B80;&#x79F0; SMP)&#x4E2D;&#x60C5;&#x51B5;&#x6709;&#x6240;&#x4E0D;&#x540C;&#xFF0C;&#x7531;&#x4E8E;&#x7CFB;&#x7EDF;&#x4E2D;&#x6709;&#x591A;&#x4E2A;&#x5904;&#x7406;&#x5668;&#x5728;&#x72EC;&#x7ACB;&#x7684;&#x8FD0;&#x884C;&#xFF0C;&#x5373;&#x4F7F;&#x5728;&#x80FD;&#x5355;&#x6761;&#x6307;&#x4EE4;&#x4E2D;&#x5B8C;&#x6210;&#x7684;&#x64CD;&#x4F5C;&#x4E5F;&#x53EF;&#x80FD;&#x53D7;&#x5230;&#x5E72;&#x6270;&#x3002;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5E76;&#x53D1;&#x7684;&#x4E3B;&#x9898;&#x4E0D;&#x518D;&#x662F;&#x8FDB;&#x7A0B;&#xFF0C;&#x800C;&#x662F;&#x5904;&#x7406;&#x5668;&#x3002;</p><h1 id="x86&#x67B6;&#x6784;">X86&#x67B6;&#x6784;</h1><p>Intel X86&#x6307;&#x4EE4;&#x96C6;&#x63D0;&#x4F9B;&#x4E86;&#x6307;&#x4EE4;&#x524D;&#x7F00;lock&#x7528;&#x4E8E;&#x9501;&#x5B9A;&#x524D;&#x7AEF;&#x4E32;&#x884C;&#x603B;&#x7EBF;FSB&#xFF0C;&#x4FDD;&#x8BC1;&#x4E86;&#x6307;&#x4EE4;&#x6267;&#x884C;&#x65F6;&#x4E0D;&#x4F1A;&#x6536;&#x5230;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x5668;&#x7684;&#x5E72;&#x6270;&#x3002;</p><p>&#x6BD4;&#x5982;&#xFF1A; <figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lock</span> <span class="keyword">inc</span> [count]</span><br></pre></td></tr></table></figure></p><p>&#x4F7F;&#x7528;lock&#x6307;&#x4EE4;&#x524D;&#x7F00;&#x4E4B;&#x540E;&#xFF0C;&#x5904;&#x7406;&#x671F;&#x95F4;&#x5BF9;count&#x5185;&#x5B58;&#x7684;&#x5E76;&#x53D1;&#x8BBF;&#x95EE;&#xFF08;Read/Write&#xFF09;&#x88AB;&#x7981;&#x6B62;&#xFF0C;&#x4ECE;&#x800C;&#x4FDD;&#x8BC1;&#x4E86;&#x6307;&#x4EE4;&#x7684;&#x539F;&#x5B50;&#x6027;&#x3002;</p><p>&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><figure><img src="/posts/2a85d31f/X86LOCK.png" alt="X86LOCK"><figcaption>X86LOCK</figcaption></figure><p>&#x5176;&#x539F;&#x7406;&#x5728;<a href="https://software.intel.com/sites/default/files/managed/a4/60/325383-sdm-vol-2abcd.pdf" target="_blank" rel="noopener">Intel&#x5F00;&#x53D1;&#x624B;&#x518C;</a>&#x6709;&#x5982;&#x4E0B;&#x8BF4;&#x660E;&#xFF1A;</p><blockquote><p>Description</p><p>Causes the processor&#x2019;s LOCK# signal to be asserted during execution of the accompanying instruction (turns the instruction into an atomic instruction). In a multiprocessor environment, the LOCK# signal ensures that the processor has exclusive use of any shared memory while the signal is asserted.</p><p>The LOCK prefix can be prepended only to the following instructions and only to those forms of the instructions where the destination operand is a memory operand: ADD, ADC, AND, BTC, BTR, BTS, CMPXCHG, CMPXCH8B, CMPXCHG16B, DEC, INC, NEG, NOT, OR, SBB, SUB, XOR, XADD, and XCHG. If the LOCK prefix is used with one of these instructions and the source operand is a memory operand, an undefined opcode exception (#UD) may be generated. An undefined opcode exception will also be generated if the LOCK prefix is used with any instruction not in the above list. The XCHG instruction always asserts the LOCK# signal regardless of the presence or absence of the LOCK prefix.</p><p>The LOCK prefix is typically used with the BTS instruction to perform a read-modify-write operation on a memory location in shared memory environment.</p><p>The integrity of the LOCK prefix is not affected by the alignment of the memory field. Memory locking is observed for arbitrarily misaligned fields.</p></blockquote><p>&#x5728;&#x6267;&#x884C;&#x4F34;&#x968F;&#x7684;&#x6307;&#x4EE4;&#x671F;&#x95F4;&#x4F7F;&#x5904;&#x7406;&#x5668;&#x7684;LOCK&#xFF03;&#x4FE1;&#x53F7;&#x6709;&#x6548;&#xFF08;&#x5C06;&#x6307;&#x4EE4;&#x53D8;&#x4E3A;&#x539F;&#x5B50;&#x6307;&#x4EE4;&#xFF09;&#x3002; &#x5728;&#x591A;&#x5904;&#x7406;&#x5668;&#x73AF;&#x5883;&#x4E2D;&#xFF0C;LOCK&#xFF03;&#x4FE1;&#x53F7;&#x786E;&#x4FDD;&#x5904;&#x7406;&#x5668;&#x5728;&#x4FE1;&#x53F7;&#x6709;&#x6548;&#x65F6;&#x72EC;&#x5360;&#x4F7F;&#x7528;&#x4EFB;&#x4F55;&#x5171;&#x4EAB;&#x5B58;&#x50A8;&#x5668;&#x3002;</p><p>OCK&#x524D;&#x7F00;&#x53EA;&#x80FD;&#x9644;&#x52A0;&#x5728;&#x4E0B;&#x9762;&#x7684;&#x6307;&#x4EE4;&#x4E4B;&#x524D;&#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x9002;&#x7528;&#x4E8E;&#x90A3;&#x4E9B;&#x76EE;&#x6807;&#x64CD;&#x4F5C;&#x6570;&#x662F;&#x5185;&#x5B58;&#x64CD;&#x4F5C;&#x6570;&#x7684;&#x6307;&#x4EE4;&#x683C;&#x5F0F;&#xFF1A;ADD&#xFF0C;ADC&#xFF0C;AND&#xFF0C;BTC&#xFF0C;BTR&#xFF0C;BTS&#xFF0C;CMPXCHG&#xFF0C;CMPXCH8B&#xFF0C;CMPXCHG16B&#xFF0C;DEC&#xFF0C;INC&#xFF0C; NEG&#xFF0C;NOT&#xFF0C;OR&#xFF0C;SBB&#xFF0C;SUB&#xFF0C;XOR&#xFF0C;XADD&#x548C;XCHG&#x3002; &#x5982;&#x679C;LOCK&#x524D;&#x7F00;&#x4E0E;&#x8FD9;&#x4E9B;&#x6307;&#x4EE4;&#x4E4B;&#x4E00;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#xFF0C;&#x5E76;&#x4E14;&#x6E90;&#x64CD;&#x4F5C;&#x6570;&#x662F;&#x5185;&#x5B58;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x5219;&#x53EF;&#x80FD;&#x4F1A;&#x751F;&#x6210;&#x672A;&#x5B9A;&#x4E49;&#x7684;&#x64CD;&#x4F5C;&#x7801;&#x5F02;&#x5E38;&#xFF08;#UD&#xFF09;&#x3002; &#x5982;&#x679C;LOCK&#x524D;&#x7F00;&#x4E0E;&#x4EFB;&#x4F55;&#x4E0D;&#x5728;&#x4E0A;&#x8FF0;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x6307;&#x4EE4;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#xFF0C;&#x4E5F;&#x4F1A;&#x4EA7;&#x751F;&#x672A;&#x5B9A;&#x4E49;&#x7684;&#x64CD;&#x4F5C;&#x7801;&#x5F02;&#x5E38;&#x3002; &#x65E0;&#x8BBA;&#x662F;&#x5426;&#x5B58;&#x5728;LOCK&#x524D;&#x7F00;&#xFF0C;XCHG&#x6307;&#x4EE4;&#x90FD;&#x59CB;&#x7EC8;&#x58F0;&#x660E;LOCK&#xFF03;&#x4FE1;&#x53F7;&#x3002;</p><p>LOCK&#x524D;&#x7F00;&#x901A;&#x5E38;&#x4E0E;BTS&#x6307;&#x4EE4;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#xFF0C;&#x4EE5;&#x5728;&#x5171;&#x4EAB;&#x5B58;&#x50A8;&#x5668;&#x73AF;&#x5883;&#x4E2D;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x4F4D;&#x7F6E;&#x4E0A;&#x6267;&#x884C;&#x8BFB;&#x53D6; &#x2013; &#x4FEE;&#x6539; &#x2013; &#x5199;&#x5165;&#x64CD;&#x4F5C;&#x3002;</p><p>LOCK&#x524D;&#x7F00;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x4E0D;&#x53D7;&#x5B58;&#x50A8;&#x5668;&#x5B57;&#x6BB5;&#x5BF9;&#x9F50;&#x7684;&#x5F71;&#x54CD;&#x3002; &#x5185;&#x5B58;&#x9501;&#x5B9A;&#x662F;&#x9488;&#x5BF9;&#x4EFB;&#x610F;&#x4E0D;&#x5BF9;&#x9F50;&#x7684;&#x5B57;&#x6BB5;&#x3002;</p><h2 id="&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x5B9E;&#x73B0;">&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x5B9E;&#x73B0;</h2><p><a href="https://github.com/torvalds/linux/blob/master/arch/x86/include/asm/atomic.h" target="_blank" rel="noopener">Linux&#x6E90;&#x7801;</a> &#x4E2D;&#x5BF9;&#x4E8E;&#x539F;&#x5B50;&#x81EA;&#x589E;&#x4E00;&#x662F;&#x5982;&#x4E0B;&#x5B9A;&#x4E49;&#x7684;&#xFF1A; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * atomic_inc - increment atomic variable</span><br><span class="line"> * @v: pointer of type atomic_t</span><br><span class="line"> *</span><br><span class="line"> * Atomically increments @v by 1.</span><br><span class="line"> */</span><br><span class="line">static __always_inline void atomic_inc(atomic_t *v)</span><br><span class="line">{</span><br><span class="line">    asm volatile(LOCK_PREFIX &quot;incl %0&quot;</span><br><span class="line">             : &quot;+m&quot; (v-&gt;counter));</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>LOCK_PREFIX&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> CONFIG_SMP</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCK_PREFIX_HERE \</span></span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="string">&quot;.pushsection .smp_locks,\&quot;a\&quot;\n&quot;</span>&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="string">&quot;.balign 4\n&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="string">&quot;.long 671f - .\n&quot;</span> <span class="comment">/* offset */</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="string">&quot;.popsection\n&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="string">&quot;671:&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCK_PREFIX LOCK_PREFIX_HERE <span class="meta-string">&quot;\n\tlock; &quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> <span class="comment">/* ! CONFIG_SMP */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCK_PREFIX_HERE <span class="meta-string">&quot;&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCK_PREFIX <span class="meta-string">&quot;&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p><p>&#x53EF;&#x89C1;&#xFF1A;</p><p>&#x5728;&#x5BF9;&#x79F0;&#x591A;&#x5904;&#x7406;&#x5668;&#x67B6;&#x6784;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;LOCK_PREFIX&#x88AB;&#x89E3;&#x91CA;&#x4E3A;&#x6307;&#x4EE4;&#x524D;&#x7F00;lock&#x3002;&#x800C;&#x5BF9;&#x4E8E;&#x5355;&#x5904;&#x7406;&#x5668;&#x67B6;&#x6784;&#xFF0C;LOCK_PREFIX&#x4E0D;&#x5305;&#x542B;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x3002;</p><p>&#x53E6;&#x5916;&#xFF0C;&#x5BF9;&#x4E8E;CAS&#xFF0C;&#x6709;cmpxchg&#x6307;&#x4EE4;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> __<span class="function">always_inline <span class="keyword">int</span> <span class="title">atomic_cmpxchg</span><span class="params">(<span class="keyword">atomic_t</span> *v, <span class="keyword">int</span> old, <span class="keyword">int</span> <span class="keyword">new</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">return</span> cmpxchg(&amp;v-&gt;counter, old, <span class="keyword">new</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> cmpxchg(ptr, old, new)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span></span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;__cmpxchg(ptr, old, <span class="keyword">new</span>, <span class="keyword">sizeof</span>(*(ptr)))</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __cmpxchg(ptr, old, new, size)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span></span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;__raw_cmpxchg((ptr), (old), (<span class="keyword">new</span>), (size), LOCK_PREFIX)</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __raw_cmpxchg(ptr, old, new, size, lock)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span></span><br><span class="line">({&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;__typeof__(*(ptr)) __ret;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;__typeof__(*(ptr)) __old = (old);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;__typeof__(*(ptr)) __new = (<span class="keyword">new</span>);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">switch</span> (size) {&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">case</span> __X86_CASE_B:&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">volatile</span> u8 *__ptr = (<span class="keyword">volatile</span> u8 *)(ptr);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">asm</span> <span class="keyword">volatile</span>(lock <span class="string">&quot;cmpxchgb %2,%1&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;=a&quot;</span> (__ret), <span class="string">&quot;+m&quot;</span> (*__ptr)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;q&quot;</span> (__new), <span class="string">&quot;0&quot;</span> (__old)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;memory&quot;</span>);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">break</span>;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">case</span> __X86_CASE_W:&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">volatile</span> u16 *__ptr = (<span class="keyword">volatile</span> u16 *)(ptr);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">asm</span> <span class="keyword">volatile</span>(lock <span class="string">&quot;cmpxchgw %2,%1&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;=a&quot;</span> (__ret), <span class="string">&quot;+m&quot;</span> (*__ptr)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;r&quot;</span> (__new), <span class="string">&quot;0&quot;</span> (__old)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;memory&quot;</span>);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">break</span>;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">case</span> __X86_CASE_L:&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">volatile</span> u32 *__ptr = (<span class="keyword">volatile</span> u32 *)(ptr);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">asm</span> <span class="keyword">volatile</span>(lock <span class="string">&quot;cmpxchgl %2,%1&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;=a&quot;</span> (__ret), <span class="string">&quot;+m&quot;</span> (*__ptr)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;r&quot;</span> (__new), <span class="string">&quot;0&quot;</span> (__old)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;memory&quot;</span>);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">break</span>;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">case</span> __X86_CASE_Q:&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">volatile</span> u64 *__ptr = (<span class="keyword">volatile</span> u64 *)(ptr);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">asm</span> <span class="keyword">volatile</span>(lock <span class="string">&quot;cmpxchgq %2,%1&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;=a&quot;</span> (__ret), <span class="string">&quot;+m&quot;</span> (*__ptr)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;r&quot;</span> (__new), <span class="string">&quot;0&quot;</span> (__old)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; : <span class="string">&quot;memory&quot;</span>);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">break</span>;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">default</span>:&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;__cmpxchg_wrong_size();&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;__ret;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">})</span><br></pre></td></tr></table></figure><h1 id="arm&#x67B6;&#x6784;">ARM&#x67B6;&#x6784;</h1><p>&#x5728;ARM&#x67B6;&#x6784;&#x4E0B;&#xFF0C;&#x6CA1;&#x6709;LOCK#&#x6307;&#x4EE4;&#xFF0C;&#x5176;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A; ## ARMv6&#x4E4B;&#x524D; &#x65E9;&#x671F;&#x7684;ARM&#x67B6;&#x6784;&#x662F;&#x4E0D;&#x652F;&#x6301;SMP&#x7684;&#xFF0C;&#x8FD9;&#x4E9B;&#x5355;&#x6838;&#x67B6;&#x6784;&#x7684;CPU&#x5B9E;&#x73B0;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x7684;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x5173;&#x95ED;CPU&#x4E2D;&#x65AD;&#x6765;&#x5B8C;&#x6210;&#x7684;&#x3002;</p><p>&#x5728;<a href="https://github.com/torvalds/linux/blob/master/arch/arm/include/asm/atomic.h" target="_blank" rel="noopener">Linux&#x5BF9;&#x4E8E;ARM&#x67B6;&#x6784;&#x7684;&#x4EE3;&#x7801;</a>&#x4E0B;</p><p>&#x6709;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span>&#xA0;ATOMIC_OP_RETURN(op, c_op, asm_op)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> atomic_#<span class="meta">#op##_return(int i,&#xA0;atomic_t&#xA0;*v)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span></span><br><span class="line">{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0; <span class="keyword">unsigned</span> <span class="keyword">long</span> flags;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0; <span class="keyword">int</span> val;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;raw_local_irq_save(flags);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\<span class="comment">//&#x5173;&#x672C;&#x5730;&#x4E2D;&#x65AD;</span></span><br><span class="line">&#xA0;&#xA0;&#xA0; v-&gt;counter&#xA0;c_op i;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0; val&#xA0;=&#xA0;v-&gt;counter;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;raw_local_irq_restore(flags);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\<span class="comment">//&#x5F00;&#x4E2D;&#x65AD;</span></span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">return</span>&#xA0;val;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x4E2A;&#x662F;&#x597D;&#x591A;&#x64CD;&#x4F5C;&#x5171;&#x7528;&#x7684;&#x4E00;&#x5957;&#x4EE3;&#x7801;&#x3002;</p><p>&#x5BF9;&#x4E8E;cmpxchg&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span>&#xA0;<span class="title">atomic_cmpxchg</span><span class="params">(<span class="keyword">atomic_t</span>&#xA0;*v,&#xA0;<span class="keyword">int</span>&#xA0;old,&#xA0;<span class="keyword">int</span>&#xA0;<span class="keyword">new</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">int</span>&#xA0;ret;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">unsigned</span> <span class="keyword">long</span>&#xA0;flags;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;raw_local_irq_save(flags);</span><br><span class="line">&#xA0;&#xA0;&#xA0; ret = v-&gt;counter;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">if</span>&#xA0;(likely(ret == old))</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; v-&gt;counter&#xA0;=&#xA0;<span class="keyword">new</span>;</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;raw_local_irq_restore(flags);</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">return</span>&#xA0;ret;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5BF9;v-&gt;counter&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x4E00;&#x4E2A;&#x4E34;&#x754C;&#x533A;&#xFF0C;&#x6307;&#x4EE4;&#x7684;&#x6267;&#x884C;&#x4E0D;&#x80FD;&#x88AB;&#x6253;&#x65AD;&#xFF0C;&#x5185;&#x5B58;&#x7684;&#x8BBF;&#x95EE;&#x4E5F;&#x9700;&#x8981;&#x4FDD;&#x6301;&#x6CA1;&#x6709;&#x5E72;&#x6270;&#x3002;</p><p>ARMv6&#x4EE5;&#x524D;&#x7684;&#x7248;&#x672C;&#x901A;&#x8FC7;&#x5173;&#x672C;&#x5730;&#x4E2D;&#x65AD;&#x6765;&#x4FDD;&#x62A4;&#x8FD9;&#x5757;&#x4E34;&#x754C;&#x533A;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x76F8;&#x5F53;&#x7B80;&#x5355;&#xFF0C;&#x5176;&#x5965;&#x79D8;&#x5C31;&#x5728;&#x4E8E;ARMv6&#x4EE5;&#x524D;&#x7684;&#x7248;&#x672C;&#x4E0D;&#x652F;&#x6301;SMP&#x3002;</p><p>&#x6BD4;&#x5982;&#x7ECF;&#x5178;&#x7684;read-modify-write&#x95EE;&#x9898;&#xFF0C;&#x5176;&#x672C;&#x8D28;&#x662F;&#x4FDD;&#x6301;&#x4E00;&#x4E2A;&#x5BF9;&#x5185;&#x5B58;read&#x548C;write&#x8BBF;&#x95EE;&#x7684;&#x539F;&#x5B50;&#x6027;&#x95EE;&#x9898;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5185;&#x5B58;&#x7684;&#x8BFB;&#x548C;&#x5199;&#x7684;&#x8BBF;&#x95EE;&#x4E0D;&#x80FD;&#x88AB;&#x6253;&#x65AD;&#x3002;&#x5BF9;&#x8BE5;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x786C;&#x4EF6;&#x3001;&#x8F6F;&#x4EF6;&#x6216;&#x8005;&#x8F6F;&#x786C;&#x4EF6;&#x7ED3;&#x5408;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x8FDB;&#x884C;&#x3002;&#x65E9;&#x671F;&#x7684;ARM CPU&#x7ED9;&#x51FA;&#x7684;&#x65B9;&#x6848;&#x5C31;&#x662F;&#x4F9D;&#x8D56;&#x786C;&#x4EF6;&#xFF1A;SWP&#x8FD9;&#x4E2A;&#x6C47;&#x7F16;&#x6307;&#x4EE4;&#x6267;&#x884C;&#x4E86;&#x4E00;&#x6B21;&#x8BFB;&#x5185;&#x5B58;&#x64CD;&#x4F5C;&#x3001;&#x4E00;&#x6B21;&#x5199;&#x5185;&#x5B58;&#x64CD;&#x4F5C;&#xFF0C;&#x4F46;&#x662F;&#x4ECE;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x89D2;&#x5EA6;&#x770B;&#xFF0C;SWP&#x8FD9;&#x6761;&#x6307;&#x4EE4;&#x5C31;&#x662F;&#x539F;&#x5B50;&#x7684;&#xFF0C;&#x8BFB;&#x5199;&#x4E4B;&#x95F4;&#x4E0D;&#x4F1A;&#x88AB;&#x4EFB;&#x4F55;&#x7684;&#x5F02;&#x6B65;&#x4E8B;&#x4EF6;&#x6253;&#x65AD;&#x3002;&#x5177;&#x4F53;&#x5E95;&#x5C42;&#x7684;&#x786C;&#x4EF6;&#x662F;&#x5982;&#x4F55;&#x505A;&#x7684;&#x5462;&#xFF1F;&#x8FD9;&#x65F6;&#x5019;&#xFF0C;&#x786C;&#x4EF6;&#x4F1A;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;lock signal&#xFF0C;&#x5728;&#x8FDB;&#x884C;memory&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x8BBE;&#x5B9A;lock&#x4FE1;&#x53F7;&#xFF0C;&#x544A;&#x8BC9;&#x603B;&#x7EBF;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x53EF;&#x88AB;&#x4E2D;&#x65AD;&#x7684;&#x5185;&#x5B58;&#x8BBF;&#x95EE;&#xFF0C;&#x76F4;&#x5230;&#x5B8C;&#x6210;&#x4E86;SWP&#x9700;&#x8981;&#x8FDB;&#x884C;&#x7684;&#x4E24;&#x6B21;&#x5185;&#x5B58;&#x8BBF;&#x95EE;&#x4E4B;&#x540E;&#x518D;clear lock&#x4FE1;&#x53F7;&#x3002;</p><p>&#x591A;&#x8BF4;&#x4E00;&#x70B9;&#x5173;&#x4E8E;SWP&#x548C;SWPB&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x6307;&#x4EE4;&#x662F;&#x7528;&#x6765;&#x540C;&#x6B65;&#x7684;&#xFF0C;&#x4E0D;&#x662F;&#x7528;&#x6765;&#x6267;&#x884C;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x7684;&#x3002;</p><p>&#x5728;&#x5C06;&#x72EC;&#x5360;&#x8BBF;&#x95EE;&#x5F15;&#x5165;ARM&#x67B6;&#x6784;&#x4E4B;&#x524D;&#xFF0C;SWP&#x548C;SWPB&#x6307;&#x4EE4;&#x5E38;&#x7528;&#x4E8E;&#x540C;&#x6B65;&#x3002;</p><p>&#x5176;&#x5C40;&#x9650;&#x6027;&#x662F;&#xFF1A;</p><p>&#x5982;&#x679C;&#x4E2D;&#x65AD;&#x5728;&#x89E6;&#x53D1;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#x65F6;&#x89E6;&#x53D1;&#xFF0C;&#x5219;&#x5904;&#x7406;&#x5668;&#x5FC5;&#x987B;&#x5728;&#x6267;&#x884C;&#x4E2D;&#x65AD;&#x4E4B;&#x524D;&#x5B8C;&#x6210;&#x6307;&#x4EE4;&#x7684;&#x52A0;&#x8F7D;&#x548C;&#x5B58;&#x50A8;&#x90E8;&#x5206;&#xFF0C;&#x4ECE;&#x800C;&#x589E;&#x52A0;&#x4E2D;&#x65AD;&#x5EF6;&#x8FDF;&#x3002; &#x7531;&#x4E8E;&#x72EC;&#x7ACB;&#x52A0;&#x8F7D;&#x548C;&#x72EC;&#x5360;&#x5B58;&#x50A8;&#x662F;&#x5355;&#x72EC;&#x7684;&#x6307;&#x4EE4;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x4F7F;&#x7528;&#x65B0;&#x7684;&#x540C;&#x6B65;&#x57FA;&#x5143;&#x65F6;&#x4F1A;&#x964D;&#x4F4E;&#x6B64;&#x6548;&#x679C;&#x3002;</p><p>&#x4F46;&#x662F;&#x5728;&#x591A;&#x6838;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x4EA4;&#x6362;&#x6307;&#x4EE4;&#x671F;&#x95F4;&#x963B;&#x6B62;&#x6240;&#x6709;&#x5904;&#x7406;&#x5668;&#x8BBF;&#x95EE;&#x4E3B;&#x5B58;&#x4F1A;&#x964D;&#x4F4E;&#x7CFB;&#x7EDF;&#x6027;&#x80FD;&#x3002;&#x5728;&#x5904;&#x7406;&#x5668;&#x5DE5;&#x4F5C;&#x5728;&#x4E0D;&#x540C;&#x9891;&#x7387;&#x4F46;&#x662F;&#x5171;&#x4EAB;&#x76F8;&#x540C;&#x4E3B;&#x5B58;&#x7684;&#x591A;&#x6838;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x60C5;&#x51B5;&#x5C24;&#x5176;&#x5982;&#x6B64;&#x3002;</p><p>&#x6240;&#x4EE5;&#x5728;ARMv6&#x53CA;&#x4EE5;&#x540E;&#x7684;&#x7248;&#x672C;&#x4E2D;&#xFF0C;&#x5F03;&#x7528;&#x4E86;SWP&#x3002;</p><p>ARMv6&#x67B6;&#x6784;&#x5F15;&#x5165;&#x4E86;&#x72EC;&#x5360;&#x8BBF;&#x95EE;&#x5185;&#x5B58;&#x4E3A;&#x6B62;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x7075;&#x6D3B;&#x7684;&#x539F;&#x5B50;&#x5185;&#x5B58;&#x66F4;&#x65B0;&#x3002;</p><p>ARMv6&#x4F53;&#x7CFB;&#x7ED3;&#x6784;&#x4EE5;Load-Exclusive&#x548C;Store-Exclusive&#x540C;&#x6B65;&#x539F;&#x8BED;LDREX&#x548C;STREX&#x7684;&#x5F62;&#x5F0F;&#x5F15;&#x5165;&#x4E86;Load Link&#x548C;Store Conditional&#x6307;&#x4EE4;&#x3002; &#x4ECE;ARMv6T2&#x5F00;&#x59CB;&#xFF0C;&#x8FD9;&#x4E9B;&#x6307;&#x4EE4;&#x5728;ARM&#x548C;Thumb&#x6307;&#x4EE4;&#x96C6;&#x4E2D;&#x53EF;&#x7528;&#x3002; &#x72EC;&#x7ACB;&#x52A0;&#x8F7D;&#x548C;&#x4E13;&#x6709;&#x5B58;&#x50A8;&#x63D0;&#x4F9B;&#x4E86;&#x7075;&#x6D3B;&#x548C;&#x53EF;&#x6269;&#x5C55;&#x7684;&#x540C;&#x6B65;&#xFF0C;&#x53D6;&#x4EE3;&#x4E86;&#x5F03;&#x7528;&#x7684;SWP&#x548C;SWPB&#x6307;&#x4EE4;&#x3002;</p><p>&#x540E;&#x6765;&#x4F7F;&#x7528;&#x7684;&#x662F;LDREX&#x548C;STREX&#x6307;&#x4EE4;&#x3002; ## armv7&#x4E4B;&#x540E;</p><p>&#x7EE7;&#x7EED;&#x770B;&#x4EE3;&#x7801;&#xFF0C;&#x5728;armv7&#x4E4B;&#x540E;&#x5C31;&#x7528;&#x4E86;ldrex&#x548C;strex</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span>&#xA0;ATOMIC_OP_RETURN(op, c_op, asm_op)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> atomic_#<span class="meta">#op##_return_relaxed(int i,&#xA0;atomic_t&#xA0;*v)&#xA0;&#xA0;\</span></span><br><span class="line">{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0; <span class="keyword">unsigned</span> <span class="keyword">long</span> tmp;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0; <span class="keyword">int</span> result;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;prefetchw(&amp;v-&gt;counter);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0; __asm__&#xA0;__volatile__(<span class="string">&quot;@ atomic_&quot;</span>&#xA0;#op&#xA0;<span class="string">&quot;_return\n&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;\  <span class="comment">/* &#x4F18;&#x5316;&#x5C4F;&#x969C;&#xFF0C;&#x9632;&#x6B62;&#x7F16;&#x8BD1;&#x5668;&#x4F18;&#x5316; */</span></span><br><span class="line"><span class="string">&quot;1: ldrex&#xA0;&#xA0;&#xA0;%0, [%3]\n&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\<span class="comment">/*&#x3010;1&#x3011;&#x72EC;&#x5360;&#x65B9;&#x5F0F;&#x52A0;&#x8F7D;v-&gt;counter&#x5230;result*/</span></span><br><span class="line"><span class="string">&quot;&#xA0;&#xA0; &quot;</span>&#xA0;#asm_op&#xA0;<span class="string">&quot;&#xA0;%0,&#xA0;%0,&#xA0;%4\n&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\       <span class="comment">/*&#x3010;2&#x3011;&#x5BF9;result&#x8FDB;&#x884C;&#x64CD;&#x4F5C;*/</span></span><br><span class="line"><span class="string">&quot;&#xA0;&#xA0; strex&#xA0;&#xA0;&#xA0;%1,&#xA0;%0, [%3]\n&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\  <span class="comment">/*&#x3010;3&#x3011;&#x72EC;&#x5360;&#x65B9;&#x5F0F;&#x5C06;result&#x503C;&#x5199;&#x56DE;v-&gt;counter*/</span></span><br><span class="line"><span class="string">&quot;&#xA0;&#xA0; teq&#xA0;%1, #0\n&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\         <span class="comment">/*&#x3010;4&#x3011;&#x5224;&#x65AD;strex&#x66F4;&#x65B0;&#x5185;&#x5B58;&#x662F;&#x5426;&#x6210;*/</span></span><br><span class="line"><span class="string">&quot;&#xA0;&#xA0; bne 1b&quot;</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\            <span class="comment">/*&#x3010;5&#x3011;&#x4E0D;&#x6210;&#x529F;&#x8DF3;&#x8F6C;&#x5230;1:*/</span></span><br><span class="line">&#xA0;&#xA0;&#xA0; :&#xA0;<span class="string">&quot;=&amp;r&quot;</span>&#xA0;(result),&#xA0;<span class="string">&quot;=&amp;r&quot;</span>&#xA0;(tmp),&#xA0;<span class="string">&quot;+Qo&quot;</span>&#xA0;(v-&gt;counter)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\<span class="comment">/*&#x8F93;&#x51FA;&#x90E8;*/</span></span><br><span class="line">&#xA0;&#xA0;&#xA0; :&#xA0;<span class="string">&quot;r&quot;</span>&#xA0;(&amp;v-&gt;counter),&#xA0;<span class="string">&quot;Ir&quot;</span>&#xA0;(i)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\<span class="comment">/*&#x8F93;&#x5165;&#x90E8;*/</span></span><br><span class="line">&#xA0;&#xA0;&#xA0; :&#xA0;<span class="string">&quot;cc&quot;</span>);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\<span class="comment">/*&#x635F;&#x574F;&#x90E8;*/</span></span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0;<span class="keyword">return</span>&#xA0;result;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8BBF;&#x5B58;&#x6307;&#x4EE4;LDREX/STREX&#x548C;&#x666E;&#x901A;&#x7684;LDR/STR&#x8BBF;&#x5B58;&#x6307;&#x4EE4;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x5B83;&#x662F;&#x201C;&#x72EC;&#x5360;&#x201D;&#x8BBF;&#x5B58;&#x6307;&#x4EE4;&#x3002;&#x8FD9;&#x5BF9;&#x6307;&#x4EE4;&#x8BBF;&#x5B58;&#x8FC7;&#x7A0B;&#x7531;&#x4E00;&#x4E2A;&#x79F0;&#x4F5C;&#x201C;exclusive monitor&#x201D;&#x7684;&#x90E8;&#x4EF6;&#x6765;&#x76D1;&#x89C6;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x72EC;&#x5360;&#x8BBF;&#x95EE;&#x3002;</p><p>&#x5148;&#x770B;&#x770B;&#x8FD9;&#x5BF9;&#x72EC;&#x5360;&#x8BBF;&#x5B58;&#x6307;&#x4EE4;&#xFF1A;</p><p>(1)LDREX R1 &#xFF0C;[R0] &#x6307;&#x4EE4;&#x662F;&#x4EE5;&#x72EC;&#x5360;&#x7684;&#x65B9;&#x5F0F;&#x4ECE;R0&#x6240;&#x6307;&#x7684;&#x5730;&#x5740;&#x4E2D;&#x53D6;&#x4E00;&#x4E2A;&#x5B57;&#x5B58;&#x653E;&#x5230;R0&#x4E2D;&#xFF1B;</p><p>(2)STREX R2&#xFF0C;R1&#xFF0C;[R0] &#x6307;&#x4EE4;&#x662F;&#x4EE5;&#x72EC;&#x5360;&#x7684;&#x65B9;&#x5F0F;&#x7528;R1&#x6765;&#x66F4;&#x65B0;&#x5185;&#x5B58;&#xFF0C;&#x5982;&#x679C;&#x72EC;&#x5360;&#x8BBF;&#x95EE;&#x6761;&#x4EF6;&#x5141;&#x8BB8;&#xFF0C;&#x5219;&#x66F4;&#x65B0;&#x6210;&#x529F;&#x5E76;&#x8FD4;&#x56DE;0&#x5230;R2&#xFF0C;&#x5426;&#x5219;&#x5931;&#x8D25;&#x8FD4;&#x56DE;1&#x5230;R2&#x3002;</p><p>&#x5173;&#x4E8E;LDREX&#x548C;STREX&#x7684;&#x539F;&#x7406;&#xFF0C;&#x53E6;&#x6709;&#x4E00;&#x7BC7;<a href="https://blog.csdn.net/Roland_Sun/article/details/47670099" target="_blank" rel="noopener">&#x535A;&#x5BA2;</a>&#x8BB2;&#x7684;&#x5F88;&#x597D;&#xFF0C;&#x53EF;&#x4EE5;&#x53BB;&#x770B;&#x770B;&#x3002;</p><hr><h1 id="&#x53C2;&#x8003;&#x8D44;&#x6599;">&#x53C2;&#x8003;&#x8D44;&#x6599;</h1><p><a href="http://www.wowotech.net/kernel_synchronization/atomic.html" target="_blank" rel="noopener">Linux&#x5185;&#x6838;&#x540C;&#x6B65;&#x673A;&#x5236;&#x4E4B;&#xFF08;&#x4E00;&#xFF09;&#xFF1A;&#x539F;&#x5B50;&#x64CD;&#x4F5C;</a></p><p><a href="https://www.cnblogs.com/fanzhidongyzby/p/3654855.html" target="_blank" rel="noopener">Linux&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x4E0E;&#x540C;&#x6B65;&#x673A;&#x5236;</a></p><p><a href="https://software.intel.com/zh-cn/blogs/2010/01/14/cpucpu" target="_blank" rel="noopener">&#x5173;&#x4E8E;&#x5355;CPU&#xFF0C;&#x591A;CPU&#x4E0A;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;</a></p><p><a href="https://blog.csdn.net/adaptiver/article/details/72393528" target="_blank" rel="noopener">&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x2013;ARM&#x67B6;&#x6784;</a></p><p><a href="https://blog.csdn.net/Roland_Sun/article/details/47670099" target="_blank" rel="noopener">ARM&#x5E73;&#x53F0;&#x4E0B;&#x72EC;&#x5360;&#x8BBF;&#x95EE;&#x6307;&#x4EE4;LDREX&#x548C;STREX&#x7684;&#x539F;&#x7406;&#x4E0E;&#x4F7F;&#x7528;&#x8BE6;&#x89E3;</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> ARM </tag>
            
            <tag> X86 </tag>
            
            <tag> 原子操作 </tag>
            
            <tag> 汇编语言 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-1852 Ants</title>
      <link href="//posts/1ddc535a/"/>
      <url>//posts/1ddc535a/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=1852" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a><br>&#x8682;&#x8681;&#x5728;&#x6746;&#x5B50;&#x4E0A;&#x884C;&#x8D70;&#xFF0C;&#x6C42;&#x8682;&#x8681;&#x6389;&#x843D;&#x7684;&#x6700;&#x5FEB;&#x548C;&#x6700;&#x6162;&#x65F6;&#x95F4;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x4E00;&#x961F;&#x8682;&#x8681;&#x5728;1&#x5398;&#x7C73;&#x957F;&#x7684;&#x6C34;&#x5E73;&#x6746;&#x4E0A;&#x884C;&#x8D70;&#xFF0C;&#x6BCF;&#x6746;&#x4EE5;1&#x5398;&#x7C73;/&#x79D2;&#x7684;&#x901F;&#x5EA6;&#x5300;&#x901F;&#x884C;&#x8FDB;&#x3002;&#x5F53;&#x4E00;&#x53EA;&#x884C;&#x8D70;&#x7684;&#x8682;&#x8681;&#x5230;&#x8FBE;&#x6746;&#x7684;&#x4E00;&#x7AEF;&#x65F6;&#xFF0C;&#x5B83;&#x4F1A;&#x7ACB;&#x5373;&#x6389;&#x843D;&#x3002;&#x5F53;&#x4E24;&#x53EA;&#x8682;&#x8681;&#x76F8;&#x9047;&#x65F6;&#xFF0C;&#x4ED6;&#x4EEC;&#x8F6C;&#x8FC7;&#x5934;&#x53BB;&#x5F00;&#x59CB;&#x671D;&#x76F8;&#x53CD;&#x7684;&#x65B9;&#x5411;&#x884C;&#x8D70;&#x3002;&#x53EA;&#x77E5;&#x9053;&#x8682;&#x8681;&#x5728;&#x7AFF;&#x5B50;&#x4E0A;&#x7684;&#x539F;&#x59CB;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x8682;&#x8681;&#x884C;&#x8D70;&#x7684;&#x65B9;&#x5411;&#x3002;&#x6C42;&#x6240;&#x6709;&#x8682;&#x8681;&#x4ECE;&#x7AEF;&#x70B9;&#x4E0A;&#x6389;&#x843D;&#x6240;&#x9700;&#x7684;&#x6700;&#x5FEB;&#x548C;&#x6700;&#x6162;&#x7684;&#x65F6;&#x95F4;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#xFF0C;&#x9996;&#x5148;&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x8FD9;&#x6839;&#x6746;&#x5B50;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x5355;&#x4F4D;cm&#xFF0C;&#x548C;&#x8FD9;&#x6839;&#x6746;&#x5B50;&#x4E0A;&#x8682;&#x8681;&#x7684;&#x6570;&#x91CF;N&#x3002;&#x7B2C;&#x4E09;&#x884C;&#x662F;N&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x7ED9;&#x51FA;&#x4E86;&#x6BCF;&#x4E2A;&#x8682;&#x8681;&#x5728;&#x6746;&#x5B50;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5373;&#x4ECE;&#x6746;&#x5B50;&#x5DE6;&#x7AEF;&#x5F00;&#x59CB;&#x6D4B;&#x91CF;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x6CA1;&#x6709;&#x7279;&#x522B;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x7684;&#x6574;&#x6570;&#x90FD;&#x4E0D;&#x5927;&#x4E8E;1000000&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x6700;&#x65E9;&#x7684;&#x5168;&#x6389;&#x843D;&#x7684;&#x65F6;&#x95F4;&#x548C;&#x6700;&#x665A;&#x7684;&#x5168;&#x6389;&#x843D;&#x7684;&#x65F6;&#x95F4;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x628A;&#x8682;&#x8681;&#x76F8;&#x9047;&#x770B;&#x505A;&#x4EA4;&#x6362;&#x4F4D;&#x7F6E;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">    <span class="keyword">int</span> L = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> X;</span><br><span class="line">    <span class="keyword">int</span> minT = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> maxT = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++)</span><br><span class="line">    {</span><br><span class="line">        minT = <span class="number">0</span>;</span><br><span class="line">        maxT = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; L &gt;&gt; n;</span><br><span class="line">        <span class="comment">//&#x6700;&#x77ED;&#x7684;&#x65F6;&#x95F4;&#x5C31;&#x662F;&#x5411;&#x5176;&#x8DDD;&#x79BB;&#x6700;&#x8FD1;&#x7684;&#x7AEF;&#x70B9;&#x53BB;&#x8D70;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; X;</span><br><span class="line">            minT = max(minT, min(L - X, X));</span><br><span class="line">            maxT = max(maxT, max(L - X, X));</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; minT &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; maxT &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">10</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">6</span> <span class="number">7</span></span><br><span class="line"><span class="number">214</span> <span class="number">7</span></span><br><span class="line"><span class="number">11</span> <span class="number">12</span> <span class="number">7</span> <span class="number">13</span> <span class="number">176</span> <span class="number">23</span> <span class="number">191</span></span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">4</span> <span class="number">8</span></span><br><span class="line"><span class="number">38</span> <span class="number">207</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> POJ </tag>
            
            <tag> 基础题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-2386 Lake Counting</title>
      <link href="//posts/b1ffa901/"/>
      <url>//posts/b1ffa901/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="http://poj.org/problem?id=2386" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x4E00;&#x7247;&#x5730;&#x91CC;&#x9762;&#x6709;&#x4E00;&#x4E9B;&#x79EF;&#x6C34;&#xFF0C;&#x8981;&#x6C42;&#x6570;&#x6E05;&#x695A;&#x4E00;&#x5171;&#x6709;&#x51E0;&#x7247;&#x79EF;&#x6C34;&#xFF0C;W&#x8868;&#x793A;&#x6C34;&#xFF0C;&quot; . &quot; &#x8868;&#x793A;&#x65F1;&#x5730;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#xFF0C;N&#x548C;M</p><p>&#x63A5;&#x4E0B;&#x6765;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;M&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x8868;&#x793A;&#x8FD9;&#x4E00;&#x7247;&#x7530;&#x5730;&#xFF0C;W&#x8868;&#x793A;&#x6C34;&#xFF0C;&quot; . &quot; &#x8868;&#x793A;&#x65F1;&#x5730;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x6C60;&#x5858;&#x7684;&#x6570;&#x91CF;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x4F7F;&#x7528;DFS&#xFF0C;&#x4ECE;&#x4EFB;&#x610F;&#x7684;W&#x5C31;&#x5F00;&#x59CB;&#xFF0C;&#x4E0D;&#x505C;&#x7684;&#x628A;&#x4E34;&#x8857;&#x7684;&#x90E8;&#x5206;&#x7528; &quot; . &quot;&#x4EE3;&#x66FF;&#xFF0C;&#x4E8E;&#x662F;&#x4E00;&#x6B21;DFS&#x4E4B;&#x540E;&#xFF0C;&#x4E0E;&#x521D;&#x59CB;&#x7684;&#x8FD9;&#x4E2A;W&#x94FE;&#x63A5;&#x7684;&#x6240;&#x6709;W&#x90FD;&#x88AB;&#x66FF;&#x6362;&#x6210;&#x4E86;&quot; . &quot;&#x3002;&#x7EE7;&#x7EED;&#x4E0B;&#x53BB;&#xFF0C;&#x76F4;&#x5230;&#x56FE;&#x4E2D;&#x4E0D;&#x518D;&#x5B58;&#x5728;W&#x4E3A;&#x6B62;&#x3002;&#x603B;&#x5171;&#x8FDB;&#x884C;&#x7684;DFS&#x6B21;&#x6570;&#x5C31;&#x662F;&#x7B54;&#x6848;&#x3002;8&#x4E2A;&#x65B9;&#x5411;&#x5171;&#x5BF9;&#x5E94;&#x4E86;8&#x79CD;&#x72B6;&#x6001;&#x7684;&#x8F6C;&#x4E49;&#xFF0C;&#x5355;&#x4E2A;&#x683C;&#x5B50;&#x4F5C;&#x4E3A;DFS&#x7684;&#x53C2;&#x6570;&#x81F3;&#x591A;&#x5457;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#x3002;&#x6240;&#x4EE5;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x662F;O(8&#xD7;N&#xD7;M)=O(M&#xD7;N)&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x83DC;&#x56ED;&#x5B50;&#x4E2D;&#x7684;&#x79EF;&#x6C34;&#xFF0C;DFS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span>N, M;</span><br><span class="line"><span class="keyword">char</span> field[<span class="number">101</span>][<span class="number">101</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>{</span><br><span class="line">    field[x][y] = <span class="string">&apos;.&apos;</span>;<span class="comment">//&#x6807;&#x8BB0;&#x4E3A;&#x8BBF;&#x95EE;&#x8FC7;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> dx = <span class="number">-1</span>; dx &lt;= <span class="number">1</span>; dx++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> dy = <span class="number">-1</span>; dy &lt;= <span class="number">1</span>; dy++)<span class="comment">//&#x5468;&#x56F4;&#x7684;&#x533A;&#x57DF;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> newX = x + dx;</span><br><span class="line">            <span class="keyword">int</span> newY = y + dy;</span><br><span class="line">            <span class="comment">//&#x5224;&#x65AD;&#x5176;&#x5468;&#x56F4;&#x7684;&#x533A;&#x57DF;&#xFF0C;1&#xFF0C;&#x662F;&#x5426;&#x5728;&#x9662;&#x5B50;&#x91CC;&#xFF0C;2&#xFF0C;&#x662F;&#x5426;&#x6709;&#x79EF;&#x6C34;&#xFF0C;</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span>&lt;=newX&amp;&amp;newX&lt;N&amp;&amp;<span class="number">0</span>&lt;=newY&amp;&amp;newY&lt;M&amp;&amp;field[newX][newY]==<span class="string">&apos;W&apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                DFS(newX, newY);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;N&gt;&gt;M;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; field[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x5168;&#x90E8;&#x90FD;&#x8F93;&#x5165;&#x5B8C;&#xFF0C;&#x5F00;&#x59CB;&#x904D;&#x5386;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (field[i][j]==<span class="string">&apos;W&apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                DFS(i, j);</span><br><span class="line">                res++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">10</span> <span class="number">12</span></span><br><span class="line">W........WW.</span><br><span class="line">.WWW.....WWW</span><br><span class="line">....WW...WW.</span><br><span class="line">.........WW.</span><br><span class="line">.........W..</span><br><span class="line">..W......W..</span><br><span class="line">.W.W.....WW.</span><br><span class="line">W.W.W.....W.</span><br><span class="line">.W.W......W.</span><br><span class="line">..W.......W.</span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">3</span></span><br><span class="line">&#x6709;&#x4E09;&#x4E2A;&#x6C60;&#x5858;&#xFF0C;&#x4E00;&#x4E2A;&#x5728;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x4E00;&#x4E2A;&#x5728;&#x5DE6;&#x4E0B;&#x89D2;&#xFF0C;&#x4E00;&#x4E2A;&#x5728;&#x53F3;&#x4FA7;&#x3002;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> POJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> DFS </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1064 Complete Binary Search Tree (30)</title>
      <link href="//posts/d57071f2/"/>
      <url>//posts/d57071f2/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1064" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x7ED9;&#x5B9A;&#x4E00;&#x4E32;&#x5E8F;&#x5217;&#xFF0C;&#x5DF2;&#x77E5;&#x8FD9;&#x4E2A;&#x5E8F;&#x5217;&#x80FD;&#x591F;&#x6210;&#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x6C42;&#x51FA;&#x8FD9;&#x4E2A;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x5C42;&#x6B21;&#x904D;&#x5386;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x662F;N&#x4E2A;&#x975E;&#x8D1F;&#x6574;&#x6570;&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x8FD9;&#x4E2A;&#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x5C42;&#x6B21;&#x904D;&#x5386;&#x5E8F;&#x5217;&#xFF0C;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7531;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. &#x5DF2;&#x77E5;&#x8FD9;&#x662F;&#x4E00;&#x68F5;&#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x3002; 2. &#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x5E8F;&#x5217;&#x6EE1;&#x8DB3;&#xFF1A;&#x6309;&#x952E;&#x503C;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5217;&#x3002;&#x6240;&#x4EE5;&#x5C06;&#x7ED9;&#x5B9A;&#x5E8F;&#x5217;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F;&#x5373;&#x53EF;&#x5F97;&#x5230;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x3002; 3. &#x5728;&#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x6811;&#x4E2D;&#xFF1A;&#x7528;&#x6570;&#x7EC4;&#x8868;&#x793A;&#x7684;&#x8BDD;&#xFF0C;&#x7F16;&#x53F7;&#x4E3A;i&#x8282;&#x70B9;&#x7684;&#x505A;&#x5B69;&#x5B50;&#x5E8F;&#x53F7;&#x4E3A;2*i&#xFF0C;&#x53F3;&#x5B69;&#x5B50;&#x4E3A;2*i+1&#x3002; 4. &#x901A;&#x8FC7;&#x9012;&#x5F52;&#x91CD;&#x5EFA;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><h2 id="tips">Tips</h2><p>&#x901A;&#x8FC7;&#x4E2D;&#x5E8F;&#x91CD;&#x5EFA;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x601D;&#x60F3;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5047;&#x8BBE;&#x4E00;&#x5171;&#x6709;10&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x6700;&#x5C0F;&#x7684;&#x90A3;&#x4E2A;&#x6570;&#x4E00;&#x5B9A;&#x5728;&#x6700;&#x5DE6;&#x4E0B;&#x89D2;&#xFF0C;&#x662F;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x3002; 2. &#x7B2C;&#x4E8C;&#x5C0F;&#x7684;&#x662F;&#x6700;&#x5C0F;&#x7684;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#x3002; 3. &#x7B2C;&#x4E09;&#x5C0F;&#x7684;&#x662F;&#x7B2C;&#x4E8C;&#x5C0F;&#x7684;&#x53F3;&#x5B69;&#x5B50;&#x3002;</p><p>&#x5982;&#x679C;&#x7528;&#x6570;&#x7EC4;&#x5B58;&#x50A8;&#x8FD9;&#x4E2A;&#x6811;&#x3002;&#x6700;&#x5C0F;&#x8282;&#x70B9;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x662F;&#x7B2C;8&#x4E2A;&#xFF0C;8&#x662F;2<sup>N&#xFF0C;&#x6EE1;&#x8DB3;2</sup>N&lt;=10&#xFF0C;&#x4E14;N&#x6700;&#x5927;&#x3002;&#xFF08;&#x56E0;&#x4E3A;&#x5728;&#x6700;&#x5DE6;&#x4E0B;&#x89D2;&#xFF09;&#x3002;</p><p>&#x5199;&#x7684;&#x6BD4;&#x8F83;&#x7ED5;&#xFF0C;&#x770B;&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creat_tree</span><span class="params">(<span class="keyword">int</span> root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (root&gt;N)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> lchild = root * <span class="number">2</span>, rchild = root * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    creat_tree(lchild);</span><br><span class="line">    rebuild_tree[root] = node[pos++];</span><br><span class="line">    creat_tree(rchild);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> node[<span class="number">1001</span>], rebuild_tree[<span class="number">1001</span>];</span><br><span class="line"><span class="keyword">int</span> N, pos = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a &lt; b;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creat_tree</span><span class="params">(<span class="keyword">int</span> root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (root&gt;N)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> lchild = root * <span class="number">2</span>, rchild = root * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    creat_tree(lchild);</span><br><span class="line">    rebuild_tree[root] = node[pos++];</span><br><span class="line">    creat_tree(rchild);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; node[i];</span><br><span class="line">    }</span><br><span class="line">    sort(node, node + N, cmp);</span><br><span class="line">    creat_tree(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; rebuild_tree[i];</span><br><span class="line">        <span class="keyword">if</span> (i&lt;N)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;1.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">0</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">6</span> <span class="number">3</span> <span class="number">8</span> <span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">0</span> <span class="number">2</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 二叉搜索树 </tag>
            
            <tag> 完全二叉树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1063 Set Similarity (25)</title>
      <link href="//posts/4b14e451/"/>
      <url>//posts/4b14e451/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1063" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6C42;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x7684;&#x76F8;&#x4F3C;&#x5EA6;&#x3002; <a id="more"></a> &#x7ED9;&#x5B9A;&#x4E24;&#x7EC4;&#x6574;&#x6570;&#xFF0C;&#x5176;&#x76F8;&#x4F3C;&#x5EA6;&#x5B9A;&#x4E49;&#x4E3A;Nc/Nt*100%&#xFF0C;Nc&#x662F;&#x4E24;&#x7EC4;&#x6570;&#x76F8;&#x540C;&#x6570;&#x5B57;&#x7684;&#x4E2A;&#x6570; &#xFF0C;Nt&#x662F;&#x4E24;&#x7EC4;&#x6570;&#x7684;&#x4E0D;&#x540C;&#x6570;&#x5B57;&#x603B;&#x4E2A;&#x6570;&#x3002;&#x8981;&#x6C42;&#x8BA1;&#x7B97;&#x51FA;&#x4EFB;&#x610F;&#x7ED9;&#x5B9A;&#x4E24;&#x7EC4;&#x6570;&#x7684;&#x76F8;&#x4F3C;&#x5EA6;&#x3002; ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x8868;&#x793A;&#x6709;&#x591A;&#x5C11;&#x7EC4;&#x3002;</p><p>&#x5728;&#x968F;&#x540E;&#x7684;N&#x884C;&#x4E2D;&#xFF0C;&#x6BCF;&#x884C;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;M&#x8868;&#x793A;&#x8BE5;&#x7EC4;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x6570;&#xFF0C;&#x63A5;&#x7740;&#x662F;M&#x4E2A;&#x6574;&#x6570;&#x3002;</p><p>&#x8F93;&#x5165;&#x5B8C;&#x6240;&#x6709;&#x7684;&#x96C6;&#x5408;&#x4E4B;&#x540E;&#xFF0C;&#x7ED9;&#x51FA;&#x6B63;&#x6574;&#x6570;K&#xFF0C;&#x63A5;&#x7740;&#x662F;K&#x884C;&#x67E5;&#x8BE2;&#xFF0C;&#x6BCF;&#x4E2A;&#x67E5;&#x8BE2;&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x6C42;&#x8FD9;&#x4E24;&#x7EC4;&#x7684;&#x76F8;&#x4F3C;&#x5EA6;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x67E5;&#x8BE2;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x96C6;&#x5408;&#x7684;&#x50CF;&#x662F;&#x5BF9;&#xFF0C;&#x7CBE;&#x786E;&#x5230;&#x5C0F;&#x6570;&#x70B9;&#x540E;&#x4E00;&#x4F4D;&#x3002;</p><p>&#x6BD4;&#x5982;&#x5BF9;&#x4E8E;&#x6837;&#x4F8B;&#x4E2D;&#x7684;1&#xFF0C;2&#x7EC4;&#xFF0C;&#x4E00;&#x5171;&#x6709;4&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x5B57;&#xFF08;5,87,99,101&#xFF09;&#x4E00;&#x5171;&#x6709;2&#x4E2A;&#x6570;&#x5B57;&#x5728;&#x4E24;&#x7EC4;&#x90FD;&#x6709;&#xFF0C;&#x4E3A;&#xFF08;87,101&#xFF09;&#x6240;&#x4EE5;&#x4E3A;50%&#x3002; &#x5BF9;&#x4E8E;1,3&#x7EC4;&#xFF0C;&#x4E00;&#x5171;&#x6709;&#xFF08;5,18,87,99,101,135&#xFF09;&#x5171;&#x540C;&#x7684;&#x6570;&#x5B57;&#x4E3A;&#xFF08;99,101&#xFF09;&#x6240;&#x4EE5;&#x76F8;&#x4F3C;&#x5EA6;&#x4E3A;2/6=33.3% # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x4F7F;&#x7528;set&#xFF0C;&#x5728;&#x5934;&#x6587;&#x4EF6;set&#x4E2D;&#x3002; ## Tips set.size() &#x8FD4;&#x56DE;&#x5F53;&#x524D;set&#x5BB9;&#x5668;&#x4E2D;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#x3002;</p><p>set.find() &#x8FD4;&#x56DE;&#x7ED9;&#x5B9A;&#x5236;&#x6240;&#x5728;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x5219;&#x8FD4;&#x56DE;set.end() &#x7528;&#x6CD5; set.find(1)&#x3002;</p><p>set.count() &#x7528;&#x6765;&#x67E5;&#x627E;set&#x4E2D;&#x67D0;&#x4E2A;&#x952E;&#x503C;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x5B9E;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x4E2A;&#x952E;&#x503C;&#x53EA;&#x80FD;&#x5728;set&#x4E2D;&#x51FA;&#x73B0;0&#x6B21;&#x6216;&#x8005;1&#x6B21;&#x3002;&#x7528;&#x6CD5; set.count(1)&#x3002;</p><p>&#x63D2;&#x5165;&#xFF0C;set.insert(Key_value) &#x5C06;Key_value&#x63D2;&#x5165;&#x5230;set&#x4E2D; &#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; num[<span class="number">51</span>];</span><br><span class="line"><span class="keyword">int</span> N, M, K;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; K;</span><br><span class="line">    <span class="keyword">int</span> set1, set2;</span><br><span class="line">    <span class="keyword">int</span> cnt;<span class="comment">//&#x8BA1;&#x6570;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x76F8;&#x540C;&#x7684;&#x6570;&#x5B57;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)</span><br><span class="line">    {</span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; set1 &gt;&gt; set2;</span><br><span class="line">        <span class="keyword">if</span> (num[set1].size() &lt; num[set2].size())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> it = num[set1].begin(); it != num[set1].end(); it++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (num[set2].count(*it))</span><br><span class="line">                    cnt++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> it = num[set2].begin(); it != num[set2].end(); it++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (num[set1].count(*it))</span><br><span class="line">                    cnt++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//float temp = cnt*100.0 / (num[set1].size() + num[set2].size() - cnt);</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1f%%\n&quot;</span>, cnt*<span class="number">100.0</span> / (num[set1].size() + num[set2].size() - cnt));</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; M;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">            num[i + <span class="number">1</span>].insert(temp);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">99</span> <span class="number">87</span> <span class="number">101</span></span><br><span class="line"><span class="number">4</span> <span class="number">87</span> <span class="number">101</span> <span class="number">5</span> <span class="number">87</span></span><br><span class="line"><span class="number">7</span> <span class="number">99</span> <span class="number">101</span> <span class="number">18</span> <span class="number">5</span> <span class="number">135</span> <span class="number">18</span> <span class="number">99</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">50.0</span>%</span><br><span class="line"><span class="number">33.3</span>%</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> C++ STL </tag>
            
            <tag> C++ set </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1049 Counting Ones (30)</title>
      <link href="//posts/7987c544/"/>
      <url>//posts/7987c544/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1049" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x6C42;1~N&#x4E4B;&#x95F4;&#x7684;&#x5341;&#x8FDB;&#x5236;&#x5F62;&#x5F0F;&#x7684;&#x6240;&#x6709;&#x6570;&#x4E2D;&#xFF0C;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#x3002; ## &#x8F93;&#x51FA; &#x6C42;1~N&#x4E4B;&#x95F4;&#x7684;&#x5341;&#x8FDB;&#x5236;&#x5F62;&#x5F0F;&#x7684;&#x6240;&#x6709;&#x6570;&#x4E2D;&#xFF0C;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x3002;</p><p>&#x6BD4;&#x5982;&#x8F93;&#x5165;12&#xFF0C;&#x4ECE;1~12&#x6709;&#xFF1A;1,10,11,12&#x3002;&#x8FD9;4&#x4E2A;&#x6570;&#x4E2D;&#x4E00;&#x5171;&#x51FA;&#x73B0;&#x4E86;5&#x4E2A;1&#x3002;&#x56E0;&#x6B64;&#x8F93;&#x51FA;5&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x8FD9;&#x4E2A;&#x9898;&#x662F;&#x7528;&#x4E58;&#x6CD5;&#x539F;&#x7406;&#x548C;&#x52A0;&#x6CD5;&#x539F;&#x7406;&#x53BB;&#x505A;&#x7684;&#x3002; &#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x5206;&#x6790;&#xFF0C;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x4E94;&#x4F4D;&#x6570;abcde&#xFF0C;&#x73B0;&#x53EA;&#x8003;&#x8651;&#x767E;&#x4F4D;&#x6570;c&#x3002;</p><p>&#x5206;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#xFF1A; 1. &#x5982;&#x679C;c=0&#xFF0C;&#x5219;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x4E3A;ab*100&#x3002;&#x5373;&#xFF1A;c&#x524D;&#x9762;&#x7684;&#x6570;*c&#x5BF9;&#x5E94;&#x7684;&#x7CFB;&#x6570;&#x3002;&#x4EE5;N=12045&#x4E3A;&#x4F8B;&#xFF1A;&#x767E;&#x4F4D;&#x6570;&#x51FA;&#x73B0;1&#x7684;&#x6709;&#xFF1A;00100<sub>00199&#xFF08;100&#x4E2A;&#xFF09;&#xFF0C;01100</sub>01199&#xFF08;100&#x4E2A;&#xFF09;&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#xFF0C;&#x5373;&#x4ECE;001xx~111xx&#xFF0C;&#x5171;12&#x7EC4;100&#x4E2A;&#x3002; 2. &#x5982;&#x679C;c=1&#xFF0C;&#x5219;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x4E3A;ab*100+de+1&#x3002;&#x5373;&#xFF1A;c&#x524D;&#x9762;&#x7684;&#x6570;*c&#x5BF9;&#x5E94;&#x7684;&#x7CFB;&#x6570;+c&#x540E;&#x9762;&#x7684;&#x6570;+1&#x3002;&#x4EE5;12145&#x4E3A;&#x4F8B;&#xFF1A;&#x767E;&#x4F4D;&#x6570;&#x51FA;&#x73B0;1&#x7684;&#x6709;001xx<sub>111xx&#xFF0C;&#x5171;12&#x7EC4;100&#x4E2A;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;12100</sub>12145&#xFF0C;&#x5171;45+1=46&#x4E2A;&#x3002; 3. &#x5982;&#x679C;c&gt;1&#xFF0C;&#x5219;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x4E3A;(ab+1)*100&#xFF0C;&#x5373;&#xFF1A;(c&#x524D;&#x9762;&#x7684;&#x6570;+1)*c&#x5BF9;&#x5E94;&#x7684;&#x7CFB;&#x6570;&#x3002;&#x4EE5;12345&#x4E3A;&#x4F8B;&#xFF1A;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x6709;001xx~121xx&#xFF0C;&#x5171;13&#x7EC4;100&#x4E2A;&#x3002;</p><p>&#x5176;&#x4ED6;&#x4F4D;&#x6570;&#x540C;&#x7406;&#x3002;&#x6700;&#x540E;&#x52A0;&#x8D77;&#x6765;&#x5373;&#x53EF;&#x5F97;&#x7ED3;&#x679C;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>,now=<span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; num/i!=<span class="number">0</span>; i=i*<span class="number">10</span>)</span><br><span class="line">    {</span><br><span class="line">        left = num / (i * <span class="number">10</span>);</span><br><span class="line">        now = num / i % <span class="number">10</span>;</span><br><span class="line">        right = num%i;</span><br><span class="line">        <span class="keyword">if</span> (now == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            res += left*i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (now == <span class="number">1</span>)</span><br><span class="line">            res += left*i + right + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            res += (left + <span class="number">1</span>)* i;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;1.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">12</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学问题 </tag>
            
            <tag> 乘法原理 </tag>
            
            <tag> 加法原理 </tag>
            
            <tag> 分类讨论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>求最长上升子序列的长度</title>
      <link href="//posts/eacf7b1a/"/>
      <url>//posts/eacf7b1a/</url>
      <content type="html"><![CDATA[<h1 id="&#x5F15;&#x8A00;">&#x5F15;&#x8A00;</h1><p>&#x6709;&#x4E00;&#x4E2A;&#x957F;&#x4E3A;n&#x7684;&#x6570;&#x5217; a0,a1,a2...an-1 &#xFF0C;&#x6C42;&#x51FA;&#x8FD9;&#x4E2A;&#x5E8F;&#x5217;&#x4E2D;&#x6700;&#x957F;&#x7684;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x6307;&#x7684;&#x662F;&#x5BF9;&#x4E8E;&#x4EFB;&#x610F;&#x7684;i&lt;j&#xFF0C;&#x90FD;&#x6709;ai&lt;aj&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x3002; <a id="more"></a> ## &#x6837;&#x4F8B; &#x5047;&#x8BBE;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;a[1..9] = 2 1 5 3 6 4 8 9 7&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6765;&#x5B83;&#x7684;LIS&#x957F;&#x5EA6;&#x4E3A;5&#x3002;</p><h1 id="on2&#x89E3;&#x6CD5;">O&#xFF08;n^2&#xFF09;&#x89E3;&#x6CD5;</h1><p>&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x5B9A;&#x4E49;dp[i]=&#x4EE5;ai&#x4E3A;&#x672B;&#x5C3E;&#x7684;&#x6700;&#x957F;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x3002;</p><p>&#x4EE5;ai&#x4E3A;&#x7ED3;&#x5C3E;&#x7684;&#x4E0A;&#x5347;&#x81F3;&#x5E8F;&#x5217;&#x662F; 1. &#x53EA;&#x5305;&#x542B;ai&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x3002; 2. &#x5728;&#x6EE1;&#x8DB3;j&lt;i&#x5E76;&#x4E14;aj&lt;ai&#x7684;&#x4EE5;aj&#x4E3A;&#x7ED3;&#x5C3E;&#x7684;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x672B;&#x5C3E;&#xFF0C;&#x8FFD;&#x52A0;&#x4E0A;ai&#x540E;&#x5F97;&#x5230;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x3002;</p><p>&#x8FD9;&#x4E8C;&#x8005;&#x4E4B;&#x4E00;&#x3002;&#x56E0;&#x6B64;&#x80FD;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#xFF1A;</p><p>dp[i]=max{1,dp[j]+1} (j&lt;i&#x4E14;aj&lt;ai)</p><p>&#x7528;&#x8FD9;&#x4E2A;&#x9012;&#x63A8;&#x516C;&#x5F0F;&#x53EF;&#x4EE5;&#x5728;O(n^2)&#x65F6;&#x95F4;&#x5185;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[MAX_N];</span><br><span class="line"><span class="keyword">int</span> dp[MAX_N];<span class="comment">//dp&#x6570;&#x7EC4;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        dp[i] = <span class="number">1</span>;<span class="comment">//&#x81F3;&#x5C11;&#x8FD9;&#x4E2A;&#x6570;&#x672C;&#x8EAB;&#x662F;&#x4E00;&#x4E2A;LIS</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (a[j]&lt;a[i])</span><br><span class="line">                dp[i] = max(dp[i], dp[j] + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        res = max(res,dp[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="onlogn&#x89E3;&#x6CD5;">O(nlogn)&#x89E3;&#x6CD5;</h1><p>&#x524D;&#x9762;&#x6211;&#x4EEC;&#x7528;DP&#x6C42;&#x5F97;&#x9488;&#x5BF9;&#x6700;&#x672B;&#x5C3E;&#x5143;&#x7D20;&#x7684;&#x6700;&#x957F;&#x5B50;&#x5E8F;&#x5217;&#xFF0C;&#x5982;&#x679C;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x76F8;&#x540C;&#xFF0C;&#x90A3;&#x4E48;<strong>&#x6700;&#x672B;&#x5C3E;&#x7684;&#x5143;&#x7D20;&#x8F83;&#x5C0F;</strong>&#x7684;&#x5728;&#x4E4B;&#x540E;&#x4F1A;&#x66F4;&#x6709;&#x4F18;&#x52BF;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53CD;&#x8FC7;&#x6765;&#x7528;DP&#x9488;&#x5BF9;<strong>&#x957F;&#x5EA6;&#x76F8;&#x540C;</strong>&#x60C5;&#x51B5;&#x4E0B;&#x6700;&#x5C0F;&#x7684;&#x672B;&#x5C3E;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x6C42;&#x89E3;&#x3002;</p><p>dp[i]=&#x957F;&#x5EA6;&#x4E3A;i+1&#x7684;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x4E2D;&#x672B;&#x5C3E;&#x5143;&#x7D20;&#x7684;&#x6700;&#x5C0F;&#x503C;&#xFF08;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#x5C31;&#x662F;INF&#xFF09;</p><p>&#x6765;&#x770B;&#x5982;&#x4F55;&#x7528;DP&#x66F4;&#x65B0;&#x8FD9;&#x4E2A;&#x6570;&#x7EC4;&#x3002;</p><p>&#x4E00;&#x5F00;&#x59CB;&#xFF0C;&#x5168;&#x90E8;&#x7684;dp[i]&#x7684;&#x503C;&#x90FD;&#x521D;&#x59CB;&#x5316;&#x4E3A;INF&#xFF0C;&#x7136;&#x540E;&#x7531;&#x524D;&#x5230;&#x540E;&#x9010;&#x4E2A;&#x8003;&#x8651;&#x6570;&#x5217;&#x7684;&#x5143;&#x7D20;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;aj&#xFF0C;&#x5982;&#x679C;i=0&#xFF0C;&#x6216;&#x8005;dp[i-1]&lt;aj&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x7528;dp[i]=min(dp[i],aj)&#x8FDB;&#x884C;&#x66F4;&#x65B0;&#x3002;&#x6700;&#x7EC8;&#x627E;&#x51FA;&#x4F7F;&#x5F97;dp[i]&lt;INF&#x7684;&#x6700;&#x5927;&#x7684;i+1&#x5C31;&#x662F;&#x7ED3;&#x679C;&#x4E86;&#x3002;</p><p>&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7528;DP&#x76F4;&#x63A5;&#x5B9E;&#x73B0;&#x7684;&#x8BDD;&#xFF0C;&#x8FD8;&#x662F;&#x4E0E;&#x524D;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x4E00;&#x6837;&#xFF0C;&#x5728;O(n^2)&#x7684;&#x65F6;&#x95F4;&#x5185;&#x7ED9;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E00;&#x7B97;&#x6CD5;&#x8FD8;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x4F18;&#x5316;&#x3002;</p><p>&#x9996;&#x5148;dp&#x6570;&#x5217;&#x4E2D;&#xFF0C;&#x9664;INF&#x4E4B;&#x5916;&#x90FD;&#x662F;&#x5355;&#x8C03;&#x9012;&#x589E;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;aj&#x6700;&#x591A;&#x53EA;&#x9700;&#x8981;1&#x6B21;&#x66F4;&#x65B0;&#xFF0C;&#x5BF9;&#x4E8E;&#x8FD9;&#x6B21;&#x66F4;&#x65B0;&#x5E94;&#x8BE5;&#x5728;&#x4EC0;&#x4E48;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E0D;&#x5FC5;&#x9010;&#x4E2A;&#x904D;&#x5386;&#xFF0C;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x4E8C;&#x5206;&#x641C;&#x7D22;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5728;O&#xFF08;nlogn&#xFF09;&#x7684;&#x65F6;&#x95F4;&#x5185;&#x6C42;&#x51FA;&#x7ED3;&#x679C;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    fill(dp, dp + n, INF);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        * lower_bound(dp, dp + n, a[i]) = a[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; lower_bound(dp, dp + n, INF) - dp;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="lower_bound">lower_bound</h2><p>lower_bound&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4ECE;&#x5DF2;&#x6392;&#x597D;&#x7684;&#x5E8F;&#x5217;a&#x4E2D;&#x5229;&#x7528;&#x4E8C;&#x5206;&#x641C;&#x7D22;&#x627E;&#x51FA;&#x6307;&#x5411;&#x6EE1;&#x8DB3;ai&gt;=k&#x7684;ai&#x7684;&#x6700;&#x5C0F;&#x7684;&#x6307;&#x9488;&#x3002;&#x7C7B;&#x4F3C;&#x7684;&#x51FD;&#x6570;&#x8FD8;&#x6709;upper_bound&#xFF0C;&#x5B83;&#x7684;&#x529F;&#x80FD;&#x662F;&#x6C42;&#x51FA;&#x6307;&#x5411;&#x6EE1;&#x8DB3;ai&gt;k&#x7684;&#x6700;&#x5C0F;&#x7684;&#x6307;&#x9488;&#x3002;</p><p>&#x6BD4;&#x5982;&#x6C42;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6709;&#x5E8F;&#x6570;&#x7EC4;a&#x4E2D;k&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;</p><p>upper_bound(a, a + n, k) - lower_bound(a, a + n, k);</p><h2 id="&#x4F8B;&#x5B50;">&#x4F8B;&#x5B50;</h2><p>&#x5047;&#x8BBE;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;d[1..9] = 2 1 5 3 6 4 8 9 7&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6765;&#x5B83;&#x7684;LIS&#x957F;&#x5EA6;&#x4E3A;5&#x3002;</p><p>&#x4E0B;&#x9762;&#x4E00;&#x6B65;&#x4E00;&#x6B65;&#x8BD5;&#x7740;&#x627E;&#x51FA;&#x5B83;&#x3002;</p><p>&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;B&#xFF0C;&#x7136;&#x540E;&#x4EE4; i = 1 to 9 &#x9010;&#x4E2A;&#x8003;&#x5BDF;&#x8FD9;&#x4E2A;&#x5E8F;&#x5217;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x7528;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;Len&#x6765;&#x8BB0;&#x5F55;&#x73B0;&#x5728;&#x6700;&#x957F;&#x7B97;&#x5230;&#x591A;&#x5C11;&#x4E86;&#x3002;</p><ol type="1"><li>&#x628A;d[1]&#x6709;&#x5E8F;&#x5730;&#x653E;&#x5230;B&#x91CC;&#xFF0C;&#x4EE4;B[1] = 2&#xFF0C;&#x5C31;&#x662F;&#x8BF4;&#x5F53;&#x53EA;&#x6709;1&#x4E00;&#x4E2A;&#x6570;&#x5B57;2&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;1&#x7684;LIS&#x7684;&#x6700;&#x5C0F;&#x672B;&#x5C3E;&#x662F;2&#x3002;&#x8FD9;&#x65F6;Len=1&#x3002;</li><li>&#x628A;d[2]&#x6709;&#x5E8F;&#x5730;&#x653E;&#x5230;B&#x91CC;&#xFF0C;&#x4EE4;B[1] = 1&#xFF0C;&#x5C31;&#x662F;&#x8BF4;&#x957F;&#x5EA6;&#x4E3A;1&#x7684;LIS&#x7684;&#x6700;&#x5C0F;&#x672B;&#x5C3E;&#x662F;1&#xFF0C;d[1]=2&#x5DF2;&#x7ECF;&#x6CA1;&#x7528;&#x4E86;&#x3002;&#x8FD9;&#x65F6;Len=1&#x3002;</li><li>d[3] = 5&#xFF0C;d[3]&gt;B[1]&#xFF0C;&#x6240;&#x4EE5;&#x4EE4;B[1+1]=B[2]=d[3]=5&#xFF0C;&#x5C31;&#x662F;&#x8BF4;&#x957F;&#x5EA6;&#x4E3A;2&#x7684;LIS&#x7684;&#x6700;&#x5C0F;&#x672B;&#x5C3E;&#x662F;5&#x3002;&#x8FD9;&#x65F6;&#x5019;B[1..2] = 1, 5&#xFF0C;Len&#xFF1D;2&#x3002;</li><li>d[4] = 3&#xFF0C;&#x5B83;&#x6B63;&#x597D;&#x52A0;&#x5728;1,5&#x4E4B;&#x95F4;&#xFF0C;&#x653E;&#x5728;1&#x7684;&#x4F4D;&#x7F6E;&#x663E;&#x7136;&#x4E0D;&#x5408;&#x9002;&#xFF0C;&#x56E0;&#x4E3A;1&#x5C0F;&#x4E8E;3&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;1&#x7684;LIS&#x6700;&#x5C0F;&#x672B;&#x5C3E;&#x5E94;&#x8BE5;&#x662F;1&#xFF0C;&#x8FD9;&#x6837;&#x5F88;&#x5BB9;&#x6613;&#x63A8;&#x77E5;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;2&#x7684;LIS&#x6700;&#x5C0F;&#x672B;&#x5C3E;&#x662F;3&#xFF0C;&#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x628A;5&#x6DD8;&#x6C70;&#x6389;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;B[1..2] = 1, 3&#xFF0C;Len = 2&#x3002;</li><li>d[5] = 6&#xFF0C;&#x5B83;&#x5728;3&#x540E;&#x9762;&#xFF0C;&#x56E0;&#x4E3A;B[2] = 3, &#x800C;6&#x5728;3&#x540E;&#x9762;&#xFF0C;&#x4E8E;&#x662F;&#x5F88;&#x5BB9;&#x6613;&#x53EF;&#x4EE5;&#x63A8;&#x77E5;B[3] = 6, &#x8FD9;&#x65F6;B[1..3] = 1, 3, 6&#xFF0C; Len = 3 &#x3002;</li><li>d[6] = 4&#xFF0C;&#x4F60;&#x770B;&#x5B83;&#x5728;3&#x548C;6&#x4E4B;&#x95F4;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x53EF;&#x4EE5;&#x628A;6&#x66FF;&#x6362;&#x6389;&#xFF0C;&#x5F97;&#x5230;B[3] = 4&#x3002;B[1..3] = 1, 3, 4&#xFF0C; Len&#x7EE7;&#x7EED;&#x7B49;&#x4E8E;3&#x3002;</li><li>d[7] = 8&#xFF0C;&#x5B83;&#x5F88;&#x5927;&#xFF0C;&#x6BD4;4&#x5927;&#x3002;&#x4E8E;&#x662F;B[4] = 8&#x3002;Len&#x53D8;&#x6210;4&#x3002;</li><li>d[8] = 9&#xFF0C;&#x5F97;&#x5230;B[5] = 9&#x3002;Len=5&#x3002;</li><li>d[9] = 7&#xFF0C;&#x5B83;&#x5728;B[3] = 4&#x548C;B[4] = 8&#x4E4B;&#x95F4;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x6700;&#x65B0;&#x7684;B[4] =7&#xFF0C;B[1..5] = 1, 3, 4, 7, 9&#xFF0C;Len = 5&#x3002;</li></ol><p>&#x4E8E;&#x662F;&#x77E5;&#x9053;&#x4E86;LIS&#x7684;&#x957F;&#x5EA6;&#x4E3A;5&#x3002;</p><p>&#x6CE8;&#x610F;&#x3002;&#x8FD9;&#x4E2A;1,3,4,7,9&#x4E0D;&#x662F;LIS&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x5B58;&#x50A8;&#x7684;&#x5BF9;&#x5E94;&#x957F;&#x5EA6;LIS&#x7684;&#x6700;&#x5C0F;&#x672B;&#x5C3E;&#x3002;&#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x672B;&#x5C3E;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x5730;&#x63D2;&#x5165;&#x6570;&#x636E;&#x3002;&#x867D;&#x7136;&#x6700;&#x540E;&#x4E00;&#x4E2A;d[9] = 7&#x66F4;&#x65B0;&#x8FDB;&#x53BB;&#x5BF9;&#x4E8E;&#x8FD9;&#x7EC4;&#x6570;&#x636E;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x610F;&#x4E49;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x540E;&#x9762;&#x518D;&#x51FA;&#x73B0;&#x4E24;&#x4E2A;&#x6570;&#x5B57; 8 &#x548C; 9&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x53EF;&#x4EE5;&#x628A;8&#x66F4;&#x65B0;&#x5230;d[5], 9&#x66F4;&#x65B0;&#x5230;d[6]&#xFF0C;&#x5F97;&#x51FA;LIS&#x7684;&#x957F;&#x5EA6;&#x4E3A;6&#x3002;</p><p>&#x7136;&#x540E;&#x5E94;&#x8BE5;&#x53D1;&#x73B0;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x4E86;&#xFF1A;&#x5728;B&#x4E2D;&#x63D2;&#x5165;&#x6570;&#x636E;&#x662F;&#x6709;&#x5E8F;&#x7684;&#xFF0C;&#x800C;&#x4E14;&#x662F;&#x8FDB;&#x884C;&#x66FF;&#x6362;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x632A;&#x52A8;&#x2014;&#x2014;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E8C;&#x5206;&#x67E5;&#x627E;&#xFF0C;&#x5C06;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x63D2;&#x5165;&#x65F6;&#x95F4;&#x4F18;&#x5316;&#x5230;O(logn)&#xFF0C;&#x4E8E;&#x662F;&#x7B97;&#x6CD5;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x964D;&#x4F4E;&#x5230;&#x4E86;O(nlogn)&#x3002;</p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 最长上升子序列 </tag>
            
            <tag> DP </tag>
            
            <tag> LIS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1045 Favorite Color Stripe (30)</title>
      <link href="//posts/904123e6/"/>
      <url>//posts/904123e6/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1045" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x559C;&#x6B22;&#x7684;&#x5F69;&#x6761;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6;&#x3002; <a id="more"></a></p><p>&#x62BD;&#x8C61;&#x51FA;&#x6765;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x6C42;&#x5E8F;&#x5217;&#x7684;&#x6700;&#x957F;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x4F46;&#x662F;&#x5141;&#x8BB8;&#x5143;&#x7D20;&#x91CD;&#x590D;&#x51FA;&#x73B0;&#x3002; ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x4ED6;&#x662F;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x989C;&#x8272;&#x603B;&#x6570;&#xFF0C;&#x4ECE;1~N&#x7F16;&#x53F7;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x884C;&#x4EE5;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;M&#x5F00;&#x5934;&#xFF0C;&#x540E;&#x8DDF;M&#x4E2A;&#x559C;&#x6B22;&#x7684;&#x989C;&#x8272;&#x3002;</p><p>&#x6700;&#x540E;&#xFF0C;&#x7B2C;&#x4E09;&#x884C;&#x4EE5;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;L&#x5F00;&#x5934;&#xFF0C;&#x8868;&#x793A;&#x7ED9;&#x5B9A;&#x6761;&#x5E26;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x540E;&#x9762;&#x662F;L&#x4E2A;&#x989C;&#x8272;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x53EA;&#x9700;&#x8981;&#x8F93;&#x51FA;&#x6700;&#x559C;&#x6B22;&#x7684;&#x5F69;&#x6761;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x8FD9;&#x4E2A;&#x9898;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x4E2A;&#x6700;&#x957F;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x95EE;&#x9898;&#x3002;</p><p>&#x5173;&#x4E8E;&#x66F4;&#x591A;&#x4FE1;&#x606F;&#xFF0C;&#x8BF7;&#x770B;<a href="../eacf7b1a/">&#x6C42;&#x6700;&#x957F;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;</a></p><p>&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x5B9A;&#x4E49;dp[i]=&#x4EE5;ai&#x4E3A;&#x672B;&#x5C3E;&#x7684;&#x6700;&#x957F;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x3002;</p><p>&#x4EE5;ai&#x4E3A;&#x7ED3;&#x5C3E;&#x7684;&#x4E0A;&#x5347;&#x81F3;&#x5E8F;&#x5217;&#x662F; 1. &#x53EA;&#x5305;&#x542B;ai&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x3002; 2. &#x5728;&#x6EE1;&#x8DB3;j&lt;i&#x5E76;&#x4E14;aj&lt;ai&#x7684;&#x4EE5;aj&#x4E3A;&#x7ED3;&#x5C3E;&#x7684;&#x4E0A;&#x5347;&#x5B50;&#x5E8F;&#x5217;&#x672B;&#x5C3E;&#xFF0C;&#x8FFD;&#x52A0;&#x4E0A;ai&#x540E;&#x5F97;&#x5230;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x3002;</p><p>&#x8FD9;&#x4E8C;&#x8005;&#x4E4B;&#x4E00;&#x3002;&#x56E0;&#x6B64;&#x80FD;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#xFF1A;</p><p>dp[i]=max{1,dp[j]+1} (j&lt;i&#x4E14;aj&lt;ai)</p><p>&#x7528;&#x8FD9;&#x4E2A;&#x9012;&#x63A8;&#x516C;&#x5F0F;&#x53EF;&#x4EE5;&#x5728;O(n^2)&#x65F6;&#x95F4;&#x5185;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;</p><p>&#x5269;&#x4E0B;&#x7684;&#x5173;&#x952E;&#x662F;&#x786E;&#x5B9A;&#x989C;&#x8272;&#x95F4;&#x7684;&#x5927;&#x5C0F;&#x5173;&#x7CFB;&#x3002;&#x5373;&#x4EBA;&#x4E3A;&#x7684;&#x6784;&#x5EFA;&#x540E;&#x9762;&#x7684;&#x989C;&#x8272;&#x7684;&#x503C;&#x5927;&#x4E8E;&#x524D;&#x9762;&#x989C;&#x8272;&#x7684;&#x503C;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, like[<span class="number">201</span>] = {<span class="number">0</span>}, stripe[<span class="number">10001</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> M, L;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    <span class="keyword">int</span> color;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= M; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; color;</span><br><span class="line">        like[color] = i;<span class="comment">//&#x4EBA;&#x4E3A;&#x7684;&#x6784;&#x5EFA;&#x989C;&#x8272;&#x7684;&#x5927;&#x5C0F;&#x5173;&#x7CFB;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> like_num=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; L;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; color;</span><br><span class="line">        <span class="keyword">if</span> (like[color])</span><br><span class="line">        {</span><br><span class="line">            stripe[like_num++] = like[color];<span class="comment">//&#x53EA;&#x4FDD;&#x5B58;&#x559C;&#x6B22;&#x7684;&#xFF0C;&#x53CD;&#x6B63;&#x4E0D;&#x559C;&#x6B22;&#x7684;&#x4E5F;&#x5F97;&#x526A;&#x53BB;</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> dp[<span class="number">10001</span>];</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; like_num; i++)</span><br><span class="line">    {</span><br><span class="line">        dp[i] = <span class="number">1</span>;<span class="comment">//&#x81F3;&#x5C11;&#x559C;&#x6B22;&#x4E00;&#x4E2A;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(stripe[j] &lt;= stripe[i])<span class="comment">//&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x4E86;</span></span><br><span class="line">                dp[i] = max(dp[i], dp[j] + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        res = max(res, dp[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">5</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">12</span> <span class="number">2</span> <span class="number">2</span> <span class="number">4</span> <span class="number">1</span> <span class="number">5</span> <span class="number">5</span> <span class="number">6</span> <span class="number">3</span> <span class="number">1</span> <span class="number">1</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 最长上升子序列 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1068 Find More Coins (30)</title>
      <link href="//posts/5c4b01e5/"/>
      <url>//posts/5c4b01e5/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1068" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5728;&#x4E00;&#x5806;&#x786C;&#x5E01;&#x4E2D;&#x627E;&#x5230;&#x603B;&#x9762;&#x989D;&#x4E3A;&#x7ED9;&#x5B9A;&#x503C;&#x7684;&#x4E00;&#x4E9B;&#x786C;&#x5E01;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x5305;&#x62EC;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;N&#xFF0C;&#x8868;&#x793A;&#x786C;&#x5E01;&#x603B;&#x6570;&#x3002;M&#xFF0C;&#x8868;&#x793A;&#x91D1;&#x989D;&#x3002; &#x7B2C;&#x4E8C;&#x884C;&#x662F;N&#x4E2A;&#x786C;&#x5E01;&#x7684;&#x9762;&#x503C;&#xFF0C;&#x5747;&#x662F;&#x6B63;&#x6574;&#x6570;&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA; V1 &lt;= V2 &lt;= ... &lt;= Vk &#xFF0C;&#x4F7F; V1 + V2 + ... + Vk = M&#x3002; &#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7531;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; &#x5982;&#x679C;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4E0D;&#x552F;&#x4E00;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x6700;&#x5C0F;&#x7684;&#x5E8F;&#x5217;&#xFF08;&#x5373;&#x4F7F;&#x6BCF;&#x4E2A;&#x6570;&#x5C3D;&#x53EF;&#x80FD;&#x5C0F;&#xFF09;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x8F93;&#x51FA;No Solution&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 01&#x80CC;&#x5305;&#xFF0C;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x53BB;&#x505A;&#x3002;</p><p>&#x5047;&#x8BBE;F(N, M)&#x8868;&#x793A;&#x4E0D;&#x8D85;&#x8FC7;&#x9762;&#x503C;M, &#x800C;&#x4E14;&#x4ECE;&#x524D;&#x9762;N&#x4E2A;&#x786C;&#x5E01;&#x4E2D;&#x6311;&#x9009;&#x786C;&#x5E01;&#x503C;&#x80FD;&#x5F97;&#x5230;&#x7684;&#x6700;&#x5927;&#x786C;&#x5E01;&#x9762;&#x503C;&#x603B;&#x548C;, &#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x9012;&#x5F52;&#x516C;&#x5F0F;:</p><p>F(N, M) = max{ F(N &#x2013; 1, M), F(N &#x2013; 1, M &#x2013; V(N)) + V(N) }</p><p>&#x5176;&#x4E2D; V(N)&#x8868;&#x793A;&#x7B2C;N&#x4E2A;&#x786C;&#x5E01;&#x7684;&#x9762;&#x503C;&#x3002;&#x5982;&#x679C;&#x6700;&#x540E;F(N, M) == M&#x3002;&#x90A3;&#x4E48;&#x5C31;&#x8BF4;&#x660E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x8FD9;&#x6837;&#x4E00;&#x7EC4;&#x786C;&#x5E01;, &#x4F7F;&#x5F97;&#x4ED6;&#x4EEC;&#x7684;&#x9762;&#x503C;&#x603B;&#x548C;&#x6070;&#x597D;&#x7B49;&#x4E8E;M&#x3002;</p><p>&#x5269;&#x4E0B;&#x7684;&#x95EE;&#x9898;&#x662F;&#x5982;&#x4F55;&#x8BB0;&#x5F55;&#x8DEF;&#x5F84;, &#x4E5F;&#x5C31;&#x662F;&#x600E;&#x4E48;&#x8BB0;&#x5F55;&#x6311;&#x9009;&#x51FA;&#x54EA;&#x4E9B;&#x786C;&#x5E01;?</p><p>&#x53E6;&#x5F00;&#x4E00;&#x5757;&#x7A7A;&#x95F4;&#xFF0C;&#x5728;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x91CC;&#x4E3A;bool selected[N][M],&#x5982;&#x679C;&#x5176;&#x503C;&#x4E3A;true&#xFF0C;&#x5219;&#x8868;&#x793A;&#x4ECE;&#x524D;N&#x4E2A;&#x786C;&#x5E01;&#x4E2D;&#x9009;&#x51FA;&#x4E00;&#x7EC4;&#x5F97;&#x5230;&#x6700;&#x591A;&#x4E0D;&#x8D85;&#x8FC7;M&#x603B;&#x9762;&#x989D;&#x7684;&#x786C;&#x5E01;&#x4E2D;&#xFF0C;&#x5305;&#x62EC;&#x4E86;&#x7B2C;N&#x4E2A;&#x786C;&#x5E01;&#x3002;</p><p>01&#x80CC;&#x5305;&#x4E3A;&#x4E86;&#x7F29;&#x51CF;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x9700;&#x8981;&#x4ECE;&#x540E;&#x5F80;&#x524D;&#x63A8;&#x3002; &#x6240;&#x4EE5;&#x4EE3;&#x7801;&#x5E94;&#x8BE5;&#x4E3A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = M; j &gt;= coin[i]; j--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (dp[j] &lt;= dp[j - coin[i]] + coin[i])</span><br><span class="line">        {</span><br><span class="line">            dp[j] = dp[j - coin[i]] + coin[i];</span><br><span class="line">            selected[i][j] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x6700;&#x540E;&#xFF0C;&#x9898;&#x76EE;&#x8981;&#x6C42;&#x4F7F;&#x5E8F;&#x5217;&#x7684;&#x5B57;&#x5178;&#x5E8F;&#x6700;&#x5C0F;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5BF9;&#x4E8E; 2&#xFF0C;2&#xFF0C;5&#xFF0C;&#x548C; 1&#xFF0C;3&#xFF0C;5 &#x8FD9;&#x6837;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x8981;&#x6C42;&#x8F93;&#x51FA; 1&#xFF0C;3&#xFF0C;5&#x3002;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5728;&#x4E4B;&#x524D;&#x5C31;&#x628A;&#x8F93;&#x5165;&#x7684;&#x786C;&#x5E01;&#x9762;&#x503C;&#x964D;&#x5E8F;&#x6392;&#x5217;&#xFF0C;&#x5148;&#x628A;&#x9762;&#x989D;&#x5927;&#x7684;&#x786C;&#x5E01;&#x653E;&#x8FDB;&#x53BB;&#xFF0C;&#x8FD9;&#x6837;&#x4F7F;&#x6700;&#x540E;&#x5269;&#x4E0B;&#x7684;&#x7A7A;&#x5C3D;&#x53EF;&#x80FD;&#x5C0F;&#xFF0C;&#x8FDB;&#x800C;&#x4F7F;&#x5B57;&#x5178;&#x5E8F;&#x6700;&#x5C0F;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a &gt; b;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">101</span>];<span class="comment">//dp&#x662F;&#x9012;&#x63A8;&#x6570;&#x7EC4;&#xFF0C;&#x8868;&#x793A;&#x5F53;&#x524D;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6700;&#x5927;&#x91CD;&#x91CF;&#x4E3A;dp[i]&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x80FD;&#x83B7;&#x5F97;&#x7684;&#x6700;&#x5927;&#x91CD;&#x91CF;&#x3002;</span></span><br><span class="line"><span class="keyword">int</span> coin[<span class="number">10001</span>];</span><br><span class="line"><span class="keyword">bool</span> selected[<span class="number">10001</span>][<span class="number">101</span>] = {<span class="number">0</span>};<span class="comment">//&#x8868;&#x793A;&#x4ECE;&#x524D;&#x9762;N&#x4E2A;&#x786C;&#x5E01;&#x4E2D;&#x9009;&#x51FA;&#x4E00;&#x7EC4;&#x5F97;&#x5230;&#x6700;&#x591A;&#x4E0D;&#x8D85;&#x8FC7;M&#x91CD;&#x91CF;&#x91CC;&#x9762;&#xFF0C;&#x662F;&#x5426;&#x5305;&#x62EC;&#x4E86;&#x7B2C;N&#x786C;&#x5E01;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> N, M;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; coin[i];<span class="comment">//&#x8F93;&#x5165;&#x786C;&#x5E01;&#x4FE1;&#x606F;</span></span><br><span class="line">    }</span><br><span class="line">    sort(coin, coin + N, cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = M; j &gt;= coin[i]; j--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (dp[j] &lt;= dp[j - coin[i]] + coin[i])</span><br><span class="line">            {</span><br><span class="line">                dp[j] = dp[j - coin[i]] + coin[i];</span><br><span class="line">                selected[i][j] = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (dp[M] != M)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;No Solution&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">    <span class="keyword">int</span> weight = M, num = N;<span class="comment">//weight&#x8868;&#x793A;&#x5F53;&#x524D;&#x91CD;&#x91CF;&#xFF0C;num&#x8868;&#x793A;&#x5728;&#x524D;num&#x4E2A;&#x786C;&#x5E01;&#x4E2D;&#x9009;&#x62E9;</span></span><br><span class="line">    <span class="keyword">while</span> (weight&gt;<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (selected[num][weight])<span class="comment">//&#x524D;num&#x4E2A;&#x786C;&#x5E01;&#x4E2D;&#xFF0C;&#x91CD;&#x91CF;&#x4E0D;&#x8D85;&#x8FC7;weight&#x7684;&#x7EC4;&#x5408;&#x4E2D;&#xFF0C;&#x5305;&#x542B;&#x4E86;&#x7B2C;num&#x4E2A;&#x786C;&#x5E01;</span></span><br><span class="line">        {</span><br><span class="line">            res.push_back(coin[num]);</span><br><span class="line">            weight -= coin[num];<span class="comment">//&#x5982;&#x679C;&#x5305;&#x542B;&#xFF0C;&#x770B;weight-coin[num]&#x91CC;&#x7684;&#x60C5;&#x51B5;</span></span><br><span class="line">        }</span><br><span class="line">        num--;<span class="comment">//&#x7B2C;num&#x4E2A;&#x786C;&#x5E01;&#x8BBF;&#x95EE;&#x8FC7;&#x4E86;&#xFF0C;&#x81EA;&#x51CF;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span>)<span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res[i];</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;1.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"><span class="number">8</span> <span class="number">9</span></span><br><span class="line"><span class="number">5</span> <span class="number">9</span> <span class="number">8</span> <span class="number">7</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"><span class="number">4</span> <span class="number">8</span></span><br><span class="line"><span class="number">7</span> <span class="number">2</span> <span class="number">4</span> <span class="number">3</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line">No Solution</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 背包问题 </tag>
            
            <tag> 01背包 </tag>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1072 Gas Station (30)</title>
      <link href="//posts/67237530/"/>
      <url>//posts/67237530/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1072" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6C42;&#x52A0;&#x6CB9;&#x7AD9;&#x7684;&#x4F4D;&#x7F6E;&#x3002; <a id="more"></a> &#x4E00;&#x4E2A;&#x52A0;&#x6CB9;&#x7AD9;&#x5FC5;&#x987B;&#x5EFA;&#x7ACB;&#x5728;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F7F;&#x5F97;&#x8BE5;&#x7AD9;&#x4E0E;&#x4EFB;&#x4F55;&#x4F4F;&#x5B85;&#x623F;&#x5C4B;&#x4E4B;&#x95F4;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#xFF0C;&#x5C3D;&#x53EF;&#x80FD;&#x8FDC;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x5F97;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x7684;&#x623F;&#x5C4B;&#x90FD;&#x5728;&#x5176;&#x670D;&#x52A1;&#x8303;&#x56F4;&#x4E4B;&#x5185;&#x3002;</p><p>&#x5148;&#x7ED9;&#x51FA;&#x8BE5;&#x57CE;&#x5E02;&#x7684;&#x5730;&#x56FE;&#x548C;&#x52A0;&#x6CB9;&#x7AD9;&#x7684;&#x51E0;&#x4E2A;&#x5019;&#x9009;&#x5730;&#x70B9;&#xFF0C;&#x8981;&#x6C42;&#x4F60;&#x7ED9;&#x51FA;&#x5EFA;&#x8BAE;&#x3002;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x5230;&#x6240;&#x6709;&#x623F;&#x5C4B;&#x7684;&#x5E73;&#x5747;&#x8DDD;&#x79BB;&#x6700;&#x5C0F;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x5982;&#x679C;&#x4ECD;&#x7136;&#x4E0D;&#x552F;&#x4E00;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x7D22;&#x5F15;&#x53F7;&#x6700;&#x5C0F;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002; ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x5305;&#x62EC;4&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;N&#xFF0C;&#x8868;&#x793A;&#x623F;&#x5C4B;&#x7684;&#x603B;&#x6570;&#xFF0C;M&#xFF0C;&#x8868;&#x793A;&#x52A0;&#x6CB9;&#x7AD9;&#x5019;&#x9009;&#x5730;&#x70B9;&#x7684;&#x603B;&#x6570;&#xFF0C;K&#xFF0C;&#x8868;&#x793A;&#x8FDE;&#x63A5;&#x623F;&#x5C4B;&#x548C;&#x52A0;&#x6CB9;&#x7AD9;&#x7684;&#x9053;&#x8DEF;&#x7684;&#x6570;&#x91CF;&#x3002;Ds&#xFF0C;&#x8868;&#x793A;&#x52A0;&#x6CB9;&#x7AD9;&#x7684;&#x6700;&#x5927;&#x670D;&#x52A1;&#x8303;&#x56F4;&#x3002;&#x5047;&#x5B9A;&#x623F;&#x5C4B;&#x7684;&#x7F16;&#x53F7;&#x662F;[1&#xFF0C;N]&#xFF0C;&#x6240;&#x6709;&#x5019;&#x9009;&#x5730;&#x70B9;&#x7684;&#x7F16;&#x53F7;&#x662F;[G1&#xFF0C;GM]</p><p>&#x7136;&#x540E;&#x662F;K&#x6761;&#x7EBF;&#xFF0C;&#x6BCF;&#x6761;&#x7EBF;&#x7684;&#x63CF;&#x8FF0;&#x683C;&#x5F0F;&#x4E3A;</p><p>P1 P2 Dist</p><p>P1&#x548C;P2&#x662F;&#x9053;&#x8DEF;&#x7684;&#x4E24;&#x7AEF;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x95E8;&#x724C;&#x53F7;&#x6216;&#x8005;&#x52A0;&#x6CB9;&#x7AD9;&#x7684;&#x53F7;&#x7801;&#xFF0C;Dist&#x8868;&#x793A;&#x9053;&#x8DEF;&#x7684;&#x957F;&#x5EA6;&#x3002; ## &#x8F93;&#x51FA; &#x5728;&#x7B2C;&#x4E00;&#x884C;&#x8F93;&#x51FA;&#x6700;&#x4F73;&#x4F4D;&#x7F6E;&#x7684;&#x7D22;&#x5F15;&#x53F7;&#x3002;&#x5728;&#x7B2C;&#x4E8C;&#x884C;&#x8F93;&#x51FA;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x548C;&#x6240;&#x6709;&#x623F;&#x5C4B;&#x4E4B;&#x95F4;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x548C;&#x5E73;&#x5747;&#x8DDD;&#x79BB;&#x3002;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7A7A;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#xFF0C;&#x4FDD;&#x7559;&#x4E00;&#x4F4D;&#x5C0F;&#x6570;&#x3002; &#x5982;&#x679C;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x8F93;&#x51FA; &quot;No Solution&quot; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. &#x5BF9;M&#x4E2A;&#x52A0;&#x6CB9;&#x7AD9;&#x5206;&#x522B;&#x4F7F;&#x7528;Dijkstra&#x7B97;&#x6CD5;&#xFF0C;&#xFF0C;&#x6C42;&#x51FA;&#x6700;&#x77ED;&#x8DDD;&#x79BB;&#x3002; 2. &#x6BD4;&#x8F83;&#xFF0C;&#x5224;&#x65AD;&#xFF0C;&#x6C42;&#x51FA;&#x6700;&#x4F18;&#x89E3;&#x3002; 3. &#x6309;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x3002;</p><h2 id="tips">Tips</h2><ol type="1"><li>&#x52A0;&#x6CB9;&#x7AD9;&#x4E4B;&#x95F4;&#x4E5F;&#x662F;&#x6709;&#x9053;&#x8DEF;&#x8FDE;&#x63A5;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8BA1;&#x7B97;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E5F;&#x8981;&#x628A;&#x52A0;&#x6CB9;&#x7AD9;&#x7B97;&#x4E0A;&#x3002;</li><li>&#x5BF9;&#x8F93;&#x5165;&#x8FDB;&#x884C;&#x5224;&#x65AD;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x6709; G1 G1 10 &#x8FD9;&#x6837;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x6CE8;&#x610F;&#x7B5B;&#x9009;&#x6700;&#x5C0F;&#x503C;&#x3002;</li><li>&#x65F6;&#x95F4;&#x9650;&#x5236;&#x662F;200ms&#xFF0C;Floyd&#x662F;&#x80AF;&#x5B9A;&#x4E0D;&#x884C;&#x7684;&#xFF0C;&#x8981;&#x7528;Dijkstra&#x3002;</li></ol><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM 2147483646</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, M, K, Ds;</span><br><span class="line"><span class="keyword">bool</span> visit[<span class="number">1011</span>] = {<span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M &gt;&gt; K &gt;&gt; Ds;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; g(N + M + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(N + M + <span class="number">1</span>, MAX_NUM/<span class="number">2</span>));<span class="comment">//&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N+M; i++)</span><br><span class="line">    {</span><br><span class="line">        g[i][i] = <span class="number">0</span>;<span class="comment">//&#x5BF9;&#x89D2;&#x7EBF;&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">string</span> start_string, end_string;</span><br><span class="line">    <span class="keyword">int</span> input_dis;</span><br><span class="line">    <span class="keyword">int</span> start_num, end_num;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x8F93;&#x5165;&#x6570;&#x636E;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; start_string &gt;&gt; end_string &gt;&gt; input_dis;</span><br><span class="line">        <span class="keyword">if</span> (start_string[<span class="number">0</span>]==<span class="string">&apos;G&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            start_string=start_string.substr(<span class="number">1</span>);<span class="comment">//&#x63D0;&#x53D6;&#x540E;&#x9762;&#x7684;&#x6570;&#x5B57;</span></span><br><span class="line">            start_num = stoi(start_string)+N;<span class="comment">//&#x8F6C;&#x4E3A;&#x6570;&#x5B57;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            start_num = stoi(start_string);<span class="comment">//&#x8F6C;&#x4E3A;&#x6570;&#x5B57;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (end_string[<span class="number">0</span>]==<span class="string">&apos;G&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            end_string = end_string.substr(<span class="number">1</span>);</span><br><span class="line">            end_num = stoi(end_string)+N;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            end_num = stoi(end_string);</span><br><span class="line">        }</span><br><span class="line">        g[end_num][start_num] = g[start_num][end_num] = min(g[start_num][end_num], input_dis);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">-1</span>;<span class="comment">//&#x8868;&#x793A;&#x672A;&#x627E;&#x5230;</span></span><br><span class="line">    <span class="keyword">double</span> res_dis = <span class="number">-1</span>, res_aver =MAX_NUM/<span class="number">2</span>;<span class="comment">//&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> start_point = N+<span class="number">1</span>; start_point &lt;= N+M; start_point++)<span class="comment">//&#x5BF9;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x8FDB;&#x884C;Dij&#x6C42;&#x6700;&#x77ED;&#x8DEF;&#x5F84;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; dis = g[start_point];</span><br><span class="line">        fill(visit, visit + <span class="number">1011</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//dis[start_point] = 0;//&#x4ECE;i&#x5F00;&#x59CB;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N+M; i++)<span class="comment">//dij&#x7B97;&#x6CD5;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> u = <span class="number">-1</span>, min_dis = MAX_NUM/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= N+M; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (!visit[j]&amp;&amp;dis[j]&lt;min_dis)</span><br><span class="line">                {</span><br><span class="line">                    u = j;</span><br><span class="line">                    min_dis = dis[j];<span class="comment">//&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x6700;&#x8FD1;&#x7684;</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (u == <span class="number">-1</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            visit[u] = <span class="literal">true</span>;<span class="comment">//&#x5C06;&#x5176;&#x6807;&#x8BB0;&#x4E3A;&#x8BBF;&#x95EE;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= N+M; k++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (!visit[k]&amp;&amp;dis[k]&gt;dis[u]+g[u][k])</span><br><span class="line">                {</span><br><span class="line">                    dis[k] = dis[u] + g[u][k];<span class="comment">//&#x66F4;&#x65B0;dis&#x6570;&#x7EC4;</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">double</span> min_dis=MAX_NUM/<span class="number">2</span>, min_aver=<span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (dis[i]&gt;Ds)<span class="comment">//&#x6709;&#x4E00;&#x4E2A;&#x8D85;&#x51FA;&#x6700;&#x5927;&#x8303;&#x56F4;&#x90FD;&#x4E0D;&#x884C;</span></span><br><span class="line">            {</span><br><span class="line">                min_dis = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (dis[i]&lt;min_dis)</span><br><span class="line">            {</span><br><span class="line">                min_dis = dis[i];</span><br><span class="line">            }</span><br><span class="line">            min_aver += <span class="number">1.0</span>*dis[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (min_dis==<span class="number">-1</span>)<span class="comment">//&#x6CA1;&#x627E;&#x5230;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">continue</span>;  <span class="comment">//&#x4E0B;&#x4E00;&#x4E2A;&#x52A0;&#x6CB9;&#x7AD9;</span></span><br><span class="line">        }</span><br><span class="line">        min_aver /= N;</span><br><span class="line">        <span class="keyword">if</span> (min_dis&gt;res_dis)<span class="comment">//&#x5982;&#x679C;&#x6B64;&#x52A0;&#x6CB9;&#x7AD9;&#x8DDD;&#x79BB;&#x6700;&#x8FD1;&#x7684;&#x623F;&#x5C4B; &#x5927;&#x4E8E;&#x76EE;&#x524D;&#x5DF2;&#x77E5;&#x7684;&#x6700;&#x8FD1;&#x8DDD;&#x79BB;</span></span><br><span class="line">        {</span><br><span class="line">            res = start_point;<span class="comment">//&#x662F;&#x8FD9;&#x4E2A;&#x70B9;</span></span><br><span class="line">            res_dis = min_dis;</span><br><span class="line">            res_aver = min_aver;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (min_dis==res_dis&amp;&amp;min_aver&lt;res_aver)<span class="comment">//&#x8DDD;&#x79BB;&#x76F8;&#x540C;&#x4F46;&#x662F;&#x5E73;&#x5747;&#x8DDD;&#x79BB;&#x66F4;&#x77ED;</span></span><br><span class="line">        {</span><br><span class="line">            res = start_point;</span><br><span class="line">            res_aver = min_aver;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (res==<span class="number">-1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;No Solution&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;G%d\n%.1f %.1f&quot;</span>, res - N, res_dis, res_aver);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"><span class="number">4</span> <span class="number">3</span> <span class="number">11</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> G1 <span class="number">4</span></span><br><span class="line"><span class="number">1</span> G2 <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> G2 <span class="number">1</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> G3 <span class="number">2</span></span><br><span class="line"><span class="number">4</span> G1 <span class="number">3</span></span><br><span class="line">G2 G1 <span class="number">1</span></span><br><span class="line">G3 G2 <span class="number">2</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line">G1</span><br><span class="line"><span class="number">2.0</span> <span class="number">3.3</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> G1 <span class="number">9</span></span><br><span class="line"><span class="number">2</span> G1 <span class="number">20</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line">No Solution</span><br></pre></td></tr></table></figure><h3 id="&#x725B;&#x5BA2;&#x7F51;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x4E2D;&#x7684;bug">&#x725B;&#x5BA2;&#x7F51;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x4E2D;&#x7684;bug</h3><p>&#x5728;&#x725B;&#x5BA2;&#x7F51;&#x4E0A;&#xFF0C;<a href="https://www.nowcoder.com/pat/5/problem/4121" target="_blank" rel="noopener">&#x8FD9;&#x4E2A;&#x9898;</a>&#x7684;&#x6D4B;&#x8BD5;&#x70B9;1&#x7684;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> <span class="number">5</span> <span class="number">255</span> <span class="number">15</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">1</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">1</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">1</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">1</span> G5 <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">2</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">2</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">2</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">2</span> G5 <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">3</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">3</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">3</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">3</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">3</span> G5 <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">4</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">4</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">4</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">4</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">4</span> G5 <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">5</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">5</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">5</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">5</span> G5 <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">6</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">6</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">6</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">6</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">6</span> G5 <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">7</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">7</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">7</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">7</span> G5 <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">8</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">8</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">8</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">8</span> G5 <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">9</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">9</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">9</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">9</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">9</span> G5 <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> G1 <span class="number">10</span></span><br><span class="line"><span class="number">10</span> G2 <span class="number">10</span></span><br><span class="line"><span class="number">10</span> G3 <span class="number">10</span></span><br><span class="line"><span class="number">10</span> G4 <span class="number">10</span></span><br><span class="line"><span class="number">10</span> G5 <span class="number">10</span></span><br><span class="line">G1 <span class="number">1</span> <span class="number">10</span></span><br><span class="line">G1 <span class="number">2</span> <span class="number">10</span></span><br><span class="line">G1 <span class="number">3</span> <span class="number">10</span></span><br><span class="line">G1 <span class="number">4</span> <span class="number">10</span></span><br><span class="line">G1 <span class="number">5</span> <span class="number">10</span></span><br><span class="line">G1 <span class="number">6</span> <span class="number">10</span></span><br><span class="line">G1 <span class="number">7</span> <span class="number">10</span></span><br><span class="line">G1 <span class="number">8</span> <span class="number">10</span></span><br><span class="line">G1 <span class="number">9</span> <span class="number">10</span></span><br><span class="line">G1 <span class="number">10</span> <span class="number">10</span></span><br><span class="line">G1 G1 <span class="number">10</span></span><br><span class="line">G1 G2 <span class="number">10</span></span><br><span class="line">G1 G3 <span class="number">10</span></span><br><span class="line">G1 G4 <span class="number">10</span></span><br><span class="line">G1 G5 <span class="number">10</span></span><br><span class="line">G2 <span class="number">1</span> <span class="number">10</span></span><br><span class="line">G2 <span class="number">2</span> <span class="number">10</span></span><br><span class="line">G2 <span class="number">3</span> <span class="number">10</span></span><br><span class="line">G2 <span class="number">4</span> <span class="number">10</span></span><br><span class="line">G2 <span class="number">5</span> <span class="number">10</span></span><br><span class="line">G2 <span class="number">6</span> <span class="number">10</span></span><br><span class="line">G2 <span class="number">7</span> <span class="number">10</span></span><br><span class="line">G2 <span class="number">8</span> <span class="number">10</span></span><br><span class="line">G2 <span class="number">9</span> <span class="number">10</span></span><br><span class="line">G2 <span class="number">10</span> <span class="number">10</span></span><br><span class="line">G2 G1 <span class="number">10</span></span><br><span class="line">G2 G2 <span class="number">10</span></span><br><span class="line">G2 G3 <span class="number">10</span></span><br><span class="line">G2 G4 <span class="number">10</span></span><br><span class="line">G2 G5 <span class="number">10</span></span><br><span class="line">G3 <span class="number">1</span> <span class="number">10</span></span><br><span class="line">G3 <span class="number">2</span> <span class="number">10</span></span><br><span class="line">G3 <span class="number">3</span> <span class="number">10</span></span><br><span class="line">G3 <span class="number">4</span> <span class="number">10</span></span><br><span class="line">G3 <span class="number">5</span> <span class="number">10</span></span><br><span class="line">G3 <span class="number">6</span> <span class="number">10</span></span><br><span class="line">G3 <span class="number">7</span> <span class="number">10</span></span><br><span class="line">G3 <span class="number">8</span> <span class="number">10</span></span><br><span class="line">G3 <span class="number">9</span> <span class="number">10</span></span><br><span class="line">G3 <span class="number">10</span> <span class="number">10</span></span><br><span class="line">G3 G1 <span class="number">10</span></span><br><span class="line">G3 G2 <span class="number">10</span></span><br><span class="line">G3 G3 <span class="number">10</span></span><br><span class="line">G3 G4 <span class="number">10</span></span><br><span class="line">G3 G5 <span class="number">10</span></span><br><span class="line">G4 <span class="number">1</span> <span class="number">10</span></span><br><span class="line">G4 <span class="number">2</span> <span class="number">10</span></span><br><span class="line">G4 <span class="number">3</span> <span class="number">10</span></span><br><span class="line">G4 <span class="number">4</span> <span class="number">10</span></span><br><span class="line">G4 <span class="number">5</span> <span class="number">10</span></span><br><span class="line">G4 <span class="number">6</span> <span class="number">10</span></span><br><span class="line">G4 <span class="number">7</span> <span class="number">10</span></span><br><span class="line">G4 <span class="number">8</span> <span class="number">10</span></span><br><span class="line">G4 <span class="number">9</span> <span class="number">10</span></span><br><span class="line">G4 <span class="number">10</span> <span class="number">10</span></span><br><span class="line">G4 G1 <span class="number">10</span></span><br><span class="line">G4 G2 <span class="number">10</span></span><br><span class="line">G4 G3 <span class="number">10</span></span><br><span class="line">G4 G4 <span class="number">10</span></span><br><span class="line">G4 G5 <span class="number">10</span></span><br><span class="line">G5 <span class="number">1</span> <span class="number">10</span></span><br><span class="line">G5 <span class="number">2</span> <span class="number">10</span></span><br><span class="line">G5 <span class="number">3</span> <span class="number">10</span></span><br><span class="line">G5 <span class="number">4</span> <span class="number">10</span></span><br><span class="line">G5 <span class="number">5</span> <span class="number">10</span></span><br><span class="line">G5 <span class="number">6</span> <span class="number">10</span></span><br><span class="line">G5 <span class="number">7</span> <span class="number">10</span></span><br><span class="line">G5 <span class="number">8</span> <span class="number">10</span></span><br><span class="line">G5 <span class="number">9</span> <span class="number">10</span></span><br><span class="line">G5 <span class="number">10</span> <span class="number">10</span></span><br><span class="line">G5 G1 <span class="number">10</span></span><br><span class="line">G5 G2 <span class="number">10</span></span><br><span class="line">G5 G3 <span class="number">10</span></span><br><span class="line">G5 G4 <span class="number">10</span></span><br><span class="line">G5 G5 <span class="number">10</span></span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x4E2A;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x4E2D;&#x7684;K&#x9519;&#x8BEF;&#xFF0C;&#x5E94;&#x4E3A;225&#xFF0C;&#x4E0D;&#x5E94;&#x8BE5;&#x662F;255&#x3002;</p><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x5E94;&#x8BE5;&#x662F; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> <span class="number">5</span> <span class="number">225</span> <span class="number">15</span></span><br><span class="line"></span><br><span class="line">&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x5E94;&#x8BE5;&#x662F;</span><br><span class="line">G1 <span class="number">10.0</span> <span class="number">10.0</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
            <tag> Dijkstra </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1076 Forwards on Weibo (30)</title>
      <link href="//posts/9486a851/"/>
      <url>//posts/9486a851/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1076" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5FAE;&#x535A;&#x7684;&#x5173;&#x6CE8;&#x8005;&#x3002; <a id="more"></a></p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x793E;&#x4EA4;&#x7F51;&#x7EDC;&#xFF0C;&#x5728;&#x53EA;&#x8BA1;&#x7B97;L&#x5C42;&#x7684;&#x95F4;&#x63A5;&#x5173;&#x6CE8;&#x8005;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6C42;&#x4EFB;&#x4E00;&#x7279;&#x5B9A;&#x7528;&#x6237;&#x7684;&#x6700;&#x5927;&#x6F5C;&#x5728;&#x8F6C;&#x53D1;&#x91CF;&#x3002; ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x8868;&#x793A;&#x7528;&#x6237;&#x6570;&#xFF0C;L&#xFF0C;&#x7ED9;&#x5B9A;&#x7684;&#x95F4;&#x63A5;&#x5173;&#x6CE8;&#x8005;&#x7684;&#x5C42;&#x6570;&#x3002; &#x7136;&#x540E;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x683C;&#x5F0F;&#x662F;</p><p>M[i] user_list[i]</p><p>&#x5176;&#x4E2D;M[i]&#x8868;&#x793A;&#x7528;&#x6237;i&#x7684;&#x5173;&#x6CE8;&#x6570;&#x3002;user_list[i]&#x662F;&#x5177;&#x4F53;&#x5173;&#x6CE8;&#x5217;&#x8868;&#xFF0C; &#x5171;M[i]&#x4E2A;&#x3002;</p><p>&#x6700;&#x540E;&#x7ED9;&#x51FA;K&#xFF0C;&#x548C;K&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x8868;&#x793A;&#x7528;&#x6237;ID&#xFF0C;&#x8981;&#x6C42;&#x5BF9;&#x6BCF;&#x4E2A;&#x7528;&#x6237;ID&#x8FDB;&#x884C;&#x67E5;&#x8BE2;&#xFF0C;&#x67E5;&#x8BE2;&#x5176;L&#x5C42;&#x7C89;&#x4E1D;&#x6570;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;ID&#xFF0C;&#x8F93;&#x51FA;&#x5176;L&#x5C42;&#x5171;&#x591A;&#x5C11;&#x4E2A;&#x7C89;&#x4E1D;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; BFS&#x3002; &#x8FD9;&#x9053;&#x9898;&#x62BD;&#x8C61;&#x7684;&#x6982;&#x8FF0;&#x5C31;&#x662F;&#xFF0C;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x641C;&#x7D22;K&#x8F6E;&#xFF0C;&#x4E00;&#x5171;&#x8BBF;&#x95EE;&#x4E86;&#x591A;&#x5C11;&#x4E2A;&#x8282;&#x70B9;&#x3002; ## Tips &#x6CE8;&#x610F;&#xFF1A;&#x5176;&#x4E2D;M[i]&#x8868;&#x793A;&#x7528;&#x6237;i&#x7684;&#x5173;&#x6CE8;&#x6570;&#x3002;user_list[i]&#x662F;&#x5177;&#x4F53;&#x5173;&#x6CE8;&#x5217;&#x8868;&#xFF0C; &#x5171;M[i]&#x4E2A;&#x3002;&#x56E0;&#x6B64;i&#x662F;&#x5176;&#x5173;&#x6CE8;&#x8005;&#x7684;&#x7C89;&#x4E1D;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x6784;&#x5EFA;&#x56FE;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8981;&#x53CD;&#x7740;&#x5199;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; g;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> level;</span><br><span class="line">}fans;</span><br><span class="line"><span class="keyword">int</span> N, L;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BFS</span><span class="params">(fans follow)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">bool</span> visit[<span class="number">1001</span>] = {<span class="number">0</span>};</span><br><span class="line">    <span class="built_in">queue</span>&lt;fans&gt; q;</span><br><span class="line">    q.push(follow);</span><br><span class="line">    visit[follow.id] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;<span class="comment">//&#x8BA1;&#x6570;</span></span><br><span class="line">    <span class="keyword">while</span> (!q.empty())</span><br><span class="line">    {</span><br><span class="line">        follow = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; g[follow.id].size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> next_id = g[follow.id][i];</span><br><span class="line">            <span class="keyword">if</span> (!visit[next_id]&amp;&amp;follow.level&lt;L)</span><br><span class="line">            {</span><br><span class="line">                q.push({ next_id,follow.level + <span class="number">1</span> });<span class="comment">//&#x628A;next_id&#x538B;&#x5165;&#x961F;&#x5217;&#x4E2D;</span></span><br><span class="line">                visit[next_id] = <span class="literal">true</span>;</span><br><span class="line">                cnt++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> M, input_id;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; L;</span><br><span class="line">    g.resize(N+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; M;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; input_id;</span><br><span class="line">            g[input_id].push_back(i);<span class="comment">//&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x8981;&#x53CD;&#x7740;&#x5199;&#xFF0C;&#x56E0;&#x4E3A;M[i]&#x662F;&#x5173;&#x6CE8;&#x5217;&#x8868;&#xFF0C;&#x5373;&#x7528;&#x6237;i&#x662F;&#x8C01;&#x7684;&#x7C89;&#x4E1D;&#x3002;</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> K;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; K;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; input_id;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;BFS({ input_id,<span class="number">0</span> })&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">7</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span> <span class="number">6</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> BFS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1075 PAT Judge (25)</title>
      <link href="//posts/73f16db0/"/>
      <url>//posts/73f16db0/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1075" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x8F93;&#x51FA;PAT&#x7684;&#x6392;&#x540D;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E09;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;N&#x8868;&#x793A;&#x7528;&#x6237;&#x7684;&#x6570;&#x91CF;&#xFF0C;K&#xFF0C;&#x95EE;&#x9898;&#x7684;&#x603B;&#x6570;&#xFF0C;M&#x63D0;&#x4EA4;&#x7684;&#x603B;&#x6570;&#x3002; &#x5047;&#x8BBE;&#x7528;&#x6237;&#x7684;ID&#x662F;5&#x4F4D;&#x6570;&#x5B57;&#xFF0C;&#x4ECE;00001<sub>N&#xFF0C;&#x95EE;&#x9898;&#x7684;ID&#x4ECE;1</sub>K&#x3002; &#x4E0B;&#x4E00;&#x884C;&#x5305;&#x62EC;K&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x7B2C;i&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x6EE1;&#x5206;&#x3002;&#x7136;&#x540E;M&#x884C;&#x6309;&#x7167;&#x4EE5;&#x4E0B;&#x683C;&#x5F0F;&#x7ED9;&#x51FA;&#x63D0;&#x4EA4;&#x4FE1;&#x606F;</p><p>user_id&#x3000;problem_id&#x3000;partial_score_obtained</p><p>&#x5176;&#x4E2D;partial_score_obtained&#xFF0C;&#x5982;&#x679C;&#x63D0;&#x4EA4;&#x4E0D;&#x80FD;&#x901A;&#x8FC7;&#x7F16;&#x8BD1;&#xFF0C;&#x5219;&#x4E3A;-1&#xFF0C;&#x6216;&#x8005;&#x662F;[0~&#x8BE5;&#x9898;&#x6EE1;&#x5206;]&#x8303;&#x56F4;&#x5185;&#x7684;&#x6574;&#x6570;&#xFF0C;&#x4E00;&#x884C;&#x4E2D;&#x6240;&#x6709;&#x6570;&#x5B57;&#x7528;&#x7A7A;&#x683C;&#x5206;&#x5F00; ## &#x8F93;&#x51FA; &#x6309;&#x7167;</p><p>rank&#x3000;user_id total_score&#x3000;s [1] ... s [K]</p><p>&#x7684;&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#x3002;rank&#x662F;&#x7531;total_score&#x6765;&#x7B97;&#x7684;&#xFF0C;&#x76F8;&#x540C;&#x603B;&#x5206;&#x7684;&#x7528;&#x6237;&#x6392;&#x540D;&#x76F8;&#x540C;&#xFF0C;s[i]&#x662F;&#x7B2C;i&#x4E2A;&#x95EE;&#x9898;&#x83B7;&#x5F97;&#x7684;&#x5206;&#x6570;&#x3002;&#x5982;&#x679C;&#x7528;&#x6237;&#x4ECE;&#x672A;&#x63D0;&#x4EA4;&#xFF0C;&#x5219;&#x5FC5;&#x987B;&#x5728;&#x8BE5;&#x4F4D;&#x7F6E;&#x6253;&#x5370;-&#xFF0C;&#x5982;&#x679C;&#x63D0;&#x4EA4;&#x4E86;&#x591A;&#x4E2A;&#xFF0C;&#x8F93;&#x51FA;&#x6700;&#x9AD8;&#x7684;&#x5206;&#x6570;&#x3002; &#x6392;&#x540D;&#x6309;&#x7167;&#x7B2C;&#x4E00;&#x540D;&#x5728;&#x524D;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x6392;&#x540D;&#x76F8;&#x540C;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x6309;&#x7167;&#x5B8C;&#x5168;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x7684;&#x6570;&#x91CF;&#x4EE5;&#x975E;&#x9012;&#x589E;&#x6392;&#x5E8F;&#xFF08;&#x591A;&#x7684;&#x5728;&#x524D;&#x9762;&#xFF09;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x76F8;&#x540C;&#xFF0C;&#x6309;&#x7167;ID&#x9012;&#x589E;&#x7684;&#x987A;&#x5E8F;&#x6392;&#x5E8F;&#x3002;&#x5BF9;&#x4E8E;&#x90A3;&#x4E9B;&#x6CA1;&#x6709;&#x63D0;&#x4EA4;&#x53EF;&#x4EE5;&#x7F16;&#x8BD1;&#x901A;&#x8FC7;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x6216;&#x8005;&#x4ECE;&#x672A;&#x63D0;&#x4EA4;&#x8FC7;&#x7684;&#xFF0C;&#x5219;&#x4E0D;&#x5728;&#x6392;&#x884C;&#x699C;&#x4E0A;&#x663E;&#x793A;&#x3002; &#x4FDD;&#x8BC1;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x5148;&#x662F;&#x5728;&#x6392;&#x884C;&#x699C;&#x4E0A;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; ## Tips 1. &#x4E0D;&#x7528;&#x5224;&#x65AD;&#x5206;&#x6570;&#x662F;&#x5426;&#x4F1A;&#x8D85;&#x8FC7;FullMark 2. &#x5982;&#x679C;&#x5B66;&#x751F;A&#x88AB;&#x8F93;&#x51FA;&#xFF0C;&#x4ED6;&#x66FE;&#x63D0;&#x4EA4;&#x8FC7;&#x67D0;&#x9898;x&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x901A;&#x8FC7;&#x5373;&#x8F93;&#x5165;&#x201C;A x -1&#x201D;&#xFF0C;x&#x6210;&#x7EE9;&#x8F93;&#x51FA;&#x4E3A;0 3. &#x5B66;&#x751F;A&#x88AB;&#x8F93;&#x51FA;&#xFF0C;&#x5F53;&#x4E14;&#x4EC5;&#x5F53;A&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x9053;&#x9898;&#x63D0;&#x4EA4;&#x5E76;&#x4E14;&#x901A;&#x8FC7;&#x4E86;&#x7F16;&#x8BD1;&#x3002;&#x53EF;&#x4EE5;&#x5F97;0&#x5206;&#xFF0C;&#x4F46;&#x662F;&#x5F97;&#x901A;&#x8FC7;&#x7F16;&#x8BD1;&#x3002; 4. &#x6309;&#x7167;&#x603B;&#x5206;&#x9012;&#x51CF;&#x3001;&#x7B54;&#x5BF9;&#x9012;&#x51CF;&#x3001;ID&#x9012;&#x589E;&#x7684;&#x987A;&#x5E8F;&#x6392;&#x5217;&#xFF0C;&#x4EC5;&#x5217;&#x51FA;&#x6709;&#x6210;&#x7EE9;&#x7684;&#x5B66;&#x751F;&#xFF08;0 - - -&#x4E5F;&#x7B97;&#xFF0C;&#x4F46;&#x662F;- - - -&#x4E0D;&#x7B97;&#xFF09;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> ID;<span class="comment">//&#x6CE8;&#x610F;ID&#x521D;&#x503C;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x8F93;&#x51FA;&#x7684;&#x65F6;&#x5019;&#x5199;if(user[i].show)&#x5219;&#x4E0D;&#x7528;&#x5728;&#x8FD9;&#x91CC;&#x6DFB;&#x52A0;&#x521D;&#x503C;&#xFF0C;&#x5426;&#x5219;ID&#x9ED8;&#x8BA4;&#x521D;&#x503C;&#x4E3A;0&#xFF0C;&#x4F1A;&#x6392;&#x5728;&#x6240;&#x6709;0&#x5206;&#x5B66;&#x751F;&#x7684;&#x524D;&#x9762;&#x3002;</span></span><br><span class="line">    <span class="keyword">int</span> score[<span class="number">6</span>] = { <span class="number">-2</span>,<span class="number">-2</span>,<span class="number">-2</span>,<span class="number">-2</span>,<span class="number">-2</span>,<span class="number">-2</span> };</span><br><span class="line">    <span class="keyword">int</span> solved = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> total_score = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> rank;</span><br><span class="line">    <span class="keyword">bool</span> show = <span class="literal">false</span>;</span><br><span class="line">}u;</span><br><span class="line"><span class="built_in">vector</span>&lt;u&gt; user;</span><br><span class="line"><span class="keyword">int</span> N, K, M;</span><br><span class="line"><span class="keyword">int</span> full_mark[<span class="number">6</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(u a, u b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.total_score != b.total_score)</span><br><span class="line">        <span class="keyword">return</span> a.total_score &gt; b.total_score;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (a.solved != b.solved)</span><br><span class="line">        <span class="keyword">return</span> a.solved &gt; b.solved;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.ID &lt; b.ID;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; K &gt;&gt; M;</span><br><span class="line">    user.resize(N + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= K; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; full_mark[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> user_ID, problem_ID, get_score;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; user_ID &gt;&gt; problem_ID &gt;&gt; get_score;</span><br><span class="line">        user[user_ID].ID = user_ID;</span><br><span class="line">        <span class="keyword">if</span> (user[user_ID].score[problem_ID]&lt;get_score)</span><br><span class="line">        {</span><br><span class="line">            user[user_ID].score[problem_ID] = get_score;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= K; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (user[i].score[j] &gt;= <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                user[i].total_score += user[i].score[j];</span><br><span class="line">                user[i].show = <span class="literal">true</span>;<span class="comment">//&#x6709;&#x4E00;&#x4E2A;&#x9898;&#x5F97;0&#x5206;&#x53CA;&#x4EE5;&#x4E0A;&#x5C31;&#x53EF;&#x4EE5;&#x8F93;&#x51FA;</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (user[i].score[j] == full_mark[j])</span><br><span class="line">            {</span><br><span class="line">                user[i].solved++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    sort(user.begin() + <span class="number">1</span>, user.end(), cmp);</span><br><span class="line">    user[<span class="number">1</span>].rank = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        user[i].rank = i;</span><br><span class="line">        <span class="keyword">if</span> (user[i].total_score == user[i - <span class="number">1</span>].total_score)</span><br><span class="line">        {</span><br><span class="line">            user[i].rank = user[i - <span class="number">1</span>].rank;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (user[i].show)<span class="comment">//&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x5FC5;&#x987B;&#x8FD9;&#x4E48;&#x5199;&#xFF0C;&#x5982;&#x679C;&#x5199;for (int i = 1; i &lt;=N&amp;&amp;user[i].show ; i++)&#x5219;&#x5728;&#x540C;&#x6837;&#x90FD;&#x662F;0&#x5206;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C0F;&#x53F7;&#x5728;&#x524D;&#xFF0C;&#x5927;&#x53F7;&#x5728;&#x540E;&#xFF0C;&#x4F46;&#x662F;&#x5C0F;&#x53F7;&#x4E0D;&#x8BE5;&#x88AB;&#x8F93;&#x51FA;&#xFF0C;&#x5219;&#x4F1A;&#x6709;&#x95EE;&#x9898;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %05d %d&quot;</span>, user[i].rank, user[i].ID, user[i].total_score);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= K; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (user[i].score[j] &gt;= <span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; user[i].score[j];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (user[i].score[j] == <span class="number">-1</span>)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; 0&quot;</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; -&quot;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="number">20</span> <span class="number">25</span> <span class="number">25</span> <span class="number">30</span></span><br><span class="line"><span class="number">00002</span> <span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="number">00002</span> <span class="number">2</span> <span class="number">-1</span></span><br><span class="line"><span class="number">00001</span> <span class="number">1</span> <span class="number">-1</span></span><br><span class="line"><span class="number">00001</span> <span class="number">2</span> <span class="number">-1</span></span><br><span class="line">&#x8F93;&#x51FA;&#x5E94;&#x8BE5;&#x4E3A;</span><br><span class="line"><span class="number">1</span> <span class="number">00002</span> <span class="number">0</span> - <span class="number">0</span> - -</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">7</span> <span class="number">4</span> <span class="number">20</span></span><br><span class="line"><span class="number">20</span> <span class="number">25</span> <span class="number">25</span> <span class="number">30</span></span><br><span class="line"><span class="number">00002</span> <span class="number">2</span> <span class="number">12</span></span><br><span class="line"><span class="number">00007</span> <span class="number">4</span> <span class="number">17</span></span><br><span class="line"><span class="number">00005</span> <span class="number">1</span> <span class="number">19</span></span><br><span class="line"><span class="number">00007</span> <span class="number">2</span> <span class="number">25</span></span><br><span class="line"><span class="number">00005</span> <span class="number">1</span> <span class="number">20</span></span><br><span class="line"><span class="number">00002</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">00005</span> <span class="number">1</span> <span class="number">15</span></span><br><span class="line"><span class="number">00001</span> <span class="number">1</span> <span class="number">18</span></span><br><span class="line"><span class="number">00004</span> <span class="number">3</span> <span class="number">25</span></span><br><span class="line"><span class="number">00002</span> <span class="number">2</span> <span class="number">25</span></span><br><span class="line"><span class="number">00005</span> <span class="number">3</span> <span class="number">22</span></span><br><span class="line"><span class="number">00006</span> <span class="number">4</span> <span class="number">-1</span></span><br><span class="line"><span class="number">00001</span> <span class="number">2</span> <span class="number">18</span></span><br><span class="line"><span class="number">00002</span> <span class="number">1</span> <span class="number">20</span></span><br><span class="line"><span class="number">00004</span> <span class="number">1</span> <span class="number">15</span></span><br><span class="line"><span class="number">00002</span> <span class="number">4</span> <span class="number">18</span></span><br><span class="line"><span class="number">00001</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">00001</span> <span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="number">00005</span> <span class="number">2</span> <span class="number">-1</span></span><br><span class="line"><span class="number">00004</span> <span class="number">2</span> <span class="number">0</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">1</span> <span class="number">00002</span> <span class="number">63</span> <span class="number">20</span> <span class="number">25</span> - <span class="number">18</span></span><br><span class="line"><span class="number">2</span> <span class="number">00005</span> <span class="number">42</span> <span class="number">20</span> <span class="number">0</span> <span class="number">22</span> -</span><br><span class="line"><span class="number">2</span> <span class="number">00007</span> <span class="number">42</span> - <span class="number">25</span> - <span class="number">17</span></span><br><span class="line"><span class="number">2</span> <span class="number">00001</span> <span class="number">42</span> <span class="number">18</span> <span class="number">18</span> <span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="number">00004</span> <span class="number">40</span> <span class="number">15</span> <span class="number">0</span> <span class="number">25</span> -</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1074 Reversing Linked List (25)</title>
      <link href="//posts/892b22de/"/>
      <url>//posts/892b22de/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1074" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x94FE;&#x8868;&#x7684;&#x9006;&#x7F6E;&#x3002;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5E38;&#x6570;K&#x548C;&#x4E00;&#x4E2A;&#x5355;&#x94FE;&#x8868;L&#x3002;&#x5BF9;&#x4E8E;&#x94FE;&#x8868;&#x4E0A;&#x6BCF;K&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5C06;&#x5176;&#x9006;&#x7F6E;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x4F8B;&#x5982;&#xFF0C;&#x5047;&#x8BBE;L&#x662F;1&#x2192;2&#x2192;3&#x2192;4&#x2192;5&#x2192;6&#xFF0C;&#x5982;&#x679C;K = 3&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x5FC5;&#x987B;&#x8F93;&#x51FA;3&#x2192;2&#x2192;1&#x2192;6&#x2192;5&#x2192;4; &#x5982;&#x679C;K = 4&#xFF0C;&#x5219;&#x5FC5;&#x987B;&#x8F93;&#x51FA;4&#x2192;3&#x2192;2&#x2192;1&#x2192;5&#x2192;6&#x3002;</p><p>&#x8F93;&#x5165;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x62EC; &#x9996;&#x8282;&#x70B9;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x8868;&#x793A;&#x8282;&#x70B9;&#x7684;&#x603B;&#x6570;&#xFF0C;K&#xFF0C;&#x8981;&#x6C42;&#x9006;&#x8F6C;&#x7684;&#x4E2A;&#x6570;&#x3002;NULL&#x8868;&#x793A;&#x4E3A;-1&#x3002;</p><p>&#x63A5;&#x7740;&#x662F;K&#x884C;&#xFF0C;&#x683C;&#x5F0F;&#x4E3A;</p><p>&#x5730;&#x5740; &#x6570;&#x636E; &#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x5730;&#x5740; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x751F;&#x6210;&#x7684;&#x6709;&#x5E8F;&#x94FE;&#x8868;&#xFF0C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x683C;&#x5F0F;&#x540C;&#x4E0A;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x94FE;&#x8868;&#x7684;&#x7EBF;&#x6027;&#x5B58;&#x50A8;&#xFF0C;&#x4F7F;&#x7528;vector&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x548C;&#x9006;&#x7F6E;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x7C7B;&#x9898;&#x5E38;&#x6709;&#x7684;&#x5927;&#x5751;&#x662F;&#xFF0C;&#x94FE;&#x8868;&#x7684;&#x957F;&#x5EA6;&#x4E0D;&#x4E00;&#x5B9A;&#x662F;N&#xFF0C;&#x867D;&#x7136;&#x6709;N&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E9B;&#x8282;&#x70B9;&#x5E76;&#x4E0D;&#x90FD;&#x5728;&#x94FE;&#x8868;&#x4E0A;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> first, k, n;</span><br><span class="line"><span class="keyword">int</span> LinkData[<span class="number">100001</span>];</span><br><span class="line"><span class="keyword">int</span> LinkNext[<span class="number">100001</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; L;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; first &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span> addr, node_data, next_addr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; addr &gt;&gt; node_data &gt;&gt; next_addr;</span><br><span class="line">        LinkData[addr] = node_data;</span><br><span class="line">        LinkNext[addr] = next_addr;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = first; i != <span class="number">-1</span>; i = LinkNext[i])</span><br><span class="line">    {</span><br><span class="line">        L.push_back(i);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> length = L.size();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i*k+k &lt;= length; i++)</span><br><span class="line">    {</span><br><span class="line">        reverse(L.begin() + i*k, L.begin() + i*k + k);</span><br><span class="line">    }</span><br><span class="line">    length = L.size() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%05d %d %05d\n&quot;</span>, L[i], LinkData[L[i]], L[i + <span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%05d %d -1&quot;</span>, L[length], LinkData[L[length]]);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">00100</span> <span class="number">6</span> <span class="number">4</span></span><br><span class="line"><span class="number">00000</span> <span class="number">4</span> <span class="number">99999</span></span><br><span class="line"><span class="number">00100</span> <span class="number">1</span> <span class="number">12309</span></span><br><span class="line"><span class="number">68237</span> <span class="number">6</span> <span class="number">-1</span></span><br><span class="line"><span class="number">33218</span> <span class="number">3</span> <span class="number">00000</span></span><br><span class="line"><span class="number">99999</span> <span class="number">5</span> <span class="number">68237</span></span><br><span class="line"><span class="number">12309</span> <span class="number">2</span> <span class="number">33218</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">00000</span> <span class="number">4</span> <span class="number">33218</span></span><br><span class="line"><span class="number">33218</span> <span class="number">3</span> <span class="number">12309</span></span><br><span class="line"><span class="number">12309</span> <span class="number">2</span> <span class="number">00100</span></span><br><span class="line"><span class="number">00100</span> <span class="number">1</span> <span class="number">99999</span></span><br><span class="line"><span class="number">99999</span> <span class="number">5</span> <span class="number">68237</span></span><br><span class="line"><span class="number">68237</span> <span class="number">6</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1073 Scientific Notation (20)</title>
      <link href="//posts/fc7b145c/"/>
      <url>//posts/fc7b145c/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1073" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6570;&#x7684;&#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;&#xFF0C;&#x6C42;&#x8FD9;&#x4E2A;&#x6570;&#x7684;&#x4F20;&#x7EDF;&#x8BA1;&#x6570;&#x6CD5;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;&#x8868;&#x793A;&#x7684;&#x5B9E;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;9999&#x5B57;&#x8282;&#xFF0C;&#x6307;&#x6570;&#x7684;&#x7EDD;&#x5BF9;&#x503C;&#x4E0D;&#x8D85;&#x8FC7;9999&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x8FD9;&#x4E2A;&#x6570;&#x7684;&#x4F20;&#x7EDF;&#x8BA1;&#x6570;&#x6CD5;&#xFF0C;&#x4FDD;&#x7559;&#x6240;&#x6709;&#x7684;&#x6709;&#x6548;&#x6570;&#x5B57;&#xFF0C;&#x5305;&#x62EC;&#x5C3E;&#x968F;&#x96F6;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x5B57;&#x7B26;&#x4E32;&#x5904;&#x7406; ## Tips 1. &#x5C06;&#x8F93;&#x5165;&#x7684;&#x6570;&#x5206;&#x6210;&#x4E09;&#x90E8;&#x5206;&#xFF0C;&#x7B26;&#x53F7;&#xFF0C;&#x5E95;&#x6570;&#xFF0C;&#x6307;&#x6570;&#x3002; 2. &#x4F7F;&#x7528;str.insert()&#x548C;string.erase()&#xFF0C;&#x4F1A;&#x66F4;&#x65B9;&#x4FBF;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">    <span class="keyword">int</span> pos_e, pos_exp;</span><br><span class="line">    <span class="keyword">bool</span> isPositive = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (str[<span class="number">0</span>] == <span class="string">&apos;-&apos;</span>)</span><br><span class="line">        isPositive = <span class="literal">false</span>;</span><br><span class="line">    pos_e = str.find(<span class="string">&apos;E&apos;</span>);</span><br><span class="line">    <span class="built_in">string</span> str_num = str.substr(<span class="number">1</span>, pos_e - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">string</span> str_exp = str.substr(pos_e + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">exp</span> = stoi(str_exp);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">exp</span> &gt; <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        str_num.erase(<span class="number">1</span>, <span class="number">1</span>);<span class="comment">//&#x53BB;&#x6389;&#x5C0F;&#x6570;&#x70B9;</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">exp</span> &lt; str_num.size() - <span class="number">1</span>)</span><br><span class="line">            str_num.insert(<span class="built_in">exp</span> + <span class="number">1</span>, <span class="string">&quot;.&quot;</span>);<span class="comment">//&#x91CD;&#x65B0;&#x786E;&#x5B9A;&#x5C0F;&#x6570;&#x70B9;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> pos = <span class="built_in">exp</span> - (str_num.size() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pos; i++)</span><br><span class="line">            {</span><br><span class="line">                str_num += <span class="string">&apos;0&apos;</span>;<span class="comment">//&#x5728;&#x540E;&#x9762;&#x6DFB;&#x52A0;0</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">exp</span>&lt;<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        str_num.erase(<span class="number">1</span>, <span class="number">1</span>);<span class="comment">//&#x53BB;&#x6389;&#x5C0F;&#x6570;&#x70B9;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (-<span class="built_in">exp</span>); i++)</span><br><span class="line">        {</span><br><span class="line">            str_num.insert(<span class="number">0</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">        str_num.insert(<span class="number">1</span>, <span class="string">&quot;.&quot;</span>);<span class="comment">//&#x586B;&#x5B8C;0&#x4E4B;&#x540E;&#x518D;&#x52A0;&#x4E0A;&#x5C0F;&#x6570;&#x70B9;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (!isPositive)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;-&apos;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str_num;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line">+<span class="number">1.23400E-03</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"><span class="number">0.00123400</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"><span class="number">-1.2E+10</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"><span class="number">-12000000000</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> C++ STL </tag>
            
            <tag> 字符串处理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1071 Speech Patterns (25)</title>
      <link href="//posts/e490869c/"/>
      <url>//posts/e490869c/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1071" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x7EDF;&#x8BA1;&#x4E00;&#x884C;&#x5185;&#x51FA;&#x73B0;&#x6700;&#x591A;&#x6B21;&#x6570;&#x7684;&#x5355;&#x8BCD;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x6709;&#x4E00;&#x884C;&#x4E0D;&#x8D85;&#x8FC7;1048576&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x4EE5;&#x56DE;&#x8F66;&apos;&apos;&#x7ED3;&#x5C3E;&#xFF0C;&#x8F93;&#x5165;&#x81F3;&#x5C11;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5B57;&#x6BCD;&#x5B57;&#x7B26;&#xFF0C;&#x5373;[0-9 A-Z a-z]&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x3002; ## &#x8F93;&#x51FA; &#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x7ED9;&#x5B9A;&#x6587;&#x672C;&#x4E2D;&#x6700;&#x5E38;&#x51FA;&#x73B0;&#x7684;&#x5355;&#x8BCD;&#xFF0C;&#x540E;&#x8DDF;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x548C;&#x8F93;&#x5165;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x5355;&#x8BCD;&#xFF0C;&#x8F93;&#x51FA;&#x5B57;&#x5178;&#x4E0A;&#x6700;&#x5C0F;&#x7684;&#x5355;&#x8BCD;&#xFF0C;&#x5168;&#x90E8;&#x5C0F;&#x5199;&#x3002;</p><p>&#x5355;&#x8BCD;&#x7684;&#x5B9A;&#x4E49;&#x662F;&#xFF1A;&#x4E00;&#x4E32;&#x5B57;&#x6BCD;&#x6570;&#x5B57;&#x7684;&#x8FDE;&#x7EED;&#x5E8F;&#x5217;&#xFF0C;&#x8FD9;&#x4E2A;&#x5E8F;&#x5217;&#x7531;&#x975E;&#x5B57;&#x6BCD;&#x6570;&#x5B57;&#x6216;&#x8005;&#x884C;&#x5F00;&#x59CB;&#x6216;&#x8005;&#x884C;&#x7ED3;&#x675F;&#x5206;&#x9694;&#x5F00;&#x7684;&#x3002;</p><p>&#x6BD4;&#x5982;</p><p>Can1: &quot;Can a can can a can? It can!&quot;</p><p>&#x5728;&#x8FD9;&#x53E5;&#x8BDD;&#x4E2D;&#xFF0C;&#x5FFD;&#x7565;&#x5927;&#x5C0F;&#x5199;&#x7684;&#x8BDD;&#xFF0C;can&#x4E00;&#x5171;&#x51FA;&#x73B0;&#x4E86;5&#x6B21;&#xFF0C;&#x4F46;&#x662F;can1&#x5C31;&#x4E0D;&#x80FD;&#x7B97;&#x8FDB;&#x53BB;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x5176;&#x5B9E;&#x5C31;&#x662F;&#x7EDF;&#x8BA1;&#x5355;&#x8BCD;&#x4E2A;&#x6570;&#xFF0C;&#x8F93;&#x51FA;&#x51FA;&#x73B0;&#x6700;&#x591A;&#x6B21;&#x6570;&#x7684;&#x5355;&#x8BCD;&#x3002; ## Tips &#x4F7F;&#x7528;Map&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; res;</span><br><span class="line"><span class="built_in">string</span> str, word;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    getline(<span class="built_in">cin</span>, str);<span class="comment">//&#x6709;&#x7A7A;&#x683C;&#x5C31;&#x7528;getline</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">while</span> ((str[i] &gt;= <span class="string">&apos;A&apos;</span>&amp;&amp;str[i] &lt;= <span class="string">&apos;Z&apos;</span>) || (str[i] &gt;= <span class="string">&apos;a&apos;</span>&amp;&amp;str[i] &lt;= <span class="string">&apos;z&apos;</span>) || str[i] &gt;= <span class="string">&apos;0&apos;</span>&amp;&amp;str[i] &lt;= <span class="string">&apos;9&apos;</span>)<span class="comment">//&#x5982;&#x679C;&#x662F;&#x6709;&#x6548;&#x7684;&#x5B57;&#x7B26;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i] &gt;= <span class="string">&apos;A&apos;</span>&amp;&amp;str[i] &lt;= <span class="string">&apos;Z&apos;</span>)</span><br><span class="line">                str[i] = <span class="string">&apos;a&apos;</span> + str[i] - <span class="string">&apos;A&apos;</span>;</span><br><span class="line">            word += str[i];</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (word.size())</span><br><span class="line">        {</span><br><span class="line">            res[word]++;</span><br><span class="line">            word.clear();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> MaxNum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> i = res.begin();</span><br><span class="line">    <span class="keyword">auto</span> temp = i;</span><br><span class="line">    <span class="keyword">for</span> (; i != res.end(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (i-&gt;second &gt; MaxNum)</span><br><span class="line">        {</span><br><span class="line">            MaxNum = i-&gt;second;</span><br><span class="line">            temp = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; temp-&gt;first &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; temp-&gt;second;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line">Can1: <span class="string">&quot;Can a can can a can?  It can!&quot;</span></span><br><span class="line">Sample Output:</span><br><span class="line">can <span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> C++ STL </tag>
            
            <tag> Map映射 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1070 Mooncake (25)</title>
      <link href="//posts/cb0684aa/"/>
      <url>//posts/cb0684aa/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1048" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x7ED9;&#x51FA;&#x5404;&#x79CD;&#x6708;&#x997C;&#x7684;&#x5E93;&#x5B58;&#x548C;&#x4EF7;&#x683C;&#xFF0C;&#x4EE5;&#x53CA;&#x5E02;&#x573A;&#x7684;&#x6700;&#x5927;&#x9700;&#x6C42;&#xFF0C;&#x6C42;&#x6700;&#x5927;&#x5229;&#x6DA6;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x6709;&#x591A;&#x5C11;&#x79CD;&#x6708;&#x997C;&#x548C;&#x6700;&#x5927;&#x603B;&#x9700;&#x6C42;&#x91CF;&#x3002;&#x7B2C;&#x4E8C;&#x884C;&#x662F;&#x6BCF;&#x79CD;&#x6708;&#x997C;&#x7684;&#x5E93;&#x5B58;&#x91CF;&#xFF08;&#x4E0D;&#x4E00;&#x5B9A;&#x662F;&#x6574;&#x6570;&#xFF09;&#xFF0C;&#x7B2C;&#x4E09;&#x884C;&#x662F;&#x6BCF;&#x79CD;&#x6708;&#x997C;&#x7684;&#x603B;&#x4EF7;&#x683C;&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x6700;&#x5927;&#x5229;&#x6DA6;&#xFF0C;&#x7CBE;&#x786E;&#x5230;&#x4E24;&#x4F4D;&#x5C0F;&#x6570;&#x3002; &#x6BD4;&#x5982;&#x8F93;&#x5165; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 200</span><br><span class="line">180 150 100</span><br><span class="line">7.5 7.2 4.5</span><br></pre></td></tr></table></figure></p><p>&#x8868;&#x793A;&#x6709;3&#x79CD;&#x6708;&#x997C;&#xFF0C;&#x5206;&#x522B;&#x6709;180 150 100 &#x603B;&#x4EF7;&#x4E3A;7.5 7.2 4.5</p><p>&#x56E0;&#x6B64;&#x663E;&#x7136;&#x7B2C;&#x4E8C;&#x79CD;&#x548C;&#x7B2C;&#x4E09;&#x79CD;&#x5355;&#x4EF7;&#x66F4;&#x9AD8;&#x3002;&#x5728;&#x9700;&#x8981;200&#x7684;&#x60C5;&#x51B5;&#x4E0B;:&#x5356;&#x51FA;&#x53BB;150&#x7684;&#x7B2C;&#x4E8C;&#x79CD;&#xFF0C;&#x5356;&#x51FA;&#x53BB;50&#x7684;&#x7B2C;&#x4E09;&#x79CD;&#x3002; &#x56E0;&#x6B64;&#x603B;&#x5229;&#x6DA6;&#x4E3A;7.2 + 4.5 / 2 = 9.45 # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#xFF0C;&#x4E70;&#x5355;&#x4EF7;&#x6700;&#x8D35;&#x7684;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, need;</span><br><span class="line"><span class="keyword">float</span> res = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">float</span> weight;<span class="comment">//&#x6BCF;&#x79CD;&#x7684;&#x91CD;&#x91CF;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x6574;&#x6570;</span></span><br><span class="line">    <span class="keyword">float</span> TotalPrice;</span><br><span class="line">    <span class="keyword">float</span> UnitPrice;</span><br><span class="line">}Mooncake;</span><br><span class="line"><span class="built_in">vector</span>&lt;Mooncake&gt; mooncake;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Mooncake a, Mooncake b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.UnitPrice &gt; b.UnitPrice;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; need;</span><br><span class="line">    mooncake.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; mooncake[i].weight;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; mooncake[i].TotalPrice;</span><br><span class="line">        mooncake[i].UnitPrice = mooncake[i].TotalPrice / mooncake[i].weight;</span><br><span class="line">    }</span><br><span class="line">    sort(mooncake.begin(), mooncake.end(), cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;N; i++)<span class="comment">//&#x53EF;&#x80FD;&#x6700;&#x540E;&#x5168;&#x5356;&#x5B8C;&#x8FD8;&#x65E0;&#x6CD5;&#x8FBE;&#x5230;&#x9700;&#x6C42;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (need&gt;mooncake[i].weight)</span><br><span class="line">        {</span><br><span class="line">            need -= mooncake[i].weight;</span><br><span class="line">            res += mooncake[i].TotalPrice;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            res += mooncake[i].UnitPrice*need;</span><br><span class="line">            need = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//&#x591F;&#x4E86;&#x5C31;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, res);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"><span class="number">3</span> <span class="number">200</span></span><br><span class="line"><span class="number">180</span> <span class="number">150</span> <span class="number">100</span></span><br><span class="line"><span class="number">7.5</span> <span class="number">7.2</span> <span class="number">4.5</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">9.45</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1069 The Black Hole of Numbers (20)</title>
      <link href="//posts/abc10d4f/"/>
      <url>//posts/abc10d4f/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1069" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6570;&#x5B57;&#x7684;&#x9ED1;&#x6D1E;&#x3002;</p><p>&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x56DB;&#x4F4D;&#x4E0D;&#x76F8;&#x540C;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5148;&#x628A;&#x8FD9;4&#x4E2A;&#x6570;&#x5B57;&#x964D;&#x5E8F;&#x6392;&#x5217;&#xFF0C;&#x51CF;&#x53BB;&#x5176;&#x5347;&#x5E8F;&#x6392;&#x5217;&#x6240;&#x5F97;&#x7684;&#x6570;&#xFF0C;&#x4F9D;&#x6B21;&#x53CD;&#x590D;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x6C38;&#x8FDC;&#x90FD;&#x4F1A;&#x5F97;&#x5230;6174.&#x79F0;&#x4E4B;&#x4E3A;&#x6570;&#x5B57;&#x9ED1;&#x6D1E;&#xFF0C;&#x7ED9;&#x5B9A;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;4&#x4F4D;&#x6570;&#x5B57;&#xFF0C;&#x6C42;&#x51FA;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x8FDB;&#x5165;&#x9ED1;&#x6D1E;&#x7684;&#x6B65;&#x9AA4;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#xFF08;0&#xFF0C;10000&#xFF09;&#x5185;&#x7684;&#x6B63;&#x6574;&#x6570;N&#x3002; ## &#x8F93;&#x51FA; &#x5982;&#x679C;N&#x7684;&#x6240;&#x6709;&#x56DB;&#x4F4D;&#x6570;&#x90FD;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;N - N = 0000&#x3002;&#x5426;&#x5219;&#x8F93;&#x51FA;&#x6BCF;&#x4E00;&#x6B65;&#x7684;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x76F4;&#x5230;&#x51FA;&#x73B0;6174.&#x6240;&#x6709;&#x7684;&#x6570;&#x5B57;&#x5FC5;&#x987B;&#x6253;&#x5370;&#x6210;4&#x4F4D;&#x6570;&#x5B57;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; 1. reverse(str.begin(),str.end()); 2. sort(str.start,str.end(),cmp; 3. stoi(str) // &#x5B57;&#x7B26;&#x4E32;&#x8F6C;int 4. to_string(int) //int&#x8F6C;&#x5B57;&#x7B26;&#x4E32;</p><h2 id="tips">Tips</h2><p>&#x6CE8;&#x610F;&#x5728;to_string(int) //int&#x8F6C;&#x5B57;&#x7B26;&#x4E32;&#x540E;&#xFF0C;&#x8981;&#x63D2;&#x5165;0 ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> input;</span><br><span class="line"><span class="keyword">int</span> a, b, c=<span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> a, <span class="keyword">char</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a &gt; b;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; input;</span><br><span class="line">    input.insert(<span class="number">0</span>, <span class="number">4</span> - input.length(), <span class="string">&apos;0&apos;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (c!=<span class="number">6174</span>&amp;&amp;c!=<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        sort(input.begin(), input.end());</span><br><span class="line">        a = stoi(input);<span class="comment">//&#x4ECE;&#x5C0F;&#x5230;&#x5927;</span></span><br><span class="line">        sort(input.begin(), input.end(), cmp);</span><br><span class="line">        b = stoi(input);</span><br><span class="line">        c = b - a;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%04d - %04d = %04d\n&quot;</span>, b, a, c);</span><br><span class="line">        input = to_string(c);</span><br><span class="line">        input.insert(<span class="number">0</span>, <span class="number">4</span> - input.length(), <span class="string">&apos;0&apos;</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6767</span></span><br><span class="line">&#x8F93;&#x51FA;&#x5E94;&#x4E3A;</span><br><span class="line"><span class="number">7766</span> - <span class="number">6677</span> = <span class="number">1089</span></span><br><span class="line"><span class="number">9810</span> - <span class="number">0189</span> = <span class="number">9621</span></span><br><span class="line"><span class="number">9621</span> - <span class="number">1269</span> = <span class="number">8352</span></span><br><span class="line"><span class="number">8532</span> - <span class="number">2358</span> = <span class="number">6174</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2222</span></span><br><span class="line">&#x8F93;&#x51FA;&#x5E94;&#x4E3A;</span><br><span class="line"><span class="number">2222</span> - <span class="number">2222</span> = <span class="number">0000</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1067 Sort with Swap(0,*) (25)</title>
      <link href="//posts/4c792048/"/>
      <url>//posts/4c792048/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1067" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x4F7F;&#x7528;Swap(0,* )&#x6765;&#x6392;&#x5E8F;&#x3002;&#x6C42;&#x5BF9;&#x4E8E;&#x7ED9;&#x5B9A;&#x5E8F;&#x5217;&#xFF0C;&#x6700;&#x5C11;&#x7684;&#x4EA4;&#x6362;&#x6B21;&#x6570;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x5148;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x968F;&#x540E;&#x662F;N&#x4E2A;&#x6570;&#xFF0C;&#x4E71;&#x5E8F;&#x7684; 0~N-1&#xFF0C;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x4F7F;&#x6570;&#x5217;&#x6392;&#x5E8F;&#x6210;&#x589E;&#x5E8F;&#x7684;&#x6700;&#x5C11;&#x4EA4;&#x6362;&#x6B21;&#x6570;&#x3002; &#x4F7F;&#x7528;Swap&#xFF08;0&#xFF0C;* &#xFF09;&#x7684;&#x89E3;&#x91CA;&#x5982;&#x4E0B;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x5FC5;&#x987B;&#x662F;0&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x6570;&#x662F;&#x5176;&#x4ED6;&#x7684;&#x3002; &#x6BD4;&#x5982;&#x5BF9;{4, 0, 2, 1, 3}&#x8FDB;&#x884C;&#x6392;&#x5E8F;</p><ol type="1"><li>&#x4EA4;&#x6362;&#xFF08;0,1&#xFF09;&#x5F97;&#x5230;{4, 1, 2, 0, 3}</li><li>&#x5BF9;{4, 1, 2, 0, 3}&#x4EA4;&#x6362;&#xFF08;0,3&#xFF09; &#x5F97;&#x5230;{4, 1, 2, 3, 0}</li><li>&#x5BF9;{4, 1, 2, 3, 0}&#x4EA4;&#x6362;&#xFF08;0,4&#xFF09;&#x5F97;&#x5230; {0, 1, 2, 3, 4}</li></ol><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Order| 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |</span><br><span class="line">     +---+---+---+---+---+---+---+---+---+---+</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0; | 3 | 5 | 7 | 2 | 6 | 4 | 9 | 0 | 8 | 1 |</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0; +---+---+---+-&#x2014;-+---+---+---+---+---+---+</span><br></pre></td></tr></table></figure><p>&#x5404;&#x56DE;&#x5404;&#x5BB6;&#xFF0C;&#x5404;&#x627E;&#x5404;&#x5988;&#x3002;&#x88AB;&#x8D76;&#x51FA;&#x6765;&#x7684;&#x53BB;&#x8D76;&#x522B;&#x4EBA;&#x3002;</p><ol type="1"><li>a[0] -&gt; a[3]</li><li>a[3] -&gt; a[2]</li><li>a[2] -&gt; a[7]</li><li>a[7] -&gt; a[0]</li></ol><p>&#x7B2C;&#x4E00;&#x6B65;&#x4EA4;&#x6362;&#x4E2D;&#x6709;0&#x53C2;&#x4E0E;&#xFF0C;&#x6240;&#x4EE5;&#x6B21;&#x6570;&#x4E3A;3&#x3002;&#x5206;&#x522B;&#x662F;&#xFF08;0,7&#xFF09;&#xFF08;0,2&#xFF09;&#xFF08;0,3&#xFF09;&#xFF0C; &#x8FD9;&#x4E2A;&#x6570;&#x6B63;&#x597D;&#x7B49;&#x4E8E;&#x53C2;&#x4E0E;&#x4EA4;&#x6362;&#x7684;&#x6570;&#x5B57;&#x7684;&#x4E2A;&#x6570;&#xFF08;4&#xFF09;-1,&#x628A;&#x8FD9;&#x4E9B;&#x6570;&#x5B57;&#xFF08;0,2,3,7&#xFF09;&#x5F52;&#x4E3A;&#x7B2C;&#x4E00;&#x7EC4; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Order| 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0; +---+---+---+---+---+---+---+---+---+---+</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0; | 0 | 5 | 2 | 3 | 6 | 4 | 9 | 7 | 8 | 1 |</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0; +-^-+---+-^-+-&#x2014;-+---+---+---+-^-+---+---+</span><br></pre></td></tr></table></figure></p><ol type="1"><li>a[1] -&gt; a[5]</li><li>a[5] -&gt; a[4]</li><li>a[4] -&gt; a[6]</li><li>a[6] -&gt; a[9]</li><li>a[9] -&gt; a[1]</li></ol><p>&#x7B2C;&#x4E8C;&#x6B65;&#x4EA4;&#x6362;&#x4E2D;&#x6CA1;&#x6709;0&#x53C2;&#x4E0E;&#xFF0C;&#x6240;&#x4EE5;&#x6B21;&#x6570;&#x4E3A;6&#x6B21;&#xFF0C;&#x5206;&#x522B;&#x662F;&#xFF08;0,5&#xFF09;&#xFF08;0,1&#xFF09;&#xFF08;0,9&#xFF09;&#xFF08;0,6&#xFF09;&#xFF08;0,4&#xFF09;&#xFF08;0,5&#xFF09; &#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x6B63;&#x597D;&#x7B49;&#x4E8E;&#x53C2;&#x4E0E;&#x4EA4;&#x6362;&#x7684;&#x6570;&#x5B57;&#x4E2A;&#x6570;+1&#x3002;&#x8BF4;&#x6CA1;&#x6709;0&#x53C2;&#x4E0E;&#x662F;&#x6307;&#x8981;&#x4EA4;&#x6362;&#x7684;&#x6570;&#x5B57;&#x4E2D;&#x6CA1;&#x6709;0&#xFF0C; &#x4F46;&#x662F;0&#x95F4;&#x63A5;&#x53C2;&#x4E0E;&#x4E86;&#x4EA4;&#x6362;&#x3002;&#x628A;&#x8FD9;&#x4E9B;&#x6570;&#x5B57;&#xFF08;1,4,5,6,9&#xFF09;&#x5F52;&#x4E3A;&#x7B2C;&#x4E8C;&#x7EC4;&#x3002; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Order| 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0; +---+---+---+---+---+---+---+---+---+---+</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0; | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |</span><br><span class="line">&#xA0;&#xA0;&#xA0;&#xA0; +-^-+-^-+-^-+-&#x2014;-+-^-+-^-+-^-+-^-+---+-^-+</span><br></pre></td></tr></table></figure></p><p>&#x7531;&#x4E0A;&#x5206;&#x6790;&#xFF0C;&#x63A8;&#x5BFC;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x53C8;&#x7531;&#x4E8E;&#x5728;&#x4E00;&#x6B21;&#x6392;&#x5E8F;&#x4E2D;&#xFF0C;&#x5982;&#x679C;0&#x4E0D;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#xFF0C;&#x90A3;&#x4E48;0&#x6709;&#x4E14;&#x4EC5;&#x6709;&#x4E00;&#x6B21;&#x76F4;&#x63A5;&#x53C2;&#x4E0E;&#x4EA4;&#x6362;&#x3002;&#x5176;&#x4ED6;&#x7684;&#x53C2;&#x4E0E;&#xFF08;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;&#xFF09;&#x90FD;&#x662F;&#x95F4;&#x63A5;&#x53C2;&#x4E0E;&#x3002;&#x5982;&#x679C;0&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#xFF0C;&#x90A3;&#x4E48;0&#x4E00;&#x5B9A;&#x662F;&#x95F4;&#x63A5;&#x53C2;&#x4E0E;&#x6392;&#x5E8F;&#x3002;</p><p>&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5F97;&#xFF1A;&#x8BBE;&#x4E00;&#x5171;&#x6709;N&#x7EC4;&#x3002;&#x6BCF;&#x7EC4;&#x5206;&#x522B;&#x6709;a1,a2,a3&#x2026;..an&#x6570;&#x5B57;&#x3002; &#x82E5;num[0]!=0&#xFF0C;&#x5219;0&#x6709;&#x4E14;&#x4EC5;&#x6709;&#x4E00;&#x6B21;&#x76F4;&#x63A5;&#x53C2;&#x4E0E;&#x4EA4;&#x6362;&#x3002; &#x8BBE;0&#x5728;&#x7B2C;t&#x7EC4;&#x76F4;&#x63A5;&#x53C2;&#x4E0E;&#x6392;&#x5E8F;&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x5171;&#x4EA4;&#x6362;&#x6B21;&#x6570;&#x4E3A; (a1+1)+(a2+1)+&#x2026;+(at-1)+&#x2026;(an+1)=(a1+a2+&#x2026;at)+N-2. &#x53C8;a1+a2+a3+...+an&#x662F;&#x6240;&#x6709;&#x4E0D;&#x5728;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x4E0A;&#x7684;&#x6570;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;num[i]==i&#x662F;&#x5426;&#x6210;&#x7ACB;&#x6765;&#x5224;&#x65AD;&#x3002;</p><p>&#x82E5;num[0]==0 &#x5219;0&#x5168;&#x90E8;&#x662F;&#x95F4;&#x63A5;&#x53C2;&#x4E0E;&#x4EA4;&#x6362; &#x6240;&#x4EE5;&#x4EA4;&#x6362;&#x6B21;&#x6570; = (a1+1)+(a2+1)+&#x2026;+(an+1)=(a1+a2+&#x2026;at)+N&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num[<span class="number">100001</span>];</span><br><span class="line"><span class="keyword">bool</span> visit[<span class="number">100001</span>] = { <span class="number">0</span> };</span><br><span class="line"><span class="keyword">int</span> N, group = <span class="number">0</span>, swap_time = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (visit[i] || num[i] == i)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        group++;</span><br><span class="line">        <span class="keyword">int</span> j = i;</span><br><span class="line">        <span class="keyword">while</span> (!visit[j])</span><br><span class="line">        {</span><br><span class="line">            visit[j] = <span class="literal">true</span>;</span><br><span class="line">            swap_time++;</span><br><span class="line">            j = num[j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (num[<span class="number">0</span>] != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; swap_time + group - <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; swap_time + group;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input</span><br><span class="line"><span class="number">10</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">2</span> <span class="number">6</span> <span class="number">4</span> <span class="number">9</span> <span class="number">0</span> <span class="number">8</span> <span class="number">1</span></span><br><span class="line">output</span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input</span><br><span class="line"><span class="number">11</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">2</span> <span class="number">6</span> <span class="number">4</span> <span class="number">9</span> <span class="number">0</span> <span class="number">11</span> <span class="number">1</span> <span class="number">8</span></span><br><span class="line">output</span><br><span class="line"><span class="number">14</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1065 A+B and C (64bit) (20)</title>
      <link href="//posts/a2774164/"/>
      <url>//posts/a2774164/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1065" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> 64&#x4F4D;&#x7684;A+B&#x548C;C&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;A+B&gt;C&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#x7684;&#x6570;&#x91CF;T&#x3002;&#x5728;&#x968F;&#x540E;&#x7684;T&#x884C;&#x5185;&#xFF0C;&#x6BCF;&#x884C;&#x6709;3&#x4E2A;&#x6570;&#x5B57;A,B,C&#xFF0C;&#x7531;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; ## &#x8F93;&#x51FA; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#xFF0C;&#x5982;&#x679C;A+B&gt;C&#xFF0C;&#x5219;&#x5728;&#x4E00;&#x884C;&#x5185;&#x8F93;&#x51FA;</p><p>Case #X: true</p><p>&#x5426;&#x5219;&#x8F93;&#x51FA;</p><p>Case #X: false</p><p>&#x5176;&#x4E2D;X&#x662F;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#x7684;&#x5E8F;&#x53F7;&#xFF0C;&#x4ECE;1&#x5F00;&#x59CB;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x9898;&#x76EE;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5224;&#x65AD;&#x662F;&#x5426;&#x4E0A;&#x6EA2;&#x5373;&#x53EF;&#x3002; ## Tips &#x6211;&#x611F;&#x89C9;&#x8FD9;&#x4E2A;&#x9898;&#x6709;&#x70B9;&#x95EE;&#x9898;&#xFF0C;&#x9898;&#x76EE;&#x60F3;&#x8981;&#x8868;&#x8FBE;&#x7684;&#x610F;&#x601D;&#x5E94;&#x8BE5;&#x662F; [-2^63, 2^63)&#xFF0C;&#x5373;&#x4E0D;&#x5305;&#x62EC; 2^63 &#x7684;&#x3002; &#x4F46;&#x662F;&#x5982;&#x679C;&#x8FD8;&#x662F;&#x6309;&#x7167; [-2^63, 2^63]&#x6765;&#x505A;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x4E5F;&#x6CA1;&#x60F3;&#x51FA;&#x592A;&#x597D;&#x7684;&#x529E;&#x6CD5;&#xFF0C;&#x76EE;&#x524D;&#x6211;&#x7684;&#x601D;&#x8DEF;&#x662F;&#x5927;&#x6574;&#x6570;&#x52A0;&#x6CD5;&#xFF0C;&#x7528;&#x7EBF;&#x6027;&#x5BB9;&#x5668;&#xFF08;&#x6570;&#x7EC4;&#xFF0C;string&#xFF0C;vrctor&#xFF09;&#x53BB;&#x505A;&#x3002; ## &#x4EE3;&#x7801; &#xFF08;&#x6309;&#x7167;[-2^63, 2^63)&#x53BB;&#x505A;&#x7684;&#xFF09;&#xFF0C;&#x80FD;&#x901A;&#x8FC7;PAT&#x6D4B;&#x8BD5;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> A, B, C, D;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">bool</span> res;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; B &gt;&gt; C;</span><br><span class="line">        D = A + B;</span><br><span class="line">        <span class="keyword">if</span> (A &gt; <span class="number">0</span> &amp;&amp; B &gt; <span class="number">0</span> &amp;&amp; D &lt; <span class="number">0</span>)</span><br><span class="line">            res = <span class="literal">true</span>;<span class="comment">//&#x4E0A;&#x6EA2;&#x4E00;&#x5B9A;&#x5927;&#x4E8E;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (A &lt; <span class="number">0</span> &amp;&amp; B &lt; <span class="number">0</span> &amp;&amp; D&gt;=<span class="number">0</span>)</span><br><span class="line">            res = <span class="literal">false</span>;<span class="comment">//&#x4E0B;&#x6EA2;&#x4E00;&#x5B9A;&#x5C0F;&#x4E8E;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            res = (D &gt; C);</span><br><span class="line">        <span class="keyword">if</span> (res)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; <span class="string">&quot;true&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; <span class="string">&quot;false&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x56DE;&#x5934;&#x5199;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x3002; ## &#x6D4B;&#x8BD5;&#x6570;&#x636E; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">9223372036854775807</span> <span class="number">-9223372036854775808</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">9223372036854775808</span> <span class="number">-9223372036854775808</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 判断溢出 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1066 Root of AVL Tree (25)</title>
      <link href="//posts/3b7e10de/"/>
      <url>//posts/3b7e10de/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1066" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6C42;&#x4E00;&#x4E2A;AVL&#x6811;&#x7684;&#x6839;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N(&lt;=20)&#xFF0C;&#x8868;&#x793A;&#x8981;&#x63D2;&#x5165;&#x8FDB;AVL&#x6811;&#x7684;&#x6570;&#x5B57;&#x7684;&#x4E2A;&#x6570;&#xFF08;&#x5373;AVL&#x6811;&#x7684;&#x8282;&#x70B9;&#xFF09;&#x3002;&#x7136;&#x540E;&#x662F;N&#x4E2A;&#x4E92;&#x4E0D;&#x76F8;&#x540C;&#x7684;&#x6570;&#x3002; ## &#x8F93;&#x51FA; &#x751F;&#x6210;&#x7684;AVL&#x6811;&#x7684;&#x6839;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; &#x6A21;&#x62DF;&#xFF0C;&#x56E0;&#x4E3A;&#x5BF9;&#x4E8E;&#x540C;&#x6837;&#x7684;&#x4E00;&#x7EC4;&#x6570;&#xFF0C;&#x6700;&#x540E;&#x751F;&#x6210;&#x7684;AVL&#x6811;&#x662F;&#x7531;&#x63D2;&#x5165;&#x7684;&#x987A;&#x5E8F;&#x51B3;&#x5B9A;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x8FD9;&#x4E2A;&#x9898;&#x6CA1;&#x6709;&#x7B80;&#x4FBF;&#x7684;&#x601D;&#x8DEF;&#xFF0C;&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x6A21;&#x62DF;&#x63D2;&#x5165;&#xFF0C;&#x8C03;&#x6574;&#x64CD;&#x4F5C;&#x6765;&#x6700;&#x7EC8;&#x6784;&#x5EFA;&#x4E00;&#x68F5;AVL&#x6811;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tree</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">int</span> height;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tree</span> *<span class="title">left</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tree</span> *<span class="title">right</span>;</span></span><br><span class="line">}Tree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">HTree</span><span class="params">(Tree* root)</span><span class="comment">//&#x6C42;&#x6811;&#x7684;&#x9AD8;&#x5EA6;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> root-&gt;height;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">Tree* <span class="title">SingleRotateWithLeft</span><span class="params">(Tree* r1)</span><span class="comment">//&#x5355;&#x5DE6;&#x65CB;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Tree* r2;</span><br><span class="line">    r2 = r1-&gt;left;</span><br><span class="line">    r1-&gt;left = r2-&gt;right;</span><br><span class="line">    r2-&gt;right = r1;</span><br><span class="line">    r1-&gt;height = max(HTree(r1-&gt;left), HTree(r1-&gt;right)) + <span class="number">1</span>;</span><br><span class="line">    r2-&gt;height = max(HTree(r2-&gt;left), r1-&gt;height) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> r2;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">Tree* <span class="title">SingleRotateWithRight</span><span class="params">(Tree* r1)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Tree* r2;</span><br><span class="line">    r2 = r1-&gt;right;</span><br><span class="line">    r1-&gt;right = r2-&gt;left;</span><br><span class="line">    r2-&gt;left = r1;</span><br><span class="line">    r1-&gt;height = max(HTree(r1-&gt;left), HTree(r1-&gt;right)) + <span class="number">1</span>;</span><br><span class="line">    r2-&gt;height = max(r1-&gt;height, HTree(r2-&gt;right)) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> r2;<span class="comment">//return the root</span></span><br><span class="line">}</span><br><span class="line"><span class="function">Tree* <span class="title">DoubleRotateWithLeft</span><span class="params">(Tree* root)</span><span class="comment">//&#x5BF9;&#x5DE6;&#x5B50;&#x6811;&#x5148;&#x505A;&#x5355;&#x53F3;&#x65CB;&#x8F6C;&#xFF0C;&#x518D;&#x5BF9;&#x6839;&#x505A;&#x5DE6;&#x65CB;&#x8F6C;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    root-&gt;left = SingleRotateWithRight(root-&gt;left);</span><br><span class="line">    <span class="keyword">return</span> SingleRotateWithLeft(root);</span><br><span class="line">}</span><br><span class="line"><span class="function">Tree* <span class="title">DoubleRotateWithRight</span><span class="params">(Tree* root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    root-&gt;right = SingleRotateWithLeft(root-&gt;right);</span><br><span class="line">    <span class="keyword">return</span> SingleRotateWithRight(root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">Tree* <span class="title">AVLInsert</span><span class="params">(Tree* root, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (root==<span class="literal">NULL</span>)</span><br><span class="line">    {</span><br><span class="line">        root = (Tree*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Tree));</span><br><span class="line">        root-&gt;val = num;</span><br><span class="line">        root-&gt;height = <span class="number">1</span>;</span><br><span class="line">        root-&gt;left = <span class="literal">NULL</span>;</span><br><span class="line">        root-&gt;right = <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (num &lt; root-&gt;val)<span class="comment">//&#x63D2;&#x5165;&#x5230;&#x5DE6;&#x5B50;&#x6811;</span></span><br><span class="line">    {</span><br><span class="line">        root-&gt;left = AVLInsert(root-&gt;left, num);<span class="comment">//&#x63D2;&#x5165;&#x5230;&#x5DE6;&#x5B50;&#x6811;&#x4E2D;</span></span><br><span class="line">        <span class="keyword">if</span> (HTree(root-&gt;left) - HTree(root-&gt;right) == <span class="number">2</span>)<span class="comment">//&#x9AD8;&#x5EA6;&#x5DEE;&#x4E3A;2&#x8868;&#x793A;&#x9700;&#x8981;&#x8C03;&#x6574;</span></span><br><span class="line">            <span class="keyword">if</span> (num &lt; root-&gt;left-&gt;val)</span><br><span class="line">                root = SingleRotateWithLeft(root);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                root = DoubleRotateWithLeft(root);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (num &gt; root-&gt;val)</span><br><span class="line">    {</span><br><span class="line">        root-&gt;right = AVLInsert(root-&gt;right, num);</span><br><span class="line">        <span class="keyword">if</span> (HTree(root-&gt;right) - HTree(root-&gt;left) == <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> (num &gt; root-&gt;right-&gt;val)</span><br><span class="line">                root = SingleRotateWithRight(root);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                root = DoubleRotateWithRight(root);</span><br><span class="line">    }</span><br><span class="line">    root-&gt;height = max(HTree(root-&gt;left), HTree(root-&gt;right))+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Tree* root = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        root = AVLInsert(root, temp);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; root-&gt;val;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">88</span> <span class="number">70</span> <span class="number">61</span> <span class="number">96</span> <span class="number">120</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">88</span> <span class="number">70</span> <span class="number">61</span> <span class="number">96</span> <span class="number">120</span> <span class="number">90</span> <span class="number">65</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> AVL Tree </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1062 Talent and Virtue (25)</title>
      <link href="//posts/3c13d4c7/"/>
      <url>//posts/3c13d4c7/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1062" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x6839;&#x636E;&#x7ED9;&#x5B9A;&#x89C4;&#x5219;&#xFF0C;&#x5BF9;&#x5723;&#x4EBA;&#xFF0C;&#x541B;&#x5B50;&#xFF0C;&#x611A;&#x4EBA;&#xFF0C;&#x5C0F;&#x4EBA;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#x9996;&#x5148;&#x7ED9;&#x51FA;&#x4E09;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;N&#xFF0C;&#x6709;&#x591A;&#x5C11;&#x4EBA;&#xFF0C;L&#xFF0C;&#x53CA;&#x683C;&#x7EBF;&#xFF0C;&#x53EA;&#x6709;&#x624D;&#x80FD;&#x5206;&#x6570;&#x548C;&#x5230;&#x7684;&#x5206;&#x6570;&#x90FD;&#x4E0D;&#x4F4E;&#x4E8E;&#x6B64;&#x6570;&#x7684;&#x4EBA;&#x624D;&#x53C2;&#x52A0;&#x6392;&#x540D;&#x3002;H&#xFF0C;&#x4F18;&#x79C0;&#x7EBF;&#xFF0C;&#x8FBE;&#x5230;&#x6B64;&#x7EBF;&#x7684;&#x4EBA;&#x5373;&#x53EF;&#x8BA4;&#x4E3A;&#x8BE5;&#x9879;&#x8FBE;&#x6807;&#xFF0C;&#x9053;&#x5FB7;&#x548C;&#x624D;&#x80FD;&#x90FD;&#x8FBE;&#x5230;&#x4F18;&#x79C0;&#x7EBF;&#x7684;&#x4EBA;&#x53EB;&#x5723;&#x4EBA;&#xFF0C;&#x9053;&#x5FB7;&#x5206;&#x6570;&#x8FBE;&#x6807;&#xFF0C;&#x4F46;&#x662F;&#x624D;&#x80FD;&#x5206;&#x6570;&#x4E0D;&#x8FBE;&#x6807;&#x7684;&#x53EB;&#x541B;&#x5B50;&#xFF0C;&#x6392;&#x5728;&#x5723;&#x4EBA;&#x4E4B;&#x540E;&#xFF0C;&#x5168;&#x90FD;&#x4E0D;&#x8FBE;&#x6807;&#xFF0C;&#x4F46;&#x662F;&#x9053;&#x5FB7;&#x5206;&#x6570;&#x4E0D;&#x4F4E;&#x4E8E;&#x624D;&#x80FD;&#x5206;&#x6570;&#x7684;&#x53EB;&#x611A;&#x4EBA;&#xFF0C;&#x6392;&#x5728;&#x5747;&#x503C;&#x4E4B;&#x540E;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x4EBA;&#xFF0C;&#x4E24;&#x9879;&#x5206;&#x6570;&#x5747;&#x8FBE;&#x5230;L&#x53CA;&#x683C;&#x7EBF;&#x7684;&#x4EBA;&#xFF0C;&#x6392;&#x5728;&#x611A;&#x4EBA;&#x4E4B;&#x540E;&#x3002;&#x5728;&#x6BCF;&#x4E00;&#x5C0F;&#x9879;&#x5185;&#xFF0C;&#x6309;&#x7167;&#x4E24;&#x9879;&#x5206;&#x6570;&#x603B;&#x548C;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;</p><p>&#x7136;&#x540E;&#x662F;N&#x884C;&#xFF0C;&#x7ED9;&#x51FA;&#x6BCF;&#x4E2A;&#x4EBA;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4EE5;</p><p>ID_Number Virtue_Grade Talent_Grade</p><p>&#x683C;&#x5F0F;&#x3002; ## &#x8F93;&#x51FA; &#x9996;&#x5148;&#x7ED9;&#x51FA;&#x53C2;&#x4E0E;&#x6392;&#x540D;&#x7684;&#x4EBA;&#x6570;M&#xFF0C;M&lt;=N&#xFF0C;&#x7136;&#x540E;&#x5728;&#x63A5;&#x4E0B;&#x6765;&#x7684;M&#x884C;&#x5185;&#xFF0C;&#x4ECD;&#x7136;&#x6309;&#x7167;ID_Number Virtue_Grade Talent_Grade &#x683C;&#x5F0F;&#xFF0C;&#x6309;&#x7167;&#x6392;&#x540D;&#x89C4;&#x5219;&#x8FDB;&#x884C;&#x6392;&#x540D;&#x3002;&#x5982;&#x679C;&#x603B;&#x5206;&#x76F8;&#x540C;&#xFF0C;&#x6309;&#x7167;&#x9053;&#x5FB7;&#x5206;&#x6570;&#xFF0C;&#x975E;&#x9012;&#x589E;&#x6392;&#x5E8F;&#xFF0C;&#x5373;&#x9053;&#x5FB7;&#x5206;&#x6570;&#x9AD8;&#x7684;&#x4EBA;&#x5728;&#x524D;&#x9762;&#xFF0C;&#x5982;&#x679C;&#x9053;&#x5FB7;&#x5206;&#x6570;&#x8FD8;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x6309;ID&#x597D;&#x9012;&#x589E;&#x6392;&#x5E8F;&#xFF0C;&#x5373;&#x5C0F;&#x53F7;&#x5728;&#x524D;&#x9762;&#x3002; # &#x89E3;&#x9898; ## &#x601D;&#x8DEF;&#x5206;&#x6790; sort&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;compare&#x51FD;&#x6570; ## Tips &#x5BF9;&#x6BCF;&#x4E2A;&#x4EBA;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#xFF0C;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> ID_Number;</span><br><span class="line">    <span class="keyword">int</span> Virtue_Grade;</span><br><span class="line">    <span class="keyword">int</span> Talent_Grade;</span><br><span class="line">    <span class="keyword">int</span> tag;<span class="comment">//0&#x8868;&#x793A;&#x5723;&#x4EBA;&#xFF0C;1&#x8868;&#x793A;&#x541B;&#x5B50;&#xFF0C;2&#x8868;&#x793A;&#x611A;&#x4EBA;&#xFF0C;3&#x8868;&#x793A;&#x5C0F;&#x4EBA;</span></span><br><span class="line">}people;</span><br><span class="line"><span class="built_in">vector</span>&lt;people&gt; p;</span><br><span class="line"><span class="keyword">int</span> N, L, H;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(people a, people b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.tag != b.tag)</span><br><span class="line">        <span class="keyword">return</span> a.tag &lt; b.tag;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((a.Virtue_Grade + a.Talent_Grade) != (b.Virtue_Grade + b.Talent_Grade))</span><br><span class="line">        <span class="keyword">return</span> (a.Virtue_Grade + a.Talent_Grade) &gt; (b.Virtue_Grade + b.Talent_Grade);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (a.Virtue_Grade != b.Virtue_Grade)</span><br><span class="line">        <span class="keyword">return</span> a.Virtue_Grade &gt; b.Virtue_Grade;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.ID_Number &lt; b.ID_Number;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    people input;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; L &gt;&gt; H;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;input.ID_Number, &amp;input.Virtue_Grade, &amp;input.Talent_Grade);</span><br><span class="line">        <span class="comment">//cin &gt;&gt; input.ID_Number &gt;&gt; input.Virtue_Grade &gt;&gt; input.Talent_Grade;</span></span><br><span class="line">        <span class="keyword">if</span> (input.Talent_Grade &gt;= L&amp;&amp;input.Virtue_Grade &gt;= L)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (input.Talent_Grade &gt;= H&amp;&amp;input.Virtue_Grade &gt;= H)</span><br><span class="line">                input.tag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (input.Virtue_Grade &gt;= H)</span><br><span class="line">                input.tag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (input.Virtue_Grade &gt;= input.Talent_Grade)</span><br><span class="line">                input.tag = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                input.tag = <span class="number">3</span>;</span><br><span class="line">            p.push_back(input);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    sort(p.begin(), p.end(), cmp);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; p.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = p.begin(); i != p.end(); i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, i-&gt;ID_Number, i-&gt;Virtue_Grade, i-&gt;Talent_Grade);</span><br><span class="line">        <span class="comment">//cout &lt;&lt; i-&gt;ID_Number &lt;&lt; &apos; &apos; &lt;&lt; i-&gt;Virtue_Grade &lt;&lt; &apos; &apos; &lt;&lt; i-&gt;Talent_Grade &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">14</span> <span class="number">60</span> <span class="number">80</span></span><br><span class="line"><span class="number">10000001</span> <span class="number">64</span> <span class="number">90</span></span><br><span class="line"><span class="number">10000002</span> <span class="number">90</span> <span class="number">60</span></span><br><span class="line"><span class="number">10000011</span> <span class="number">85</span> <span class="number">80</span></span><br><span class="line"><span class="number">10000003</span> <span class="number">85</span> <span class="number">80</span></span><br><span class="line"><span class="number">10000004</span> <span class="number">80</span> <span class="number">85</span></span><br><span class="line"><span class="number">10000005</span> <span class="number">82</span> <span class="number">77</span></span><br><span class="line"><span class="number">10000006</span> <span class="number">83</span> <span class="number">76</span></span><br><span class="line"><span class="number">10000007</span> <span class="number">90</span> <span class="number">78</span></span><br><span class="line"><span class="number">10000008</span> <span class="number">75</span> <span class="number">79</span></span><br><span class="line"><span class="number">10000009</span> <span class="number">59</span> <span class="number">90</span></span><br><span class="line"><span class="number">10000010</span> <span class="number">88</span> <span class="number">45</span></span><br><span class="line"><span class="number">10000012</span> <span class="number">80</span> <span class="number">100</span></span><br><span class="line"><span class="number">10000013</span> <span class="number">90</span> <span class="number">99</span></span><br><span class="line"><span class="number">10000014</span> <span class="number">66</span> <span class="number">60</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1061 Dating (20)</title>
      <link href="//posts/a51a857d/"/>
      <url>//posts/a51a857d/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1061" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x798F;&#x5C14;&#x6469;&#x65AF;&#x7834;&#x89E3;&#x5B57;&#x7B26;&#x4E32;&#x5BC6;&#x7801;&#xFF0C;&#x5F97;&#x5230;&#x7EA6;&#x4F1A;&#x65F6;&#x95F4;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x8F93;&#x5165;&#x56DB;&#x884C;&#x5B57;&#x7B26;&#x4E32;&#x3002; ## &#x8F93;&#x51FA; &#x8F93;&#x51FA;&#x4F60;&#x7834;&#x8BD1;&#x8FC7;&#x540E;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x7EA6;&#x4F1A;&#x7684;&#x65F6;&#x95F4;&#x3002; &#x524D;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x76F8;&#x540C;&#x7684;&#x5927;&#x5199;&#x5B57;&#x6BCD; &#x8868;&#x793A;&#x5468;&#x51E0;&#xFF0C;&#x5982;A&#x8868;&#x793A;MON&#xFF08;&#x661F;&#x671F;&#x4E00;&#xFF09;&#xFF0C;B&#x8868;&#x793A;THU&#xFF08;&#x661F;&#x671F;&#x4E8C;&#xFF09;&#xFF0C;&#x524D;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7B2C;&#x4E8C;&#x4E2A;&#x76F8;&#x7B49;&#x7684;&#x5B57;&#x6BCD;&#x8868;&#x793A;&#x65F6;&#x95F4;&#xFF0C;0<sub>9&#x5206;&#x522B;&#x8868;&#x793A;0</sub>9&#x70B9;&#xFF0C;A<sub>N&#x8868;&#x793A;10</sub>23&#x70B9;&#x3002;</p><p>&#x540E;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x76F8;&#x540C;&#x7684;&#x5B57;&#x6BCD;&#xFF0C;&#x5176;&#x4F4D;&#x7F6E;&#x8868;&#x793A;&#x65F6;&#x95F4;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#x76F8;&#x7B49;&#xFF0C;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x662F;0&#x4F4D;&#xFF0C;&#x8868;&#x793A;00&#x5206;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#xFF0C;&#x8868;&#x793A;01&#x5206;&#x3002;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x8FD9;&#x9053;&#x9898;&#x662F;&#x8981;&#x6BD4;&#x8F83;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x7684;&#x5B57;&#x7B26;&#x662F;&#x5426;&#x76F8;&#x7B49;&#xFF0C;&#x76F4;&#x63A5;&#x7528;string&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x5373;&#x53EF;&#x3002;&#x6CE8;&#x610F;&#x5173;&#x952E;&#x5B57;&#x7B26;&#x7684;&#x8303;&#x56F4;&#x3002; ## Tips &#x6CE8;&#x610F;&#x8303;&#x56F4;&#xFF0C;&#x6BD4;&#x5982;&#x7B2C;&#x4E00;&#x4E2A;&#x4EE3;&#x8868;&#x5468;&#x51E0;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x5FC5;&#x987B;&#x5728;[A,G]&#x624D;&#x6709;&#x6548;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x4EE3;&#x8868;&#x5C0F;&#x65F6;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x5FC5;&#x987B;&#x5728;[0&#xFF0C;9]&#x548C;[A&#xFF0C;N]&#x4E4B;&#x95F4;&#x624D;&#x6709;&#x6548;&#x3002;</p><p>&#x7B2C;&#x4E09;&#x4E2A;&#x5FC5;&#x987B;&#x662F;&#x5B57;&#x6BCD;&#xFF0C;&#x5927;&#x5C0F;&#x5199;&#x4E0D;&#x9650;&#xFF0C;&#x5373;&#x5728;[a&#xFF0C;z]&#x548C;[A&#xFF0C;Z]&#x4E4B;&#x95F4;&#x624D;&#x6709;&#x6548;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> Week[<span class="number">7</span>] = { <span class="string">&quot;MON &quot;</span>,<span class="string">&quot;TUE &quot;</span>,<span class="string">&quot;WED &quot;</span>,<span class="string">&quot;THU &quot;</span>,<span class="string">&quot;FRI &quot;</span>,<span class="string">&quot;SAT &quot;</span>,<span class="string">&quot;SUN &quot;</span> };</span><br><span class="line"><span class="built_in">string</span> str1, str2, str3, str4;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;str1.size() &amp;&amp; i&lt;str2.size(); i++)</span><br><span class="line">    {</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (str1[i] == str2[i] &amp;&amp; flag == <span class="literal">false</span> &amp;&amp; str1[i] &lt;= <span class="string">&apos;G&apos;</span>&amp;&amp;str1[i] &gt;= <span class="string">&apos;A&apos;</span>)<span class="comment">//&#x6CE8;&#x610F;&#x8303;&#x56F4;A~G</span></span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; Week[str1[i] - <span class="string">&apos;A&apos;</span>];</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (str1[i] == str2[i] &amp;&amp; flag == <span class="literal">true</span> &amp;&amp; ((str1[i] &lt;= <span class="string">&apos;N&apos;</span>&amp;&amp;str1[i] &gt;= <span class="string">&apos;A&apos;</span>) || (str1[i] &lt;= <span class="string">&apos;9&apos;</span>&amp;&amp;str1[i] &gt;= <span class="string">&apos;0&apos;</span>)))<span class="comment">//&#x6CE8;&#x610F;&#x8303;&#x56F4;A~N</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str1[i] &lt;= <span class="string">&apos;9&apos;</span>&amp;&amp;str1[i] &gt;= <span class="string">&apos;0&apos;</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%02d:&quot;</span>, str1[i] - <span class="string">&apos;0&apos;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="number">10</span> + str1[i] - <span class="string">&apos;A&apos;</span> &lt;&lt; <span class="string">&apos;:&apos;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str3.size() &amp;&amp; i&lt;str4.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (str3[i] == str4[i] &amp;&amp; ((str3[i] &lt;= <span class="string">&apos;Z&apos;</span>&amp;&amp;str3[i] &gt;= <span class="string">&apos;A&apos;</span>) || (str3[i] &lt;= <span class="string">&apos;z&apos;</span>&amp;&amp;str3[i] &gt;= <span class="string">&apos;a&apos;</span>)))</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%02d&quot;</span>, i);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str1 &gt;&gt; str2 &gt;&gt; str3 &gt;&gt; str4;</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3485djDkxh4hhGE</span><br><span class="line">2984akDfkkkkggEdsb</span><br><span class="line">s&amp;hgsfdk</span><br><span class="line">d&amp;Hyscvnm</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3485djGkxh4hhG2</span><br><span class="line">2984akGfkkkkgg2dsb</span><br><span class="line">s&amp;hgsfdk</span><br><span class="line">d&amp;hyscvnm</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串处理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1059 Prime Factors (25)</title>
      <link href="//posts/80ec5e8c/"/>
      <url>//posts/80ec5e8c/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1059" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x5206;&#x89E3;&#x8D28;&#x56E0;&#x6570; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x8303;&#x56F4;&#x5728;long int &#x4E4B;&#x95F4;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x5C06;&#x5176;&#x8D28;&#x56E0;&#x6570;&#x5206;&#x89E3;&#x540E;&#x7684;&#x5F0F;&#x5B50;&#xFF0C;&#x6CE8;&#x610F;&#x5982;&#x679C;&#x6B21;&#x6570;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;2&#xFF0C;&#x8981;&#x91C7;&#x7528;&#x4E0A;&#x6807;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x6BD4;&#x5982;2^2&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x4F7F;&#x7528;map&#x6807;&#x8BB0;&#x6BCF;&#x4E2A;&#x8D28;&#x56E0;&#x6570;&#x7684;&#x6307;&#x6570;&#x3002;</p><p>&#x5173;&#x952E;&#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt;= n; i++)</span><br><span class="line">{</span><br><span class="line">  <span class="keyword">while</span> (n%i == <span class="number">0</span>)</span><br><span class="line">  {</span><br><span class="line">    ++res[i];</span><br><span class="line">    n /= i;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (n != <span class="number">1</span>)res[n] = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">long</span> <span class="keyword">int</span>, <span class="keyword">int</span>&gt;res;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Prime_factor</span><span class="params">(<span class="keyword">long</span> <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt;= n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">while</span> (n%i == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            ++res[i];</span><br><span class="line">            n /= i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (n != <span class="number">1</span>)res[n] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (num == <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1=1&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    Prime_factor(num);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="string">&apos;=&apos;</span>;</span><br><span class="line">    <span class="keyword">auto</span> i = res.begin();</span><br><span class="line">    <span class="keyword">if</span> (i-&gt;second &gt;= <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; i-&gt;first &lt;&lt; <span class="string">&apos;^&apos;</span> &lt;&lt; i-&gt;second;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; i-&gt;first;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="keyword">for</span> (; i != res.end(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (i-&gt;second &gt;= <span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt;<span class="string">&apos;*&apos;</span>&lt;&lt; i-&gt;first &lt;&lt; <span class="string">&apos;^&apos;</span> &lt;&lt; i-&gt;second;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;*&apos;</span> &lt;&lt; i-&gt;first;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">97532468</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 分解质因数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1058 A+B in Hogwarts (20)</title>
      <link href="//posts/f7eb6e1a/"/>
      <url>//posts/f7eb6e1a/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1058" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> &#x970D;&#x683C;&#x6C83;&#x5179;&#x7684;&#x8D27;&#x5E01;&#x8BA1;&#x7B97;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x683C;&#x5F0F;&#x662F;&quot;Galleon.Sickle.Knut&quot;&#x3002;&#x7C7B;&#x4F3C;&#x4E8E;&#x5706;&#x89D2;&#x5206;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x4E24;&#x4E2A;&#x6570;&#x76F8;&#x52A0;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6254;&#x7136;&#x6309;&#x7167;&quot;Galleon.Sickle.Knut&quot;&#x7684;&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#x3002;</p><p>29Kunt=1Sickle</p><p>17Sickle=1Galleon</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x8FDB;&#x5236;&#x8F6C;&#x6362;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> Sickle, Knut, Galleon;</span><br><span class="line">}currency;</span><br><span class="line"></span><br><span class="line">currency a, b, sum;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    sum.Knut=a.Knut+b.Knut;</span><br><span class="line">    sum.Sickle = sum.Knut / <span class="number">29</span>;</span><br><span class="line">    sum.Knut = sum.Knut % <span class="number">29</span>;</span><br><span class="line">    sum.Sickle = a.Sickle + b.Sickle + sum.Sickle;</span><br><span class="line">    sum.Galleon = sum.Sickle / <span class="number">17</span>;</span><br><span class="line">    sum.Sickle = sum.Sickle % <span class="number">17</span>;</span><br><span class="line">    sum.Galleon = sum.Galleon + a.Galleon + b.Galleon;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; sum.Galleon &lt;&lt; <span class="string">&apos;.&apos;</span> &lt;&lt; sum.Sickle &lt;&lt; <span class="string">&apos;.&apos;</span> &lt;&lt; sum.Knut;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d.%d.%d %d.%d.%d&quot;</span>,&amp;a.Galleon,&amp;a.Sickle,&amp;a.Knut,&amp;b.Galleon,&amp;b.Sickle,&amp;b.Knut);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.2</span><span class="number">.1</span> <span class="number">10.16</span><span class="number">.27</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 进制转换 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1054 The Dominant Color (20)</title>
      <link href="//posts/fe5d2231/"/>
      <url>//posts/fe5d2231/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1054" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x6C42;&#x4E00;&#x4E9B;&#x6570;&#x5B57;&#x4E2D;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#x7684;&#x6570;&#x5B57;. <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E24;&#x4E2A;&#x6570; M&#x548C;N&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x4E00;&#x884C;&#x6709;M&#x4E2A;&#x6570;&#x5B57;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x6C42;&#x4E0A;&#x8FF0;M*N&#x4E2A;&#x6570;&#x5B57;&#x4E2D;&#xFF0C;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x6700;&#x591A;&#x7684;&#x6570;&#x5B57;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#xFF1A;</p><ol type="1"><li>&#x4F7F;&#x7528;Map</li><li>&#x4F7F;&#x7528;&#x6392;&#x5E8F;</li></ol><h2 id="map&#x4EE3;&#x7801;">Map&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; color;</span><br><span class="line"><span class="keyword">int</span> M, N;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; N;</span><br><span class="line">    <span class="keyword">int</span> input,half=M*N/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">            color[input]++;</span><br><span class="line">            <span class="keyword">if</span> (color[input]&gt;half)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, input);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6392;&#x5E8F;&#x4EE3;&#x7801;">&#x6392;&#x5E8F;&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; color;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; N;</span><br><span class="line">    <span class="keyword">int</span> input;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">            color.push_back(input);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    sort(color.begin(), color.end());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; color[color.size() / <span class="number">2</span>];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">255</span> <span class="number">16777215</span> <span class="number">24</span></span><br><span class="line"><span class="number">24</span> <span class="number">24</span> <span class="number">0</span> <span class="number">0</span> <span class="number">24</span></span><br><span class="line"><span class="number">24</span> <span class="number">0</span> <span class="number">24</span> <span class="number">24</span> <span class="number">24</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> map映射 </tag>
            
            <tag> C++ STL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1052 Linked List Sorting (25)</title>
      <link href="//posts/173e8704/"/>
      <url>//posts/173e8704/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1052" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;&#x8981;&#x6C42;&#x6309;&#x952E;&#x503C;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#x3002;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x8868;&#x793A;&#x8282;&#x70B9;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x4E00;&#x4E2A;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x5730;&#x5740;&#x3002;NULL&#x7528;-1&#x8868;&#x793A;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x683C;&#x5F0F;&#x4E3A;<br>&#x5730;&#x5740;&#x3000;&#x952E;&#x503C;&#x3000;&#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x5730;&#x5740;</p><p>&#x4FDD;&#x8BC1;&#x952E;&#x503C;&#x5404;&#x4E0D;&#x76F8;&#x540C;&#xFF0C;&#x8303;&#x56F4;&#x5728; [-100000, 100000]&#x4E4B;&#x95F4;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x683C;&#x5F0F;&#x4E0A;&#x6309;&#x8F93;&#x5165;&#x7684;&#x6837;&#x5F0F;&#x8F93;&#x51FA;&#xFF0C;&#x4EE5;&#x952E;&#x503C;&#x9012;&#x589E;&#x5E8F;&#x5217;&#x8FDB;&#x884C;&#x8F93;&#x51FA;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x81EA;&#x5B9A;&#x4E49;&#x89C4;&#x5219;&#x6392;&#x5E8F; ## Tips 1. &#x6709;&#x4E9B;&#x8282;&#x70B9;&#x5E76;&#x4E0D;&#x5728;&#x94FE;&#x8868;&#x4E2D; 2. &#x53EF;&#x80FD;&#x6709;&#x591A;&#x4E2A;&#x94FE;&#x8868; 3. &#x5982;&#x679C;&#x94FE;&#x8868;&#x4E3A;&#x7A7A;&#xFF0C;&#x9700;&#x8981;&#x8F93;&#x51FA; 0&#x3000;-1</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> addr;</span><br><span class="line">    <span class="keyword">int</span> next;</span><br><span class="line">    <span class="keyword">int</span> key;</span><br><span class="line">    <span class="keyword">bool</span> isLinked=<span class="literal">false</span>;</span><br><span class="line">}Node;</span><br><span class="line"><span class="keyword">int</span> N, startaddr;</span><br><span class="line"><span class="built_in">vector</span>&lt;Node&gt;LinkList(<span class="number">100001</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Node a, Node b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (!a.isLinked || !b.isLinked)<span class="comment">//&#x4E24;&#x4E2A;&#x5168;&#x90FD;&#x5728;&#x7684;&#x8BDD;&#xFF0C;&#x5224;&#x65AD;&#x7ED3;&#x679C;&#x4E3A;0&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x952E;&#x503C;&#x7684;&#x6BD4;&#x8F83;</span></span><br><span class="line">        <span class="keyword">return</span> a.isLinked &gt; b.isLinked;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">        a.key &lt; b.key;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> NodeNumber = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = startaddr; i !=<span class="number">-1</span> ; i=LinkList[i].next)</span><br><span class="line">    {</span><br><span class="line">        LinkList[i].isLinked = <span class="literal">true</span>;</span><br><span class="line">        NodeNumber++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (NodeNumber == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;0 -1&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    sort(LinkList.begin(), LinkList.end(), cmp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %05d\n&quot;</span>, NodeNumber, LinkList[<span class="number">0</span>].addr);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NodeNumber<span class="number">-1</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%05d %d %05d\n&quot;</span>, LinkList[i].addr, LinkList[i].key, LinkList[i + <span class="number">1</span>].addr);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%05d %d -1&quot;</span>, LinkList[NodeNumber - <span class="number">1</span>].addr, LinkList[NodeNumber - <span class="number">1</span>].key);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; startaddr;</span><br><span class="line">    <span class="keyword">int</span> addr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; addr;</span><br><span class="line">        LinkList[addr].addr = addr;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; LinkList[addr].key &gt;&gt; LinkList[addr].next;</span><br><span class="line">    }</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">00001</span></span><br><span class="line"><span class="number">11111</span> <span class="number">100</span> <span class="number">-1</span></span><br><span class="line"><span class="number">00001</span> <span class="number">0</span> <span class="number">22222</span></span><br><span class="line"><span class="number">33333</span> <span class="number">100000</span> <span class="number">11111</span></span><br><span class="line"><span class="number">12345</span> <span class="number">-1</span> <span class="number">33333</span></span><br><span class="line"><span class="number">22222</span> <span class="number">1000</span> <span class="number">12345</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1048 Find Coins (25)</title>
      <link href="//posts/eef05f5b/"/>
      <url>//posts/eef05f5b/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1048" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x627E;&#x51FA;&#x4E24;&#x679A;&#x786C;&#x5E01;&#xFF0C;&#x4F7F;&#x5176;&#x548C;&#x7B49;&#x4E8E;&#x7ED9;&#x5B9A;&#x7684;&#x503C;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x70B9;&#x53EA;&#x6709;&#x4E00;&#x884C;&#x8F93;&#x5165;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6570;N&#xFF08;&lt;=100000&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x662F;N&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x5728;[1,10000]&#x4E4B;&#x95F4;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x8F93;&#x51FA;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x8FC7;&#x4E00;&#x6B21;&#x7684;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7684;&#x8BDD;&#xFF0C;&#x8F93;&#x51FA;None&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x6709;&#x4E24;&#x4E2A;&#x89E3;&#x6CD5;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x7528;&#x54C8;&#x5E0C;&#xFF0C;&#x6216;&#x8005;&#x4F7F;&#x7528;&#x67E5;&#x627E;&#x3002;</p><h2 id="&#x54C8;&#x5E0C;&#x4EE3;&#x7801;">&#x54C8;&#x5E0C;&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> coins[<span class="number">10010</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (coins[i]&amp;&amp;coins[M-i])       <span class="comment">//&#x5982;&#x679C;&#x6070;&#x597D;&#x6709;&#x8FD9;&#x4E24;&#x679A;&#x786C;&#x5E01;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (i!=M-i)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (coins[i]&gt;=<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (i == M)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;No Solution&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; M - i;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;2.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; value;</span><br><span class="line">        coins[value]++;</span><br><span class="line">    }</span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x67E5;&#x627E;&#x4EE3;&#x7801;">&#x67E5;&#x627E;&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; coins;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    sort(coins.begin(), coins.end());</span><br><span class="line">    <span class="keyword">int</span> j = N - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;j; )</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (coins[i] + coins[j] == M)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; coins[i] &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; coins[j];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (coins[i] + coins[j] &gt; M)</span><br><span class="line">            j--;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            i++;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;No Solution&quot;</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    coins.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; coins[i];</span><br><span class="line">    }</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> Hash散列 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1041 Be Unique (20)</title>
      <link href="//posts/972ce7ff/"/>
      <url>//posts/972ce7ff/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1041" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x627E;&#x51FA;&#x4E00;&#x5217;&#x6570;&#x5B57;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x8FC7;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x70B9;&#x53EA;&#x6709;&#x4E00;&#x884C;&#x8F93;&#x5165;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x6570;N&#xFF08;&lt;=100000&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x662F;N&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x5728;[1,10000]&#x4E4B;&#x95F4;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x8F93;&#x51FA;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x8FC7;&#x4E00;&#x6B21;&#x7684;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7684;&#x8BDD;&#xFF0C;&#x8F93;&#x51FA;None&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x4F7F;&#x7528;&#x54C8;&#x5E0C;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> input[<span class="number">100001</span>];</span><br><span class="line"><span class="keyword">int</span> countNumber[<span class="number">100001</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        countNumber[input[i]]++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (countNumber[input[i]] == <span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; input[i];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;None&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; input[i];</span><br><span class="line">    }</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> Hash散列 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1040 Longest Symmetric String (25)</title>
      <link href="//posts/e02bd769/"/>
      <url>//posts/e02bd769/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1040" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6C42;&#x5176;&#x6700;&#x957F;&#x7684;&#x5BF9;&#x79F0;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#xFF0C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;1000&#x7684;&#x975E;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x8F93;&#x51FA;&#x5176;&#x6700;&#x957F;&#x7684;&#x5BF9;&#x79F0;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x6709;&#x4E24;&#x79CD;&#x7B97;&#x6CD5;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><ol type="1"><li>&#x52A8;&#x6001;&#x89C4;&#x5212;&#x53BB;&#x89E3;&#x3002;</li><li>&#x4EE5;&#x4E00;&#x4E2A;&#x70B9;&#x4E3A;&#x4E2D;&#x5FC3;&#xFF0C;&#x6C42;&#x5176;&#x5DE6;&#x8FB9;&#x548C;&#x53F3;&#x8FB9;&#x76F8;&#x7B49;&#x5B57;&#x7B26;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x6CE8;&#x610F;&#x5206;&#x5947;&#x6570;&#x548C;&#x5076;&#x6570;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x3002;</li></ol><h2 id="&#x5224;&#x65AD;&#x5DE6;&#x53F3;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x76F8;&#x7B49;&#x7684;&#x601D;&#x8DEF;">&#x5224;&#x65AD;&#x5DE6;&#x53F3;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x76F8;&#x7B49;&#x7684;&#x601D;&#x8DEF;</h2><p>&#x770B;&#x4EE3;&#x7801;&#x5373;&#x53EF;&#xFF0C;&#x6CE8;&#x610F;&#x5206;&#x5947;&#x6570;&#x548C;&#x5076;&#x6570;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x5206;&#x522B;&#x8BA8;&#x8BBA;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> len1, len2, length = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        len1 = len2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i-len1&gt;=<span class="number">0</span>&amp;&amp;i+len1&lt;str.length()&amp;&amp;str[i-len1]==str[i+len1])<span class="comment">//&#x957F;&#x5EA6;&#x4E3A;&#x5947;&#x6570;</span></span><br><span class="line">        {</span><br><span class="line">            len1++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (i-len2&gt;=<span class="number">0</span>&amp;&amp;i+len2+<span class="number">1</span>&lt;str.length()&amp;&amp;str[i-len2]==str[i+len2+<span class="number">1</span>])</span><br><span class="line">        {</span><br><span class="line">            len2++;</span><br><span class="line">        }</span><br><span class="line">        length = max(length,max(<span class="number">2</span> * len1 - <span class="number">1</span>, <span class="number">2</span> * len2));</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; length;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    getline(<span class="built_in">cin</span>, str);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x601D;&#x8DEF;">&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x601D;&#x8DEF;</h2><p>dp[i][j]&#x8868;&#x793A;s[i]&#x5230;s[j]&#x6240;&#x8868;&#x793A;&#x7684;&#x5B57;&#x4E32;&#x662F;&#x5426;&#x662F;&#x56DE;&#x6587;&#x5B57;&#x4E32;&#x3002;&#x53EA;&#x6709;0&#x548C;1</p><p>&#x9012;&#x63A8;&#x65B9;&#x7A0B;&#xFF1A;</p><ol type="1"><li>&#x5F53;str[i] == str[j] : dp[i][j] = dp[i+1][j-1]</li><li>&#x5F53;str[i] != str[j] : dp[i][j] =0</li><li>&#x8FB9;&#x754C;&#xFF1A;dp[i][i] = 1, dp[i][i+1] = (str[i] == str[i+1]) ? 1 : 0</li></ol><p>&#x9996;&#x5148;&#x521D;&#x59CB;&#x5316;dp[i][i] = 1, dp[i][i+1]&#xFF0C;&#x628A;&#x957F;&#x5EA6;&#x4E3A;1&#x548C;2&#x7684;&#x90FD;&#x521D;&#x59CB;&#x5316;&#x597D;&#xFF0C;&#x7136;&#x540E;&#x5F00;&#x59CB;&#x4E0D;&#x65AD;&#x9012;&#x63A8;&#x5373;&#x53EF;&#x3002;</p><h2 id="&#x4EE3;&#x7801;-1">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="keyword">int</span> length = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">bool</span> dp[<span class="number">1010</span>][<span class="number">1010</span>];<span class="comment">//str[i]~str[j]&#x662F;&#x5426;&#x5BF9;&#x79F0;&#xFF0C;1&#x662F;&#xFF0C;0&#x4E0D;&#x662F;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n = str.size();</span><br><span class="line">    <span class="comment">//&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        dp[i][i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;n<span class="number">-1</span>&amp;&amp;str[i]==str[i+<span class="number">1</span>])</span><br><span class="line">        {</span><br><span class="line">            dp[i][i + <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            length = <span class="number">2</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i]==str[j]&amp;&amp;dp[j+<span class="number">1</span>][i<span class="number">-1</span>]==<span class="literal">true</span>)</span><br><span class="line">            {</span><br><span class="line">                dp[j][i] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (i - j + <span class="number">1</span> &gt; length)</span><br><span class="line">                    length = i - j + <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; length;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    getline(<span class="built_in">cin</span>, str);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Is PAT&amp;TAP symmetric?</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">tgoqkicaklpnpvj cglvlv vbclejjjh mtpqtspfspgtw bjzsvfjmokqkdikbaqlel utlu wmeihwob wduecohzqmlpntvkkpoandwx ohyzkvhtvppfwrjsqwfkiqmke ouhuo ekmqikfwqsjrwfppvthxeihmbiqgacovhpafhrbvwdscizzwjqoqbdyjoqdknrbjyulioxjpcuc  ggpaknuqctldclgxvyqfkietobbszlhs</span><br><span class="line"></span><br><span class="line">&#x5E94;&#x8BE5;&#x8F93;&#x51FA;</span><br><span class="line"><span class="number">45</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1037 Magic Coupon (25)</title>
      <link href="//posts/310ed40d/"/>
      <url>//posts/310ed40d/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1037" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x6765;&#x81EA;&#x706B;&#x661F;&#x7684;&#x9B54;&#x6CD5;&#x8D34;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4F18;&#x60E0;&#x5238;&#x7684;&#x6570;&#x91CF;NC&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x5185;&#x6709;NC&#x4E2A;&#x6574;&#x6570;&#x3002;</p><p>&#x7B2C;&#x4E09;&#x884C;&#x662F;&#x4EA7;&#x54C1;&#x7684;&#x6570;&#x91CF;NP&#xFF0C;&#x7B2C;&#x56DB;&#x884C;&#x5185;&#x6709;NP&#x4E2A;&#x6574;&#x6570;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x8F93;&#x51FA;&#x80FD;&#x83B7;&#x5F97;&#x7684;&#x6700;&#x5927;&#x91D1;&#x989D;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#xFF0C;&#x5206;4&#x4E2A;&#x90E8;&#x5206;&#xFF0C;NC&#x4E2D;&#x6B63;&#x6570;&#x548C;&#x8D1F;&#x6570;&#xFF0C;NP&#x4E2D;&#x6B63;&#x6570;&#x548C;&#x8D1F;&#x6570;&#x3002;</p><p>&#x6B63;&#x6570;&#x4E0E;&#x6B63;&#x6570;&#x76F8;&#x4E58;&#xFF0C;&#x8D1F;&#x6570;&#x4E0E;&#x8D1F;&#x6570;&#x76F8;&#x4E58;&#xFF0C;&#x6700;&#x540E;&#x7ED3;&#x679C;&#x6C42;&#x548C;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> NC, NP;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>&gt;vPnega;<span class="comment">//P&#x4E2D;&#x7684;&#x8D1F;&#x6570;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>&gt;vCnega;<span class="comment">//C&#x4E2D;&#x7684;&#x8D1F;&#x6570;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>&gt;vPposi;<span class="comment">//P&#x4E2D;&#x7684;&#x6B63;&#x6570;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>&gt;vCposi;<span class="comment">//C&#x4E2D;&#x7684;&#x6B63;&#x6570;</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    sort(vPposi.begin(), vPposi.end());</span><br><span class="line">    sort(vCposi.begin(), vCposi.end());</span><br><span class="line">    sort(vPnega.begin(), vPnega.end());</span><br><span class="line">    sort(vCnega.begin(), vCnega.end());</span><br><span class="line">    <span class="keyword">int</span> j = vCposi.size() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = vPposi.size()<span class="number">-1</span>; i &gt;=<span class="number">0</span>&amp;&amp;j&gt;=<span class="number">0</span>; i--,j--)</span><br><span class="line">    {</span><br><span class="line">        sum += vPposi[i] * vCposi[j];</span><br><span class="line">    }</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; vPnega.size() &amp;&amp; j &lt;vCnega.size(); i++, j++)</span><br><span class="line">    {</span><br><span class="line">        sum += vPnega[i] * vCnega[j];</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; sum;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;1.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; NC;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> input;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NC; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; input;</span><br><span class="line">        <span class="keyword">if</span> (input &gt; <span class="number">0</span>)</span><br><span class="line">            vCposi.push_back(input);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (input &lt; <span class="number">0</span>)</span><br><span class="line">            vCnega.push_back(input);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; NP;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NP; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; input;</span><br><span class="line">        <span class="keyword">if</span> (input &gt; <span class="number">0</span>)</span><br><span class="line">            vPposi.push_back(input);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (input &lt; <span class="number">0</span>)</span><br><span class="line">            vPnega.push_back(input);</span><br><span class="line">    }</span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">-1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">7</span> <span class="number">6</span> <span class="number">-2</span> <span class="number">-3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1036 Boys vs Girls (25)</title>
      <link href="//posts/4609e49b/"/>
      <url>//posts/4609e49b/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1036" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x6C42;&#x6210;&#x7EE9;&#x6700;&#x597D;&#x7684;&#x5973;&#x751F;&#x548C;&#x6210;&#x7EE9;&#x6700;&#x5DEE;&#x7684;&#x7537;&#x751F;&#x4E4B;&#x95F4;&#x7684;&#x5206;&#x6570;&#x5DEE;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x70B9;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x662F;&#x4E00;&#x4E2A;N&#xFF0C;&#x63A5;&#x7740;&#x662F;N&#x884C;&#x5B66;&#x751F;&#x7684;&#x4FE1;&#x606F;&#x3002;</p><p>&#x6BCF;&#x884C;&#x5305;&#x62EC; &#x5B66;&#x751F;&#x59D3;&#x540D;&#xFF0C;&#x6027;&#x522B;&#xFF08;F/M&#xFF09;&#xFF0C;ID&#xFF0C;&#x6210;&#x7EE9;&#x3002;</p><p>ID&#x4E3A;&#x4E0D;&#x8D85;&#x8FC7;10&#x4E2A;&#x5B57;&#x7B26;&#x4E14;&#x6CA1;&#x6709;&#x7A7A;&#x683C;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x6210;&#x7EE9;&#x5728;0~100&#x4E4B;&#x95F4;&#xFF0C;&#x4E14;&#x4FDD;&#x8BC1;&#x4E92;&#x4E0D;&#x76F8;&#x540C;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x6BCF;&#x4E2A;&#x8F93;&#x51FA;&#x5305;&#x62EC;&#x4E09;&#x884C;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x4E3A;&#x6210;&#x7EE9;&#x6700;&#x9AD8;&#x7684;&#x5973;&#x751F;(Female)&#x7684;&#x59D3;&#x540D;&#x548C;ID&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x662F;&#x6210;&#x7EE9;&#x6700;&#x4F4E;&#x7684;&#x7537;&#x751F;&#xFF08;Male&#xFF09;&#x7684;&#x59D3;&#x540D;&#x548C;ID&#xFF0C;&#x7B2C;&#x4E09;&#x884C;&#x662F; <span class="math inline">\(grade\_F\)</span> - <span class="math inline">\(gende\_M\)</span> &#x3002;</p><p>&#x5982;&#x679C;&#x67D0;&#x79CD;&#x5B66;&#x751F;&#x4FE1;&#x606F;&#x7F3A;&#x5931;&#xFF0C;&#x5728;&#x5BF9;&#x5E94;&#x884C;&#x8F93;&#x51FA;Absent&#xFF0C;&#x7136;&#x540E;&#x5728;&#x7B2C;&#x4E09;&#x884C;&#x8F93;&#x51FA;NA&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x7528;sort&#x6392;&#x5E8F;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">char</span> gender;</span><br><span class="line">    <span class="built_in">string</span> ID;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">}Student;</span><br><span class="line"><span class="built_in">vector</span>&lt;Student&gt; male, female;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Student a, Student b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.gender == <span class="string">&apos;M&apos;</span>)</span><br><span class="line">        <span class="keyword">return</span> a.score &lt; b.score;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.score &gt; b.score;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    sort(male.begin(),male.end(),cmp);</span><br><span class="line">    sort(female.begin(), female.end(), cmp);</span><br><span class="line">    <span class="keyword">if</span> (female.size())</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; female[<span class="number">0</span>].name &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; female[<span class="number">0</span>].ID &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Absent&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span>(male.size())</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; male[<span class="number">0</span>].name &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; male[<span class="number">0</span>].ID &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Absent&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span> (female.size() &amp;&amp; male.size())</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; female[<span class="number">0</span>].score - male[<span class="number">0</span>].score;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NA&quot;</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;2.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    Student input;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; input.name &gt;&gt; input.gender &gt;&gt; input.ID &gt;&gt; input.score;</span><br><span class="line">        <span class="keyword">if</span> (input.gender == <span class="string">&apos;M&apos;</span>)</span><br><span class="line">            male.push_back(input);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            female.push_back(input);</span><br><span class="line">    }</span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line">Joe M Math990112 <span class="number">89</span></span><br><span class="line">Mike M CS991301 <span class="number">100</span></span><br><span class="line">Mary F EE990830 <span class="number">95</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">Jean M AA980920 <span class="number">60</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 查找 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1033 To Fill or Not to Fill (25)</title>
      <link href="//posts/36631014/"/>
      <url>//posts/36631014/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1033" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x8F66;&#x5728;&#x9AD8;&#x901F;&#x8DEF;&#x4E0A;&#x8DD1;&#xFF0C;&#x7531;&#x4E8E;&#x6CB9;&#x7BB1;&#x5BB9;&#x91CF;&#x6709;&#x9650;&#xFF0C;&#x9700;&#x8981;&#x5224;&#x65AD;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x52A0;&#x6CB9;&#xFF0C;&#x52A0;&#x591A;&#x5C11;&#x3002;&#x6C42;&#x6700;&#x7701;&#x94B1;&#x7684;&#x65B9;&#x5F0F;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x7B2C;&#x4E00;&#x884C;&#x6709;4&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x6CB9;&#x7BB1;&#x7684;&#x6700;&#x5927;&#x5BB9;&#x91CF;&#xFF0C;&#x8DDD;&#x79BB;&#xFF0C;&#x5E73;&#x5747;&#x6BCF;&#x5355;&#x4F4D;&#x6C7D;&#x6CB9;&#x53EF;&#x4EE5;&#x8DD1;&#x7684;&#x91CC;&#x7A0B;&#x6570;&#xFF0C;&#x52A0;&#x6CB9;&#x7AD9;&#x7684;&#x6570;&#x76EE;N&#x3002;</p><p>&#x7136;&#x540E;&#x662F;N&#x884C;&#xFF0C;&#x6BCF;&#x4E00;&#x884C;&#x5305;&#x62EC;&#x4E00;&#x5BF9;&#x975E;&#x8D1F;&#x6570;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x6C7D;&#x6CB9;&#x4EF7;&#x683C;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x8DDD;&#x79BB;&#x51FA;&#x53D1;&#x70B9;&#x7684;&#x8DDD;&#x79BB;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x5047;&#x8BBE;&#x4E00;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x90AE;&#x7BB1;&#x662F;&#x7A7A;&#x7684;&#x3002;</p><p>&#x8F93;&#x51FA;&#x6700;&#x4F4E;&#x82B1;&#x8D39;&#x91D1;&#x989D;&#xFF0C;&#x4FDD;&#x7559;&#x4E24;&#x4F4D;&#x5C0F;&#x6570;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x80FD;&#x8FBE;&#x5230;&#x76EE;&#x7684;&#x5730;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x80FD;&#x8DD1;&#x7684;&#x6700;&#x8FDC;&#x8DDD;&#x79BB;&#xFF0C;&#x4FDD;&#x7559;&#x4E24;&#x4F4D;&#x5C0F;&#x6570;&#x3002;</p><h2 id="&#x7C7B;&#x4F3C;&#x9898;&#x76EE;">&#x7C7B;&#x4F3C;&#x9898;&#x76EE;</h2><p><a href="http://poj.org/problem?id=2431" target="_blank" rel="noopener">POJ2431</a></p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><ol type="1"><li>&#x7531;&#x4E8E;&#x4E00;&#x5F00;&#x59CB;&#x6CA1;&#x6CB9;&#xFF0C;&#x6240;&#x4EE5;&#x6240;&#x6709;&#x7684;&#x52A0;&#x6CB9;&#x7AD9;&#x5FC5;&#x987B;&#x5F97;&#x6709;&#x8DDD;&#x79BB;&#x4E3A;0&#x7684;&#xFF0C;&#x5426;&#x5219;&#x54EA;&#x4E5F;&#x53BB;&#x4E0D;&#x4E86;&#x3002;</li><li>&#x6700;&#x540E;&#x6CB9;&#x7BB1;&#x4E0D;&#x5269;&#x6CB9;&#x3002;</li><li>&#x5BFB;&#x627E;&#x6BD4;&#x5F53;&#x524D;&#x52A0;&#x6CB9;&#x7AD9;&#x8DDD;&#x79BB;&#x8FDC;&#x4E14;&#x80FD;&#x591F;&#x5230;&#x8FBE;&#x7684;&#x52A0;&#x6CB9;&#x7AD9;&#xFF0C;&#x5224;&#x65AD;&#x8FD9;&#x4E9B;&#x52A0;&#x6CB9;&#x7AD9;&#x7684;&#x6CB9;&#x4EF7;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#x4E86;&#x66F4;&#x4F4E;&#x7684;&#x4EF7;&#x683C;&#xFF0C;&#x5C31;&#x53EA;&#x52A0;&#x521A;&#x597D;&#x5230;&#x90A3;&#x4E2A;&#x52A0;&#x6CB9;&#x7AD9;&#x7684;&#x6CB9;&#x3002;</li><li>&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#x66F4;&#x4F4E;&#x7684;&#xFF0C;&#x5C31;&#x627E;&#x6CB9;&#x4EF7;&#x5C3D;&#x53EF;&#x80FD;&#x4F4E;&#x7684;&#x52A0;&#x6CB9;&#x7AD9;&#xFF0C;&#x5728;&#x5F53;&#x524D;&#x52A0;&#x6CB9;&#x7AD9;&#x52A0;&#x6EE1;&#x6CB9;&#x4E4B;&#x540E;&#x8DD1;&#x8FC7;&#x53BB;&#x3002;</li></ol><h2 id="tips">Tips</h2><p>&#x4E00;&#x822C;&#x800C;&#x8A00;&#xFF0C;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#xFF0C;&#x5F80;&#x5F80;&#x628A;&#x7EC8;&#x70B9;&#x4E5F;&#x8BBE;&#x7F6E;&#x4E3A;&#x52A0;&#x6CB9;&#x7AD9;.</p><h2 id="bug">Bug</h2><p>PAT&#x4E0A;&#x9762;&#x7684;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x4E0D;&#x5B8C;&#x5584;&#xFF0C;&#x56E0;&#x6B64;&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x6709;bug&#x7684;&#x4EE3;&#x7801;&#x80FD;AC&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> Cmax, N;</span><br><span class="line"><span class="keyword">double</span> D, avg;</span><br><span class="line"><span class="keyword">int</span> sum, run;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">station</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">double</span> price;</span><br><span class="line">    <span class="keyword">double</span> distance;</span><br><span class="line">}Station;</span><br><span class="line"><span class="built_in">vector</span>&lt;Station&gt; sta;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Station a, Station b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.distance &lt; b.distance;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    sort(sta.begin(), sta.end(), cmp);  <span class="comment">//&#x6309;&#x4ECE;&#x8FDB;&#x5230;&#x8FDC;&#x8FDB;&#x884C;&#x6392;&#x5E8F;</span></span><br><span class="line">    <span class="comment">//&#x4E24;&#x79CD;&#x7279;&#x6B8A;&#x60C5;&#x51B5;</span></span><br><span class="line">    <span class="keyword">if</span> (sta[<span class="number">0</span>].distance != <span class="number">0</span>)                  </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;The maximum travel distance = 0.00&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> location = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> arrive = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">double</span> cost = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> gas = <span class="number">0</span>;             <span class="comment">//&#x8868;&#x793A;&#x521D;&#x59CB;&#x6709;&#x591A;&#x5C11;&#x6CB9;</span></span><br><span class="line">    <span class="keyword">while</span> (!arrive)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> findcheap = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">double</span> cheapest = sta[location].price;</span><br><span class="line">        <span class="keyword">int</span> next=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">double</span> minprice = <span class="number">100000000</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = location+<span class="number">1</span>; i&lt;N&amp;&amp;sta[i].distance&lt;=sta[location].distance + Cmax*avg&amp;&amp;sta[i].distance&lt;=D; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (sta[i].price &lt; minprice)</span><br><span class="line">            {</span><br><span class="line">                next = i;</span><br><span class="line">                minprice = sta[i].price;</span><br><span class="line">                <span class="keyword">if</span> (sta[i].price&lt;cheapest)</span><br><span class="line">                {</span><br><span class="line">                    findcheap = <span class="literal">true</span>;</span><br><span class="line">                    next = i;   <span class="comment">//&#x627E;&#x5230;&#x4FBF;&#x5B9C;&#x7684;&#xFF0C;&#x8DD1;&#x5230;i&#x8FD9;&#x91CC;</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (findcheap)</span><br><span class="line">        {</span><br><span class="line">            cost += ((sta[next].distance - sta[location].distance) / avg-gas) * sta[location].price;</span><br><span class="line">            gas = <span class="number">0</span>;</span><br><span class="line">            location = next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (next!=<span class="number">-1</span>|| sta[location].distance + Cmax*avg &gt;= D)<span class="comment">//&#x81F3;&#x5C11;&#x80FD;&#x5230;&#x4E00;&#x4E2A;&#x7AD9;&#xFF0C;&#x4E0D;&#x81F3;&#x4E8E;&#x6CA1;&#x6CB9;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (sta[location].distance+Cmax*avg&gt;=D)<span class="comment">//&#x591F;&#x4E86;</span></span><br><span class="line">            {</span><br><span class="line">                arrive = <span class="literal">true</span>;</span><br><span class="line">                cost += (D - sta[location].distance) / avg*sta[location].price;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//&#x4E0D;&#x591F;</span></span><br><span class="line">            cost += (Cmax - gas) * sta[location].price;</span><br><span class="line">            gas = Cmax - (sta[next].distance - sta[location].distance) / avg;</span><br><span class="line">            location = next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">break</span>;          <span class="comment">//&#x5230;&#x4E0D;&#x4E86;</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (arrive)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; cost;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;The maximum travel distance = &quot;</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; sta[location].distance + Cmax*avg;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;3.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="comment">//Cmax&#x8868;&#x793A;&#x6CB9;&#x7BB1;&#x6700;&#x5927;&#x5BB9;&#x91CF;&#xFF0C;D&#x8868;&#x793A;&#x76F8;&#x8DDD;&#x8DDD;&#x79BB;&#xFF0C;avg&#x8868;&#x793A;&#x5E73;&#x5747;&#x6BCF;&#x5347;&#x6CB9;&#x8DD1;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;N&#x8868;&#x793A;&#x52A0;&#x6CB9;&#x7AD9;&#x7684;&#x6570;&#x76EE;</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; Cmax &gt;&gt; D &gt;&gt; avg &gt;&gt; N;</span><br><span class="line">    sta.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; sta[i].price &gt;&gt; sta[i].distance;</span><br><span class="line">    }</span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">30</span> <span class="number">2</span> <span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">2145174067</span> <span class="number">0</span></span><br><span class="line"><span class="number">35</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="number">58</span> <span class="number">1</span></span><br><span class="line"><span class="number">67</span> <span class="number">1</span></span><br><span class="line"><span class="number">56</span> <span class="number">1</span></span><br><span class="line"><span class="number">42</span> <span class="number">1</span></span><br><span class="line"><span class="number">73</span> <span class="number">1</span></span><br><span class="line"><span class="number">19</span> <span class="number">0</span></span><br><span class="line"><span class="number">37</span> <span class="number">0</span></span><br><span class="line">&#x8F93;&#x51FA;&#x5E94;&#x8BE5;&#x4E3A;</span><br><span class="line"><span class="number">1.33</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">21</span> <span class="number">474</span> <span class="number">15</span> <span class="number">10</span></span><br><span class="line"><span class="number">1239036029</span> <span class="number">0</span></span><br><span class="line"><span class="number">37</span> <span class="number">27</span></span><br><span class="line"><span class="number">93</span> <span class="number">194</span></span><br><span class="line"><span class="number">28</span> <span class="number">27</span></span><br><span class="line"><span class="number">11</span> <span class="number">432</span></span><br><span class="line"><span class="number">29</span> <span class="number">182</span></span><br><span class="line"><span class="number">4</span> <span class="number">469</span></span><br><span class="line"><span class="number">63</span> <span class="number">401</span></span><br><span class="line"><span class="number">38</span> <span class="number">122</span></span><br><span class="line"><span class="number">40</span> <span class="number">136</span></span><br><span class="line">&#x8F93;&#x51FA;&#x5E94;&#x8BE5;&#x4E3A;</span><br><span class="line"><span class="number">2230265642.67</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1032 Sharing (25)</title>
      <link href="//posts/41642082/"/>
      <url>//posts/41642082/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1032" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x94FE;&#x8868;&#x904D;&#x5386;&#xFF0C;&#x6C42;&#x6700;&#x65E9;&#x7684;&#x516C;&#x5171;&#x8282;&#x70B9;&#x3002; <a id="more"></a> ## &#x8F93;&#x5165; &#x7B2C;&#x4E00;&#x884C;&#x4E09;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x5F00;&#x59CB;&#x8282;&#x70B9;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x5F00;&#x59CB;&#x8282;&#x70B9;&#xFF0C;&#x8282;&#x70B9;&#x7684;&#x4E2A;&#x6570;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x8F93;&#x51FA;&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x6700;&#x65E9;&#x7684;&#x516C;&#x5171;&#x8282;&#x70B9;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x8F93;&#x51FA;-1.</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x904D;&#x5386;&#x7B2C;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#x65F6;&#xFF0C;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x8BBE;&#x7F6E;&#x8BBF;&#x95EE;&#x4F4D;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x904D;&#x5386;&#x7B2C;&#x4E8C;&#x4E2A;&#x94FE;&#x8868;&#x65F6;&#xFF0C;&#x53D1;&#x73B0;&#x67D0;&#x4E00;&#x8282;&#x70B9;&#x5728;&#x7B2C;&#x4E00;&#x6B21;&#x904D;&#x5386;&#x4E2D;&#x88AB;&#x8BBF;&#x95EE;&#x8FC7;&#x4E86;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x8BE5;&#x8282;&#x70B9;&#x7684;&#x7F16;&#x53F7;&#xFF0C;&#x5982;&#x679C;&#x5230;&#x6700;&#x540E;&#x90FD;&#x6CA1;&#x6709;&#xFF0C;&#x5219;&#x8F93;&#x51FA;-1&#x3002;</p><h2 id="tips">Tips</h2><p>&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x65E0;&#x4EFB;&#x4F55;&#x4F5C;&#x7528;&#x3002;</p><p>&#x5982;&#x679C;&#x5730;&#x5740;&#x662F;00010&#xFF0C;&#x5219;&#x4E5F;&#x8981;&#x8F93;&#x51FA;5&#x4F4D;&#xFF0C;&#x4E5F;&#x5F97;&#x8F93;&#x51FA;00010&#x3002; ## &#x4EE3;&#x7801; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> node[<span class="number">100001</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">bool</span> visit[<span class="number">100001</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> startPoint1, startPoint2, N;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = startPoint1; i != <span class="number">-1</span>; i=node[i])</span><br><span class="line">        visit[i] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = startPoint2; i != <span class="number">-1</span>; i=node[i])</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (visit[i])</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d&quot;</span>, i);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        visit[i] = <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;2.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> addr, next;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; startPoint1 &gt;&gt; startPoint2 &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; addr &gt;&gt; ch &gt;&gt; next;</span><br><span class="line">        node[addr] = next;</span><br><span class="line">    }</span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">00001</span> <span class="number">00002</span> <span class="number">4</span></span><br><span class="line"><span class="number">00001</span> a <span class="number">10001</span></span><br><span class="line"><span class="number">10001</span> s <span class="number">-1</span></span><br><span class="line"><span class="number">00002</span> a <span class="number">10002</span></span><br><span class="line"><span class="number">10002</span> t <span class="number">-1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1029 Median (25)</title>
      <link href="//posts/cfadc84b/"/>
      <url>//posts/cfadc84b/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805466364755968" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x7ED9;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#x7684;&#x4E0A;&#x5347;&#x5E8F;&#x5217;&#xFF0C;&#x8981;&#x6C42;&#x627E;&#x5230;&#x4ED6;&#x4EEC;&#x7684;&#x4E2D;&#x4F4D;&#x6570;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x4F8B;&#xFF0C;&#x5305;&#x62EC;&#x4E24;&#x884C;&#xFF0C;&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x662F;&#x6574;&#x6570;N&#xFF0C;&#x8868;&#x793A;&#x8FD9;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x3002;&#x968F;&#x540E;&#x662F;N&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x6574;&#x6570;&#x90FD;&#x5728;long int &#x7684;&#x8303;&#x56F4;&#x5185;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x8F93;&#x51FA;&#x7ED9;&#x5B9A;&#x7684;&#x4E24;&#x884C;&#x7684;&#x4E2D;&#x4F4D;&#x6570;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><ol type="1"><li>&#xFF08;&#x5185;&#x5B58;&#x4F1A;&#x8D85;&#xFF09;&#x8F93;&#x5165;&#x5168;&#x90E8;&#x6570;&#x636E;&#xFF0C;&#x7528;vector<long int="">&#x5B58;&#x50A8;&#xFF0C;&#x7136;&#x540E;&#x8FDB;&#x884C;sort&#xFF0C;&#x968F;&#x540E;&#x8F93;&#x51FA;&#x4E2D;&#x4F4D;&#x6570;&#x3002;</long></li><li>&#x56E0;&#x4E3A;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#x662F;&#x6709;&#x5E8F;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x5148;&#x5C06;&#x6570;&#x7EC4;A&#x5B58;&#x4E0B;&#x6765;&#xFF0C;&#x5728;&#x4E0D;&#x65AD;&#x8BFB;&#x53D6;&#x6570;&#x7EC4;B&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8BB0;&#x5F55;&#x8FD9;&#x4E2A;&#x6570;&#x662F;&#x7B2C;&#x51E0;&#x4E2A;&#x6570;&#xFF0C;&#x5F53;&#x8FD9;&#x4E2A;&#x6570;&#x662F;&#x7B2C;(N+M+1)/2&#x4E2A;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8F93;&#x51FA;&#xFF0C;&#x5E76;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#x3002;</li><li>&#x82E5;&#x6570;&#x7EC4;A&#x67E5;&#x8BE2;&#x5B8C;&#x8FD8;&#x6CA1;&#x627E;&#x5230;&#x4E2D;&#x4F4D;&#x6570;&#xFF0C;&#x5219;&#x7EE7;&#x7EED;&#x4E0D;&#x65AD;&#x8BFB;&#x5165;&#x5E76;&#x8BB0;&#x5F55;&#x6570;&#x7EC4;B&#xFF08;&#x53EA;&#x8BB0;&#x5F55;&#x662F;&#x7B2C;&#x51E0;&#x4E2A;&#x6570;&#xFF09;&#x3002;</li><li>&#x82E5;&#x6570;&#x7EC4;B&#x8F93;&#x5165;&#x5E76;&#x67E5;&#x8BE2;&#x5B8C;&#x8FD8;&#x6CA1;&#x627E;&#x5230;&#x4E2D;&#x4F4D;&#x6570;&#xFF0C;&#x5219;&#x5728;A&#x4E2D;&#x641C;&#x5BFB;&#x3002;</li></ol><h2 id="tips">Tips</h2><ol type="1"><li>cin/cout&#x6BD4;scanf/printf&#x8017;&#x65F6;&#x66F4;&#x957F;&#xFF0C;&#x6211;&#x7B2C;&#x4E00;&#x6B21;&#x7528;&#x7684;cin/cout,&#x6D4B;&#x8BD5;&#x70B9;12&#x8D85;&#x65F6;&#x3002;</li><li>&#x4E0D;&#x80FD;&#x5C06;&#x6240;&#x6709;&#x7684;&#x6570;&#x5168;&#x90FD;&#x5B58;&#x4E0B;&#x6765;&#xFF0C;&#x5426;&#x5219;&#x5185;&#x5B58;&#x4F1A;&#x8D85;&#x9650;&#x3002;</li></ol><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> temp; <span class="keyword">int</span> num;</span><br><span class="line">    v.resize(N + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;temp);</span><br><span class="line">        num = min(temp, (<span class="keyword">long</span> <span class="keyword">int</span>)INT_MAX);</span><br><span class="line">        v[i] = num;</span><br><span class="line">    }</span><br><span class="line">    v[N] = INT_MAX;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; M;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;temp);</span><br><span class="line">        num = min(temp, (<span class="keyword">long</span> <span class="keyword">int</span>)INT_MAX);</span><br><span class="line">        <span class="keyword">while</span> (num &gt;= v[j] &amp;&amp; j &lt; N)</span><br><span class="line">        {</span><br><span class="line">            j++;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span> (cnt == (M + N + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[j - <span class="number">1</span>];</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="keyword">if</span> (cnt == (M + N + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; temp;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (cnt&lt;(M + N + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">    {</span><br><span class="line">        j++;</span><br><span class="line">        cnt++;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v[j - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;4.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x539F;&#x6765;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5185;&#x5B58;&#x4F1A;&#x8D85;&#x9650;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x8FD9;&#x4E2A;&#x5185;&#x5B58;&#x4F1A;&#x8D85;&#x9650;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">int</span>&gt;v;</span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    sort(v.begin(), v.end());</span><br><span class="line">    <span class="keyword">int</span> i = (v.size() - <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v[i];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;1.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    v.resize(N);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;temp);</span><br><span class="line">        v[i] = temp;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; M;</span><br><span class="line">    v.resize(N + M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = N; i &lt; M+N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>,&amp;temp);</span><br><span class="line">        v[i] = temp;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span></span><br><span class="line"><span class="number">5</span> <span class="number">9</span> <span class="number">10</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 中位数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1028 List Sorting (25)</title>
      <link href="//posts/b8aaf8dd/"/>
      <url>//posts/b8aaf8dd/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1028" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x6309;&#x7ED9;&#x5B9A;&#x8981;&#x6C42;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002; <a id="more"></a></p><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;<a href="../c61b8460">PAT1025</a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x7B2C;&#x4E00;&#x884C;&#x662F;N&#x548C;C&#xFF0C;N&#x662F;&#x8F93;&#x5165;&#x6570;&#x636E;&#x7684;&#x6761;&#x76EE;&#x6570;&#xFF0C;C&#x662F;&#x6392;&#x5E8F;&#x89C4;&#x5219;&#x3002;</p><p>C=1&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6309;&#x5B66;&#x751F;&#x6CE8;&#x518C;&#x53F7;&#x9012;&#x589E;&#x6392;&#x5E8F;&#x3002;<br>C=2&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6309;&#x5B66;&#x751F;&#x59D3;&#x540D;&#x975E;&#x9012;&#x51CF;&#x6392;&#x5E8F;&#x3002;<br>C=3&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6309;&#x5B66;&#x751F;&#x6210;&#x7EE9;&#x975E;&#x9012;&#x51CF;&#x6392;&#x5E8F;&#x3002;<br>&#x5728;C=2/C=3&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x59D3;&#x540D;/&#x6210;&#x7EE9;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x6309;&#x7167;&#x5B66;&#x53F7;&#x9012;&#x589E;&#x6392;&#x5E8F;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>ID &#x540D;&#x5B57; &#x6210;&#x7EE9;<br>&#x6BCF;&#x884C;&#x4E00;&#x4E2A;&#x5B66;&#x751F;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x9898;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x6392;&#x5E8F;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528;sort&#x51FD;&#x6570;&#x5373;&#x53EF;&#x3002;</p><h2 id="tips">Tips</h2><p>cin/cout&#x6BD4;scanf/printf&#x8017;&#x65F6;&#x66F4;&#x957F;&#x3002;&#x5982;&#x679C;&#x7528;cin/cout&#xFF0C;&#x5219;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x70B9;&#x4F1A;&#x8D85;&#x65F6;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> ID;</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">}Student;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;Student&gt; stu;</span><br><span class="line"><span class="keyword">int</span> n, c;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(Student a, Student b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.ID&lt;b.ID;<span class="comment">//ID&#x9012;&#x589E;&#x6392;&#x5E8F;</span></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(Student a, Student b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> temp = <span class="built_in">strcmp</span>(a.name, b.name);</span><br><span class="line">    <span class="keyword">if</span> (temp)</span><br><span class="line">        <span class="keyword">return</span> temp &lt;= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.ID&lt;b.ID;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(Student a, Student b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.score != b.score)</span><br><span class="line">        <span class="keyword">return</span> a.score &lt; b.score;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.ID&lt;b.ID;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; c;</span><br><span class="line">    stu.resize(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %s %d&quot;</span>, &amp;stu[i].ID, stu[i].name, &amp;stu[i].score);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">switch</span> (c)</span><br><span class="line">    {</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        sort(stu.begin(),stu.end(), cmp1);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        sort(stu.begin(), stu.end(), cmp2);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        sort(stu.begin(), stu.end(), cmp3);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = stu.begin(); i != stu.end(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%06d %s %d\n&quot;</span>, i-&gt;ID, i-&gt;name, i-&gt;score);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span> <span class="number">2</span></span><br><span class="line"><span class="number">000007</span> James <span class="number">87</span></span><br><span class="line"><span class="number">000001</span> James <span class="number">81</span></span><br><span class="line"><span class="number">000002</span> James <span class="number">82</span></span><br><span class="line"><span class="number">000003</span> James <span class="number">83</span></span><br><span class="line"><span class="number">000004</span> James <span class="number">84</span></span><br><span class="line"><span class="number">000005</span> James <span class="number">85</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1025 PAT Ranking (25)</title>
      <link href="//posts/c61b8460/"/>
      <url>//posts/c61b8460/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1025" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>PAT&#x8003;&#x8BD5;&#x5728;&#x597D;&#x51E0;&#x4E2A;&#x5730;&#x65B9;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#xFF0C;&#x6D4B;&#x8BD5;&#x540E;&#x5C31;&#x8FDB;&#x884C;&#x6392;&#x540D;&#xFF0C;&#x8981;&#x6C42;&#x4F60;&#x7EDF;&#x8BA1;&#x6392;&#x540D;&#x3002; <a id="more"></a></p><h2 id="&#x8F93;&#x5165;">&#x8F93;&#x5165;</h2><p>&#x7B2C;&#x4E00;&#x4E2A;N&#x662F;&#x6D4B;&#x8BD5;&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x6B64;&#x540E;&#x6709;N&#xFF08;&lt;=100&#xFF09;&#x4E2A;&#x5217;&#x8868;&#xFF0C;&#x6BCF;&#x4E2A;&#x5217;&#x8868;&#x5305;&#x62EC;&#x6B63;&#x6574;&#x6570;K&#xFF08;&lt;=300&#xFF09;&#x8868;&#x793A;&#x88AB;&#x6D4B;&#x8BD5;&#x8005;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x968F;&#x540E;K&#x884C;&#xFF0C;&#x6BCF;&#x4E00;&#x884C;&#x6709;&#x4E00;&#x4E2A;13&#x4F4D;&#x7684;&#x6CE8;&#x518C;&#x7F16;&#x53F7;&#x548C;&#x5F97;&#x5206;&#x3002;</p><h2 id="&#x8F93;&#x51FA;">&#x8F93;&#x51FA;</h2><p>&#x683C;&#x5F0F;&#xFF1A; &#x6CE8;&#x518C;&#x53F7;&#xFF0C;&#x6700;&#x7EC8;&#x6392;&#x540D;&#xFF0C;&#x8003;&#x573A;&#x53F7;&#xFF0C;&#x5728;&#x672C;&#x8003;&#x573A;&#x7684;&#x6392;&#x540D;&#x3002;&#x8003;&#x573A;&#x7F16;&#x53F7;&#x4ECE;1~n&#x8FDB;&#x884C;&#x7F16;&#x53F7;&#x3002;</p><p>&#x8981;&#x6C42;&#xFF1A;&#x6309;&#x6700;&#x7EC8;&#x6392;&#x5E8F;&#x7684;&#x975E;&#x964D;&#x5E8F;&#x5217;&#xFF0C;&#x5177;&#x6709;&#x76F8;&#x540C;&#x6210;&#x7EE9;&#x7684;&#x4EBA;&#x5FC5;&#x987B;&#x6392;&#x540D;&#x76F8;&#x540C;&#x3002;&#x5982;&#x679C;&#x6210;&#x7EE9;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x6309;&#x7167;&#x62A5;&#x540D;&#x53F7;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F;&#x3002;</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x6392;&#x5E8F;&#xFF0C;&#x5C40;&#x90E8;&#x6392;&#x5E8F;&#x3002;</p><h2 id="tips">Tips</h2><p>32&#x4F4D;C/C++&#x4E2D;&#xFF0C;int&#xFF0C;long int&#xFF0C;long long int&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x5982;&#x4E0B;&#xFF1A;</p><p>unsigned int 0&#xFF5E;4294967295</p><p>int 2147483648&#xFF5E;2147483647</p><p>unsigned long 0&#xFF5E;4294967295</p><p>long 2147483648&#xFF5E;2147483647</p><p>long long&#x7684;&#x6700;&#x5927;&#x503C;&#xFF1A;9223372036854775807</p><p>long long&#x7684;&#x6700;&#x5C0F;&#x503C;&#xFF1A;-9223372036854775808</p><p>unsigned long long&#x7684;&#x6700;&#x5927;&#x503C;&#xFF1A;1844674407370955161</p><p>&#x56E0;&#x6B64;13&#x4F4D;&#x7684;&#x62A5;&#x540D;&#x53F7;&#x662F;&#x53EF;&#x4EE5;&#x7528;long long int &#x6765;&#x8FDB;&#x884C;&#x4FDD;&#x5B58;&#x7684;&#x3002;&#x5176;&#x5B9E;<a href="https://www.liuchuo.net/archives/2180" target="_blank" rel="noopener">&#x67F3;&#x5A7C;&#x7684;&#x535A;&#x5BA2;</a>&#x4E2D;&#x4E5F;&#x662F;&#x7528;&#x7684;long long int&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x6211;&#x8FD9;&#x91CC;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#xFF0C;&#x6211;&#x7528;long long int &#xFF0C;&#x5219;&#x6D4B;&#x8BD5;&#x70B9;3&#xFF0C;&#x5373;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#xFF0C;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x725B;&#x5BA2;&#x7F51;&#x4E0A;&#x662F;&#x80FD;&#x901A;&#x8FC7;&#x7684;&#x3002; &#x7528;string&#x5219;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">//long long int num;//&#x4E0D;&#x77E5;&#x9053;&#x54EA;&#x91CC;&#x4E0D;&#x5BF9;&#xFF0C;&#x5982;&#x679C;&#x7528; long long int &#x5219;&#x6D4B;&#x8BD5;&#x70B9;3&#x4F1A;&#x7B54;&#x6848;&#x9519;&#x8BEF;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x725B;&#x5BA2;&#x7F51;&#x4E0A;&#x662F;&#x5168;&#x5BF9;&#x7684;</span></span><br><span class="line">    <span class="built_in">string</span> num;</span><br><span class="line">    <span class="keyword">int</span> local_rank;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">    <span class="keyword">int</span> final_rank;</span><br><span class="line">    <span class="keyword">int</span> location;</span><br><span class="line">}Student;</span><br><span class="line"><span class="built_in">vector</span>&lt;Student&gt; stu;</span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Student &amp;a, <span class="keyword">const</span> Student &amp;b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.score != b.score)</span><br><span class="line">        <span class="keyword">return</span> a.score &gt; b.score;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.num &lt; b.num;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//int input_num;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; M;</span><br><span class="line">        <span class="keyword">int</span> length = stu.size();<span class="comment">//&#x4FDD;&#x5B58;&#x4E0A;&#x4E00;&#x6B21;&#x7684;&#x5927;&#x5C0F;</span></span><br><span class="line">        <span class="keyword">int</span> new_length = length + M;</span><br><span class="line">        stu.resize(length + M);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = length; j &lt; new_length; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; stu[j].num;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; stu[j].score;</span><br><span class="line">            stu[j].location = i + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        sort(stu.begin() + length, stu.end(), cmp);</span><br><span class="line">        stu[length].local_rank = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = length + <span class="number">1</span>; j &lt; new_length; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (stu[j - <span class="number">1</span>].score == stu[j].score)</span><br><span class="line">                stu[j].local_rank = stu[j - <span class="number">1</span>].local_rank;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                stu[j].local_rank = j - length + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    sort(stu.begin(), stu.end(), cmp);</span><br><span class="line">    stu[<span class="number">0</span>].final_rank = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; stu.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (stu[i - <span class="number">1</span>].score == stu[i].score)</span><br><span class="line">            stu[i].final_rank = stu[i - <span class="number">1</span>].final_rank;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            stu[i].final_rank = i + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; stu.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.size(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; stu[i].num &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; stu[i].final_rank &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; stu[i].location &lt;&lt; <span class="string">&apos; &apos;</span> &lt;&lt; stu[i].local_rank &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x6570;&#x636E;">&#x6D4B;&#x8BD5;&#x6570;&#x636E;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">1234026808810</span> <span class="number">93</span></span><br><span class="line"><span class="number">1234604135729</span> <span class="number">97</span></span><br><span class="line"><span class="number">1234707202308</span> <span class="number">90</span></span><br><span class="line"><span class="number">1234464735740</span> <span class="number">92</span></span><br><span class="line"><span class="number">1234096866161</span> <span class="number">93</span></span><br><span class="line"><span class="number">1234563439254</span> <span class="number">95</span></span><br><span class="line"><span class="number">1234665517583</span> <span class="number">90</span></span><br><span class="line"><span class="number">1234587155559</span> <span class="number">93</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">1234158282819</span> <span class="number">98</span></span><br><span class="line"><span class="number">1234695464275</span> <span class="number">100</span></span><br><span class="line"><span class="number">1234216099242</span> <span class="number">92</span></span><br><span class="line"><span class="number">1234953874157</span> <span class="number">96</span></span><br><span class="line"><span class="number">1234833082961</span> <span class="number">94</span></span><br><span class="line"><span class="number">1234954741173</span> <span class="number">93</span></span><br><span class="line"><span class="number">1234698042486</span> <span class="number">97</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">1234359915502</span> <span class="number">90</span></span><br><span class="line"><span class="number">1234462299800</span> <span class="number">92</span></span><br><span class="line"><span class="number">1234475059130</span> <span class="number">100</span></span><br><span class="line"><span class="number">1234373450093</span> <span class="number">91</span></span><br><span class="line"><span class="number">1234872093302</span> <span class="number">99</span></span><br><span class="line"><span class="number">1234421607748</span> <span class="number">100</span></span><br><span class="line"><span class="number">1234444203313</span> <span class="number">98</span></span><br><span class="line"><span class="number">1234441487675</span> <span class="number">90</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">1234825487256</span> <span class="number">99</span></span><br><span class="line"><span class="number">1234838520186</span> <span class="number">99</span></span><br><span class="line"><span class="number">1234625359404</span> <span class="number">99</span></span><br><span class="line"><span class="number">1234539728328</span> <span class="number">90</span></span><br><span class="line"><span class="number">1234482393613</span> <span class="number">91</span></span><br><span class="line"><span class="number">1234656113051</span> <span class="number">90</span></span><br><span class="line"><span class="number">1234493672093</span> <span class="number">93</span></span><br><span class="line"><span class="number">1234382973981</span> <span class="number">90</span></span><br><span class="line"><span class="number">1234477404316</span> <span class="number">92</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT-A-1024 Palindromic Number (25)</title>
      <link href="//posts/b11cb4f6/"/>
      <url>//posts/b11cb4f6/</url>
      <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;">&#x9898;&#x76EE;</h1><p><a href="https://www.patest.cn/contests/pat-a-practise/1024" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x6C42;&#x4E00;&#x4E2A;&#x6570;&#x5BF9;&#x5E94;&#x7684;&#x56DE;&#x6587;&#x6570;&#x3002;&#x6BD4;&#x5982;&#x8F93;&#x5165;67&#x3000;3&#x3002;&#x5373;&#x8981;&#x6C42;&#x662F;&#x5728;3&#x6B65;&#x4E4B;&#x5185;&#x627E;&#x5230;&#x56DE;&#x6587;&#x6570;&#x3002; <a id="more"></a></p><ol type="1"><li>67+76=143</li><li>143+341=484</li></ol><p>484&#x662F;&#x56DE;&#x6587;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x8F93;&#x51FA;484&#x3000;2</p><p>&#x8F93;&#x5165; 69&#x3000;3 1. 69+96=165 2. 165+561=726 3. 726+627=1353</p><p>&#x8FBE;&#x5230;&#x6B65;&#x6570;&#x9650;&#x5236;&#x8981;&#x6C42;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x662F;&#x4E0D;&#x662F;&#x56DE;&#x6587;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x8F93;&#x51FA;1353&#x3000;3</p><h1 id="&#x89E3;&#x9898;">&#x89E3;&#x9898;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x5927;&#x6570;&#x52A0;&#x6CD5;&#xFF0C;&#x6211;&#x7528;&#x7684;&#x662F;string&#xFF0C;&#x7528;vector&#x4E5F;&#x53EF;&#x3002;</p><h2 id="&#x5224;&#x65AD;&#x56DE;&#x6587;&#x6570;&#x7684;&#x65B9;&#x6CD5;">&#x5224;&#x65AD;&#x56DE;&#x6587;&#x6570;&#x7684;&#x65B9;&#x6CD5;</h2><p>&#x8BBE;&#x6709;string number &#x3002;&#x82E5;&#x5176;&#x9006;&#x7F6E;&#x548C;&#x5176;&#x672C;&#x8EAB;&#x76F8;&#x7B49;&#xFF0C;&#x5219;&#x8FD9;&#x4E2A;&#x6570;&#x662F;&#x56DE;&#x6587;&#x6570;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x5224;&#x65AD;&#x56DE;&#x6587;&#x6570;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x9006;&#x7F6E;&#xFF0C;&#x770B;&#x9006;&#x7F6E;&#x524D;&#x540E;&#x662F;&#x5426;&#x76F8;&#x7B49;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> num;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getsum</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> length = str.length();</span><br><span class="line">    <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">    {</span><br><span class="line">        num[i] = num[i] + str[i] + carry - <span class="string">&apos;0&apos;</span>;</span><br><span class="line">        carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (num[i]&gt;<span class="string">&apos;9&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            num[i] = num[i] - <span class="number">10</span>;</span><br><span class="line">            carry = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (carry)</span><br><span class="line">    {</span><br><span class="line">        num += <span class="string">&apos;1&apos;</span>;</span><br><span class="line">    }</span><br><span class="line">    reverse(num.begin(), num.end());</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        str = num;</span><br><span class="line">        reverse(str.begin(), str.end());<span class="comment">//str&#x662F;num&#x7684;&#x9006;&#x7F6E;</span></span><br><span class="line">        <span class="keyword">if</span> (str==num)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span> &lt;&lt; i;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        getsum(str);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span> &lt;&lt; n;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    solution();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PAT-A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> 算法 </tag>
            
            <tag> 回文数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>并查集</title>
      <link href="//posts/c517589e/"/>
      <url>//posts/c517589e/</url>
      <content type="html"><![CDATA[<h1 id="&#x6982;&#x8FF0;">&#x6982;&#x8FF0;</h1><p>&#x6211;&#x4E2A;&#x4EBA;&#x89C9;&#x5F97;&#x5E76;&#x67E5;&#x96C6;&#x66F4;&#x50CF;&#x662F;&#x6811;&#x7684;&#x7236;&#x6BCD;&#x8868;&#x793A;&#x6CD5;&#x3002;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x5224;&#x65AD;&#x56FE;&#x662F;&#x5426;&#x8FDE;&#x901A;&#x3002; <a id="more"></a></p><h1 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x5E76;&#x67E5;&#x96C6;</span></span><br><span class="line"><span class="keyword">int</span> par[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> deep[<span class="number">100</span>];</span><br><span class="line"><span class="comment">//&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        par[i] = i;</span><br><span class="line">        deep[i] = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x67E5;&#x8BE2;&#x6811;&#x7684;&#x6839;&#xFF0C;&#x5E76;&#x538B;&#x7F29;&#xFF0C;&#x9012;&#x5F52;&#x5199;&#x6CD5;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (par[x] == x)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> par[x] = find(par[x]);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//&#x975E;&#x9012;&#x5F52;&#x5B9E;&#x73B0;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> j,k=x;</span><br><span class="line">    <span class="keyword">while</span> (x!=par[x])</span><br><span class="line">        x = par[x];</span><br><span class="line">    <span class="keyword">while</span> (k!=x)</span><br><span class="line">    {</span><br><span class="line">        j = par[k];</span><br><span class="line">        par[k] = x;</span><br><span class="line">        k = j;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5408;&#x5E76;x&#x548C;y&#x6240;&#x5C5E;&#x7684;&#x96C6;&#x5408;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    x = find(x);</span><br><span class="line">    y = find(y);</span><br><span class="line">    <span class="keyword">if</span> (x == y)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (deep[x] &lt; deep[y])         <span class="comment">//&#x5982;&#x679C;y&#x7684;&#x6811;&#x66F4;&#x9AD8;&#xFF0C;&#x5219;x&#x5408;&#x5E76;&#x8FC7;&#x53BB;</span></span><br><span class="line">    {</span><br><span class="line">        par[x] = y;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>                                                     <span class="comment">//x&gt;=y</span></span><br><span class="line">    {</span><br><span class="line">        par[y] = x;</span><br><span class="line">        <span class="keyword">if</span> (deep[x]==deep[y])           <span class="comment">//&#x5982;&#x679C;&#x5F53;&#x524D;&#x4E24;&#x4E2A;&#x6811;&#x7B49;&#x9AD8;&#xFF0C;&#x5408;&#x5E76;&#x4E4B;&#x540E;&#x6DF1;&#x5EA6;+1</span></span><br><span class="line">        {</span><br><span class="line">            deep[x]++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//&#x5224;&#x65AD;x&#x548C;y&#x662F;&#x5426;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x5185;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">same</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> find(x) == find(y);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>快排为什么那么快</title>
      <link href="//posts/ae807e52/"/>
      <url>//posts/ae807e52/</url>
      <content type="html"><![CDATA[<h1 id="&#x603B;&#x8FF0;">&#x603B;&#x8FF0;</h1><p>&#x3000;&#x3000;&#x6709;&#x8BB8;&#x591A;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(nlog2n)&#x7684;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x4F46;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5FEB;&#x6392;&#xFF0C;&#x7406;&#x7531;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x3000;&#x3000;&#x8FD9;&#x4E9B;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x6267;&#x884C;&#x6B21;&#x6570;&#x7684;&#x591A;&#x9879;&#x5F0F;&#x6700;&#x9AD8;&#x6B21;&#x9879;&#x4E3A;X*nlog2n&#xFF0C;X&#x4E3A;&#x7CFB;&#x6570;&#xFF0C;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x7684;X&#x6700;&#x5C0F;&#x3002;&#x4ED6;&#x5728;&#x540C;&#x7EA7;&#x522B;&#x7684;&#x7B97;&#x6CD5;&#x4E2D;&#x662F;&#x6700;&#x597D;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x53EB;&#x5FEB;&#x6392;&#x3002; # &#x4E3A;&#x4EC0;&#x4E48;X&#x662F;&#x6700;&#x5C0F;&#x7684; &#x3000;&#x3000;&#x5176;&#x5B9E;&#x4E0A;&#x9762;&#x90A3;&#x53E5;&#x8BDD;&#xFF0C;&#x8BF4;&#x4E86;&#x548C;&#x6CA1;&#x8BF4;&#x6CA1;&#x4EC0;&#x4E48;&#x4E24;&#x6837;&#x3002;&#x672C;&#x8D28;&#x5728;&#x4E8E;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;X&#x662F;&#x6700;&#x5C0F;&#x7684;&#x3002; <a id="more"></a></p><p>&#x3000;&#x3000;&#x6392;&#x5E8F;&#x7684;&#x672C;&#x8D28;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x6765;&#x8868;&#x8FF0;&#xFF1A;&#x4E00;&#x7EC4;&#x672A;&#x6392;&#x5E8F;&#x7684;N&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x5B83;&#x4EEC;&#x4E00;&#x5171;&#x6709;N!&#x79CD;&#x91CD;&#x6392;&#xFF0C;&#x5176;&#x4E2D;&#x53EA;&#x6709;&#x4E00;&#x79CD;&#x6392;&#x5217;&#x662F;&#x6EE1;&#x8DB3;&#x9898;&#x610F;&#x7684;&#xFF08;&#x8B6C;&#x5982;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x6392;&#x5217;&#xFF09;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x6392;&#x5E8F;&#x95EE;&#x9898;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x4E00;&#x5171;&#x6709;N!&#x79CD;&#x3002;&#x4EFB;&#x4F55;&#x57FA;&#x4E8E;&#x6BD4;&#x8F83;&#x7684;&#x6392;&#x5E8F;&#x7684;&#x57FA;&#x672C;&#x64CD;&#x4F5C;&#x5355;&#x5143;&#x90FD;&#x662F;&#x201C;&#x6BD4;&#x8F83;a&#x548C;b&#x201D;&#xFF0C;&#x8FD9;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x731C;&#x6570;&#x5B57;&#x6E38;&#x620F;&#x91CC;&#x9762;&#x7684;&#x4E00;&#x4E2A;&#x95EE;&#x53E5;&#xFF0C;&#x663E;&#x7136;&#x8FD9;&#x4E2A;&#x95EE;&#x53E5;&#x7684;&#x7B54;&#x6848;&#x53EA;&#x80FD;&#x662F;&#x201C;&#x662F;&#x201D;&#x6216;&#x201C;&#x5426;&#x201D;&#xFF0C;&#x4E00;&#x4E2A;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#x8F93;&#x51FA;&#x7684;&#x95EE;&#x9898;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x5C06;&#x53EF;&#x80FD;&#x6027;&#x7A7A;&#x95F4;&#x5207;&#x6210;&#x4E24;&#x534A;&#xFF0C;&#x6839;&#x636E;&#x4E0A;&#x9762;&#x7684;&#x601D;&#x8DEF;&#xFF0C;&#x6700;&#x4F73;&#x5207;&#x6CD5;&#x5C31;&#x662F;&#x5207;&#x6210;1/2&#x548C;1/2&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x5728;&#x6BD4;&#x8F83;&#x4E86;a&#x548C;b&#x7684;&#x5927;&#x5C0F;&#x5173;&#x7CFB;&#x4E4B;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0;a&lt;b&#x7684;&#x8BDD;&#x5269;&#x4E0B;&#x7684;&#x6392;&#x5217;&#x53EF;&#x80FD;&#x6027;&#x5C31;&#x53D8;&#x6210;N!/2&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0;a&gt;b&#x4E5F;&#x662F;&#x5269;&#x4E0B;N!/2&#x79CD;&#x53EF;&#x80FD;&#x6027;&#x3002;&#x7531;&#x4E8E;&#x5047;&#x8BBE;&#x6BCF;&#x79CD;&#x6392;&#x5217;&#x7684;&#x6982;&#x7387;&#x662F;&#x5747;&#x7B49;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E5F;&#x5C31;&#x610F;&#x5473;&#x7740;&#x652F;&#x6301;a&lt;b&#x7684;&#x6392;&#x5217;&#x4E00;&#x5171;&#x6709;N!/2&#x4E2A;&#xFF0C;&#x652F;&#x6301;a&gt;b&#x7684;&#x4E5F;&#x662F;N!/2&#x4E2A;&#xFF0C;&#x6362;&#x8A00;&#x4E4B;&#xFF0C;a<b的概率等于a>b&#x7684;&#x6982;&#x7387;&#x3002;</b的概率等于a></p><p>&#x3000;&#x3000;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x6BCF;&#x6B21;&#x5728;&#x6BD4;&#x8F83;a&#x548C;b&#x7684;&#x65F6;&#x5019;&#xFF0C;a<b和a>b&#x7684;&#x6982;&#x7387;&#x662F;&#x5747;&#x7B49;&#x7684;&#xFF0C;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x80FD;&#x4FDD;&#x8BC1;&#x65E0;&#x8BBA;&#x5982;&#x4F55;&#x90FD;&#x80FD;&#x5C06;&#x53EF;&#x80FD;&#x6027;&#x7F29;&#x5C0F;&#x4E3A;&#x539F;&#x6765;&#x7684;&#x4E00;&#x534A;&#x4E86;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x6700;&#x4F18;&#x4E0B;&#x754C;&#x3002;</b和a></p><p>&#x3000;&#x3000;&#x4E00;&#x4E2A;&#x76F4;&#x63A5;&#x7684;&#x63A8;&#x8BBA;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x6BCF;&#x6B21;&#x90FD;&#x50CF;&#x4E0A;&#x9762;&#x8FD9;&#x6837;&#x7684;&#x5B8C;&#x7F8E;&#x6BD4;&#x8F83;&#xFF0C;&#x90A3;&#x4E48;N&#x4E2A;&#x5143;&#x7D20;&#x7684;N!&#x79CD;&#x53EF;&#x80FD;&#x6392;&#x5217;&#x53EA;&#x9700;&#x8981;log2(N!)&#x5C31;&#x6392;&#x67E5;&#x5B8C;&#x4E86;&#xFF0C;&#x800C;log2(N!)&#x8FD1;&#x4F3C;&#x4E8E;Nlog2N&#x3002;&#x8FD9;&#x6B63;&#x662F;&#x5FEB;&#x6392;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><h1 id="&#x4E3A;&#x4EC0;&#x4E48;&#x5806;&#x6392;&#x6BD4;&#x5FEB;&#x6392;&#x6162;">&#x4E3A;&#x4EC0;&#x4E48;&#x5806;&#x6392;&#x6BD4;&#x5FEB;&#x6392;&#x6162;</h1><p>&#x56DE;&#x987E;&#x4E00;&#x4E0B;&#x5806;&#x6392;&#x7684;&#x8FC7;&#x7A0B;&#xFF1A;</p><ol type="1"><li>&#x5EFA;&#x7ACB;&#x6700;&#x5927;&#x5806;&#x3002;&#xFF08;&#x5806;&#x9876;&#x7684;&#x5143;&#x7D20;&#x5927;&#x4E8E;&#x5176;&#x4E24;&#x4E2A;&#x513F;&#x5B50;&#xFF0C;&#x4E24;&#x4E2A;&#x513F;&#x5B50;&#x53C8;&#x5206;&#x522B;&#x5927;&#x4E8E;&#x5B83;&#x4EEC;&#x5404;&#x81EA;&#x4E0B;&#x5C5E;&#x7684;&#x4E24;&#x4E2A;&#x513F;&#x5B50;&#x2026; &#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#xFF09;</li><li>&#x5C06;&#x5806;&#x9876;&#x7684;&#x5143;&#x7D20;&#x548C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x5BF9;&#x8C03;&#xFF08;&#x76F8;&#x5F53;&#x4E8E;&#x5C06;&#x5806;&#x9876;&#x5143;&#x7D20;&#xFF08;&#x6700;&#x5927;&#x503C;&#xFF09;&#x62FF;&#x8D70;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5806;&#x5E95;&#x7684;&#x90A3;&#x4E2A;&#x5143;&#x7D20;&#x8865;&#x4E0A;&#x5B83;&#x7684;&#x7A7A;&#x7F3A;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x8BA9;&#x90A3;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x4ECE;&#x9876;&#x4E0A;&#x5F80;&#x4E0B;&#x6ED1;&#x5230;&#x6070;&#x5F53;&#x7684;&#x4F4D;&#x7F6E;&#xFF08;&#x91CD;&#x65B0;&#x4F7F;&#x5806;&#x6700;&#x5927;&#x5316;&#xFF09;&#x3002;</li><li>&#x91CD;&#x590D;&#x7B2C;2&#x6B65;&#x3002;</li></ol><p>&#x8FD9;&#x91CC;&#x7684;&#x5173;&#x952E;&#x95EE;&#x9898;&#x5C31;&#x5728;&#x4E8E;&#x7B2C;2&#x6B65;&#xFF0C;&#x5806;&#x5E95;&#x7684;&#x5143;&#x7D20;&#x80AF;&#x5B9A;&#x5F88;&#x5C0F;&#xFF0C;&#x5C06;&#x5B83;&#x62FF;&#x5230;&#x5806;&#x9876;&#x548C;&#x539F;&#x672C;&#x5C5E;&#x4E8E;&#x6700;&#x5927;&#x5143;&#x7D20;&#x7684;&#x4E24;&#x4E2A;&#x5B50;&#x8282;&#x70B9;&#x6BD4;&#x8F83;&#xFF0C;&#x5B83;&#x6BD4;&#x5B83;&#x4EEC;&#x5927;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x662F;&#x5FAE;&#x4E4E;&#x5176;&#x5FAE;&#x7684;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#x5B83;&#x80AF;&#x5B9A;&#x5C0F;&#x4E8E;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x513F;&#x5B50;&#x3002;&#x800C;&#x5927;&#x4E8E;&#x53E6;&#x4E00;&#x4E2A;&#x513F;&#x5B50;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x975E;&#x5E38;&#x5C0F;&#x3002;&#x4E8E;&#x662F;&#xFF0C;&#x8FD9;&#x4E00;&#x6B21;&#x6BD4;&#x8F83;&#x7684;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x6982;&#x7387;&#x4E0D;&#x5747;&#x7B49;&#x7684;&#xFF0C;&#x6839;&#x636E;&#x524D;&#x9762;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x6982;&#x7387;&#x4E0D;&#x5747;&#x7B49;&#x7684;&#x6BD4;&#x8F83;&#x662F;&#x4E0D;&#x660E;&#x667A;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5E76;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x5728;&#x7CDF;&#x7CD5;&#x60C5;&#x51B5;&#x4E0B;&#x4E5F;&#x80FD;&#x5C06;&#x95EE;&#x9898;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x524A;&#x51CF;&#x5230;&#x539F;&#x672C;&#x7684;1/2&#x3002;&#x53EF;&#x4EE5;&#x60F3;&#x50CF;&#x4E00;&#x79CD;&#x6781;&#x7AEF;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x679C;a&#x80AF;&#x5B9A;&#x5C0F;&#x4E8E;b&#xFF0C;&#x90A3;&#x4E48;&#x6BD4;&#x8F83;a&#x548C;b&#x5C31;&#x4F1A;&#x4EC0;&#x4E48;&#x4FE1;&#x606F;&#x4E5F;&#x5F97;&#x4E0D;&#x5230;&#x2014;&#x2014;&#x539F;&#x672C;&#x5269;&#x4E0B;&#x591A;&#x5C11;&#x53EF;&#x80FD;&#x6027;&#x8FD8;&#x662F;&#x5269;&#x4E0B;&#x591A;&#x5C11;&#x53EF;&#x80FD;&#x6027;&#x3002;</p><p>&#x5728;&#x5806;&#x6392;&#x91CC;&#x9762;&#x6709;&#x5927;&#x91CF;&#x8FD9;&#x79CD;&#x8FD1;&#x4E4E;&#x65E0;&#x6548;&#x7684;&#x6BD4;&#x8F83;&#xFF0C;&#x56E0;&#x4E3A;&#x88AB;&#x62FF;&#x5230;&#x5806;&#x9876;&#x7684;&#x90A3;&#x4E2A;&#x5143;&#x7D20;&#x51E0;&#x4E4E;&#x80AF;&#x5B9A;&#x662F;&#x5F88;&#x5C0F;&#x7684;&#xFF0C;&#x800C;&#x9760;&#x8FD1;&#x5806;&#x9876;&#x7684;&#x5143;&#x7D20;&#x53C8;&#x51E0;&#x4E4E;&#x80AF;&#x5B9A;&#x662F;&#x5F88;&#x5927;&#x7684;&#xFF0C;&#x5C06;&#x4E00;&#x4E2A;&#x5F88;&#x5C0F;&#x7684;&#x6570;&#x548C;&#x4E00;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x6570;&#x6BD4;&#x8F83;&#xFF0C;&#x7ED3;&#x679C;&#x51E0;&#x4E4E;&#x80AF;&#x5B9A;&#x662F;&#x201C;&#x5C0F;&#x4E8E;&#x201D;&#x7684;&#xFF0C;&#x8FD9;&#x5C31;&#x610F;&#x5473;&#x7740;&#x95EE;&#x9898;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x53EA;&#x88AB;&#x6392;&#x9664;&#x6389;&#x4E86;&#x5F88;&#x5C0F;&#x4E00;&#x90E8;&#x5206;&#x3002;</p><p>&#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5806;&#x6392;&#x6BD4;&#x8F83;&#x6162;&#xFF08;&#x5806;&#x6392;&#x867D;&#x7136;&#x548C;&#x5FEB;&#x6392;&#x4E00;&#x6837;&#x590D;&#x6742;&#x5EA6;&#x90FD;&#x662F;O(Nlog2N)&#x4F46;&#x5806;&#x6392;&#x590D;&#x6742;&#x5EA6;&#x7684;&#x5E38;&#x7CFB;&#x6570;&#x66F4;&#x5927;&#xFF09;&#x3002;</p><p>MacKay&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x4FEE;&#x6539;&#x7248;&#x7684;&#x5806;&#x6392;&#xFF1A;&#x6BCF;&#x6B21;&#x4E0D;&#x662F;&#x5C06;&#x5806;&#x5E95;&#x7684;&#x5143;&#x7D20;&#x62FF;&#x5230;&#x4E0A;&#x9762;&#x53BB;&#xFF0C;&#x800C;&#x662F;&#x76F4;&#x63A5;&#x6BD4;&#x8F83;&#x5806;&#x9876;&#xFF08;&#x6700;&#x5927;&#xFF09;&#x5143;&#x7D20;&#x7684;&#x4E24;&#x4E2A;&#x513F;&#x5B50;&#xFF0C;&#x5373;&#x9009;&#x51FA;&#x6B21;&#x5927;&#x7684;&#x5143;&#x7D20;&#x3002;&#x7531;&#x4E8E;&#x8FD9;&#x4E24;&#x4E2A;&#x513F;&#x5B50;&#x4E4B;&#x95F4;&#x7684;&#x5927;&#x5C0F;&#x5173;&#x7CFB;&#x662F;&#x5F88;&#x4E0D;&#x786E;&#x5B9A;&#x7684;&#xFF0C;&#x4E24;&#x8005;&#x90FD;&#x5F88;&#x5927;&#xFF0C;&#x8BF4;&#x4E0D;&#x597D;&#x54EA;&#x4E2A;&#x66F4;&#x5927;&#x54EA;&#x4E2A;&#x66F4;&#x5C0F;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x6B21;&#x6BD4;&#x8F83;&#x7684;&#x4E24;&#x4E2A;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x6982;&#x7387;&#x5747;&#x7B49;&#x7684;&#x4E86;&#x3002;</p><h1 id="&#x4E3A;&#x4EC0;&#x4E48;&#x5FEB;&#x6392;&#x5176;&#x5B9E;&#x4E5F;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x5FEB;">&#x4E3A;&#x4EC0;&#x4E48;&#x5FEB;&#x6392;&#x5176;&#x5B9E;&#x4E5F;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x5FEB;</h1><p>&#x6211;&#x4EEC;&#x8003;&#x8651;&#x5FEB;&#x6392;&#x7684;&#x8FC7;&#x7A0B;&#xFF1A;&#x968F;&#x673A;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x505A;&#x201C;&#x8F74;&#x5143;&#x7D20;&#x201D;&#xFF0C;&#x5C06;&#x6240;&#x6709;&#x5927;&#x4E8E;&#x8F74;&#x5143;&#x7D20;&#x7684;&#x79FB;&#x5230;&#x5DE6;&#x8FB9;&#xFF0C;&#x5176;&#x4F59;&#x79FB;&#x5230;&#x53F3;&#x8FB9;&#x3002;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF0C;&#x5FEB;&#x6392;&#x7684;&#x7B2C;&#x4E00;&#x6B21;&#x6BD4;&#x8F83;&#x5C31;&#x662F;&#x5C06;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x548C;&#x8F74;&#x5143;&#x7D20;&#x6BD4;&#x8F83;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x663E;&#x800C;&#x6613;&#x89C1;&#x7684;&#x662F;&#xFF0C;&#x201C;&#x5927;&#x4E8E;&#x201D;&#x548C;&#x201C;&#x5C0F;&#x4E8E;&#x201D;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x5404;&#x5360;&#x4E00;&#x534A;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x6B21;&#x6F02;&#x4EAE;&#x7684;&#x6BD4;&#x8F83;&#x3002;</p><p>&#x7136;&#x800C;&#xFF0C;&#x5FEB;&#x6392;&#x7684;&#x7B2C;&#x4E8C;&#x6B21;&#x6BD4;&#x8F83;&#x5C31;&#x4E0D;&#x90A3;&#x4E48;&#x9AD8;&#x660E;&#x4E86;&#xFF1A;&#x6211;&#x4EEC;&#x4E0D;&#x59A8;&#x4EE4;&#x8F74;&#x5143;&#x7D20;&#x4E3A;pivot&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x6BD4;&#x8F83;&#x7ED3;&#x679C;&#x662F;a1 &lt; pivot&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x7B2C;&#x4E8C;&#x6B21;&#x6BD4;&#x8F83;a2&#x4E5F;&#x5C0F;&#x4E8E;pivot&#x7684;&#x53EF;&#x80FD;&#x6027;&#x662F;2/3&#xFF01;&#x8FD9;&#x5BB9;&#x6613;&#x8BC1;&#x660E;&#xFF1A;&#x5982;&#x679C;a2&gt;pivot&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;a1&#xFF0C;a2&#xFF0C;pivot&#x8FD9;&#x4E09;&#x4E2A;&#x5143;&#x7D20;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x5C31;&#x5B8C;&#x5168;&#x786E;&#x5B9A;&#x4E86;&#x2014;&#x2014;a1 &lt; pivot &lt; a2&#xFF0C;&#x5269;&#x4E0B;&#x6765;&#x7684;&#x5143;&#x7D20;&#x6392;&#x5217;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x6211;&#x4EEC;&#x4E0D;&#x59A8;&#x8BB0;&#x4E3A;P&#xFF08;&#x4E0D;&#x9700;&#x8981;&#x5177;&#x4F53;&#x7B97;&#x51FA;&#x6765;&#xFF09;&#x3002;&#x800C;&#x5982;&#x679C;a2 &lt; pivot&#x5462;&#xFF1F;&#x90A3;&#x4E48;a1&#x548C;a2&#x7684;&#x5173;&#x7CFB;&#x5C31;&#x4ECD;&#x7136;&#x662F;&#x4E0D;&#x786E;&#x5B9A;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x8FD9;&#x4E2A;&#x5206;&#x652F;&#x91CC;&#x9762;&#x542B;&#x6709;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;a1 &lt; a2 &lt; pivot&#xFF0C;&#x4EE5;&#x53CA;a2 &lt; a1 &lt; pivot&#x3002;&#x5BF9;&#x4E8E;&#x5176;&#x4E2D;&#x4EFB;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x5143;&#x7D20;&#x6392;&#x5217;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x90FD;&#x662F;P&#xFF0C;&#x4E8E;&#x662F;&#x8FD9;&#x4E2A;&#x5206;&#x652F;&#x91CC;&#x9762;&#x5269;&#x4E0B;&#x7684;&#x6392;&#x5217;&#x53EF;&#x80FD;&#x6027;&#x5C31;&#x662F;2P&#x3002;&#x6240;&#x4EE5;&#x5F53;a2 &lt; pivot&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x5269;&#x4E0B;2/3&#x7684;&#x53EF;&#x80FD;&#x6027;&#x9700;&#x8981;&#x6392;&#x67E5;&#x3002;</p><p>&#x518D;&#x8FDB;&#x4E00;&#x6B65;&#xFF0C;&#x5982;&#x679C;&#x7B2C;&#x4E8C;&#x6B65;&#x6BD4;&#x8F83;&#x679C;&#x771F;&#x53D1;&#x73B0;a2 &lt; pivot&#x7684;&#x8BDD;&#xFF0C;&#x7B2C;&#x4E09;&#x6B65;&#x6BD4;&#x8F83;&#x5C31;&#x66F4;&#x4E0D;&#x5999;&#x4E86;&#xFF0C;&#x6A21;&#x4EFF;&#x4E0A;&#x9762;&#x7684;&#x63A8;&#x7406;&#xFF0C;a3 &lt; pivot&#x7684;&#x6982;&#x7387;&#x5C06;&#x4F1A;&#x662F;3/4&#xFF01;</p><p>&#x8FD9;&#x5C31;&#x662F;&#x5FEB;&#x6392;&#x4E5F;&#x4E0D;&#x90A3;&#x4E48;&#x5FEB;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4E5F;&#x6CA1;&#x6709;&#x505A;&#x5230;&#x6BCF;&#x6B21;&#x6BD4;&#x8F83;&#x90FD;&#x80FD;&#x5C06;&#x5269;&#x4E0B;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x780D;&#x6389;&#x4E00;&#x534A;&#x3002;</p><h1 id="&#x57FA;&#x6570;&#x6392;&#x5E8F;&#x4E3A;&#x4EC0;&#x4E48;&#x6BD4;&#x8F83;&#x5FEB;">&#x57FA;&#x6570;&#x6392;&#x5E8F;&#x4E3A;&#x4EC0;&#x4E48;&#x6BD4;&#x8F83;&#x5FEB;</h1><p>&#x4F20;&#x7EDF;&#x7684;&#x89E3;&#x91CA;&#x662F;&#xFF1A;&#x57FA;&#x6392;&#x4E0D;&#x662F;&#x57FA;&#x4E8E;&#x6BD4;&#x8F83;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x5177;&#x6709;&#x540E;&#x8005;&#x7684;&#x5C40;&#x9650;&#x6027;&#x3002;&#x8BDD;&#x662F;&#x6CA1;&#x9519;&#xFF0C;&#x4F46;&#x5176;&#x5B9E;&#x8FD8;&#x53EF;&#x4EE5;&#x5C06;&#x5B83;&#x548C;&#x57FA;&#x4E8E;&#x6BD4;&#x8F83;&#x7684;&#x6392;&#x5E8F;&#x505A;&#x4E00;&#x4E2A;&#x7C7B;&#x6BD4;&#x3002;</p><p>&#x57FA;&#x6392;&#x7684;&#x8FC7;&#x7A0B;&#x4E5F;&#x8BB8;&#x662F;&#x6E90;&#x4E8E;&#x6211;&#x4EEC;&#x7406;&#x987A;&#x4E00;&#x526F;&#x724C;&#x7684;&#x8FC7;&#x7A0B;&#xFF1A;&#x5982;&#x679C;&#x4F60;&#x6709;N&#xFF08;N&lt;=13&#xFF09;&#x5F20;&#x724C;&#xFF0C;&#x4E71;&#x5E8F;&#xFF0C;&#x5982;&#x4F55;&#x7406;&#x987A;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x5047;&#x8C61;&#x684C;&#x4E0A;&#x6709;&#x5341;&#x4E09;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5C06;&#x624B;&#x91CC;&#x7684;&#x724C;&#x4E00;&#x5F20;&#x4E00;&#x5F20;&#x653E;&#x51FA;&#x53BB;&#xFF0C;&#x5982;&#x679C;&#x662F;3&#xFF0C;&#x5C31;&#x653E;&#x5728;&#x4F4D;&#x7F6E;3&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x662F;J&#xFF0C;&#x5C31;&#x653E;&#x5728;&#x4F4D;&#x7F6E;11&#x4E0A;&#xFF0C;&#x653E;&#x5B8C;&#x4E86;&#x4E4B;&#x540E;&#x4ECE;&#x4F4D;&#x7F6E;1&#x5230;&#x4F4D;&#x7F6E;13&#x6536;&#x96C6;&#x6240;&#x6709;&#x7684;&#x724C;&#xFF08;&#x6CA1;&#x6709;&#x724C;&#x7684;&#x4F4D;&#x7F6E;&#x4E0A;&#x4E0D;&#x6536;&#x96C6;&#x4EFB;&#x4F55;&#x724C;&#xFF09;&#x3002;</p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x6765;&#x7406;&#x89E3;&#x57FA;&#x6392;&#x9AD8;&#x6548;&#x7684;&#x672C;&#x8D28;&#x539F;&#x56E0;&#xFF1A;&#x5047;&#x8BBE;&#x524D;i&#x5F20;&#x724C;&#x90FD;&#x5DF2;&#x7ECF;&#x653E;&#x5230;&#x4E86;&#x5B83;&#x4EEC;&#x5BF9;&#x5E94;&#x7684;&#x4F4D;&#x7F6E;&#x4E0A;&#xFF0C;&#x7B2C;i+1&#x5F20;&#x724C;&#x653E;&#x51FA;&#x53BB;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x201C;&#x4E00;&#x4E0B;&#x5B50;&#x201D;&#x5C31;&#x786E;&#x7ACB;&#x4E86;&#x5B83;&#x548C;&#x524D;i&#x5F20;&#x724C;&#x7684;&#x5927;&#x5C0F;&#x5173;&#x7CFB;&#xFF0C;&#x7528;O(1)&#x7684;&#x64CD;&#x4F5C;&#x5C31;&#x5C06;&#x8FD9;&#x5F20;&#x724C;&#x6B63;&#x786E;&#x5730;&#x63D2;&#x5165;&#x5230;&#x4E86;&#x524D;i&#x5F20;&#x724C;&#x4E2D;&#x7684;&#x6B63;&#x786E;&#x4F4D;&#x7F6E;&#x4E0A;&#xFF0C;&#x8FD9;&#x4E2A;&#x6548;&#x679C;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x7684;&#x7B2C;i&#x8F6E;&#x539F;&#x672C;&#x9700;&#x8981;&#x6BD4;&#x8F83;O(i)&#x6B21;&#x7684;&#xFF0C;&#x73B0;&#x5728;&#x53EA;&#x9700;&#x8981;O(1)&#x4E86;&#x3002;</p><p>&#x4F46;&#x662F;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x57FA;&#x6392;&#x80FD;&#x591F;&#x8FBE;&#x5230;&#x8FD9;&#x4E2A;&#x6548;&#x679C;&#x5462;&#xFF1F;&#x4E0A;&#x9762;&#x53EA;&#x662F;&#x89E3;&#x91CA;&#x4E86;&#x8FC7;&#x7A0B;&#xFF0C;&#x89E3;&#x91CA;&#x4E86;&#x8FC7;&#x7A0B;&#x4E0D;&#x4EE3;&#x8868;&#x89E3;&#x91CA;&#x4E86;&#x672C;&#x8D28;&#x3002;</p><p>&#x5F53;i&#x5F20;&#x724C;&#x653E;&#x5230;&#x4F4D;&#x4E4B;&#x540E;&#xFF0C;&#x653E;&#x7F6E;&#x7B2C;i+1&#x5F20;&#x724C;&#x7684;&#x65F6;&#x5019;&#x6709;&#x591A;&#x5C11;&#x79CD;&#x53EF;&#x80FD;&#x6027;&#xFF1F;&#x5927;&#x7EA6;i+1&#x79CD;&#xFF0C;&#x56E0;&#x4E3A;&#x524D;i&#x5F20;&#x724C;&#x5C06;13&#x4E2A;&#x4F4D;&#x7F6E;&#x5206;&#x5272;&#x6210;&#x4E86;i+1&#x4E2A;&#x533A;&#x95F4;&#x2014;&#x2014;&#x7B2C;i+1&#x5F20;&#x724C;&#x53EF;&#x4EE5;&#x843D;&#x5728;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x533A;&#x95F4;&#x3002;&#x6240;&#x4EE5;&#x653E;&#x7F6E;&#x7B2C;i+1&#x5F20;&#x724C;&#x5C31;&#x597D;&#x6BD4;&#x662F;&#x8BE2;&#x95EE;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x201C;&#x8FD9;&#x5F20;&#x724C;&#x843D;&#x5728;&#x54EA;&#x4E2A;&#x533A;&#x95F4;&#x5462;&#xFF1F;&#x201D;&#x800C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x7B54;&#x6848;&#x6709;i+1&#x79CD;&#x53EF;&#x80FD;&#x6027;&#xFF1F;&#x6240;&#x4EE5;&#x5B83;&#x5C31;&#x5C06;&#x5269;&#x4E0B;&#x6765;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x5747;&#x5206;&#x6210;&#x4E86;i+1&#x4EFD;&#xFF08;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x780D;&#x6389;&#x4E86;i/i+1&#x7684;&#x53EF;&#x80FD;&#x6027;&#xFF01;&#xFF09;&#x3002;&#x518D;&#x770B;&#x770B;&#x57FA;&#x4E8E;&#x6BD4;&#x8F83;&#x7684;&#x6392;&#x5E8F;&#x5427;&#xFF1A;&#x7531;&#x4E8E;&#x6BCF;&#x6B21;&#x6BD4;&#x8F83;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#x7ED3;&#x679C;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x5C06;&#x5269;&#x4E0B;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x780D;&#x6389;&#x4E00;&#x534A;&#x3002;</p><p>&#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x57FA;&#x6392;&#x8981;&#x5FEB;&#x5F97;&#x591A;&#x3002;&#x800C;&#x6240;&#x6709;&#x57FA;&#x4E8E;&#x6BD4;&#x8F83;&#x7684;&#x6392;&#x5E8F;&#x90FD;&#x9003;&#x8131;&#x4E0D;&#x4E86;Nlog2N&#x7684;&#x5BBF;&#x547D;&#x3002;</p><hr><h1 id="&#x5F15;&#x7528;">&#x5F15;&#x7528;</h1><p><a href="http://blog.csdn.net/a236209186/article/details/52012823" target="_blank" rel="noopener">&#x5FEB;&#x6392;&#x4E3A;&#x4EC0;&#x4E48;&#x90A3;&#x4E48;&#x5FEB;</a></p><p>2018&#x7248;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x9AD8;&#x5206;&#x7B14;&#x8BB0;&#xFF0C;&#x7387;&#x8F89; &#x4E3B;&#x7F16;</p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 快速排序 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
