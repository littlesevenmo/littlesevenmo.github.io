<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>且听风吟</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.windsings.com/"/>
  <updated>2019-07-31T18:38:15.920Z</updated>
  <id>https://www.windsings.com/</id>
  
  <author>
    <name>Wind</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SUMO笔记</title>
    <link href="https://www.windsings.com//posts/59170f05/"/>
    <id>https://www.windsings.com//posts/59170f05/</id>
    <published>2019-07-28T15:00:07.000Z</published>
    <updated>2019-07-31T18:38:15.920Z</updated>
    
    <content type="html"><![CDATA[<p>SUMO &#x7684;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x3002;</p><a id="more"></a><h1 id="&#x5B89;&#x88C5;">&#x5B89;&#x88C5;</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install cmake python g++ libxerces-c-dev libfox-1.6-dev libgdal-dev libproj-dev libgl2ps-dev swig</span><br><span class="line">cd &lt;SUMO_DIR&gt; # please insert the correct directory name here</span><br><span class="line">export SUMO_HOME=&quot;$PWD&quot;</span><br><span class="line">mkdir build/cmake-build &amp;&amp; cd build/cmake-build</span><br><span class="line">cmake ../..</span><br><span class="line">make -j$(nproc)</span><br></pre></td></tr></table></figure><p>&#x5B89;&#x88C5;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export SUMO_HOME=/usr/local/share/sumo/</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;<code>cd /usr/local/share/sumo/bin</code>&#xFF0C;&#x6267;&#x884C;<code>./sumo-gui</code>&#x5373;&#x53EF;&#x3002;</p><p>&#x7ED3;&#x679C;&#x5982;&#x56FE;</p><figure><img src="/posts/59170f05/1563961227826.png" alt="1563961227826"><figcaption>1563961227826</figcaption></figure><h1 id="sumo&#x5DE5;&#x7A0B;&#x7ED3;&#x6784;">sumo&#x5DE5;&#x7A0B;&#x7ED3;&#x6784;</h1><p>SUMO&#x7684;&#x4EFF;&#x771F;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF1A;</p><ol type="1"><li>&#x9053;&#x8DEF;&#x6587;&#x4EF6;&#xFF0C;&#x6216;&#x8005;&#x53EB;&#x8DEF;&#x7F51;&#x6587;&#x4EF6;&#xFF08;net.xml&#xFF09;&#xFF0C;&#x5C31;&#x662F;&#x5BF9;&#x884C;&#x8F66;&#x9053;&#x8DEF;&#x7684;&#x63CF;&#x8FF0;&#x6587;&#x4EF6;&#xFF1B;</li><li>&#x8F66;&#x6D41;&#x6587;&#x4EF6;(rou.xml)&#xFF0C;&#x6216;&#x8005;&#x53EB;&#x505A;&#x8F66;&#x91CF;&#x884C;&#x9A76;&#x6587;&#x4EF6;&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x8F66;&#x6D41;&#x91CF;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x66F4;&#x52A0;&#x9AD8;&#x7EA7;&#x7684;&#x4EFF;&#x771F;&#x53EF;&#x4EE5;&#x52A0;&#x5165;&#x522B;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982;&#x8F66;&#x8F86;&#x63CF;&#x8FF0;&#x6587;&#x4EF6;&#xFF0C;&#x5730;&#x5F62;&#x6587;&#x4EF6;&#x3002;</li></ol><h1 id="get-files">Get files</h1><p>&#x6211;&#x662F;&#x4ECE;www.openstreetmap.org/ &#x8FD9;&#x91CC;&#x4E0B;&#x8F7D;&#x7684;&#x5730;&#x56FE;</p><p>&#x9009;&#x62E9;&#x5317;&#x4EAC;-&#x6D77;&#x6DC0;&#x533A;&#xFF0C;&#x5728;&#x5DE6;&#x4FA7;&#x7684;export&#x91CC;&#x5BFC;&#x51FA;&#x3002;</p><p>&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x6240;&#x89C1;&#x5373;&#x6240;&#x5F97;&#x7684;&#x4E0B;&#x8F7D;&#xFF0C;&#x4F1A;&#x7ED9;&#x5B9A;&#x5F53;&#x524D;&#x5730;&#x56FE;&#x9875;&#x9762;&#x7684;&#x7ECF;&#x7EAC;&#x5EA6;&#x5750;&#x6807;&#xFF0C;&#x4E0B;&#x8F7D;&#x4E5F;&#x662F;&#x4E0B;&#x8F7D;&#x8FD9;&#x4E2A;&#x8303;&#x56F4;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x8BF7;&#x901A;&#x8FC7;&#x7F29;&#x653E;&#x6765;&#x63A7;&#x5236;&#x8303;&#x56F4;&#x7684;&#x5927;&#x5C0F;&#x3002;</p><p>&#x5728;bin&#x6587;&#x4EF6;&#x5939;&#x91CC;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;netcovert&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x4F7F;&#x7528;&#x5B83;&#x53EF;&#x4EE5;&#x628A;&#x4E0B;&#x8F7D;&#x7684;osm&#xFF08;&#x867D;&#x7136;&#x540E;&#x7F00;&#x6CA1;&#x6709;&#x6807;&#x660E;&#xFF09;&#x6587;&#x4EF6;&#x8F6C;&#x4E3A;&#x9700;&#x8981;&#x7684;.net.xml&#x6587;&#x4EF6;&#x3002;&#x6211;&#x4E0B;&#x8F7D;&#x7684;map&#x6587;&#x4EF6;&#x5728;<code>/home/intel/Downloads</code> &#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x540D;&#x4E3A;<code>map</code>&#x3002;&#x6211;&#x4F7F;&#x7528;&#x547D;&#x4EE4;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/bin$ ./netconvert --osm-files /home/intel/Downloads/map -o /home/intel/Downloads/map.net.xml</span><br></pre></td></tr></table></figure><p>&#x628A;map&#x8F6C;&#x4E3A;net.xml&#x6587;&#x4EF6;&#x3002;</p><figure><img src="/posts/59170f05/1564019933764.png" alt="1564019933764"><figcaption>1564019933764</figcaption></figure><p>&#x8FD9;&#x6837;&#x9053;&#x8DEF;&#x6587;&#x4EF6;&#x5C31;&#x505A;&#x5B8C;&#x4E86;&#x3002;</p><p>&#x751F;&#x6210;trips&#x6587;&#x4EF6;&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/tools$ ./randomTrips.py -n /home/intel/Downloads/map.net.xml -l -e 600 -o /home/intel/Downloads/map.trips.xml</span><br></pre></td></tr></table></figure><p>&#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x628A;&#x968F;&#x673A;&#x7684;&#x65C5;&#x7A0B;&#x548C;&#x9053;&#x8DEF;&#x4FE1;&#x606F;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#x5C31;&#x83B7;&#x5F97;&#x4E86;&#x8F66;&#x6D41;&#x6587;&#x4EF6;&#xFF08;rou.xml&#xFF09;&#x4E86;&#x3002;&#x6211;&#x4EEC;&#x8981;&#x7528;&#x5230;&#x7684;&#x5DE5;&#x5177;&#x662F;bin&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;duarouter&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/bin$ ./duarouter -n /home/intel/Downloads/map.net.xml -t /home/intel/Downloads/map.trips.xml -o /home/intel/Downloads/map.rou.xml --ignore-errors</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5F97;&#x5230;&#x4E86;rou.xml&#x6587;&#x4EF6;&#x3002;</p><h1 id="&#x8FD0;&#x884C;">&#x8FD0;&#x884C;</h1><p>&#x4EC5;&#x4EC5;&#x9760;&#x751F;&#x6210;&#x7684;net.xml&#x548C;rou.xml&#x662F;&#x4E0D;&#x591F;&#x7684;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;</p><p>&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x547D;&#x540D;&#x4E3A;<code>map.sumo.cfg</code>&#xFF0C;&#x5728;&#x5176;&#x4E2D;&#x8F93;&#x5165;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;input&gt;</span><br><span class="line">        &lt;net-file value=&quot;map.net.xml&quot;/&gt;</span><br><span class="line">        &lt;route-files value=&quot;map.rou.xml&quot;/&gt;</span><br><span class="line">    &lt;/input&gt;</span><br><span class="line">    &lt;time&gt;</span><br><span class="line">        &lt;begin value=&quot;0&quot;/&gt;</span><br><span class="line">        &lt;end value=&quot;360000&quot;/&gt;</span><br><span class="line">    &lt;/time&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>&#x5728;&#x7EC8;&#x7AEF;&#x4E2D;&#xFF0C;&#x8F93;&#x5165;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sumo-gui /home/intel/Downloads/map.sumo.cfg</span><br></pre></td></tr></table></figure><p>&#x5373;&#x53EF;&#x8FD0;&#x884C;&#x3002;</p><h1 id="&#x6548;&#x679C;">&#x6548;&#x679C;</h1><h2 id="map1-&#x5168;&#x5317;&#x4EAC;">map1-&#x5168;&#x5317;&#x4EAC;</h2><p>&#x4E3B;&#x754C;&#x9762;&#xFF1A;</p><figure><img src="/posts/59170f05/1564031049792.png" alt="1564031049792"><figcaption>1564031049792</figcaption></figure><figure><img src="/posts/59170f05/1564031963620.png" alt="1564031963620"><figcaption>1564031963620</figcaption></figure><p>&#x63A7;&#x5236;&#x680F;&#x4E2D;&#xFF0C;&#x7EFF;&#x8272;&#x4E09;&#x89D2;&#x8868;&#x793A;&#x5F00;&#x59CB;&#xFF0C;&#x8BA1;&#x65F6;&#x7684;&#x6570;&#x5B57;&#x8868;&#x793A;&#x5F53;&#x524D;&#x7684;&#x65F6;&#x95F4;&#x7247;&#xFF0C;delay time&#x8868;&#x793A;&#x6BCF;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#x6682;&#x505C;&#x591A;&#x5C11;&#x65F6;&#x95F4;&#xFF08;&#x5355;&#x4F4D;ms&#xFF09;&#xFF0C;&#x4E00;&#x822C;100&#xFF5E;250ms&#x6548;&#x679C;&#x4F1A;&#x6BD4;&#x8F83;&#x597D;&#x3002;scale traffic&#x662F;&#x63A7;&#x5236;&#x8F66;&#x7684;&#x6570;&#x91CF;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x503C;&#x8D8A;&#x5927;&#xFF0C;&#x8DEF;&#x4E0A;&#x8F66;&#x8D8A;&#x591A;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x597D;&#x50CF;&#x662F;rou.xml&#x4E4B;&#x5916;&#x7684;&#x8F66;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6211;&#x672C;&#x6765;&#x53EA;&#x60F3;&#x4E0B;&#x8F7D;&#x6D77;&#x6DC0;&#x533A;&#x7684;&#x5730;&#x56FE;&#x7684;&#xFF0C;&#x7ED3;&#x679C;&#x4E0B;&#x8F7D;&#x6210;&#x4E86;&#x5317;&#x4EAC;&#x5E02;&#x7684;&#xFF0C;&#x5730;&#x56FE;&#x8D85;&#x5927;&#xFF0C;&#x8DEF;&#x4E5F;&#x8D85;&#x591A;&#x3002;</p><p>&#x5341;&#x5B57;&#x8DEF;&#x53E3;&#xFF0C;&#x7EA2;&#x9EC4;&#x84DD;&#x8868;&#x793A;&#x7EA2;&#x7EFF;&#x706F;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x706F;&#x90FD;&#x662F;&#x4F1A;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x53D8;&#x8272;&#x7684;&#x3002;</p><figure><img src="/posts/59170f05/1564024481231.png" alt="1564024481231"><figcaption>1564024481231</figcaption></figure><p>&#x8F66;&#xFF0C;&#x9EC4;&#x8272;&#x6807;&#x8BB0;&#x51FA;&#x6765;&#x7684;&#x90E8;&#x5206;&#x662F;&#x8F66;&#x3002;</p><figure><img src="/posts/59170f05/1564024772975.png" alt="1564024772975"><figcaption>1564024772975</figcaption></figure><h2 id="map2-&#x878D;&#x79D1;&#x9644;&#x8FD1;">map2-&#x878D;&#x79D1;&#x9644;&#x8FD1;</h2><figure><img src="/posts/59170f05/1564031924346.png" alt="1564031924346"><figcaption>1564031924346</figcaption></figure><p>&#x540E;&#x7EED;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x7684;&#x8FDB;&#x884C;&#xFF0C;&#x80FD;&#x770B;&#x51FA;&#x8DEF;&#x4E0A;&#x5835;&#x4E86;&#x5F88;&#x591A;&#x8F66;&#x3002;</p><h1 id="&#x6587;&#x4EF6;&#x5206;&#x6790;&#x6784;&#x9020;map3">&#x6587;&#x4EF6;&#x5206;&#x6790;&amp;&#x6784;&#x9020;map3</h1><h2 id="net.xml">net.xml</h2><p>&#x6253;&#x5F00;net.xml&#xFF0C;&#x5982;&#x56FE;&#xFF1A;</p><figure><img src="/posts/59170f05/1564032607217.png" alt="1564032607217"><figcaption>1564032607217</figcaption></figure><figure><img src="/posts/59170f05/1564032640210.png" alt="1564032640210"><figcaption>1564032640210</figcaption></figure><p>&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x9053;&#x8DEF;&#x6587;&#x4EF6;&#xFF0C;&#x62BD;&#x8C61;&#x6210;&#x56FE;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x662F;&#x70B9;&#x548C;&#x8FB9;&#x3002;</p><p>&#x8282;&#x70B9;&#x6620;&#x5C04;&#x5230;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x5C31;&#x662F;&#x4EA4;&#x53C9;&#x8DEF;&#x53E3;&#xFF0C;&#x8FB9;&#x5C31;&#x662F;&#x9053;&#x8DEF;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8282;&#x70B9;&#x548C;&#x8FB9;&#x6765;&#x81EA;&#x5DF1;&#x6784;&#x9020;net.xml&#x6587;&#x4EF6;&#x3002;</p><p>&#x5148;&#x5199;&#x4E00;&#x4E2A;node.xml&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nodes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">x</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">x</span>=<span class="string">&quot;400.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;priority&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">x</span>=<span class="string">&quot;700.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">x</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;300.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">x</span>=<span class="string">&quot;400.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;300.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">x</span>=<span class="string">&quot;700.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;300.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">x</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;600.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">x</span>=<span class="string">&quot;400.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;600.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">x</span>=<span class="string">&quot;700.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;600.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">x</span>=<span class="string">&quot;100.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;800.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">x</span>=<span class="string">&quot;400.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;800.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;traffic_light&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">id</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">x</span>=<span class="string">&quot;700.0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;800.0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;priority&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nodes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>id&#x5C31;&#x662F;&#x4EA4;&#x53C9;&#x8DEF;&#x53E3;&#x7684;&#x540D;&#x5B57;&#xFF0C;x&#xFF0C;y&#x662F;&#x4EA4;&#x53C9;&#x53E3;&#x7684;&#x5750;&#x6807;&#xFF0C;&#x4E0D;&#x50CF;opencv&#x6216;&#x8005;&#x663E;&#x793A;&#x5C4F;&#x9A71;&#x52A8;&#x4E00;&#x4E0B;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x5750;&#x6807;&#x5C31;&#x662F;&#x5DE6;&#x4E0B;&#x89D2;&#x662F;&#x539F;&#x70B9;&#x3002;</p><p>type&#x5C5E;&#x6027;&#x590D;&#x6742;&#x4E00;&#x4E9B;&#xFF1A;</p><ul><li>priority: &#x8F66;&#x8F86;&#x5FC5;&#x987B;&#x7B49;&#x5F85;&#xFF0C;&#x76F4;&#x5230;&#x5B83;&#x4EEC;&#x53F3;&#x4FA7;&#x8F66;&#x8F86;&#x5B8C;&#x5168;&#x901A;&#x8FC7;&#x8DEF;&#x53E3;&#x3002; Vehicles have to wait until vehicles right to them have passed the junction</li><li>traffic_light: &#x4EA4;&#x53C9;&#x53E3;&#x88AB;&#x4EA4;&#x901A;&#x706F;&#x63A7;&#x5236;&#x7740;</li><li>right_before_left: &#x6765;&#x81EA;&#x53F3;&#x8FB9;&#x7684;&#x8F66;&#x8F86;&#x4F18;&#x5148;&#x901A;&#x8FC7; Vehicles will let vehicles coming from their right side pass.</li></ul><p>&#x518D;&#x5199;&#x4E00;&#x4E2A;edg.xml&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">edges</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-0-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;4&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-0-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-0-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;4&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-0-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-0-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-0-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node1&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-0-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-0-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node2&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-0-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-0-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node3&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-1-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-1-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-1-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-1-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-1-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-1-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node4&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-1-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-1-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node5&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-1-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-1-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node6&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-2-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-2-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-2-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-2-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-2-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-2-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node7&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-2-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-2-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node8&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeU-2-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeD-2-2&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node9&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-3-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeR-3-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-3-0&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node10&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;edgeL-3-1&quot;</span> <span class="attr">from</span>=<span class="string">&quot;node12&quot;</span> <span class="attr">to</span>=<span class="string">&quot;node11&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;75&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;40&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">edges</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5217;&#x51FA;&#x8FB9;&#x7684;&#x5C5E;&#x6027;&#x5982;&#x4E0B;&#xFF1A;</p><table><colgroup><col style="width: 10%"><col style="width: 7%"><col style="width: 25%"><col style="width: 56%"></colgroup><thead><tr class="header"><th style="text-align: center;">&#x5C5E;&#x6027;&#x540D;</th><th>&#x662F;&#x5426;&#x5FC5;&#x987B;</th><th>&#x503C;&#x7C7B;&#x578B;</th><th>&#x63CF;&#x8FF0;</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">id</td><td>&#x662F;</td><td>id(string)</td><td>&#x8FB9;&#x7684;&#x540D;&#x5B57;</td></tr><tr class="even"><td style="text-align: center;">formnode</td><td>&#x5426;</td><td></td><td>&#x8FB9;&#x7684;&#x8D77;&#x59CB;&#x8282;&#x70B9;&#xFF0C;&#x9700;&#x5728;&#x8282;&#x70B9;&#x6587;&#x4EF6;&#x4E2D;&#x5B58;&#x5728;</td></tr><tr class="odd"><td style="text-align: center;">tonode</td><td>&#x5426;</td><td></td><td>&#x8FB9;&#x7684;&#x7EC8;&#x6B62;&#x8282;&#x70B9;&#xFF0C;&#x9700;&#x5728;&#x8282;&#x70B9;&#x6587;&#x4EF6;&#x4E2D;&#x5B58;&#x5728;</td></tr><tr class="even"><td style="text-align: center;">type</td><td>&#x5426;</td><td></td><td>&#x7C7B;&#x578B;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x7C7B;&#x578B;&#x540D;</td></tr><tr class="odd"><td style="text-align: center;">nolanes</td><td>&#x5426;</td><td>int</td><td>&#x8FB9;&#x7684;&#x8F66;&#x9053;&#x6570;&#xFF0C;&#x5FC5;&#x987B;&#x662F;&#x6574;&#x6570;</td></tr><tr class="even"><td style="text-align: center;">speed</td><td>&#x5426;</td><td>float</td><td>&#x8FB9;&#x5141;&#x8BB8;&#x7684;&#x6700;&#x5927;&#x8F66;&#x901F;&#xFF08;m/s)&#xFF0C;&#x5FC5;&#x987B;&#x662F;&#x6D6E;&#x70B9;&#x6570;</td></tr><tr class="odd"><td style="text-align: center;">priority</td><td>&#x5426;</td><td>int</td><td>&#x8FB9;&#x7684;&#x4F18;&#x5148;&#x6743;</td></tr><tr class="even"><td style="text-align: center;">length</td><td>&#x5426;</td><td>float</td><td>&#x8FB9;&#x957F;&#xFF08;m&#xFF09;</td></tr><tr class="odd"><td style="text-align: center;">shape</td><td>&#x5426;</td><td>&#x4F4D;&#x7F6E;&#x5217;&#x8868;&#xFF0C;&#x7528;x&#xFF0C;y&#x8868;&#x793A;&#xFF0C;&#x5355;&#x4F4D;m</td><td>&#x4ECE;&#x5F62;&#x72B6;&#x7684;&#x5B9A;&#x4E49;&#x91CC;&#xFF0C;&#x8D77;&#x6B62;&#x8282;&#x70B9;&#x88AB;&#x5FFD;&#x7565;&#x3002;&#x4F8B;&#x5982;&#xFF1A;<edge id="e1" fromnode="0" tonode="1" shape="0,0 0,100">&#x8868;&#x793A;&#xFF0C;&#x4E00;&#x4E2A;&#x8FB9;&#xFF0C;&#x4ECE;&#x8282;&#x70B9;0&#x5F00;&#x59CB;&#xFF0C;&#x9996;&#x5148;&#x7ECF;&#x8FC7;&#x70B9;&#xFF08;0,0&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x5411;&#x53F3;&#x884C;100&#x7C73;&#xFF0C;&#x6700;&#x540E;&#x5230;&#x8FBE;&#x8282;&#x70B9;1</edge></td></tr><tr class="even"><td style="text-align: center;">spread_type</td><td>&#x5426;</td><td>&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#xFF08;right,center)</td><td>&#x63CF;&#x8FF0;&#x600E;&#x6837;&#x5EF6;&#x5C55;&#x8F66;&#x9053;&#xFF1A;center&#x8868;&#x793A;&#x53CC;&#x5411;&#x5EF6;&#x5C55;&#x8F66;&#x9053;&#xFF0C;right&#x4E3A;&#x5411;&#x53F3;&#x5EF6;&#x5C55;&#x3002;</td></tr></tbody></table><p>edge&#x6587;&#x4EF6;&#x5BF9;&#x4E8E;&#x8282;&#x70B9;&#x6709;&#x4E24;&#x4E2A;&#x65B9;&#x5411;&#xFF0C;&#x5F53;&#x53EA;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x662F;&#x5355;&#x884C;&#x7EBF;&#x3002;</p><p>&#x7531;&#x4E0A;&#x9762;node.xml&#x548C;edg.xml&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;netconvert&#x8F6C;&#x6362;&#x6210;net.xml&#x3002;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/bin$ ./netconvert --node-files /home/intel/Documents/Maps/map3.node.xml --edge-files /home/intel/Documents/Maps/map3.edg.xml -o /home/intel/Documents/Maps/map3.net.xml</span><br></pre></td></tr></table></figure><figure><img src="/posts/59170f05/1564038194572.png" alt="1564038194572"><figcaption>1564038194572</figcaption></figure><p>&#x5728;sumo-gui&#x4E2D;&#x770B;&#x4E00;&#x770B;&#x7ED3;&#x679C;&#xFF0C;&#x5982;&#x56FE;&#xFF1A;</p><figure><img src="/posts/59170f05/1564038718166.png" alt="1564038718166"><figcaption>1564038718166</figcaption></figure><p>&#x548C;&#x6211;&#x4EEC;&#x7684;&#x8BBE;&#x5B9A;&#x4E00;&#x81F4;&#xFF0C;&#x4E00;&#x5171;12&#x4E2A;node&#xFF0C;&#x7531;&#x5750;&#x6807;&#x53EF;&#x77E5;&#xFF0C;&#x5DE6;&#x4E0B;&#x89D2;&#x662F;node1&#xFF0C;&#x4E0B;&#x8FB9;&#x4E2D;&#x95F4;&#x662F;node2&#xFF0C;&#x7C7B;&#x578B;&#x5206;&#x522B;&#x4E3A;traffic_light&#x548C;priority&#xFF0C;&#x6240;&#x4EE5;&#x4E0B;&#x9762;&#x5C55;&#x793A;&#x7684;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x3002;</p><h2 id="rou.xml">rou.xml</h2><p>&#x6253;&#x5F00;rou.xml&#xFF0C;&#x5982;&#x56FE;</p><figure><img src="/posts/59170f05/1564039572399.png" alt="1564039572399"><figcaption>1564039572399</figcaption></figure><p>vehicle&#x6807;&#x7B7E;&#x6307;&#x7684;&#x5C31;&#x662F;&#x4E00;&#x8F86;&#x8F66;&#xFF0C;&#x800C;route&#x5219;&#x662F;&#x8FD9;&#x8F86;&#x8F66;&#x5C06;&#x884C;&#x9A76;&#x8FC7;&#x7684;&#x8DEF;&#x5F84;&#x3002;vehicle&#x6807;&#x7B7E;&#x7684;id&#x5C5E;&#x6027;&#x5C31;&#x662F;&#x8F66;&#x8F86;&#x7684;&#x540D;&#x79F0;&#xFF0C;depart&#x5C31;&#x662F;&#x51FA;&#x73B0;&#x5728;&#x4EFF;&#x771F;&#x4E2D;&#x7684;&#x65F6;&#x95F4;&#x3002;</p><p>&#x81EA;&#x5DF1;&#x5199;&#x4E00;&#x4E2A;rou.xml&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">routes</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">vType</span> <span class="attr">id</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">accel</span>=<span class="string">&quot;0.8&quot;</span> <span class="attr">decel</span>=<span class="string">&quot;4.5&quot;</span> <span class="attr">sigma</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">length</span>=<span class="string">&quot;5&quot;</span> <span class="attr">maxSpeed</span>=<span class="string">&quot;70&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;0&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;0.00&quot;</span> <span class="attr">type</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,0,0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeR-0-1 edgeU-0-2 edgeU-1-2 edgeL-2-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;1.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeR-3-1 edgeD-2-2 edgeL-2-1 edgeL-2-0 edgeU-2-0 edgeR-3-0&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;2&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;2.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeL-1-0 edgeU-1-0 edgeR-2-0 edgeU-2-1 edgeR-3-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;3&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;3.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeL-0-1 edgeU-0-1 edgeU-1-1 edgeL-2-0 edgeU-2-0 edgeR-3-0&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;4&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;4.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeR-3-1 edgeD-2-2 edgeL-2-1 edgeR-2-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;5&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;5.00&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeL-1-1 edgeU-1-1 edgeD-1-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">routes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5176;&#x4E2D;&#xFF0C;id&#x4E3A;0&#x7684;&#x8F66;&#x7684;&#x989C;&#x8272;&#x662F;&#x7EA2;&#x8272;&#xFF0C;&#x548C;&#x5176;&#x4ED6;&#x7684;&#x4F1A;&#x6709;&#x4E9B;&#x8BB8;&#x4E0D;&#x540C;&#x3002;</p><p>&#x8FD9;&#x79CD;&#x5BF9;&#x8F66;&#x8F86;&#x7684;&#x5B9A;&#x4E49;&#x4E0D;&#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E;&#x3002;</p><p>&#x4F46;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x5B9A;&#x4E49;&#x884C;&#x4EBA;&#xFF0C;&#x548C;&#x8F66;&#x8F86;&#x91CC;&#x9762;&#x8F7D;&#x4EBA;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x663E;&#x793A;&#x7684;&#x5B9A;&#x4E49;&#x3002;</p><p>&#x7C7B;&#x4F3C;&#x4E8E;&#x540E;&#x9762;&#x7684;type&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x91CC;&#x4E5F;&#x53EF;&#x4EE5;&#x6A21;&#x677F;&#x5316;&#x3002;&#x4F8B;&#x5982;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">routes</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">vType</span> <span class="attr">id</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">accel</span>=<span class="string">&quot;0.8&quot;</span> <span class="attr">decel</span>=<span class="string">&quot;4.5&quot;</span> <span class="attr">sigma</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">length</span>=<span class="string">&quot;5&quot;</span> <span class="attr">maxSpeed</span>=<span class="string">&quot;70&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">route</span> <span class="attr">id</span>=<span class="string">&quot;route0&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,1,0&quot;</span> <span class="attr">edges</span>=<span class="string">&quot;beg middle end rend&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">route</span>=<span class="string">&quot;route0&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;0&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,0,0&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">route</span>=<span class="string">&quot;route0&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;0&quot;</span> <span class="attr">color</span>=<span class="string">&quot;0,1,0&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">routes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#xFF0C;type&#x548C;route&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x540E;&#x9762;&#x7684;vehicle&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x4F7F;&#x7528;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x5730;&#x56FE;&#x662F;standard</p><figure><img src="/posts/59170f05/1564041859245.png" alt="1564041859245"><figcaption>1564041859245</figcaption></figure><p>route &#x5FC5;&#x987B;&#x6309;&#x7167;&#x5F00;&#x59CB;&#x65F6;&#x95F4;&#x6392;&#x5E8F;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x9ED8;&#x8BA4;&#x662F;&#x6309;&#x7167;200&#x65F6;&#x95F4;&#x7247;&#x7684;&#x95F4;&#x9694;&#x6765;&#x52A0;&#x8F7D;route &#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code>--route-steps</code>&#x53C2;&#x6570;&#x6765;&#x8C03;&#x6574;&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A;0&#xFF0C;&#x5373;<code>--route-steps 0</code>&#x8868;&#x793A;&#x4E00;&#x6B21;&#x6027;&#x52A0;&#x8F7D;&#x5168;&#x90E8;&#x6587;&#x4EF6;&#x3002;</p><p>&#x8F66;&#x7684;&#x957F;&#x5EA6;&#x4EE5;&#x53CA;&#x524D;&#x9762;&#x95F4;&#x8DDD;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x4F7F;&#x7528;&#x53C2;&#x6570;<code>length</code>&#x63CF;&#x8FF0;&#x8F66;&#x8F86;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x4F7F;&#x7528;<code>minGap</code>&#x63CF;&#x8FF0;&#x6700;&#x5C0F;&#x524D;&#x95F4;&#x8DDD;</p><p>&#x8FD9;&#x6837;&#xFF0C;&#x4E00;&#x8F86;&#x8F66;&#x5360;&#x636E;&#x7684;&#x7A7A;&#x95F4;&#x5C31;&#x662F;</p><figure><img src="/posts/59170f05/300px-Length_vs_minGap.svg.png" alt="Length vs minGap.svg"><figcaption>Length vs minGap.svg</figcaption></figure><p>&#x8F66;&#x8F86;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x7531;<code>vClass</code>&#x6765;&#x63CF;&#x8FF0;&#xFF0C;&#x9ED8;&#x8BA4;&#x7C7B;&#x578B;&#x662F;&#x666E;&#x901A;&#x79C1;&#x5BB6;&#x8F66;&#x3002;</p><p>&#x901A;&#x8FC7;&#x5982;&#x4E0B;&#x4FEE;&#x6539;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">routes</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">vType</span> <span class="attr">id</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">accel</span>=<span class="string">&quot;0.8&quot;</span> <span class="attr">decel</span>=<span class="string">&quot;4.5&quot;</span> <span class="attr">sigma</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">length</span>=<span class="string">&quot;10&quot;</span> <span class="attr">maxSpeed</span>=<span class="string">&quot;70&quot;</span> <span class="attr">vClass</span>=<span class="string">&quot;truck&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">vehicle</span> <span class="attr">id</span>=<span class="string">&quot;0&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;0.00&quot;</span> <span class="attr">type</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,0,0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;edgeR-0-1 edgeU-0-2 edgeU-1-2 edgeL-2-1&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">vehicle</span>&gt;</span></span><br><span class="line">   ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">routes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x628A;&#x4E00;&#x8F86;&#x8F66;&#x6539;&#x4E3A;&#x4E86;&#x7EA2;&#x8272;&#xFF0C;&#x5361;&#x8F66;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;10&#x3002;&#xFF08;&#x663E;&#x793A;&#x7684;&#x662F;real word&#x6A21;&#x5F0F;&#xFF09;</p><figure><img src="/posts/59170f05/1564129059369.png" alt="1564129059369"><figcaption>1564129059369</figcaption></figure><p>&#x8F66;&#x6D41;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x91CD;&#x590D;&#x7684;&#xFF0C;&#x9664;&#x4E86;&#x51FA;&#x53D1;&#x65F6;&#x95F4;&#x5916;&#xFF0C;&#x5176;&#x5177;&#x6709;&#x4E0E;&#x8F66;&#x8F86;&#x76F8;&#x540C;&#x7684;&#x53C2;&#x6570;&#x3002;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">flow</span> <span class="attr">id</span>=<span class="string">&quot;type1&quot;</span> <span class="attr">color</span>=<span class="string">&quot;1,1,0&quot;</span>  <span class="attr">begin</span>=<span class="string">&quot;0&quot;</span> <span class="attr">end</span>= <span class="string">&quot;7200&quot;</span> <span class="attr">period</span>=<span class="string">&quot;900&quot;</span> <span class="attr">type</span>=<span class="string">&quot;BUS&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route</span> <span class="attr">edges</span>=<span class="string">&quot;beg middle end rend&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stop</span> <span class="attr">busStop</span>=<span class="string">&quot;station1&quot;</span> <span class="attr">duration</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">flow</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x66F4;&#x591A;&#x7684;&#xFF0C;&#x8BF7;&#x67E5;&#x9605;<a href="https://sumo.dlr.de/wiki/Definition_of_Vehicles,_Vehicle_Types,_and_Routes" target="_blank" rel="noopener">&#x5B98;&#x65B9;&#x6587;&#x6863;</a>&#x3002;</p><h2 id="con.xml">con.xml</h2><p>&#x518D;&#x6765;&#x770B;sumo&#x4EFF;&#x771F;&#x9700;&#x8981;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5B98;&#x65B9;&#x7ED9;&#x7684;&#x8D44;&#x6599;&#x56FE;</p><figure><img src="/posts/59170f05/002y1HhYzy6VA1RWXH036&amp;690.jpeg" alt="SUMO&#x4F7F;&#x7528;&#x6559;&#x7A0B;(SUMO&#x7B14;&#x8BB0;/002y1HhYzy6VA1RWXH036&amp;690.jpeg)"><figcaption>SUMO&#x4F7F;&#x7528;&#x6559;&#x7A0B;(SUMO&#x7B14;&#x8BB0;/002y1HhYzy6VA1RWXH036&amp;690.jpeg)</figcaption></figure><p>type&#x4E5F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x5BF9;edge&#x7684;&#x7C7B;&#x578B;&#x505A;&#x4E2A;&#x4E00;&#x4E2A;&#x5C01;&#x88C5;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#x63CF;&#x8FF0;&#x5C31;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x4E86;&#x3002;&#x81F3;&#x4E8E;<code>con.xml</code>&#xFF0C;&#x5C31;&#x662F;&#x8F66;&#x9053;&#x5408;&#x5E76;&#x7684;&#x89C4;&#x5219;&#x3002;SUMO&#x9ED8;&#x8BA4;&#x662F;&#x5411;&#x53F3;&#x5408;&#x5E76;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5F53;&#x4E09;&#x8F66;&#x9053;&#x53D8;&#x6210;&#x4E8C;&#x8F66;&#x9053;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53F3;&#x5BF9;&#x9F50;&#xFF0C;&#x5DE6;&#x8FB9;&#x4E24;&#x4E2A;&#x8F66;&#x9053;&#x53D8;&#x6210;&#x4E00;&#x4E2A;&#x8F66;&#x9053;&#x3002;&#x5F53;&#x7136;&#x5566;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x9053;&#x8DEF;&#x90FD;&#x662F;&#x53F3;&#x5BF9;&#x9F50;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x6709;&#x4E86;&#x8FD9;&#x4E00;&#x6587;&#x4EF6;&#x7684;&#x4EA7;&#x751F;&#x3002;</p><p>&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#xFF0C;&#x5728;&#x4E0D;&#x52A0;connection&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x8BBE;&#x7F6E;<code>edgeU-0-2</code>&#x8F66;&#x9053;&#x4E3A;3&#xFF0C;&#x5982;&#x56FE;</p><figure><img src="/posts/59170f05/1564045108116.png" alt="1564045108116"><figcaption>1564045108116</figcaption></figure><p>&#x8BBE;&#x7F6E;<code>con.xml</code>&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">connections</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">connection</span> <span class="attr">from</span>=<span class="string">&quot;edgeU-0-2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;edgeU-1-2&quot;</span> <span class="attr">fromLane</span>=<span class="string">&quot;0&quot;</span> <span class="attr">toLane</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">connection</span> <span class="attr">from</span>=<span class="string">&quot;edgeU-0-2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;edgeL-1-1&quot;</span> <span class="attr">fromLane</span>=<span class="string">&quot;1&quot;</span> <span class="attr">toLane</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">connection</span> <span class="attr">from</span>=<span class="string">&quot;edgeU-0-2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;edgeD-0-2&quot;</span> <span class="attr">fromLane</span>=<span class="string">&quot;2&quot;</span> <span class="attr">toLane</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">connections</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x547D;&#x4EE4;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/sumo/bin$ ./netconvert --node-files /home/intel/Documents/Maps/map3.node.xml --edge-files /home/intel/Documents/Maps/map3.edg.xml --connection-files /home/intel/Documents/Maps/map3.con.xml -o /home/intel/Documents/Maps/map3.net.xml</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x56FE;&#xFF08;&#x628A;&#x5DE6;&#x4E00;&#x8F66;&#x9053;&#x7531;&#x5DE6;&#x8F6C;+&#x6389;&#x5934;&#x6539;&#x4E3A;&#x53EA;&#x5DE6;&#x8F6C;&#xFF0C;&#x4E2D;&#x95F4;&#x8F66;&#x9053;&#x7531;&#x76F4;&#x884C;&#x6539;&#x4E3A;&#x5DE6;&#x8F6C;&#xFF09;</p><figure><img src="/posts/59170f05/1564045956134.png" alt="1564045956134"><figcaption>1564045956134</figcaption></figure><p>&#x6CE8;&#x610F;&#xFF1A;&#x5728;<code>connection</code>&#x6807;&#x7B7E;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x63D0;&#x5230;&#x7684;&#x884C;&#x9A76;&#x8DEF;&#x5F84;&#x4F1A;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x4E0D;&#x5141;&#x8BB8;&#x7684;&#x3002;</p><h2 id="typ.xml">typ.xml</h2><p>&#x8FD9;&#x4E2A;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;type&#x7C7B;&#x4F9B;edge&#x4F7F;&#x7528;&#x3002;&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">edges</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;1fi&quot;</span> <span class="attr">from</span>=<span class="string">&quot;1&quot;</span> <span class="attr">to</span>=<span class="string">&quot;m1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;b&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;1si&quot;</span> <span class="attr">from</span>=<span class="string">&quot;m1&quot;</span> <span class="attr">to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;1o&quot;</span> <span class="attr">from</span>=<span class="string">&quot;0&quot;</span> <span class="attr">to</span>=<span class="string">&quot;1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;c&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;2fi&quot;</span> <span class="attr">from</span>=<span class="string">&quot;2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;m2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;b&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;2si&quot;</span> <span class="attr">from</span>=<span class="string">&quot;m2&quot;</span> <span class="attr">to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;2o&quot;</span> <span class="attr">from</span>=<span class="string">&quot;0&quot;</span> <span class="attr">to</span>=<span class="string">&quot;2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;c&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;3fi&quot;</span> <span class="attr">from</span>=<span class="string">&quot;3&quot;</span> <span class="attr">to</span>=<span class="string">&quot;m3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;b&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;3si&quot;</span> <span class="attr">from</span>=<span class="string">&quot;m3&quot;</span> <span class="attr">to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;3o&quot;</span> <span class="attr">from</span>=<span class="string">&quot;0&quot;</span> <span class="attr">to</span>=<span class="string">&quot;3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;c&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;4fi&quot;</span> <span class="attr">from</span>=<span class="string">&quot;4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;m4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;b&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;4si&quot;</span> <span class="attr">from</span>=<span class="string">&quot;m4&quot;</span> <span class="attr">to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">edge</span> <span class="attr">id</span>=<span class="string">&quot;4o&quot;</span> <span class="attr">from</span>=<span class="string">&quot;0&quot;</span> <span class="attr">to</span>=<span class="string">&quot;4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;c&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">edges</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">types</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">type</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;3&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;3&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;13.889&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">type</span> <span class="attr">id</span>=<span class="string">&quot;b&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;2&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;2&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;11.111&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">type</span> <span class="attr">id</span>=<span class="string">&quot;c&quot;</span> <span class="attr">priority</span>=<span class="string">&quot;1&quot;</span> <span class="attr">numLanes</span>=<span class="string">&quot;1&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;11.111&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">types</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#xFF0C;&#x751F;&#x6210;&#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netconvert --node-files exa.nod.xml --edge-files exa.edg.xml   --connection-files exa.con.xml --type-files exa.typ.xml   --output-file exa.net.xml</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x6CA1;&#x6709; <code>con.xml</code> &#x6216;&#x8005; <code>typ.xml</code> &#x5219;&#x5FFD;&#x7565;&#x5BF9;&#x5E94;&#x7684;&#x53C2;&#x6570;&#x3002;</p><p>&#x8FD8;&#x6709;&#x53E6;&#x5916;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x76F4;&#x63A5;&#x5199;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">edge-files</span> <span class="attr">value</span>=<span class="string">&quot;exa.edg.xml&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">node-files</span> <span class="attr">value</span>=<span class="string">&quot;exa.nod.xml&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type-files</span> <span class="attr">value</span>=<span class="string">&quot;exa.typ.xml&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">connection-files</span> <span class="attr">value</span>=<span class="string">&quot;exa.con.xml&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">output</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">output-file</span> <span class="attr">value</span>=<span class="string">&quot;exa.net.xml&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">output</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">processing</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">no-turnarounds</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">processing</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x6587;&#x4EF6;&#x7684;&#x540E;&#x7F00;&#x540D;&#x662F;<code>netc.cfg</code></p><p>&#x6267;&#x884C;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netconvert -c xxxx.netc.cfg</span><br></pre></td></tr></table></figure><p>&#x5373;&#x751F;&#x6210;<code>net.xml</code>&#x6587;&#x4EF6;&#x4E86;&#x3002;</p><h2 id="net.xml-1">net.xml</h2><p>&#x4E0A;&#x6587;&#x4E2D;&#x53EA;&#x89C4;&#x5B9A;&#x4E86;&#x8DEF;&#x53E3;&#x548C;&#x9053;&#x8DEF;&#x4FE1;&#x606F;&#xFF0C;&#x6CA1;&#x6709;&#x8BF4;&#x660E;&#x7EA2;&#x7EFF;&#x706F;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x7EA2;&#x7EFF;&#x706F;&#x7684;&#x4FE1;&#x606F;&#x5728;<code>net.xml</code>&#x6587;&#x4EF6;&#x4E2D;&#x3002;</p><p>&#x641C;&#x7D22;<code>tlLogic</code>&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure><img src="/posts/59170f05/1564047725414.png" alt="1564047725414"><figcaption>1564047725414</figcaption></figure><p>tlLogic&#x8282;&#x70B9;&#x4E2D;id&#x5C31;&#x662F;node&#x7684;id&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x5176;&#x5B9E;&#x9002;&#x5408;node&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;&#x3002;</p><p>type&#x5C31;&#x662F;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x662F;&#x52A8;&#x6001;&#x7684;&#x8FD8;&#x662F;&#x9759;&#x6001;&#x7684;&#x3002;&#x52A8;&#x6001;&#x7684;&#x5C31;&#x662F;&#x7528;API&#x63A5;&#x53E3;&#x5229;&#x7528;Phyton&#x7F16;&#x7A0B;&#x5B9E;&#x73B0;&#x3002;&#x8FD9;&#x91CC;&#x9762;&#x7528;&#x9759;&#x6001;&#x7684;&#x3002;programID&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x8FD9;&#x6BB5;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x786C;&#x7F16;&#x7801;&#x7684;id&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5176;&#x5B9E;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x5728;&#x4EFF;&#x771F;&#x8FC7;&#x7A0B;&#x4E2D;&#x662F;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x7684;&#xFF0C;&#x800C;&#x5C31;&#x662F;&#x6839;&#x636E;&#x8FD9;&#x4E2A;programID&#x6765;&#x786E;&#x5B9A;&#x9700;&#x8981;&#x6539;&#x53D8;&#x7684;&#x65B9;&#x5411;&#x3002;offset&#x5C31;&#x662F;&#x8FD9;&#x6BB5;&#x7F16;&#x7801;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x95F4;&#x3002;</p><p>phase&#x5B50;&#x6807;&#x7B7E;&#xFF1A;&#x4E00;&#x4E2A;&#x5341;&#x5B57;&#x8DEF;&#x53E3;&#x7684;&#x7EA2;&#x8DEF;&#x706F;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x4E0D;&#x540C;&#x60C5;&#x51B5;&#x90FD;&#x53EB;&#x505A;&#x4E00;&#x4E2A;&#x76F8;&#x4F4D;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x76F8;&#x4F4D;&#x6309;&#x7167;&#x987A;&#x5E8F;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5468;&#x671F;&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x5BF9;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x7F16;&#x8F91;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x7F16;&#x8F91;&#x5404;&#x4E2A;&#x76F8;&#x4F4D;&#xFF0C;&#x5E76;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x7EC4;&#x5408;&#x548C;&#x65F6;&#x95F4;&#x8BBE;&#x7F6E;&#xFF08;duration&#xFF09;.</p><p>&#x6539;&#x53D8;&#x76F8;&#x4F4D;&#x65F6;&#x957F;&#xFF08;duration&#xFF09;&#x5C31;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x7EA2;&#x7EFF;&#x706F;&#x6539;&#x53D8;&#x7684;&#x901F;&#x7387;&#x3002;&#x6539;&#x53D8;&#x76F8;&#x4F4D;&#x72B6;&#x6001;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x6BCF;&#x4E2A;&#x76F8;&#x4F4D;&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x4E0D;&#x540C;&#x901A;&#x884C;&#x72B6;&#x51B5;&#x3002;</p><h2 id="trips.xml">trips.xml</h2><p>&#x6253;&#x5F00;&#x524D;&#x6587;&#x4E2D;&#x6784;&#x5EFA;&#x7684;trips.xml&#x6587;&#x4EF6;&#xFF1A;</p><figure><img src="/posts/59170f05/1564106619630.png" alt="1564106619630"><figcaption>1564106619630</figcaption></figure><p>&#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x5728;router&#x6587;&#x4EF6;&#x91CC;&#x9762;&#x5B9A;&#x4E49;&#x4E86;&#x8F66;&#x8F86;&#x884C;&#x9A76;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5F88;&#x663E;&#x7136;&#xFF0C;&#x76F8;&#x5F53;&#x8D39;&#x529B;&#x6C14;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x6761;&#x4E00;&#x6761;&#x7684;&#x53BB;&#x89C4;&#x5212;&#xFF0C;&#x4F46;&#x662F;&#x5728;trip&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x8BF4;&#x660E;&#x8D77;&#x59CB;&#x70B9;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;SUMO&#x7684;duarouter.exe&#x5DE5;&#x5177;&#x4F1A;&#x81EA;&#x52A8;&#x8BA1;&#x7B97;&#x6700;&#x4F18;&#x5316;&#x8DEF;&#x5F84;&#xFF0C;&#x5E76;&#x4E14;&#x751F;&#x6210;router&#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5728;&#x6559;&#x7A0B;&#x4E00;&#x4E2D;&#x6211;&#x4EEC;randomTrips&#x751F;&#x6210;&#x7684;&#x662F;trip&#x6587;&#x4EF6;&#x800C;&#x4E0D;&#x76F4;&#x63A5;&#x662F;router&#x6587;&#x4EF6;&#x7684;&#x539F;&#x56E0;&#x3002;</p><h1 id="&#x6A21;&#x62DF;&#x89C4;&#x5219;&#x5206;&#x6790;">&#x6A21;&#x62DF;&#x89C4;&#x5219;&#x5206;&#x6790;</h1><p>SUMO&#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x79CD;&#x7EAF;&#x7CB9;&#x7684;&#x5FAE;&#x89C2;&#xFF08;microscopic&#xFF09;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x3002;&#x6BCF;&#x8F86;&#x8F66;&#x7ED9;&#x5B9A;&#x6807;&#x8BC6;&#x7B26;&#xFF08;&#x540D;&#x79F0;&#xFF09;&#xFF0C;&#x51FA;&#x53D1;&#x65F6;&#x95F4;&#x548C;&#x8F66;&#x8F86;&#x5728;&#x9053;&#x8DEF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x8DEF;&#x7EBF;&#x3002;&#x800C;&#x4E00;&#x4E2A;&#x5B8F;&#x89C2;&#xFF08;macroscopic&#xFF09;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x5668;&#x4F1A;&#x628A;&#x6574;&#x4E2A;&#x4EA4;&#x901A;&#x6D41;&#x770B;&#x6210;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x3002;SUMO&#x8FD8;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x51FA;&#x53D1;&#x548C;&#x5230;&#x8FBE;&#x5C5E;&#x6027;&#xFF0C;&#x4F8B;&#x5982;&#x8F66;&#x9053;&#xFF0C;&#x901F;&#x5EA6;&#x6216;&#x4F4D;&#x7F6E;&#x3002;&#x6BCF;&#x8F86;&#x8F66;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#xFF0C;&#x8BE5;&#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x8F66;&#x8F86;&#x7684;&#x7269;&#x7406;&#x7279;&#x6027;&#x548C;&#x8FD0;&#x52A8;&#x6A21;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x3002;</p><p>&#x6A21;&#x62DF;&#x662F;&#x65F6;&#x95F4;&#x79BB;&#x6563;&#x548C;&#x7A7A;&#x95F4;&#x8FDE;&#x7EED;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x5185;&#x90E8;&#x63CF;&#x8FF0;&#x6BCF;&#x4E2A;&#x8F66;&#x8F86;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5373;&#x6240;&#x5728;&#x7684;&#x8F66;&#x9053;&#x548C;&#x4ECE;&#x8D77;&#x70B9;&#x5F00;&#x59CB;&#x7684;&#x8DDD;&#x79BB;&#x3002;&#x5F53;&#x8F66;&#x8F86;&#x79FB;&#x52A8;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x8DDF;&#x8F66;&#x6A21;&#x578B;&#xFF08;car-following model&#xFF09;&#x8BA1;&#x7B97;&#x8F66;&#x901F;&#x3002;&#x9664;&#x4E86;&#x4F20;&#x7EDF;&#x7684;&#x4EA4;&#x901A;&#x63AA;&#x65BD;&#x5916;&#xFF0C;SUMO&#x8FD8;&#x6269;&#x5C55;&#x52A0;&#x4E0A;&#x4E86;&#x566A;&#x58F0;&#x6392;&#x653E;&#x548C;&#x6C61;&#x67D3;&#x7269;&#x6392;&#x653E;/&#x71C3;&#x6599;&#x6D88;&#x8017;&#x6A21;&#x578B;&#x3002;</p><p>SUMO&#x4EA4;&#x901A;&#x5EFA;&#x6A21;&#xFF08;Traffic Modeler&#xFF09;&#x5B9A;&#x4E49;&#x7ED9;&#x5B9A;&#x533A;&#x57DF;&#x7684;&#x4EA4;&#x901A;&#x7FA4;&#x4F53;&#x603B;&#x6570;&#x5E76;&#x8BA1;&#x7B97;&#x8BE5;&#x7FA4;&#x4F53;&#x7684;&#x79FB;&#x52A8;&#x6027;&#x613F;&#x671B;&#xFF0C;&#x4F5C;&#x4E3A;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x5668;&#x7684;&#x8F93;&#x5165;&#x3002;</p><p>&#x6A21;&#x5757;SUMO-ROUTER&#x8BFB;&#x53D6;&#x5C06;&#x8981;&#x6A21;&#x62DF;&#x7684;&#x4E00;&#x7EC4;&#x865A;&#x62DF;&#x7FA4;&#x4F53;&#x7684;&#x51FA;&#x53D1;&#x65F6;&#x95F4;&#xFF0C;&#x8D77;&#x70B9;&#x548C;&#x76EE;&#x7684;&#x5730;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;Dijkstra&#x8DEF;&#x7531;&#x7B97;&#x6CD5;&#x8BA1;&#x7B97;&#x5728;&#x4EA4;&#x901A;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x8DEF;&#x7EBF;&#x3002;</p><p>SUMO&#x7684;&#x8F66;-&#x9A7E;&#x9A76;&#x5458;&#x6A21;&#x578B;&#xFF08;Car-Driver Model&#xFF09;&#x91C7;&#x7528;Gipps&#x6A21;&#x578B;&#x7684;&#x6269;&#x5C55;&#x578B;&#x3002;&#x5B83;&#x80FD;&#x591F;&#x663E;&#x793A;&#x4EA4;&#x901A;&#x7684;&#x4E3B;&#x8981;&#x7279;&#x5F81;&#xFF0C;&#x5982;&#x81EA;&#x7531;&#x6D41;&#x548C;&#x62E5;&#x6324;&#x6D41;&#x3002;&#x5728;&#x6BCF;&#x4E2A;&#x65F6;&#x95F4;&#x6B65;&#x9AA4;&#xFF0C;&#x8F66;&#x8F86;&#x7684;&#x901F;&#x5EA6;&#x9002;&#x5E94;&#x4E8E;&#x524D;&#x8F66;&#x7684;&#x901F;&#x5EA6;&#xFF0C;&#x907F;&#x514D;&#x5728;&#x968F;&#x540E;&#x7684;&#x6B65;&#x9AA4;&#x4E2D;&#x4EA7;&#x751F;&#x78B0;&#x649E;&#x3002;&#x8BE5;&#x901F;&#x5EA6;&#x79F0;&#x4E3A;&#x5B89;&#x5168;&#x901F;&#x5EA6;&#xFF0C;&#x8BA1;&#x7B97;</p><figure><img src="/posts/59170f05/v2-298450474523ab1e8fe105bd09d71ee4_hd.jpg" alt="img"><figcaption>img</figcaption></figure><p>&#x5176;&#x4E2D;vl(t)&#x662F;&#x524D;&#x8F66;&#x901F;&#x5EA6;&#xFF0C;g(t)&#x662F;&#x524D;&#x8F66;&#x7684;&#x95F4;&#x8DDD;&#xFF0C;t&#x662F;&#x53F8;&#x673A;&#x53CD;&#x5E94;&#x65F6;&#x95F4;&#xFF08;&#x4E00;&#x822C;1&#x79D2;&#xFF09;&#xFF0C;&#x800C;b&#x662F;&#x51CF;&#x901F;&#x5EA6;&#x51FD;&#x6570;&#x3002;</p><p>&#x8F66;&#x8F86;&#x7684;&#x201C;&#x5E0C;&#x671B;&#x201D;&#x6216;&#x201C;&#x671F;&#x671B;&#x201D;&#x901F;&#x5EA6;&#x53D6;&#x4E0B;&#x9762;&#x4E09;&#x4E2A;&#x4E2D;&#x7684;&#x6700;&#x5C0F;&#x503C;&#xFF1A;&#x53EF;&#x80FD;&#x7684;&#x6700;&#x5927;&#x901F;&#x5EA6;&#x3001;&#x8F66;&#x901F;&#x52A0;&#x4E0A;&#x6700;&#x5927;&#x52A0;&#x901F;&#x5EA6;&#xFF0C;&#x5982;&#x4E0A;&#x8BA1;&#x7B97;&#x7684;&#x5B89;&#x5168;&#x901F;&#x5EA6;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5176;&#x671F;&#x671B;&#x8F66;&#x901F;&#x4E3A;&#xFF1A;</p><figure><img src="/posts/59170f05/v2-43536905950a01208fda418a0909a753_hd.png" alt="img"><figcaption>img</figcaption></figure><p>&#x5176;&#x4E2D;a&#x662F;&#x6700;&#x5927;&#x52A0;&#x901F;&#x5EA6;&#x3002;</p><p>&#x5982;&#x679C;&#x6A21;&#x62DF;&#x4E2D;&#x8BA4;&#x4E3A;&#xFF0C;&#x9A7E;&#x9A76;&#x5458;&#x4F1A;&#x72AF;&#x9519;&#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x9002;&#x5E94;&#x671F;&#x671B;&#x7684;&#x901F;&#x5EA6;&#xFF0C;&#x8FD9;&#x6837;&#x5B9E;&#x9645;&#x901F;&#x5EA6;&#x5C31;&#x51CF;&#x53BB;&#x968F;&#x673A;&#x7684;&#x201C;&#x4EBA;&#x4E3A;&#x9519;&#x8BEF;&#x201D;&#xFF1A;</p><figure><img src="/posts/59170f05/v2-e3f933869dbeb54f2c73efdea61acb22_hd.png" alt="img"><figcaption>img</figcaption></figure><p>&#x5176;&#x4E2D;e&#x662F;&#x6270;&#x52A8;&#x7CFB;&#x6570;&#x3002;&#x7531;&#x4E8E;&#x8F66;&#x8F86;&#x4E0D;&#x5F97;&#x5411;&#x540E;&#x884C;&#x9A76;&#xFF0C;&#x6240;&#x4EE5;&#x8F66;&#x8F86;&#x5F53;&#x524D;&#x901F;&#x5EA6;&#x662F;&#x8BA1;&#x7B97;&#x7684;&#x901F;&#x5EA6;&#x548C;&#x96F6;&#x7684;&#x6700;&#x5927;&#x503C;&#x3002;</p><p>&#x8BE5;&#x6A21;&#x578B;&#x662F;&#x65E0;&#x78B0;&#x649E;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6A21;&#x62DF;&#x4E2D;&#x4E0D;&#x5141;&#x8BB8;&#x6A21;&#x578B;&#x7684;&#x4E0D;&#x5B8C;&#x6574;&#x9020;&#x6210;&#x7684;&#x53D8;&#x5F02;&#xFF08;artifact&#xFF09;&#x51FA;&#x73B0;&#x3002;</p><p>SUMO&#x63D0;&#x4F9B;V2X&#x7684;&#x53EF;&#x80FD;&#xFF0C;&#x53EF;&#x4EE5;&#x8026;&#x5408;&#x5916;&#x90E8;&#x901A;&#x4FE1;&#x4EFF;&#x771F;&#x5668;&#xFF0C;&#x5982;ns2&#x6216;ns3 &#x3002;</p><p>SUMO&#x7ED9;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x4EA4;&#x901A;&#x9700;&#x6C42;&#x6216;&#x4E00;&#x7EC4;&#x8F66;&#x8F86;&#x4F1A;&#x5206;&#x914D;&#x9002;&#x5F53;&#x8DEF;&#x7EBF;&#x3002;&#x5176;&#x4E3B;&#x8981;&#x4EFB;&#x52A1;&#x662F;&#x5BF9;&#x4EA4;&#x901A;&#x53C2;&#x4E0E;&#x8005;&#x9009;&#x62E9;&#x8DEF;&#x7EBF;&#xFF08;&#x901A;&#x8FC7;&#x7ED9;&#x5B9A;&#x9053;&#x8DEF;&#x7F51;&#x7EDC;&#x7684;&#x8DEF;&#x5F84;&#xFF09;&#x5230;&#x76EE;&#x7684;&#x5730;&#x7684;&#x8FC7;&#x7A0B;&#x5EFA;&#x6A21;&#x3002;&#x7531;&#x4E8E;&#x901A;&#x8FC7;&#x8DEF;&#x7EBF;&#x56FE;&#x8FB9;&#x7F18;&#x7684;&#x65F6;&#x95F4;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x53D6;&#x51B3;&#x4E8E;&#x4F7F;&#x7528;&#x6B64;&#x8FB9;&#x7F18;&#x7684;&#x4EA4;&#x901A;&#x53C2;&#x4E0E;&#x8005;&#x6570;&#x91CF;&#xFF0C;&#x56E0;&#x6B64;&#x8DEF;&#x7EBF;&#x8BA1;&#x7B97;&#x662F;&#x5B9E;&#x73B0;&#x5927;&#x89C4;&#x6A21;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x7684;&#x5173;&#x952E;&#x6B65;&#x9AA4;&#x3002;&#x5728;SUMO&#xFF0C;&#x8FD9;&#x88AB;&#x53EB;&#x505A;&#x201C;&#x7528;&#x6237;&#x5206;&#x914D;&#xFF08;user assignment&#xFF09;&#x201D;&#x6216;&#x201C;&#x4EA4;&#x901A;&#x5206;&#x914D;&#xFF08;traffic assignment&#xFF09;&#x201D;&#x3002;</p><h1 id="&#x4EA4;&#x901A;&#x63A7;&#x5236;&#x63A5;&#x53E3;traci-&#x793A;&#x4F8B;">&#x4EA4;&#x901A;&#x63A7;&#x5236;&#x63A5;&#x53E3;TraCI-&#x793A;&#x4F8B;</h1><h2 id="&#x6982;&#x8FF0;">&#x6982;&#x8FF0;</h2><p>TraCI&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x63A7;&#x5236;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x4EA4;&#x901A;&#x6A21;&#x62DF;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x57FA;&#x4E8E;Client/Server&#x6A21;&#x578B;&#xFF0C;SUMO&#x4F5C;&#x4E3A;Server &#xFF0C;&#x5916;&#x90E8;&#x811A;&#x672C;&#x4F5C;&#x4E3A;Client&#x3002;</p><p>&#x4EE5;<code>TraCIPedCrossing</code>&#x4E3A;&#x4F8B;&#xFF0C;&#x5206;&#x6790;&#x4EE3;&#x7801;&#x3002;</p><h2 id="&#x8FD0;&#x884C;-1">&#x8FD0;&#x884C;</h2><p>demo&#x4F4D;&#x7F6E;&#x5728;<code>sumo/tests/complex/tutorial/traci_pedestrian_crossing/</code>&#x4E0B;&#x3002;</p><p>&#x5728;&#x8FD0;&#x884C;&#x4E4B;&#x524D;&#x9700;&#x8981;&#x628A;&#x8BBE;&#x7F6E;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export SUMO_HOME=/usr/local/share/sumo/</span><br></pre></td></tr></table></figure><p>&#x8FD0;&#x884C;&#x8BE5;&#x76EE;&#x5F55;&#x4E0B;&#x7684;<code>./runner.py</code>&#x5373;&#x53EF;&#xFF08;&#x9ED8;&#x8BA4;&#xFF09;&#x770B;&#x5230;sumo-gui&#xFF0C;&#x70B9;&#x51FB;&#x5C0F;&#x4E09;&#x89D2;&#x5373;&#x53EF;&#x64AD;&#x653E;&#x3002;</p><figure><img src="/posts/59170f05/1564133658760.png" alt="1564133658760"><figcaption>1564133658760</figcaption></figure><h2 id="&#x4FEE;&#x6539;">&#x4FEE;&#x6539;</h2><p><strong>&#x5728;&#x4E4B;&#x524D;&#x8FD0;&#x884C;&#x8FC7;&#x4E00;&#x904D;&#x7684;&#x57FA;&#x7840;&#x4E0A;</strong></p><p>&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x6548;&#x679C;&#x4E0D;&#x592A;&#x660E;&#x663E;&#xFF0C;&#x770B;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x968F;&#x673A;&#x751F;&#x6210;&#x7684;&#x884C;&#x4EBA;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x5747;&#x5300;&#x7684;&#x3002;</p><p>&#x4FEE;&#x6539;<code>traci_pedestrian_crossing/data</code>&#x4E0B;&#x7684;<code>run.sumocfg</code>&#x6587;&#x4EF6;&#xFF0C;&#x628A;<code>input</code>&#x6807;&#x7B7E;&#x4E0B;&#x7684;<code>route-files</code>&#x6539;&#x4E3A;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">net-file</span> <span class="attr">value</span>=<span class="string">&quot;../pedcrossing.net.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">route-files</span> <span class="attr">value</span>=<span class="string">&quot;pedcrossing.rou.xml,../pedestrians2.trip.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">additional-files</span> <span class="attr">value</span>=<span class="string">&quot;pedcrossing.tll.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5373;&#x7531;&#x9ED8;&#x8BA4;&#x7684;<code>pedestrians.trip.xml</code>&#x6539;&#x4E3A;<code>pedestrians2.trip.xml</code>&#x3002;</p><p>&#x628A;&#x4E4B;&#x524D;&#x968F;&#x673A;&#x751F;&#x6210;&#x7684;<code>pedestrians.trip.xml</code>&#x4FEE;&#x6539;&#x4E00;&#x4E0B;&#xFF0C;&#x5982;&#x4E0B;&#x662F;&#x6211;&#x6539;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x628A;300&#xFF5E;600&#x4E4B;&#x95F4;&#x7A7A;&#x51FA;&#x6765;&#x4E86;&#x3002;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">......    </span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">&quot;ped8&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;244.00&quot;</span> <span class="attr">departPos</span>=<span class="string">&quot;random&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">walk</span> <span class="attr">from</span>=<span class="string">&quot;NC&quot;</span> <span class="attr">to</span>=<span class="string">&quot;CS&quot;</span> <span class="attr">arrivalPos</span>=<span class="string">&quot;random&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">&quot;ped9&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;270.00&quot;</span> <span class="attr">departPos</span>=<span class="string">&quot;random&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">walk</span> <span class="attr">from</span>=<span class="string">&quot;NC&quot;</span> <span class="attr">to</span>=<span class="string">&quot;CS&quot;</span> <span class="attr">arrivalPos</span>=<span class="string">&quot;random&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">&quot;ped10&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;633.00&quot;</span> <span class="attr">departPos</span>=<span class="string">&quot;random&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">walk</span> <span class="attr">from</span>=<span class="string">&quot;CS&quot;</span> <span class="attr">to</span>=<span class="string">&quot;NC&quot;</span> <span class="attr">arrivalPos</span>=<span class="string">&quot;random&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">&quot;ped11&quot;</span> <span class="attr">depart</span>=<span class="string">&quot;634.00&quot;</span> <span class="attr">departPos</span>=<span class="string">&quot;random&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">walk</span> <span class="attr">from</span>=<span class="string">&quot;CS&quot;</span> <span class="attr">to</span>=<span class="string">&quot;NC&quot;</span> <span class="attr">arrivalPos</span>=<span class="string">&quot;random&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6548;&#x679C;&#x5C31;&#x5F88;&#x660E;&#x663E;&#x4E86;&#xFF0C;300&#xFF5E;600&#x4E4B;&#x95F4;&#x6CA1;&#x6709;&#x884C;&#x4EBA;&#xFF0C;&#x7EA2;&#x7EFF;&#x706F;&#x4F1A;&#x4FDD;&#x6301;&#x4E00;&#x76F4;&#x90FD;&#x662F;&#x7EFF;&#x706F;&#x3002;</p><figure><img src="/posts/59170f05/1564133692244.png" alt="1564133692244"><figcaption>1564133692244</figcaption></figure><h2 id="&#x5206;&#x6790;">&#x5206;&#x6790;</h2><p>&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x903B;&#x8F91;&#x6587;&#x4EF6;&#x5728;<code>/dadapedcrossing.tll.xml</code>&#x6587;&#x4EF6;&#x4E2D;&#x3002;&#x5982;&#x4E0B;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tlLogic</span> <span class="attr">id</span>=<span class="string">&quot;C&quot;</span> <span class="attr">type</span>=<span class="string">&quot;static&quot;</span> <span class="attr">programID</span>=<span class="string">&quot;custom&quot;</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">phase</span> <span class="attr">duration</span>=<span class="string">&quot;100000&quot;</span> <span class="attr">state</span>=<span class="string">&quot;GGGGr&quot;</span>/&gt;</span> <span class="comment">&lt;!-- do not switch vehicle phase automatically --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">phase</span> <span class="attr">duration</span>=<span class="string">&quot;4&quot;</span> <span class="attr">state</span>=<span class="string">&quot;yyyyr&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">phase</span> <span class="attr">duration</span>=<span class="string">&quot;10&quot;</span> <span class="attr">state</span>=<span class="string">&quot;rrrrG&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">phase</span> <span class="attr">duration</span>=<span class="string">&quot;10&quot;</span> <span class="attr">state</span>=<span class="string">&quot;rrrrr&quot;</span>/&gt;</span> <span class="comment">&lt;!-- give pedestrians time to clear the intersection --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tlLogic</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6709;<a href="https://blog.csdn.net/davidhopper/article/details/81871872" target="_blank" rel="noopener">&#x535A;&#x4E3B;</a>&#x5206;&#x6790;&#x4E86;&#x4EE3;&#x7801;&#x7EA2;&#x7EFF;&#x706F;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x4E0D;&#x8FC7;&#x6211;&#x8BA4;&#x4E3A;&#x4ED6;&#x5206;&#x6790;&#x7684;&#x662F;&#x9519;&#x7684;&#x3002;&#x6211;&#x7684;&#x5206;&#x6790;&#x5982;&#x4E0B;&#xFF1A;</p><ul><li>&#x9ED8;&#x8BA4;&#x72B6;&#x6001;&#x662F;&quot;GGGGr&quot;&#xFF08;phase = 0&#xFF09;&#x8868;&#x793A;&#x6A2A;&#x5411;&#x662F;&#x7EFF;&#x706F;&#xFF0C;&#x7EB5;&#x5411;&#xFF08;&#x884C;&#x4EBA;&#x6A2A;&#x7A7F;&#x9A6C;&#x8DEF;&#x65B9;&#x5411;&#xFF09;&#x662F;&#x7EA2;&#x706F;&#x3002;&#x7EFF;&#x706F;&#x6301;&#x7EED;&#x65F6;&#x95F4;&#x662F;100000&#x65F6;&#x95F4;&#x7247;&#x3002;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#x8868;&#x793A;&#x8981;&#x51CF;&#x901F;&#x3002;</li><li>&#x72B6;&#x6001;&quot;yyyyr&quot;&#xFF08;phase = 1&#xFF09;&#x8868;&#x793A;&#x6A2A;&#x5411;&#x662F;&#x9EC4;&#x706F;&#xFF0C;&#x7EB5;&#x5411;&#x662F;&#x7EA2;&#x706F;&#xFF0C;&#x6B64;&#x72B6;&#x6001;&#x6301;&#x7EED;&#x65F6;&#x95F4;4&#x65F6;&#x95F4;&#x7247;&#xFF1B;</li><li>&#x72B6;&#x6001;&quot;rrrrG&quot;&#xFF08;phase = 2&#xFF09;&#x8868;&#x793A;&#x6A2A;&#x5411;&#x662F;&#x7EA2;&#x706F;&#xFF0C;&#x7EB5;&#x5411;&#x662F;&#x7EFF;&#x706F;&#xFF0C;&#x6B64;&#x72B6;&#x6001;&#x6301;&#x7EED;&#x65F6;&#x95F4;10&#x65F6;&#x95F4;&#x7247;&#xFF1B;</li><li>&#x72B6;&#x6001;&quot;rrrrr&quot;&#xFF08;phase = 3&#xFF09;&#x8868;&#x793A;&#x6A2A;&#x7AD6;&#x90FD;&#x662F;&#x7EA2;&#x706F;&#xFF0C;&#x6B64;&#x72B6;&#x6001;&#x6301;&#x7EED;10&#x65F6;&#x95F4;&#x7247;&#x3002;</li></ul><p>&#x4E0A;&#x8FF0;&#x72B6;&#x6001;&#x9664;&#x4E86;phase = 0&#x5207;&#x6362;&#x5230;phase = 1&#x9700;&#x8981;&#x4EBA;&#x5DE5;&#x6307;&#x5B9A;&#x5916;&#xFF0C;&#x5176;&#x4F59;&#x60C5;&#x51B5;&#x90FD;&#x4F1A;&#x5728;&#x6BCF;&#x4E2A;&#x72B6;&#x6001;&#x6307;&#x5B9A;&#x7684;&#x6301;&#x7EED;&#x65F6;&#x95F4;&#x540E;&#x81EA;&#x52A8;&#x5207;&#x6362;&#x5230;&#x540E;&#x7EED;&#x72B6;&#x6001;&#x3002;</p><p><code>runner.py</code>&#x7684;&#x4EE3;&#x7801;&#x5206;&#x6790;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x4E3A;&#x517C;&#x5BB9;python 2.7&#x6240;&#x505A;&#x7684;&#x63AA;&#x65BD;</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5BFC;&#x5165;&#x76F8;&#x5173;&#x5305;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> optparse</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x672C;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55;</span></span><br><span class="line">THISDIR = os.path.dirname(__file__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x9700;&#x8981;&#x4ECE;$SUMO_HOME/tools&#x76EE;&#x5F55;&#x5BFC;&#x5165;&#x76F8;&#x5173;&#x5305;&#xFF0C;&#x4E3A;&#x6B64;&#x9700;&#x8981;&#x5148;&#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;SUMO_HOME&#xFF0C;</span></span><br><span class="line"><span class="comment"># &#x82E5;&#x672A;&#x8BBE;&#x7F6E;&#xFF0C;&#x8BF7;&#x8BBE;&#x7F6E;&#x4E4B;&#x3002;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># tutorial in tests</span></span><br><span class="line">    sys.path.append(os.path.join(THISDIR, <span class="string">&apos;..&apos;</span>, <span class="string">&apos;..&apos;</span>, <span class="string">&apos;..&apos;</span>, <span class="string">&apos;..&apos;</span>, <span class="string">&quot;tools&quot;</span>))</span><br><span class="line">    <span class="comment"># tutorial in docs</span></span><br><span class="line">    sys.path.append(os.path.join(os.environ.get(<span class="string">&quot;SUMO_HOME&quot;</span>, os.path.join(</span><br><span class="line">        THISDIR, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;..&quot;</span>)), <span class="string">&quot;tools&quot;</span>))  </span><br><span class="line">    <span class="keyword">import</span> traci</span><br><span class="line">    <span class="keyword">from</span> sumolib <span class="keyword">import</span> checkBinary  <span class="comment"># noqa</span></span><br><span class="line">    <span class="keyword">import</span> randomTrips</span><br><span class="line"><span class="keyword">except</span> ImportError:</span><br><span class="line">    sys.exit(</span><br><span class="line">        <span class="string">&quot;please declare environment variable &apos;SUMO_HOME&apos; as the root directory of your sumo installation (it should contain folders &apos;bin&apos;, &apos;tools&apos; and &apos;docs&apos;)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8F66;&#x8F86;&#x7684;&#x6700;&#x77ED;&#x7EFF;&#x706F;&#x65F6;&#x95F4;</span></span><br><span class="line">MIN_GREEN_TIME = <span class="number">15</span></span><br><span class="line"><span class="comment"># &#x7EA2;&#x7EFF;&#x706F;&#x4EFF;&#x771F;&#x8BA1;&#x5212;&#x7684;&#x521D;&#x59CB;&#x72B6;&#x6001;&#xFF0C;&#x53C2;&#x89C1;&apos;pedcrossing.tll.xml&apos;    </span></span><br><span class="line">VEHICLE_GREEN_PHASE = <span class="number">0</span></span><br><span class="line"><span class="comment"># &#x7EA2;&#x7EFF;&#x706F;&#x7684;ID&#xFF08;&#x4EC5;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#xFF09;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x5B83;&#x4E0E;&#x53D7;&#x63A7;&#x4EA4;&#x53C9;&#x8DEF;&#x53E3;&#x7684;ID&#x76F8;&#x540C;&#x3002;</span></span><br><span class="line">TLSID = <span class="string">&apos;C&apos;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x53D7;&#x63A7;&#x4EA4;&#x53C9;&#x53E3;&#x7684;&#x4EBA;&#x884C;&#x6A2A;&#x9053;&#x8FB9;&#x754C;</span></span><br><span class="line">WALKINGAREAS = [<span class="string">&apos;:C_w0&apos;</span>, <span class="string">&apos;:C_w1&apos;</span>]</span><br><span class="line">CROSSINGS = [<span class="string">&apos;:C_c0&apos;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># TraCI&#x63A7;&#x5236;&#x4E3B;&#x5FAA;&#x73AF;&#x8FC7;&#x7A0B;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span>   </span><br><span class="line">    <span class="comment"># &#x8BB0;&#x5F55;&#x5141;&#x8BB8;&#x8F66;&#x8F86;&#x901A;&#x884C;&#x7684;&#x7EFF;&#x706F;&#x6301;&#x7EED;&#x65F6;&#x95F4;    </span></span><br><span class="line">    greenTimeSoFar = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x884C;&#x4EBA;&#x8FC7;&#x9A6C;&#x8DEF;&#x6309;&#x94AE;&#x662F;&#x5426;&#x6309;&#x4E0B;</span></span><br><span class="line">    activeRequest = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x4E3B;&#x5FAA;&#x73AF;&#x3002;&#x5728;&#x6BCF;&#x4E2A;&#x4EFF;&#x771F;&#x6B65;&#x9AA4;&#x4E2D;&#x6267;&#x884C;&#x67D0;&#x4E9B;&#x64CD;&#x4F5C;&#xFF0C;&#x76F4;&#x5230;&#x573A;&#x666F;&#x4E2D;&#x6CA1;&#x6709;&#x65B0;&#x7684;&#x8F66;&#x8F86;&#x52A0;&#x5165;&#x6216;&#x73B0;&#x6709;&#x8F66;&#x8F86;&#x884C;&#x9A76;</span></span><br><span class="line">    <span class="keyword">while</span> traci.simulation.getMinExpectedNumber() &gt; <span class="number">0</span>:</span><br><span class="line">        traci.simulationStep()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5982;&#x679C;&#x8F66;&#x8F86;&#x7684;&#x7EFF;&#x706F;&#x65F6;&#x95F4;&#x8D85;&#x8FC7;&#x6700;&#x77ED;&#x7EFF;&#x706F;&#x65F6;&#x95F4;&#xFF0C;&#x5219;&#x786E;&#x5B9A;&#x662F;&#x5426;&#x6709;&#x7B49;&#x5F85;&#x8FC7;&#x9A6C;&#x8DEF;&#x7684;&#x884C;&#x4EBA;&#xFF0C;&#x5E76;&#x5207;&#x6362;&#x4FE1;&#x53F7;&#x706F;&#x72B6;&#x6001;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> activeRequest:</span><br><span class="line">            activeRequest = checkWaitingPersons()</span><br><span class="line">        <span class="keyword">if</span> traci.trafficlight.getPhase(TLSID) == VEHICLE_GREEN_PHASE:</span><br><span class="line">            greenTimeSoFar += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> greenTimeSoFar &gt; MIN_GREEN_TIME:</span><br><span class="line"></span><br><span class="line">                <span class="comment"># &#x68C0;&#x6D4B;&#x884C;&#x4EBA;&#x662F;&#x5426;&#x6309;&#x4E0B;&#x4E86;&#x8FC7;&#x9A6C;&#x8DEF;&#x6309;&#x94AE;</span></span><br><span class="line">                <span class="keyword">if</span> activeRequest:</span><br><span class="line">                    <span class="comment"># &#x4FE1;&#x53F7;&#x706F;&#x5207;&#x6362;&#x81F3;&#x53E6;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#xFF0C;&#x5373;&#x975E;&#x7EFF;&#x706F;&#x72B6;&#x6001;</span></span><br><span class="line">                    <span class="comment"># VEHICLE_GREEN_PHASE + 1&#x8868;&#x660E;&#x5207;&#x6362;&#x5230;&#x9EC4;&#x706F;&#x8F6C;&#x7EA2;&#x706F;&#x72B6;&#x6001;</span></span><br><span class="line">                    traci.trafficlight.setPhase(</span><br><span class="line">                        TLSID, VEHICLE_GREEN_PHASE + <span class="number">1</span>)</span><br><span class="line">                    <span class="comment"># &#x590D;&#x4F4D;&#x76F8;&#x5173;&#x53D8;&#x91CF;</span></span><br><span class="line">                    activeRequest = <span class="keyword">False</span></span><br><span class="line">                    greenTimeSoFar = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    traci.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x68C0;&#x6D4B;&#x662F;&#x5426;&#x6709;&#x884C;&#x4EBA;&#x9700;&#x8981;&#x8FC7;&#x9A6C;&#x8DEF;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkWaitingPersons</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x68C0;&#x6D4B;&#x8DEF;&#x53E3;&#x4E24;&#x4FA7;&#x7684;&#x884C;&#x4EBA;</span></span><br><span class="line">    <span class="keyword">for</span> edge <span class="keyword">in</span> WALKINGAREAS:</span><br><span class="line">        peds = traci.edge.getLastStepPersonIDs(edge)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x68C0;&#x6D4B;&#x662F;&#x5426;&#x6709;&#x4EBA;&#x5728;&#x8DEF;&#x53E3;&#x7B49;&#x5F85;</span></span><br><span class="line">        <span class="comment"># &#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x884C;&#x4EBA;&#x5728;&#x7B49;&#x5F85;1&#x79D2;&#x540E;&#xFF0C;&#x624D;&#x6309;&#x4E0B;&#x8FC7;&#x9A6C;&#x8DEF;&#x6309;&#x94AE;</span></span><br><span class="line">        <span class="keyword">for</span> ped <span class="keyword">in</span> peds:</span><br><span class="line">            <span class="keyword">if</span> (traci.person.getWaitingTime(ped) == <span class="number">1</span> <span class="keyword">and</span></span><br><span class="line">                    traci.person.getNextEdge(ped) <span class="keyword">in</span> CROSSINGS):</span><br><span class="line">                print(<span class="string">&quot;%s pushes the button&quot;</span> % ped)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x672C;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x53CA;&#x4ECE;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x89E3;&#x6790;&#x5F97;&#x5230;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_options</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    optParser = optparse.OptionParser()</span><br><span class="line">    <span class="comment"># &#x589E;&#x52A0;&#x4E00;&#x4E2A;&quot;--nogui&quot;&#x9009;&#x9879;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;False&#xFF0C;&#x5373;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x56FE;&#x5F62;&#x5316;&#x754C;&#x9762;</span></span><br><span class="line">    optParser.add_option(<span class="string">&quot;--nogui&quot;</span>, action=<span class="string">&quot;store_true&quot;</span>,</span><br><span class="line">                         default=<span class="keyword">False</span>, help=<span class="string">&quot;run the commandline version of sumo&quot;</span>)</span><br><span class="line">    options, args = optParser.parse_args()</span><br><span class="line">    <span class="keyword">return</span> options</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x672C;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x4E3B;&#x5165;&#x53E3;</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x83B7;&#x53D6;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line">    options = get_options()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x786E;&#x5B9A;&#x662F;&#x8C03;&#x7528;sumo&#x8FD8;&#x662F;sumo-gui</span></span><br><span class="line">    <span class="keyword">if</span> options.nogui:</span><br><span class="line">        sumoBinary = checkBinary(<span class="string">&apos;sumo&apos;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sumoBinary = checkBinary(<span class="string">&apos;sumo-gui&apos;</span>)</span><br><span class="line"></span><br><span class="line">    net = <span class="string">&apos;pedcrossing.net.xml&apos;</span></span><br><span class="line">    <span class="comment"># &#x501F;&#x52A9;&#x5DE5;&#x5177;&#x8F6F;&#x4EF6;netconvert&#xFF0C;&#x4ECE;&#x666E;&#x901A;&#x7684;xml&#x8F93;&#x5165;&#x6784;&#x5EFA;&#x591A;&#x6A21;&#x6001;&#x7F51;&#x7EDC;</span></span><br><span class="line">    subprocess.call([checkBinary(<span class="string">&apos;netconvert&apos;</span>),</span><br><span class="line">                     <span class="string">&apos;-c&apos;</span>, os.path.join(<span class="string">&apos;data&apos;</span>, <span class="string">&apos;pedcrossing.netccfg&apos;</span>),</span><br><span class="line">                     <span class="string">&apos;--output-file&apos;</span>, net],</span><br><span class="line">                    stdout=sys.stdout, stderr=sys.stderr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x968F;&#x673A;&#x751F;&#x6210;&#x4EFF;&#x771F;&#x4E2D;&#x7684;&#x884C;&#x4EBA;</span></span><br><span class="line">    randomTrips.main(randomTrips.get_options([</span><br><span class="line">        <span class="string">&apos;--net-file&apos;</span>, net,</span><br><span class="line">        <span class="string">&apos;--output-trip-file&apos;</span>, <span class="string">&apos;pedestrians.trip.xml&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--seed&apos;</span>, <span class="string">&apos;42&apos;</span>,  <span class="comment"># make runs reproducible</span></span><br><span class="line">        <span class="string">&apos;--pedestrians&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--prefix&apos;</span>, <span class="string">&apos;ped&apos;</span>,</span><br><span class="line">        <span class="comment"># prevent trips that start and end on the same edge</span></span><br><span class="line">        <span class="string">&apos;--min-distance&apos;</span>, <span class="string">&apos;1&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--trip-attributes&apos;</span>, <span class="string">&apos;departPos=&quot;random&quot; arrivalPos=&quot;random&quot;&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--binomial&apos;</span>, <span class="string">&apos;4&apos;</span>,</span><br><span class="line">        <span class="string">&apos;--period&apos;</span>, <span class="string">&apos;35&apos;</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x8FD9;&#x662F;&#x542F;&#x52A8;TraCI&#x7684;&#x4E00;&#x822C;&#x65B9;&#x6CD5;&#x3002;sumo&#x4F5C;&#x4E3A;&#x5B50;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x672C;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x8FDE;&#x63A5;&#x8BE5;&#x5B50;&#x8FDB;&#x7A0B;  </span></span><br><span class="line">    traci.start([sumoBinary, <span class="string">&apos;-c&apos;</span>, os.path.join(<span class="string">&apos;data&apos;</span>, <span class="string">&apos;run.sumocfg&apos;</span>)])</span><br><span class="line">    <span class="comment"># &#x8C03;&#x7528;TraCI&#x63A7;&#x5236;&#x4E3B;&#x5FAA;&#x73AF;&#x8FC7;&#x7A0B;</span></span><br><span class="line">    run()</span><br></pre></td></tr></table></figure><h1 id="traci&#x5206;&#x6790;">TraCI&#x5206;&#x6790;</h1><h2 id="&#x57FA;&#x672C;&#x6D41;&#x7A0B;">&#x57FA;&#x672C;&#x6D41;&#x7A0B;</h2><p><a href="https://sumo.dlr.de/wiki/TraCI/Protocol" target="_blank" rel="noopener">&#x5B98;&#x65B9;wiki</a></p><p>&#x5728;&#x5F00;&#x542F;SUMO&#x4E4B;&#x540E;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;TCP&#x8FDE;&#x63A5;&#xFF0C;&#x8FDE;&#x63A5;&#x5230;&#x6307;&#x5B9A;&#x7684;SUMO&#x7AEF;&#x53E3;&#xFF0C;TraCI&#x652F;&#x6301;&#x591A;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x5E76;&#x6309;&#x7167;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x6240;&#x6709;&#x547D;&#x4EE4;&#x3002;&#x4E3A;&#x4E86;&#x6709;&#x4E00;&#x4E2A;&#x9884;&#x5B9A;&#x4E49;&#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#xFF0C;&#x6BCF;&#x4E2A;Client&#x5E94;&#x8BE5;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x63A7;&#x5236;&#x547D;&#x4EE4;&#x524D;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;<code>SetOrder</code>&#x547D;&#x4EE4;&#x3002;<code>SetOrder</code>&#x547D;&#x4EE4;&#x4E3A;&#x5BA2;&#x6237;&#x7AEF;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x53F7;&#x7801;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#x4E2D;&#xFF0C;&#x628A;&#x6765;&#x81EA;&#x4E0D;&#x540C;Client&#x7684;&#x547D;&#x4EE4;&#x6309;&#x7167;&#x7F16;&#x53F7;&#x7684;&#x987A;&#x5E8F;&#x6267;&#x884C;&#xFF08;&#x7F16;&#x53F7;&#x4E0D;&#x9700;&#x8981;&#x662F;&#x8FDE;&#x7EED;&#x7684;&#xFF0C;&#x4E5F;&#x4E0D;&#x8981;&#x6C42;&#x4E00;&#x5B9A;&#x662F;&#x6B63;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x6C42;&#x552F;&#x4E00;&#xFF09;&#x3002;&#x4F7F;&#x7528;&#x591A;Client&#x65F6;&#xFF0C;&#x542F;&#x52A8;SUMO&#x65F6;&#x9700;&#x8981;&#x77E5;&#x9053;Client&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x5E76;&#x4E14;&#x6240;&#x6709;&#x5BA2;&#x6237;&#x7AEF;&#x8981;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x6A21;&#x62DF;&#x6B65;&#x9AA4;&#xFF08;&#x65F6;&#x95F4;&#x7247;&#xFF09;&#x4E4B;&#x524D;&#x8FDE;&#x63A5;&#x3002;</p><p>&#x5EFA;&#x7ACB;&#x4E0E;SUMO&#x8FDE;&#x63A5;&#x7684;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="/posts/59170f05/TraciConnect_sequence.png"></p><p>Client&#x53EF;&#x4EE5;&#x5411;SUMO&#x53D1;&#x9001;&#x547D;&#x4EE4;&#x6765;&#x63A7;&#x5236;&#x6A21;&#x62DF;&#x7684;&#x8FD0;&#x884C;&#xFF0C;&#x63A7;&#x5236;&#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x662F;&#x63A7;&#x5236;&#x5355;&#x4E2A;&#x8F66;&#x8F86;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x8BE2;&#x95EE;&#x5F53;&#x524D;&#x73AF;&#x5883;&#x60C5;&#x51B5;&#x3002;SUMO&#x6839;&#x636E;&#x8BF7;&#x6C42;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x54CD;&#x5E94;&#x7684;&#x72B6;&#x6001;&#x54CD;&#x5E94;&#x548C;&#x4E00;&#x4E2A;&#x9644;&#x52A0;&#x7684;&#x7ED3;&#x679C;&#x3002;</p><p>Client&#x5FC5;&#x987B;&#x4F7F;&#x7528;<code>Simulation Step</code>&#x547D;&#x4EE4;&#x6765;&#x63A7;&#x5236;&#x6BCF;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#xFF0C;&#x5982;&#x679C;&#x64CD;&#x4F5C;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x8BA2;&#x9605;&#x7684;&#x7ED3;&#x679C;&#x503C;&#xFF08;&#x539F;&#x6587;&#x662F; If any subscriptions have been done, the subscribed values are returned. &#xFF09;&#xFF0C;&#x5728;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x7247;&#x4E0B;&#xFF0C;&#x6240;&#x6709;&#x7684;Client&#x90FD;&#x53D1;&#x9001;&#x5B8C;&#x547D;&#x4EE4;&#x540E;&#xFF0C;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#x3002;</p><p><strong>&#x8BA2;&#x9605;</strong>&#xFF1A;&#x8BA2;&#x9605;&#x53EF;&#x4EE5;&#x88AB;&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x68C0;&#x7D22;&#x53D8;&#x91CF;&#x7684;&#x6279;&#x5904;&#x7406;&#x6A21;&#x5F0F;&#x3002;&#x4EE3;&#x66FF;&#x91CD;&#x590D;&#x8BF7;&#x6C42;&#x76F8;&#x540C;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x5728;&#x6BCF;&#x4E2A;&#x65F6;&#x95F4;&#x6B65;&#x957F;&#x4E2D;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x81EA;&#x52A8;&#x68C0;&#x7D22;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x503C;&#x3002;TraCI&#x8BA2;&#x9605;&#x5728;&#x6BCF;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x57FA;&#x7840;&#x4E0A;&#x6267;&#x884C;&#x5904;&#x7406;&#x3002;&#x60A8;&#x53EF;&#x4EE5;&#x5728;&#x6BCF;&#x4E2A;&#x65F6;&#x95F4;&#x6B65;&#x957F;&#x540E;&#x8BF7;&#x6C42;&#x5F53;&#x524D;&#x8BA2;&#x9605;&#x7684;&#x6A21;&#x5757;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x4E3A;&#x4E86;&#x8BA2;&#x9605;&#x53D8;&#x91CF;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x76F4;&#x5230;&#x4ED6;&#x4EEC;&#x7684;&#x53D8;&#x91CF;ID&#xFF0C;&#x8FD9;&#x4E9B;ID&#x53EF;&#x4EE5;&#x5728;<code>traci/constants.py</code>&#x6587;&#x4EF6;&#x4E2D;&#x67E5;&#x8BE2;&#x3002;</p><p>&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;<code>close</code>&#x547D;&#x4EE4;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF0C;&#x5F53;&#x6240;&#x6709;&#x7684;Client&#x90FD;&#x53D1;&#x51FA;&#x5173;&#x95ED;&#x65F6;&#xFF0C;&#x6A21;&#x62DF;&#x7ED3;&#x675F;&#xFF0C;&#x91CA;&#x653E;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x3002;</p><p>&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x7684;&#x6D41;&#x7A0B;&#x56FE;&#xFF1A;</p><p><img src="/posts/59170f05/TraciColose_sequence.png"></p><p>&#x5F53;<strong>SUMO</strong>&#x4F5C;&#x4E3A;TraCI&#x670D;&#x52A1;&#x5668;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x5C06;&#x5FFD;&#x7565; &#x2013;end&lt;<em>TIME</em>&gt; &#x9009;&#x9879;&#xFF0C;<strong>SUMO&#x5C06;&#x4E00;&#x76F4;&#x8FD0;&#x884C;&#xFF0C;&#x76F4;&#x5230;&#x5BA2;&#x6237;&#x7AEF;&#x8981;&#x6C42;&#x4EFF;&#x771F;&#x7ED3;&#x675F;</strong>&#x3002; &#x4F7F;&#x7528; <strong>SUMO-GUI</strong> &#x4F5C;&#x4E3A;&#x670D;&#x52A1;&#x5668;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528; &#x64AD;&#x653E;&#x6309;&#x94AE; &#x6216;&#x5728;&#x5904;&#x7406;TraCI&#x547D;&#x4EE4;&#x4E4B;&#x524D;&#x8BBE;&#x7F6E;&#x9009;&#x9879; &#x2013;start &#x6765;&#x542F;&#x52A8;&#x4EFF;&#x771F;&#x3002;</p><p>&#x4F7F;&#x7528; TraCI &#x65F6;&#xFF0C;&#x5C06;&#x5FFD;&#x7565;SUMO&#x7684; &#x2013;end&lt;<em>TIME</em>&gt; &#x9009;&#x9879;&#x3002; &#x800C;&#x662F;&#x901A;&#x8FC7;&#x53D1;&#x51FA; close&#x547D;&#x4EE4; &#x6765;&#x5173;&#x95ED;&#x4EFF;&#x771F;&#x3002;</p><h2 id="&#x6D88;&#x606F;">&#x6D88;&#x606F;</h2><p>TCP&#x6D88;&#x606F;&#x5145;&#x5F53;&#x547D;&#x4EE4;&#x6216;&#x7ED3;&#x679C;&#x5217;&#x8868;&#x7684;&#x5BB9;&#x5668;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6BCF;&#x4E2A;TCP&#x6D88;&#x606F;&#x90FD;&#x542B;&#x6709;&#x4E00;&#x4E2A;&#x5C0F;&#x6807;&#x9898;&#xFF0C;&#x63D0;&#x4F9B;&#x6574;&#x4F53;&#x6D88;&#x606F;&#x7684;&#x5927;&#x5C0F;&#x548C;&#x4E00;&#x7EC4;&#x4ED6;&#x540E;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x3002;&#x6BCF;&#x4E2A;&#x547D;&#x4EE4;&#x7684;&#x957F;&#x5EA6;&#x548C;&#x6807;&#x8BC6;&#x7B26;&#x90FD;&#x653E;&#x5728;&#x547D;&#x4EE4;&#x7684;&#x524D;&#x9762;&#x3002;&#x8BE5;&#x5BB9;&#x5668;&#x7684;&#x65B9;&#x6848;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/posts/59170f05/1564335243949.png"></p><p>&#x547D;&#x4EE4;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6;&#x9650;&#x5236;&#x4E3A;255&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5355;&#x4E2A;&#x547D;&#x4EE4;&#x7684;&#x957F;&#x5EA6;&#x53EF;&#x80FD;&#x4E0D;&#x591F;&#xFF0C;&#x5728;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5C06;&#x539F;&#x59CB;<code>ubyte</code>&#x957F;&#x5EA6;&#x5B57;&#x6BB5;&#x8BBE;&#x7F6E;&#x4E3A;&#x96F6;&#x5E76;&#x6DFB;&#x52A0;&#x6574;&#x6570;&#x957F;&#x5EA6;&#x5B57;&#x6BB5;&#x6765;&#x4F7F;&#x7528;&#x6269;&#x5C55;&#x957F;&#x5EA6;&#x3002;&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x7684;&#x6269;&#x5C55;&#x65B9;&#x6848;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/posts/59170f05/1564337721566.png"></p><h2 id="&#x547D;&#x4EE4;&#x7684;&#x4E00;&#x822C;&#x7ED3;&#x6784;">&#x547D;&#x4EE4;&#x7684;&#x4E00;&#x822C;&#x7ED3;&#x6784;</h2><h2 id="&#x72B6;&#x6001;&#x54CD;&#x5E94;">&#x72B6;&#x6001;&#x54CD;&#x5E94;</h2><p><img src="/posts/59170f05/1564337772925.png"></p><p>&#x6BCF;&#x4E2A;&#x547D;&#x4EE4;&#x90FD;&#x7531;&#x72B6;&#x6001;&#x54CD;&#x5E94;&#x786E;&#x8BA4;&#xFF0C;&#x5305;&#x62EC;&#x7ED3;&#x679C;&#x548C;&#x63CF;&#x8FF0;&#x3002;&#x6807;&#x8BC6;&#x7B26;&#x6307;&#x7684;&#x662F;&#x88AB;&#x786E;&#x8BA4;&#x7684;&#x76F8;&#x5E94;&#x547D;&#x4EE4;&#x7684;&#x6807;&#x8BC6;&#x7B26;&#x3002; &#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x503C;&#xFF1A;</p><ul><li>&#x5982;&#x679C;&#x6210;&#x529F;&#xFF0C;&#x5219;&#x4E3A;0x00</li><li>&#x5982;&#x679C;&#x8BF7;&#x6C42;&#x7684;&#x547D;&#x4EE4;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x4E3A;0xFF</li><li>&#x5982;&#x679C;&#x5728;&#x7F51;&#x7EDC;&#x6A21;&#x62DF;&#x5668;&#x4E2D;&#x672A;&#x5B9E;&#x73B0;&#x8BF7;&#x6C42;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x5219;&#x4E3A;0x01&#xFF08;&#x6B64;&#x5916;&#xFF0C;&#x5FC5;&#x987B;&#x6DFB;&#x52A0;&#x63CF;&#x8FF0;&#x6587;&#x672C;&#xFF09;</li></ul><h2 id="&#x6570;&#x636E;&#x7C7B;&#x578B;">&#x6570;&#x636E;&#x7C7B;&#x578B;</h2><h3 id="atomar-types">Atomar Types</h3><table><colgroup><col style="width: 16%"><col style="width: 8%"><col style="width: 64%"><col style="width: 10%"></colgroup><thead><tr class="header"><th style="text-align: center;">Data type</th><th>Size</th><th>Description</th><th>Identifier</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">ubyte</td><td>8 bit</td><td>integer numbers (0 to 255)</td><td>0x07</td></tr><tr class="even"><td style="text-align: center;">byte</td><td>8 bit</td><td>integer numbers (-128 to 127)</td><td>0x08</td></tr><tr class="odd"><td style="text-align: center;">integer</td><td>32 bit</td><td>integer numbers (-2^{31} to 2^{31}-1) includes bitsets with bit0 meaning the least significant bit</td><td>0x09</td></tr><tr class="even"><td style="text-align: center;">double</td><td>64 bit</td><td>IEEE754 floating point numbers</td><td>0x0B</td></tr><tr class="odd"><td style="text-align: center;">string</td><td>variable</td><td>32 bit string length, followed by text coded as 8 bit ASCII</td><td>0x0C</td></tr><tr class="even"><td style="text-align: center;">stringList</td><td>variable</td><td>32 bit string count n, followed by n strings</td><td>0x0E</td></tr><tr class="odd"><td style="text-align: center;">compound object</td><td>variable</td><td>Compound object, internal structure depends on concrete object. The compound object identifier is always followed by an 32bit-int denoting the number of component types. Then the components are given in sequence.</td><td>0x0F</td></tr></tbody></table><h2 id="&#x4F4D;&#x7F6E;&#x8868;&#x793A;&#x6CD5;">&#x4F4D;&#x7F6E;&#x8868;&#x793A;&#x6CD5;</h2><p>2D&#x8868;&#x793A;(ubyte identifier: 0x01)&#xFF1A;&#x6A21;&#x62DF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x7B1B;&#x5361;&#x5C14;2D&#x4F4D;&#x7F6E;&#xFF0C;&#x7531;&#x4E24;&#x4E2A;&#x53CC;&#x7CBE;&#x5EA6;&#x503C;&#xFF08;x&#x548C;y&#x5750;&#x6807;&#xFF09;&#x63CF;&#x8FF0;&#x3002;</p><p><img src="/posts/59170f05/1564338288482.png"></p><p>3D&#x8868;&#x793A;(ubyte identifier: 0x11)&#xFF1A;&#x6A21;&#x62DF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x7B1B;&#x5361;&#x5C14;3D&#x4F4D;&#x7F6E;&#xFF0C;&#x7531;3&#x4E2A;&#x53CC;&#x7CBE;&#x5EA6;&#x503C;&#xFF08;x,y&#x548C;z&#x5750;&#x6807;&#xFF09;&#x63CF;&#x8FF0;&#x3002;</p><p><img src="/posts/59170f05/1564338327507.png"></p><p>&#x9053;&#x8DEF;&#x5730;&#x56FE;&#x4F4D;&#x7F6E;(ubyte identifier: 0x04)&#xFF1A;&#x5728;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;SUMO&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x7684;&#x4F4D;&#x7F6E;&#x6765;&#x63CF;&#x8FF0;&#xFF0C;RoadID&#x6807;&#x8BC6;&#x4E00;&#x6761;&#x9053;&#x8DEF;&#xFF0C;<code>Pos</code>&#x63CF;&#x8FF0;&#x8282;&#x70B9;&#x5728;&#x9053;&#x8DEF;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#xFF08;&#x4ECE;0&#x5230;&#x9053;&#x8DEF;&#x7684;&#x957F;&#x5EA6;&#xFF09;&#x3002;LaneID&#x6807;&#x8BC6;&#x8DEF;&#x6BB5;&#x4E0A;&#x7684;&#x8F66;&#x9053;&#x3002;</p><p><img src="/posts/59170f05/1564365592705.png"></p><p>Lon-Lat-Position&#xFF08;ubyte&#x6807;&#x8BC6;&#x7B26;&#xFF1A;0x00&#xFF09;&#x6A21;&#x62DF;&#x7F51;&#x7EDC;&#x4E2D;&#x5730;&#x7406;&#x5750;&#x6807;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x7531;&#x4E24;&#x4E2A;&#x53CC;&#x7CBE;&#x5EA6;&#x503C;&#xFF08;&#x7ECF;&#x5EA6;&#x548C;&#x7EAC;&#x5EA6;&#xFF09;&#x63CF;&#x8FF0;&#x3002;</p><p><img src="/posts/59170f05/1564365739630.png"></p><p>Lon-Lat-Alt-Position&#xFF08;ubyte&#x6807;&#x8BC6;&#x7B26;&#xFF1A;0x02&#xFF09;&#x6A21;&#x62DF;&#x7F51;&#x7EDC;&#x4E2D;&#x5177;&#x6709;&#x9AD8;&#x5EA6;&#x7684;&#x5730;&#x7406;&#x5750;&#x6807;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x7531;&#x4E09;&#x4E2A;&#x53CC;&#x7CBE;&#x5EA6;&#x503C;&#xFF08;&#x7ECF;&#x5EA6;&#xFF0C;&#x7EAC;&#x5EA6;&#x548C;&#x9AD8;&#x5EA6;&#xFF09;&#x63CF;&#x8FF0;&#x3002;</p><p><img src="/posts/59170f05/1564365782821.png"></p><p>&#x591A;&#x8FB9;&#x5F62;&#x8868;&#x793A; (ubyte identifier: 0x06)&#xFF1A;&#x4E00;&#x7CFB;&#x5217;2D&#x70B9;&#xFF0C;&#x8868;&#x793A;&#x591A;&#x8FB9;&#x5F62;&#x5F62;&#x72B6;&#x3002;2D&#x70B9;&#x7684;&#x4E2A;&#x6570;&#x662F;&#x6784;&#x6210;&#x591A;&#x8FB9;&#x5F62;&#x7684;&#xFF08;x&#xFF0C;y&#xFF09;&#x70B9;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p><img src="/posts/59170f05/1564366306678.png"></p><p>&#x4EA4;&#x901A;&#x706F;&#x9636;&#x6BB5;&#x5217;&#x8868;(ubyte identifier: 0x0D)&#xFF1A;&#x6B64;&#x7C7B;&#x578B;&#x7528;&#x4E8E;&#x62A5;&#x544A;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x4E0D;&#x540C;&#x9636;&#x6BB5;&#x3002;&#x503C;Length&#x662F;&#x62A5;&#x544A;&#x8FDE;&#x540C;&#x524D;&#x9762;&#x548C;&#x968F;&#x540E;&#x7684;&#x9053;&#x8DEF;&#xFF0C;&#x53D7;&#x5404;&#x81EA;&#x7684;&#x4FE1;&#x53F7;&#x706F;&#x5F71;&#x54CD;&#x3002;</p><p>&#x4EE5;&#x4E0B;&#x7684;&#x8868;&#x793A;&#x7B26;&#x5E94;&#x7528;&#x4E8E;&#x5B58;&#x5728;&#x7684;&#x76F8;&#x4F4D;&#xFF1A;</p><ul><li>0x01: red&#x7EA2;&#x706F;</li><li>0x02: yellow&#x9EC4;&#x706F;</li><li>0x03: green&#x7EFF;&#x706F;</li><li>0x04: traffic light is off and blinking&#x4EA4;&#x901A;&#x706F;&#x5173;&#x95ED;&#xFF0C;&#x95EA;&#x70C1;</li><li>0x05: traffic light is off, not blinking&#x4EA4;&#x901A;&#x706F;&#x5173;&#x95ED;&#xFF0C;&#x4E0D;&#x95EA;&#x70C1;</li></ul><p><img src="/posts/59170f05/1564367521956.png"></p><p>Color (ubyte identifier: 0x11)</p><p><img src="/posts/59170f05/1564367548027.png"></p><h2 id="traci&#x7684;&#x547D;&#x4EE4;">TraCI&#x7684;&#x547D;&#x4EE4;</h2><p>&#x4E0E;&#x63A7;&#x5236;&#x76F8;&#x5173;&#x7684;&#x547D;&#x4EE4;&#xFF1A;&#x6267;&#x884C;&#x6A21;&#x62DF;&#x6B65;&#x9AA4;&#xFF0C;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF0C;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x6A21;&#x62DF;&#x3002;</p><p>&#x9488;&#x5BF9;&#x4EE5;&#x4E0B;APIs&#xFF0C;ID&#x548C;SUMO&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x91CC;&#x5B9A;&#x4E49;&#x7684;ID&#x76F8;&#x7B49;&#x3002;&#x3002; &#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x5B83;&#x4EEC;&#x7684;&#x4E00;&#x822C;&#x7ED3;&#x6784;&#xFF1A;</p><p><strong>&#x503C;&#x68C0;&#x7D22;&#xFF08;valueretrieval&#xFF09;</strong></p><p>&#x547D;&#x4EE4;&#x7ED3;&#x6784;&#xFF1A;</p><p><img src="/posts/59170f05/1564379763109.png"></p><p><code>variable</code>&#x5B57;&#x6BB5;&#x53D6;&#x51B3;&#x4E8E;&#x5177;&#x4F53;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x6839;&#x636E;&#x547D;&#x4EE4;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x503C;&#xFF0C;<code>SUMO ID</code>&#x662F;&#x60F3;&#x77E5;&#x9053;&#x8BE5;&#x503C;&#x5BF9;&#x8C61;&#x7684;ID&#xFF0C;&#x5B83;&#x5C5E;&#x4E8E;&#x54EA;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;&#x53D6;&#x51B3;&#x4E8E;&#x7279;&#x5B9A;&#x7684;&#x547D;&#x4EE4;&#x3002;</p><ol type="1"><li>&#x611F;&#x5E94;&#x56DE;&#x8DEF;&#x503C;&#x68C0;&#x7D22;&#xFF08;Induction loop value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x5173;&#x4E8E;&#x611F;&#x5E94;&#x56DE;&#x8DEF;&#x7684;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x8F66;&#x9053;&#x9762;&#x79EF;&#x68C0;&#x6D4B;&#x5668;&#x503C;&#x68C0;&#x7D22;&#xFF08;lane area detector value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x8F66;&#x9053;&#x9762;&#x79EF;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x591A;&#x8F93;&#x5165;/&#x591A;&#x51FA;&#x53E3;&#x68C0;&#x6D4B;&#x5668;&#x503C;&#x68C0;&#x7D22;&#xFF08;muli-entry/multi-exit detector valueretrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x591A;&#x8F93;&#x5165;&#x591A;&#x51FA;&#x53E3;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x4EA4;&#x901A;&#x706F;&#x503C;&#x68C0;&#x7D22;&#xFF08;traffic lights value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x4EA4;&#x901A;&#x4FE1;&#x53F7;&#x706F;&#x7684;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x8F66;&#x9053;&#x503C;&#x68C0;&#x7D22;&#xFF08;lane value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x8F66;&#x9053;&#x503C;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x8F66;&#x8F86;&#x503C;&#x68C0;&#x7D22;&#xFF08;vechicle value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x5173;&#x4E8E;&#x8F66;&#x8F86;&#x7684;&#x4FE1;&#x606F;&#xFF1B;</li><li>&#x4EBA;&#x7FA4;&#x503C;&#x68C0;&#x7D22;&#xFF08;person value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x5173;&#x4E8E;&#x4EBA;&#x7FA4;&#x7684;&#x4FE1;&#x606F;</li><li>&#x8F66;&#x8F86;&#x7C7B;&#x578B;&#x503C;&#x68C0;&#x7D22;&#xFF08;vehicle type value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x8F66;&#x8F86;&#x7C7B;&#x578B;</li><li>&#x8DEF;&#x7531;&#x503C;&#x68C0;&#x7D22;&#xFF08;route value retrieval&#xFF09;&#xFF1A;&#x68C0;&#x7D22;&#x8DEF;&#x7531;&#x4FE1;&#x606F;</li><li>&#x5174;&#x8DA3;&#x70B9;&#x503C;&#x68C0;&#x7D22;&#xFF08;PoI value retrieval&#xFF09;&#xFF1A;point-of-interest&#x5174;&#x8DA3;&#x70B9;</li><li>&#x591A;&#x8FB9;&#x5F62;&#x503C;&#x68C0;&#x7D22;&#xFF08;polygon value retrieval&#xFF09;&#xFF1A;retrieve information about polygons</li><li>&#x7ED3;&#x70B9;&#x503C;&#x68C0;&#x7D22;&#xFF08;junction value retrieval&#xFF09;&#xFF1A;retrieve information about junctions</li><li>&#x8857;&#x9053;&#x503C;&#x68C0;&#x7D22;&#xFF08;edge value retrieval&#xFF09;&#xFF1A;retrieve information about edges</li><li>&#x4EFF;&#x771F;&#x503C;&#x68C0;&#x7D22;&#xFF08;simulation value retrieval&#xFF09;&#xFF1A;retrieve information about the simulation</li><li>GUI&#x503C;&#x68C0;&#x7D22;&#xFF08;GUI valueretrieval&#xFF09;&#xFF1A;retrieve information about the simulation visualization</li></ol><p>SUMO&#x7684;&#x8FD4;&#x56DE;&#xFF1A;</p><p><img src="/posts/59170f05/1564380076785.png"></p><p>&#x5176;&#x4E2D;&#xFF0C;<code>variable</code>&#x548C;<code>SUMO ID</code>&#x662F;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;<code>variable</code>&#x548C;<code>SUMO ID</code>&#xFF0C;&#x8FD4;&#x56DE;&#x7C7B;&#x578B;&#x53D6;&#x51B3;&#x4E8E;&#x53D8;&#x91CF;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x5E38;&#x89C4;TraCI&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6B64;&#x53D8;&#x91CF;&#x7684;&#x7279;&#x6B8A;&#x590D;&#x5408;&#x7C7B;&#x578B;&#xFF0C;&#x4F7F;&#x7528;&#x7279;&#x5B9A;&#x547D;&#x4EE4;&#x8BB0;&#x5F55;&#x3002;</p><p><strong>&#x72B6;&#x6001;&#x6539;&#x53D8;statechanging</strong></p><p>&#x548C;&#x524D;&#x6587;&#x7684;&#x503C;&#x68C0;&#x7D22;&#x76F8;&#x53CD;&#xFF0C;&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x547D;&#x4EE4;&#x662F;&#x7ED9;&#x7279;&#x5B9A;&#x7684;&#x5BF9;&#x8C61;&#x8BBE;&#x5B9A;&#x7279;&#x5B9A;&#x7684;&#x503C;&#xFF0C;&#x547D;&#x4EE4;&#x7ED3;&#x6784;&#x5982;&#x4E0B; <img src="/posts/59170f05/1564381122878.png"></p><ol type="1"><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Lane_State" target="_blank" rel="noopener">Change Lane State</a> change a lane&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Traffic_Lights_State" target="_blank" rel="noopener">Change Traffic Lights State</a> change a traffic lights&apos; state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Vehicle_State" target="_blank" rel="noopener">Change Vehicle State</a> change a vehicle&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Person_State" target="_blank" rel="noopener">Change Person State</a> change a persons&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_VehicleType_State" target="_blank" rel="noopener">Change Vehicle Type State</a> change a vehicle type&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Route_State" target="_blank" rel="noopener">Change Route State</a> change a route&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_PoI_State" target="_blank" rel="noopener">Change PoI State</a> change a point-of-interest&apos;s state (or add/remove one)</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Polygon_State" target="_blank" rel="noopener">Change Polygon State</a> change a polygon&apos;s state (or add/remove one)</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Edge_State" target="_blank" rel="noopener">Change Edge State</a> change an edge&apos;s state</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_Simulation_State" target="_blank" rel="noopener">Change Simulation State</a> change the simulation</li><li><a href="https://sumo.dlr.de/wiki/TraCI/Change_GUI_State" target="_blank" rel="noopener">Change GUI State</a> change the simulation visualization</li></ol><p>SUMO&#x7684;&#x54CD;&#x5E94;&#xFF1A;&#x72B6;&#x6001;&#x6539;&#x53D8;&#x547D;&#x4EE4;&#x7684;&#x54CD;&#x5E94;&#x53EA;&#x6709;&#x5BF9;&#x8BF7;&#x6C42;&#x7684;&#x72B6;&#x6001;&#x7684;&#x54CD;&#x5E94;&#x3002;</p><p>&#x53E6;&#x5916;&#x770B;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x6539;&#x53D8;&#x8F66;&#x8F86;&#x72B6;&#x6001;&#x7684;&#x547D;&#x4EE4;&#x89C1;<a href="https://sumo.dlr.de/wiki/TraCI/Change_Vehicle_State" target="_blank" rel="noopener">&#x8FD9;&#x91CC;</a></p><h2 id="&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x63A5;&#x53E3;">&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x63A5;&#x53E3;</h2><ul><li>python&#xFF1A;the package tools/traci&#x5141;&#x8BB8;&#x901A;&#x8FC7;python&#x53EF;&#x4EE5;&#x548C;SUMO&#x8FDB;&#x884C;&#x4EA4;&#x4E92;&#x3002;&#xFF08;&#x8FD9;&#x4E2A;&#x5E93;&#x6EE1;&#x8DB3;&#x65E5;&#x5E38;&#x6D4B;&#x8BD5;&#x3002;&#x652F;&#x6301;&#x6240;&#x6709;&#x7684;TraCI&#x547D;&#x4EE4;&#xFF09;&#x3002;</li><li>java&#xFF1A;TraCI4J&#x662F;&#x5173;&#x4E8E;TraCI&#x7684;java&#x5E94;&#x7528;&#x3002;&#x6587;&#x6863;&#xFF1A; API documentation is here</li><li>java&#xFF0C;.net&#x2026;&#x2026;.&#x4EFB;&#x4F55;&#x7684;&#x7B26;&#x5408;SOAP&#xFF08;&#x7B80;&#x5355;&#x5BF9;&#x8C61;&#x8BBF;&#x95EE;&#x534F;&#x8BAE;&#xFF09;&#x7684;&#x8BED;&#x8A00;&#x90FD;&#x53EF;&#x4EE5;&#x3002;&#x662F;&#x4E00;&#x4E2A;TraCI&#x7684;web&#x670D;&#x52A1;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x81EA;&#x52A8;&#x9002;&#x914D;&#x591A;&#x79CD;&#x8BED;&#x8A00;&#x3002;API&#x5B8C;&#x6574;&#x6027;&#x6BD4;TraCI4J&#x8981;&#x597D;&#xFF0C;&#x7531;&#x4E8E;&#x4EE3;&#x7801;&#x7684;&#x4EA7;&#x751F;&#x57FA;&#x4E8E;Python&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x3002;TraaS&#x53EF;&#x4EE5;&#x5355;&#x72EC;&#x7528;&#x4F5C;&#x4E00;&#x4E2A;TraCI&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x66FF;&#x4EE3;TraCI4J&#x3002;</li><li>Matlab&#xFF1A; TraCI4Matlab</li><li>C++&#xFF1A;The C++ TraCIAPI&#x662F;SUMO&#x6E90;&#x7801;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x4E3A;&#x4E00;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x5E93;&#x3002;</li><li>C++&#xFF1A;The Veinsproject &#x63D0;&#x4F9B;&#x4F7F;&#x7528; OMNET++&#x7F16;&#x8BD1;SUMO&#x7684;&#x4E2D;&#x95F4;&#x4EF6;&#x3002;&#x4F5C;&#x4E3A;&#x57FA;&#x7840;&#x8BBE;&#x65BD;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x63D0;&#x4F9B;&#x9488;&#x5BF9;TraCI API&#x7684;C++&#x5BA2;&#x6237;&#x7AEF;&#x5E93;&#x3002;</li></ul><h2 id="v2x">V2X</h2><p>TraCI&#x5141;&#x8BB8;SUMO&#x7ED3;&#x5408;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x6A21;&#x62DF;&#x5668;&#x751A;&#x9AD8;&#x9891;&#x5168;&#x5411;&#x6307;&#x6807;&#xFF0C;&#x7528;&#x4E8E;&#x6A21;&#x62DF;&#x8F66;&#x8F7D;&#x901A;&#x4FE1;&#x3002;</p><p>TraCI allows to use <a href="https://sumo.dlr.de/wiki/SUMO" target="_blank" rel="noopener">SUMO</a> in combination with communication network simulators vor simulating <a href="https://sumo.dlr.de/wiki/Topics/V2X" target="_blank" rel="noopener">vehicular communication</a>. See <a href="https://sumo.dlr.de/wiki/Topics/V2X" target="_blank" rel="noopener">Topics/V2X</a> for a list of available solutions.</p><h2 id="&#x5176;&#x4ED6;&#x8D44;&#x6E90;">&#x5176;&#x4ED6;&#x8D44;&#x6E90;</h2><p>SUMO&#x7684;TraCI&#x670D;&#x52A1;&#x662F;&#x5E73;&#x539F;&#x5206;&#x5E03;&#xFF08;the plain distribution&#xFF09;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;&#x6E90;&#x4EE3;&#x7801;&#x4F4D;&#x4E8E;&#x6587;&#x4EF6;&#x5939;<code>src/traci-server</code>.</p><h1 id="&#x76F8;&#x5173;&#x8BBA;&#x6587;">&#x76F8;&#x5173;&#x8BBA;&#x6587;</h1><ol type="1"><li><a href="https://dev.tencent.com/s/78419e04-419b-4b39-88ee-d9682c3bb2e8" target="_blank" rel="noopener">&#x8F66;&#x8F7D;&#x81EA;&#x7EC4;&#x7F51;&#x7684;&#x4EFF;&#x771F;&#x7814;&#x7A76;&#x7EFC;&#x8FF0;</a></li><li><a href="https://dev.tencent.com/s/121dff6d-f3cc-4c6d-915a-067cb1b40dfa" target="_blank" rel="noopener">&#x8F66;&#x8F86;&#x81EA;&#x7EC4;&#x7EC7;&#x7F51;&#x4EFF;&#x771F;&#x7814;&#x7A76;</a></li></ol><h1 id="&#x53C2;&#x8003;&#x8D44;&#x6599;">&#x53C2;&#x8003;&#x8D44;&#x6599;</h1><ol type="1"><li><a href="https://blog.csdn.net/qtlyx/column/info/15585" target="_blank" rel="noopener">SUMO&#x4F7F;&#x7528;&#x6559;&#x7A0B;</a></li><li><a href="https://blog.csdn.net/davidhopper/article/details/81871872" target="_blank" rel="noopener">SUMO TraCI&#x4F7F;&#x7528;&#x793A;&#x4F8B;&#xFF1A;TraCIPedCrossing</a></li><li><a href="https://blog.csdn.net/renguoqing1001/article/details/52743179" target="_blank" rel="noopener">SUMO&#x6587;&#x6863;010&#xFF1A;&#x4EC0;&#x4E48;&#x662F;TraCI&#xFF1F;</a></li><li><a href="https://blog.csdn.net/renguoqing1001/article/details/52743255" target="_blank" rel="noopener">SUMO&#x6587;&#x6863;014&#xFF1A;TraCI&#x7684;Python&#x63A5;&#x53E3;</a></li><li><a href="https://blog.csdn.net/renguoqing1001/article/details/52743298" target="_blank" rel="noopener">SUMO&#x6587;&#x6863;015&#xFF1A;TraCI&#x7684;&#x534F;&#x8BAE;&#x89C4;&#x8303;</a></li><li><a href="https://sumo.dlr.de/wiki/TraCI" target="_blank" rel="noopener">SUMO-wiki-TraCI</a></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SUMO &amp;#x7684;&amp;#x5B66;&amp;#x4E60;&amp;#x7B14;&amp;#x8BB0;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="自动驾驶" scheme="https://www.windsings.com/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="SUMO" scheme="https://www.windsings.com/tags/SUMO/"/>
    
      <category term="Intel Labs China" scheme="https://www.windsings.com/tags/Intel-Labs-China/"/>
    
      <category term="自动驾驶" scheme="https://www.windsings.com/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="仿真" scheme="https://www.windsings.com/tags/%E4%BB%BF%E7%9C%9F/"/>
    
      <category term="学习笔记" scheme="https://www.windsings.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>循环小数的循环体</title>
    <link href="https://www.windsings.com//posts/a12ff16d/"/>
    <id>https://www.windsings.com//posts/a12ff16d/</id>
    <published>2019-05-19T16:49:37.000Z</published>
    <updated>2020-07-02T10:52:47.156Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x9898;&#x76EE;&#x6982;&#x8FF0;">&#x9898;&#x76EE;&#x6982;&#x8FF0;</h1><p>LeetCode 166&#x9898;&#xFF0C;&#x9762;&#x8BD5;&#x9047;&#x5230;&#x4E86;&#x3002;</p><blockquote><p>&#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x6570;p&#x548C;q&#xFF0C;&#x5982;&#x679C;p/q&#x662F;&#x4E00;&#x4E2A;&#x65E0;&#x9650;&#x5FAA;&#x73AF;&#x5C0F;&#x6570;&#xFF0C;&#x5219;&#x6C42;&#x8FD9;&#x4E2A;&#x65E0;&#x9650;&#x5FAA;&#x73AF;&#x5C0F;&#x6570;&#x7684;&#x5FAA;&#x73AF;&#x4F53;&#x3002;<strong>&#x4E0D;&#x9650;&#x5B9A;p&#x548C;q&#x7684;&#x5927;&#x5C0F;</strong>&#x3002;</p></blockquote><p>&#x65B0;&#x74F6;&#x88C5;&#x65E7;&#x9152;&#xFF0C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x601D;&#x8DEF;&#x3002;</p><a id="more"></a><h1 id="&#x601D;&#x8DEF;&#x4E00;&#x6A21;&#x62DF;">&#x601D;&#x8DEF;&#x4E00;&#xFF1A;&#x6A21;&#x62DF;</h1><p>&#x5982;&#x679C;&#x6709;&#x9650;&#x5B9A;q&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x5F00;&#x4E00;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x6765;&#x5B58;&#x50A8;&#x6BCF;&#x4E00;&#x6B65;&#x4E2D;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x6709;&#x5FAA;&#x73AF;&#x3002;</p><p>&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">int</span> m[<span class="number">1000</span>], n[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> p, q;</span><br><span class="line">    <span class="built_in">memset</span>(m, <span class="number">-1</span>, <span class="keyword">sizeof</span>(m));</span><br><span class="line">    <span class="built_in">memset</span>(n, <span class="number">-1</span>, <span class="keyword">sizeof</span>(n));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; p &gt;&gt; q;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; p / q;</span><br><span class="line">    p = p % q;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;.&apos;</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>, r = p;</span><br><span class="line">    <span class="keyword">while</span> (r != <span class="number">0</span> &amp;&amp; m[r] == <span class="number">-1</span>)<span class="comment">//&#x4F59;&#x6570;&#x4E0D;&#x4E3A;0&#xFF0C;&#x4E14;&#x8FD9;&#x4E2A;&#x6570;&#x4E4B;&#x524D;&#x672A;&#x66FE;&#x51FA;&#x73B0;&#x8FC7;</span></span><br><span class="line">    {</span><br><span class="line">        m[r] = cnt++;<span class="comment">//&#x8BB0;&#x5F55;&#x5E8F;&#x53F7;</span></span><br><span class="line">        r *= <span class="number">10</span>;</span><br><span class="line">        n[cnt] = r / q;</span><br><span class="line">        r = r % q;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (r != <span class="number">0</span>)<span class="comment">//&#x8868;&#x793A;&#x6709;&#x5FAA;&#x73AF;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m[r]; i++)<span class="comment">//&#x524D;&#x9762;&#x975E;&#x5FAA;&#x73AF;&#x7684;&#x90E8;&#x5206;</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n[i];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;(&apos;</span>;<span class="comment">//&#x5FAA;&#x73AF;&#x4F53;&#x90E8;&#x5206;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = m[r]+<span class="number">1</span>; i &lt;= cnt; i++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n[i];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;)&apos;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt; i++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x7A7A;&#x95F4;&#x5F00;&#x9500;&#x5927;&#xFF0C;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(q)&#xFF0C;&#x5F53;&#x7136;&#x5B9E;&#x9645;&#x4E0A;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7EA6;&#x5206;&#x6765;&#x964D;&#x4F4E;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><p>&#x6240;&#x4EE5;&#x5982;&#x679C;&#x5728;&#x4E0D;&#x9650;&#x5236;p&#x548C;q&#x5927;&#x5C0F;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x79CD;&#x505A;&#x6CD5;&#x662F;&#x4E0D;&#x884C;&#x7684;&#x3002;</p><h1 id="&#x601D;&#x8DEF;&#x4E8C;&#x6B27;&#x62C9;&#x5B9A;&#x7406;">&#x601D;&#x8DEF;&#x4E8C;&#xFF1A;&#x6B27;&#x62C9;&#x5B9A;&#x7406;</h1><h2 id="&#x6B27;&#x62C9;&#x5B9A;&#x7406;">&#x6B27;&#x62C9;&#x5B9A;&#x7406;</h2><p>&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x662F;&#x4E00;&#x4E2A;&#x5173;&#x4E8E;&#x540C;&#x4F59;&#x7684;&#x6027;&#x8D28;&#x3002;</p><p>&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x8868;&#x660E;&#xFF0C;&#x82E5;<span class="math inline">\(n,a\)</span>&#x4E3A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x4E14;<span class="math inline">\(n,a\)</span>&#x4E92;&#x8D28;&#xFF0C;&#x5219;&#x6709;</p><p><span class="math display">\[a^{\varphi (n)} \equiv 1 \ \ (mod \ \ n)\]</span></p><p>&#x5176;&#x4E2D;<span class="math inline">\(\varphi (n)\)</span>&#x8868;&#x793A;&#x6B27;&#x62C9;&#x51FD;&#x6570;&#xFF0C;<span class="math inline">\(\equiv\)</span>&#x8868;&#x793A;&#x540C;&#x4F59;&#x3002;</p><p>&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x8868;&#x660E;&#xFF0C;<span class="math inline">\(a^{\varphi (n)}\)</span>&#x4E0E;<span class="math inline">\(1\)</span>&#x5728;&#x6A21;<span class="math inline">\(n\)</span>&#x4E0B;&#x540C;&#x4F59;&#x3002;&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x8D39;&#x9A6C;&#x5C0F;&#x5B9A;&#x7406;&#x7684;&#x63A8;&#x5E7F;&#x3002;</p><h2 id="&#x6B27;&#x62C9;&#x51FD;&#x6570;">&#x6B27;&#x62C9;&#x51FD;&#x6570;</h2><p>&#x5BF9;&#x4E8E;&#x6B63;&#x6574;&#x6570;<span class="math inline">\(n\)</span>&#xFF0C;&#x6B27;&#x62C9;&#x51FD;&#x6570; <span class="math inline">\(\varphi (n)\)</span>&#x7684;&#x503C;&#x662F;&#x5C0F;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;<span class="math inline">\(n\)</span>&#x7684;&#x6B63;&#x6574;&#x6570;&#x4E2D;&#xFF0C;&#x4E0E;<span class="math inline">\(n\)</span>&#x4E92;&#x8D28;&#x7684;&#x6570;&#x7684;&#x6570;&#x76EE;&#x3002;</p><p>&#x5728;C++&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x7531;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#x76F4;&#x63A5;&#x8BA1;&#x7B97;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Eular</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> res = x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt;= x; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (x%i == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            res = (res / i)*(i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span> (x%i == <span class="number">0</span>)</span><br><span class="line">                x = x / i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">        res = (res / x)*(x - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x63A8;&#x5BFC;">&#x63A8;&#x5BFC;</h2><p>&#x4EE5;<code>4/33=0.1212121212......</code>&#x4E3A;&#x4F8B;&#x3002;</p><p>&#x5C06;&#x5206;&#x5B50;*10&#xFF0C;&#x518D;&#x6C42;&#x6A21;&#xFF0C;&#x6709;&#xFF1A;</p><p><span class="math display">\[\frac 4 {33}\ \frac 7 {33}\ \frac 4 {33}\ \frac 7 {33}\ \frac 4 {33}\ \frac 7 {33}\ \frac 4 {33}...\]</span></p><p>&#x53EF;&#x77E5;&#xFF1A;&#x7B2C;&#x4E09;&#x6B21;&#x4E0E;&#x7B2C;&#x4E00;&#x6B21;&#x91CD;&#x590D;&#xFF0C;&#x5F62;&#x6210;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;2&#x7684;&#x5FAA;&#x73AF;&#x8282;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x6574;&#x6570;&#x90E8;&#x5206;&#x548C;&#x80FD;&#x7EA6;&#x5206;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x7EA6;&#x5206;&#x5373;&#x53EF;&#xFF0C;&#x4E0E;&#x540E;&#x9762;&#x7684;&#x5FAA;&#x73AF;&#x5C0F;&#x6570;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x8003;&#x8651;&#x771F;&#x5206;&#x6570;<span class="math inline">\(\frac p q\)</span>&#xFF08;<span class="math inline">\(p\)</span>&#x548C;<span class="math inline">\(q\)</span>&#x90FD;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x7EA6;&#x5206;&#x4E86;&#xFF09;&#xFF1A;</p><p>&#x8BB0;&#x7B2C;<span class="math inline">\(k\)</span>&#x4E2A;&#x5206;&#x6570;&#x4E3A; <span class="math display">\[\frac {p*10^k\ mod\ q} q\]</span> &#x5047;&#x8BBE;&#x7B2C;<span class="math inline">\(i\)</span>&#x4E2A;&#x548C;&#x7B2C;<span class="math inline">\(j\)</span>&#x4E2A;&#x5206;&#x6570;&#x76F8;&#x7B49;&#xFF0C;&#x4E8E;&#x662F;&#x6709;</p><p><span class="math display">\[\frac{p*10^i mod\ q}{q} = \frac{p*10^j mod\ q}{q}\]</span> &#x5219;&#x540C;&#x4F59;&#x5173;&#x7CFB;&#x4E3A;</p><p><span class="math display">\[p * 10^j \equiv p * 10^i (mod \ q)  \quad (i &lt; j)\]</span> &#x540C;&#x4F59;&#x5173;&#x7CFB;&#x53EF;&#x5199;&#x4E3A;</p><p><span class="math display">\[p*10^j = p*10^i + q*k\]</span></p><p>&#x5373;</p><p><span class="math display">\[p(10^j-10^i) = q*k \ &#x2192;\  p*10^i(10^{j - i} - 1) = q*k\]</span></p><p>&#x7531;&#x4E8E;<span class="math inline">\(k \neq 0\)</span></p><p>&#x6240;&#x4EE5;&#x6709;&#xFF08;<span class="math inline">\(|\)</span>&#x8868;&#x793A;&#x6574;&#x9664;&#xFF0C;&#x5373;&#x7B2C;&#x4E8C;&#x9879;<span class="math inline">\(\div\)</span>&#x7B2C;&#x4E00;&#x9879;&#xFF0C;&#x4F59;&#x6570;&#x4E3A;0&#xFF09;&#xFF1A;</p><p><span class="math display">\[q|10^i(10^{j - i} - 1)p\]</span></p><p>&#x7531;&#x4E8E;<span class="math inline">\(p\)</span>&#x548C;<span class="math inline">\(q\)</span>&#x4E92;&#x8D28;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#xFF1A;</p><p><span class="math display">\[q|10^i(10^{j - i} - 1) \tag{*}\]</span></p><p>&#x7531;&#x4E8E;<span class="math inline">\(10^i\)</span>&#x662F;&#x5076;&#x6570;&#xFF0C;<span class="math inline">\(10^{j-i}-1\)</span>&#x662F;&#x5947;&#x6570;&#x3002;</p><p>&#x90A3;&#x4E48;<span class="math inline">\(i\)</span>&#x5C06;&#x7531;<span class="math inline">\(10^i\)</span>&#x548C;<span class="math inline">\(q\)</span>&#x6765;&#x51B3;&#x5B9A;&#xFF0C;&#x5C06;<span class="math inline">\(q\)</span>&#x5206;&#x6210;&#x4E24;&#x90E8;&#x5206;&#xFF0C;&#x4E00;&#x90E8;&#x5206;&#x7531;&#x56E0;&#x5B50;<span class="math inline">\(2\)</span>&#x548C;<span class="math inline">\(5\)</span>&#x7EC4;&#x6210;&#xFF0C;&#x53E6;&#x4E00;&#x90E8;&#x5206;&#x7531;&#x5176;&#x4ED6;&#x56E0;&#x5B50;&#x7EC4;&#x6210;&#x3002;</p><p>&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x5206;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;<span class="math inline">\(10\)</span>&#x8FDB;&#x5236;&#xFF0C;<span class="math inline">\(10=2*5\)</span>&#x3002;</p><p>&#x5219;&#x56E0;&#x5B50;<span class="math inline">\(2\)</span>&#x548C;&#x56E0;&#x5B50;<span class="math inline">\(5\)</span>&#x5C06;&#x7531;<span class="math inline">\(10^i\)</span>&#x6765;&#x62B5;&#x6D88;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x5728;<span class="math inline">\(10^{j-i}-1\)</span>&#x4E2D;&#x3002;</p><p>&#x56E0;&#x6B64;<span class="math inline">\(i = max(n,m)\)</span>&#xFF0C;&#x5176;&#x4E2D;<span class="math inline">\(n\)</span>&#x4E3A;<span class="math inline">\(q\)</span>&#x4E2D;&#x56E0;&#x5B50;<span class="math inline">\(2\)</span>&#x7684;&#x4E2A;&#x6570;&#xFF0C;<span class="math inline">\(m\)</span>&#x4E3A;<span class="math inline">\(q\)</span>&#x4E2D;&#x56E0;&#x5B50;<span class="math inline">\(5\)</span>&#x7684;&#x4E2A;&#x6570;&#x3002;</p><p><span class="math inline">\(i\)</span>&#x662F;&#x5FAA;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6C42;<span class="math inline">\(i\)</span>&#x7684;&#x51FD;&#x6570;&#x4E3A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_i</span><span class="params">(<span class="keyword">int</span> &amp;n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x7684;n&#x5BF9;&#x5E94;&#x7684;&#x662F;&#x63A8;&#x5230;&#x91CC;&#x9762;&#x7684;q</span></span><br><span class="line">    <span class="comment">//&#x540C;&#x65F6;&#xFF0C;&#x8981;&#x628A;q&#x8F6C;&#x4E3A;q&apos;&#x6240;&#x4EE5;&#x8981;&#x7528;&#x5F15;&#x7528;</span></span><br><span class="line">    <span class="keyword">int</span> res1 = <span class="number">0</span>, res2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        n = n / <span class="number">2</span>;</span><br><span class="line">        res1++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">5</span> == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        n = n / <span class="number">5</span>;</span><br><span class="line">        res2++;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x5BF9;&#x5E94;&#x63A8;&#x5BFC;&#x91CC;&#x7684;i</span></span><br><span class="line">    <span class="keyword">return</span> max(res1, res2);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x73B0;&#x5728;&#x63A8;&#x5BFC;&#x4EE3;&#x7801;&#x4E2D;&#x7684;<span class="math inline">\(q&apos;\)</span>&#x548C;&#x5FAA;&#x73AF;&#x8282;&#x7684;&#x957F;&#x5EA6;<span class="math inline">\(length=j-i\)</span></p><p>&#x8BBE;<span class="math inline">\(q&apos; = \frac{q}{2^n*5^m}\)</span>&#xFF0C;&#x5219;<span class="math inline">\((*)\)</span>&#x5F0F;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;</p><p><span class="math display">\[q|2^n5^m(10^{j - i} - 1)*\frac{10^i}{2^n5^m}\]</span></p><p>&#x5373;</p><p><span class="math display">\[q&apos;|(10^{j - i} - 1)*\frac{10^i}{2^n5^m}\]</span></p><p>&#x53C8;&#x56E0;&#x4E3A;<span class="math inline">\(q&apos; = \frac{q}{2^n*5^m}\)</span>&#x4E0E;<span class="math inline">\(\frac{10^i}{2^n5^m}\)</span>&#x4E92;&#x8D28;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x5C06;&#x4E0A;&#x5F0F;&#x5199;&#x4E3A;</p><p><span class="math display">\[q&apos;|(10^{j - i} - 1)\]</span></p><p>&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x6C42;&#x51FA;<span class="math inline">\(j-i\)</span>&#x5C31;&#x662F;&#x5FAA;&#x73AF;&#x5C0F;&#x6570;&#x7684;&#x5FAA;&#x73AF;&#x8282;&#x7684;&#x957F;&#x5EA6;&#x4E86;&#x3002;</p><p>&#x53D8;&#x53D8;&#x5F62;&#xFF0C;&#x6709;</p><p><span class="math display">\[10^{j - i}&#x2261;1\ (mod\ q&apos;)\]</span></p><p>&#x8BB0;<span class="math inline">\(j-i\)</span>&#x4E3A;&#x4E00;&#x4E2A;<span class="math inline">\(x\)</span>&#xFF0C;&#x5C31;&#x53D8;&#x6210;&#x6C42;&#x89E3;</p><p><span class="math display">\[10^x&#x2261;1\ (mod\ q&apos;)\]</span></p><p>&#x7531;&#x524D;&#x6587;&#x4E2D;&#x7684;&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#xFF08;&#x73B0;&#x5728;&#x660E;&#x767D;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x628A;&#x56E0;&#x5B50;<span class="math inline">\(2\)</span>&#x548C;&#x56E0;&#x5B50;<span class="math inline">\(5\)</span>&#x7EA6;&#x53BB;&#x4E86;&#x5427;&#xFF0C;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x521B;&#x9020;&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x91CC;&#x7684;&#x4E92;&#x8D28;&#x6761;&#x4EF6;&#xFF09;&#x53EF;&#x77E5;&#xFF1A;</p><p>&#x5B58;&#x5728;&#x6700;&#x5C0F;&#x7684;<span class="math inline">\(10^x&#x2261;1\ (mod\ q&#x2019;)\)</span>&#xFF0C;&#x5F53;<span class="math inline">\(x\)</span>&#x662F;<span class="math inline">\(\varphi(q&#x2019;)\)</span>&#x7684;&#x4E00;&#x4E2A;&#x56E0;&#x5B50;&#x3002;</p><p>&#x8BC1;&#x660E;&#x5982;&#x4E0B;&#xFF08;&#x611F;&#x8C22;&#x738B;&#x5C0F;&#x5251;&#x548C;&#x6208;&#x4F20;&#x8D22;&#x5B66;&#x957F;&#x7684;&#x5927;&#x529B;&#x5E2E;&#x52A9;&#xFF09;&#xFF1A; &#x4F7F;&#x7528;&#x53CD;&#x8BC1;&#x6CD5;&#xFF0C;&#x7531;&#x6B27;&#x62C9;&#x5B9A;&#x7406;&#x77E5;&#xFF1A; <span class="math display">\[10^{\varphi (q&apos;)}&#x2261;1\ (mod\ q&apos;)\]</span></p><p>&#x5047;&#x8BBE;</p><p><span class="math display">\[10^x&#x2261;1\ (mod\ q&apos;)   \tag{**}\]</span></p><p>&#x4E14;<span class="math inline">\(x\)</span>&#x4E0D;&#x662F;<span class="math inline">\(\varphi (q&apos;)\)</span>&#x7684;&#x56E0;&#x5B50;&#xFF0C;<span class="math inline">\(x\)</span>&#x662F;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x4E2D;&#x7684;&#x6700;&#x5C0F;&#x7684;&#xFF0C;&#x5219;&#x6709;<span class="math inline">\(\varphi (q&apos;)=nx+p\)</span></p><p>&#x5219;</p><p><span class="math display">\[10^{\varphi (q&apos;)}=10^{nx+p} \\     10^{nx+p}&#x2261;1\ (mod\ q&#x2019;)\]</span></p><p>&#x7531;&#x5047;&#x8BBE;<span class="math inline">\((**)\)</span>&#x53CA;&#x53D6;&#x4F59;&#x6570;&#x7684;&#x6027;&#x8D28;&#x53EF;&#x77E5; <span class="math display">\[\begin{aligned}10^{nx+p} \ mod\ q&apos; &amp;=(10^x&#xB7;10^x......10^x&#xB7;10^p)\ mod \ q&apos; \\&amp;=1&#xB7;1...&#xB7;1&#xB7;10^p\ mod \ q&apos; \\&amp;=10^p\ mod\ q&apos;\\&amp;=1\end{aligned}\]</span></p><p>&#x53C8;&#x7531;&#x4E8E;<span class="math inline">\(p&lt;x\)</span>&#xFF0C;&#x6240;&#x4EE5;&#x4E0E;&#x5047;&#x8BBE;&#x77DB;&#x76FE;&#x3002;&#x6240;&#x4EE5;&#x5047;&#x8BBE;&#x4E0D;&#x6210;&#x7ACB;&#xFF0C;&#x56E0;&#x6B64;<span class="math inline">\(x\)</span>&#x5FC5;&#x987B;&#x80FD;&#x6574;&#x9664;&#x4E8E;$(q&apos;)$&#x3002;&#x539F;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p><p>&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x53BB;&#x679A;&#x4E3E;&#x6240;&#x6709;<span class="math inline">\(\varphi(q&#x2019;)\)</span>&#x7684;&#x56E0;&#x5B50;&#xFF0C;&#x4ECE;&#x800C;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x7684;<span class="math inline">\(x\)</span>&#xFF0C;&#x6EE1;&#x8DB3;<span class="math inline">\(10^x&#x2261;1\ (mod\ q&#x2019;)\)</span>&#x5373;&#x53EF;&#x6C42;&#x51FA;&#x5FAA;&#x73AF;&#x8282;&#x7684;&#x957F;&#x5EA6;<span class="math inline">\(length\)</span>&#x3002;</p><p>&#x6700;&#x540E;&#x6309;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x5373;&#x53EF;&#x3002;</p><p>&#x4EE3;&#x7801;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x76F4;&#x63A5;&#x5B9E;&#x73B0;&#x6B27;&#x62C9;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Eular</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> res = x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt;= x; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (x%i == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            res = (res / i)*(i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span> (x%i == <span class="number">0</span>)</span><br><span class="line">                x = x / i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">        res = (res / x)*(x - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : gcd(b, a%b);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_i</span><span class="params">(<span class="keyword">int</span> &amp;n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x7684;n&#x5BF9;&#x5E94;&#x7684;&#x662F;&#x63A8;&#x5230;&#x91CC;&#x9762;&#x7684;p</span></span><br><span class="line">    <span class="comment">//&#x540C;&#x65F6;&#xFF0C;&#x8981;&#x628A;p&#x8F6C;&#x4E3A;p&apos;&#x6240;&#x4EE5;&#x8981;&#x7528;&#x5F15;&#x7528;</span></span><br><span class="line">    <span class="keyword">int</span> res1 = <span class="number">0</span>, res2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        n = n / <span class="number">2</span>;</span><br><span class="line">        res1++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">5</span> == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        n = n / <span class="number">5</span>;</span><br><span class="line">        res2++;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x5BF9;&#x5E94;&#x63A8;&#x5230;&#x91CC;&#x7684;i</span></span><br><span class="line">    <span class="keyword">return</span> max(res1, res2);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//&#x5FEB;&#x901F;&#x5E42;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x6C42;&#x4E86;mod</span></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b!=<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            res = (res*a) % mod;</span><br><span class="line">        a = (a*a) % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_length</span><span class="params">(<span class="keyword">int</span> phi, <span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//phi&#x662F;&#x6B27;&#x62C9;&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x503C;</span></span><br><span class="line">    <span class="comment">//&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#x662F;&#x63A8;&#x5230;&#x91CC;&#x7684;x&#xFF0C;&#x8868;&#x793A;j-i&#xFF0C;&#x4E3A;&#x957F;&#x5EA6;</span></span><br><span class="line">    <span class="keyword">int</span> minn = <span class="number">0x7FFFFFFF</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i*i &lt;= phi; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (phi%i == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (power(<span class="number">10</span>, i, mod) == <span class="number">1</span>)</span><br><span class="line">            {</span><br><span class="line">                minn = min(minn, i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (power(<span class="number">10</span>, phi / i, mod) == <span class="number">1</span>)</span><br><span class="line">            {</span><br><span class="line">                minn = min(minn, phi / i);</span><br><span class="line">                <span class="comment">//break;</span></span><br><span class="line">                <span class="comment">//&#x56E0;&#x4E3A;&#x6709;&#x53EF;&#x80FD;&#x8FD8;&#x6709;&#x66F4;&#x5C0F;&#x7684;</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> minn;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> p, q, a, b, g;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; p &gt;&gt; q;<span class="comment">//&#x8F93;&#x5165;p&#x548C;q</span></span><br><span class="line">    g = gcd(p, q);<span class="comment">//&#x6C42;&#x6700;&#x5927;&#x516C;&#x7EA6;&#x6570;</span></span><br><span class="line">    p = p / g; q = q / g;</span><br><span class="line">    a = p; b = q;</span><br><span class="line">    <span class="keyword">int</span> s = get_i(q);</span><br><span class="line">    <span class="keyword">int</span> phi = Eular(q);</span><br><span class="line">    <span class="keyword">int</span> length = get_length(phi, q);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (length == <span class="number">0x7FFFFFFF</span>)</span><br><span class="line">        s = length;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//-----------Print----------------</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a / b &lt;&lt; <span class="string">&apos;.&apos;</span>;</span><br><span class="line">    a = a - b * (a / b);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s+length; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (i == s)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;(&quot;</span>;</span><br><span class="line">        a *= <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a / b;</span><br><span class="line">        a = a - b * (a / b);</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (i == s + length - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;)&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><hr><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;POJ 3358&#xFF0C;<a href="https://nanti.jisuanke.com/t/42" target="_blank" rel="noopener">&#x8BA1;&#x849C;&#x5BA2;&#x5206;&#x6570;&#x5316;&#x5C0F;&#x6570;</a></p><p>&#x6CE8;&#xFF1A;&#x8BA1;&#x849C;&#x5BA2;&#x7684;&#x8BDD;&#xFF0C;&#x8981;&#x7528;long long &#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x7528; int &#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x9898;&amp;#x76EE;&amp;#x6982;&amp;#x8FF0;&quot;&gt;&amp;#x9898;&amp;#x76EE;&amp;#x6982;&amp;#x8FF0;&lt;/h1&gt;
&lt;p&gt;LeetCode 166&amp;#x9898;&amp;#xFF0C;&amp;#x9762;&amp;#x8BD5;&amp;#x9047;&amp;#x5230;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#x7ED9;&amp;#x5B9A;&amp;#x4E24;&amp;#x4E2A;&amp;#x6570;p&amp;#x548C;q&amp;#xFF0C;&amp;#x5982;&amp;#x679C;p/q&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x65E0;&amp;#x9650;&amp;#x5FAA;&amp;#x73AF;&amp;#x5C0F;&amp;#x6570;&amp;#xFF0C;&amp;#x5219;&amp;#x6C42;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65E0;&amp;#x9650;&amp;#x5FAA;&amp;#x73AF;&amp;#x5C0F;&amp;#x6570;&amp;#x7684;&amp;#x5FAA;&amp;#x73AF;&amp;#x4F53;&amp;#x3002;&lt;strong&gt;&amp;#x4E0D;&amp;#x9650;&amp;#x5B9A;p&amp;#x548C;q&amp;#x7684;&amp;#x5927;&amp;#x5C0F;&lt;/strong&gt;&amp;#x3002;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x65B0;&amp;#x74F6;&amp;#x88C5;&amp;#x65E7;&amp;#x9152;&amp;#xFF0C;&amp;#x7ED9;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x601D;&amp;#x8DEF;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="算法题" scheme="https://www.windsings.com/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
      <category term="旷视" scheme="https://www.windsings.com/tags/%E6%97%B7%E8%A7%86/"/>
    
      <category term="面试" scheme="https://www.windsings.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="找实习" scheme="https://www.windsings.com/tags/%E6%89%BE%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="数论" scheme="https://www.windsings.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="欧拉定理" scheme="https://www.windsings.com/tags/%E6%AC%A7%E6%8B%89%E5%AE%9A%E7%90%86/"/>
    
      <category term="欧拉函数" scheme="https://www.windsings.com/tags/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
    
      <category term="循环小数" scheme="https://www.windsings.com/tags/%E5%BE%AA%E7%8E%AF%E5%B0%8F%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>视觉SLAM脑图</title>
    <link href="https://www.windsings.com//posts/28186654/"/>
    <id>https://www.windsings.com//posts/28186654/</id>
    <published>2019-05-15T17:57:39.000Z</published>
    <updated>2019-06-22T04:12:30.147Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6CA1;&#x5199;&#x5B8C;&#xFF0C;v0.2&#x7248;&#x3002;</p><a id="more"></a><p><img src="/posts/28186654/&#x89C6;&#x89C9;SLAM-v0.2.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6CA1;&amp;#x5199;&amp;#x5B8C;&amp;#xFF0C;v0.2&amp;#x7248;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="SLAM" scheme="https://www.windsings.com/categories/SLAM/"/>
    
    
      <category term="笔记" scheme="https://www.windsings.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="智能机器人" scheme="https://www.windsings.com/tags/%E6%99%BA%E8%83%BD%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
      <category term="SLAM" scheme="https://www.windsings.com/tags/SLAM/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
  </entry>
  
  <entry>
    <title>找实习的经验教训总结</title>
    <link href="https://www.windsings.com//posts/e8bcf6f0/"/>
    <id>https://www.windsings.com//posts/e8bcf6f0/</id>
    <published>2019-05-14T16:49:37.000Z</published>
    <updated>2020-07-02T10:50:52.297Z</updated>
    
    <content type="html"><![CDATA[<p>&#x4ECE;5.4&#x6B63;&#x5F0F;&#x5F00;&#x59CB;&#x627E;&#x5B9E;&#x4E60;&#x5230;&#x73B0;&#x5728;&#x5DF2;&#x7ECF;&#x8FC7;&#x4E86;10&#x5929;&#x4E86;&#xFF0C;&#x628A;&#x5FC3;&#x5F97;&#x4F53;&#x4F1A;&#xFF0C;&#x7ECF;&#x9A8C;&#x6559;&#x8BAD;&#xFF0C;&#x6240;&#x601D;&#x6240;&#x611F;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x3002; <a id="more"></a></p><h1 id="&#x7ECF;&#x9A8C;&#x603B;&#x7ED3;">&#x7ECF;&#x9A8C;&#x603B;&#x7ED3;</h1><h2 id="&#x5927;&#x516C;&#x53F8;or&#x5C0F;&#x516C;&#x53F8;">&#x5927;&#x516C;&#x53F8;or&#x5C0F;&#x516C;&#x53F8;</h2><p>&#x8FD9;&#x4E00;&#x6B21;&#x627E;&#x5B9E;&#x4E60;&#xFF0C;&#x6211;&#x53EA;&#x9762;&#x4E86;&#x516C;&#x53F8;&#xFF0C;&#x6CA1;&#x6709;&#x9762;&#x79D1;&#x7814;&#x9662;&#x6240;&#xFF08;&#x4E2D;&#x79D1;&#x9662;**&#x6240;or**&#x5B9E;&#x9A8C;&#x5BA4;&#xFF09;&#x3002;&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x79D1;&#x7814;&#x9662;&#x6240;&#x7684;&#x9762;&#x8BD5;&#x6211;&#x6CA1;&#x6709;&#x592A;&#x591A;&#x7684;&#x4F53;&#x4F1A;&#x3002;</p><p>&#x6211;&#x9762;&#x4E86;&#x5927;&#x6982;&#x6709;10+&#x516C;&#x53F8;&#xFF0C;&#x540E;&#x9762;&#x6536;&#x5230;&#x4E00;&#x4E9B;offer&#x4E4B;&#x540E;&#xFF0C;&#x4E0D;&#x60F3;&#x9762;&#x7684;&#x3001;&#x4E0D;&#x60F3;&#x53BB;&#x7684;&#x516C;&#x53F8;&#xFF0C;&#x6211;&#x5C31;&#x6CA1;&#x518D;&#x53C2;&#x52A0;&#x4ED6;&#x4EEC;&#x7684;&#x7B14;&#x8BD5;/&#x4E8C;&#x9762;&#x3002;&#x603B;&#x4F53;&#x4E0A;&#x800C;&#x8A00;&#xFF0C;&#x5927;&#x516C;&#x53F8;&#x7684;&#x9762;&#x8BD5;&#x66F4;&#x770B;&#x91CD;<strong>&#x201C;&#x4F60;&#x73B0;&#x5728;&#x7684;&#x57FA;&#x7840;&#x600E;&#x4E48;&#x6837;&#xFF0C;&#x7ECF;&#x8FC7;&#x6211;&#x4EEC;&#x7684;&#x57F9;&#x8BAD;&#xFF0C;&#x4F60;&#x5B66;&#x5F97;&#x80FD;&#x6709;&#x591A;&#x5FEB;&#xFF0C;&#x57F9;&#x8BAD;&#x7ED3;&#x675F;&#x540E;&#x4F60;&#x80FD;&#x5E72;&#x4EC0;&#x4E48;&#x201D;&#x3002;</strong>&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x5C0F;&#x516C;&#x53F8;&#xFF0C;&#x4ED6;&#x4EEC;&#x66F4;&#x770B;&#x91CD;&#x201C;&#x4F60;&#x73B0;&#x5728;&#x7684;&#x4E13;&#x4E1A;&#x6280;&#x80FD;&#x548C;&#x5C97;&#x4F4D;&#x5339;&#x914D;&#x7A0B;&#x5EA6;&#x5982;&#x4F55;&#xFF0C;&#x76F4;&#x767D;&#x4E00;&#x70B9;&#x7684;&#x8BF4;&#xFF0C;<strong>&#x4F60;&#x80FD;&#x9876;&#x5F97;&#x4E0A;&#x51E0;&#x4E2A;&#x6B63;&#x5F0F;&#x5458;&#x5DE5;</strong>&#x201D;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x6211;&#xFF0C;&#x5B9E;&#x4E60;&#x7684;&#x6700;&#x5927;&#x610F;&#x4E49;&#x662F;&#x7ED9;&#x6211;&#x4E00;&#x4E2A;&#x673A;&#x4F1A;&#x53BB;&#x6DF1;&#x5165;&#x4F53;&#x9A8C;&#xFF0C;&#x601D;&#x8003;&#xFF0C;&#x8BD5;&#x9519;&#x3002;&#x800C;&#x4E14;&#x6211;&#x6295;&#x7684;&#x5C97;&#x4F4D;&#x5927;&#x591A;&#x6570;&#x662F;&#x505A;&#x4E00;&#x4E9B;&#x975E;&#x5E38;&#x65B0;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x90A3;&#x4E48;&#x4E5F;&#x5C31;&#x4E0D;&#x592A;&#x53EF;&#x80FD;&#x8BA9;&#x6211;&#x53BB;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x8001;&#x65E7;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x505A;&#x4E00;&#x4E9B;&#x5F88;&#x65E0;&#x804A;&#x7684;&#x4E8B;&#x4E86;&#x3002;</p><p>&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x4E5F;&#x53EA;&#x6709;&#x5927;&#x516C;&#x53F8;&#x4F1A;&#x6709;&#x8F83;&#x5145;&#x8DB3;&#x7684;&#x4EBA;&#x529B;&#x7269;&#x529B;&#x53BB;&#x57F9;&#x8BAD;&#x4E00;&#x4E2A;&#x5B9E;&#x4E60;&#x751F;&#xFF0C;&#x8BA9;&#x4ED6;&#x5B66;&#x4E60;&#x4F01;&#x4E1A;&#x6587;&#x5316;&#xFF0C;&#x9879;&#x76EE;&#x6D41;&#x7A0B;&#xFF0C;&#x6307;&#x6D3E;&#x4E00;&#x4E2A;mentor&#x6765;&#x5E26;&#x3002;&#x521D;&#x521B;&#x56E2;&#x961F;&#x66F4;&#x591A;&#x7684;&#x8FD8;&#x662F;&#x5173;&#x6CE8;&#x8FD9;&#x4E2A;&#x5B9E;&#x4E60;&#x751F;&#x80FD;&#x4EA7;&#x51FA;&#x591A;&#x5C11;&#xFF0C;&#x662F;&#x5426;&#x503C;&#x7ED9;&#x4ED6;&#x5F00;&#x51FA;&#x7684;&#x85AA;&#x6C34;&#x3002;</p><p>PS&#xFF1A;&#x771F;&#x60F3;&#x5E72;&#x6D3B;&#x8D5A;&#x94B1;&#x7684;&#x8BDD;&#xFF0C;&#x53BB;&#x63A5;&#x5355;&#x505A;&#x79C1;&#x6D3B;&#x66F4;&#x8D5A;&#xFF0C;&#x6211;&#x6709;&#x4E2A;&#x540C;&#x5B66;&#x5728;&#x7814;&#x7A76;&#x751F;&#x5165;&#x5B66;&#x4E4B;&#x524D;&#x63A5;&#x79C1;&#x6D3B;&#xFF0C;&#x6708;&#x5165;1.5W&#x3002;</p><p>&#x6CE8;&#xFF1A;&#x8FD9;&#x91CC;&#x7684;&#x5927;&#x516C;&#x53F8;&#x662F;&#x6307;&#x5177;&#x6709;&#x4E00;&#x5B9A;&#x884C;&#x4E1A;&#x5F71;&#x54CD;&#x529B;&#x7684;&#x516C;&#x53F8;&#xFF0C;<strong>&#x89C4;&#x6A21;&#x5728;&#x72EC;&#x89D2;&#x517D;&#x53CA;&#x4EE5;&#x4E0A;</strong>&#x3002;&#x5F88;&#x591A;&#x72EC;&#x89D2;&#x517D;&#x516C;&#x53F8;&#x5BF9;&#x4E8E;&#x65B0;&#x4EBA;&#x7684;&#x57F9;&#x517B;&#x505A;&#x5F97;&#x975E;&#x5E38;&#x975E;&#x5E38;&#x5389;&#x5BB3;&#x3002;&#x5C11;&#x90E8;&#x5206;&#x5C0F;&#x516C;&#x53F8;&#x4E5F;&#x5F88;&#x770B;&#x91CD;&#x5BF9;&#x65B0;&#x4EBA;&#x7684;&#x57F9;&#x517B;&#x3002;</p><h2 id="&#x591A;&#x53BB;&#x6295;&#x591A;&#x53BB;&#x9762;">&#x591A;&#x53BB;&#x6295;&#xFF0C;&#x591A;&#x53BB;&#x9762;</h2><p>&#x5982;&#x540E;&#x6587;&#x6240;&#x8FF0;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6211;&#x662F;&#x6CA1;&#x60F3;&#x597D;&#x81EA;&#x5DF1;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#x7684;&#xFF0C;&#x5728;&#x548C;&#x4E00;&#x4E9B;&#x9762;&#x8BD5;&#x5B98;&#x8FDB;&#x884C;&#x6C9F;&#x901A;&#x4EA4;&#x6D41;&#x4E4B;&#x540E;&#xFF0C;&#x624D;&#x6E10;&#x6E10;&#x660E;&#x767D;&#x81EA;&#x5DF1;&#x60F3;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5EFA;&#x8BAE;&#x591A;&#x53BB;&#x6295;&#x7B80;&#x5386;&#xFF0C;&#x591A;&#x53BB;&#x9762;&#x3002;&#x8138;&#x76AE;&#x8981;&#x539A;&#xFF0C;&#x5FC3;&#x6001;&#x8981;&#x597D;&#xFF0C;&#x62FF;&#x4E86;offer&#x56FA;&#x7136;&#x9AD8;&#x5174;&#xFF0C;&#x88AB;&#x62D2;&#x4E5F;&#x4E0D;&#x8981;&#x6C14;&#x9981;&#xFF0C;&#x6BD5;&#x7ADF;&#x4E5F;&#x957F;&#x4E86;&#x89C1;&#x8BC6;&#xFF0C;&#x600E;&#x4E48;&#x7B97;&#x90FD;&#x662F;&#x4E0D;&#x4E8F;&#x7684;&#x3002;</p><p>&#x8BF4;&#x4E00;&#x4E2A;&#x6211;&#x88AB;&#x62D2;&#x7684;&#x4E8B;&#xFF0C;&#x5F88;&#x591A;&#x4EBA;&#x90FD;&#x8BF4;&#x5E73;&#x5B89;&#x79D1;&#x6280;&#x597D;&#x6295;&#xFF0C;&#x90FD;&#x5237;&#x4E00;&#x4E2A;&#x5E73;&#x5B89;&#x4FDD;&#x5E95;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x6211;&#x6295;&#x5E73;&#x5B89;&#x79D1;&#x6280;&#xFF0C;&#x5728;&#x7B80;&#x5386;&#x7B5B;&#x9009;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x88AB;&#x62D2;&#x4E86;&#xFF0C;&#x5F53;&#x65F6;&#x6211;&#x4E5F;&#x7279;&#x522B;&#x90C1;&#x95F7;&#xFF0C;&#x6211;&#x5FC3;&#x60F3;&#xFF0C;&#x6211;TM&#x518D;&#x600E;&#x4E48;&#x83DC;&#xFF0C;&#x4E5F;&#x4E0D;&#x81F3;&#x4E8E;&#x5728;&#x7B80;&#x5386;&#x4E0A;&#x5C31;&#x88AB;&#x6302;&#x4E86;&#x5427;&#xFF1F;&#x540E;&#x6765;&#x4E5F;&#x6162;&#x6162;&#x60F3;&#x5F00;&#x4E86;&#xFF0C;&#x5509;&#xFF0C;&#x88AB;&#x62D2;&#x5C31;&#x88AB;&#x62D2;&#x5427;&#xFF0C;&#x968F;&#x4ED6;&#x53BB;&#x5427;&#xFF0C;&#x5FC3;&#x6001;&#x653E;&#x5E73;&#x3002;</p><h2 id="&#x8138;&#x76AE;&#x8981;&#x539A;&#x4E3B;&#x52A8;&#x4E89;&#x53D6;&#x673A;&#x4F1A;">&#x8138;&#x76AE;&#x8981;&#x539A;&#xFF0C;&#x4E3B;&#x52A8;&#x4E89;&#x53D6;&#x673A;&#x4F1A;</h2><p>&#x9762;&#x534E;&#x4E3A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x5206;&#x4E24;&#x5929;&#x8FDB;&#x884C;&#xFF0C;&#x6211;&#x662F;&#x7B2C;&#x4E00;&#x5929;&#xFF0C;&#x9762;&#x6211;&#x7684;&#x9762;&#x8BD5;&#x5B98;&#x662F;WLAN&#x7EC4;&#x7684;&#xFF0C;&#x4E5F;&#x628A;&#x6211;&#x5206;&#x5230;&#x4E86;WLAN&#x7EC4;&#xFF0C;&#x6211;&#x4E0D;&#x592A;&#x60F3;&#x505A;&#x3002;&#x7B2C;&#x4E8C;&#x5929;&#x6709;&#x4E2D;&#x592E;&#x7814;&#x7A76;&#x9662;&#x7684;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x7EC4;&#x6765;&#x9762;&#xFF0C;&#x6211;&#x542C;&#x8BF4;&#x4E86;&#x6D88;&#x606F;&#xFF0C;&#x6211;&#x5C31;&#x53BB;&#x7533;&#x8BF7;&#x9738;&#x9762;&#x4E86;&#xFF0C;HR&#x770B;&#x4E86;&#x770B;&#x6211;&#x7684;&#x9762;&#x8BD5;&#x8BB0;&#x5F55;&#xFF0C;&#x4E5F;&#x4E0E;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x5173;&#x7CFB;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x5C31;&#x540C;&#x610F;&#x4E86;&#x3002;&#x540E;&#x6765;&#x4E5F;&#x662F;&#x9762;&#x5F97;&#x633A;&#x597D;&#x7684;&#x3002;</p><p>Intel&#x4E00;&#x5F00;&#x59CB;&#x53D1;&#x7ED9;&#x6211;&#x7684;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x7EC4;&#x7684;offer&#xFF0C;&#x6211;&#x4E5F;&#x4E0D;&#x592A;&#x60F3;&#x53BB;&#xFF0C;&#x591A;&#x65B9;&#x6253;&#x542C;&#xFF0C;&#x8054;&#x7CFB;&#x5230;&#x4E86;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x7EC4;&#x7684;&#x8D1F;&#x8D23;&#x4EBA;&#xFF0C;&#x53C8;&#x5411;&#x4ED6;&#x6BDB;&#x9042;&#x81EA;&#x8350;&#xFF0C;&#x6700;&#x540E;&#x4E5F;&#x8F6C;&#x5C97;&#x6210;&#x529F;&#x3002;</p><p>&#x8FD8;&#x662F;&#x90A3;&#x53E5;&#x8001;&#x8BDD;&#xFF0C;&#x673A;&#x4F1A;&#x662F;&#x81EA;&#x5DF1;&#x4E89;&#x53D6;&#x6765;&#x7684;&#xFF0C;&#x627E;&#x5DE5;&#x4F5C;&#x5C31;&#x662F;&#x628A;&#x81EA;&#x5DF1;&#x5F80;&#x5916;&#x63A8;&#x9500;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x8138;&#x76AE;&#x8981;&#x539A;&#x3002;</p><h2 id="&#x535A;&#x5BA2;&#x5E2E;&#x52A9;&#x5F88;&#x5927;">&#x535A;&#x5BA2;&#x5E2E;&#x52A9;&#x5F88;&#x5927;</h2><p>&#x6709;&#x5F88;&#x591A;&#x4F53;&#x9A8C;&#x4E0D;&#x9519;&#x7684;&#x9762;&#x8BD5;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x90FD;&#x7531;&#x8BE6;&#x7EC6;&#x7684;&#x6D4F;&#x89C8;&#x6211;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x76F8;&#x5BF9;&#x4E8E;&#x6211;&#x5199;&#x7684;&#x5F88;&#x632B;&#x7684;&#x7B80;&#x5386;&#xFF0C;&#x535A;&#x5BA2;&#x6551;&#x4E86;&#x6211;&#x4E00;&#x547D;&#x3002;</p><p>&#x6240;&#x4EE5;&#xFF0C;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x7684;&#x8BDD;&#xFF0C;&#x5199;&#x4E00;&#x4E2A;&#x535A;&#x5BA2;&#xFF0C;&#x4F5C;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x79EF;&#x7D2F;&#x548C;&#x6C89;&#x6DC0;&#x5427;&#x3002;</p><h2 id="&#x5B89;&#x6392;&#x597D;&#x9762;&#x8BD5;&#x65F6;&#x95F4;">&#x5B89;&#x6392;&#x597D;&#x9762;&#x8BD5;&#x65F6;&#x95F4;</h2><p>&#x8FD9;&#x4E00;&#x5468;&#x6211;&#x9762;&#x4E86;&#x5F88;&#x591A;&#x5BB6;&#x516C;&#x53F8;&#xFF0C;&#x5E38;&#x5E38;&#x662F;&#x4E00;&#x5929;&#x8981;&#x51C6;&#x5907;&#x597D;&#x51E0;&#x573A;&#x9762;&#x8BD5;&#xFF0C;&#x6211;&#x90FD;&#x628A;&#x9762;&#x8BD5;&#x5B89;&#x6392;&#x8BB0;&#x5230;&#x4E00;&#x4E2A;&#x5C0F;&#x672C;&#x5B50;&#x4E0A;&#xFF0C;&#x6211;&#x4F1A;&#x5728;&#x9762;&#x8BD5;&#x524D;&#x534A;&#x5C0F;&#x65F6;&#x5C31;&#x51C6;&#x5907;&#x597D;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x5E0C;&#x671B;&#x5BF9;&#x65B9;&#x80FD;&#x9075;&#x5B88;&#x65F6;&#x95F4;&#x3002;</p><p>&#x8FD9;&#x4E00;&#x5468;&#x6211;&#x88AB;&#x4E00;&#x5BB6;&#x4E91;&#x8BA1;&#x7B97;&#x516C;&#x53F8;&#x62D6;&#x8FC7;&#x9762;&#x8BD5;&#x65F6;&#x95F4;&#xFF08;&#x7EA6;&#x5B9A;&#x4E0B;&#x5348;2&#x70B9;&#x5F00;&#x59CB;&#xFF0C;5&#x70B9;&#x90FD;&#x6CA1;&#x9762;&#x5B8C;&#xFF09;&#xFF0C;&#x4E5F;&#x8FDF;&#x5230;&#x8FC7;&#x4E24;&#x573A;&#x9762;&#x8BD5;&#xFF08;&#x6709;&#x4E00;&#x5929;&#x7279;&#x522B;&#x60F3;&#x5BB6;&#xFF0C;&#x5FC3;&#x60C5;&#x7279;&#x522B;&#x4F4E;&#x843D;&#xFF09;&#xFF0C;&#x5F15;&#x4EE5;&#x4E3A;&#x6212;&#xFF0C;&#x6DF1;&#x611F;&#x6B49;&#x610F;&#x3002;</p><hr><h1 id="&#x6559;&#x8BAD;&#x603B;&#x7ED3;">&#x6559;&#x8BAD;&#x603B;&#x7ED3;</h1><h2 id="&#x65B9;&#x5411;&#x5B9A;&#x7684;&#x665A;">&#x65B9;&#x5411;&#x5B9A;&#x7684;&#x665A;</h2><p>&#x6211;&#x4E00;&#x5F00;&#x59CB;&#x6839;&#x672C;&#x6CA1;&#x60F3;&#x597D;&#x6211;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x6211;&#x60F3;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x751A;&#x81F3;&#x8FDE;&#x6211;&#x80FD;&#x505A;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x77E5;&#x9053;&#x3002;&#x6240;&#x4EE5;&#x6295;&#x7B80;&#x5386;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x90FD;&#x662F;&#x778E;&#x6295;&#x7684;&#xFF0C;&#x51E1;&#x662F;&#x5C97;&#x4F4D;&#x63CF;&#x8FF0;&#x4E0E;&#x6211;&#x7B80;&#x5386;&#x6CBE;&#x70B9;&#x8FB9;&#x7684;&#x6211;&#x90FD;&#x6295;&#x4E86;&#xFF0C;&#x90A3;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x7684;&#x7B80;&#x5386;&#x6CA1;&#x6709;&#x91CD;&#x70B9;&#xFF0C;&#x5B8C;&#x5168;&#x770B;&#x4E0D;&#x51FA;&#x6211;&#x7684;&#x5DE5;&#x4F5C;&#x610F;&#x5411;&#x3002;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x662F;&#x6211;&#x7684;&#x8BD5;&#x9519;&#x8FC7;&#x7A0B;&#x3002;<del>&#x7ADF;&#x7136;&#x8FD8;&#x6536;&#x5230;&#x4E86;&#x51E0;&#x4E2A;offer&#x3002;</del></p><p>&#x540E;&#x6765;&#x6211;&#x60F3;&#x6E05;&#x695A;&#x4E86;&#x6211;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x624D;&#x5F00;&#x59CB;&#x66F4;&#x6709;&#x9488;&#x5BF9;&#x6027;&#x7684;&#x6295;&#x3002;</p><h2 id="&#x7B80;&#x5386;&#x6295;&#x5F97;&#x665A;">&#x7B80;&#x5386;&#x6295;&#x5F97;&#x665A;</h2><p>&#x57FA;&#x672C;&#x4E0A;&#x8FC7;&#x5B8C;&#x5E74;&#xFF0C;&#x6625;&#x62DB;&#x5C31;&#x5F00;&#x59CB;&#x4E86;&#x3002;&#x8D8A;&#x65E9;&#x6295;&#x7B80;&#x5386;&#xFF0C;&#x673A;&#x4F1A;&#x8D8A;&#x5927;&#x3002;&#x6211;&#x5C31;&#x662F;&#x6295;&#x7684;&#x592A;&#x665A;&#x4E86;&#xFF0C; &#x50CF;&#x4E00;&#x4E9B;&#x5916;&#x4F01;&#xFF08;&#x601D;&#x79D1;&#x7B49;&#xFF09;&#x548C;&#x817E;&#x8BAF;&#x548C;&#x963F;&#x91CC;&#x57FA;&#x672C;&#x4E0A;&#x5DF2;&#x7ECF;&#x7ED3;&#x675F;&#x4E86;&#x6625;&#x62DB;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x7684;&#x7B80;&#x5386;&#x8FDE;&#x88AB;&#x635E;&#x7684;&#x673A;&#x4F1A;&#x90FD;&#x6CA1;&#x4E86;&#xFF0C;&#x53EA;&#x80FD;&#x7B49;&#x79CB;&#x62DB;&#x3002;</p><p>&#x8BB0;&#x4F4F;&#x51E0;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#xFF0C;&#x6625;&#x62DB;&#xFF1A;&#x91D1;&#x4E09;&#x94F6;&#x56DB;&#xFF0C;3&#x6708;&#x5C31;&#x5F00;&#x59CB;&#x4E86;&#x3002;&#x79CB;&#x62DB;&#xFF1A;7&#x6708;&#x4E2D;&#x63D0;&#x524D;&#x6279;&#x5F00;&#x59CB;&#xFF0C;&#x91D1;&#x4E5D;&#x94F6;&#x5341;&#x3002;</p><h2 id="&#x51C6;&#x5907;&#x4E0D;&#x5145;&#x5206;">&#x51C6;&#x5907;&#x4E0D;&#x5145;&#x5206;</h2><p>&#x9762;&#x8BD5;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x53CD;&#x6620;&#x51FA;&#x6765;&#x4E86;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x66FE;&#x7ECF;&#x5B66;&#x8FC7;&#x7684;&#x4E1C;&#x897F;&#x90FD;&#x5FD8;&#x4E86;&#xFF0C;&#x590D;&#x4E60;&#x5F97;&#x4E0D;&#x591F;&#x3002;&#x671F;&#x4E2D;&#x8003;&#x5B8C;&#x7ACB;&#x9A6C;&#x5C31;&#x8981;&#x627E;&#x5B9E;&#x4E60;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x4E94;&#x4E00;&#x671F;&#x95F4;&#x5237;&#x4E86;&#x4E00;&#x4E9B;&#x7B97;&#x6CD5;&#x9898;&#xFF0C;&#x627E;&#x4E86;&#x627E;&#x624B;&#x611F;&#xFF0C;&#x6211;&#x7684;&#x9762;&#x8BD5;&#x57FA;&#x672C;&#x4E0A;&#x7C7B;&#x4F3C;&#x4E8E;&#x88F8;&#x9762;&#x3002;&#x5982;&#x679C;&#x518D;&#x7ED9;&#x6211;&#x4E00;&#x4E2A;&#x6708;&#x7684;&#x65F6;&#x95F4;&#x53BB;&#x51C6;&#x5907;&#x590D;&#x4E60;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x5E94;&#x8BE5;&#x80FD;&#x8868;&#x73B0;&#x5F97;&#x66F4;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x4F30;&#x8BA1;&#x5230;&#x65F6;&#x5019;&#x9EC4;&#x82B1;&#x83DC;&#x90FD;&#x51C9;&#x4E86;&#x3002;</p><p><strong>&#x8BF4;&#x767D;&#x4E86;&#x5C31;&#x662F;&#x83DC;&#xFF0C;&#x6CA1;&#x6709;&#x522B;&#x7684;&#x7406;&#x7531;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x539F;&#x56E0;&#x5C31;&#x662F;&#x6211;&#x592A;&#x83DC;&#x3002;</strong></p><h1 id="&#x5176;&#x4ED6;&#x5FC3;&#x5F97;&#x4F53;&#x4F1A;">&#x5176;&#x4ED6;&#x5FC3;&#x5F97;&#x4F53;&#x4F1A;</h1><h2 id="&#x7B97;&#x6CD5;or&#x5F00;&#x53D1;">&#x7B97;&#x6CD5;or&#x5F00;&#x53D1;&#xFF1F;</h2><p>&#x5C31;&#x6211;&#x627E;&#x5B9E;&#x4E60;&#x7684;&#x4F53;&#x9A8C;&#x6765;&#x770B;&#xFF0C;&#x7B97;&#x6CD5;&#x5C97;&#x4ECD;&#x7136;&#x6BD4;&#x5F00;&#x53D1;&#x5C97;&#x96BE;&#x627E;&#x3002;&#x7EAF;&#x7B97;&#x6CD5;&#x7814;&#x7A76;&#xFF08;research&#xFF09;&#x66F4;&#x662F;&#x96BE;&#x4E0A;&#x52A0;&#x96BE;&#x3002;&#x867D;&#x7136;&#x5F88;&#x591A;&#x516C;&#x53F8;&#x7ED9;&#x4E86;&#x9762;&#x8BD5;&#x673A;&#x4F1A;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x7B80;&#x5386;&#x7B5B;&#x9009;&#x4E0A;&#x5C31;&#x628A;&#x6211;&#x62D2;&#x4E86;&#x7684;&#x4ECD;&#x4E0D;&#x5728;&#x5C11;&#x6570;&#x3002;</p><p>&#x5EFA;&#x8BAE;&#x627E;&#x7B97;&#x6CD5;&#x5C97;&#x7684;&#x540C;&#x5B66;&#x6700;&#x597D;&#x80FD;<strong>&#x540C;&#x65F6;&#x6709;</strong>&#x4E00;&#x7BC7;B&#x4F1A;+&#x8FC7;&#x786C;&#x7684;&#x9879;&#x76EE;/&#x6BD4;&#x8D5B;&#x7ECF;&#x5386;+&#x624E;&#x5B9E;&#x7684;&#x7F16;&#x7A0B;/&#x7B97;&#x6CD5;&#x529F;&#x5E95;+&#x4E00;&#x4EFD;&#x5927;&#x5382;&#x6709;&#x4EF7;&#x503C;&#x7684;&#x5B9E;&#x4E60;&#x7ECF;&#x5386;&#x3002;&#x6211;&#x89C9;&#x5F97;&#x53EA;&#x6709;<strong>&#x540C;&#x65F6;</strong>&#x6EE1;&#x8DB3;&#x4EE5;&#x4E0A;4&#x4E2A;&#x6761;&#x4EF6;&#xFF0C;&#x627E;&#x5DE5;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x624D;&#x80FD;&#x505A;&#x5230;&#x6709;&#x8F83;&#x5927;&#x628A;&#x63E1;&#x3002;</p><h2 id="&#x9009;&#x62E9;&#x6743;&#x7684;&#x95EE;&#x9898;">&#x9009;&#x62E9;&#x6743;&#x7684;&#x95EE;&#x9898;</h2><p>&#x4E4B;&#x524D;&#x770B;&#x8FC7;&#x8FD9;&#x4E48;&#x4E00;&#x53E5;&#x8BDD;&#xFF1A;&#x201C;&#x80FD;&#x591F;&#x5728;&#x4E00;&#x8D77;&#x6109;&#x5FEB;&#x73A9;&#x800D;&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x662F;&#x53CC;&#x65B9;&#x90FD;&#x6709;&#x6380;&#x684C;&#x5B50;&#x7684;&#x80FD;&#x529B;&#x548C;&#x4E0D;&#x6380;&#x684C;&#x5B50;&#x7684;&#x4FEE;&#x517B;&#x3002;&#x751F;&#x610F;&#x5982;&#x6B64;&#xFF0C;&#x5A5A;&#x59FB;&#x4EA6;&#x5982;&#x6B64;&#x3002;&#x201D;</p><p>&#x6211;&#x5BF9;&#x4E8E;&#x8FD9;&#x53E5;&#x8BDD;&#x7684;&#x7406;&#x89E3;&#x662F;&#xFF0C;&#x65E2;&#x8981;&#x6709;&#x5951;&#x7EA6;&#x7CBE;&#x795E;&#xFF0C;&#x4E5F;&#x8981;&#x5728;&#x5BF9;&#x65B9;&#x4F5C;&#x51FA;&#x51FA;&#x683C;&#x4E3E;&#x52A8;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6709;&#x4FDD;&#x62A4;&#x81EA;&#x5DF1;&#x7684;&#x80FD;&#x529B;&#x3002;</p><p>&#x65B0;&#x95FB;&#x4E0A;&#x4E5F;&#x62A5;&#x5230;&#x51FA;&#x5F88;&#x591A;&#x65E0;&#x826F;&#x5BFC;&#x5E08;&#x7684;&#x4E8B;&#x8FF9;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x5728;&#x4EFB;&#x4F55;&#x65F6;&#x5019;&#x628A;&#x9009;&#x62E9;&#x6743;&#x7559;&#x5728;&#x81EA;&#x5DF1;&#x624B;&#x91CC;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x3002;</p><h1 id="&#x6700;&#x540E;&#x7684;&#x53BB;&#x5411;">&#x6700;&#x540E;&#x7684;&#x53BB;&#x5411;</h1><p>&#x6700;&#x540E;&#x6211;&#x53BB;&#x4E86;&#x82F1;&#x7279;&#x5C14;&#x4E2D;&#x56FD;&#x7814;&#x7A76;&#x4E2D;&#x5FC3;&#xFF0C;&#x53BB;&#x505A;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x7684;&#x4EFF;&#x771F;&amp;&#x51B3;&#x7B56;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x4ECE;5.4&amp;#x6B63;&amp;#x5F0F;&amp;#x5F00;&amp;#x59CB;&amp;#x627E;&amp;#x5B9E;&amp;#x4E60;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8FC7;&amp;#x4E86;10&amp;#x5929;&amp;#x4E86;&amp;#xFF0C;&amp;#x628A;&amp;#x5FC3;&amp;#x5F97;&amp;#x4F53;&amp;#x4F1A;&amp;#xFF0C;&amp;#x7ECF;&amp;#x9A8C;&amp;#x6559;&amp;#x8BAD;&amp;#xFF0C;&amp;#x6240;&amp;#x601D;&amp;#x6240;&amp;#x611F;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E0B;&amp;#x6765;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="经验教训" scheme="https://www.windsings.com/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD/"/>
    
    
      <category term="找实习" scheme="https://www.windsings.com/tags/%E6%89%BE%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="经验教训" scheme="https://www.windsings.com/tags/%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD/"/>
    
      <category term="总结" scheme="https://www.windsings.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="实习周" scheme="https://www.windsings.com/tags/%E5%AE%9E%E4%B9%A0%E5%91%A8/"/>
    
  </entry>
  
  <entry>
    <title>PAT-Advanced-Level题解</title>
    <link href="https://www.windsings.com//posts/79c0eafd/"/>
    <id>https://www.windsings.com//posts/79c0eafd/</id>
    <published>2019-05-07T18:26:08.000Z</published>
    <updated>2019-05-07T18:31:47.943Z</updated>
    
    <content type="html"><![CDATA[<p>&#x4EE3;&#x7801;<a href="https://github.com/littlesevenmo/PAT-Advanced-Level" target="_blank" rel="noopener">&#x8BF7;&#x70B9;&#x8FD9;&#x91CC;</a></p><p>&#x9898;&#x89E3;&#x4F1A;&#x5728;<strong>&#x4E0D;&#x5FD9;</strong>&#x7684;&#x65F6;&#x5019;&#x66F4;&#x65B0;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x4EE3;&amp;#x7801;&lt;a href=&quot;https://github.com/littlesevenmo/PAT-Advanced-Level&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x8BF7;&amp;#x70B9;&amp;#x8FD9;&amp;#x9
      
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>未归档的算法题</title>
    <link href="https://www.windsings.com//posts/3bb23225/"/>
    <id>https://www.windsings.com//posts/3bb23225/</id>
    <published>2019-04-25T08:28:36.000Z</published>
    <updated>2020-07-02T10:53:49.770Z</updated>
    
    <content type="html"><![CDATA[<p>&#x672A;&#x5F52;&#x6863;&#x7684;&#x7B97;&#x6CD5;&#x9898;</p><a id="more"></a><h1 id="&#x534E;&#x4E3A;-&#x5C0F;&#x738B;&#x7684;&#x5BC6;&#x7801;">2019&#x534E;&#x4E3A;-&#x5C0F;&#x738B;&#x7684;&#x5BC6;&#x7801;</h1><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x5C0F;&#x738B;&#x7684;&#x4FDD;&#x9669;&#x7BB1;&#x5BC6;&#x7801;&#x662F;&#x4E00;&#x4E2A;&#x5347;&#x5E8F;&#x6392;&#x5217;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x4F46;&#x662F;&#x5C0F;&#x738B;&#x603B;&#x662F;&#x8BB0;&#x4E0D;&#x4F4F;&#x4ED6;&#x7684;&#x5BC6;&#x7801;&#xFF0C;&#x4E8E;&#x662F;&#x5C0F;&#x738B;&#x5C06;&#x4ED6;&#x7684;&#x5BC6;&#x7801;&#x52A0;&#x5BC6;&#x540E;&#x4FDD;&#x5B58;&#x5728;&#x4E86;&#x4E00;&#x4E2A;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x91CC;&#xFF0C;&#x52A0;&#x5BC6;&#x7684;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p><ol type="1"><li>&#x7528;&#x6570;&#x5B57;&#x7684;&#x82F1;&#x6587;&#x5355;&#x8BCD;&#x6765;&#x4EE3;&#x66FF;&#x6570;&#x5B57;&#x672C;&#x8EAB;&#x3002;&#x6BD4;&#x5982;1234699&#x53D8;&#x6210;onethreefoursixninenine</li><li>&#x5C06;&#x4E0A;&#x8FF0;&#x5B57;&#x7B26;&#x4E32;&#x4F7F;&#x7528;&#x201C;&#x5C0F;&#x738B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x201D;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;&#x8BE5;&#x7B97;&#x6CD5;&#x4F1A;&#x6309;&#x7167;&#x67D0;&#x79CD;&#x89C4;&#x5219;&#x6765;&#x6539;&#x53D8;&#x539F;&#x5B57;&#x7B26;&#x4E32;&#x5B57;&#x7B26;&#x7684;&#x6392;&#x5217;&#x987A;&#x5E8F;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x4F1A;&#x6539;&#x53D8;&#x67D0;&#x4E9B;&#x5B57;&#x6BCD;&#x7684;&#x5927;&#x5C0F;&#x5199;&#x3002;&#x6BD4;&#x5982;onethreefoursixninenine&#x7ECF;&#x8FC7;&#x52A0;&#x5BC6;&#x540E;&#x5C31;&#x53D8;&#x6210;&#x4E86;NeNohuiroNNiNeteefersix&#x3002;</li></ol><p>&#x7531;&#x4E8E;&#x201C;&#x5C0F;&#x738B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x201D;&#x662F;&#x5C0F;&#x738B;&#x81EA;&#x5DF1;&#x8BBE;&#x8BA1;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5C0F;&#x738B;&#x8BA4;&#x4E3A;&#x53EA;&#x6709;&#x4ED6;&#x81EA;&#x5DF1;&#x80FD;&#x5C06;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8FD8;&#x539F;&#x3002;</p><p>&#x5B9E;&#x9645;&#x4E0A;&#x5C0F;&#x738B;&#x7684;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x5B58;&#x5728;&#x6F0F;&#x6D1E;&#x3002;&#x5373;&#x4F7F;&#x4E0D;&#x77E5;&#x9053;&#x201C;&#x5C0F;&#x738B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x201D;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#xFF0C;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x8FD8;&#x539F;&#x51FA;&#x539F;&#x59CB;&#x7684;&#x5BC6;&#x7801;&#x7684;&#x3002;&#x8BF7;&#x4F60;&#x5199;&#x4E00;&#x6BB5;&#x7A0B;&#x5E8F;&#x6765;&#x7834;&#x89E3;&#x5C0F;&#x738B;&#x7684;&#x5BC6;&#x7801;&#x3002;</p><hr><p>2019&#x534E;&#x4E3A;&#x6625;&#x62DB;&#x673A;&#x8BD5;&#x9898;</p><h2 id="&#x793A;&#x4F8B;1">&#x793A;&#x4F8B;1</h2><p>&#x8F93;&#x5165;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oNEthrEEfoursixNiNENiEN</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x51FA;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">134699</span><br></pre></td></tr></table></figure><h2 id="&#x6211;&#x7684;&#x7B54;&#x6848;">&#x6211;&#x7684;&#x7B54;&#x6848;</h2><h3 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h3><ol type="1"><li>&#x5C0F;&#x738B;&#x7684;&#x4FDD;&#x9669;&#x7BB1;&#x5BC6;&#x7801;&#x662F;<strong>&#x5347;&#x5E8F;</strong>&#x6392;&#x5217;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;</li><li>&#x6570;&#x5B57;&#x7528;&#x5B57;&#x6BCD;&#x6765;&#x4EE3;&#x66FF;&#x3002;</li><li>&#x53EA;&#x6539;&#x53D8;&#x5B57;&#x6BCD;&#x7684;&#x6392;&#x5217;&#x987A;&#x5E8F;&#xFF0C;&#x4E0D;&#x505A;&#x66FF;&#x6362;&#xFF08;&#x5373;&#x7528;&#x522B;&#x7684;&#x5B57;&#x6BCD;&#x4EE3;&#x66FF;&#xFF09;&#x3002;</li></ol><p>&#x5C06;&#x6240;&#x6709;&#x7684;&#x6570;&#x5B57;&#x4E0E;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x6BCD;&#x5217;&#x51FA;</p><table><thead><tr class="header"><th style="text-align: center;">&#x6570;&#x5B57;</th><th style="text-align: center;">&#x5B57;&#x6BCD;</th><th style="text-align: center;">&#x72EC;&#x6709;&#x7684;&#x5B57;&#x7B26;</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">0</td><td style="text-align: center;">zero</td><td style="text-align: center;">z</td></tr><tr class="even"><td style="text-align: center;">1</td><td style="text-align: center;">one</td><td style="text-align: center;">o-0-2-4</td></tr><tr class="odd"><td style="text-align: center;">2</td><td style="text-align: center;">two</td><td style="text-align: center;">w</td></tr><tr class="even"><td style="text-align: center;">3</td><td style="text-align: center;">three</td><td style="text-align: center;">h-8</td></tr><tr class="odd"><td style="text-align: center;">4</td><td style="text-align: center;">four</td><td style="text-align: center;">u</td></tr><tr class="even"><td style="text-align: center;">5</td><td style="text-align: center;">five</td><td style="text-align: center;">f-4</td></tr><tr class="odd"><td style="text-align: center;">6</td><td style="text-align: center;">six</td><td style="text-align: center;">x</td></tr><tr class="even"><td style="text-align: center;">7</td><td style="text-align: center;">seven</td><td style="text-align: center;">s-6</td></tr><tr class="odd"><td style="text-align: center;">8</td><td style="text-align: center;">eight</td><td style="text-align: center;">g</td></tr><tr class="even"><td style="text-align: center;">9</td><td style="text-align: center;">nine</td><td style="text-align: center;">i-5-6-8</td></tr></tbody></table><p>&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#xFF1A;&#x5728;&#x8FD9;10&#x4E2A;&#x6570;&#x5B57;&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x5B57;&#x6BCD;&#x201D;z&#x201C;&#xFF0C;&#x53EA;&#x5728;zero&#x4E2D;&#x51FA;&#x73B0;&#x3002;&#x5176;&#x4ED6;&#x7684;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x5B57;&#x6BCD;&#x201C;h&#x201D;&#xFF0C;&#x53EA;&#x5728;3&#x548C;8&#x7684;&#x82F1;&#x6587;&#x4E2D;&#x51FA;&#x73B0;&#xFF0C;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x3002;</p><p>&#x56E0;&#x6B64;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x5B57;&#x6BCD;&#x8FDB;&#x884C;&#x7EDF;&#x8BA1;&#x51FA;&#x73B0;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5047;&#x5982;z&#x51FA;&#x73B0;3&#x6B21;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x6570;&#x5B57;0&#x51FA;&#x73B0;&#x4E86;3&#x6B21;&#xFF0C;&#x540C;&#x65F6;&#x5C06;&#x201C;zero&#x201D;&#x56DB;&#x4E2A;&#x5B57;&#x6BCD;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x540C;&#x65F6;&#x51CF;3&#x3002;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;</p><h3 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0----zzero</span></span><br><span class="line"><span class="comment">2----wtwo</span></span><br><span class="line"><span class="comment">4----ufour</span></span><br><span class="line"><span class="comment">6----xsix</span></span><br><span class="line"><span class="comment">8----geight</span></span><br><span class="line"><span class="comment">3----h-8three</span></span><br><span class="line"><span class="comment">5----f-4five</span></span><br><span class="line"><span class="comment">7----s-6seven</span></span><br><span class="line"><span class="comment">9----i-5-6-8nine</span></span><br><span class="line"><span class="comment">1----o-0-2-4one</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">string</span> input;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; input;</span><br><span class="line">    transform(input.begin(), input.end(), input.begin(), ::<span class="built_in">tolower</span>);</span><br><span class="line">    <span class="comment">//cout &lt;&lt; input &lt;&lt; endl;//&#x53D8;&#x5C0F;&#x5199;</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; input.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (!m.count(input[i]))</span><br><span class="line">            m[input[i]] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            m[input[i]] = m[input[i]] + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x5148;&#x5904;&#x7406;0</span></span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">11</span>] = { <span class="number">0</span> };</span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;z&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;0</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">0</span>] = m[<span class="string">&apos;z&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;z&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">        m[<span class="string">&apos;r&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;w&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;2</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">2</span>] = m[<span class="string">&apos;w&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;t&apos;</span>] -= num[<span class="number">2</span>];</span><br><span class="line">        m[<span class="string">&apos;w&apos;</span>] -= num[<span class="number">2</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">2</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;u&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;4</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">4</span>] = m[<span class="string">&apos;u&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;f&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">        m[<span class="string">&apos;u&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">        m[<span class="string">&apos;r&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;x&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;6</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">6</span>] = m[<span class="string">&apos;x&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;s&apos;</span>] -= num[<span class="number">6</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">6</span>];</span><br><span class="line">        m[<span class="string">&apos;x&apos;</span>] -= num[<span class="number">6</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;g&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;8</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">8</span>] = m[<span class="string">&apos;g&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;g&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;h&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;t&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;h&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;3</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">3</span>] = m[<span class="string">&apos;h&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;t&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;h&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;r&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;f&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;5</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">5</span>] = m[<span class="string">&apos;f&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;f&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">        m[<span class="string">&apos;v&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;s&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;7</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">7</span>] = m[<span class="string">&apos;s&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;s&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;v&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;i&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;9</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">9</span>] = m[<span class="string">&apos;i&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;o&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;16</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">1</span>] = m[<span class="string">&apos;o&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">1</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">1</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; num[i]; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x534E;&#x4E3A;-&#x65CB;&#x8F6C;&#x77E9;&#x9635;">2019&#x534E;&#x4E3A;-&#x65CB;&#x8F6C;&#x77E9;&#x9635;</h1><h2 id="&#x9898;&#x76EE;&#x5927;&#x610F;">&#x9898;&#x76EE;&#x5927;&#x610F;</h2><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;N*N&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x6C42;&#x5176;&#x5411;&#x53F3;&#x65CB;&#x8F6C;m&#x6B21;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6BCF;&#x6B21;&#x65CB;&#x8F6C;90&#xB0;&#x3002;</p><h2 id="&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;">&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;</h2><p>&#x8003;&#x5BDF;&#x5FAA;&#x73AF;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;v(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        v[i].resize(n);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; v[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">    m = m % <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[j][i];</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">2</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = n<span class="number">-1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[i][j];</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">3</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n ; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[j][i]&lt;&lt;<span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[i][j];</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x534E;&#x4E3A;-&#x5C0F;&#x670B;&#x53CB;&#x7684;&#x793C;&#x7269;">2019&#x534E;&#x4E3A;-&#x5C0F;&#x670B;&#x53CB;&#x7684;&#x793C;&#x7269;</h1><h2 id="&#x9898;&#x76EE;&#x5927;&#x610F;-1">&#x9898;&#x76EE;&#x5927;&#x610F;</h2><p>&#x6709;N&#x4E2A;&#x793C;&#x7269;&#x548C;k&#x4E2A;&#x5C0F;&#x670B;&#x53CB;&#xFF0C;&#x8BF7;&#x95EE;&#x6709;&#x591A;&#x5C11;&#x79CD;&#x5206;&#x793C;&#x7269;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5E76;&#x628A;&#x5B83;&#x4EEC;&#x5168;&#x90FD;&#x663E;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x7528;*&#x8868;&#x793A;&#x793C;&#x7269;&#xFF0C;&#x7528;|&#x6765;&#x5206;&#x5272;&#x5C0F;&#x670B;&#x53CB;&#x3002;</p><h2 id="&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;-1">&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;</h2><p>&#x8003;&#x5BDF;DFS</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp :res)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//cout &lt;&lt; res.size() &lt;&lt; endl;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp[<span class="number">0</span>]; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;*&apos;</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; k; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;|&apos;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; temp[i]; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;*&apos;</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> gift, <span class="keyword">int</span> curChild,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (curChild == k - <span class="number">1</span>)<span class="comment">//&#x662F;&#x6700;&#x540E;&#x4E00;&#x4E2A;</span></span><br><span class="line">    {</span><br><span class="line">        temp[curChild] = gift;</span><br><span class="line">        res.push_back(temp);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (gift == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        res.push_back(temp);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = gift; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        temp[curChild] = i;</span><br><span class="line">        dfs(gift - i, curChild + <span class="number">1</span>, temp);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp(k, <span class="number">0</span>);</span><br><span class="line">    dfs(n, <span class="number">0</span>, temp);</span><br><span class="line">    display();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x534E;&#x4E3A;-&#x6C42;&#x7F16;&#x8F91;&#x8DDD;&#x79BB;">2019&#x534E;&#x4E3A;-&#x6C42;&#x7F16;&#x8F91;&#x8DDD;&#x79BB;</h1><h2 id="&#x9898;&#x76EE;&#x5927;&#x610F;-2">&#x9898;&#x76EE;&#x5927;&#x610F;</h2><p>&#x7ED9;&#x5B9A;&#x4E00;&#x7247;&#x6587;&#x7AE0;&#xFF0C;&#x6709;n&#x884C;&#xFF0C;&#x5BF9;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x6309;&#x884C;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x7ED9;&#x5B9A;&#x4E00;&#x7247;&#x4FEE;&#x6539;&#x597D;&#x7684;&#x6587;&#x7AE0;&#x3002;</p><p>&#x6C42;&#x9700;&#x8981;&#x591A;&#x5C11;&#x6B21;&#x64CD;&#x4F5C;&#xFF08;&#x5220;&#x9664;&#x3001;&#x4FEE;&#x6539;&#x3001;&#x6DFB;&#x52A0;&#xFF09;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x8FD9;&#x7BC7;&#x4FEE;&#x6539;&#x597D;&#x7684;&#x6587;&#x7AE0;&#x3002;</p><h2 id="&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;-2">&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;</h2><p>&#x7F16;&#x8F91;&#x8DDD;&#x79BB;&#xFF0C;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x53BB;&#x505A;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">10010</span>][<span class="number">10010</span>] = { <span class="number">0</span> };</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="built_in">string</span> a, <span class="built_in">string</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= a.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        dp[i][<span class="number">0</span>] = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= b.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        dp[<span class="number">0</span>][i] = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b.length(); j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (a[i - <span class="number">1</span>] == b[j - <span class="number">1</span>])</span><br><span class="line">            {</span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> edIns = dp[i][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> edDel = dp[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> edRep = dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                dp[i][j] = min(edIns, min(edDel, edRep));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> dp[a.length()][b.length()];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> input;</span><br><span class="line">    <span class="keyword">int</span> n, res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;yuanlai(n), xinde(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; yuanlai[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; xinde[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//cout &lt;&lt; yuanlai[i] &lt;&lt; endl;</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; xinde[i] &lt;&lt; endl;</span></span><br><span class="line">        res += check(yuanlai[i], xinde[i]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//cout &lt;&lt; res;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672A;&amp;#x5F52;&amp;#x6863;&amp;#x7684;&amp;#x7B97;&amp;#x6CD5;&amp;#x9898;&lt;/p&gt;
    
    </summary>
    
      <category term="算法题" scheme="https://www.windsings.com/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM" scheme="https://www.windsings.com/tags/ACM/"/>
    
      <category term="未归档的" scheme="https://www.windsings.com/tags/%E6%9C%AA%E5%BD%92%E6%A1%A3%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer题解</title>
    <link href="https://www.windsings.com//posts/c812c7f8/"/>
    <id>https://www.windsings.com//posts/c812c7f8/</id>
    <published>2019-04-19T18:37:10.000Z</published>
    <updated>2019-06-04T20:43:36.909Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/ta/coding-interviews" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x8D85;&#x8D8A;&#x4FDD;&#x4F51;&#xFF0C;offer++ <a id="more"></a></p><h1 id="&#x66FF;&#x6362;&#x7A7A;&#x683C;">&#x66FF;&#x6362;&#x7A7A;&#x683C;</h1><p>&#x6211;&#x81EA;&#x5DF1;&#x4E00;&#x5F00;&#x59CB;&#x5199;&#x7684;&#xFF0C;&#x975E;&#x5E38;&#x7B28;&#x7684;&#x65B9;&#x6CD5;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">replaceSpace</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i]==<span class="string">&apos; &apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = length+<span class="number">1</span>; j &gt; i+<span class="number">2</span>; j--)</span><br><span class="line">                {</span><br><span class="line">                    str[j] = str[j - <span class="number">2</span>];</span><br><span class="line">                }</span><br><span class="line">                length += <span class="number">2</span>;</span><br><span class="line">                str[i++] = <span class="string">&apos;%&apos;</span>;</span><br><span class="line">                str[i++] = <span class="string">&apos;2&apos;</span>;</span><br><span class="line">                str[i] = <span class="string">&apos;0&apos;</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x70B9;&#x5F00;&#x8BA8;&#x8BBA;&#x533A;&#xFF0C;&#x5927;&#x4F6C;&#x4EEC;&#x5F00;&#x59CB;&#x79C0;&#x81EA;&#x5DF1;&#x7684;&#x725B;&#x903C;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x83DC;&#x9E21;&#x745F;&#x745F;&#x53D1;&#x6296;&#x3002;</p><p>&#x5927;&#x6982;&#x601D;&#x8DEF;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5148;&#x904D;&#x5386;&#x4E00;&#x904D;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x627E;&#x51FA;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x7A7A;&#x683C;&#x3002; 2. &#x8BA1;&#x7B97;&#x66FF;&#x6362;&#x540E;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002; 3. &#x4ECE;&#x540E;&#x5F80;&#x524D;&#xFF0C;&#x653E;&#x5165;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&#x679C;&#x9047;&#x5230;&#x4E86;&#x7A7A;&#x683C;&#xFF0C;&#x5219;&#x7528;&quot;%20&quot;&#x6765;&#x66FF;&#x4EE3;&#x3002;</p><p>&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">replaceSpace</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="comment">//&#x904D;&#x5386;&#x4E00;&#x8FB9;&#x5B57;&#x7B26;&#x4E32;&#x627E;&#x51FA;&#x7A7A;&#x683C;&#x7684;&#x6570;&#x91CF;</span></span><br><span class="line">        <span class="keyword">if</span> (str == <span class="literal">NULL</span> || length &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> oldnumber = <span class="number">0</span>;<span class="comment">//&#x8BB0;&#x5F55;&#x4EE5;&#x524D;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line">        <span class="keyword">int</span> replacenumber = <span class="number">0</span>;<span class="comment">//&#x8BB0;&#x5F55;&#x7A7A;&#x683C;&#x7684;&#x6570;&#x91CF;</span></span><br><span class="line">        <span class="keyword">while</span> (str[i] != <span class="string">&apos;\0&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            oldnumber++;</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">&apos; &apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                replacenumber++;</span><br><span class="line">            }</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> newlength = oldnumber + replacenumber * <span class="number">2</span>;<span class="comment">//&#x63D2;&#x5165;&#x540E;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line">        <span class="keyword">if</span> (newlength &gt; length)<span class="comment">//&#x5982;&#x679C;&#x8BA1;&#x7B97;&#x540E;&#x7684;&#x957F;&#x5EA6;&#x5927;&#x4E8E;&#x603B;&#x957F;&#x5EA6;&#x5C31;&#x65E0;&#x6CD5;&#x63D2;&#x5165;</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> pOldlength = oldnumber; <span class="comment">//&#x6CE8;&#x610F;&#x4E0D;&#x8981;&#x51CF;&#x4E00;&#x56E0;&#x4E3A;&#x9690;&#x85CF;&#x4E2A;&#x2018;\0&#x2019;&#x4E5F;&#x8981;&#x7B97;&#x91CC;</span></span><br><span class="line">        <span class="keyword">int</span> pNewlength = newlength;</span><br><span class="line">        <span class="keyword">while</span> (pOldlength &gt;= <span class="number">0</span> &amp;&amp; pNewlength &gt; pOldlength)<span class="comment">//&#x653E;&#x5B57;&#x7B26;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[pOldlength] == <span class="string">&apos; &apos;</span>) <span class="comment">//&#x78B0;&#x5230;&#x7A7A;&#x683C;&#x5C31;&#x66FF;&#x6362;</span></span><br><span class="line">            {</span><br><span class="line">                str[pNewlength--] = <span class="string">&apos;0&apos;</span>;</span><br><span class="line">                str[pNewlength--] = <span class="string">&apos;2&apos;</span>;</span><br><span class="line">                str[pNewlength--] = <span class="string">&apos;%&apos;</span>;</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="comment">//&#x4E0D;&#x662F;&#x7A7A;&#x683C;&#x5C31;&#x628A;pOldlength&#x6307;&#x5411;&#x7684;&#x5B57;&#x7B26;&#x88C5;&#x5165;pNewlength&#x6307;&#x5411;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">            {</span><br><span class="line">                str[pNewlength--] = str[pOldlength];</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            pOldlength--; <span class="comment">//&#x4E0D;&#x7BA1;&#x662F;if&#x8FD8;&#x662F;elsr&#x90FD;&#x8981;&#x628A;pOldlength&#x524D;&#x79FB;</span></span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p><h1 id="&#x4ECE;&#x5C3E;&#x5230;&#x5934;&#x6253;&#x5370;&#x94FE;&#x8868;">&#x4ECE;&#x5C3E;&#x5230;&#x5934;&#x6253;&#x5370;&#x94FE;&#x8868;</h1><p>&#x4F7F;&#x7528;&#x5934;&#x63D2;&#x6CD5;&#xFF0C;&#x5C06;&#x94FE;&#x8868;&#x9006;&#x7F6E;&#x4E4B;&#x540E;&#xFF0C;&#x538B;&#x5165;vector&#x4E2D;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">      <span class="keyword">int</span> val;</span><br><span class="line">      <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">next</span>;</span></span><br><span class="line">      ListNode(<span class="keyword">int</span> x) :</span><br><span class="line">            val(x), next(<span class="literal">NULL</span>) {</span><br><span class="line">      }</span><br><span class="line">};</span><br><span class="line"><span class="function">ListNode <span class="title">L</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n, temp;</span><br><span class="line">    ListNode *ptr = &amp;L;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    L.val = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line"></span><br><span class="line">        ptr-&gt;next = (ListNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ListNode));</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; ptr-&gt;next-&gt;val;</span><br><span class="line">        ptr-&gt;next-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        ptr = ptr-&gt;next;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; printListFromTailToHead(ListNode* head)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; V;</span><br><span class="line">        <span class="keyword">if</span> (head==<span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> V;</span><br><span class="line">        ListNode* pre=head;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        pre-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* p = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (head!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            p = head;</span><br><span class="line">            head = head-&gt;next;</span><br><span class="line">            p-&gt;next = pre;</span><br><span class="line">            pre = p;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (pre != <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            V.push_back(pre-&gt;val);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; pre-&gt;val &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            pre = pre-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> V;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    init();</span><br><span class="line">    Solution a;</span><br><span class="line">    a.printListFromTailToHead(L.next);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><strong>&#x6D4B;&#x8BD5;&#x6570;&#x636E;</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Test1&#xFF1A;</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">6</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">Test2&#xFF1A;</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">67</span> <span class="number">0</span> <span class="number">24</span> <span class="number">58</span></span><br><span class="line"></span><br><span class="line">Test3&#xFF1A;</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x67E5;&#x627E;">&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x67E5;&#x627E;</h1><ol type="1"><li>&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x66B4;&#x529B;&#x641C;&#x7D22;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x6CE8;&#x610F;&#x526A;&#x679D;&#x3002;</li><li>&#x7559;&#x610F;&#x5230;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x884C;&#xFF0C;&#x90FD;&#x662F;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x9012;&#x589E;&#x6392;&#x5E8F;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x5217;&#xFF0C;&#x4E5F;&#x662F;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x9012;&#x589E;&#x3002;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4ECE;&#x6700;&#x5DE6;&#x4E0B;&#x8FDB;&#x884C;&#x641C;&#x7D22;&#xFF1A;&#x82E5;&#x5F53;&#x524D;&#x6570;&gt;target&#xFF0C;&#x5411;&#x4E0A;&#x3002;&#x53CD;&#x4E4B;&#xFF0C;&#x82E5;&#x5F53;&#x524D;&#x6570;&lt;target&#xFF0C;&#x5411;&#x53F3;&#x3002;</li></ol><p>&#x66B4;&#x529B;&#x641C;&#x7D22;+&#x526A;&#x679D;</p><p>&#x8FD9;&#x91CC;&#x6CA1;&#x7528;&#x5230;&#x6BCF;&#x5217;&#x90FD;&#x662F;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x7684;&#x6761;&#x4EF6;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x5F00;&#x59CB;&#x5199;&#x7684;&#xFF0C;&#x5199;&#x7684;&#x4E0D;&#x597D;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">array</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> hang = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="keyword">int</span> lie = <span class="built_in">array</span>[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hang; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lie; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i][j] == target)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">array</span>[i][j] &gt; target)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p><p>&#x66F4;&#x597D;&#x7684;&#x4EE3;&#x7801;&#xFF1A;&#x4ECE;&#x5DE6;&#x4E0B;&#x5F00;&#x59CB;&#x641C;&#x7D22;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; <span class="built_in">array</span>)</span> </span>{</span><br><span class="line">        <span class="comment">// array&#x662F;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#xFF0C;&#x8FD9;&#x91CC;&#x6CA1;&#x505A;&#x5224;&#x7A7A;&#x64CD;&#x4F5C;</span></span><br><span class="line">        <span class="keyword">int</span> rows = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="keyword">int</span> cols = <span class="built_in">array</span>[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">int</span> i=rows<span class="number">-1</span>,j=<span class="number">0</span>;<span class="comment">//&#x5DE6;&#x4E0B;&#x89D2;&#x5143;&#x7D20;&#x5750;&#x6807;</span></span><br><span class="line">        <span class="keyword">while</span>(i&gt;=<span class="number">0</span> &amp;&amp; j&lt;cols){<span class="comment">//&#x4F7F;&#x5176;&#x4E0D;&#x8D85;&#x51FA;&#x6570;&#x7EC4;&#x8303;&#x56F4;</span></span><br><span class="line">            <span class="keyword">if</span>(target&lt;<span class="built_in">array</span>[i][j])</span><br><span class="line">                i--;<span class="comment">//&#x67E5;&#x627E;&#x7684;&#x5143;&#x7D20;&#x8F83;&#x5C11;&#xFF0C;&#x5F80;&#x4E0A;&#x627E;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target&gt;<span class="built_in">array</span>[i][j])</span><br><span class="line">                j++;<span class="comment">//&#x67E5;&#x627E;&#x5143;&#x7D20;&#x8F83;&#x5927;&#xFF0C;&#x5F80;&#x53F3;&#x627E;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//&#x627E;&#x5230;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x7528;&#x4E24;&#x4E2A;&#x6808;&#x5B9E;&#x73B0;&#x961F;&#x5217;">&#x7528;&#x4E24;&#x4E2A;&#x6808;&#x5B9E;&#x73B0;&#x961F;&#x5217;</h1><p>&#x57FA;&#x7840;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x4E24;&#x4E2A;&#x6808;&#x7684;&#x7A7A;&#x95F4;&#x90FD;&#x4E0D;&#x4F1A;&#x7206;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        stack1.push(node);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (!stack2.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> temp = stack2.top();</span><br><span class="line">            stack2.pop();</span><br><span class="line">            <span class="keyword">return</span> temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (!stack1.empty())</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> temp = stack1.top();</span><br><span class="line">                stack1.pop();</span><br><span class="line">                stack2.push(temp);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">true</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> temp = stack2.top();</span><br><span class="line">                stack2.pop();</span><br><span class="line">                <span class="keyword">return</span> temp;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack1;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack2;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x65CB;&#x8F6C;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x5B57;">&#x65CB;&#x8F6C;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x5B57;</h1><p>&#x627E;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x524D;&#x4E00;&#x4E2A;&#x3010;&gt;&#x3011;&#x540E;&#x4E00;&#x4E2A;&#x7684;&#x6570;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minNumberInRotateArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; rotateArray)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (rotateArray.size()==<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rotateArray.size()<span class="number">-1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (rotateArray[i] &gt; rotateArray[i + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> rotateArray[i + <span class="number">1</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;">&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;</h1><p>&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;&#xFF1A;0 1 1 2 3....</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> res_pre = <span class="number">0</span>, res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            res = res + res_pre;</span><br><span class="line">            res_pre = res - res_pre;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x8DF3;&#x53F0;&#x9636;">&#x8DF3;&#x53F0;&#x9636;</h1><h2 id="&#x7EC4;&#x5408;">&#x7EC4;&#x5408;</h2><p>&#x5229;&#x7528;&#x7EC4;&#x5408;&#x53BB;&#x505A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">zuhe</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        {</span><br><span class="line">            res *= (a - i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= b; i++)</span><br><span class="line">        {</span><br><span class="line">            res /= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jumpFloor</span><span class="params">(<span class="keyword">int</span> number)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> min = number / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (number % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">            min++;<span class="comment">//&#x6700;&#x5C11;&#x7684;&#x6B65;&#x6570;</span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = min; i &lt; number; i++)</span><br><span class="line">        {</span><br><span class="line">            res += zuhe(i, number-i);</span><br><span class="line">        }</span><br><span class="line">        res ++;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="fib&#x5E8F;&#x5217;">Fib&#x5E8F;&#x5217;</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">JumpFloor</span><span class="params">(<span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">int</span> pre2 = <span class="number">1</span>, pre1 = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        result = pre2 + pre1;</span><br><span class="line">        pre2 = pre1;</span><br><span class="line">        pre1 = result;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x53D8;&#x6001;&#x8DF3;&#x53F0;&#x9636;">&#x53D8;&#x6001;&#x8DF3;&#x53F0;&#x9636;</h1><h2 id="&#x7EC4;&#x5408;-1">&#x7EC4;&#x5408;</h2><p>&#x7EC4;&#x5408;&#xFF0C;&#x6839;&#x636E;1~number-1&#x53F0;&#x9636;&#x4E2D;&#xFF0C;&#x843D;&#x811A;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x6765;&#x9009;&#x62E9;&#x7EC4;&#x5408;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">zuhe</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">1</span>;<span class="comment">//&#x5FC5;&#x987B;&#x7528; long long&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x6EA2;&#x51FA;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        {</span><br><span class="line">            res *= (a - i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= b; i++)</span><br><span class="line">        {</span><br><span class="line">            res /= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jumpFloorII</span><span class="params">(<span class="keyword">int</span> number)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number<span class="number">-1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            res += zuhe(number<span class="number">-1</span>, i);</span><br><span class="line">        }</span><br><span class="line">        res++;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x52A8;&#x6001;&#x89C4;&#x5212;">&#x52A8;&#x6001;&#x89C4;&#x5212;</h2><h2 id="&#x6570;&#x5B66;&#x63A8;&#x5BFC;">&#x6570;&#x5B66;&#x63A8;&#x5BFC;</h2><p>&#x8DF3;&#x4E0A; n-1 &#x7EA7;&#x53F0;&#x9636;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE; n-2 &#x7EA7;&#x8DF3; 1 &#x7EA7;&#x4E0A;&#x53BB;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE; n-3 &#x7EA7;&#x8DF3; 2 &#x7EA7;&#x4E0A;&#x53BB;...&#xFF0C;&#x90A3;&#x4E48;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n-1) = f(n-2) + f(n-3) + ... + f(0)</span><br></pre></td></tr></table></figure><p>&#x540C;&#x6837;&#xFF0C;&#x8DF3;&#x4E0A; n &#x7EA7;&#x53F0;&#x9636;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE; n-1 &#x7EA7;&#x8DF3; 1 &#x7EA7;&#x4E0A;&#x53BB;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE; n-2 &#x7EA7;&#x8DF3; 2 &#x7EA7;&#x4E0A;&#x53BB;... &#xFF0C;&#x90A3;&#x4E48;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n) = f(n-1) + f(n-2) + ... + f(0)</span><br></pre></td></tr></table></figure><p>&#x7EFC;&#x4E0A;&#x53EF;&#x5F97;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n) - f(n-1) = f(n-1)</span><br></pre></td></tr></table></figure><p>&#x5373;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n) = 2*f(n-1)</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5; f(n) &#x662F;&#x4E00;&#x4E2A;&#x7B49;&#x6BD4;&#x6570;&#x5217;&#x3002;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">JumpFloorII</span><span class="params">(<span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>) Math.<span class="built_in">pow</span>(<span class="number">2</span>, target - <span class="number">1</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x77E9;&#x5F62;&#x8986;&#x76D6;">&#x77E9;&#x5F62;&#x8986;&#x76D6;</h1><h2 id="&#x7EC4;&#x5408;-2">&#x7EC4;&#x5408;</h2><p>&#x548C;&#x8DF3;&#x683C;&#x5B50;&#x7C7B;&#x4F3C;&#xFF0C;&#x6839;&#x636E;&#x6A2A;&#x7740;&#x7684;&#x7EC4;&#x5408;&#x6765;&#x6C42;&#x3002;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">zuhe</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        {</span><br><span class="line">            res *= (a - i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= b; i++)</span><br><span class="line">        {</span><br><span class="line">            res /= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">rectCover</span><span class="params">(<span class="keyword">int</span> number)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (number == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//&#x548C;&#x8DF3;&#x53F0;&#x9636;&#x7C7B;&#x4F3C;&#xFF1F;</span></span><br><span class="line">        <span class="keyword">int</span> temp = number / <span class="number">2</span>;<span class="comment">//&#x6700;&#x591A;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x6A2A;&#x7740;&#x7684;&#x3002;</span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= temp; i++)</span><br><span class="line">        {</span><br><span class="line">            res += zuhe(number-i, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="fib&#x5E8F;&#x5217;-1">Fib&#x5E8F;&#x5217;</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">RectCover</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">int</span> pre2 = <span class="number">1</span>, pre1 = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= n; i++) {</span><br><span class="line">        result = pre2 + pre1;</span><br><span class="line">        pre2 = pre1;</span><br><span class="line">        pre1 = result;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x8FDB;&#x5236;&#x4E2D;1&#x7684;&#x4E2A;&#x6570;">&#x4E8C;&#x8FDB;&#x5236;&#x4E2D;1&#x7684;&#x4E2A;&#x6570;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span>  <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (n&lt;<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            n = n &amp; <span class="number">0x7FFFFFFF</span>;               <span class="comment">//&#x90E8;&#x5206;&#x7F16;&#x8BD1;&#x5668;&#xFF0C;&#x5BF9;&#x4E8E;&#x590D;&#x6570;&#x7684;&#x53F3;&#x79FB;&#xFF0C;&#x662F;&#x8865;1&#x7684;&#x3002;</span></span><br><span class="line">            res++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (n!=<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            res += (n &amp; <span class="number">1</span>);</span><br><span class="line">            n = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x503C;&#x7684;&#x6574;&#x6570;&#x6B21;&#x65B9;">&#x6570;&#x503C;&#x7684;&#x6574;&#x6570;&#x6B21;&#x65B9;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">Power</span><span class="params">(<span class="keyword">double</span> base, <span class="keyword">int</span> exponent)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">double</span> res=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (exponent&gt;=<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; exponent; i++)</span><br><span class="line">            {</span><br><span class="line">                res *= base;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (exponent &lt; <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            exponent = -exponent;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; exponent; i++)</span><br><span class="line">            {</span><br><span class="line">                res /= base;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x8C03;&#x6574;&#x6570;&#x7EC4;&#x987A;&#x5E8F;&#x4F7F;&#x5947;&#x6570;&#x4F4D;&#x4E8E;&#x5076;&#x6570;&#x524D;&#x9762;">&#x8C03;&#x6574;&#x6570;&#x7EC4;&#x987A;&#x5E8F;&#x4F7F;&#x5947;&#x6570;&#x4F4D;&#x4E8E;&#x5076;&#x6570;&#x524D;&#x9762;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;&#x7C7B;&#x4F3C;&#x4E8E;&#x5192;&#x6CE1;&#x6392;&#x5E8F;">&#x89E3;&#x6CD5;&#x4E00;&#xFF1A;&#x7C7B;&#x4F3C;&#x4E8E;&#x5192;&#x6CE1;&#x6392;&#x5E8F;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">reOrderArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;<span class="built_in">array</span>)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">array</span>.size(); i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="built_in">array</span>.size()<span class="number">-1</span>; j &gt; i; j--)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">array</span>[j<span class="number">-1</span>] % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; <span class="built_in">array</span>[j] % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">                        swap(<span class="built_in">array</span>[j<span class="number">-1</span>], <span class="built_in">array</span>[j]);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;&#x5148;&#x4FDD;&#x5B58;&#x5947;&#x6570;&#x518D;&#x4FDD;&#x5B58;&#x5076;&#x6570;">&#x89E3;&#x6CD5;&#x4E8C;&#xFF1A;&#x5148;&#x4FDD;&#x5B58;&#x5947;&#x6570;&#xFF0C;&#x518D;&#x4FDD;&#x5B58;&#x5076;&#x6570;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">reOrderArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;<span class="built_in">array</span>)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">array</span>.size(); i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i] % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">                    temp.push_back(<span class="built_in">array</span>[i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">array</span>.size(); i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i] % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                    temp.push_back(<span class="built_in">array</span>[i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">array</span> = temp;</span><br><span class="line">        }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x94FE;&#x8868;&#x4E2D;&#x5012;&#x6570;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;">&#x94FE;&#x8868;&#x4E2D;&#x5012;&#x6570;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;</h1><p>&#x5FEB;&#x6162;&#x6307;&#x9488;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class Solution {</span><br><span class="line">public:</span><br><span class="line">    ListNode* FindKthToTail(ListNode* pListHead, unsigned int k) </span><br><span class="line">    {</span><br><span class="line">        //&#x4E24;&#x4E2A;&#x6307;&#x9488;</span><br><span class="line">        ListNode* p1 = pListHead, *p2 = NULL;</span><br><span class="line">        for (int i = 0; i &lt; k; i++)</span><br><span class="line">            if (p1 != NULL)</span><br><span class="line">                p1 = p1-&gt;next;</span><br><span class="line">            else</span><br><span class="line">                return NULL;</span><br><span class="line">        p2 = pListHead;</span><br><span class="line">        while (p1!=NULL)</span><br><span class="line">        {</span><br><span class="line">            p1 = p1-&gt;next;</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        return p2;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x53CD;&#x8F6C;&#x94FE;&#x8868;">&#x53CD;&#x8F6C;&#x94FE;&#x8868;</h1><p>&#x8FD9;&#x91CC;&#xFF0C;pre&#x76F8;&#x5F53;&#x4E8E;&#x8F85;&#x52A9;&#x7528;&#x7684;&#x5934;&#x7ED3;&#x70B9;&#x3002;</p><p>&#x4F7F;&#x7528;&#x5934;&#x63D2;&#x6CD5;&#x53CD;&#x8F6C;&#x94FE;&#x8868;&#x3002;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Solution {</span><br><span class="line">    //&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A;&#x9898;&#x662F;&#x6CA1;&#x6709;&#x94FE;&#x8868;&#x7684;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x3002;&#x5373;&#x662F;&#x6574;&#x4E2A;&#x94FE;&#x8868;&#x90FD;&#x8981;&#x9006;&#x7F6E;&#x3002;</span><br><span class="line">    //&#x5E26;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x94FE;&#x8868;&#xFF0C;&#x5934;&#x7ED3;&#x70B9;&#x5F80;&#x5F80;&#x5B58;&#x50A8;&#x94FE;&#x8868;&#x7684;&#x957F;&#x5EA6;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x4FE1;&#x606F;&#x3002;&#x5E26;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x94FE;&#x8868;&#x9006;&#x7F6E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5934;&#x7ED3;&#x70B9;&#x4E0D;&#x52A8;&#x3002;</span><br><span class="line">public:</span><br><span class="line">    ListNode* ReverseList(ListNode* pHead) </span><br><span class="line">    {</span><br><span class="line">        ListNode *pre = NULL, *next = NULL;</span><br><span class="line">        while (pHead!=NULL)//&#x5934;&#x63D2;&#x6CD5;</span><br><span class="line">        {</span><br><span class="line">            next = pHead-&gt;next;</span><br><span class="line">            pHead-&gt;next = pre;</span><br><span class="line">            pre = pHead;</span><br><span class="line">            pHead = next;</span><br><span class="line">        }</span><br><span class="line">        return pre;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x94FE;&#x8868;">&#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x94FE;&#x8868;</h1><h2 id="&#x975E;&#x9012;&#x5F52;&#x5FAA;&#x73AF;&#x7248;&#x672C;">&#x975E;&#x9012;&#x5F52;&#xFF0C;&#x5FAA;&#x73AF;&#x7248;&#x672C;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        ListNode *res = <span class="literal">NULL</span>, *p = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (pHead1 != <span class="literal">NULL</span> &amp;&amp; pHead2 != <span class="literal">NULL</span>)<span class="comment">//&#x786E;&#x5B9A;&#x5934;</span></span><br><span class="line">            <span class="keyword">if</span> (pHead1-&gt;val &lt; pHead2-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                res = pHead1;</span><br><span class="line">                pHead1 = pHead1-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                res = pHead2;</span><br><span class="line">                pHead2 = pHead2-&gt;next;</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pHead1 != <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = pHead1;</span><br><span class="line">            pHead1 = pHead1-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pHead2 != <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = pHead2;</span><br><span class="line">            pHead2 = pHead2-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        p = res;</span><br><span class="line">        <span class="keyword">while</span> (pHead1!=<span class="literal">NULL</span>&amp;&amp;pHead2!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (pHead1-&gt;val &gt; pHead2-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead2;</span><br><span class="line">                pHead2 = pHead2-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead1;</span><br><span class="line">                pHead1 = pHead1-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (pHead1 != <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next = pHead1;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pHead2 != <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next = pHead2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x9012;&#x5F52;&#x65B9;&#x6CD5;">&#x9012;&#x5F52;&#x65B9;&#x6CD5;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ListNode* <span class="title">Merge2</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (pHead1==<span class="literal">NULL</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> pHead2;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (pHead2==<span class="literal">NULL</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> pHead1;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (pHead1-&gt;val &lt; pHead2-&gt;val)</span><br><span class="line">    {</span><br><span class="line">        pHead1-&gt;next = Merge2(pHead1-&gt;next, pHead2);</span><br><span class="line">        <span class="keyword">return</span> pHead1;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        pHead2-&gt;next = Merge2(pHead1, pHead2-&gt;next);</span><br><span class="line">        <span class="keyword">return</span> pHead2;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x65B9;&#x6CD5;">&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x65B9;&#x6CD5;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="function">ListNode <span class="title">L</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="comment">//&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x7684;&#x5934;&#x7ED3;&#x70B9;</span></span><br><span class="line">        ListNode *p = &amp;L;</span><br><span class="line">        <span class="keyword">if</span> (pHead1 == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> pHead2;</span><br><span class="line">        <span class="keyword">if</span> (pHead2 == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> pHead1;</span><br><span class="line">        <span class="keyword">while</span> (pHead1!=<span class="literal">NULL</span>&amp;&amp;pHead2!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (pHead1-&gt;val &lt;= pHead2-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead1;</span><br><span class="line">                pHead1 = pHead1-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead2;</span><br><span class="line">                pHead2 = pHead2-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (pHead1 == <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next=pHead2;</span><br><span class="line">        <span class="keyword">if</span> (pHead2 == <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next = pHead1;</span><br><span class="line">        <span class="keyword">return</span> L.next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6811;&#x7684;&#x5B50;&#x7ED3;&#x6784;">&#x6811;&#x7684;&#x5B50;&#x7ED3;&#x6784;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">HasSubtree</span><span class="params">(TreeNode* pRoot1, TreeNode* pRoot2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="keyword">bool</span> res = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (pRoot1 == <span class="literal">NULL</span> || pRoot2 == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (pRoot1-&gt;val == pRoot2-&gt;val)</span><br><span class="line">                res = judge(pRoot1, pRoot2);</span><br><span class="line">            <span class="keyword">if</span> (!res)</span><br><span class="line">                res = HasSubtree(pRoot1-&gt;left, pRoot2);<span class="comment">//&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x641C;&#x5DE6;&#x5B50;&#x6811;</span></span><br><span class="line">            <span class="keyword">if</span> (!res)</span><br><span class="line">                res = HasSubtree(pRoot1-&gt;right, pRoot2);<span class="comment">//&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x641C;&#x53F3;&#x5B50;&#x6811;</span></span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">    </span><br><span class="line">        }</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(TreeNode* p1, TreeNode* p2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="keyword">if</span> (p2 == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//T2&#x5DF2;&#x7ECF;&#x904D;&#x5386;&#x5B8C;&#x5E76;&#x4E14;&#x90FD;&#x80FD;&#x5BF9;&#x7684;&#x4E0A;&#xFF0C;&#x8FD4;&#x56DE;true</span></span><br><span class="line">            <span class="keyword">if</span> (p1 == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//T2&#x8FD8;&#x6CA1;&#x6709;&#x904D;&#x5386;&#x5B8C;&#xFF0C;&#x4F46;&#x662F;T1&#x5DF2;&#x7ECF;&#x6CA1;&#x4E86;&#xFF0C;&#x8FD4;&#x56DE;false</span></span><br><span class="line">            <span class="keyword">if</span> (p1-&gt;val != p2-&gt;val)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//&#x503C;&#x5BF9;&#x4E0D;&#x4E0A;&#xFF0C;&#x8FD4;&#x56DE;false&#x3002;</span></span><br><span class="line">            <span class="keyword">return</span> judge(p1-&gt;left, p2-&gt;left) &amp;&amp; judge(p1-&gt;right, p2-&gt;right);</span><br><span class="line">        }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x6D4B;&#x8BD5;&#xFF0C;&#x6211;&#x7684;&#x6784;&#x5EFA;&#x6811;&#x7684;&#x4EE3;&#x7801;&#x4E3A;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">    struct TreeNode {</span><br><span class="line">        int val;</span><br><span class="line">        struct TreeNode *left;</span><br><span class="line">        struct TreeNode *right;</span><br><span class="line">        TreeNode(int x) :</span><br><span class="line">                val(x), left(NULL), right(NULL) {</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">    </span><br><span class="line">    TreeNode* T;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    queue&lt;TreeNode **&gt;q;</span><br><span class="line">    void init(TreeNode*&amp; T)</span><br><span class="line">    {</span><br><span class="line">        int n;</span><br><span class="line">        string temp;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        if (n == 0)</span><br><span class="line">            T = NULL;</span><br><span class="line">        TreeNode **ptr;</span><br><span class="line">        q.push(&amp;T);</span><br><span class="line">        for (int i = 0; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            ptr = q.front();</span><br><span class="line">            q.pop();</span><br><span class="line">            cin &gt;&gt; temp;</span><br><span class="line">            if (temp != &quot;null&quot;)</span><br><span class="line">            {</span><br><span class="line">                TreeNode *node = (TreeNode*)malloc(sizeof(TreeNode));</span><br><span class="line">                node-&gt;val = stoi(temp);</span><br><span class="line">                node-&gt;left = NULL;</span><br><span class="line">                node-&gt;right = NULL;</span><br><span class="line">                *ptr = node;</span><br><span class="line">            }</span><br><span class="line">            q.push(&amp;(*ptr)-&gt;left);</span><br><span class="line">            q.push(&amp;(*ptr)-&gt;right);</span><br><span class="line">        }</span><br><span class="line">        while (!q.empty())</span><br><span class="line">        {</span><br><span class="line">            q.pop();</span><br><span class="line">        }</span><br><span class="line">        return;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x5165;&#x7684;&#x65F6;&#x5019;&#x6309;&#x5C42;&#x8F93;&#x5165;&#xFF0C;&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x662F;&#x6709;bug&#x7684;&#xFF0C;&#x4E0D;&#x80FD;&#x751F;&#x6210;&#x4EFB;&#x610F;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF01;&#x60F3;&#x8981;&#x5B8C;&#x5168;&#x5E8F;&#x5217;&#x5316;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x8BF7;&#x770B;&#x540E;&#x9762;&#x7684;&#x5E8F;&#x5217;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x955C;&#x50CF;">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x955C;&#x50CF;</h1><p>&#x6811;&#x7684;&#x904D;&#x5386;&#xFF0C;&#x9012;&#x5F52;&#x5373;&#x53EF;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Mirror</span><span class="params">(TreeNode *pRoot)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        Mirror(pRoot-&gt;left);</span><br><span class="line">        Mirror(pRoot-&gt;right);</span><br><span class="line">        swap(pRoot-&gt;left, pRoot-&gt;right);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5305;&#x542B;min&#x51FD;&#x6570;&#x7684;&#x6808;">&#x5305;&#x542B;min&#x51FD;&#x6570;&#x7684;&#x6808;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;&#x5F88;&#x632B;&#x7684;&#x89E3;&#x6CD5;">&#x89E3;&#x6CD5;&#x4E00;&#xFF08;&#x5F88;&#x632B;&#x7684;&#x89E3;&#x6CD5;&#xFF09;</h2><p>&#x601D;&#x8DEF;&#xFF1A;&#x5229;&#x7528;Map&#x7684;&#x81EA;&#x52A8;&#x6392;&#x5E8F;&#x7279;&#x6027;&#xFF0C;&#x5F88;&#x632B;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class Solution {</span><br><span class="line">public:</span><br><span class="line">    stack&lt;int&gt; s;</span><br><span class="line">    map&lt;int, int&gt;m;</span><br><span class="line">    //int minn=0x7FFFFFFF;</span><br><span class="line">    void push(int value) </span><br><span class="line">    {</span><br><span class="line">        s.push(value);</span><br><span class="line">        if (!m.count(value))</span><br><span class="line">            m[value] = 1;</span><br><span class="line">        else</span><br><span class="line">            m[value]++;</span><br><span class="line">    }</span><br><span class="line">    void pop()</span><br><span class="line">    {</span><br><span class="line">        int k = s.top();</span><br><span class="line">        s.pop();</span><br><span class="line">        if (--m[k] == 0)</span><br><span class="line">            m.erase(k);</span><br><span class="line">    }</span><br><span class="line">    int top() </span><br><span class="line">    {</span><br><span class="line">        return s.top();</span><br><span class="line">    }</span><br><span class="line">    int min() </span><br><span class="line">    {</span><br><span class="line">        return m.begin()-&gt;first;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x5229;&#x7528;&#x6700;&#x5C0F;&#x5143;&#x7D20;&#x6808;">&#x5229;&#x7528;&#x6700;&#x5C0F;&#x5143;&#x7D20;&#x6808;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">//&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#x3002;&#x5229;&#x7528;&#x8F85;&#x52A9;&#x6808;</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x538B;&#x6808;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;A&#x6808;&#x7684;&#x538B;&#x5165;&#x6BD4;B&#x6808;&#x7684;&#x5927;&#xFF0C; &#x5219;B&#x6808;&#x4E0D;&#x538B;&#xFF0C;&#x5982;&#x679C;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#xFF0C;&#x5219;AB&#x6808;&#x540C;&#x65F6;&#x538B;&#x5165;/</span></span><br><span class="line"><span class="comment">&#x5728;&#x51FA;&#x6808;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;AB&#x6808;&#x9876;&#x5143;&#x7D20;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x5219;A&#x51FA;B&#x4E0D;&#x51FA;&#x3002;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s1, s2;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        s1.push(value);</span><br><span class="line">        <span class="keyword">if</span> (s2.empty())</span><br><span class="line">            s2.push(value);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            t = s2.top();</span><br><span class="line">            <span class="keyword">if</span> (value &lt;= t)</span><br><span class="line">                s2.push(value);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> t1 = s1.top(), t2 = s2.top();</span><br><span class="line">        <span class="keyword">if</span> (t1 == t2)</span><br><span class="line">        {</span><br><span class="line">            s1.pop(); s2.pop();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            s1.pop();</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">return</span> s1.top();</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">return</span> s2.top();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x987A;&#x65F6;&#x9488;&#x6253;&#x5370;&#x77E9;&#x9635;">&#x987A;&#x65F6;&#x9488;&#x6253;&#x5370;&#x77E9;&#x9635;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x4E0D;&#x662F;&#x7279;&#x522B;&#x597D;&#xFF0C;&#x5229;&#x7528;&#x6A21;&#x62DF;&#x6765;&#x505A;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; printMatrix(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; matrix) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, a = <span class="number">0</span>, cnt = <span class="number">0</span>, total = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        total *= matrix.size();</span><br><span class="line">        <span class="keyword">if</span> (total != <span class="number">0</span>)</span><br><span class="line">            total *= matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">while</span> (cnt&lt;total)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (;  j&lt; matrix[i].size()-a; j++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">            j--, i++;</span><br><span class="line">            <span class="keyword">for</span> (; i &lt; matrix.size()-a; i++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">            i--; j--;</span><br><span class="line">            <span class="keyword">for</span> (; j &gt;=a; j--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">            j++; i--; a++;</span><br><span class="line">            <span class="keyword">for</span> ( ; i &gt;a ; i--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;">&#x89E3;&#x6CD5;&#x4E8C;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">/*&#x89E3;&#x9898;&#x601D;&#x8DEF;&#xFF1A;&#x987A;&#x65F6;&#x9488;&#x6253;&#x5370;&#x5C31;&#x662F;&#x6309;&#x5708;&#x6570;&#x5FAA;&#x73AF;&#x6253;&#x5370;&#xFF0C;&#x4E00;&#x5708;&#x5305;&#x542B;&#x4E24;&#x884C;&#x6216;&#x8005;&#x4E24;&#x5217;&#xFF0C;</span></span><br><span class="line"><span class="comment">&#x5728;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x51FA;&#x73B0;&#x67D0;&#x4E00;&#x5708;&#x4E2D;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x884C;&#xFF0C;</span></span><br><span class="line"><span class="comment">&#x8981;&#x5224;&#x65AD;&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x6253;&#x5370;&#x548C;&#x4ECE;&#x53F3;&#x5411;&#x5DE6;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x4F1A;&#x51FA;&#x73B0;&#x91CD;&#x590D;&#x6253;&#x5370;&#xFF0C;</span></span><br><span class="line"><span class="comment">&#x540C;&#x6837;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x5217;&#x65F6;&#xFF0C;&#x8981;&#x5224;&#x65AD;&#x4ECE;&#x4E0A;&#x5411;&#x4E0B;&#x6253;&#x5370;&#x548C;&#x4ECE;&#x4E0B;&#x5411;&#x4E0A;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x4F1A;&#x51FA;&#x73B0;&#x91CD;&#x590D;&#x6253;&#x5370;&#x7684;&#x60C5;&#x51B5;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; printMatrix(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; matrix) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">int</span> row = matrix.size();</span><br><span class="line">        <span class="keyword">if</span> (row == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">int</span> collor = matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">int</span> circle = ((row &lt; collor ? row : collor) - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;<span class="comment">//&#x5708;&#x6570;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; circle; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x6253;&#x5370;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; collor-i; j++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//&#x4ECE;&#x4E0A;&#x5F80;&#x4E0B;&#x7684;&#x6570;&#x636E;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = i+<span class="number">1</span>; k &lt; row- i; k++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[k][collor - <span class="number">1</span> - i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x4F1A;&#x91CD;&#x590D;&#x6253;&#x5370;(&#x4ECE;&#x53F3;&#x5411;&#x5DE6;&#x6253;&#x5370;&#xFF09;</span></span><br><span class="line">            <span class="comment">//row-i-1!=i&#x662F;&#x9632;&#x6B62;&#x67D0;&#x4E00;&#x884C;&#x66FE;&#x7ECF;&#x4ECE;&#x5DE6;</span></span><br><span class="line">            <span class="comment">//&#x5230;&#x53F3;&#x88AB;&#x8F93;&#x51FA;&#xFF0C;&#x53C8;&#x5728;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x65F6;&#x88AB;&#x8F93;&#x51FA;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> m = collor-i<span class="number">-2</span>; (m&gt;=i)&amp;&amp;(row-i<span class="number">-1</span>!=i); m--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[row - i - <span class="number">1</span>][m]);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> n = row-i<span class="number">-2</span>; (n&gt;i)&amp;&amp;(collor-i<span class="number">-1</span>!=i); n--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[n][i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6808;&#x7684;&#x538B;&#x5165;&#x5F39;&#x51FA;&#x5E8F;&#x5217;">&#x6808;&#x7684;&#x538B;&#x5165;&#x3001;&#x5F39;&#x51FA;&#x5E8F;&#x5217;</h1><p>&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x6808;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsPopOrder</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pushV, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; popV)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pushV.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;s; </span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pushV.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            s.push(pushV[i]);</span><br><span class="line">            <span class="keyword">while</span> (!s.empty()&amp;&amp;s.top() == popV[j])</span><br><span class="line">            {</span><br><span class="line">                s.pop();</span><br><span class="line">                j++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> s.empty();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4ECE;&#x4E0A;&#x5F80;&#x4E0B;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;">&#x4ECE;&#x4E0A;&#x5F80;&#x4E0B;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x5C42;&#x6B21;&#x904D;&#x5386;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; PrintFromTopToBottom(TreeNode* root) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">queue</span>&lt;TreeNode*&gt; q;</span><br><span class="line">        TreeNode* p;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> v;</span><br><span class="line">        q.push(root);</span><br><span class="line">        <span class="keyword">while</span> (!q.empty())</span><br><span class="line">        {</span><br><span class="line">            p = q.front(); q.pop();</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                q.push(p-&gt;left);</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                q.push(p-&gt;right);</span><br><span class="line">            v.push_back(p-&gt;val);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x4E2D;&#x548C;&#x4E3A;&#x67D0;&#x4E00;&#x503C;&#x7684;&#x8DEF;&#x5F84;">&#x4E8C;&#x53C9;&#x6811;&#x4E2D;&#x548C;&#x4E3A;&#x67D0;&#x4E00;&#x503C;&#x7684;&#x8DEF;&#x5F84;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode *root,<span class="keyword">int</span> expectNumber)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        temp.push_back(root-&gt;val);</span><br><span class="line">        <span class="keyword">if</span> ((expectNumber == root-&gt;val)&amp;&amp;root-&gt;left == <span class="literal">NULL</span> &amp;&amp; root-&gt;right == <span class="literal">NULL</span>)</span><br><span class="line">            res.push_back(temp);</span><br><span class="line">        <span class="keyword">if</span> (root-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">            dfs(root-&gt;left, (expectNumber - root-&gt;val));</span><br><span class="line">        <span class="keyword">if</span> (root-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">            dfs(root-&gt;right, expectNumber - root-&gt;val);</span><br><span class="line">        temp.pop_back();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; FindPath(TreeNode* root, <span class="keyword">int</span> expectNumber) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;<span class="comment">//&#x8FB9;&#x754C;&#x6761;&#x4EF6;</span></span><br><span class="line">        dfs(root, expectNumber);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x590D;&#x6742;&#x94FE;&#x8868;&#x7684;&#x590D;&#x5236;">&#x590D;&#x6742;&#x94FE;&#x8868;&#x7684;&#x590D;&#x5236;</h1><p>&#x505A;&#x6CD5;&#xFF1A;</p><ol type="1"><li>&#x590D;&#x5236;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5982;&#xFF1A;&#x590D;&#x5236;&#x8282;&#x70B9;A&#x5F97;&#x5230;A1&#xFF0C;&#x5C06;A1&#x63D2;&#x5165;&#x8282;&#x70B9;A&#x540E;&#x9762;</li><li>&#x904D;&#x5386;&#x94FE;&#x8868;&#xFF0C;<code>A1-&gt;random = A-&gt;random-&gt;next;</code>&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x662F;&#x7ED9;&#x590D;&#x5236;&#x8282;&#x70B9;&#x7684;random&#x8D4B;&#x503C;&#xFF0C;&#x6574;&#x4E2A;&#x590D;&#x5236;&#x94FE;&#x8868;&#x91CC;&#xFF0C;&#x4E0D;&#x80FD;&#x51FA;&#x73B0;&#x539F;&#x6765;&#x94FE;&#x8868;&#x7684;&#x8282;&#x70B9;&#x3002;</li><li>&#x5C06;&#x94FE;&#x8868;&#x62C6;&#x5206;&#x6210;&#x539F;&#x94FE;&#x8868;&#x548C;&#x590D;&#x5236;&#x540E;&#x7684;&#x94FE;&#x8868;&#x3002;</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">RandomListNode* <span class="title">Clone</span><span class="params">(RandomListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (!pHead)<span class="comment">//&#x82E5;&#x4E3A;&#x7A7A;,&#x8FD4;&#x56DE;NULL</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        RandomListNode* currNode=pHead,* newNode;<span class="comment">//&#x8868;&#x793A;&#x5F53;&#x524D;&#x7684;&#x8282;&#x70B9;</span></span><br><span class="line">        <span class="keyword">while</span> (currNode!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            newNode= (RandomListNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(RandomListNode));</span><br><span class="line">            <span class="comment">//&#x590D;&#x5236;&#x8282;&#x70B9;&#x4FE1;&#x606F;</span></span><br><span class="line">            newNode-&gt;label = currNode-&gt;label;</span><br><span class="line">            newNode-&gt;next = currNode-&gt;next;</span><br><span class="line">            newNode-&gt;random = currNode-&gt;random;</span><br><span class="line">            <span class="comment">//&#x63D2;&#x5230;&#x540E;&#x9762;</span></span><br><span class="line">            currNode-&gt;next = newNode;</span><br><span class="line">            currNode = newNode-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        currNode = pHead;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//&#x7B2C;&#x4E8C;&#x6B21;&#x904D;&#x5386;</span></span><br><span class="line">        <span class="keyword">while</span> (currNode!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            newNode = currNode-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(currNode-&gt;random!=<span class="literal">NULL</span>)</span><br><span class="line">                newNode-&gt;random = currNode-&gt;random-&gt;next;</span><br><span class="line">            currNode = currNode-&gt;next-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x62C6;&#x5206;</span></span><br><span class="line">        RandomListNode* pCloneHead = pHead-&gt;next,* temp;</span><br><span class="line">        currNode = pHead;</span><br><span class="line">        <span class="keyword">while</span> (currNode-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            temp = currNode-&gt;next;</span><br><span class="line">            currNode-&gt;next = temp-&gt;next;</span><br><span class="line">            currNode = temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pCloneHead;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E0E;&#x53CC;&#x5411;&#x94FE;&#x8868;">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E0E;&#x53CC;&#x5411;&#x94FE;&#x8868;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x5C06;&#x8BE5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x53CC;&#x5411;&#x94FE;&#x8868;&#x3002;&#x8981;&#x6C42;&#x4E0D;&#x80FD;&#x521B;&#x5EFA;&#x4EFB;&#x4F55;&#x65B0;&#x7684;&#x7ED3;&#x70B9;&#xFF0C;&#x53EA;&#x80FD;&#x8C03;&#x6574;&#x6811;&#x4E2D;&#x7ED3;&#x70B9;&#x6307;&#x9488;&#x7684;&#x6307;&#x5411;&#x3002;</p><p>&#x611F;&#x89C9;&#x50CF;&#x662F;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x7EBF;&#x7D22;&#x5316;&#x3002;</p><p>&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E0E;&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;&#x610F;&#x601D;&#x76F8;&#x540C;&#xFF0C;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;/&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#xFF08;Binary Search Tree&#xFF09;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x4E00;&#x68F5;&#x7A7A;&#x6811;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x5177;&#x6709;&#x4E0B;&#x5217;&#x6027;&#x8D28;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#xFF1A;</p><p>&#x82E5;&#x5B83;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x4E0D;&#x7A7A;&#xFF0C;&#x5219;&#x5DE6;&#x5B50;&#x6811;&#x4E0A;&#x6240;&#x6709;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#x5747;&#x5C0F;&#x4E8E;&#x5B83;&#x7684;&#x6839;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#xFF1B;</p><p>&#x82E5;&#x5B83;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x4E0D;&#x7A7A;&#xFF0C;&#x5219;&#x53F3;&#x5B50;&#x6811;&#x4E0A;&#x6240;&#x6709;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#x5747;&#x5927;&#x4E8E;&#x5B83;&#x7684;&#x6839;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#xFF1B;</p><p>&#x5B83;&#x7684;&#x5DE6;&#x3001;&#x53F3;&#x5B50;&#x6811;&#x4E5F;&#x5206;&#x522B;&#x4E3A;&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-1">&#x89E3;&#x6CD5;&#x4E00;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>//&#x5FAA;&#x73AF;&#x5199;&#x6CD5;</span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Convert</span><span class="params">(TreeNode* pRootOfTree)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRootOfTree == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;<span class="comment">//&#x82E5;&#x4E3A;&#x7A7A;&#xFF0C;&#x8FD4;&#x56DE;&#x7A7A;</span></span><br><span class="line">        <span class="built_in">stack</span>&lt;TreeNode*&gt; s;</span><br><span class="line">        TreeNode* p = pRootOfTree, *pre = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">bool</span> isFirst = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (p!=<span class="literal">NULL</span>||!s.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (p!=<span class="literal">NULL</span>)</span><br><span class="line">            {</span><br><span class="line">                s.push(p);</span><br><span class="line">                p = p-&gt;left;</span><br><span class="line">            }</span><br><span class="line">            p = s.top(); s.pop();</span><br><span class="line">            <span class="keyword">if</span> (isFirst)</span><br><span class="line">            {</span><br><span class="line">                pRootOfTree = p;<span class="comment">//&#x5C06;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x8BB0;&#x4E3A;root</span></span><br><span class="line">                pre = pRootOfTree;</span><br><span class="line">                isFirst = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {<span class="comment">//&#x8FDE;&#x63A5;&#x524D;&#x540E;&#x5173;&#x7CFB;</span></span><br><span class="line">                pre-&gt;right = p;</span><br><span class="line">                p-&gt;left = pre;</span><br><span class="line">                pre = p;</span><br><span class="line">            }</span><br><span class="line">            p = p-&gt;right;<span class="comment">//&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#xFF0C;&#x5DE6;&#x4E2D;&#x53F3;&#xFF0C;&#x8FD9;&#x4E2A;&#x5730;&#x65B9;&#x662F;&#x5904;&#x7406;&#x53F3;&#x8FB9;&#x7684;&#x90E8;&#x5206;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pRootOfTree;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-1">&#x89E3;&#x6CD5;&#x4E8C;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Convert</span><span class="params">(TreeNode* pRootOfTree)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRootOfTree == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        TreeNode * pre = <span class="literal">NULL</span>;</span><br><span class="line">        trans(pRootOfTree, pre);</span><br><span class="line">        TreeNode* res = pRootOfTree;</span><br><span class="line">        <span class="keyword">while</span> (res-&gt;left!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = res-&gt;left;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">trans</span><span class="params">(TreeNode * cur, TreeNode *&amp;pre)</span><span class="comment">//&#x7C7B;&#x4F3C;&#x4E8E;&#x6811;&#x7684;&#x5DE6;&#x4E2D;&#x53F3;&#x904D;&#x5386;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (cur == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        trans(cur-&gt;left, pre);</span><br><span class="line">        cur-&gt;left = pre;</span><br><span class="line">        <span class="keyword">if</span> (pre != <span class="literal">NULL</span>)</span><br><span class="line">            pre-&gt;right = cur;</span><br><span class="line">        pre = cur;</span><br><span class="line">        trans(cur-&gt;right, pre);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6392;&#x5217;">&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6392;&#x5217;</h1><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;,&#x6309;&#x5B57;&#x5178;&#x5E8F;&#x6253;&#x5370;&#x51FA;&#x8BE5;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5B57;&#x7B26;&#x7684;&#x6240;&#x6709;&#x6392;&#x5217;&#x3002;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x5B57;&#x7B26;&#x4E32;abc,&#x5219;&#x6253;&#x5370;&#x51FA;&#x7531;&#x5B57;&#x7B26;a,b,c&#x6240;&#x80FD;&#x6392;&#x5217;&#x51FA;&#x6765;&#x7684;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x4E32;abc,acb,bac,bca,cab&#x548C;cba&#x3002;</p><p>&#x8F93;&#x5165;&#x63CF;&#x8FF0;:</p><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;,&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;9(&#x53EF;&#x80FD;&#x6709;&#x5B57;&#x7B26;&#x91CD;&#x590D;),&#x5B57;&#x7B26;&#x53EA;&#x5305;&#x62EC;&#x5927;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; res;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; Permutation(<span class="built_in">string</span> str) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (str != <span class="string">&quot;&quot;</span>)</span><br><span class="line">            dfs(str, <span class="number">0</span>);<span class="comment">//&#x4ECE;0&#x5F00;&#x59CB;DFS</span></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> size = str.size();</span><br><span class="line">        <span class="keyword">if</span> (start == size)<span class="comment">//&#x8FBE;&#x5230;&#x4E86;&#x538B;&#x5165;vector&#x7684;&#x6761;&#x4EF6;</span></span><br><span class="line">        {</span><br><span class="line">            res.push_back(str);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt; size; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (i != start &amp;&amp; str[i] == str[start])</span><br><span class="line">                <span class="keyword">continue</span>;<span class="comment">//&#x9632;&#x6B62;abb&#x8FD9;&#x79CD;&#x4E24;&#x4E2A;&#x4E00;&#x6837;&#x7684;</span></span><br><span class="line">            swap(str[i], str[start]);</span><br><span class="line">            dfs(str, start + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#x7684;&#x6570;&#x5B57;">&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#x7684;&#x6570;&#x5B57;</h1><p>&#x6570;&#x7EC4;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x3002;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;9&#x7684;&#x6570;&#x7EC4;{1,2,3,2,2,2,5,4,2}&#x3002;&#x7531;&#x4E8E;&#x6570;&#x5B57;2&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x4E86;5&#x6B21;&#xFF0C;&#x8D85;&#x8FC7;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x56E0;&#x6B64;&#x8F93;&#x51FA;2&#x3002;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x8F93;&#x51FA;0&#x3002;</p><p>&#x4E0D;&#x80FD;&#x7B80;&#x5355;&#x7684;&#x7528;&#x6392;&#x5E8F;&#xFF0C;&#x56E0;&#x4E3A;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x4E0D;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#xFF0C;&#x8981;&#x8F93;&#x51FA;0.</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O&#xFF08;n&#xFF09;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">MoreThanHalfNum_Solution</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> n = numbers.size();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num = numbers[<span class="number">0</span>], cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == num)</span><br><span class="line">                cnt++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cnt--;</span><br><span class="line">            <span class="keyword">if</span> (cnt == <span class="number">0</span>)<span class="comment">//&#x5982;&#x679C;cnt&#x4E3A;0&#x4E86;&#xFF0C;&#x91CD;&#x65B0;&#x9009;&#x62E9;&#x4E3A;&#x5F53;&#x524D;&#x6570;&#x5B57;&#xFF0C;&#x91CD;&#x65B0;&#x8FDB;&#x884C;&#x8BA1;&#x6570;</span></span><br><span class="line">            {</span><br><span class="line">                num = numbers[i];</span><br><span class="line">                cnt = <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == num)</span><br><span class="line">                cnt++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (cnt * <span class="number">2</span> &gt; n)</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6700;&#x5C0F;&#x7684;k&#x4E2A;&#x6570;">&#x6700;&#x5C0F;&#x7684;K&#x4E2A;&#x6570;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;-2">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x5077;&#x61D2;&#x7684;&#x5199;&#x6CD5;&#xFF08;&#x8FD9;&#x6837;&#x4E5F;&#x80FD;&#x8FC7;&#xFF09;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;O&#xFF08;n*lg n&#xFF09;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; GetLeastNumbers_Solution(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; input, <span class="keyword">int</span> k)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; input.size())</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        res.resize(k);</span><br><span class="line">        sort(input.begin(), input.end());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        {</span><br><span class="line">            res[i] = input[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-2">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x8003;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x7684;&#x601D;&#x60F3;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x8003;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x7684;&#x601D;&#x60F3;</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; GetLeastNumbers_Solution(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; input, <span class="keyword">int</span> k)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; input.size() || k &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        res.resize(k);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>, high = input.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (low &lt; high)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> temp = partition(input, low, high);</span><br><span class="line">            <span class="keyword">if</span> (temp == k)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (high &gt; k)<span class="comment">//&#x5F53;&#x524D;&#x533A;&#x95F4;&#x5927;&#x4E8E;k</span></span><br><span class="line">                high = temp - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                low = temp + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        {</span><br><span class="line">            res[i] = input[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;input, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> cur = input[low], i = low, j = high;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;j)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (j &gt;i &amp;&amp; input[j] &gt;= cur)</span><br><span class="line">                j--;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; j&amp;&amp;input[i] &lt;= cur)</span><br><span class="line">                i++;</span><br><span class="line">            swap(input[i], input[j]);</span><br><span class="line">        }</span><br><span class="line">        swap(input[low], input[i]);</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x8FDE;&#x7EED;&#x5B50;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5927;&#x548C;">&#x8FDE;&#x7EED;&#x5B50;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5927;&#x548C;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>HZ&#x5076;&#x5C14;&#x4F1A;&#x62FF;&#x4E9B;&#x4E13;&#x4E1A;&#x95EE;&#x9898;&#x6765;&#x5FFD;&#x60A0;&#x90A3;&#x4E9B;&#x975E;&#x8BA1;&#x7B97;&#x673A;&#x4E13;&#x4E1A;&#x7684;&#x540C;&#x5B66;&#x3002;&#x4ECA;&#x5929;&#x6D4B;&#x8BD5;&#x7EC4;&#x5F00;&#x5B8C;&#x4F1A;&#x540E;,&#x4ED6;&#x53C8;&#x53D1;&#x8BDD;&#x4E86;:&#x5728;&#x53E4;&#x8001;&#x7684;&#x4E00;&#x7EF4;&#x6A21;&#x5F0F;&#x8BC6;&#x522B;&#x4E2D;,&#x5E38;&#x5E38;&#x9700;&#x8981;&#x8BA1;&#x7B97;&#x8FDE;&#x7EED;&#x5B50;&#x5411;&#x91CF;&#x7684;&#x6700;&#x5927;&#x548C;,&#x5F53;&#x5411;&#x91CF;&#x5168;&#x4E3A;&#x6B63;&#x6570;&#x7684;&#x65F6;&#x5019;,&#x95EE;&#x9898;&#x5F88;&#x597D;&#x89E3;&#x51B3;&#x3002;&#x4F46;&#x662F;,&#x5982;&#x679C;&#x5411;&#x91CF;&#x4E2D;&#x5305;&#x542B;&#x8D1F;&#x6570;,&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x5305;&#x542B;&#x67D0;&#x4E2A;&#x8D1F;&#x6570;,&#x5E76;&#x671F;&#x671B;&#x65C1;&#x8FB9;&#x7684;&#x6B63;&#x6570;&#x4F1A;&#x5F25;&#x8865;&#x5B83;&#x5462;&#xFF1F;&#x4F8B;&#x5982;:{6,-3,-2,7,-15,1,2,2},&#x8FDE;&#x7EED;&#x5B50;&#x5411;&#x91CF;&#x7684;&#x6700;&#x5927;&#x548C;&#x4E3A;8(&#x4ECE;&#x7B2C;0&#x4E2A;&#x5F00;&#x59CB;,&#x5230;&#x7B2C;3&#x4E2A;&#x4E3A;&#x6B62;)&#x3002;&#x7ED9;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x8FD4;&#x56DE;&#x5B83;&#x7684;&#x6700;&#x5927;&#x8FDE;&#x7EED;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x548C;&#xFF0C;&#x4F60;&#x4F1A;&#x4E0D;&#x4F1A;&#x88AB;&#x4ED6;&#x5FFD;&#x60A0;&#x4F4F;&#xFF1F;(&#x5B50;&#x5411;&#x91CF;&#x7684;&#x957F;&#x5EA6;&#x81F3;&#x5C11;&#x662F;1)</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;O&#xFF08;n&#xFF09;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class Solution </span><br><span class="line">{</span><br><span class="line">public:</span><br><span class="line">    int FindGreatestSumOfSubArray(vector&lt;int&gt; array) </span><br><span class="line">    {</span><br><span class="line">        int start, end, maxsum = 0xFFFFFFFF, tempsum = 0xFFFFFFFF, n = array.size(), tempstart;</span><br><span class="line">        if (n==0)</span><br><span class="line">            return 0;</span><br><span class="line">        </span><br><span class="line">        for (int i = 0; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            if (tempsum &lt; 0)</span><br><span class="line">            {</span><br><span class="line">                tempsum = array[i];</span><br><span class="line">                tempstart = i;</span><br><span class="line">            }</span><br><span class="line">            else</span><br><span class="line">                tempsum+= array[i];</span><br><span class="line">            if (tempsum &gt; maxsum)</span><br><span class="line">            {</span><br><span class="line">                maxsum = tempsum;</span><br><span class="line">                start = tempstart;</span><br><span class="line">                end = i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        return maxsum;</span><br><span class="line">    </span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x4ECE;1&#x5230;n&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;">&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF08;&#x4ECE;1&#x5230;n&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF09;</h1><p>&#x6C42;&#x51FA;1~13&#x7684;&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;,&#x5E76;&#x7B97;&#x51FA;100~1300&#x7684;&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF1F;&#x4E3A;&#x6B64;&#x4ED6;&#x7279;&#x522B;&#x6570;&#x4E86;&#x4E00;&#x4E0B;1~13&#x4E2D;&#x5305;&#x542B;1&#x7684;&#x6570;&#x5B57;&#x6709;1&#x3001;10&#x3001;11&#x3001;12&#x3001;13&#x56E0;&#x6B64;&#x5171;&#x51FA;&#x73B0;6&#x6B21;,&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x540E;&#x9762;&#x95EE;&#x9898;&#x4ED6;&#x5C31;&#x6CA1;&#x8F99;&#x4E86;&#x3002;ACMer&#x5E0C;&#x671B;&#x4F60;&#x4EEC;&#x5E2E;&#x5E2E;&#x4ED6;,&#x5E76;&#x628A;&#x95EE;&#x9898;&#x66F4;&#x52A0;&#x666E;&#x904D;&#x5316;,&#x53EF;&#x4EE5;&#x5F88;&#x5FEB;&#x7684;&#x6C42;&#x51FA;&#x4EFB;&#x610F;&#x975E;&#x8D1F;&#x6574;&#x6570;&#x533A;&#x95F4;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF08;&#x4ECE;1 &#x5230; n &#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF09;&#x3002;</p><p>&#x601D;&#x8DEF;&#x5206;&#x6790;&#xFF1A;</p><p>&#x8BBE;N = abcde ,&#x5176;&#x4E2D;abcde&#x5206;&#x522B;&#x4E3A;&#x5341;&#x8FDB;&#x5236;&#x4E2D;&#x5404;&#x4F4D;&#x4E0A;&#x7684;&#x6570;&#x5B57;&#x3002; &#x5982;&#x679C;&#x8981;&#x8BA1;&#x7B97;&#x767E;&#x4F4D;&#x4E0A;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x5B83;&#x8981;&#x53D7;&#x5230;3&#x65B9;&#x9762;&#x7684;&#x5F71;&#x54CD;&#xFF1A;&#x767E;&#x4F4D;&#x4E0A;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x767E;&#x4F4D;&#x4EE5;&#x4E0B;&#xFF08;&#x4F4E;&#x4F4D;&#xFF09;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x767E;&#x4F4D;&#x4EE5;&#x4E0A;&#xFF08;&#x9AD8;&#x4F4D;&#xFF09;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x2460; &#x5982;&#x679C;&#x767E;&#x4F4D;&#x4E0A;&#x6570;&#x5B57;&#x4E3A;0&#xFF0C;&#x767E;&#x4F4D;&#x4E0A;&#x53EF;&#x80FD;&#x51FA;&#x73B0;1&#x7684;&#x6B21;&#x6570;&#x7531;&#x66F4;&#x9AD8;&#x4F4D;&#x51B3;&#x5B9A;&#x3002;&#x6BD4;&#x5982;&#xFF1A;12013&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x53EF;&#x80FD;&#x662F;&#xFF1A;100~199&#xFF0C;1100~1199,2100~2199&#xFF0C;&#xFF0C;...&#xFF0C;11100~11199&#xFF0C;&#x4E00;&#x5171;1200&#x4E2A;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x662F;&#x7531;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;&#xFF08;12&#xFF09;&#x51B3;&#x5B9A;&#xFF0C;&#x5E76;&#x4E14;&#x7B49;&#x4E8E;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;&#xFF08;12&#xFF09;&#x4E58;&#x4EE5; &#x5F53;&#x524D;&#x4F4D;&#x6570;&#xFF08;100&#xFF09;&#x3002;</p><p>&#x2461; &#x5982;&#x679C;&#x767E;&#x4F4D;&#x4E0A;&#x6570;&#x5B57;&#x4E3A;1&#xFF0C;&#x767E;&#x4F4D;&#x4E0A;&#x53EF;&#x80FD;&#x51FA;&#x73B0;1&#x7684;&#x6B21;&#x6570;&#x4E0D;&#x4EC5;&#x53D7;&#x66F4;&#x9AD8;&#x4F4D;&#x5F71;&#x54CD;&#x8FD8;&#x53D7;&#x4F4E;&#x4F4D;&#x5F71;&#x54CD;&#x3002;&#x6BD4;&#x5982;&#xFF1A;12113&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x767E;&#x4F4D;&#x53D7;&#x9AD8;&#x4F4D;&#x5F71;&#x54CD;&#x51FA;&#x73B0;&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;100~199&#xFF0C;1100~1199,2100~2199&#xFF0C;&#xFF0C;....&#xFF0C;11100~11199&#xFF0C;&#x4E00;&#x5171;1200&#x4E2A;&#x3002;&#x548C;&#x4E0A;&#x9762;&#x60C5;&#x51B5;&#x4E00;&#x6837;&#xFF0C;&#x5E76;&#x4E14;&#x7B49;&#x4E8E;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;&#xFF08;12&#xFF09;&#x4E58;&#x4EE5; &#x5F53;&#x524D;&#x4F4D;&#x6570;&#xFF08;100&#xFF09;&#x3002;&#x4F46;&#x540C;&#x65F6;&#x5B83;&#x8FD8;&#x53D7;&#x4F4E;&#x4F4D;&#x5F71;&#x54CD;&#xFF0C;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;12100~12113,&#x4E00;&#x5171;114&#x4E2A;&#xFF0C;&#x7B49;&#x4E8E;&#x4F4E;&#x4F4D;&#x6570;&#x5B57;&#xFF08;113&#xFF09;+1&#x3002;</p><p>&#x2462; &#x5982;&#x679C;&#x767E;&#x4F4D;&#x4E0A;&#x6570;&#x5B57;&#x5927;&#x4E8E;1&#xFF08;2~9&#xFF09;&#xFF0C;&#x5219;&#x767E;&#x4F4D;&#x4E0A;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x4EC5;&#x7531;&#x66F4;&#x9AD8;&#x4F4D;&#x51B3;&#x5B9A;&#xFF0C;&#x6BD4;&#x5982;12213&#xFF0C;&#x5219;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;100~199,1100~1199&#xFF0C;2100~2199&#xFF0C;...&#xFF0C;11100~11199,12100~12199,&#x4E00;&#x5171;&#x6709;1300&#x4E2A;&#xFF0C;&#x5E76;&#x4E14;&#x7B49;&#x4E8E;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;+1&#xFF08;12+1&#xFF09;&#x4E58;&#x4EE5;&#x5F53;&#x524D;&#x4F4D;&#x6570;&#xFF08;100&#xFF09;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">NumberOf1Between1AndN_Solution</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i*=<span class="number">10</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> a = n / i;</span><br><span class="line">            <span class="keyword">int</span> b = n % i;</span><br><span class="line">            cnt += (a + <span class="number">8</span>) / <span class="number">10</span> * i;</span><br><span class="line">            <span class="keyword">if</span> (a % <span class="number">10</span> == <span class="number">1</span>)</span><br><span class="line">                cnt += (b + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x628A;&#x6570;&#x7EC4;&#x6392;&#x6210;&#x6700;&#x5C0F;&#x7684;&#x6570;">&#x628A;&#x6570;&#x7EC4;&#x6392;&#x6210;&#x6700;&#x5C0F;&#x7684;&#x6570;</h1><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x6570;&#x7EC4;&#xFF0C;&#x628A;&#x6570;&#x7EC4;&#x91CC;&#x6240;&#x6709;&#x6570;&#x5B57;&#x62FC;&#x63A5;&#x8D77;&#x6765;&#x6392;&#x6210;&#x4E00;&#x4E2A;&#x6570;&#xFF0C;&#x6253;&#x5370;&#x80FD;&#x62FC;&#x63A5;&#x51FA;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x4E2D;&#x6700;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;&#x3002;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x6570;&#x7EC4;{3&#xFF0C;32&#xFF0C;321}&#xFF0C;&#x5219;&#x6253;&#x5370;&#x51FA;&#x8FD9;&#x4E09;&#x4E2A;&#x6570;&#x5B57;&#x80FD;&#x6392;&#x6210;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x5B57;&#x4E3A;321323&#x3002;</p><p>&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x6BD4;&#x8F83;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32; S1 &#x548C; S2 &#x7684;&#x5927;&#x5C0F;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x6BD4;&#x8F83;&#x7684;&#x662F; S1+S2 &#x548C; S2+S1 &#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5982;&#x679C; S1+S2 &lt; S2+S1&#xFF0C;&#x90A3;&#x4E48;&#x5E94;&#x8BE5;&#x628A; S1 &#x6392;&#x5728;&#x524D;&#x9762;&#xFF0C;&#x5426;&#x5219;&#x5E94;&#x8BE5;&#x628A; S2 &#x6392;&#x5728;&#x524D;&#x9762;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">string</span> s1 = to_string(a), s2 = to_string(b);</span><br><span class="line">        <span class="built_in">string</span> s3 = s1 + s2, s4 = s2 + s1;</span><br><span class="line">        <span class="keyword">if</span> (s3 &lt; s4)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">PrintMinNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (numbers.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        sort(numbers.begin(), numbers.end(),cmp);</span><br><span class="line">        <span class="built_in">string</span> res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i = numbers.begin(); i != numbers.end(); i++)</span><br><span class="line">        {</span><br><span class="line">            res += to_string(*i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E11;&#x6570;">&#x4E11;&#x6570;</h1><p>&#x628A;&#x53EA;&#x5305;&#x542B;&#x8D28;&#x56E0;&#x5B50;2&#x3001;3&#x548C;5&#x7684;&#x6570;&#x79F0;&#x4F5C;&#x4E11;&#x6570;&#xFF08;Ugly Number&#xFF09;&#x3002;&#x4F8B;&#x5982;6&#x3001;8&#x90FD;&#x662F;&#x4E11;&#x6570;&#xFF0C;&#x4F46;14&#x4E0D;&#x662F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5305;&#x542B;&#x8D28;&#x56E0;&#x5B50;7&#x3002; &#x4E60;&#x60EF;&#x4E0A;&#x6211;&#x4EEC;&#x628A;1&#x5F53;&#x505A;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x4E11;&#x6570;&#x3002;&#x6C42;&#x6309;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x987A;&#x5E8F;&#x7684;&#x7B2C;N&#x4E2A;&#x4E11;&#x6570;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetUglyNumber_Solution</span><span class="params">(<span class="keyword">int</span> index)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">7</span>)</span><br><span class="line">            <span class="keyword">return</span> index;</span><br><span class="line">        <span class="keyword">int</span> p2 = <span class="number">0</span>, p3 = <span class="number">0</span>, p5 = <span class="number">0</span>, num = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">        res.push_back(num);</span><br><span class="line">        <span class="keyword">while</span> (res.size()&lt;index)</span><br><span class="line">        {</span><br><span class="line">            num = min(res[p2] * <span class="number">2</span>, min(res[p3] * <span class="number">3</span>, res[p5] * <span class="number">5</span>));</span><br><span class="line">            <span class="keyword">if</span> (res[p2] * <span class="number">2</span> == num)</span><br><span class="line">                p2++;</span><br><span class="line">            <span class="keyword">if</span> (res[p3] * <span class="number">3</span> == num)</span><br><span class="line">                p3++;</span><br><span class="line">            <span class="keyword">if</span> (res[p5] * <span class="number">5</span> == num)<span class="comment">//&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x91CD;&#x590D;&#xFF0C;&#x8FD9;&#x91CC;&#x5FC5;&#x987B;&#x662F;&#x4E09;&#x4E2A;if</span></span><br><span class="line">                p5++;</span><br><span class="line">            res.push_back(num);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;">&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5728;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;(0&lt;=&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&lt;=10000&#xFF0C;&#x5168;&#x90E8;&#x7531;&#x5B57;&#x6BCD;&#x7EC4;&#x6210;)&#x4E2D;&#x627E;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;,&#x5E76;&#x8FD4;&#x56DE;&#x5B83;&#x7684;&#x4F4D;&#x7F6E;, &#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x8FD4;&#x56DE; -1&#xFF08;&#x9700;&#x8981;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#xFF09;.</p><p>&#x4E24;&#x6B21;&#x904D;&#x5386;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">FirstNotRepeatingChar</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">256</span>] = { <span class="number">0</span> };</span><br><span class="line">        <span class="keyword">int</span> n = str.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            s[str[i]]++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (s[str[i]] == <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7ED3;&#x70B9;">&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;&#x627E;&#x51FA;&#x5B83;&#x4EEC;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7ED3;&#x70B9;&#x3002;</p><p>&#x4E24;&#x6B21;&#x904D;&#x5386;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">FindFirstCommonNode</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        ListNode* p1 = pHead1;</span><br><span class="line">        ListNode* p2 = pHead2;</span><br><span class="line">        <span class="keyword">if</span> (p1 == <span class="literal">NULL</span> || p2 == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (p1!=p2)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (p1 == <span class="literal">NULL</span>)</span><br><span class="line">                p1 = pHead2;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p1 = p1-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (p2 == <span class="literal">NULL</span>)</span><br><span class="line">                p2 = pHead1;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p2 = p2-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> p2;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x5B57;&#x5728;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;">&#x6570;&#x5B57;&#x5728;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7EDF;&#x8BA1;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5728;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x3002;</p><p>&#x4E8C;&#x5206;&#x6CD5;&#x67E5;&#x627E;&#xFF0C;&#x56E0;&#x4E3A;&#x6570;&#x7EC4;&#x4E2D;&#x90FD;&#x662F;&#x6574;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x641C;&#x7D22;num-0.5&#x548C;num+0.5&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetNumberOfK</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data, <span class="keyword">int</span> k)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">double</span> temp1 = k - <span class="number">0.5</span>, temp2 = k + <span class="number">0.5</span>;</span><br><span class="line">        <span class="keyword">int</span> res = binSearch(data, temp2) - binSearch(data, temp1);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">binSearch</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data, <span class="keyword">double</span> num)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>, end = data.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mid;</span><br><span class="line">        <span class="keyword">while</span> (start&lt;=end)</span><br><span class="line">        {</span><br><span class="line">            mid = (end - start) / <span class="number">2</span> + start;</span><br><span class="line">            <span class="keyword">if</span> (data[mid] &lt; num)</span><br><span class="line">                start = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (data[mid] &gt; num)</span><br><span class="line">                end = mid - <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> start;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x6C42;&#x8BE5;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x3002;&#x4ECE;&#x6839;&#x7ED3;&#x70B9;&#x5230;&#x53F6;&#x7ED3;&#x70B9;&#x4F9D;&#x6B21;&#x7ECF;&#x8FC7;&#x7684;&#x7ED3;&#x70B9;&#xFF08;&#x542B;&#x6839;&#x3001;&#x53F6;&#x7ED3;&#x70B9;&#xFF09;&#x5F62;&#x6210;&#x6811;&#x7684;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#xFF0C;&#x6700;&#x957F;&#x8DEF;&#x5F84;&#x7684;&#x957F;&#x5EA6;&#x4E3A;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x3002;</p><p>&#x7ECF;&#x5178;&#x7684;&#x9012;&#x5F52;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max(TreeDepth(pRoot-&gt;left) + <span class="number">1</span>, TreeDepth(pRoot-&gt;right) + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;">&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5224;&#x65AD;&#x8BE5;&#x4E8C;&#x53C9;&#x6811;&#x662F;&#x5426;&#x662F;&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><p>&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF08;Self-balancing binary search tree&#xFF09;&#x53C8;&#x88AB;&#x79F0;&#x4E3A;AVL&#x6811;&#xFF08;&#x6709;&#x522B;&#x4E8E;AVL&#x7B97;&#x6CD5;&#xFF09;&#xFF0C;&#x4E14;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x6027;&#x8D28;&#xFF1A;&#x5B83;&#x662F;&#x4E00;&#x68F5;&#x7A7A;&#x6811;&#x6216;&#x5B83;&#x7684;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x5B50;&#x6811;&#x7684;&#x9AD8;&#x5EA6;&#x5DEE;&#x7684;&#x7EDD;&#x5BF9;&#x503C;&#x4E0D;&#x8D85;&#x8FC7;1&#xFF0C;&#x5E76;&#x4E14;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x5B50;&#x6811;&#x90FD;&#x662F;&#x4E00;&#x68F5;&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x7248;&#x4EE3;&#x7801;&#xFF08;&#x80FD;AC&#xFF0C;&#x6CA1;&#x6709;&#x526A;&#x679D;&#xFF0C;&#x501F;&#x7528;&#x4E0A;&#x4E00;&#x9898;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsBalanced_Solution</span><span class="params">(TreeNode* pRoot)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (IsBalanced_Solution(pRoot-&gt;left) == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (IsBalanced_Solution(pRoot-&gt;right) == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> leftDepth = TreeDepth(pRoot-&gt;left);</span><br><span class="line">        <span class="keyword">int</span> rightDepth = TreeDepth(pRoot-&gt;right);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(leftDepth - rightDepth) &gt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max(TreeDepth(pRoot-&gt;left) + <span class="number">1</span>, TreeDepth(pRoot-&gt;right) + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x7B2C;&#x4E8C;&#x7248;&#x4EE3;&#x7801;&#xFF0C;&#x6709;&#x526A;&#x679D;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsBalanced_Solution</span><span class="params">(TreeNode* pRoot)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (TreeDepth(pRoot) == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> leftDepth = TreeDepth(pRoot-&gt;left);</span><br><span class="line">        <span class="keyword">if</span> (leftDepth == <span class="number">-1</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> rightDepth = TreeDepth(pRoot-&gt;right);</span><br><span class="line">        <span class="keyword">if</span> (rightDepth == <span class="number">-1</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(rightDepth - leftDepth) &gt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max(rightDepth, leftDepth) + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x7EC4;&#x4E2D;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;">&#x6570;&#x7EC4;&#x4E2D;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x4E00;&#x4E2A;&#x6574;&#x578B;&#x6570;&#x7EC4;&#x91CC;&#x9664;&#x4E86;&#x4E24;&#x4E2A;&#x6570;&#x5B57;&#x4E4B;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#x3002;&#x8BF7;&#x5199;&#x7A0B;&#x5E8F;&#x627E;&#x51FA;&#x8FD9;&#x4E24;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x9898;&#x6539;&#x6210;&#xFF0C;&#x4E00;&#x4E2A;&#x6574;&#x5F62;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x6B21;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5F02;&#x6216;&#x6765;&#x505A;&#xFF0C;&#x628A;&#x8FD9;&#x4E2A;&#x6570;&#x7EC4;&#x91CC;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x5F02;&#x6216;&#x3002;</p><p>&#x539F;&#x56E0;&#x662F;&#xFF0C;&#x76F8;&#x540C;&#x7684;&#x6570;&#x5F02;&#x6216;&#x7ED3;&#x679C;&#x4E3A;0&#x3002;</p><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x8003;&#x8651;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7248;&#x672C;&#xFF1A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x91CC;&#x9664;&#x4E86;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x4E4B;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#x3002;&#x8BF7;&#x5199;&#x7A0B;&#x5E8F;&#x627E;&#x51FA;&#x8FD9;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x7684;&#x7A81;&#x7834;&#x53E3;&#x5728;&#x54EA;&#x91CC;&#xFF1F;&#x9898;&#x76EE;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5F3A;&#x8C03;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x51FA;&#x73B0;&#x4E24;&#x6B21;&#xFF1F;&#x6211;&#x4EEC;&#x60F3;&#x5230;&#x4E86;&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#x7684;&#x6027;&#x8D28;&#xFF1A;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5F02;&#x6216;&#x5B83;&#x81EA;&#x5DF1;&#x90FD;&#x7B49;&#x4E8E;0 &#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4ECE;&#x5934;&#x5230;&#x5C3E;&#x4F9D;&#x6B21;&#x5F02;&#x6216;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x90A3;&#x4E48;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#x521A;&#x597D;&#x662F;&#x90A3;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x56E0;&#x4E3A;&#x90A3;&#x4E9B;&#x51FA;&#x73B0;&#x4E24;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x5168;&#x90E8;&#x5728;&#x5F02;&#x6216;&#x4E2D;&#x62B5;&#x6D88;&#x6389;&#x4E86;&#x3002;</p><p>&#x6709;&#x4E86;&#x4E0A;&#x9762;&#x7B80;&#x5355;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x56DE;&#x5230;&#x539F;&#x59CB;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5982;&#x679C;&#x80FD;&#x591F;&#x628A;&#x539F;&#x6570;&#x7EC4;&#x5206;&#x4E3A;&#x4E24;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x3002;&#x5728;&#x6BCF;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x800C;&#x5176;&#x5B83;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E24;&#x6B21;&#x3002;&#x5982;&#x679C;&#x80FD;&#x591F;&#x8FD9;&#x6837;&#x62C6;&#x5206;&#x539F;&#x6570;&#x7EC4;&#xFF0C;&#x6309;&#x7167;&#x524D;&#x9762;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x5206;&#x522B;&#x6C42;&#x51FA;&#x8FD9;&#x4E24;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x4E86;&#x3002;</p><p>&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x4ECE;&#x5934;&#x5230;&#x5C3E;&#x4F9D;&#x6B21;&#x5F02;&#x6216;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x90A3;&#x4E48;&#x6700;&#x7EC8;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x4E24;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x7684;&#x5F02;&#x6216;&#x7ED3;&#x679C;&#x3002;&#x56E0;&#x4E3A;&#x5176;&#x5B83;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#xFF0C;&#x5728;&#x5F02;&#x6216;&#x4E2D;&#x5168;&#x90E8;&#x62B5;&#x6D88;&#x6389;&#x4E86;&#x3002;&#x7531;&#x4E8E;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x5B57;&#x80AF;&#x5B9A;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x5F02;&#x6216;&#x7ED3;&#x679C;&#x80AF;&#x5B9A;&#x4E0D;&#x4E3A;0 &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5728;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x6570;&#x5B57;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x4E2D;&#x81F3;&#x5C11;&#x5C31;&#x6709;&#x4E00;&#x4F4D;&#x4E3A;1 &#x3002;&#x6211;&#x4EEC;&#x5728;&#x7ED3;&#x679C;&#x6570;&#x5B57;&#x4E2D;&#x627E;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x4E3A;1 &#x7684;&#x4F4D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x8BB0;&#x4E3A;&#x7B2C;N &#x4F4D;&#x3002;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x4EE5;&#x7B2C;N &#x4F4D;&#x662F;&#x4E0D;&#x662F;1 &#x4E3A;&#x6807;&#x51C6;&#x628A;&#x539F;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6570;&#x5B57;&#x5206;&#x6210;&#x4E24;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x4E2D;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x7B2C;N &#x4F4D;&#x90FD;&#x4E3A;1 &#xFF0C;&#x800C;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x7B2C;N &#x4F4D;&#x90FD;&#x4E3A;0 &#x3002;</p><p>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x628A;&#x539F;&#x6570;&#x7EC4;&#x5206;&#x6210;&#x4E86;&#x4E24;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x90FD;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x800C;&#x5176;&#x5B83;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#x3002;&#x56E0;&#x6B64;&#x5230;&#x6B64;&#x4E3A;&#x6B62;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x95EE;&#x9898;&#x6211;&#x4EEC;&#x90FD;&#x5DF2;&#x7ECF;&#x89E3;&#x51B3;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">FindNumsAppearOnce</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data, <span class="keyword">int</span>* num1, <span class="keyword">int</span> *num2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (data.size() &lt; <span class="number">2</span>)<span class="comment">//&#x5F02;&#x5E38;&#x60C5;&#x51B5;</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>,n=data.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="comment">//&#x6240;&#x6709;&#x7684;&#x6570;&#xFF0C;&#x5168;&#x90E8;&#x76F8;&#x4E92;&#x5F02;&#x6216;</span></span><br><span class="line">        {</span><br><span class="line">            temp = temp ^ data[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//&#x5F02;&#x5E38;&#x60C5;&#x51B5;&#x3002;</span></span><br><span class="line">        <span class="keyword">int</span> first = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((temp&amp;<span class="number">1</span>)==<span class="number">0</span>)<span class="comment">//&#x627E;&#x51FA;&#x7B2C;&#x4E00;&#x4F4D;&#xFF0C;&#x6570;&#x503C;&#x4E0D;&#x4E3A;0&#x7684;</span></span><br><span class="line">        {</span><br><span class="line">            temp = temp &gt;&gt; <span class="number">1</span>;<span class="comment">//&#x53F3;&#x79FB;&#x4E00;&#x4F4D;</span></span><br><span class="line">            first++;</span><br><span class="line">        }</span><br><span class="line">        *num1 = <span class="number">0</span>; *num2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (isBit(data[i], first))</span><br><span class="line">                *num1 = *num1^data[i];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                *num2 = *num2^data[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5224;&#x65AD;&#x67D0;&#x4E00;&#x4F4D;&#x662F;&#x4E0D;&#x662F;1&#x7684;&#x51FD;&#x6570;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isBit</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        num = num &gt;&gt; index;</span><br><span class="line">        <span class="keyword">return</span> (num &amp; <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x548C;&#x4E3A;s&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;">&#x548C;&#x4E3A;S&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5C0F;&#x660E;&#x5F88;&#x559C;&#x6B22;&#x6570;&#x5B66;,&#x6709;&#x4E00;&#x5929;&#x4ED6;&#x5728;&#x505A;&#x6570;&#x5B66;&#x4F5C;&#x4E1A;&#x65F6;,&#x8981;&#x6C42;&#x8BA1;&#x7B97;&#x51FA;9~16&#x7684;&#x548C;,&#x4ED6;&#x9A6C;&#x4E0A;&#x5C31;&#x5199;&#x51FA;&#x4E86;&#x6B63;&#x786E;&#x7B54;&#x6848;&#x662F;100&#x3002;&#x4F46;&#x662F;&#x4ED6;&#x5E76;&#x4E0D;&#x6EE1;&#x8DB3;&#x4E8E;&#x6B64;,&#x4ED6;&#x5728;&#x60F3;&#x7A76;&#x7ADF;&#x6709;&#x591A;&#x5C11;&#x79CD;&#x8FDE;&#x7EED;&#x7684;&#x6B63;&#x6570;&#x5E8F;&#x5217;&#x7684;&#x548C;&#x4E3A;100(&#x81F3;&#x5C11;&#x5305;&#x62EC;&#x4E24;&#x4E2A;&#x6570;)&#x3002;&#x6CA1;&#x591A;&#x4E45;,&#x4ED6;&#x5C31;&#x5F97;&#x5230;&#x53E6;&#x4E00;&#x7EC4;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x548C;&#x4E3A;100&#x7684;&#x5E8F;&#x5217;:18,19,20,21,22&#x3002;&#x73B0;&#x5728;&#x628A;&#x95EE;&#x9898;&#x4EA4;&#x7ED9;&#x4F60;,&#x4F60;&#x80FD;&#x4E0D;&#x80FD;&#x4E5F;&#x5F88;&#x5FEB;&#x7684;&#x627E;&#x51FA;&#x6240;&#x6709;&#x548C;&#x4E3A;S&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;? Good Luck!</p><p>&#x8F93;&#x51FA;&#x63CF;&#x8FF0;:</p><p>&#x8F93;&#x51FA;&#x6240;&#x6709;&#x548C;&#x4E3A;S&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;&#x3002;&#x5E8F;&#x5217;&#x5185;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x81F3;&#x5927;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x5E8F;&#x5217;&#x95F4;&#x6309;&#x7167;&#x5F00;&#x59CB;&#x6570;&#x5B57;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x987A;&#x5E8F;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9898;&#x4E0E; &#x548C;&#x4E3A;S&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x5B57; &#x7C7B;&#x4F3C;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;</p><p>&#x65B9;&#x6CD5;&#x662F;&#x7528;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x53BB;&#x505A;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; FindContinuousSequence(<span class="keyword">int</span> sum)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">1</span>, end = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> cur;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="keyword">while</span> (start &lt; end)</span><br><span class="line">        {</span><br><span class="line">            cur = (start + end)*(end - start + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (cur &gt; sum)</span><br><span class="line">                start++;</span><br><span class="line">            <span class="keyword">if</span> (cur &lt; sum)</span><br><span class="line">                end++;</span><br><span class="line">            <span class="keyword">if</span> (cur == sum)</span><br><span class="line">            {</span><br><span class="line">                temp.clear();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= end; i++)</span><br><span class="line">                {</span><br><span class="line">                    temp.push_back(i);</span><br><span class="line">                }</span><br><span class="line">                start++;</span><br><span class="line">                res.push_back(temp);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x548C;&#x4E3A;s&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x5B57;">&#x548C;&#x4E3A;S&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x5B57;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x9012;&#x589E;&#x6392;&#x5E8F;&#x7684;&#x6570;&#x7EC4;&#x548C;&#x4E00;&#x4E2A;&#x6570;&#x5B57;S&#xFF0C;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x67E5;&#x627E;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x4F7F;&#x5F97;&#x4ED6;&#x4EEC;&#x7684;&#x548C;&#x6B63;&#x597D;&#x662F;S&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x5BF9;&#x6570;&#x5B57;&#x7684;&#x548C;&#x7B49;&#x4E8E;S&#xFF0C;&#x8F93;&#x51FA;&#x4E24;&#x4E2A;&#x6570;&#x7684;&#x4E58;&#x79EF;&#x6700;&#x5C0F;&#x7684;&#x3002;</p><p>&#x8F93;&#x51FA;&#x63CF;&#x8FF0;:</p><p>&#x5BF9;&#x5E94;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#xFF0C;&#x8F93;&#x51FA;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x5C0F;&#x7684;&#x5148;&#x8F93;&#x51FA;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; FindNumbersWithSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">array</span>, <span class="keyword">int</span> sum) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">int</span> num1, num2 = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (num1=<span class="number">0</span>; num1 &lt; n; )</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[num1] + <span class="built_in">array</span>[num2] &gt; sum)</span><br><span class="line">                num2--;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[num1] + <span class="built_in">array</span>[num2] &lt; sum)</span><br><span class="line">                num1++;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[num1] + <span class="built_in">array</span>[num2] == sum)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(<span class="built_in">array</span>[num1]);</span><br><span class="line">                res.push_back(<span class="built_in">array</span>[num2]);</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5DE6;&#x65CB;&#x8F6C;&#x5B57;&#x7B26;&#x4E32;">&#x5DE6;&#x65CB;&#x8F6C;&#x5B57;&#x7B26;&#x4E32;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x6C47;&#x7F16;&#x8BED;&#x8A00;&#x4E2D;&#x6709;&#x4E00;&#x79CD;&#x79FB;&#x4F4D;&#x6307;&#x4EE4;&#x53EB;&#x505A;&#x5FAA;&#x73AF;&#x5DE6;&#x79FB;&#xFF08;ROL&#xFF09;&#xFF0C;&#x73B0;&#x5728;&#x6709;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x5B57;&#x7B26;&#x4E32;&#x6A21;&#x62DF;&#x8FD9;&#x4E2A;&#x6307;&#x4EE4;&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x3002;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x7ED9;&#x5B9A;&#x7684;&#x5B57;&#x7B26;&#x5E8F;&#x5217;S&#xFF0C;&#x8BF7;&#x4F60;&#x628A;&#x5176;&#x5FAA;&#x73AF;&#x5DE6;&#x79FB;K&#x4F4D;&#x540E;&#x7684;&#x5E8F;&#x5217;&#x8F93;&#x51FA;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5B57;&#x7B26;&#x5E8F;&#x5217;S=&#x201D;abcXYZdef&#x201D;,&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x5FAA;&#x73AF;&#x5DE6;&#x79FB;3&#x4F4D;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5373;&#x201C;XYZdefabc&#x201D;&#x3002;&#x662F;&#x4E0D;&#x662F;&#x5F88;&#x7B80;&#x5355;&#xFF1F;OK&#xFF0C;&#x641E;&#x5B9A;&#x5B83;&#xFF01;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">LeftRotateString</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> size = str.size();</span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        n = n % size;</span><br><span class="line">        <span class="built_in">string</span> res;</span><br><span class="line">        res += str.substr(n, size);</span><br><span class="line">        res += str.substr(<span class="number">0</span>, n);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x7FFB;&#x8F6C;&#x5355;&#x8BCD;&#x987A;&#x5E8F;&#x5217;">&#x7FFB;&#x8F6C;&#x5355;&#x8BCD;&#x987A;&#x5E8F;&#x5217;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x725B;&#x5BA2;&#x6700;&#x8FD1;&#x6765;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x5458;&#x5DE5;Fish&#xFF0C;&#x6BCF;&#x5929;&#x65E9;&#x6668;&#x603B;&#x662F;&#x4F1A;&#x62FF;&#x7740;&#x4E00;&#x672C;&#x82F1;&#x6587;&#x6742;&#x5FD7;&#xFF0C;&#x5199;&#x4E9B;&#x53E5;&#x5B50;&#x5728;&#x672C;&#x5B50;&#x4E0A;&#x3002;&#x540C;&#x4E8B;Cat&#x5BF9;Fish&#x5199;&#x7684;&#x5185;&#x5BB9;&#x9887;&#x611F;&#x5174;&#x8DA3;&#xFF0C;&#x6709;&#x4E00;&#x5929;&#x4ED6;&#x5411;Fish&#x501F;&#x6765;&#x7FFB;&#x770B;&#xFF0C;&#x4F46;&#x5374;&#x8BFB;&#x4E0D;&#x61C2;&#x5B83;&#x7684;&#x610F;&#x601D;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x201C;student. a am I&#x201D;&#x3002;&#x540E;&#x6765;&#x624D;&#x610F;&#x8BC6;&#x5230;&#xFF0C;&#x8FD9;&#x5BB6;&#x4F19;&#x539F;&#x6765;&#x628A;&#x53E5;&#x5B50;&#x5355;&#x8BCD;&#x7684;&#x987A;&#x5E8F;&#x7FFB;&#x8F6C;&#x4E86;&#xFF0C;&#x6B63;&#x786E;&#x7684;&#x53E5;&#x5B50;&#x5E94;&#x8BE5;&#x662F;&#x201C;I am a student.&#x201D;&#x3002;Cat&#x5BF9;&#x4E00;&#x4E00;&#x7684;&#x7FFB;&#x8F6C;&#x8FD9;&#x4E9B;&#x5355;&#x8BCD;&#x987A;&#x5E8F;&#x53EF;&#x4E0D;&#x5728;&#x884C;&#xFF0C;&#x4F60;&#x80FD;&#x5E2E;&#x52A9;&#x4ED6;&#x4E48;&#xFF1F;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">ReverseSentence</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (str.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        <span class="built_in">string</span> temp, res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; v;</span><br><span class="line">        <span class="keyword">int</span> end = str.size();</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = str.size()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">&apos; &apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                temp.clear();</span><br><span class="line">                temp = str.substr(i + <span class="number">1</span>, end - i - <span class="number">1</span>);</span><br><span class="line">                temp += <span class="string">&quot; &quot;</span>;</span><br><span class="line">                v.push_back(temp);</span><br><span class="line">                end = i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        temp = str.substr(<span class="number">0</span>, end);</span><br><span class="line">        v.push_back(temp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; v.size(); j++)</span><br><span class="line">        {</span><br><span class="line">            res += v[j];</span><br><span class="line">            <span class="comment">//cout &lt;&lt; v[j];</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6251;&#x514B;&#x724C;&#x987A;&#x5B50;">&#x6251;&#x514B;&#x724C;&#x987A;&#x5B50;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>LL&#x4ECA;&#x5929;&#x5FC3;&#x60C5;&#x7279;&#x522B;&#x597D;,&#x56E0;&#x4E3A;&#x4ED6;&#x53BB;&#x4E70;&#x4E86;&#x4E00;&#x526F;&#x6251;&#x514B;&#x724C;,&#x53D1;&#x73B0;&#x91CC;&#x9762;&#x5C45;&#x7136;&#x6709;2&#x4E2A;&#x5927;&#x738B;,2&#x4E2A;&#x5C0F;&#x738B;(&#x4E00;&#x526F;&#x724C;&#x539F;&#x672C;&#x662F;54&#x5F20;^_^)...&#x4ED6;&#x968F;&#x673A;&#x4ECE;&#x4E2D;&#x62BD;&#x51FA;&#x4E86;5&#x5F20;&#x724C;,&#x60F3;&#x6D4B;&#x6D4B;&#x81EA;&#x5DF1;&#x7684;&#x624B;&#x6C14;,&#x770B;&#x770B;&#x80FD;&#x4E0D;&#x80FD;&#x62BD;&#x5230;&#x987A;&#x5B50;,&#x5982;&#x679C;&#x62BD;&#x5230;&#x7684;&#x8BDD;,&#x4ED6;&#x51B3;&#x5B9A;&#x53BB;&#x4E70;&#x4F53;&#x80B2;&#x5F69;&#x7968;,&#x563F;&#x563F;&#xFF01;&#xFF01;&#x201C;&#x7EA2;&#x5FC3;A,&#x9ED1;&#x6843;3,&#x5C0F;&#x738B;,&#x5927;&#x738B;,&#x65B9;&#x7247;5&#x201D;,&#x201C;Oh My God!&#x201D;&#x4E0D;&#x662F;&#x987A;&#x5B50;.....LL&#x4E0D;&#x9AD8;&#x5174;&#x4E86;,&#x4ED6;&#x60F3;&#x4E86;&#x60F3;,&#x51B3;&#x5B9A;&#x5927;&#x738B;&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x4EFB;&#x4F55;&#x6570;&#x5B57;,&#x5E76;&#x4E14;A&#x770B;&#x4F5C;1,J&#x4E3A;11,Q&#x4E3A;12,K&#x4E3A;13&#x3002;&#x4E0A;&#x9762;&#x7684;5&#x5F20;&#x724C;&#x5C31;&#x53EF;&#x4EE5;&#x53D8;&#x6210;&#x201C;1,2,3,4,5&#x201D;(&#x5927;&#x5C0F;&#x738B;&#x5206;&#x522B;&#x770B;&#x4F5C;2&#x548C;4),&#x201C;So Lucky!&#x201D;&#x3002;LL&#x51B3;&#x5B9A;&#x53BB;&#x4E70;&#x4F53;&#x80B2;&#x5F69;&#x7968;&#x5566;&#x3002; &#x73B0;&#x5728;,&#x8981;&#x6C42;&#x4F60;&#x4F7F;&#x7528;&#x8FD9;&#x5E45;&#x724C;&#x6A21;&#x62DF;&#x4E0A;&#x9762;&#x7684;&#x8FC7;&#x7A0B;,&#x7136;&#x540E;&#x544A;&#x8BC9;&#x6211;&#x4EEC;LL&#x7684;&#x8FD0;&#x6C14;&#x5982;&#x4F55;&#xFF0C; &#x5982;&#x679C;&#x724C;&#x80FD;&#x7EC4;&#x6210;&#x987A;&#x5B50;&#x5C31;&#x8F93;&#x51FA;true&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x8F93;&#x51FA;false&#x3002;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x8D77;&#x89C1;,&#x4F60;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x5927;&#x5C0F;&#x738B;&#x662F;0&#x3002;</p><p>&#x4E09;&#x4E2A;&#x6761;&#x4EF6;</p><ol type="1"><li><p>&#x6700;&#x5927;-&#x6700;&#x5C0F;(&#x4E0D;&#x8BA1;0)&lt;5;</p></li><li><p>&#x6CA1;&#x6709;&#x91CD;&#x590D;</p></li><li><p>&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x4E3A;5</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/*&#x4E09;&#x4E2A;&#x6761;&#x4EF6;&#xFF1A;</span></span><br><span class="line"><span class="comment">1. &#x6700;&#x5927;-&#x6700;&#x5C0F;(&#x4E0D;&#x8BA1;0)&lt;5;</span></span><br><span class="line"><span class="comment">2. &#x6CA1;&#x6709;&#x91CD;&#x590D;</span></span><br><span class="line"><span class="comment">3. &#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x4E3A;5</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsContinuous</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (numbers.size() != <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> maxn, minn;</span><br><span class="line">        sort(numbers.begin(), numbers.end());</span><br><span class="line">        maxn = numbers[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                minn = numbers[i];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == numbers[i + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> ((maxn - minn) &gt;= <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6C42;123...n">&#x6C42;1+2+3+...+n</h1><p>&#x6C42;1+2+3+...+n&#xFF0C;&#x8981;&#x6C42;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x4E58;&#x9664;&#x6CD5;&#x3001;for&#x3001;while&#x3001;if&#x3001;else&#x3001;switch&#x3001;case&#x7B49;&#x5173;&#x952E;&#x5B57;&#x53CA;&#x6761;&#x4EF6;&#x5224;&#x65AD;&#x8BED;&#x53E5;&#xFF08;A?B:C&#xFF09;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-3">&#x89E3;&#x6CD5;&#x4E00;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Sum_Solution</span><span class="params">(<span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> ans = n;</span><br><span class="line">        ans &amp;&amp; (ans += Sum_Solution(n - <span class="number">1</span>));<span class="comment">//&#x5F53;ans=0&#x65F6;&#x53D1;&#x751F;&#x77ED;&#x8DEF;</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-3">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x5229;&#x7528;pow</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Sum_Solution</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> a = <span class="built_in">pow</span>(n,<span class="number">2</span>);</span><br><span class="line">        a += n;</span><br><span class="line">        a=a &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x628A;&#x4E8C;&#x53C9;&#x6811;&#x6253;&#x5370;&#x6210;&#x591A;&#x884C;">&#x628A;&#x4E8C;&#x53C9;&#x6811;&#x6253;&#x5370;&#x6210;&#x591A;&#x884C;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x4ECE;&#x4E0A;&#x5230;&#x4E0B;&#x6309;&#x5C42;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x540C;&#x4E00;&#x5C42;&#x7ED3;&#x70B9;&#x4ECE;&#x5DE6;&#x81F3;&#x53F3;&#x8F93;&#x51FA;&#x3002;&#x6BCF;&#x4E00;&#x5C42;&#x8F93;&#x51FA;&#x4E00;&#x884C;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp;</span><br><span class="line">        TreeNode* p;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="built_in">queue</span>&lt;TreeNode*&gt;q1, q2;</span><br><span class="line">        q1.push(pRoot);</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span> ((!q1.empty()) || (!q2.empty()))</span><br><span class="line">        {</span><br><span class="line">            temp.clear();</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (!q1.empty())</span><br><span class="line">            {</span><br><span class="line">                p = q1.front(); q1.pop();</span><br><span class="line">                temp.push_back(p-&gt;val);</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(p-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(p-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">                res.push_back(temp);</span><br><span class="line">            temp.clear();</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (!q2.empty())</span><br><span class="line">            {</span><br><span class="line">                p = q2.front(); q2.pop();</span><br><span class="line">                temp.push_back(p-&gt;val);</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(p-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(p-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                res.push_back(temp);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5220;&#x9664;&#x94FE;&#x8868;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;">&#x5220;&#x9664;&#x94FE;&#x8868;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5728;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x94FE;&#x8868;&#x4E2D;&#xFF0C;&#x5B58;&#x5728;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;&#xFF0C;&#x8BF7;&#x5220;&#x9664;&#x8BE5;&#x94FE;&#x8868;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;&#xFF0C;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;&#x4E0D;&#x4FDD;&#x7559;&#xFF0C;&#x8FD4;&#x56DE;&#x94FE;&#x8868;&#x5934;&#x6307;&#x9488;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x94FE;&#x8868;1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5 &#x5904;&#x7406;&#x540E;&#x4E3A; 1-&gt;2-&gt;5</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">deleteDuplication</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* T = <span class="keyword">new</span> ListNode(<span class="number">-1</span>);</span><br><span class="line">        T-&gt;next = pHead;</span><br><span class="line">        ListNode* pre = T, *cur=pHead, *next;</span><br><span class="line">        <span class="keyword">while</span> (cur!=<span class="literal">NULL</span>&amp;&amp;cur-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            next = cur-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (cur-&gt;val==next-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">while</span> (next != <span class="literal">NULL</span> &amp;&amp; cur-&gt;val == next-&gt;val)<span class="comment">//&#x4E00;&#x76F4;&#x5F80;&#x4E0B;&#x627E;</span></span><br><span class="line">                    next = next-&gt;next;</span><br><span class="line">                pre-&gt;next = next;</span><br><span class="line">                cur = next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                pre = cur;</span><br><span class="line">                cur = next;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> T-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4E8C;&#x53C9;&#x6811;&#x548C;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x987A;&#x5E8F;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x5E76;&#x4E14;&#x8FD4;&#x56DE;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x6811;&#x4E2D;&#x7684;&#x7ED3;&#x70B9;&#x4E0D;&#x4EC5;&#x5305;&#x542B;&#x5DE6;&#x53F3;&#x5B50;&#x7ED3;&#x70B9;&#xFF0C;&#x540C;&#x65F6;&#x5305;&#x542B;&#x6307;&#x5411;&#x7236;&#x7ED3;&#x70B9;&#x7684;&#x6307;&#x9488;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeLinkNode* <span class="title">GetNext</span><span class="params">(TreeLinkNode* pNode)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pNode == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        TreeLinkNode *res = pNode;</span><br><span class="line">        <span class="keyword">if</span> (pNode-&gt;right!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = pNode-&gt;right;</span><br><span class="line">            <span class="keyword">while</span> (res-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                res = res-&gt;left;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (res-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (res == res-&gt;next-&gt;left)<span class="comment">//&#x5982;&#x679C;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5176;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;</span></span><br><span class="line">                <span class="keyword">return</span> res-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (res == res-&gt;next-&gt;right)</span><br><span class="line">                res = res-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x5176;&#x4E2D;&#x7684;&#x7B2C;k&#x5C0F;&#x7684;&#x7ED3;&#x70B9;&#x3002;&#x4F8B;&#x5982;&#xFF0C; &#xFF08;5&#xFF0C;3&#xFF0C;7&#xFF0C;2&#xFF0C;4&#xFF0C;6&#xFF0C;8&#xFF09; &#x4E2D;&#xFF0C;&#x6309;&#x7ED3;&#x70B9;&#x6570;&#x503C;&#x5927;&#x5C0F;&#x987A;&#x5E8F;&#x7B2C;&#x4E09;&#x5C0F;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#x4E3A;4&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">KthNode</span><span class="params">(TreeNode* pRoot, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        TreeNode*res = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        res = KthNode(pRoot-&gt;left, k);</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;cnt == k)</span><br><span class="line">            <span class="keyword">return</span> pRoot;</span><br><span class="line">        res = KthNode(pRoot-&gt;right, k);</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x7684;&#x4E2D;&#x4F4D;&#x6570;">&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x7684;&#x4E2D;&#x4F4D;&#x6570;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5982;&#x4F55;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x7684;&#x4E2D;&#x4F4D;&#x6570;&#xFF1F;&#x5982;&#x679C;&#x4ECE;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x8BFB;&#x51FA;&#x5947;&#x6570;&#x4E2A;&#x6570;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x4E2D;&#x4F4D;&#x6570;&#x5C31;&#x662F;&#x6240;&#x6709;&#x6570;&#x503C;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#x4F4D;&#x4E8E;&#x4E2D;&#x95F4;&#x7684;&#x6570;&#x503C;&#x3002;&#x5982;&#x679C;&#x4ECE;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x8BFB;&#x51FA;&#x5076;&#x6570;&#x4E2A;&#x6570;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x4E2D;&#x4F4D;&#x6570;&#x5C31;&#x662F;&#x6240;&#x6709;&#x6570;&#x503C;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#x4E2D;&#x95F4;&#x4E24;&#x4E2A;&#x6570;&#x7684;&#x5E73;&#x5747;&#x503C;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528;Insert()&#x65B9;&#x6CD5;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x4F7F;&#x7528;GetMedian()&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x4E2D;&#x4F4D;&#x6570;&#x3002;</p><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;PAT-A-1057</p><p>&#x4F7F;&#x7528;multiset&#x7EF4;&#x62A4;&#x4E24;&#x4E2A;multiset upper&#x548C;lower&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (num &gt; mid)</span><br><span class="line">            upper.insert(num);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            lower.insert(num);</span><br><span class="line">        adjust();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">GetMedian</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (upper.size() == lower.size())</span><br><span class="line">            <span class="keyword">return</span>(((*upper.begin()) + (*lower.begin())) / <span class="number">2.0</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> *lower.begin();</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (upper.size() &gt; lower.size())</span><br><span class="line">        {</span><br><span class="line">            lower.insert(*upper.begin());</span><br><span class="line">            upper.erase(upper.begin());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (lower.size()&gt;upper.size()+<span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            upper.insert(*lower.begin());</span><br><span class="line">            lower.erase(*lower.begin());</span><br><span class="line">        }</span><br><span class="line">        mid = *lower.begin();</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt; upper;</span><br><span class="line">    <span class="built_in">multiset</span>&lt;<span class="keyword">int</span>, greater&lt;<span class="keyword">int</span>&gt;&gt;lower;</span><br><span class="line">    <span class="keyword">int</span> mid = <span class="number">0</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x6700;&#x5927;&#x503C;">&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x6700;&#x5927;&#x503C;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x548C;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x627E;&#x51FA;&#x6240;&#x6709;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x91CC;&#x6570;&#x503C;&#x7684;&#x6700;&#x5927;&#x503C;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x8F93;&#x5165;&#x6570;&#x7EC4;{2,3,4,2,6,2,5,1}&#x53CA;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x5927;&#x5C0F;3&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x5171;&#x5B58;&#x5728;6&#x4E2A;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x6700;&#x5927;&#x503C;&#x5206;&#x522B;&#x4E3A;{4,4,6,6,6,5}&#xFF1B; &#x9488;&#x5BF9;&#x6570;&#x7EC4;{2,3,4,2,6,2,5,1}&#x7684;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x6709;&#x4EE5;&#x4E0B;6&#x4E2A;&#xFF1A; {[2,3,4],2,6,2,5,1}&#xFF0C; {2,[3,4,2],6,2,5,1}&#xFF0C; {2,3,[4,2,6],2,5,1}&#xFF0C; {2,3,4,[2,6,2],5,1}&#xFF0C; {2,3,4,2,[6,2,5],1}&#xFF0C; {2,3,4,2,6,[2,5,1]}&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-4">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x503C;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF1A;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;max</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; maxInWindows(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; num, <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> maxID = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span> || size &gt; num.size())</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            <span class="keyword">if</span> (num[maxID] &lt; num[i])</span><br><span class="line">                maxID = i;</span><br><span class="line">        res.push_back(num[maxID]);<span class="comment">//&#x7B2C;&#x4E00;&#x4E2A;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; num.size()-size+<span class="number">1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num[i + size - <span class="number">1</span>] &gt; num[maxID])</span><br><span class="line">                maxID = i + size - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; maxID)<span class="comment">//&#x8D85;&#x8FC7;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x8303;&#x56F4;&#x4E86;</span></span><br><span class="line">            {</span><br><span class="line">                maxID = i;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; size; j++)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span> (num[j + i] &gt; num[maxID])</span><br><span class="line">                        maxID = j + i;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            res.push_back(num[maxID]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-4">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x4F7F;&#x7528;&#x53CC;&#x8FB9;&#x961F;&#x5217;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; maxInWindows(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; num, <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;q;<span class="comment">//&#x53CC;&#x8FB9;&#x961F;&#x5217;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (q.size() != <span class="number">0</span> &amp;&amp; num[q.back()] &lt;= num[i])</span><br><span class="line">                q.pop_back();</span><br><span class="line">            <span class="keyword">if</span> (q.size() != <span class="number">0</span> &amp;&amp; i - q.front() + <span class="number">1</span> &gt; size)</span><br><span class="line">                q.pop_front();</span><br><span class="line">            q.push_back(i);</span><br><span class="line">            <span class="keyword">if</span> (size != <span class="number">0</span> &amp;&amp; i + <span class="number">1</span> &gt;= size)</span><br><span class="line">                res.push_back(num[q.front()]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x7EC4;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;">&#x6570;&#x7EC4;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5728;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;&#x91CC;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x90FD;&#x5728;0&#x5230;n-1&#x7684;&#x8303;&#x56F4;&#x5185;&#x3002; &#x6570;&#x7EC4;&#x4E2D;&#x67D0;&#x4E9B;&#x6570;&#x5B57;&#x662F;&#x91CD;&#x590D;&#x7684;&#xFF0C;&#x4F46;&#x4E0D;&#x77E5;&#x9053;&#x6709;&#x51E0;&#x4E2A;&#x6570;&#x5B57;&#x662F;&#x91CD;&#x590D;&#x7684;&#x3002;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x91CD;&#x590D;&#x51E0;&#x6B21;&#x3002;&#x8BF7;&#x627E;&#x51FA;&#x6570;&#x7EC4;&#x4E2D;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x8F93;&#x5165;&#x957F;&#x5EA6;&#x4E3A;7&#x7684;&#x6570;&#x7EC4;{2,3,1,0,2,5,3}&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;2&#x3002;</p><p>&#x5F00;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// Parameters:</span></span><br><span class="line">    <span class="comment">//        numbers:     an array of integers</span></span><br><span class="line">    <span class="comment">//        length:      the length of array numbers</span></span><br><span class="line">    <span class="comment">//        duplication: (Output) the duplicated number in the array number</span></span><br><span class="line">    <span class="comment">// Return value:       true if the input is valid, and there are some duplications in the array number</span></span><br><span class="line">    <span class="comment">//                     otherwise false</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">duplicate</span><span class="params">(<span class="keyword">int</span> numbers[], <span class="keyword">int</span> length, <span class="keyword">int</span>* duplication)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v(length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (v[numbers[i]]++ != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                *duplication = numbers[i];</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6784;&#x5EFA;&#x4E58;&#x79EF;&#x6570;&#x7EC4;">&#x6784;&#x5EFA;&#x4E58;&#x79EF;&#x6570;&#x7EC4;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;A[0,1,...,n-1],&#x8BF7;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;B[0,1,...,n-1],&#x5176;&#x4E2D;B&#x4E2D;&#x7684;&#x5143;&#x7D20;B[i]=A[0]<em>A[1]</em>...<em>A[i-1]</em>A[i+1]<em>...</em>A[n-1]&#x3002;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x9664;&#x6CD5;&#x3002;</p><p>&#x601D;&#x8DEF;&#x5206;&#x6790;&#xFF1A;</p><p><分析>&#xFF1A;</分析></p><p>&#x89E3;&#x91CA;&#x4E0B;&#x4EE3;&#x7801;&#xFF0C;&#x8BBE;&#x6709;&#x6570;&#x7EC4;&#x5927;&#x5C0F;&#x4E3A;5&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;for&#x5FAA;&#x73AF;</p><p>&#x7B2C;&#x4E00;&#x6B65;&#xFF1A;b[0] = 1;</p><p>&#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;b[1] = b[0] * a[0] = a[0]</p><p>&#x7B2C;&#x4E09;&#x6B65;&#xFF1A;b[2] = b[1] * a[1] = a[0] * a[1];</p><p>&#x7B2C;&#x56DB;&#x6B65;&#xFF1A;b[3] = b[2] * a[2] = a[0] * a[1] * a[2];</p><p>&#x7B2C;&#x4E94;&#x6B65;&#xFF1A;b[4] = b[3] * a[3] = a[0] * a[1] * a[2] * a[3];</p><p>&#x7136;&#x540E;&#x5BF9;&#x4E8E;&#x7B2C;&#x4E8C;&#x4E2A;for&#x5FAA;&#x73AF;</p><p>&#x7B2C;&#x4E00;&#x6B65;</p><p>temp *= a[4] = a[4];</p><p>b[3] = b[3] * temp = a[0] * a[1] * a[2] * a[4];</p><p>&#x7B2C;&#x4E8C;&#x6B65;</p><p>temp <em>= a[3] = a[4] </em> a[3];</p><p>b[2] = b[2] * temp = a[0] * a[1] * a[4] * a[3];</p><p>&#x7B2C;&#x4E09;&#x6B65;</p><p>temp <em>= a[2] = a[4] </em> a[3] * a[2];</p><p>b[1] = b[1] * temp = a[0] * a[4] * a[3] * a[2];</p><p>&#x7B2C;&#x56DB;&#x6B65;</p><p>temp <em>= a[1] = a[4] </em> a[3] * a[2] * a[1];</p><p>b[0] = b[0] * temp = a[4] * a[3] * a[2] * a[1];</p><p>&#x7531;&#x6B64;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x4ECE;b[4]&#x5230;b[0]&#x5747;&#x5DF2;&#x7ECF;&#x5F97;&#x5230;&#x6B63;&#x786E;&#x8BA1;&#x7B97;&#x3002;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class Solution </span><br><span class="line">{</span><br><span class="line">public:</span><br><span class="line">    vector&lt;int&gt; multiply(const vector&lt;int&gt;&amp; A) </span><br><span class="line">    {</span><br><span class="line">        vector&lt;int&gt;b(A.size());</span><br><span class="line">        if (A.size() == 0)</span><br><span class="line">            return b;</span><br><span class="line">        b[0] = 1;</span><br><span class="line">        for (int i = 0; i &lt; A.size()-1; i++)</span><br><span class="line">            b[i + 1] = b[i]*A[i];</span><br><span class="line">        int temp = 1;</span><br><span class="line">        for (int i = A.size()-1; i &gt;= 0; i--)</span><br><span class="line">        {</span><br><span class="line">            b[i] = b[i] * temp;</span><br><span class="line">            temp *= A[i];</span><br><span class="line">        }</span><br><span class="line">        returnb;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x5B57;&#x7B26;">&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x5B57;&#x7B26;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x7528;&#x6765;&#x627E;&#x51FA;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x4ECE;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x53EA;&#x8BFB;&#x51FA;&#x524D;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&quot;go&quot;&#x65F6;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#x662F;&quot;g&quot;&#x3002;&#x5F53;&#x4ECE;&#x8BE5;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x8BFB;&#x51FA;&#x524D;&#x516D;&#x4E2A;&#x5B57;&#x7B26;&#x201C;google&quot;&#x65F6;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#x662F;&quot;l&quot;&#x3002;</p><p>&#x8F93;&#x51FA;&#x63CF;&#x8FF0;:</p><p>&#x5982;&#x679C;&#x5F53;&#x524D;&#x5B57;&#x7B26;&#x6D41;&#x6CA1;&#x6709;&#x5B58;&#x5728;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x8FD4;&#x56DE;#&#x5B57;&#x7B26;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-5">&#x89E3;&#x6CD5;&#x4E00;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(n)&#x7684;&#x89E3;&#x6CD5;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//Insert one char from stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        s += ch;</span><br><span class="line">        cnt[ch]++;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//return the first appearence once char in current stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">FirstAppearingOnce</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (cnt[s[i]] == <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> s[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos;#&apos;</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span> cnt[<span class="number">260</span>] = { <span class="number">0</span> };</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-5">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x73B0;&#x8BF4;&#x660E;&#x4E3A;&#x4EC0;&#x4E48;&#x662F;O(1)&#xFF0C;&#x5176;&#x5B9E;&#x5224;&#x65AD;&#x90E8;&#x5206;&#x5728;Insert&#x90E8;&#x5206;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x3002;</p><p>&#x7531;&#x4E8E;&#x6700;&#x591A;&#x662F;&#x6709;128&#x4E2A;ascii&#x7801;&#xFF0C;&#x6240;&#x4EE5;&#x961F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x6700;&#x5927;&#x4E3A;128.&#x6545;&#x9650;&#x5B9A;&#x5728;&#x4E86;O(1)&#x7684;&#x65F6;&#x95F4;&#x8303;&#x56F4;&#x5185;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(1)&#x7684;&#x89E3;&#x6CD5;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//Insert one char from stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        cnt[ch]++;</span><br><span class="line">        <span class="keyword">if</span> (cnt[ch] == <span class="number">1</span>)</span><br><span class="line">            q.push(ch);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//return the first appearence once char in current stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">FirstAppearingOnce</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">while</span> (!q.empty() &amp;&amp; cnt[q.front()] != <span class="number">1</span>)</span><br><span class="line">            q.pop();</span><br><span class="line">        <span class="keyword">if</span> (!q.empty())</span><br><span class="line">            <span class="keyword">return</span> q.front();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos;#&apos;</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span> cnt[<span class="number">260</span>] = { <span class="number">0</span> };</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">char</span>&gt; q;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x94FE;&#x8868;&#x4E2D;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x7ED3;&#x70B9;">&#x94FE;&#x8868;&#x4E2D;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;&#x82E5;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x73AF;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x8BE5;&#x94FE;&#x8868;&#x7684;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x7ED3;&#x70B9;&#xFF0C;&#x5426;&#x5219;&#xFF0C;&#x8F93;&#x51FA;null&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9898;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x8981;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x73AF;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x73AF;&#xFF0C;&#x627E;&#x51FA;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x70B9;&#x3002;</p><p>&#x5224;&#x65AD;&#x6709;&#x6CA1;&#x6709;&#x73AF;&#x53EF;&#x4EE5;&#x7528;&#x5FEB;&#x6162;&#x6307;&#x9488;&#x3002;</p><p>&#x5206;&#x6790;&#xFF1A;</p><figure><img src="/posts/c812c7f8/1557257019018.png" alt="1557257019018"><figcaption>1557257019018</figcaption></figure><p>&#x5047;&#x8BBE;x&#x4E3A;&#x73AF;&#x524D;&#x9762;&#x7684;&#x8DEF;&#x7A0B;&#xFF08;&#x9ED1;&#x8272;&#x8DEF;&#x7A0B;&#xFF09;&#xFF0C;a&#x4E3A;&#x73AF;&#x5165;&#x53E3;&#x5230;&#x76F8;&#x9047;&#x70B9;&#x7684;&#x8DEF;&#x7A0B;&#xFF08;&#x84DD;&#x8272;&#x8DEF;&#x7A0B;&#xFF0C;&#x5047;&#x8BBE;&#x987A;&#x65F6;&#x9488;&#x8D70;&#xFF09;&#xFF0C; c&#x4E3A;&#x73AF;&#x7684;&#x957F;&#x5EA6;&#xFF08;&#x84DD;&#x8272;+&#x6A59;&#x8272;&#x8DEF;&#x7A0B;&#xFF09;</p><p>&#x5F53;&#x5FEB;&#x6162;&#x6307;&#x9488;&#x76F8;&#x9047;&#x7684;&#x65F6;&#x5019;&#xFF1A;</p><p>&#x6B64;&#x65F6;&#x6162;&#x6307;&#x9488;&#x8D70;&#x7684;&#x8DEF;&#x7A0B;&#x4E3A;Sslow = x + m * c + a</p><p>&#x5FEB;&#x6307;&#x9488;&#x8D70;&#x7684;&#x8DEF;&#x7A0B;&#x4E3A;Sfast = x + n * c + a</p><p>2 *slow = fast</p><p>2 * ( x + m*c + a ) = (x + n *c + a)</p><p>&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#x51FA;&#xFF1A;</p><p>x = (n - 2 * m )*c - a</p><p>= (n - 2 *m -1 )*c + c - a</p><p>&#x5373;&#x73AF;&#x524D;&#x9762;&#x7684;&#x8DEF;&#x7A0B; = &#x6570;&#x4E2A;&#x73AF;&#x7684;&#x957F;&#x5EA6;&#xFF08;&#x4E3A;&#x53EF;&#x80FD;&#x4E3A;0&#xFF09; + c - a</p><p>&#x4EC0;&#x4E48;&#x662F;c - a&#xFF1F;&#x8FD9;&#x662F;&#x76F8;&#x9047;&#x70B9;&#x540E;&#xFF0C;&#x73AF;&#x540E;&#x9762;&#x90E8;&#x5206;&#x7684;&#x8DEF;&#x7A0B;&#x3002;&#xFF08;&#x6A59;&#x8272;&#x8DEF;&#x7A0B;&#xFF09;</p><p>&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BA9;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x4ECE;&#x8D77;&#x70B9;A&#x5F00;&#x59CB;&#x8D70;&#xFF0C;&#x8BA9;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x4ECE;&#x76F8;&#x9047;&#x70B9;B&#x5F00;&#x59CB;&#x7EE7;&#x7EED;&#x5F80;&#x540E;&#x8D70;&#xFF0C;</p><p>2&#x4E2A;&#x6307;&#x9488;&#x901F;&#x5EA6;&#x4E00;&#x6837;&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x5F53;&#x4ECE;&#x539F;&#x70B9;&#x7684;&#x6307;&#x9488;&#x8D70;&#x5230;&#x73AF;&#x5165;&#x53E3;&#x70B9;&#x7684;&#x65F6;&#x5019;&#xFF08;&#x6B64;&#x65F6;&#x521A;&#x597D;&#x8D70;&#x4E86;x&#xFF09;</p><p>&#x4ECE;&#x76F8;&#x9047;&#x70B9;&#x5F00;&#x59CB;&#x8D70;&#x7684;&#x90A3;&#x4E2A;&#x6307;&#x9488;&#x4E5F;&#x4E00;&#x5B9A;&#x521A;&#x597D;&#x5230;&#x8FBE;&#x73AF;&#x5165;&#x53E3;&#x70B9;&#x3002;</p><p>&#x6240;&#x4EE5;2&#x8005;&#x4F1A;&#x76F8;&#x9047;&#xFF0C;&#x4E14;&#x6070;&#x597D;&#x76F8;&#x9047;&#x5728;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x70B9;&#x3002;</p><p>&#x6700;&#x540E;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x627E;&#x73AF;&#x7684;&#x7B97;&#x6CD5;&#x590D;&#x6742;&#x5EA6;&#x4E3A;&#xFF1A;</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF1A;O(n)</p><p>&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF1A;O(1)</p><p>&#x4E00;&#x5171;&#x4E09;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x524D;&#x6587;&#x6240;&#x8FF0;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x65AD;&#x94FE;&#x6CD5;&#xFF0C;&#x53EA;&#x6709;&#x5728;&#x6709;&#x73AF;&#x7684;&#x65F6;&#x5019;&#x624D;&#x6210;&#x7ACB;&#xFF0C;&#x6CA1;&#x6709;&#x73AF;&#x5219;&#x6709;&#x9519;&#x8BEF;&#x3002;</p><p>&#x7B2C;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x662F;&#x5B58;&#x50A8;&#x5730;&#x5740;&#x6CD5;&#xFF0C;&#x4F7F;&#x7528;set&#x5B58;&#x50A8;&#x5730;&#x5740;&#x3002;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x8868;&#x793A;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x662F;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">EntryNodeOfLoop</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span> || pHead-&gt;next == <span class="literal">NULL</span> || pHead-&gt;next-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//&#x5148;&#x5224;&#x65AD;&#x6709;&#x6CA1;&#x6709;&#x73AF;</span></span><br><span class="line">        ListNode* fast = pHead-&gt;next-&gt;next, *slow = pHead-&gt;next;</span><br><span class="line">        <span class="keyword">while</span> (fast!=slow)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (fast-&gt;next != <span class="literal">NULL</span> &amp;&amp; fast-&gt;next-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">            {</span><br><span class="line">                fast = fast-&gt;next-&gt;next;</span><br><span class="line">                slow = slow-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">NULL</span>;<span class="comment">//&#x8868;&#x793A;&#x6CA1;&#x6709;&#x73AF;&#xFF0C;&#x8FD4;&#x56DE;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x5FAA;&#x73AF;&#x8DF3;&#x51FA;&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x6B64;&#x65F6;&#xFF0C;fast=slow</span></span><br><span class="line">        fast = pHead;</span><br><span class="line">        <span class="keyword">while</span> (fast != slow)</span><br><span class="line">        {</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x5FAA;&#x73AF;&#x8DF3;&#x51FA;&#x8868;&#x793A;&#x5728;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x4E86;&#xFF0C;&#x4E14;&#x6B64;&#x65F6;fast=slow</span></span><br><span class="line">        <span class="keyword">return</span> fast;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x65AD;&#x94FE;&#x6CD5;&#x3002;&#x9002;&#x7528;&#x4E8E;&#x4E00;&#x5B9A;&#x6709;&#x73AF;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x73AF;&#xFF0C;&#x5219;&#x4F1A;&#x6709;&#x9519;&#x8BEF;&#x3002;&#x725B;&#x5BA2;&#x7684;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x4E0D;&#x4E25;&#x8C28;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x80FD;AC&#x7684;</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">EntryNodeOfLoop2</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span> || pHead-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* fast = pHead-&gt;next, *slow = pHead;</span><br><span class="line">        <span class="keyword">while</span> (fast!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            slow-&gt;next = <span class="literal">NULL</span>;<span class="comment">//&#x65AD;&#x5F00;</span></span><br><span class="line">            slow = fast;</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5B58;&#x5730;&#x5740;&#x6CD5;&#xFF0C;&#x628A;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x5730;&#x5740;&#x7528;set&#x5B58;&#x50A8;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x8868;&#x793A;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x662F;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">EntryNodeOfLoop3</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">set</span>&lt;ListNode*&gt; s;</span><br><span class="line">        <span class="keyword">while</span> (pHead != <span class="literal">NULL</span> &amp;&amp; (!s.count(pHead)))<span class="comment">//&#x5224;&#x65AD;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5426;&#x66FE;&#x51FA;&#x73B0;&#x8FC7;</span></span><br><span class="line">        {</span><br><span class="line">            s.insert(pHead);</span><br><span class="line">            pHead = pHead-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> pHead;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6309;&#x4E4B;&#x5B57;&#x5F62;&#x987A;&#x5E8F;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;">&#x6309;&#x4E4B;&#x5B57;&#x5F62;&#x987A;&#x5E8F;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6309;&#x7167;&#x4E4B;&#x5B57;&#x5F62;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5373;&#x7B2C;&#x4E00;&#x884C;&#x6309;&#x7167;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x7B2C;&#x4E8C;&#x5C42;&#x6309;&#x7167;&#x4ECE;&#x53F3;&#x81F3;&#x5DE6;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x7B2C;&#x4E09;&#x884C;&#x6309;&#x7167;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x5176;&#x4ED6;&#x884C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-6">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x7528;&#x4E24;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x662F;&#x5C42;&#x6B21;&#x904D;&#x5386;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x5728;&#x5076;&#x6570;&#x5C42;&#x90E8;&#x5206;&#xFF0C;reverse&#x4E4B;&#x540E;&#x518D;&#x5B58;&#x5165;&#x3002;&#x8FD9;&#x4E2A;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x597D;&#x7406;&#x89E3;&#x7684;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        TreeNode* cur=pRoot;</span><br><span class="line">        q1.push(cur);</span><br><span class="line">        <span class="keyword">while</span> (!q1.empty()||!q2.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (!q1.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = q1.front(); q1.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            res.push_back(v);</span><br><span class="line">            v.clear();</span><br><span class="line">            <span class="keyword">while</span> (!q2.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = q2.front(); q2.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (v.size() != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                reverse(v.begin(), v.end());</span><br><span class="line">                res.push_back(v);</span><br><span class="line">                v.clear();</span><br><span class="line">            }</span><br><span class="line">            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">//q1&#x4ECE;&#x5DE6;&#x5F80;&#x53F3;&#xFF0C;q2&#x4ECE;&#x53F3;&#x5411;&#x5DE6;</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;TreeNode*&gt; q1, q2;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-6">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#xFF08;&#x6211;&#x611F;&#x89C9;&#x6BD4;&#x8F83;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x6211;&#x9762;&#x963F;&#x91CC;&#x7684;&#x65F6;&#x5019;&#x505A;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x5F88;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x7528;&#x4E00;&#x4E2A;stack&#x548C;&#x4E00;&#x4E2A;queue&#xFF0C;stack&#x7528;&#x4E8E;&#x7FFB;&#x8F6C;&#xFF09;</p><p>&#x597D;&#x5904;&#x662F;&#x7701;&#x53BB;&#x4E86;reverse&#x73AF;&#x8282;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E00;&#x4E2A;reverse&#x4E5F;&#x6CA1;&#x591A;&#x5C11;&#x65F6;&#x95F4;&#xFF0C;&#x5199;&#x7684;&#x662F;&#x771F;TM&#x96BE;&#x61C2;&#xFF0C;&#x6211;&#x81EA;&#x5DF1;&#x56DE;&#x8FC7;&#x5934;&#x6765;&#x770B;&#x81EA;&#x5DF1;&#x90FD;&#x770B;&#x4E0D;&#x660E;&#x767D;&#x4E86;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        que.push(pRoot);</span><br><span class="line">    L1:</span><br><span class="line">        <span class="keyword">while</span> (!que.empty())</span><br><span class="line">        {</span><br><span class="line">            p = que.front(); que.pop();</span><br><span class="line">            sta.push(p);</span><br><span class="line">            v.push_back(p-&gt;val);</span><br><span class="line">            <span class="comment">//cout &lt;&lt; p-&gt;val;//&#x8BBF;&#x95EE;&#x4E86;</span></span><br><span class="line">        }</span><br><span class="line">        res.push_back(v);</span><br><span class="line">        v.clear();</span><br><span class="line">        flag = !flag;</span><br><span class="line">        <span class="keyword">while</span> (!sta.empty())</span><br><span class="line">        {</span><br><span class="line">            p = sta.top(); sta.pop();</span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;right);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;left);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;right);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (sta.empty() &amp;&amp; que.empty())</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">goto</span> L1;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">1</span>;<span class="comment">//1&#x8868;&#x793A;&#x4ECE;&#x5DE6;&#x5F80;&#x53F3;</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;TreeNode*&gt;que;</span><br><span class="line">    <span class="built_in">stack</span>&lt;TreeNode*&gt;sta;</span><br><span class="line">    TreeNode* p;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E09;">&#x89E3;&#x6CD5;&#x4E09;</h2><p>&#x4F7F;&#x7528;&#x6808;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;reverse</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution3</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        TreeNode* cur = pRoot;</span><br><span class="line">        s1.push(cur);</span><br><span class="line">        <span class="keyword">while</span> (!s1.empty()||!s2.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (!s1.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = s1.top(); s1.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    s2.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    s2.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            res.push_back(v);</span><br><span class="line">            v.clear();</span><br><span class="line">            <span class="keyword">while</span> (!s2.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = s2.top(); s2.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    s1.push(cur-&gt;right);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    s1.push(cur-&gt;left);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (v.size() != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(v);</span><br><span class="line">                v.clear();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;TreeNode*&gt;s1, s2;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x56DB;">&#x89E3;&#x6CD5;&#x56DB;</h2><p>&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x4F7F;&#x7528;reverse</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4F7F;&#x7528;reverse</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution4</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        TreeNode* cur = pRoot;</span><br><span class="line">        q.push(cur);</span><br><span class="line">        <span class="keyword">int</span> size;</span><br><span class="line">        <span class="keyword">while</span> (!q.empty())</span><br><span class="line">        {</span><br><span class="line">            v.clear();</span><br><span class="line">            size = q.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            {</span><br><span class="line">                cur = q.front(); q.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                reverse(v.begin(), v.end());</span><br><span class="line">            res.push_back(v);</span><br><span class="line">            flag = !flag;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">queue</span>&lt;TreeNode*&gt; q;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5BF9;&#x79F0;&#x7684;&#x4E8C;&#x53C9;&#x6811;">&#x5BF9;&#x79F0;&#x7684;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x5224;&#x65AD;&#x4E00;&#x9897;&#x4E8C;&#x53C9;&#x6811;&#x662F;&#x4E0D;&#x662F;&#x5BF9;&#x79F0;&#x7684;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x4E8C;&#x53C9;&#x6811;&#x540C;&#x6B64;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x955C;&#x50CF;&#x662F;&#x540C;&#x6837;&#x7684;&#xFF0C;&#x5B9A;&#x4E49;&#x5176;&#x4E3A;&#x5BF9;&#x79F0;&#x7684;&#x3002;</p><p>&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#xFF1A;</p><p>&#x5DE6;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x503C;&#x76F8;&#x7B49;&#x3002;&#x4E14;&#x5DE6;&#x53F3;&#x5B50;&#x6811;&#x5FC5;&#x987B;&#x540C;&#x65F6;&#x4E3A;&#x7A7A;&#x3002;</p><p>&#x7531;&#x4E8E;&#x53EA;&#x662F;&#x8FD9;&#x68F5;&#x6811;&#x7684;&#x5BF9;&#x79F0;&#xFF0C;&#x6240;&#x4EE5;&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x540C;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x6210;&#x955C;&#x50CF;&#x3002;</p><p>&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x540C;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x6210;&#x955C;&#x50CF;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isSymmetrical</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> check(pRoot-&gt;left, pRoot-&gt;right);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(TreeNode* left, TreeNode* right)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (left == <span class="literal">NULL</span>)<span class="comment">//&#x5DE6;&#x5B69;&#x5B50;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x53F3;&#x5B69;&#x5B50;&#x4E5F;&#x8981;&#x4E3A;&#x7A7A;</span></span><br><span class="line">            <span class="keyword">return</span> right == <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (right == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (left-&gt;val != right-&gt;val)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> check(left-&gt;right, right-&gt;left) &amp;&amp; check(left-&gt;left, right-&gt;right);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;">&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x7528;&#x6765;&#x5E8F;&#x5217;&#x5316;&#x548C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;</p><p>&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;&#x5C31;&#x662F;&#x628A;&#x4E8C;&#x53C9;&#x6811;&#x4EE5;&#x67D0;&#x79CD;&#x987A;&#x5E8F;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x524D;&#x5E8F;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x4E2D;&#x5E8F;&#xFF0C;&#x540E;&#x7EED;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x5C42;&#x6B21;&#x904D;&#x5386;&#x3002;</p><p>&#x9898;&#x76EE;&#x4E2D;&#x7ED9;&#x7684;&#x8FD4;&#x56DE;&#x7C7B;&#x578B;&#x662F;char*&#x7C7B;&#x578B;&#xFF0C;&#x4E0D;&#x6EE1;&#x8DB3;&#x6211;&#x4EEC;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x5F3A;&#x5236;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x4E00;&#x4E0B;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;buf;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">encode</span><span class="params">(TreeNode* cur)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (cur == <span class="literal">NULL</span>)</span><br><span class="line">            buf.push_back(<span class="number">0xFFFFF</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            buf.push_back(cur-&gt;val);</span><br><span class="line">            encode(cur-&gt;left);</span><br><span class="line">            encode(cur-&gt;right);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function">TreeNode* <span class="title">decode</span><span class="params">(<span class="keyword">int</span>* &amp;p)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (*p==<span class="number">0xFFFFF</span>)</span><br><span class="line">        {</span><br><span class="line">            ++p;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        }</span><br><span class="line">        TreeNode* res = <span class="keyword">new</span> TreeNode(*p);</span><br><span class="line">        p++;</span><br><span class="line">        res-&gt;left = decode(p);</span><br><span class="line">        res-&gt;right = decode(p);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">char</span>* <span class="title">Serialize</span><span class="params">(TreeNode *root)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        buf.clear();</span><br><span class="line">        encode(root);</span><br><span class="line">        <span class="keyword">int</span> *res = <span class="keyword">new</span> <span class="keyword">int</span>[buf.size()];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; buf.size(); i++)</span><br><span class="line">            res[i] = buf[i];</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">char</span>*)res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Deserialize</span><span class="params">(<span class="keyword">char</span> *str)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> *p = (<span class="keyword">int</span>*)str;</span><br><span class="line">        <span class="keyword">return</span> decode(p);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x77E5;&#x9053;&#x524D;&#x5E8F;/&#x540E;&#x7EED;+&#x4E2D;&#x5E8F;&#xFF0C;&#x53EA;&#x77E5;&#x9053;&#x524D;&#x5E8F;+&#x540E;&#x5E8F;&#x662F;&#x4E0D;&#x53EF;&#x4EE5;&#x7684;&#x3002;</p><p>&#x4F46;&#x662F;&#x5728;&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7ED9;&#x51FA;&#x4E86;&#x7A7A;&#x8282;&#x70B9;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x524D;&#x5E8F;&#x6765;&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><p>&#x5F69;&#x86CB;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> TreeNode* pnode;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    pnode hehe;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">char</span>* <span class="title">Serialize</span><span class="params">(TreeNode *root)</span> </span>{    </span><br><span class="line">        hehe = root;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(*^_^*)&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Deserialize</span><span class="params">(<span class="keyword">char</span> *str)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> hehe;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E0D;&#x7528;&#x52A0;&#x51CF;&#x4E58;&#x9664;&#x505A;&#x52A0;&#x6CD5;">&#x4E0D;&#x7528;&#x52A0;&#x51CF;&#x4E58;&#x9664;&#x505A;&#x52A0;&#x6CD5;</h1><ol type="1"><li>&#x4E24;&#x4E2A;&#x6570;&#x5F02;&#x6216;&#xFF1A;&#x76F8;&#x5F53;&#x4E8E;&#x6BCF;&#x4E00;&#x4F4D;&#x76F8;&#x52A0;&#xFF0C;&#x800C;&#x4E0D;&#x8003;&#x8651;&#x8FDB;&#x4F4D;&#xFF1B;</li><li>&#x4E24;&#x4E2A;&#x6570;&#x76F8;&#x4E0E;&#xFF0C;&#x5E76;&#x5DE6;&#x79FB;&#x4E00;&#x4F4D;&#xFF1A;&#x76F8;&#x5F53;&#x4E8E;&#x6C42;&#x5F97;&#x8FDB;&#x4F4D;&#xFF1B;</li><li>&#x5C06;&#x4E0A;&#x8FF0;&#x4E24;&#x6B65;&#x7684;&#x7ED3;&#x679C;&#x76F8;&#x52A0;</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">while</span> (num2 != <span class="number">0</span>) </span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> sum = num1 ^ num2;</span><br><span class="line">            <span class="keyword">int</span> carray = (num1 &amp; num2) &lt;&lt; <span class="number">1</span>;</span><br><span class="line">            num1 = sum;</span><br><span class="line">            num2 = carray;</span><br><span class="line">        }</span><br><span class="line">    <span class="keyword">return</span> num1;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x5F69;&#x86CB;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        _asm</span><br><span class="line">        {</span><br><span class="line">            MOV EAX, a</span><br><span class="line">            MOV ECX, b</span><br><span class="line">            ADD EAX, ECX</span><br><span class="line">            MOV a, EAX</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/ta/coding-interviews&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x9898;&amp;#x76EE;&amp;#x94FE;&amp;#x63A5;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8D85;&amp;#x8D8A;&amp;#x4FDD;&amp;#x4F51;&amp;#xFF0C;offer++&lt;/p&gt;
    
    </summary>
    
      <category term="剑指Offer" scheme="https://www.windsings.com/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="剑指Offer" scheme="https://www.windsings.com/tags/%E5%89%91%E6%8C%87Offer/"/>
    
  </entry>
  
  <entry>
    <title>分布式与云计算复习笔记</title>
    <link href="https://www.windsings.com//posts/64e8389b/"/>
    <id>https://www.windsings.com//posts/64e8389b/</id>
    <published>2019-04-17T14:24:25.000Z</published>
    <updated>2019-04-21T07:23:42.037Z</updated>
    
    <content type="html"><![CDATA[<p>&#x8FD9;&#x4E2A;&#x592A;&#x96BE;&#x4E86;&#x6211;&#x4EEC;&#x4E0D;&#x8BB2;&#xFF1B;&#x8FD9;&#x4E2A;&#x592A;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x4E0D;&#x8BB2;&#xFF1B;&#x8FD9;&#x4E2A;.....&#xFF08;&#x559D;&#x53E3;&#x6C34;&#xFF0C;&#x70B9;&#x51FB;&#x9875;PPT&#xFF09;&#x4E5F;&#x4E0D;&#x8BB2;&#x3002; <a id="more"></a></p><h1 id="&#x7B2C;&#x4E00;&#x7AE0;-&#x7EEA;&#x8BBA;">&#x7B2C;&#x4E00;&#x7AE0; &#x7EEA;&#x8BBA;</h1><p><img src="/posts/64e8389b/&#x5206;&#x5E03;&#x5F0F;&#x7B2C;&#x4E00;&#x7AE0;.png"></p><h1 id="&#x7B2C;&#x4E03;&#x7AE0;-&#x4E00;&#x81F4;&#x6027;&#x548C;&#x590D;&#x5236;">&#x7B2C;&#x4E03;&#x7AE0; &#x4E00;&#x81F4;&#x6027;&#x548C;&#x590D;&#x5236;</h1><p><img src="/posts/64e8389b/&#x5206;&#x5E03;&#x5F0F;&#x7B2C;&#x4E03;&#x7AE0;.png"></p><h1 id="&#x7B2C;&#x516B;&#x7AE0;-&#x5BB9;&#x9519;">&#x7B2C;&#x516B;&#x7AE0; &#x5BB9;&#x9519;</h1><p><img src="/posts/64e8389b/&#x5206;&#x5E03;&#x5F0F;&#x7B2C;&#x516B;&#x7AE0;.png"></p><h1 id="&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E00;&#x7AE0;">&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E00;&#x7AE0;</h1><p><img src="/posts/64e8389b/&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E00;&#x7AE0;.png"></p><h1 id="&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E8C;&#x7AE0;">&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E8C;&#x7AE0;</h1><p><img src="/posts/64e8389b/&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E8C;&#x7AE0;.png"></p><h1 id="&#x590D;&#x4E60;&#x8D44;&#x6599;&#x8865;&#x5145;">&#x590D;&#x4E60;&#x8D44;&#x6599;&#x8865;&#x5145;</h1><p><a href="https://dev.tencent.com/s/0a92a2e2-3f72-44f6-972a-3615129f8acd" target="_blank" rel="noopener">&#x5206;&#x5E03;&#x5F0F;&#x590D;&#x4E60;&#x8D44;&#x6599;&#x8865;&#x5145;</a></p><h1 id="&#x81F4;&#x8C22;">&#x81F4;&#x8C22;</h1><p>&#x611F;&#x8C22;<a href="http://www.keyanjie.net/" target="_blank" rel="noopener">Alan Ke</a>&#x3001;&#x82CF;&#x7490;&#x5CA9;&#x3001;<a href="https://github.com/wangyu-/" target="_blank" rel="noopener">&#x6C6A;&#x5B87;</a>&#x3001;&#x738B;&#x8BD7;&#x8BD7;&#x3001;<a href="http://cjcongjia.cn/" target="_blank" rel="noopener">&#x4ECE;&#x5609;</a>&#x7B49;&#x540C;&#x5B66;&#x7684;&#x652F;&#x6301;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x592A;&amp;#x96BE;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x8BB2;&amp;#xFF1B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x592A;&amp;#x7B80;&amp;#x5355;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E5F;&amp;#x4E0D;&amp;#x8BB2;&amp;#xFF1B;&amp;#x8FD9;&amp;#x4E2A;.....&amp;#xFF08;&amp;#x559D;&amp;#x53E3;&amp;#x6C34;&amp;#xFF0C;&amp;#x70B9;&amp;#x51FB;&amp;#x9875;PPT&amp;#xFF09;&amp;#x4E5F;&amp;#x4E0D;&amp;#x8BB2;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://www.windsings.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="分布式" scheme="https://www.windsings.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="云计算" scheme="https://www.windsings.com/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
      <category term="复习笔记" scheme="https://www.windsings.com/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="丁菁" scheme="https://www.windsings.com/tags/%E4%B8%81%E8%8F%81/"/>
    
      <category term="随机授课" scheme="https://www.windsings.com/tags/%E9%9A%8F%E6%9C%BA%E6%8E%88%E8%AF%BE/"/>
    
      <category term="多喝水" scheme="https://www.windsings.com/tags/%E5%A4%9A%E5%96%9D%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>2018校招真题编程练习题解</title>
    <link href="https://www.windsings.com//posts/7da4f75a/"/>
    <id>https://www.windsings.com//posts/7da4f75a/</id>
    <published>2019-04-09T18:37:10.000Z</published>
    <updated>2019-04-10T19:17:59.040Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/ta/2018test" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><a id="more"></a><h1 id="&#x6700;&#x5927;&#x4E58;&#x79EF;">&#x6700;&#x5927;&#x4E58;&#x79EF;</h1><p>&#x6CE8;&#x610F;&#x8FD9;&#x9053;&#x9898;&#x7684;&#x6D4B;&#x8BD5;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x662F;&#x5148;&#x7ED9;&#x51FA;&#x6570;&#x5B57;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x518D;&#x7ED9;&#x51FA;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x3002;</p><p>&#x6700;&#x5927;&#x503C;&#x53EA;&#x53EF;&#x80FD;&#x5728;(max1*max2*max3, max1*min1*min2)&#x4E2D;&#x5F97;&#x51FA;&#xFF0C;&#x8BA1;&#x7B97;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x5373;&#x53EF;&#x3002;</p><p>&#x6CE8;&#x610F;&#x4F7F;&#x7528;long long &#x9632;&#x6B62;&#x6EA2;&#x51FA;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp, max1 = INT32_MIN, max2 = INT32_MIN, max3 = INT32_MIN, min1 = INT32_MAX, min2 = INT32_MAX;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        max3 = max(temp, max3);</span><br><span class="line">        <span class="keyword">if</span> (max3 &gt; max2)</span><br><span class="line">            swap(max2, max3);</span><br><span class="line">        <span class="keyword">if</span> (max2 &gt; max1)</span><br><span class="line">            swap(max2, max1);</span><br><span class="line">        min2 = min(min2, temp);</span><br><span class="line">        <span class="keyword">if</span> (min1 &gt; min2)</span><br><span class="line">            swap(min1, min2);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; max(max1*max2*max3, max1*min1*min2);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5927;&#x6574;&#x6570;&#x76F8;&#x4E58;">&#x5927;&#x6574;&#x6570;&#x76F8;&#x4E58;</h1><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;POJ 1001</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/ta/2018test&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x9898;&amp;#x76EE;&amp;#x94FE;&amp;#x63A5;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="校招真题" scheme="https://www.windsings.com/categories/%E6%A0%A1%E6%8B%9B%E7%9C%9F%E9%A2%98/"/>
    
    
      <category term="校招真题" scheme="https://www.windsings.com/tags/%E6%A0%A1%E6%8B%9B%E7%9C%9F%E9%A2%98/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>华为2019软件挑战赛经验教训总结</title>
    <link href="https://www.windsings.com//posts/a1353cd8/"/>
    <id>https://www.windsings.com//posts/a1353cd8/</id>
    <published>2019-03-31T08:17:11.000Z</published>
    <updated>2019-04-10T19:17:59.041Z</updated>
    
    <content type="html"><![CDATA[<p>&#x4E0E;&#x4EBA;&#x5171;&#x4E8B;&#xFF0C;&#x4EBA;&#x662F;&#x5173;&#x952E;&#x3002; <a id="more"></a></p><h1 id="&#x7B80;&#x8FF0;">&#x7B80;&#x8FF0;</h1><p>&#x8FD9;&#x6B21;&#x6BD4;&#x8D5B;&#xFF0C;&#x6211;&#x4EEC;&#x961F;&#x662F;&#x7531;&#x4E09;&#x4EBA;&#x7EC4;&#x6210;&#xFF0C;&#x6211;&#xFF0C;&#x5F90;&#x540C;&#x5B66;&#xFF0C;&#x738B;&#x540C;&#x5B66;&#x3002;&#x5F90;&#x540C;&#x5B66;&#x62C5;&#x4EFB;&#x961F;&#x957F;&#xFF0C;&#x738B;&#x540C;&#x5B66;&#x5199;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><p>&#x4E3A;&#x65B9;&#x4FBF;&#x63CF;&#x8FF0;&#xFF0C;&#x540E;&#x6587;&#x7528;&#x201C;&#x961F;&#x957F;&#x201D;&#x6765;&#x6307;&#x4EE3;&#x5F90;&#x540C;&#x5B66;&#xFF0C;&#x7528;&#x201C;&#x4E3B;&#x7A0B;&#x201D;&#x6765;&#x4EE3;&#x6307;&#x738B;&#x540C;&#x5B66;&#x3002;</p><p>&#x5728;3.10&#x5DE6;&#x53F3;&#xFF0C;&#x961F;&#x957F;&#x6765;&#x8054;&#x7CFB;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x65F6;&#xFF0C;&#x961F;&#x957F;&#x8BF4;&#x4ED6;&#x4E0D;&#x4F1A;&#x7F16;&#x7A0B;&#xFF0C;&#x4ED6;&#x6765;&#x63D0;&#x4F9B;&#x7B97;&#x6CD5;&#xFF0C;&#x8BA9;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x6765;&#x5B9E;&#x73B0;&#x3002;&#x5F53;&#x65F6;&#x8003;&#x8651;&#x5230;&#x961F;&#x957F;&#x7684;&#x5C65;&#x5386;&#x8FD8;&#x4E0D;&#x9519;&#xFF08;&#x672C;&#x79D1;&#x53A6;&#x95E8;&#x5927;&#x5B66;&#x6570;&#x5B66;&#x7CFB;&#xFF09;&#xFF0C;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x5C31;&#x7B54;&#x5E94;&#x4E86;&#x3002;</p><p>&#x6240;&#x4EE5;&#x6700;&#x5F00;&#x59CB;&#x7684;&#x5DE5;&#x4F5C;&#x5206;&#x914D;&#x662F;&#xFF0C;&#x961F;&#x957F;&#x8D1F;&#x8D23;&#x7B97;&#x6CD5;&#xFF0C;&#x4E3B;&#x7A0B;&#x8D1F;&#x8D23;&#x4E3B;&#x8981;&#x7684;&#x7A0B;&#x5E8F;&#x7F16;&#x5199;&#xFF0C;&#x6211;&#x8D1F;&#x8D23;&#x5C11;&#x90E8;&#x5199;&#x5206;&#x4EE3;&#x7801;&#x3001;&#x7248;&#x672C;&#x63A7;&#x5236;&#x3001;&#x7F16;&#x8BD1;+&#x6D4B;&#x8BD5;&#x3001;&#x628A;&#x4E3B;&#x7A0B;&#x7684;&#x4EE3;&#x7801;&#x4FEE;&#x6539;&#x6210;&#x7B26;&#x5408;&#x9898;&#x76EE;&#x8981;&#x6C42;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><p>&#x6700;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x505A;&#x51FA;&#x6765;&#x4E00;&#x4E2A;&#x6709;&#x6210;&#x7EE9;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x7136;&#x800C;&#x7531;&#x4E8E;&#x961F;&#x957F;&#x6CA1;&#x6709;&#x505A;&#x7248;&#x672C;&#x63A7;&#x5236;&#xFF0C;&#x628A;&#x8FD9;&#x4E00;&#x7248;&#x672C;&#x8986;&#x76D6;&#x6389;&#x4E86;&#xFF0C;&#x5BFC;&#x81F4;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x8FDE;&#x4EFB;&#x4F55;&#x6210;&#x7EE9;&#x90FD;&#x6CA1;&#x6709;&#x3002;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x5FC3;&#x6001;&#x5D29;&#x76D8;&#x3002;</p><h1 id="&#x6559;&#x8BAD;&#x4E00;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;">&#x6559;&#x8BAD;&#x4E00;&#xFF1A;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;</h1><p>&#x5982;&#x524D;&#x6587;&#x6240;&#x8FF0;&#xFF0C;&#x521A;&#x5F00;&#x59CB;&#x8BA8;&#x8BBA;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x505A;&#x65F6;&#xFF0C;&#x961F;&#x957F;&#x5C31;&#x8981;&#x6C42;&#x6211;&#x4EEC;&#x5148;&#x628A;&#x57FA;&#x7840;&#x7684;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#xFF0C;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x6162;&#x6162;&#x8C03;&#x4F18;&#x3002;&#x800C;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x7684;&#x8BA4;&#x4E3A;&#xFF0C;&#x8981;&#x5148;&#x6709;&#x5927;&#x6982;&#x7B97;&#x6CD5;&#xFF0C;&#x518D;&#x8003;&#x8651;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x3002;</p><p>&#x4E0D;&#x8FC7;&#x7531;&#x4E8E;&#x961F;&#x957F;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x62FF;&#x51FA;&#x6765;&#x9AD8;&#x6548;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x5148;&#x5199;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x76F4;&#x5230;&#x6700;&#x540E;&#x6BD4;&#x8D5B;&#x7ED3;&#x675F;&#xFF0C;&#x961F;&#x957F;&#x4ECD;&#x7136;&#x6CA1;&#x6709;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5207;&#x5B9E;&#x53EF;&#x884C;&#x7684;&#x7B97;&#x6CD5;&#x3002;</p><p>&#x6240;&#x4EE5;&#x4EE5;&#x540E;&#x518D;&#x505A;&#x9879;&#x76EE;&#x65F6;&#xFF0C;&#x6211;&#x5B66;&#x5230;&#x7684;&#x6559;&#x8BAD;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x7ED3;&#x679C;&#x4E3A;&#x5BFC;&#x5411;&#xFF0C;&#x6301;&#x6709;&#x4E00;&#x79CD;&#x6210;&#x738B;&#x8D25;&#x5BC7;&#x89C2;&#x70B9;&#x7684;&#x8BDD;&#xFF0C;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x597D;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x5EFA;&#x8BAE;&#x4ECE;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x653E;&#x5F03;&#x3002;</p><h1 id="&#x6559;&#x8BAD;&#x4E8C;&#x4EBA;&#x5458;&#x9009;&#x62E9;&#x5F88;&#x5173;&#x952E;">&#x6559;&#x8BAD;&#x4E8C;&#xFF1A;&#x4EBA;&#x5458;&#x9009;&#x62E9;&#x5F88;&#x5173;&#x952E;</h1><h1 id="&#x6559;&#x8BAD;&#x4E09;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x662F;&#x5B66;&#x95EE;">&#x6559;&#x8BAD;&#x4E09;&#xFF1A;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x662F;&#x5B66;&#x95EE;</h1><h1 id="&#x6559;&#x8BAD;&#x56DB;&#x63D0;&#x524D;&#x60F3;&#x597D;&#x4EE3;&#x7801;&#x67B6;&#x6784;">&#x6559;&#x8BAD;&#x56DB;&#xFF1A;&#x63D0;&#x524D;&#x60F3;&#x597D;&#x4EE3;&#x7801;&#x67B6;&#x6784;</h1><p>&#x8FD9;&#x90E8;&#x5206;&#x6211;&#x6765;&#x80CC;&#x9505;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6CA1;&#x6709;&#x7406;&#x89E3;&#x6BD4;&#x8D5B;</p><h1 id="&#x6559;&#x8BAD;&#x4E94;&#x6D4B;&#x8BD5;&#x5F88;&#x91CD;&#x8981;">&#x6559;&#x8BAD;&#x4E94;&#xFF1A;&#x6D4B;&#x8BD5;&#x5F88;&#x91CD;&#x8981;</h1><h1 id="&#x6559;&#x8BAD;&#x516D;&#x6CE8;&#x610F;&#x7248;&#x672C;&#x63A7;&#x5236;">&#x6559;&#x8BAD;&#x516D;&#xFF1A;&#x6CE8;&#x610F;&#x7248;&#x672C;&#x63A7;&#x5236;</h1><h1 id="&#x6559;&#x8BAD;&#x4E03;&#x5FC3;&#x6001;&#x8981;&#x653E;&#x5E73;">&#x6559;&#x8BAD;&#x4E03;&#xFF1A;&#x5FC3;&#x6001;&#x8981;&#x653E;&#x5E73;</h1><h1 id="&#x6559;&#x8BAD;&#x516B;&#x8C03;&#x53C2;&#x4E0D;&#x9760;&#x8C31;">&#x6559;&#x8BAD;&#x516B;&#xFF1A;&#x8C03;&#x53C2;&#x4E0D;&#x9760;&#x8C31;</h1><h1 id="&#x6559;&#x8BAD;&#x4E5D;">&#x6559;&#x8BAD;&#x4E5D;&#xFF1A;</h1><h1 id="&#x540E;&#x8BB0;">&#x540E;&#x8BB0;</h1><p>&#x6211;&#x6587;&#x7B14;&#x4E0D;&#x597D;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E5F;&#x662F;&#x53CD;&#x590D;&#x6539;&#x4E86;&#x5F88;&#x591A;&#x6B21;&#x624D;&#x6700;&#x7EC8;&#x53D1;&#x5E03;&#x51FA;&#x53BB;&#x3002;&#x4E00;&#x5F00;&#x59CB;&#x5728;&#x5199;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6709;&#x5F88;&#x591A;&#x5E26;&#x6709;&#x60C5;&#x7EEA;&#x7684;&#x8BDD;&#xFF0C;&#x540E;&#x6765;&#x81EA;&#x5DF1;&#x4E0D;&#x65AD;&#x53CD;&#x601D;&#xFF0C;&#x6709;&#x6210;&#x7EE9;&#x56FA;&#x7136;&#x9AD8;&#x5174;&#xFF0C;&#x4F46;&#x662F;&#x5931;&#x8D25;&#x4E86;&#x4E5F;&#x8981;&#x5FC3;&#x6001;&#x653E;&#x5E73;&#x3002;&#x4E0D;&#x8981;&#x7528;&#x8FC7;&#x53BB;&#x7684;&#x4E8B;&#x6765;&#x5F71;&#x54CD;&#x5C06;&#x6765;&#x7684;&#x5FC3;&#x60C5;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x9009;&#x62E9;&#x5F7B;&#x5E95;&#x51B7;&#x9759;&#x4E0B;&#x6765;&#x4E4B;&#x540E;&#x518D;&#x53D1;&#x5E03;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x4E0E;&amp;#x4EBA;&amp;#x5171;&amp;#x4E8B;&amp;#xFF0C;&amp;#x4EBA;&amp;#x662F;&amp;#x5173;&amp;#x952E;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="经验教训" scheme="https://www.windsings.com/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD/"/>
    
    
      <category term="经验教训" scheme="https://www.windsings.com/tags/%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD/"/>
    
      <category term="总结" scheme="https://www.windsings.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="竞赛" scheme="https://www.windsings.com/tags/%E7%AB%9E%E8%B5%9B/"/>
    
      <category term="猪队友坑死人" scheme="https://www.windsings.com/tags/%E7%8C%AA%E9%98%9F%E5%8F%8B%E5%9D%91%E6%AD%BB%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab8图像金字塔</title>
    <link href="https://www.windsings.com//posts/4898d2ed/"/>
    <id>https://www.windsings.com//posts/4898d2ed/</id>
    <published>2019-03-29T16:46:47.000Z</published>
    <updated>2019-03-29T16:53:34.796Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#xFF1A;&#x53C2;&#x8003;&#x300A;01_&#x79D1;&#x8F6F;&#x9AD8;&#x56FE;&#x5B9E;&#x9A8C;_&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53CA;OpenCV&#x7A0B;&#x5E8F;&#x300B;&#x6587;&#x6863;&#xFF0C;&#x5B8C;&#x6210;3&#x4E2A;&#x6269;&#x5C55;&#x5B9E;&#x9A8C;&#x3002; <a href="https://dev.tencent.com/s/acf5afe0-9080-4659-a3e7-033e1e24da58" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;">&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&amp;#xFF1A;&amp;#x53C2;&amp;#x8003;&amp;#x300A;01_&amp;#x79D1;&amp;#x8F6F;&amp;#x9AD8;&amp;#x56FE;&amp;#x5B9E;&amp;#x9A8C;_&amp;#x56FE;&amp;#x50CF;&amp;#x5904;&amp;#x7406;&amp;#x7ECF;&amp;#x5178;&amp;#x7B97;&amp;#x6CD5;&amp;#x53CA;OpenCV&amp;#x7A0B;&amp;#x5E8F;&amp;#x300B;&amp;#x6587;&amp;#x6863;&amp;#xFF0C;&amp;#x5B8C;&amp;#x6210;3&amp;#x4E2A;&amp;#x6269;&amp;#x5C55;&amp;#x5B9E;&amp;#x9A8C;&amp;#x3002; &lt;a href=&quot;https://dev.tencent.com/s/acf5afe0-9080-4659-a3e7-033e1e24da58&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab7皮肤检测</title>
    <link href="https://www.windsings.com//posts/b148748/"/>
    <id>https://www.windsings.com//posts/b148748/</id>
    <published>2019-03-29T16:46:42.000Z</published>
    <updated>2019-03-29T16:53:34.796Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#xFF1A;&#x53C2;&#x8003;&#x300A;01_&#x79D1;&#x8F6F;&#x9AD8;&#x56FE;&#x5B9E;&#x9A8C;_&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53CA;OpenCV&#x7A0B;&#x5E8F;&#x300B;&#x6587;&#x6863;&#xFF0C;&#x5B8C;&#x6210;3&#x4E2A;&#x6269;&#x5C55;&#x5B9E;&#x9A8C;&#x3002; <a href="https://dev.tencent.com/s/71e6dab8-872b-4451-af0c-e4cd56232ec2" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x76AE;&#x80A4;&#x68C0;&#x6D4B;">&#x76AE;&#x80A4;&#x68C0;&#x6D4B;</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&amp;#xFF1A;&amp;#x53C2;&amp;#x8003;&amp;#x300A;01_&amp;#x79D1;&amp;#x8F6F;&amp;#x9AD8;&amp;#x56FE;&amp;#x5B9E;&amp;#x9A8C;_&amp;#x56FE;&amp;#x50CF;&amp;#x5904;&amp;#x7406;&amp;#x7ECF;&amp;#x5178;&amp;#x7B97;&amp;#x6CD5;&amp;#x53CA;OpenCV&amp;#x7A0B;&amp;#x5E8F;&amp;#x300B;&amp;#x6587;&amp;#x6863;&amp;#xFF0C;&amp;#x5B8C;&amp;#x6210;3&amp;#x4E2A;&amp;#x6269;&amp;#x5C55;&amp;#x5B9E;&amp;#x9A8C;&amp;#x3002; &lt;a href=&quot;https://dev.tencent.com/s/71e6dab8-872b-4451-af0c-e4cd56232ec2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab6图形学变换</title>
    <link href="https://www.windsings.com//posts/5c4cf636/"/>
    <id>https://www.windsings.com//posts/5c4cf636/</id>
    <published>2019-03-29T16:46:37.000Z</published>
    <updated>2019-03-29T16:53:34.796Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#xFF1A;&#x53C2;&#x8003;&#x300A;01_&#x79D1;&#x8F6F;&#x9AD8;&#x56FE;&#x5B9E;&#x9A8C;_&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53CA;OpenCV&#x7A0B;&#x5E8F;&#x300B;&#x6587;&#x6863;&#xFF0C;&#x5B8C;&#x6210;3&#x4E2A;&#x6269;&#x5C55;&#x5B9E;&#x9A8C;&#x3002; <a href="https://dev.tencent.com/s/252d3c16-730a-4db8-b8ca-4ca69485e5f9" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x81A8;&#x80C0;">&#x81A8;&#x80C0;</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&amp;#xFF1A;&amp;#x53C2;&amp;#x8003;&amp;#x300A;01_&amp;#x79D1;&amp;#x8F6F;&amp;#x9AD8;&amp;#x56FE;&amp;#x5B9E;&amp;#x9A8C;_&amp;#x56FE;&amp;#x50CF;&amp;#x5904;&amp;#x7406;&amp;#x7ECF;&amp;#x5178;&amp;#x7B97;&amp;#x6CD5;&amp;#x53CA;OpenCV&amp;#x7A0B;&amp;#x5E8F;&amp;#x300B;&amp;#x6587;&amp;#x6863;&amp;#xFF0C;&amp;#x5B8C;&amp;#x6210;3&amp;#x4E2A;&amp;#x6269;&amp;#x5C55;&amp;#x5B9E;&amp;#x9A8C;&amp;#x3002; &lt;a href=&quot;https://dev.tencent.com/s/252d3c16-730a-4db8-b8ca-4ca69485e5f9&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab5频域滤波</title>
    <link href="https://www.windsings.com//posts/6e84f7a7/"/>
    <id>https://www.windsings.com//posts/6e84f7a7/</id>
    <published>2019-03-24T18:23:26.000Z</published>
    <updated>2019-03-24T19:04:46.094Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/5167be5b-f5ed-4e9c-a25d-21a0676eb26d" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/08f3d6e9-4e8a-4034-ab84-eeeac896585f" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;-dft-&#x548C;-idft">&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684; DFT &#x548C; IDFT</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/5167be5b-f5ed-4e9c-a25d-21a0676eb26d&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/08f3d6e9-4e8a-4034-ab84-eeeac896585f&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab4图像去噪</title>
    <link href="https://www.windsings.com//posts/1983c731/"/>
    <id>https://www.windsings.com//posts/1983c731/</id>
    <published>2019-03-24T18:23:23.000Z</published>
    <updated>2019-03-24T19:04:45.061Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/735198c6-c797-41df-aedb-f6f504769917" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/58e3d1da-2ad6-466a-b8ef-e6314949c91e" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x5747;&#x503C;&#x6EE4;&#x6CE2;">&#x5747;&#x503C;&#x6EE4;&#x6CE2;</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/735198c6-c797-41df-aedb-f6f504769917&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/58e3d1da-2ad6-466a-b8ef-e6314949c91e&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab3空域滤波</title>
    <link href="https://www.windsings.com//posts/87e75292/"/>
    <id>https://www.windsings.com//posts/87e75292/</id>
    <published>2019-03-24T18:23:19.000Z</published>
    <updated>2019-03-24T19:04:46.831Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/36e36407-fb10-42c8-b308-a7e36c9df96f" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/0687d410-1b36-4cf5-a19c-0bff78962fa0" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x5229;&#x7528;&#x5747;&#x503C;&#x6A21;&#x677F;&#x5E73;&#x6ED1;&#x7070;&#x5EA6;&#x56FE;&#x50CF;">&#x5229;&#x7528;&#x5747;&#x503C;&#x6A21;&#x677F;&#x5E73;&#x6ED1;&#x7070;&#x5EA6;&#x56FE;&#x50CF;</h1><p>&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF1A; &#x5229;&#x7528; OpenCV &#x5BF9;&#x56FE;&#x50CF;&#x50CF;&#x7D20;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF0C; &#x5206;&#x522B;&#x5229;&#x7528; 3*3&#x3001; 5*5 &#x548C; 9*9 &#x5C3A;&#x5BF8;&#x7684;&#x5747;&#x503C;&#x6A21;&#x677F;&#x5E73;&#x6ED1;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/36e36407-fb10-42c8-b308-a7e36c9df96f&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/0687d410-1b36-4cf5-a19c-0bff78962fa0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab2直方图均衡</title>
    <link href="https://www.windsings.com//posts/f0e06204/"/>
    <id>https://www.windsings.com//posts/f0e06204/</id>
    <published>2019-03-24T18:19:19.000Z</published>
    <updated>2019-03-24T19:06:42.458Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/28cb7094-afd7-40d4-bed0-7f32c8a62a8d" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/819824a3-995a-46eb-a040-957e52154096" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x8BA1;&#x7B97;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x76F4;&#x65B9;&#x56FE;">&#x8BA1;&#x7B97;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x76F4;&#x65B9;&#x56FE;</h1><p>&#x53CD;&#x6B63;&#x4E5F;&#x6CA1;&#x4EBA;&#x770B;&#xFF0C;&#x90FD;&#x60F3;&#x76F4;&#x63A5;&#x8981;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x5077;&#x61D2;&#x4EE5;&#x540E;&#x518D;&#x5199;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/28cb7094-afd7-40d4-bed0-7f32c8a62a8d&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/819824a3-995a-46eb-a040-957e52154096&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab1图像灰度变换</title>
    <link href="https://www.windsings.com//posts/3b2efaf5/"/>
    <id>https://www.windsings.com//posts/3b2efaf5/</id>
    <published>2019-03-22T13:38:52.000Z</published>
    <updated>2020-07-02T10:54:06.255Z</updated>
    
    <content type="html"><![CDATA[<p>&#x9AD8;&#x7EA7;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7B2C;&#x4E00;&#x6B21;&#x8BD5;&#x9A8C;&#xFF0C;&#x73AF;&#x5883;&#x914D;&#x7F6E;&#x53CA;&#x4EE3;&#x7801;&#x3002;</p><p><a href="https://dev.tencent.com/s/611b9e92-62bc-40a5-b958-2fb4d297ed8e" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/1c465c3e-8049-4a6a-91e1-5ca8ba250f66" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x73AF;&#x5883;&#x914D;&#x7F6E;">&#x73AF;&#x5883;&#x914D;&#x7F6E;</h1><p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>OpenCV&#x666E;&#x901A;&#x7248;&#xFF08;&#x6CA1;&#x6709;contrib&#x7684;&#xFF09;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x597D;&#x914D;&#x7F6E;&#x7684;&#xFF0C;&#x5177;&#x4F53;&#x5982;&#x4F55;&#x914D;&#x7F6E;&#x4E0D;&#x518D;&#x5570;&#x55E6;&#x4E86;&#x3002;&#x4E0D;&#x8FC7;&#x5728;&#x6211;&#x5199;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF08;2019.3.22&#xFF09;&#x65F6;&#xFF0C;OpenCV4&#x7684;&#x8D44;&#x6599;&#x8FD8;&#x662F;&#x5F88;&#x5C11;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x592A;&#x5EFA;&#x8BAE;&#x8FD9;&#x4E48;&#x65E9;&#x7684;&#x7528;&#x6700;&#x65B0;&#x7248;&#x3002;</p><p>&#x5728;OpenCV4&#x4E2D;&#xFF0C;&#x79FB;&#x9664;&#x4E86;&#x597D;&#x591A;&#x8001;&#x65E7;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5176;&#x548C;OpenCV2&#x517C;&#x5BB9;&#x6027;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x597D;&#x3002;</p><h1 id="&#x5229;&#x7528;-opencv-&#x8BFB;&#x53D6;&#x56FE;&#x50CF;">&#x5229;&#x7528; OpenCV &#x8BFB;&#x53D6;&#x56FE;&#x50CF;</h1><p>&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF1A;&#x7528;OpenCV&#x6253;&#x5F00;&#x56FE;&#x50CF;&#xFF0C;&#x5E76;&#x5728;&#x7A97;&#x53E3;&#x663E;&#x793A;&#x3002;</p><p>&#x5728;OpenCV4&#x4E2D;&#xFF0C;&#x6211;&#x6CA1;&#x6709;&#x627E;&#x5230;<strong>cvLoadImage</strong>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;imread&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x8BFB;&#x53D6;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5728;VS2017&#x4E0B;&#xFF0C;waitKey&#x4E4B;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x52A0;destroyAllWindows()&#xFF0C;&#x4F1A;&#x62A5;&#x9519;&#x3002;</p><p>&#x6240;&#x4EE5;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">loadimage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Mat image;</span><br><span class="line">    image = imread(<span class="string">&quot;lena.jpg&quot;</span>, IMREAD_COLOR); <span class="comment">// Read the file</span></span><br><span class="line">    namedWindow(<span class="string">&quot;Display window&quot;</span>, WINDOW_AUTOSIZE); <span class="comment">// Create a window for display.</span></span><br><span class="line">    imshow(<span class="string">&quot;Display window&quot;</span>, image);                <span class="comment">// Show our image inside it.</span></span><br><span class="line">    waitKey(<span class="number">0</span>); <span class="comment">// Wait for a keystroke in the window</span></span><br><span class="line">    destroyAllWindows();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;">&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;</h1><p>&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF1A;&#x8BBE;&#x7F6E;&#x5E76;&#x8C03;&#x6574;&#x9608;&#x503C;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;&#x3002;</p><p>&#x8001;&#x5E08;&#x8981;&#x6C42;&#x4E0D;&#x80FD;&#x8C03;&#x5E93;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x662F;&#x7A7A;&#x57DF;&#x4E0A;&#x7684;&#x53D8;&#x6362;&#xFF0C;&#x904D;&#x5386;&#x771F;&#x4E2A;&#x56FE;&#x50CF;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x7070;&#x5EA6;&#x503C;&#x4F4E;&#x4E8E;&#x9608;&#x503C;&#x7684;&#x7F6E;&#x4E3A;0&#xFF0C;&#x628A;&#x9AD8;&#x4E8E;&#x9608;&#x503C;&#x7684;&#x7F6E;&#x4E3A;255&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = image.clone();</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x884C;&#x4EE3;&#x7801;&#x8868;&#x793A;&#x5BF9;image&#x8FDB;&#x884C;&#x6DF1;&#x62F7;&#x8D1D;&#xFF0C;&#x503C;&#x590D;&#x5236;&#x3002;</p><p>&#x5728;&#x540E;&#x9762;&#x7684;&#x5B9E;&#x9A8C;&#x4E2D;&#xFF0C;&#x6211;&#x6709;&#x65F6;&#x5019;&#x4E0D;&#x52A0;namedWindow&#xFF0C;&#x5176;&#x5B9E;&#x4E5F;&#x80FD;&#x6B63;&#x5E38;&#x7684;&#x663E;&#x793A;&#x56FE;&#x50CF;&#xFF0C;&#x4E5F;&#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#x3002;</p><p>&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x4EE3;&#x7801;&#x662F;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Binarization</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Mat image,res;</span><br><span class="line">    image = imread(<span class="string">&quot;lena.jpg&quot;</span>, <span class="number">0</span>); <span class="comment">// &#x7070;&#x5EA6;&#x8BFB;&#x5165;</span></span><br><span class="line">    namedWindow(<span class="string">&quot;&#x539F;&#x56FE;&quot;</span>, WINDOW_AUTOSIZE); <span class="comment">// Create a window for display.</span></span><br><span class="line">    imshow(<span class="string">&quot;&#x539F;&#x56FE;&quot;</span>, image);                <span class="comment">// Show our image inside it.</span></span><br><span class="line">    </span><br><span class="line">    res = image.clone();</span><br><span class="line">    <span class="keyword">int</span> gray;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.rows; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; res.cols; j++)</span><br><span class="line">        {</span><br><span class="line">            gray = res.at&lt;uchar&gt;(i, j);</span><br><span class="line">            <span class="keyword">if</span> (gray &gt; <span class="number">80</span>)</span><br><span class="line">                gray = <span class="number">255</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                gray = <span class="number">0</span>;</span><br><span class="line">            res.at&lt;uchar&gt;(i, j) = saturate_cast&lt;uchar&gt;(gray);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//threshold(image, res, 80, 255, 0);</span></span><br><span class="line">    namedWindow(<span class="string">&quot;&#x4E8C;&#x503C;&#x5316;&#x7684;&#x56FE;&quot;</span>, WINDOW_AUTOSIZE); <span class="comment">// Create a window for display.</span></span><br><span class="line">    imshow(<span class="string">&quot;&#x4E8C;&#x503C;&#x5316;&#x7684;&#x56FE;&quot;</span>, res);                <span class="comment">// Show our image inside it.</span></span><br><span class="line">    waitKey(<span class="number">0</span>); <span class="comment">// Wait for a keystroke in the window</span></span><br><span class="line">    destroyAllWindows();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x9AD8;&amp;#x7EA7;&amp;#x56FE;&amp;#x50CF;&amp;#x5904;&amp;#x7406;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x8BD5;&amp;#x9A8C;&amp;#xFF0C;&amp;#x73AF;&amp;#x5883;&amp;#x914D;&amp;#x7F6E;&amp;#x53CA;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/611b9e92-62bc-40a5-b958-2fb4d297ed8e&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/1c465c3e-8049-4a6a-91e1-5ca8ba250f66&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>寒假算法基础集训营1题解</title>
    <link href="https://www.windsings.com//posts/4714a7e1/"/>
    <id>https://www.windsings.com//posts/4714a7e1/</id>
    <published>2019-02-26T17:00:25.000Z</published>
    <updated>2020-07-02T10:54:21.994Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5BD2;&#x5047;&#x91CC;&#x505A;&#x7684;&#x6BD4;&#x8D5B;&#xFF0C;&#x88AB;&#x5927;&#x4F6C;&#x6309;&#x5728;&#x5730;&#x4E0A;&#x6469;&#x64E6;&#xFF0C;&#x5B66;&#x5230;&#x4E86;&#x4E0D;&#x5C11;&#x4E1C;&#x897F;&#x3002;&#x6545;&#x8BB0;&#x5F55;&#x4E4B;&#x3002;</p><p><a href="https://ac.nowcoder.com/acm/contest/317#question" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a> <a href="https://static.nowcoder.com/pdf/ncwc/%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E8%AE%AD%E7%BB%83%E8%90%A51%E9%A2%98%E8%A7%A3.pdf" target="_blank" rel="noopener">&#x5B98;&#x65B9;&#x9898;&#x89E3;</a> <a id="more"></a></p><h1 id="&#x5C0F;a&#x7684;&#x8BA1;&#x7B97;&#x5668;">&#x5C0F;a&#x7684;&#x8BA1;&#x7B97;&#x5668;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x7B7E;&#x5230;&#x9898;&#xFF0C;&#x6CA1;&#x5565;&#x597D;&#x8BF4;&#x7684;&#x3002;&#x76F4;&#x63A5;&#x6A21;&#x62DF;&#x53EF;&#x4EE5;&#x505A;&#x3002;</p><h2 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> o;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> temp;</span><br><span class="line">}op;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> num;</span><br><span class="line"><span class="built_in">vector</span>&lt;op&gt; V;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; num;</span><br><span class="line">    V.resize(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; V[i].o&gt;&gt;V[i].temp;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (V[i].o==<span class="number">1</span>)<span class="comment">//+</span></span><br><span class="line">        {</span><br><span class="line">            num -= V[i].temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (V[i].o == <span class="number">2</span>)<span class="comment">//-</span></span><br><span class="line">        {</span><br><span class="line">            num += V[i].temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (V[i].o == <span class="number">3</span>)<span class="comment">//*</span></span><br><span class="line">        {</span><br><span class="line">            num /= V[i].temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (V[i].o == <span class="number">4</span>)<span class="comment">//&#xF7;</span></span><br><span class="line">        {</span><br><span class="line">            num *= V[i].temp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;2.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5C0F;a&#x4E0E;204">&#x5C0F;a&#x4E0E;&quot;204&quot;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;-1">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x7528;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x505A;&#xFF0C;&#x5C3D;&#x91CF;&#x8BA9;&#x524D;&#x540E;&#x4E24;&#x4E2A;&#x6570;&#x7684;&#x5DEE;&#x503C;&#x6700;&#x5927;&#x3002;</p><ol type="1"><li>&#x5F53;&#x524D;&#x9762;&#x7684;&#x6570;&#x4E3A;0&#x65F6;&#xFF0C;&#x5C3D;&#x91CF;&#x9009;&#x62E9;4&#x3002;</li><li>&#x5F53;&#x524D;&#x9762;&#x7684;&#x6570;&#x4E3A;2&#x65F6;&#xFF0C;&#x9009;&#x62E9;0&#x548C;4&#x4E2D;&#xFF0C;&#x5269;&#x4F59;&#x8F83;&#x591A;&#x7684;&#x90A3;&#x4E2A;&#x3002;</li><li>&#x5F53;&#x524D;&#x9762;&#x7684;&#x6570;&#x4E3A;4&#x65F6;&#xFF0C;&#x5C3D;&#x91CF;&#x9009;&#x62E9;0&#x3002;</li></ol><h2 id="&#x4EE3;&#x7801;-1">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">0</span>, num4 = <span class="number">0</span>, num0 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n,temp;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">2</span>)</span><br><span class="line">            num2++;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">0</span>)</span><br><span class="line">            num0++;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">4</span>)</span><br><span class="line">            num4++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> cur = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (cur==<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num4 &gt; <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                num4--;</span><br><span class="line">                res += <span class="number">16</span>;</span><br><span class="line">                cur = <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (num2&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                num2--;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                cur = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (cur==<span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num4&gt;num0)</span><br><span class="line">            {</span><br><span class="line">                num4--;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                cur = <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (num0 &gt; num4)</span><br><span class="line">            {</span><br><span class="line">                num0--;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                cur = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (cur==<span class="number">4</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num0&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                cur = <span class="number">0</span>;</span><br><span class="line">                res += <span class="number">16</span>;</span><br><span class="line">                num0--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (num2&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                cur = <span class="number">2</span>;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                num2--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;3.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5C0F;a&#x4E0E;&#x661F;&#x9645;&#x63A2;&#x7D22;">&#x5C0F;a&#x4E0E;&#x661F;&#x9645;&#x63A2;&#x7D22;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;-2">&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x5F88;&#x6709;&#x610F;&#x601D;&#x7684;&#x4E00;&#x4E2A;&#x9898;&#xFF0C;&#x8FD9;&#x4E2A;&#x9898;&#x8003;&#x5230;&#x4E86;&#x5F02;&#x6216;&#x7684;&#x6027;&#x8D28;&#x548C;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x3002;&#x662F;&#x80CC;&#x5305;&#x95EE;&#x9898;&#x7684;&#x53D8;&#x79CD;&#xFF0C;&#x975E;&#x5E38;&#x5DE7;&#x5999;&#x3002;</p><p>&#x5B98;&#x65B9;&#x9898;&#x89E3;&#x4E2D;&#x63D0;&#x5230;&#xFF0C;DP&#x7684;&#x6570;&#x7EC4;&#x4E0D;&#x80FD;&#x53EA;&#x5F00;&#x5230;3000&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#xFF0C;pi&#x5728;[1,3000]&#xFF0C;3000&#x901A;&#x8FC7;&#x5F02;&#x6216;&#xFF0C;&#x6700;&#x5927;&#x53EF;&#x5230;&#x8FBE;&#x7684;&#x6570;&#x662F;4095&#x3002;&#x6240;&#x4EE5;dp&#x6570;&#x7EC4;&#x6700;&#x5C11;&#x4E5F;&#x8981;4096&#x3002;&#x4EE3;&#x7801;&#x4E2D;&#x5F00;&#x5230;&#x4E86;4100&#x3002;</p><p>&#x5173;&#x952E;&#x70B9;&#xFF1A; 1. dp&#x6570;&#x7EC4;&#x4E0D;&#x80FD;&#x53EA;&#x5F00;3000&#xFF0C;&#x56E0;&#x4E3A;3000&#x901A;&#x8FC7;&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#xFF0C;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x5230;4095&#x3002; 2. dp&#x6570;&#x7EC4;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x7EF4;&#x7684;&#x3002; 3. &#x6838;&#x5FC3;&#x4EE3;&#x7801;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x56E0;&#x4E3A;&#x6700;&#x5927;&#x662F;3000&#xFF0C;&#x6839;&#x636E;&#x5F02;&#x6216;&#xFF0C;&#x6700;&#x5927;&#x503C;&#x662F;4095</span></span><br><span class="line">dp[V[<span class="number">0</span>] ^ V[n - <span class="number">1</span>]] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">4095</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (V[i]&lt;V[<span class="number">0</span>]&amp;&amp;V[i]&gt;V[n<span class="number">-1</span>])<span class="comment">//&#x6EE1;&#x8DB3;&#x4E2D;&#x8F6C;&#x6761;&#x4EF6;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (dp[j^V[i]])</span><br><span class="line">            {</span><br><span class="line">                dp[j] = dp[j^V[i]];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x9010;&#x6B65;&#x5206;&#x6790;&#xFF0C;&#x5728;&#x6700;&#x5F00;&#x59CB; &#xFF0C;&#x628A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[V[<span class="number">0</span>] ^ V[n - <span class="number">1</span>]] = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure></p><p>&#x8868;&#x793A;&#x53EA;&#x8003;&#x7B2C;&#x4E00;&#x4E2A;&#x548C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#xFF0C;&#x53EF;&#x4EE5;&#x5230;&#x8FBE;&#x7684;&#x503C;&#x3002;<br>&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x6027;&#x8D28;&#xFF1A;<br>&#x5982;&#x679C;A&#x2295;B=D&#x2295;E=C&#x3002;&#x5219;E=A&#x2295;B&#x2295;D.</p><p>&#x6240;&#x4EE5;&#x5728;&#x7B2C;&#x4E8C;&#x6B21;&#x5FAA;&#x73AF;&#xFF0C;&#x5728;0~4095&#x4E2D;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x8BB0;&#x4E3A;t&#xFF0C;&#x4F7F;&#x5F97;t&#x2295;V[1]=C&#x3002;<br>&#x8FD9;&#x6837;&#xFF0C;&#x8FD9;&#x4E2A;t&#x5C31;&#x662F;V[0]&#x2295;V[1]&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x7684;&#x503C;&#x3002;</p><p>&#x7136;&#x540E;&#x4F9D;&#x6B21;&#x7C7B;&#x63A8;&#xFF0C;&#x4E0D;&#x65AD;&#x4EE5;&#x4E4B;&#x524D;&#x5F02;&#x6216;&#x7684;&#x7ED3;&#x679C;&#x4F5C;&#x4E3A;C&#xFF0C;&#x4EE5;&#x4E0D;&#x540C;&#x7684;V[i]&#xFF0C;&#x6765;&#x627E;&#x4E0D;&#x540C;&#x7684;t&#x3002;<br>&#x6700;&#x540E;&#x5728;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x53D6;&#x5F97;&#x7684;&#x5F02;&#x6216;&#x503C;&#x4E2D;&#xFF0C;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x7684;&#x3002; &#x200B;<br>&#x56E0;&#x4E3A;&#x521D;&#x59CB;&#x503C;&#x662F;V[0]&#x2295;V[n-1]&#xFF0C;&#x6240;&#x4EE5;&#x4E0A;&#x8FF0;&#x5BFB;&#x627E;&#x7684;t&#x90FD;&#x662F;&#x98DE;&#x8239;&#x5230;&#x8FBE;&#x7684;&#x4E2D;&#x95F4;&#x661F;&#x7403;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x56E0;&#x4E3A;&#x521D;&#x503C;&#x662F;V[0]&#x2295;V[n-1]&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x540E;&#x4FDD;&#x8BC1;&#x4E00;&#x5B9A;&#x80FD;&#x5230;&#x8FBE;n&#x53F7;&#x661F;&#x7403;&#x3002;</p><h2 id="&#x4EE3;&#x7801;-2">&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n;<span class="comment">//&#x661F;&#x7403;&#x6570;</span></span><br><span class="line">    <span class="keyword">int</span> t;<span class="comment">//&#x8010;&#x4E45;&#x5EA6;</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;V(n),mid(n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; dp(<span class="number">4100</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; V[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (V[n - <span class="number">1</span>] &gt;= V[<span class="number">0</span>])<span class="comment">//&#x4E0D;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (V[<span class="number">0</span>] ? V[<span class="number">0</span>] : <span class="number">-1</span>) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//&#x5982;&#x679C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x661F;&#x7403;&#xFF0C;&#x5219;&#x770B;V[0]&#x662F;&#x5426;&#x4E3A;0&#xFF0C;&#x5982;&#x679C;&#x4E3A;0&#xFF0C;&#x8F93;&#x51FA;-1</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x5C06;&#x6240;&#x6709;&#x80FD;&#x4F5C;&#x4E3A;&#x4E2D;&#x8F6C;&#x7AD9;&#x7684;&#x661F;&#x7403;&#x52A0;&#x5165;&#x8FDB;&#x6765;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x56E0;&#x4E3A;&#x6700;&#x5927;&#x662F;3000&#xFF0C;&#x6839;&#x636E;&#x5F02;&#x6216;&#xFF0C;&#x6700;&#x5927;&#x503C;&#x662F;4095</span></span><br><span class="line">    dp[V[<span class="number">0</span>] ^ V[n - <span class="number">1</span>]] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">4095</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (V[i]&lt;V[<span class="number">0</span>]&amp;&amp;V[i]&gt;V[n<span class="number">-1</span>])<span class="comment">//&#x6EE1;&#x8DB3;&#x4E2D;&#x8F6C;&#x6761;&#x4EF6;</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (dp[j^V[i]])</span><br><span class="line">                {</span><br><span class="line">                    dp[j] = dp[j^V[i]];</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4095</span>; i &gt;<span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (dp[i])</span><br><span class="line">        { </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5BD2;&amp;#x5047;&amp;#x91CC;&amp;#x505A;&amp;#x7684;&amp;#x6BD4;&amp;#x8D5B;&amp;#xFF0C;&amp;#x88AB;&amp;#x5927;&amp;#x4F6C;&amp;#x6309;&amp;#x5728;&amp;#x5730;&amp;#x4E0A;&amp;#x6469;&amp;#x64E6;&amp;#xFF0C;&amp;#x5B66;&amp;#x5230;&amp;#x4E86;&amp;#x4E0D;&amp;#x5C11;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&amp;#x6545;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E4B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/317#question&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x9898;&amp;#x76EE;&amp;#x94FE;&amp;#x63A5;&lt;/a&gt; &lt;a href=&quot;https://static.nowcoder.com/pdf/ncwc/%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E8%AE%AD%E7%BB%83%E8%90%A51%E9%A2%98%E8%A7%A3.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B98;&amp;#x65B9;&amp;#x9898;&amp;#x89E3;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="https://www.windsings.com/categories/ACM/"/>
    
    
      <category term="寒假比赛" scheme="https://www.windsings.com/tags/%E5%AF%92%E5%81%87%E6%AF%94%E8%B5%9B/"/>
    
      <category term="非官方题解" scheme="https://www.windsings.com/tags/%E9%9D%9E%E5%AE%98%E6%96%B9%E9%A2%98%E8%A7%A3/"/>
    
      <category term="给大佬递茶" scheme="https://www.windsings.com/tags/%E7%BB%99%E5%A4%A7%E4%BD%AC%E9%80%92%E8%8C%B6/"/>
    
      <category term="被按在地上摩擦" scheme="https://www.windsings.com/tags/%E8%A2%AB%E6%8C%89%E5%9C%A8%E5%9C%B0%E4%B8%8A%E6%91%A9%E6%93%A6/"/>
    
  </entry>
  
  <entry>
    <title>算法导论复习笔记</title>
    <link href="https://www.windsings.com//posts/db76c882/"/>
    <id>https://www.windsings.com//posts/db76c882/</id>
    <published>2018-12-31T11:23:08.000Z</published>
    <updated>2019-01-20T08:40:06.431Z</updated>
    
    <content type="html"><![CDATA[<p>&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x590D;&#x4E60;&#x7B14;&#x8BB0;&#x3002; <a id="more"></a><br>&#x5982;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x8FD8;&#x8BF7;&#x591A;&#x591A;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#x3002;</p><h1 id="&#x7EA2;&#x9ED1;&#x6811;">&#x7EA2;&#x9ED1;&#x6811;</h1><h2 id="&#x6027;&#x8D28;">&#x6027;&#x8D28;</h2><p>&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x5982;&#x679C;&#x6EE1;&#x8DB3;&#x4E0B;&#x9762;&#x7684;&#x7EA2;&#x9ED1;&#x6027;&#x8D28;&#xFF0C;&#x5219;&#x4E3A;&#x4E00;&#x68F5;&#x7EA2;&#x9ED1;&#x6811;&#xFF1A;</p><ol type="1"><li>&#x6BCF;&#x4E2A;&#x7ED3;&#x70B9;&#x6216;&#x662F;&#x7EA2;&#x7684;&#xFF0C;&#x6216;&#x662F;&#x9ED1;&#x7684;&#x3002;</li><li>&#x6839;&#x7ED3;&#x70B9;&#x662F;&#x9ED1;&#x7684;&#x3002;</li><li>&#x6BCF;&#x4E2A;&#x53F6;&#x7ED3;&#x70B9;(NIL)&#x662F;&#x9ED1;&#x7684;</li><li>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x662F;&#x7EA2;&#x7684;&#xFF0C;&#x5219;&#x5B83;&#x7684;&#x4E24;&#x4E2A;&#x513F;&#x5B50;&#x90FD;&#x662F;&#x9ED1;&#x7684;&#x3002;</li><li>&#x5BF9;&#x6BCF;&#x4E2A;&#x7ED3;&#x70B9;&#xFF0C;&#x4ECE;&#x8BE5;&#x7ED3;&#x70B9;&#x5230;&#x5176;&#x5B50;&#x5B59;&#x7ED3;&#x70B9;&#x7684;&#x6240;&#x6709;&#x8DEF;&#x5F84;&#x4E0A;&#x5305;&#x542B;&#x76F8;&#x540C;&#x6570;&#x76EE;&#x7684;&#x9ED1;&#x7ED3;&#x70B9;&#x3002;</li></ol><h2 id="&#x5F15;&#x7406;">&#x5F15;&#x7406;</h2><p><img src="/posts/db76c882/&#x7EA2;&#x9ED1;&#x6811;&#x5F15;&#x7406;.png"></p><h2 id="&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x6027;&#x8D28;">&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x6027;&#x8D28;</h2><p><img src="/posts/db76c882/&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x6027;&#x8D28;.png"></p><h2 id="&#x64CD;&#x4F5C;">&#x64CD;&#x4F5C;</h2><p>&#x8981;&#x6C42;&#x662F;&#x77E5;&#x9053;&#x5177;&#x4F53;&#x7684;&#x64CD;&#x4F5C;&#x548C;&#x65F6;&#x95F4;&#xFF0C;&#x6392;&#x9664;&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053;&#x4ED6;&#x4FE9;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><h3 id="&#x65CB;&#x8F6C;">&#x65CB;&#x8F6C;</h3><p><img src="/posts/db76c882/&#x7EA2;&#x9ED1;&#x6811;&#x65CB;&#x8F6C;1.png"></p><h1 id="&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;">&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;</h1><p>OneNote&#x751F;&#x6210;&#x7684;&#x56FE;&#x7247;~ <img src="/posts/db76c882/&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;.jpg" alt="&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x590D;&#x4E60;&#x7B14;&#x8BB0;"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x7B97;&amp;#x6CD5;&amp;#x5BFC;&amp;#x8BBA;&amp;#x590D;&amp;#x4E60;&amp;#x7B14;&amp;#x8BB0;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://www.windsings.com/categories/algorithm/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="笔记" scheme="https://www.windsings.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="复习" scheme="https://www.windsings.com/tags/%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="数据结构" scheme="https://www.windsings.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
