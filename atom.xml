<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>且听风吟</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.windsings.com/"/>
  <updated>2018-07-17T13:11:19.667Z</updated>
  <id>https://www.windsings.com/</id>
  
  <author>
    <name>Wind</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PAT-A-1095 Cars on Campus (30)</title>
    <link href="https://www.windsings.com//posts/18272c90/"/>
    <id>https://www.windsings.com//posts/18272c90/</id>
    <published>2018-07-17T12:54:06.000Z</published>
    <updated>2018-07-17T13:11:19.667Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>校园里的汽车<br><a id="more"></a></p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li>这个题时间限制的很紧，尽量用字符数组代替string，使用scanf代替cin。</li><li>最后在给出时间的时候是按升序给出，因此可利用此条件，缩小查找范围。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> ID[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> time = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">&#125;node;</span><br><span class="line"><span class="keyword">int</span> N, K, f;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; input, car;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(a.ID, b.ID) != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">strcmp</span>(a.ID, b.ID) &lt; <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.time &lt; b.time;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.time &lt; b.time;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; K;</span><br><span class="line">    input.resize(N);</span><br><span class="line">    <span class="keyword">int</span> time2, h, m, s;</span><br><span class="line">    <span class="keyword">char</span> status[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d:%d:%d %s\n"</span>, input[i].ID, &amp;h, &amp;m, &amp;s, &amp;status);</span><br><span class="line">        input[i].time = h * <span class="number">3600</span> + m * <span class="number">60</span> + s;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(status, <span class="string">"in"</span>) == <span class="number">0</span>)</span><br><span class="line">            input[i].flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> input[i].flag = <span class="number">-1</span>;<span class="comment">//进进出出</span></span><br><span class="line">    &#125;</span><br><span class="line">    sort(input.begin(), input.end(), cmp1);</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; lasttime;</span><br><span class="line">    <span class="keyword">int</span> maxtime = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(input[i].ID, input[i + <span class="number">1</span>].ID) == <span class="number">0</span> &amp;&amp; input[i].flag == <span class="number">1</span> &amp;&amp; input[i + <span class="number">1</span>].flag == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            car.push_back(input[i]); car.push_back(input[i + <span class="number">1</span>]);</span><br><span class="line">            lasttime[input[i].ID] += (input[i + <span class="number">1</span>].time - input[i].time);</span><br><span class="line">            <span class="keyword">if</span> (maxtime &lt; lasttime[input[i].ID])</span><br><span class="line">                maxtime = lasttime[input[i].ID];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(car.begin(), car.end(), cmp2);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; carInSchool(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; car.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">            carInSchool[i] += car[i].flag;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            carInSchool[i] = carInSchool[i - <span class="number">1</span>] + car[i].flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> temp,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d:%d:%d"</span>, &amp;h, &amp;m, &amp;s);</span><br><span class="line">        time2 = h * <span class="number">3600</span> + m * <span class="number">60</span> + s;</span><br><span class="line">        <span class="keyword">for</span> (j=temp; j &lt; car.size(); j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (car[j].time &gt; time2)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, carInSchool[j - <span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (j == car.size() - <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; carInSchool[j] &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//最后一个了，有多少车就算多少辆车</span></span><br><span class="line">        &#125;</span><br><span class="line">        temp = j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = lasttime.begin(); i != lasttime.end(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i-&gt;second == maxtime)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i-&gt;first &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d"</span>, maxtime / <span class="number">3600</span>, (maxtime % <span class="number">3600</span>) / <span class="number">60</span>, maxtime % <span class="number">60</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">16</span> <span class="number">7</span></span><br><span class="line">JH007BD <span class="number">18</span>:<span class="number">00</span>:<span class="number">01</span> in</span><br><span class="line">ZD00001 <span class="number">11</span>:<span class="number">30</span>:<span class="number">08</span> out</span><br><span class="line">DB8888A <span class="number">13</span>:<span class="number">00</span>:<span class="number">00</span> out</span><br><span class="line">ZA3Q625 <span class="number">23</span>:<span class="number">59</span>:<span class="number">50</span> out</span><br><span class="line">ZA133CH <span class="number">10</span>:<span class="number">23</span>:<span class="number">00</span> in</span><br><span class="line">ZD00001 <span class="number">04</span>:<span class="number">09</span>:<span class="number">59</span> in</span><br><span class="line">JH007BD <span class="number">05</span>:<span class="number">09</span>:<span class="number">59</span> in</span><br><span class="line">ZA3Q625 <span class="number">11</span>:<span class="number">42</span>:<span class="number">01</span> out</span><br><span class="line">JH007BD <span class="number">05</span>:<span class="number">10</span>:<span class="number">33</span> in</span><br><span class="line">ZA3Q625 <span class="number">06</span>:<span class="number">30</span>:<span class="number">50</span> in</span><br><span class="line">JH007BD <span class="number">12</span>:<span class="number">23</span>:<span class="number">42</span> out</span><br><span class="line">ZA3Q625 <span class="number">23</span>:<span class="number">55</span>:<span class="number">00</span> in</span><br><span class="line">JH007BD <span class="number">12</span>:<span class="number">24</span>:<span class="number">23</span> out</span><br><span class="line">ZA133CH <span class="number">17</span>:<span class="number">11</span>:<span class="number">22</span> out</span><br><span class="line">JH007BD <span class="number">18</span>:<span class="number">07</span>:<span class="number">01</span> out</span><br><span class="line">DB8888A <span class="number">06</span>:<span class="number">30</span>:<span class="number">50</span> in</span><br><span class="line"><span class="number">05</span>:<span class="number">10</span>:<span class="number">00</span></span><br><span class="line"><span class="number">06</span>:<span class="number">30</span>:<span class="number">50</span></span><br><span class="line"><span class="number">11</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">23</span>:<span class="number">42</span></span><br><span class="line"><span class="number">14</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="number">18</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="number">23</span>:<span class="number">59</span>:<span class="number">00</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">JH007BD ZD00001 <span class="number">07</span>:<span class="number">20</span>:<span class="number">09</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;校园里的汽车&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="https://www.windsings.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="Map" scheme="https://www.windsings.com/tags/Map/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1098 Insertion or Heap Sort (25)</title>
    <link href="https://www.windsings.com//posts/45a528a9/"/>
    <id>https://www.windsings.com//posts/45a528a9/</id>
    <published>2018-07-17T06:40:56.000Z</published>
    <updated>2018-07-17T07:05:10.584Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>插入排序还是堆排序<br><a id="more"></a><br>给定初试序列和经过若干趟排序的序列，这个序列是某种排序算法几次迭代之后的结果，求这是哪种排序方法。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行给出正整数N(&lt;=100)。下一行给出N个整数作为初试序列，最后一行包括N个数字的部分排序序列。假设是升序排序。所有数字见用空格隔开。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>在第一行输出是插入排序还是堆排序。即”Insertion Sort”或者”Heap Sort”。然后再运行一次这种排序，在第二行输出再运行一次之后的结果序列。</p><p>保证所有的答案都是唯一的，数字之间用空格隔开。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>相似题目：PAT-A-1089</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">101</span>], num_sort[<span class="number">101</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adjust</span><span class="params">(<span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (j&lt;=high)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j + <span class="number">1</span> &lt;= high&amp;&amp;num_sort[j] &lt; num_sort[j + <span class="number">1</span>])</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> (num_sort[i] &lt; num_sort[j])</span><br><span class="line">        &#123;</span><br><span class="line">            swap(num_sort[i], num_sort[j]);</span><br><span class="line">            i = j; j = i * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num_sort[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> isInsert = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> temp = num_sort[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> range;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (temp &gt; num_sort[i])</span><br><span class="line">        &#123;</span><br><span class="line">            range = i;</span><br><span class="line">            <span class="keyword">for</span> (; i &lt; N; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (num[i] != num_sort[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    isInsert = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;N)</span><br><span class="line">            temp = num_sort[i];</span><br><span class="line">        <span class="keyword">if</span> (isInsert == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isInsert)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Insertion Sort"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        sort(num+<span class="number">1</span>, num + range + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; num[i];</span><br><span class="line">            <span class="keyword">if</span> (i != N)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Heap Sort"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">int</span> temp = N;</span><br><span class="line">        <span class="keyword">while</span> (temp &gt;= <span class="number">2</span> &amp;&amp; num_sort[temp] &gt; num_sort[temp - <span class="number">1</span>])</span><br><span class="line">            temp--;</span><br><span class="line">        swap(num_sort[<span class="number">1</span>], num_sort[temp]);</span><br><span class="line">        adjust(<span class="number">1</span>, temp - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; num_sort[i];</span><br><span class="line">            <span class="keyword">if</span> (i != N)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Insertion Sort</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line"><span class="number">6</span> <span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">0</span> <span class="number">3</span> <span class="number">2</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">Heap Sort</span><br><span class="line"><span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;插入排序还是堆排序&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="https://www.windsings.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="插入排序" scheme="https://www.windsings.com/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    
      <category term="堆排序" scheme="https://www.windsings.com/tags/%E5%A0%86%E6%8E%92%E5%BA%8F/"/>
    
      <category term="Sort" scheme="https://www.windsings.com/tags/Sort/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1091 Acute Stroke (30)</title>
    <link href="https://www.windsings.com//posts/228299b2/"/>
    <id>https://www.windsings.com//posts/228299b2/</id>
    <published>2018-07-16T11:55:38.000Z</published>
    <updated>2018-07-16T13:47:54.227Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>急性脑猝死<br><a id="more"></a><br>给出一组脑部扫描的切片图，求超出阈值的肿瘤的总体积。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入包括一个测试用例，第一行是4个整数：M，N，L，T。其中M和N表示切片的大小，即切片在M*N的范围内，最大分辨率为1286*128。L（&lt;=60）表示切片的数量。T是阈值。</p><p>给出L个切片，切片由0和1的M*N的矩阵表示，1表示肿瘤，0表示正常。我们通过计算1的体积来来判断肿瘤的大小。大脑中可能有好几个肿瘤，只计算肿瘤大小超过阈值的部分。</p><p>判定两个点相连的依据是他们共享公共边。如下图，有6个红色像素连接到蓝色像素。<br><img src="/PAT-A-1091/1091.jpg" alt="1091"></p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出肿瘤的总体积。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>图的遍历。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li>在求下一个节点的时候，可以不用循环，将位移保存在数组中。见后边的代码。</li><li>DFS不能用递归，否则会爆栈。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DFS，非递归实现，用递归会爆栈</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Brain[<span class="number">1300</span>][<span class="number">130</span>][<span class="number">80</span>];</span><br><span class="line"><span class="keyword">int</span> M, N, L, T;</span><br><span class="line"><span class="keyword">int</span> search = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> neighbor[<span class="number">6</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line"> &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line"> &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;,</span><br><span class="line"> &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,</span><br><span class="line"> &#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;,</span><br><span class="line"> &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line"> &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">int</span> x, y, z;</span><br><span class="line">&#125;location;</span><br><span class="line"><span class="built_in">stack</span>&lt;location&gt; sta;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">while</span> (!sta.empty())</span><br><span class="line"> &#123;</span><br><span class="line">   location l = sta.top();sta.pop();</span><br><span class="line">   <span class="keyword">if</span> (Brain[l.x][l.y][l.z] == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">     search++;</span><br><span class="line">     Brain[l.x][l.y][l.z] = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">int</span> x1 = l.x + neighbor[i][<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">int</span> y1 = l.y + neighbor[i][<span class="number">1</span>];</span><br><span class="line">       <span class="keyword">int</span> z1 = l.z + neighbor[i][<span class="number">2</span>];</span><br><span class="line">       <span class="keyword">if</span> (x1 &gt;= <span class="number">0</span> &amp;&amp; x1&lt;M&amp;&amp;y1 &gt;= <span class="number">0</span> &amp;&amp; y1&lt;N&amp;&amp;z1 &gt;= <span class="number">0</span> &amp;&amp; z1&lt;L)</span><br><span class="line">       &#123;</span><br><span class="line">         sta.push(&#123; x1,y1,z1 &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; N &gt;&gt; L &gt;&gt; T;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; N; k++)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;Brain[j][k][i]);</span><br><span class="line">       <span class="comment">//cin &gt;&gt; Brain[j][k][i];</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; N; k++)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">if</span> (Brain[j][k][i] == <span class="number">1</span>)</span><br><span class="line">       &#123;</span><br><span class="line">         search = <span class="number">0</span>;</span><br><span class="line">         sta.push(&#123; j,k,i &#125;);</span><br><span class="line">         DFS();</span><br><span class="line">         <span class="keyword">if</span> (search&gt;=T)</span><br><span class="line">         &#123;</span><br><span class="line">           res += search;</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"> solution();</span><br><span class="line"> system(<span class="string">"pause"</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//BFS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">int</span> x, y, z;</span><br><span class="line">&#125;location;</span><br><span class="line"><span class="built_in">queue</span>&lt;location&gt; que;</span><br><span class="line"><span class="keyword">int</span> neighbor[<span class="number">3</span>][<span class="number">6</span>] =</span><br><span class="line">&#123;</span><br><span class="line"> &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line"> &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span> &#125;,</span><br><span class="line"> &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Brain[<span class="number">1300</span>][<span class="number">130</span>][<span class="number">80</span>];</span><br><span class="line"><span class="keyword">int</span> M, N, L, T, res=<span class="number">0</span>, temp=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">while</span> (!que.empty())</span><br><span class="line"> &#123;</span><br><span class="line">   location l = que.front(); que.pop();</span><br><span class="line">   <span class="keyword">if</span> (Brain[l.x][l.y][l.z] == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">     temp++;</span><br><span class="line">     Brain[l.x][l.y][l.z] = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">int</span> x1 = l.x + neighbor[<span class="number">0</span>][i];</span><br><span class="line">       <span class="keyword">int</span> y1 = l.y + neighbor[<span class="number">1</span>][i];</span><br><span class="line">       <span class="keyword">int</span> z1 = l.z + neighbor[<span class="number">2</span>][i];</span><br><span class="line">       <span class="keyword">if</span> (x1 &gt;= <span class="number">0</span> &amp;&amp; x1&lt;M&amp;&amp;y1 &gt;= <span class="number">0</span> &amp;&amp; y1&lt;N&amp;&amp;z1 &gt;= <span class="number">0</span> &amp;&amp; z1&lt;L)</span><br><span class="line">       &#123;</span><br><span class="line">         que.push(&#123; x1,y1,z1 &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; N &gt;&gt; L &gt;&gt; T;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; N; k++)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;Brain[j][k][i]);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; N; k++)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">if</span> (Brain[j][k][i]==<span class="number">1</span>)</span><br><span class="line">       &#123;</span><br><span class="line">         temp = <span class="number">0</span>;</span><br><span class="line">         que.push(&#123; j,k,i &#125;);</span><br><span class="line">         BFS();</span><br><span class="line">         <span class="keyword">if</span> (temp&gt;=T)</span><br><span class="line">         &#123;</span><br><span class="line">           res += temp;</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"> solution();</span><br><span class="line"> system(<span class="string">"pause"</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">26</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;急性脑猝死&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="BFS" scheme="https://www.windsings.com/tags/BFS/"/>
    
      <category term="DFS" scheme="https://www.windsings.com/tags/DFS/"/>
    
      <category term="图的遍历" scheme="https://www.windsings.com/tags/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1087 All Roads Lead to Rome (30)</title>
    <link href="https://www.windsings.com//posts/5777fec1/"/>
    <id>https://www.windsings.com//posts/5777fec1/</id>
    <published>2018-07-16T11:14:36.000Z</published>
    <updated>2018-07-16T11:22:45.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>条条大路通罗马<br><a id="more"></a><br>有好多通往罗马的线路，要找出来一条成本最低的线路，同时获得最大的快乐值。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个测试文件都有一个测试用例。第一行是两个正整数N（2 &lt;= N &lt;= 200），表示城市的数量。和K，城市对之间的路线总数。接着是起始城市的名字。</p><p>接下来的N-1行，每行是一个城市的名称和一个整数，表示出了出发城市之外，可以从该城市获得的幸福指数。</p><p>然后是K行，每行以“城市名，城市名，花费”的格式描述路线。<br>这里的城市名称是一个由3个大写英文字母组成的字符串，最终目的地是代表罗马的ROM</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，要求以最低的成本找到路线。如果路线不唯一，则输出具有最大幸福指数的路线，如果还不唯一，则输出具有最大平均幸福指数的路线。<br>测试数据保证最后一定有一个唯一的结果。</p><p>在输出的第一行中，首先输出4个数字，推荐路线中成本最低的，不同路线的数量，成本，幸福指数和平均幸福指数（仅限整数部分）。<br>然后再下一行中，输出格式为“City1-&gt; City2 - &gt; …-&gt; ROM”的路线。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>这个题和1003类似。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>Dij求最短路径+DFS，DFS从后往前遍历。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 99999999</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">201</span>][<span class="number">201</span>], weight[<span class="number">201</span>], dis[<span class="number">201</span>];</span><br><span class="line"><span class="keyword">bool</span> visit[<span class="number">201</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pre[<span class="number">201</span>], temppath, path;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m1;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;m2;</span><br><span class="line"><span class="keyword">int</span> maxvalue = <span class="number">0</span>, mindepth = <span class="number">0</span>, cntpath = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> maxavg;</span><br><span class="line"><span class="keyword">int</span> N, K;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    temppath.push_back(v);</span><br><span class="line">    <span class="keyword">if</span> (v==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temppath.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            value += weight[temppath[i]];<span class="comment">//记录当前权重</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> tempavg = <span class="number">1.0</span>*value / (temppath.size() - <span class="number">1</span>);<span class="comment">//不算罗马城的</span></span><br><span class="line">        <span class="keyword">if</span> (value&gt;maxvalue)</span><br><span class="line">        &#123;</span><br><span class="line">            maxvalue = value; maxavg = tempavg; path = temppath;<span class="comment">//记录当前最大值了解一哈</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (value==maxvalue&amp;&amp;tempavg&gt;maxavg)</span><br><span class="line">        &#123;</span><br><span class="line">            maxavg = tempavg; path = temppath;</span><br><span class="line">        &#125;</span><br><span class="line">        temppath.pop_back();</span><br><span class="line">        cntpath++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pre[v].size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        DFS(pre[v][i]);</span><br><span class="line">    &#125;</span><br><span class="line">    temppath.pop_back();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fill(e[<span class="number">0</span>], e[<span class="number">0</span>] + <span class="number">201</span> * <span class="number">201</span>, INF);</span><br><span class="line">    fill(dis, dis + <span class="number">201</span>, INF);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; K;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">    m1[str] = <span class="number">1</span>;</span><br><span class="line">    m2[<span class="number">1</span>] = str;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; str &gt;&gt; weight[i + <span class="number">1</span>];</span><br><span class="line">        m1[str] = i + <span class="number">1</span>;</span><br><span class="line">        m2[i + <span class="number">1</span>] = str;<span class="comment">//存储映射关系</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//input cost information</span></span><br><span class="line">    <span class="built_in">string</span> a, b;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; temp;</span><br><span class="line">        e[m1[a]][m1[b]] = temp;</span><br><span class="line">        e[m1[b]][m1[a]] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//dij算法</span></span><br><span class="line">    dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = <span class="number">-1</span>,mindis = INF;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= N; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (visit[j]==<span class="literal">false</span>&amp;&amp;dis[j]&lt;mindis)</span><br><span class="line">            &#123;</span><br><span class="line">                u = j; mindis = dis[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (u == <span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">        visit[u] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> v = <span class="number">1</span>; v &lt;= N; v++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (visit[v] == <span class="literal">false</span> &amp;&amp; e[u][v] != INF)</span><br><span class="line">            &#123;<span class="comment">//dij</span></span><br><span class="line">                <span class="keyword">if</span> (dis[u] + e[u][v] &lt; dis[v])</span><br><span class="line">                &#123;</span><br><span class="line">                    dis[v] = dis[u] + e[u][v];</span><br><span class="line">                    pre[v].clear();</span><br><span class="line">                    pre[v].push_back(u);<span class="comment">//记录可能的路径</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (dis[v] == dis[u] + e[u][v])</span><br><span class="line">                &#123;</span><br><span class="line">                    pre[v].push_back(u);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> rom = m1[<span class="string">"ROM"</span>];</span><br><span class="line">    DFS(rom);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cntpath &lt;&lt; <span class="string">' '</span> &lt;&lt; dis[rom] &lt;&lt; <span class="string">' '</span> &lt;&lt; maxvalue &lt;&lt; <span class="string">' '</span> &lt;&lt; (<span class="keyword">int</span>)maxavg &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = path.size()<span class="number">-1</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; m2[path[i]] &lt;&lt; <span class="string">"-&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"ROM"</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">6</span> <span class="number">7</span> HZH</span><br><span class="line">ROM <span class="number">100</span></span><br><span class="line">PKN <span class="number">40</span></span><br><span class="line">GDN <span class="number">55</span></span><br><span class="line">PRS <span class="number">95</span></span><br><span class="line">BLN <span class="number">80</span></span><br><span class="line">ROM GDN <span class="number">1</span></span><br><span class="line">BLN ROM <span class="number">1</span></span><br><span class="line">HZH PKN <span class="number">1</span></span><br><span class="line">PRS ROM <span class="number">2</span></span><br><span class="line">BLN HZH <span class="number">2</span></span><br><span class="line">PKN GDN <span class="number">1</span></span><br><span class="line">HZH PRS <span class="number">1</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">3</span> <span class="number">195</span> <span class="number">97</span></span><br><span class="line">HZH-&gt;PRS-&gt;ROM</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;条条大路通罗马&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Dijkstra" scheme="https://www.windsings.com/tags/Dijkstra/"/>
    
      <category term="DFS" scheme="https://www.windsings.com/tags/DFS/"/>
    
      <category term="最短路径" scheme="https://www.windsings.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1101 Quick Sort (25)</title>
    <link href="https://www.windsings.com//posts/4a5f9413/"/>
    <id>https://www.windsings.com//posts/4a5f9413/</id>
    <published>2018-07-13T14:02:52.000Z</published>
    <updated>2018-07-14T02:51:49.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>快速排序<br><a id="more"></a><br>著名的快速排序算法中有一个名为partition的经典过程。在此过程中，通常选择一个元素作为枢轴。然后，小于枢轴的元素向左移动，而大于枢轴的元素向右移动。在算法运行后，给定N个<strong>不同</strong>的正整数，求这N个数中有多少个可以选定作为枢轴？<br>例如，给定N = 5和数字1,3,2,4和5.我们有：</p><ol><li>1可以是枢轴，因为它的左边没有元素，右边的所有元素都比它大;</li><li>3不能是枢轴，因为虽然它左边的所有元素都较小，但它右边的数字2小于它;</li><li>2不能是枢轴，因为虽然它右边的所有元素都较大，但它左边的数字3大于它;</li></ol><p>并且由于类似的原因，4和5也可能成为枢轴。</p><p>因此总共有3个可以选作枢轴的点。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入包括一个测试样例。第一行给出正整数N（&lt;=10<sup>5</sup>）。然后下一行是N个不大于10<sup>9</sup>的正整数。数字之间由空格隔开。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>在第一行输出可以作为枢轴的元素的数量。然后在下一行中按顺序输出这些元素，数字之间由空格隔开，每行末尾不得有多余的空格。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>快速排序有个重要的性质，每个枢轴元素在这次排序之后，都会为它确定一个位置，这个位置就是排序全部结束之后，它所在的位置。即每趟快速排序，至少确定一个元素的位置。</p><p>利用这个思路，我们用另外一个数组存储将这些数字排序之后的序列，看排序前的位置是否等于排序后的位置。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>为了避免例如 1 4 3 2 5 中，对 3 的误判，需要再添加一个判断条件，判断 3 是不是从最开始到现在最大的数。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp1, num, res;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N; num.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num[i]);</span><br><span class="line">    temp1 = num;</span><br><span class="line">    sort(temp1.begin(), temp1.end());</span><br><span class="line">    <span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num[i] == temp1[i] &amp;&amp; num[i] &gt; maxn)</span><br><span class="line">            res.push_back(num[i]);</span><br><span class="line">        maxn = max(maxn, num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res[i];</span><br><span class="line">        <span class="keyword">if</span> (i != res.size() - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;快速排序&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="快速排序" scheme="https://www.windsings.com/tags/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1100 Mars Numbers (20)</title>
    <link href="https://www.windsings.com//posts/463096a8/"/>
    <id>https://www.windsings.com//posts/463096a8/</id>
    <published>2018-07-13T14:02:42.000Z</published>
    <updated>2018-07-14T02:12:26.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>火星上的数字<br><a id="more"></a><br>火星人使用13进制。</p><ul><li>地球上的零点在火星上被称为“tret”。</li><li>地球上的数字1到12在火星上分别被称为“jan，feb，mar，apr，may，jun，jly，aug，sep，oct，nov，dec”。</li><li>对于更高一位，火星人将12个数字分别叫做“tam，hel，maa，huh，tou，kes，hei，elo，syy，lok，mer，jou”。</li></ul><p>例如，地球上的29在火星上被称为“hel mar”; 火星上的“elo nov”对应地球上的115。为了帮助这两个行星之间人们的交流，要求写出一个程序用于地球和火星数字系统之间的相互转换。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入包括一个测试样例。第一行是一个正整数N（&lt;100）。然后是N行，每行有一个[0,169)中的数字，以地球数字或火星数字的形式给出。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个数字，在一行中打印另一种语言中的相应数字。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>使用Map存储string to int的映射关系。使用数组存储int to string的映射关系。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; gewei, shiwei;</span><br><span class="line"><span class="built_in">string</span> a[<span class="number">13</span>] = &#123; <span class="string">"tret"</span>, <span class="string">"jan"</span>, <span class="string">"feb"</span>, <span class="string">"mar"</span>, <span class="string">"apr"</span>, <span class="string">"may"</span>, <span class="string">"jun"</span>, <span class="string">"jly"</span>, <span class="string">"aug"</span>, <span class="string">"sep"</span>, <span class="string">"oct"</span>,<span class="string">"nov"</span>, <span class="string">"dec"</span> &#125;;</span><br><span class="line"><span class="built_in">string</span> b[<span class="number">13</span>] = &#123; <span class="string">""</span>, <span class="string">"tam"</span>, <span class="string">"hel"</span>, <span class="string">"maa"</span>, <span class="string">"huh"</span>, <span class="string">"tou"</span>, <span class="string">"kes"</span>, <span class="string">"hei"</span>, <span class="string">"elo"</span>, <span class="string">"syy"</span>,<span class="string">"lok"</span>, <span class="string">"mer"</span>, <span class="string">"jou"</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">13</span>; i++)</span><br><span class="line">        gewei[a[i]] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">13</span>; i++)</span><br><span class="line">        shiwei[b[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f1</span><span class="params">(<span class="built_in">string</span> str)</span><span class="comment">//输入的是数字</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp = stoi(str);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (temp / <span class="number">13</span> &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; b[temp / <span class="number">13</span>];</span><br><span class="line">        <span class="keyword">if</span> (temp % <span class="number">13</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; a[temp % <span class="number">13</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a[temp % <span class="number">13</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f2</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str.length() == <span class="number">4</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"0"</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (str.length() == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (gewei.count(str))</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; gewei[str];</span><br><span class="line">        <span class="keyword">if</span> (shiwei.count(str))</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; shiwei[str]* <span class="number">13</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> s1 = str.substr(<span class="number">0</span>, <span class="number">3</span>), s2 = str.substr(<span class="number">4</span>, <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">int</span> temp = shiwei[s1] * <span class="number">13</span> + gewei[s2];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> N,temp;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N; getchar();</span><br><span class="line">    <span class="built_in">string</span> num;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        getline(<span class="built_in">cin</span>, num);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(num[<span class="number">0</span>]))<span class="comment">//是个数字</span></span><br><span class="line">            f1(num);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            f2(num);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">29</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">elo nov</span><br><span class="line">tam</span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line">hel mar</span><br><span class="line">may</span><br><span class="line"><span class="number">115</span></span><br><span class="line"><span class="number">13</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;火星上的数字&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="C++ STL" scheme="https://www.windsings.com/tags/C-STL/"/>
    
      <category term="字符串处理" scheme="https://www.windsings.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    
      <category term="Map" scheme="https://www.windsings.com/tags/Map/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1097 Deduplication on a Linked List (25)</title>
    <link href="https://www.windsings.com//posts/b2a66fb6/"/>
    <id>https://www.windsings.com//posts/b2a66fb6/</id>
    <published>2018-07-13T14:02:29.000Z</published>
    <updated>2018-07-14T01:39:10.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>删除链表上的重复数据<br><a id="more"></a><br>给定一个带有整数键值的单链表L，要求删除那些键值的绝对值重复的节点。也就是说，对于每个值K，仅保留节点的键的值或绝对值等于K的第一个节点。同时，所有已删除的节点必须保存在单独的列表中。例如，如果L为21→-15→-15→-7→15，则必须输出21→-15→-7，并删除链表-15→15。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入文件包括一个测试用例：第一行中分别是：第一个节点的地址，正整数N（&lt;=10<sup>5</sup>）表示节点的总数。节点的地址是5位非负整数，NULL由-1表示。</p><p>然后是N行，每行以如下格式描述一个节点：</p><p>地址 键值 下一个节点</p><p>其中键值为绝对值不超过10<sup>4</sup>的整数。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，首先输出结果链表，然后输出删除的链表。每个节点占用，并以与输入中相同的格式打印。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>考察用空间换时间。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> key;</span><br><span class="line">    <span class="keyword">int</span> next;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">&#125;node;</span><br><span class="line"></span><br><span class="line">node saveLink[<span class="number">100001</span>],deleLink[<span class="number">100001</span>],inputLink[<span class="number">100001</span>];</span><br><span class="line"><span class="keyword">bool</span> flag[<span class="number">10001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> N, addr, first;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; first &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; addr;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; inputLink[addr].key &gt;&gt; inputLink[addr].next;</span><br><span class="line">        inputLink[addr].id = addr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> save=<span class="number">0</span>,dele=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = first; i!=<span class="number">-1</span>; i=inputLink[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!flag[<span class="built_in">abs</span>(inputLink[i].key)])</span><br><span class="line">        &#123;</span><br><span class="line">            saveLink[save++] = inputLink[i];</span><br><span class="line">            flag[<span class="built_in">abs</span>(inputLink[i].key)] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            deleLink[dele++] = inputLink[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; save<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, saveLink[i].id, saveLink[i].key, saveLink[i + <span class="number">1</span>].id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d %d -1\n"</span>, saveLink[save - <span class="number">1</span>].id, saveLink[save - <span class="number">1</span>].key);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dele<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, deleLink[i].id, deleLink[i].key, deleLink[i + <span class="number">1</span>].id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dele&gt;<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d -1\n"</span>, deleLink[dele - <span class="number">1</span>].id, deleLink[dele - <span class="number">1</span>].key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">00100</span> <span class="number">5</span></span><br><span class="line"><span class="number">99999</span> <span class="number">-7</span> <span class="number">87654</span></span><br><span class="line"><span class="number">23854</span> <span class="number">-15</span> <span class="number">00000</span></span><br><span class="line"><span class="number">87654</span> <span class="number">15</span> <span class="number">-1</span></span><br><span class="line"><span class="number">00000</span> <span class="number">-15</span> <span class="number">99999</span></span><br><span class="line"><span class="number">00100</span> <span class="number">21</span> <span class="number">23854</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">00100</span> <span class="number">21</span> <span class="number">23854</span></span><br><span class="line"><span class="number">23854</span> <span class="number">-15</span> <span class="number">99999</span></span><br><span class="line"><span class="number">99999</span> <span class="number">-7</span> <span class="number">-1</span></span><br><span class="line"><span class="number">00000</span> <span class="number">-15</span> <span class="number">87654</span></span><br><span class="line"><span class="number">87654</span> <span class="number">15</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;删除链表上的重复数据&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="链表" scheme="https://www.windsings.com/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1096 Consecutive Factors (20)</title>
    <link href="https://www.windsings.com//posts/1596ce8c/"/>
    <id>https://www.windsings.com//posts/1596ce8c/</id>
    <published>2018-07-13T14:02:00.000Z</published>
    <updated>2018-07-13T14:27:49.691Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>连续的因数<br><a id="more"></a><br>在正整数N的所有因子中，可能存在几个连续的数字。例如，630可以认为是3<em>5</em>6*7，其中5,6,7是三个连续的数字。现在给出一个正整数N，求这个树的连续因子的最大数量，并列出连续因子的最小序列。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入包括一个测试用例，给出正整数N（1&lt;N&lt;2<sup>31</sup>）。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，在一行中打印最大的连续因子数。然后在第二行中，以“因子1*因子2*…..*因子k”的格式输出连续因子的最小序列，其中因子按递增顺序给出，1为不包含。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><ol><li>如果只有一个因子，那么这个数只能为1或者质数。因此我们主要去计算两个及以上因数的情况。</li><li>在有两个及以上的数连乘中，因数的最大上限为sqrt(N)，即N的平方根。</li><li>因此思路就是，不断构造连乘，看连乘的积是否是N的因数，如果是，则看这部分连乘的数的个数是否比已记录的多。</li><li>用变量first记录连乘的第一个数字，这里我把它赋初值为0，如果在寻找N的因数过程中，first没有改变，那么就表明N是1或者是一个质数。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> temp = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> first = <span class="number">0</span>, len = <span class="number">0</span>, maxn = <span class="built_in">sqrt</span>(num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= maxn; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j, temp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (j= i;j&lt;=maxn;  j++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp *= j;</span><br><span class="line">            <span class="keyword">if</span> (num%temp != <span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (j - i &gt; len)</span><br><span class="line">        &#123;</span><br><span class="line">            len = j - i;</span><br><span class="line">            first = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (first==<span class="number">0</span>)<span class="built_in">cout</span> &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; num;<span class="comment">//没有找到</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; len &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; first + i;</span><br><span class="line">            <span class="keyword">if</span> (i != len - <span class="number">1</span>)<span class="built_in">cout</span> &lt;&lt; <span class="string">'*'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">630</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span>*<span class="number">6</span>*<span class="number">7</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;连续的因数&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="逻辑" scheme="https://www.windsings.com/tags/%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1094 The Largest Generation (25)</title>
    <link href="https://www.windsings.com//posts/ba347fc6/"/>
    <id>https://www.windsings.com//posts/ba347fc6/</id>
    <published>2018-07-13T13:47:57.000Z</published>
    <updated>2018-07-13T14:14:54.599Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>人口最多的一代<br><a id="more"></a><br>族的层次结构通常由谱系树来呈现，其中同一级别上的所有的节点属于同一代。要求找到人口最多的一代。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入文件包括一个测试用例，每个测试用例以两个正整数N(&lt;100)开始，它是树中家庭成员的总数（因此假设所有成员的编号从01~N）。M（&lt;N）是这个族中，有孩子的成员的数量。然后是M行，每行包含以下格式的成员信息：</p><p>ID K ID<sub>1</sub> ID<sub>2</sub>……ID<sub>k</sub></p><p>其中ID是代表族成员的两位数字，K(&gt;0)是他的孩子的数量，后面跟着他孩子的两位数ID，为了简单起见，将根的ID固定位01，一行中所有数字都由空格隔开。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，在一行中输出具有最多的成员数和其对应是第几代。保证结果是唯一的，根是第一代。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>层次遍历。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="keyword">int</span> id, k, temp;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; que;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; level;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; T;</span><br><span class="line">    T.resize(N+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; id &gt;&gt; k;</span><br><span class="line">        T[id].resize(k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">            T[id][j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    level.resize(N+<span class="number">1</span>);</span><br><span class="line">    level[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    que.push(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        id = que.front(); que.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T[id].size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            que.push(T[id][i]);</span><br><span class="line">            level[T[id][i]] = level[id] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; cnt; cnt.resize(N + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt[level[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    level = cnt;</span><br><span class="line">    sort(cnt.begin(), cnt.end());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt[N] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (level[i] == cnt[N])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">23</span> <span class="number">13</span></span><br><span class="line"><span class="number">21</span> <span class="number">1</span> <span class="number">23</span></span><br><span class="line"><span class="number">01</span> <span class="number">4</span> <span class="number">03</span> <span class="number">02</span> <span class="number">04</span> <span class="number">05</span></span><br><span class="line"><span class="number">03</span> <span class="number">3</span> <span class="number">06</span> <span class="number">07</span> <span class="number">08</span></span><br><span class="line"><span class="number">06</span> <span class="number">2</span> <span class="number">12</span> <span class="number">13</span></span><br><span class="line"><span class="number">13</span> <span class="number">1</span> <span class="number">21</span></span><br><span class="line"><span class="number">08</span> <span class="number">2</span> <span class="number">15</span> <span class="number">16</span></span><br><span class="line"><span class="number">02</span> <span class="number">2</span> <span class="number">09</span> <span class="number">10</span></span><br><span class="line"><span class="number">11</span> <span class="number">2</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"><span class="number">17</span> <span class="number">1</span> <span class="number">22</span></span><br><span class="line"><span class="number">05</span> <span class="number">1</span> <span class="number">11</span></span><br><span class="line"><span class="number">07</span> <span class="number">1</span> <span class="number">14</span></span><br><span class="line"><span class="number">09</span> <span class="number">1</span> <span class="number">17</span></span><br><span class="line"><span class="number">10</span> <span class="number">1</span> <span class="number">18</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">9</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;人口最多的一代&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="树的遍历" scheme="https://www.windsings.com/tags/%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/"/>
    
      <category term="层次遍历" scheme="https://www.windsings.com/tags/%E5%B1%82%E6%AC%A1%E9%81%8D%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1093 Count PAT’s (25)</title>
    <link href="https://www.windsings.com//posts/cc8cf89e/"/>
    <id>https://www.windsings.com//posts/cc8cf89e/</id>
    <published>2018-07-13T13:21:53.000Z</published>
    <updated>2018-07-13T13:46:23.973Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>计算有多少个PAT<br><a id="more"></a><br>字符串APPAPT包括两个PAT作为子字符串。第一个由第2个，第4个，第6个字符组成，第二个由第3个，第4个，第6个字符组成。</p><p>现给出一个字符串，求这个字符串包含的PAT的数量。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入文件包括一个测试用例，在一行中给出不超过10<sup>5</sup> 个字符的字符串，仅包括P、A和T。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，在一行中输出字符串中包括的PAT的数量。由于结果可能是一个巨大的数字，只需要输出其对1000000007取模的结果。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>使用乘法原理去做。核心思想是：对于字符串中的每个“A”，计算其前面有多少个“P”，计算其后有多少个“T”。然后将这两个数相乘，然后相加。</p><ol><li>首先计算这个字符串有多少个“T”。</li><li>从字符串开始，计算遇到多少个个“P”，表示“A”前面的“P”的个数，每遇到一个“T”，就从（1）中的计数值中减1，这个数是“A”之后“T”的个数。</li><li>当遇到一个“A”时，将其前面遇到的“P”的个数与其之后“T”的个数相乘，然后累加。结果即为所求。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> P = <span class="number">0</span>, A = <span class="number">0</span>, T = <span class="number">0</span>;<span class="comment">//计数这个字符串中有多少个PAT</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'T'</span>) T++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'P'</span>) P++;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'T'</span>) T--;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'A'</span>)res += P*T;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res % <span class="number">1000000007</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line">APPAPT</span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;计算有多少个PAT&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="乘法原理" scheme="https://www.windsings.com/tags/%E4%B9%98%E6%B3%95%E5%8E%9F%E7%90%86/"/>
    
      <category term="数学" scheme="https://www.windsings.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1092 To Buy or Not to Buy (20)</title>
    <link href="https://www.windsings.com//posts/bb8bc808/"/>
    <id>https://www.windsings.com//posts/bb8bc808/</id>
    <published>2018-07-13T07:51:07.000Z</published>
    <updated>2018-07-13T13:18:54.727Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>买还是不买<br><a id="more"></a><br>Eva想用他最喜欢的颜色制作一串珠子，他去一家店买。店里面有很多五颜六色的珠子串。然而，商店的所有者只卖整个串，不零卖，因此，Eva必须检查卖的串中是否包含了他需要的所有的珠子。他现在来找你帮忙：如果“包含了所有要买的珠子”，就要告诉他，由于不零卖，多买了多少个珠子，如果“没有包含所有想买的珠子”，就要告诉他缺少的珠子的数量。</p><p>为了简单起见，使用范围[0-9]、[a-z]、[A-Z]中的字符来表示颜色，例如，下图中的第三个字符串是Eva想要的，然后只需要第一根珠子就可以了，因为它包含了所有必要的珠子，但是多了8个额外的珠子。然而第二个是不可以的，因为没有黑珠子和少一个红色的珠子。</p><p><img src="/posts/bb8bc808/PAT-A-1092.png" alt="图1"></p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入文件包括一个测试用例。每个测试用例分两行给出不超过1000个珠子的字符串，分别是店主的和Eva想要的。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，请将答案输出在一行中，如果答案是“是”，那么还要输出Eva额外购买的珠子的数量，如果答案是“否”，那么输出字符串中缺少的珠子的数量，答案和数字之间必须间隔一个空格。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>使用Hash散列。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> res[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a, b;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.size(); i++)</span><br><span class="line">        res[a[i]]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (res[b[i]] &gt; <span class="number">0</span>)</span><br><span class="line">            res[b[i]]--;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cnt == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes "</span> &lt;&lt; a.size() - b.size();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"No "</span> &lt;&lt; cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">ppRYYGrrYBR2258</span><br><span class="line">YrR8RrY</span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Yes <span class="number">8</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">ppRYYGrrYB225</span><br><span class="line">YrR8RrY</span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">No <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;买还是不买&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.windsings.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="Hash" scheme="https://www.windsings.com/tags/Hash/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1088 Rational Arithmetic (20)</title>
    <link href="https://www.windsings.com//posts/fea59011/"/>
    <id>https://www.windsings.com//posts/fea59011/</id>
    <published>2018-07-13T07:38:52.000Z</published>
    <updated>2018-07-13T08:14:31.793Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>有理数的运算<br><a id="more"></a><br>给定两个有理数，要求实现它们的基本算数运算，即计算它们的和，差，乘积，商。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入包括一个测试用例，在一行中给出格式为”a1/b1 a2/b2”格式的两个有理数。分子和分母都在long int的范围内。如果有负号，则负号出现且仅出现在分子前面。分母保证为非零数字。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，分别在4行中输出两个有理数的和，差，乘积，商。每行的格式为“number1 operator number2 = result”。注意，所有的有理数优先化成<strong>带分数</strong>的形式。如果数字为负数，则必须将其包含在一对括号中。如果除法中的分母为0，则输出“Inf”作为结果。保证所有输出的整数都在long int的范围内。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>基础题，按照四则运算的规则来。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>相似题目：PAT-A-1081。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> member;<span class="comment">//分子部分</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> deno;<span class="comment">//分母部分</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> inte;<span class="comment">//整数部分</span></span><br><span class="line">&#125;fraction;</span><br><span class="line">fraction num[<span class="number">2</span>];</span><br><span class="line">fraction res[<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> a, <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> b)</span><span class="comment">//最大公约数,abs求绝对值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? <span class="built_in">abs</span>(a) : gcd(b, a%b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuchu</span><span class="params">(fraction a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.inte &lt; <span class="number">0</span> || a.member &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'('</span>;</span><br><span class="line">    <span class="keyword">if</span> (a.inte!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a.inte;</span><br><span class="line">        <span class="keyword">if</span> (a.member!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.member != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a.member &lt;&lt; <span class="string">'/'</span> &lt;&lt; a.deno;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (a.inte == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">if</span> (a.inte &lt; <span class="number">0</span> || a.member &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">')'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jiafenshu</span><span class="params">(fraction &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> gcd_num = gcd(a.member, a.deno);</span><br><span class="line">    a.deno /= gcd_num; a.member /= gcd_num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">daifenshu</span><span class="params">(fraction &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a.inte = a.member / a.deno;</span><br><span class="line">    a.member -= (a.deno*a.inte);</span><br><span class="line">    <span class="keyword">if</span> (a.inte &lt; <span class="number">0</span>)</span><br><span class="line">        a.member = <span class="built_in">abs</span>(a.member);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld/%lld"</span>, &amp;num[i].member, &amp;num[i].deno);</span><br><span class="line">        jiafenshu(num[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//+</span></span><br><span class="line">    res[<span class="number">0</span>].member = num[<span class="number">1</span>].member*num[<span class="number">0</span>].deno + num[<span class="number">1</span>].deno*num[<span class="number">0</span>].member;</span><br><span class="line">    res[<span class="number">0</span>].deno = num[<span class="number">1</span>].deno*num[<span class="number">0</span>].deno;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//-</span></span><br><span class="line">    res[<span class="number">1</span>].member = num[<span class="number">1</span>].deno*num[<span class="number">0</span>].member - num[<span class="number">1</span>].member*num[<span class="number">0</span>].deno;</span><br><span class="line">    res[<span class="number">1</span>].deno = num[<span class="number">1</span>].deno*num[<span class="number">0</span>].deno;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//*</span></span><br><span class="line">    res[<span class="number">2</span>].member = num[<span class="number">1</span>].member*num[<span class="number">0</span>].member;</span><br><span class="line">    res[<span class="number">2</span>].deno = num[<span class="number">1</span>].deno*num[<span class="number">0</span>].deno;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// /</span></span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (num[<span class="number">1</span>].member == <span class="number">0</span> &amp;&amp; num[<span class="number">1</span>].inte == <span class="number">0</span>)</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (!flag)</span><br><span class="line">    &#123;</span><br><span class="line">        res[<span class="number">3</span>].member = num[<span class="number">0</span>].member*num[<span class="number">1</span>].deno;</span><br><span class="line">        res[<span class="number">3</span>].deno = num[<span class="number">0</span>].deno*num[<span class="number">1</span>].member;</span><br><span class="line">        <span class="keyword">if</span> (res[<span class="number">3</span>].deno*res[<span class="number">3</span>].member &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            res[<span class="number">3</span>].member = <span class="number">0</span> - <span class="built_in">abs</span>(res[<span class="number">3</span>].member);</span><br><span class="line">            res[<span class="number">3</span>].deno = <span class="built_in">abs</span>(res[<span class="number">3</span>].deno);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        res[<span class="number">3</span>] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        daifenshu(num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;<span class="comment">//化简</span></span><br><span class="line">        jiafenshu(res[i]);</span><br><span class="line">        daifenshu(res[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    shuchu(num[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">" + "</span>; shuchu(num[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">" = "</span>; shuchu(res[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    shuchu(num[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">" - "</span>; shuchu(num[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">" = "</span>; shuchu(res[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    shuchu(num[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">" * "</span>; shuchu(num[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">" = "</span>; shuchu(res[<span class="number">2</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    shuchu(num[<span class="number">0</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">" / "</span>; shuchu(num[<span class="number">1</span>]); <span class="built_in">cout</span> &lt;&lt; <span class="string">" = "</span>;</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Inf"</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        shuchu(res[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> <span class="number">-4</span>/<span class="number">2</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> + (<span class="number">-2</span>) = (<span class="number">-1</span> <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> - (<span class="number">-2</span>) = <span class="number">2</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> * (<span class="number">-2</span>) = (<span class="number">-1</span> <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line"><span class="number">2</span>/<span class="number">3</span> / (<span class="number">-2</span>) = (<span class="number">-1</span>/<span class="number">3</span>)</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>/<span class="number">3</span> <span class="number">0</span>/<span class="number">6</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">2</span>/<span class="number">3</span> + <span class="number">0</span> = <span class="number">1</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span>/<span class="number">3</span> - <span class="number">0</span> = <span class="number">1</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span>/<span class="number">3</span> * <span class="number">0</span> = <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span>/<span class="number">3</span> / <span class="number">0</span> = Inf</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;有理数的运算&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="分数" scheme="https://www.windsings.com/tags/%E5%88%86%E6%95%B0/"/>
    
      <category term="四则运算" scheme="https://www.windsings.com/tags/%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1090 Highest Price in Supply Chain (25)</title>
    <link href="https://www.windsings.com//posts/5585a924/"/>
    <id>https://www.windsings.com//posts/5585a924/</id>
    <published>2018-07-08T13:25:14.000Z</published>
    <updated>2018-07-13T08:24:28.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>供应链中的最高价格<br><a id="more"></a><br>供应链是由零售商，分销商和供应商组成的网络，每个人都参与其中，并且将产品从供应商转移到客户。</p><p>从一个根供应商开始，链上每个人以价格P从一个供应商处购买产品，并以高于P的r%的价格出售或者分发给他们。假设供应链中的每个成员有且仅有一个供应商。</p><p>现给定一个供应链，求一些零售商可以期待的最高的价格。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入文件包括一个测试用例，对于每种情况，第一行包括三个正整数：N（&lt;=10<sup>5</sup>）表示供应链中的成员数（编号从0~N-1），P：根供应商给出的价格，r：每个分销商或零售商加价的百分比。</p><p>然后下一行包括N个数字，每个数字S<sub>i</sub>是第i个成员的供应商的索引。根供应商的S<sub>root</sub>定义为-1。一行中所有的数字都由空格分隔开。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，在第一行中输出一些零售商进货的最高价格，精确到小数点后2位，以及这些零售商的个数。<strong>注意！，是零售商的进货价！</strong> 数字之间由空格隔开，保证价格不会超过10<sup>10<sup>。</sup></sup></p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>层次遍历</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>类似题目：PAT-A-1079。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">double</span> P, r;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;M;<span class="comment">//存储整个销售网络</span></span><br><span class="line"><span class="keyword">int</span> level[<span class="number">100011</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; P &gt;&gt; r;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    M.resize(N + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        M[temp + <span class="number">1</span>].push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; que;que.push(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        temp = que.front(); que.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M[temp].size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            que.push(M[temp][i]);</span><br><span class="line">            level[M[temp][i]] = level[temp] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(level, level + N + <span class="number">1</span>, cmp);</span><br><span class="line">    temp = level[<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2f "</span>, P*<span class="built_in">pow</span>(<span class="number">1</span> + r / <span class="number">100</span>, temp - <span class="number">1</span>));</span><br><span class="line">    <span class="comment">//cout &lt;&lt; P*pow(1 + r / 100, temp-1) &lt;&lt; ' ';</span></span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (level[cnt]==temp)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.txt", "r", stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">9</span> <span class="number">1.80</span> <span class="number">1.00</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">4</span> <span class="number">4</span> <span class="number">-1</span> <span class="number">4</span> <span class="number">5</span> <span class="number">3</span> <span class="number">6</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">1.85</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;供应链中的最高价格&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="层次遍历" scheme="https://www.windsings.com/tags/%E5%B1%82%E6%AC%A1%E9%81%8D%E5%8E%86/"/>
    
      <category term="树" scheme="https://www.windsings.com/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1089 Insert or Merge (25)</title>
    <link href="https://www.windsings.com//posts/354220c1/"/>
    <id>https://www.windsings.com//posts/354220c1/</id>
    <published>2018-07-08T03:28:28.000Z</published>
    <updated>2018-07-13T07:49:13.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>插入排序还是归并排序<br><a id="more"></a></p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入包括一个测试用例。</p><p>第一行是一个正整数N（&lt;=100），第二行有N个整数，表示初始状态。第三行有N个整数，表示中间状态，求中间状态是由插入排序得出还是由归并排序得出的。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>第一行输出”Insertion Sort” 或者 “Merge Sort” 来表示它是由插入排序/归并排序得出的。</p><p>第二行输出当前状态的下一个排序状态。即插入排序再插入一个数字，归并排序则是把相邻两个归并起来。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>插入排序有个特点，已经排序的部分是按从小到大，未排序的部分，对应位置和初试数组一样。</p><p>因此根据这个来判断。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>最后求归并排序的时候要用模拟归并排序来计算。但是真正的归并排序是递归得出的，此时是先排序左半部分，再排序右半部分的。这里的归并不是这个意思。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">101</span>], num_sort[<span class="number">101</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num_sort[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> isInsert = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> temp = num_sort[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> range;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (temp &gt; num_sort[i])</span><br><span class="line">        &#123;</span><br><span class="line">            range = i;</span><br><span class="line">            <span class="keyword">for</span> (; i &lt; N; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (num[i] != num_sort[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    isInsert = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;N)</span><br><span class="line">            temp = num_sort[i];</span><br><span class="line">        <span class="keyword">if</span> (isInsert == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isInsert)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Insertion Sort"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        sort(num, num + range + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Merge Sort"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">int</span> range = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//通过模拟来进行归并排序</span></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;<span class="comment">//用于标记是否达到当前状态</span></span><br><span class="line">        <span class="keyword">while</span> (flag)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (num[i] != num_sort[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        range *= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N/range; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sort(num + i*range, num + (i + <span class="number">1</span>)* range);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(num + N / range*range, num + N);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; num[i];</span><br><span class="line">        <span class="keyword">if</span> (i != N<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Insertion Sort</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">0</span> <span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">8</span> <span class="number">5</span> <span class="number">7</span> <span class="number">4</span> <span class="number">9</span> <span class="number">0</span> <span class="number">6</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">Merge Sort</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">8</span> <span class="number">4</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">0</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;插入排序还是归并排序&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="https://www.windsings.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="插入排序" scheme="https://www.windsings.com/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    
      <category term="归并排序" scheme="https://www.windsings.com/tags/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1086 Tree Traversals Again (25)</title>
    <link href="https://www.windsings.com//posts/c2c1493b/"/>
    <id>https://www.windsings.com//posts/c2c1493b/</id>
    <published>2018-07-08T00:36:25.000Z</published>
    <updated>2018-07-08T00:59:40.569Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>重新遍历二叉树<br><a id="more"></a><br>用栈的形式给出一棵二叉树的建立的顺序，求这棵二叉树的后序遍历.</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入包括一个测试用例。</p><p>第一行是一个正整数N（&lt;=30）表示树中的节点总数（节点从1~N进行编号）。然后是2N行，每行描述一种堆栈操作，比如Push X，其中X是被压入堆栈的节点的索引；或Pop，表示从堆栈中弹出一个节点。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>在一行中输出相应的树的后续遍历序列。数字之间由空格隔开。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><ol><li>push的顺序正好对应前序。</li><li>pop出来的顺序正好对应中序。</li></ol><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li>特别注意：数字可以有重复。所以要加一个索引。</li><li>经过实测，不加索引也能通过PAT的测试，但是无法通过牛客网的测试。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">string</span> temp;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;pre, mid,value;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">post</span><span class="params">(<span class="keyword">int</span> root, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (start &gt; end)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> i = start;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;end&amp;&amp;mid[i]!=pre[root])</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    post(root + <span class="number">1</span>, start, i - <span class="number">1</span>);</span><br><span class="line">    post(root + <span class="number">1</span> + i - start, i + <span class="number">1</span>, end);</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; value[mid[i]];</span><br><span class="line">    flag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> num, top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">stack</span>[<span class="number">31</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> c1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n*<span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        <span class="keyword">if</span> (temp==<span class="string">"Push"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">            value.push_back(num);</span><br><span class="line">            pre.push_back(c1);</span><br><span class="line">            <span class="built_in">stack</span>[top++]=c1++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (temp==<span class="string">"Pop"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mid.push_back(<span class="built_in">stack</span>[--top]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    post(<span class="number">0</span>, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">6</span></span><br><span class="line">Push <span class="number">1</span></span><br><span class="line">Push <span class="number">2</span></span><br><span class="line">Push <span class="number">3</span></span><br><span class="line">Pop</span><br><span class="line">Pop</span><br><span class="line">Push <span class="number">4</span></span><br><span class="line">Pop</span><br><span class="line">Pop</span><br><span class="line">Push <span class="number">5</span></span><br><span class="line">Push <span class="number">6</span></span><br><span class="line">Pop</span><br><span class="line">Pop</span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">2</span> <span class="number">6</span> <span class="number">5</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;重新遍历二叉树&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="二叉树" scheme="https://www.windsings.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
      <category term="前序遍历" scheme="https://www.windsings.com/tags/%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86/"/>
    
      <category term="中序遍历" scheme="https://www.windsings.com/tags/%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1085 Perfect Sequence (25)</title>
    <link href="https://www.windsings.com//posts/6fa331c/"/>
    <id>https://www.windsings.com//posts/6fa331c/</id>
    <published>2018-06-21T15:55:58.000Z</published>
    <updated>2018-07-08T00:54:19.300Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>完美的序列。<br><a id="more"></a><br>给定一个正整数序列和另一个正整数p，如果M&lt;=m*p，则这个序列是一个完美的序列，其中M和m分别是这个序列中的最大和最小的数字。</p><p>现给出一个序列和一个参数p，要求从这个序列中找到尽可能多的数字，以形成一个完美的序列。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入文件都包括一个测试用例。第一行包括两个正整数N和p，其中N&lt;=10^5，表示序列中整数的数量，p(&lt;=10^9)是参数。第二行有N个正整数，每个不大于10^9。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出在一个完美序列中，最多可以有多少个整数。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>二分法查找。其实就是找到一个大于或等于m*的最小的数字。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>使用upper_bound()更加简单粗暴。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用upper_bound()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">list</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> N, p;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;<span class="comment">//num表示有多少个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; p;</span><br><span class="line">    <span class="built_in">list</span>.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; <span class="built_in">list</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(<span class="built_in">list</span>.begin(), <span class="built_in">list</span>.end());</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="built_in">list</span>.begin(); i !=<span class="built_in">list</span>.end(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        res=max((<span class="keyword">int</span>)(upper_bound(<span class="built_in">list</span>.begin(), <span class="built_in">list</span>.end(), *i * p)-i),res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二分搜索</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">list</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> N, p;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;<span class="comment">//num表示有多少个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; p;</span><br><span class="line">    <span class="built_in">list</span>.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; <span class="built_in">list</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(<span class="built_in">list</span>.begin(), <span class="built_in">list</span>.end());</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">int</span> front = <span class="number">0</span>, mid = (front + N - <span class="number">1</span>) / <span class="number">2</span>, end = N - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = <span class="built_in">list</span>[i]*p;</span><br><span class="line">        <span class="keyword">while</span> (front&lt;end&amp;&amp;<span class="built_in">list</span>[mid]!=temp)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">list</span>[mid] &lt; temp) front = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">list</span>[mid] &gt; temp)end = mid - <span class="number">1</span>;</span><br><span class="line">            mid = (front + end) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (mid &lt; N&amp;&amp;temp &gt;= <span class="built_in">list</span>[mid])</span><br><span class="line">            mid++;</span><br><span class="line">        res = max(res, mid - i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更直观的思路</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> N, p;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">list</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; p;</span><br><span class="line">    <span class="built_in">list</span>.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; <span class="built_in">list</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(<span class="built_in">list</span>.begin(), <span class="built_in">list</span>.end());</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i+res; j &lt; N; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">list</span>[j] &lt;= <span class="built_in">list</span>[i] * p)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = j - i + <span class="number">1</span>;</span><br><span class="line">                res = max(res, temp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">10</span> <span class="number">8</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">20</span> <span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;完美的序列。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="STL" scheme="https://www.windsings.com/tags/STL/"/>
    
      <category term="二分法查找" scheme="https://www.windsings.com/tags/%E4%BA%8C%E5%88%86%E6%B3%95%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1084 Broken Keyboard (20)</title>
    <link href="https://www.windsings.com//posts/1feaae6d/"/>
    <id>https://www.windsings.com//posts/1feaae6d/</id>
    <published>2018-06-20T17:33:42.000Z</published>
    <updated>2018-07-08T00:54:05.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>坏掉的键盘。<br><a id="more"></a><br>在一个坏掉的键盘上，有一些键坏了，所以当你输入一些句子时，这些坏掉的键对应的字符不会出现在屏幕上。</p><p>现在给出一个应输入的字符串，一个实际输入的字符串，求哪些键是坏掉的。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入包括一个测试用例，第一行是原始字符串，第二行是实际输入的字符串，每个字符串不超过80个英文字母[A-Z]，不区分大小写。数字[0-9]，或者“_”表示空格，确保两个字符串都是非空的。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>在一行中输出坏掉的键，英文字母必须大写，每个坏掉的键只打印一次。保证至少有一个键是坏掉的。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>全部转换为大写后，使用find函数比较，然后开个数组标记是否输出过了。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">转换为大写</span><br><span class="line">transform(a.begin(), a.end(),a.begin(), ::<span class="built_in">toupper</span>);</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查找字母</span><br><span class="line"><span class="keyword">if</span> (b.find(*i) == <span class="built_in">string</span>::npos&amp;&amp;key[*i]==<span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; *i;</span><br><span class="line">            key[*i] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> key[<span class="number">256</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">string</span> a, b;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; b;</span><br><span class="line">    transform(a.begin(), a.end(),a.begin(), ::<span class="built_in">toupper</span>);</span><br><span class="line">    transform(b.begin(), b.end(),b.begin(), ::<span class="built_in">toupper</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = a.begin(); i != a.end(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b.find(*i) == <span class="built_in">string</span>::npos&amp;&amp;key[*i]==<span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; *i;</span><br><span class="line">            key[*i] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input:</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>_This_is_a_test</span><br><span class="line">_hs_s_a_es</span><br><span class="line">Sample Output:</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>TI</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;坏掉的键盘。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串处理" scheme="https://www.windsings.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    
      <category term="STL" scheme="https://www.windsings.com/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1083 List Grades (25)</title>
    <link href="https://www.windsings.com//posts/d597c9df/"/>
    <id>https://www.windsings.com//posts/d597c9df/</id>
    <published>2018-06-20T17:10:51.000Z</published>
    <updated>2018-06-20T17:36:22.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>输出成绩在给定区间的同学信息。<br><a id="more"></a><br>基础题，就是一个cmp函数。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">string</span> ID;</span><br><span class="line">    <span class="keyword">int</span> g;</span><br><span class="line">&#125;student;</span><br><span class="line"><span class="built_in">vector</span>&lt;student&gt; s;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(student a, student b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.g &gt; b.g;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    s.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; s[i].name &gt;&gt; s[i].ID &gt;&gt; s[i].g;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(s.begin(), s.end(), cmp);</span><br><span class="line">    <span class="keyword">int</span> grade1, grade2;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; grade1 &gt;&gt; grade2;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = s.begin(); i != s.end(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i-&gt;g&gt;=grade1&amp;&amp;i-&gt;g&lt;=grade2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i-&gt;name &lt;&lt; <span class="string">' '</span> &lt;&lt; i-&gt;ID &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"NONE"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("2.txt", "r", stdin);</span></span><br><span class="line">    solution();</span><br><span class="line"><span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br><span class="line">Tom CS000001 <span class="number">59</span></span><br><span class="line">Joe Math990112 <span class="number">89</span></span><br><span class="line">Mike CS991301 <span class="number">100</span></span><br><span class="line">Mary EE990830 <span class="number">95</span></span><br><span class="line"><span class="number">60</span> <span class="number">100</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Mike CS991301</span><br><span class="line">Mary EE990830</span><br><span class="line">Joe Math990112</span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line">Jean AA980920 <span class="number">60</span></span><br><span class="line">Ann CS01 <span class="number">80</span></span><br><span class="line"><span class="number">90</span> <span class="number">95</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">NONE</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;输出成绩在给定区间的同学信息。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="https://www.windsings.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1081 Rational Sum (20)</title>
    <link href="https://www.windsings.com//posts/3b99a8f3/"/>
    <id>https://www.windsings.com//posts/3b99a8f3/</id>
    <published>2018-06-19T12:10:28.000Z</published>
    <updated>2018-06-20T16:05:57.061Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>有理数的和。<br><a id="more"></a><br>小学的数学题，这次用写程序来求解。</p><p>给定“分支/分母”形式的N个有理数，求他们的总和。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入文件都包括一个测试用例。每种情况都已一个正整数N（&lt;= 100）开始，在下一行，有N个有理数。以“分子/分母”的形式给出，所有的分子和分母都在long int的范围内。如果有负数，则符号必须出现在分子之前。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，输出这些数的总和，以带分数的最简形式给出，也即，“整数 分子/分母”的形式，分子和分母没有公因子。如果整数部分为0，即总和小于1，就只输出小数部分。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>辗转相除法。注意，如果是负数，求公约数的时候要注意，返回一个正值。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>求绝对值函数在abs()里，头文件是iostream</p><p>return b == 0 ? abs(a) : gcd(b, a%b);</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> member;<span class="comment">//分子部分</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> deno;<span class="comment">//分母部分</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> inte;<span class="comment">//整数部分</span></span><br><span class="line">&#125;fraction;</span><br><span class="line">fraction num;</span><br><span class="line">fraction res = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> a, <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> b)</span><span class="comment">//最大公约数,abs求绝对值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? <span class="built_in">abs</span>(a) : gcd(b, a%b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld/%lld"</span>, &amp;num.member,&amp;num.deno);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> gcd_num = gcd(num.member,num.deno);</span><br><span class="line">        num.deno /= gcd_num; num.member /= gcd_num;</span><br><span class="line">        res.member = res.member*num.deno + res.deno*num.member;</span><br><span class="line">        res.deno = res.deno*num.deno;</span><br><span class="line">        gcd_num = gcd(res.deno, res.member);</span><br><span class="line">        res.deno /= gcd_num; res.member /= gcd_num;</span><br><span class="line">    &#125;</span><br><span class="line">    res.inte = res.member / res.deno;</span><br><span class="line">    res.member -= (res.deno*res.inte);</span><br><span class="line">    <span class="keyword">if</span> (res.inte!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res.inte;</span><br><span class="line">        <span class="keyword">if</span> (res.member!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (res.member!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res.member &lt;&lt; <span class="string">'/'</span> &lt;&lt; res.deno;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (res.inte==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"3.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">2</span>/<span class="number">5</span> <span class="number">4</span>/<span class="number">15</span> <span class="number">1</span>/<span class="number">30</span> <span class="number">-2</span>/<span class="number">60</span> <span class="number">8</span>/<span class="number">3</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">1</span>/<span class="number">3</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line">Sample Input <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span>/<span class="number">3</span> <span class="number">-1</span>/<span class="number">6</span> <span class="number">1</span>/<span class="number">8</span></span><br><span class="line">Sample Output <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;有理数的和。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="分数加法" scheme="https://www.windsings.com/tags/%E5%88%86%E6%95%B0%E5%8A%A0%E6%B3%95/"/>
    
      <category term="辗转相除法" scheme="https://www.windsings.com/tags/%E8%BE%97%E8%BD%AC%E7%9B%B8%E9%99%A4%E6%B3%95/"/>
    
      <category term="最大公约数" scheme="https://www.windsings.com/tags/%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1082 Read Number in Chinese (25)</title>
    <link href="https://www.windsings.com//posts/a290f949/"/>
    <id>https://www.windsings.com//posts/a290f949/</id>
    <published>2018-06-19T11:53:49.000Z</published>
    <updated>2018-06-20T16:06:08.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems" target="_blank" rel="noopener">题目链接</a><br>数字的中文读法。<br><a id="more"></a><br>这道题和1081一样，都是小学的数学题。</p><p>给定一个不超过9位数的正数，要求输出他的中文读法。如果这个数是负数，则要首先输出负数。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>每个输入包括一个测试样例，给出一个不超过9位数的整数。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例，在一行中，输出数字的中文读法。字符之间用空格隔开，行尾不能有多余的空格。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>把9位数分为3个部分，亿，万，个。</p><p>在每一部分中，其读法都是一致的。都是X千X百X十X。</p><p>我认为关键在于0的处理。小学数学没学好，大概写写。</p><ol><li>将所有的数都看作由三部分组成的，即都看作9位数来处理。</li><li>有多个零的情况下，只输出一个零。比如，10024，输出yi Wan ling er Shi si。</li><li>对于最高位非亿的，第一位之前不输出零，即405，输出si Bai ling wu。而不是ling si Bai ling wu。</li><li>如果横跨两个部分，比如100001234，也只输出一个ling，即yi Yi ling yi Qian er Bai san Shi si。</li><li>对于千百十，输出数字之后，还要输出单位。</li><li>每部分结束后，输出这个部分对应的单位（Yi / Wan / ）。</li></ol><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li>输出ling时，用一个变量标记，在零后遇到的的第一个非零数时，输出ling。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> num[<span class="number">10</span>] = &#123; <span class="string">"ling"</span>,<span class="string">"yi"</span>, <span class="string">"er"</span>, <span class="string">"san"</span>, <span class="string">"si"</span>, <span class="string">"wu"</span>, <span class="string">"liu"</span>, <span class="string">"qi"</span>, <span class="string">"ba"</span>, <span class="string">"jiu"</span> &#125;;</span><br><span class="line"><span class="built_in">string</span> c[<span class="number">6</span>] = &#123; <span class="string">"Ge"</span>,<span class="string">"Shi"</span>, <span class="string">"Bai"</span>, <span class="string">"Qian"</span>, <span class="string">"Yi"</span>, <span class="string">"Wan"</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> J[] = &#123;</span><br><span class="line">    <span class="number">1</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">1000</span>,</span><br><span class="line">    <span class="number">10000</span>, <span class="number">100000</span>, <span class="number">1000000</span>, <span class="number">10000000</span>,</span><br><span class="line">    <span class="number">100000000</span> &#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;res;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"ling"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Fu "</span>;</span><br><span class="line">        n = -n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> part[<span class="number">3</span>];</span><br><span class="line">    part[<span class="number">0</span>]= n / <span class="number">100000000</span>;</span><br><span class="line">    <span class="comment">//int yi =</span></span><br><span class="line">    part[<span class="number">1</span>]= (n % <span class="number">100000000</span>) / <span class="number">10000</span>;</span><br><span class="line">    part[<span class="number">2</span>] = n % <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">bool</span> zero = <span class="literal">false</span>;<span class="comment">//是否在非零数字前输出合适的ling</span></span><br><span class="line">    <span class="keyword">int</span> printCnt = <span class="number">0</span>;<span class="comment">//用于维护单词前没有空格，之后输入的单词都在前面加一个空格。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = part[i];<span class="comment">//三个部分，每部分内部的命名规则都一样，都是X千X百X十X</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">3</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> curPos = <span class="number">8</span> - i * <span class="number">4</span> + j;<span class="comment">//当前数字的位置</span></span><br><span class="line">            <span class="keyword">if</span> (curPos &gt;= <span class="number">9</span>)</span><br><span class="line">                <span class="keyword">continue</span>;<span class="comment">//最多九位数</span></span><br><span class="line">            <span class="keyword">int</span> cur = (temp / J[j]) % <span class="number">10</span>;<span class="comment">//取出当前数字</span></span><br><span class="line">            <span class="keyword">if</span> (cur!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (zero)<span class="comment">//前面有零</span></span><br><span class="line">                &#123;</span><br><span class="line">                     printCnt++ == <span class="number">0</span> ? <span class="built_in">cout</span>&lt;&lt;<span class="string">"ling"</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">" ling"</span>;</span><br><span class="line">                     zero = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    printCnt++ == <span class="number">0</span> ? <span class="built_in">cout</span> &lt;&lt; num[cur] : <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; num[cur];<span class="comment">//在个位，直接输出</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;<span class="comment">//在其他位，还要输出十百千</span></span><br><span class="line">                    printCnt++ == <span class="number">0</span> ? <span class="built_in">cout</span> &lt;&lt; num[cur] &lt;&lt; <span class="string">' '</span> &lt;&lt; c[j] : <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; num[cur] &lt;&lt; <span class="string">' '</span> &lt;&lt; c[j];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!zero&amp;&amp;j != <span class="number">0</span> &amp;&amp; n / J[curPos] &gt;= <span class="number">10</span>)<span class="comment">//注意100020这样的情况</span></span><br><span class="line">                &#123;</span><br><span class="line">                    zero = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//处理完每部分之后，最后输出单位，Yi/Wan</span></span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">2</span> &amp;&amp; part[i]&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; c[i + <span class="number">4</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入</span><br><span class="line"><span class="number">100001234</span></span><br><span class="line"></span><br><span class="line">输出</span><br><span class="line">yi Yi ling yi Qian er Bai san Shi si</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">-123456789</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">Fu yi Yi er Qian san Bai si Shi wu Wan liu Qian qi Bai ba Shi jiu</span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="number">100800</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">yi Shi Wan ling ba Bai</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;数字的中文读法。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串处理" scheme="https://www.windsings.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
</feed>
