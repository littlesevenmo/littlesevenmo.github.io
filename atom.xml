<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>且听风吟</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.windsings.com/"/>
  <updated>2018-10-15T10:37:36.552Z</updated>
  <id>https://www.windsings.com/</id>
  
  <author>
    <name>Wind</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>剑指Offer-替换空格</title>
    <link href="https://www.windsings.com//posts/ba28a029/"/>
    <id>https://www.windsings.com//posts/ba28a029/</id>
    <published>2018-10-15T09:53:35.000Z</published>
    <updated>2018-10-15T10:37:36.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://www.nowcoder.com/practice/4060ac7e3e404ad1a894ef3e17650423?tpId=13&amp;tqId=11155&amp;tPage=1&amp;rp=1&amp;ru=%2Fta%2Fcoding-interviews&amp;qru=%2Fta%2Fcoding-interviews%2Fquestion-ranking" target="_blank" rel="noopener">题目链接</a><br>替换空格<br><a id="more"></a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>我自己一开始写的，非常笨的方法。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">replaceSpace</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i]==<span class="string">' '</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = length+<span class="number">1</span>; j &gt; i+<span class="number">2</span>; j--)</span><br><span class="line">                &#123;</span><br><span class="line">                    str[j] = str[j - <span class="number">2</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                length += <span class="number">2</span>;</span><br><span class="line">                str[i++] = <span class="string">'%'</span>;</span><br><span class="line">                str[i++] = <span class="string">'2'</span>;</span><br><span class="line">                str[i] = <span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>然后点开讨论区，大佬们开始秀自己的牛逼的算法，菜鸡瑟瑟发抖。</p><p>大概思路如下：</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/practice/4060ac7e3e404ad1a894ef3e17650423?tpId=13&amp;amp;tqId=11155&amp;amp;tPage=1&amp;amp;rp=1&amp;amp;ru=%2Fta%2Fcoding-interviews&amp;amp;qru=%2Fta%2Fcoding-interviews%2Fquestion-ranking&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;替换空格&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="剑指Offer" scheme="https://www.windsings.com/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.windsings.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="剑指Offer" scheme="https://www.windsings.com/tags/%E5%89%91%E6%8C%87Offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer-二维数组中的查找</title>
    <link href="https://www.windsings.com//posts/2f2a2f9c/"/>
    <id>https://www.windsings.com//posts/2f2a2f9c/</id>
    <published>2018-10-15T09:34:52.000Z</published>
    <updated>2018-10-15T09:53:44.939Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://www.nowcoder.com/practice/abc3fe2ce8e146608e868a70efebf62e?tpId=13&amp;tqId=11154&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">题目链接</a></p><p>二维数组中的查找<br><a id="more"></a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><ol><li>可以使用暴力搜索，但是要注意剪枝。</li><li>留意到，对于每行，都是按照从小到大递增排序，对于每列，也是按照从小到大递增。因此可以从最左下进行搜索：若当前数&gt;target，向上。反之，若当前数\&lt;target，向右。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>暴力搜索+剪枝</p><p>这里没用到每列都是按照从小到大进行排序的条件。这是一开始写的，写的不好。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">array</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> hang = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="keyword">int</span> lie = <span class="built_in">array</span>[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hang; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lie; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i][j] == target)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">array</span>[i][j] &gt; target)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>更好的代码：从左下开始搜索<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; <span class="built_in">array</span>)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// array是二维数组，这里没做判空操作</span></span><br><span class="line">        <span class="keyword">int</span> rows = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="keyword">int</span> cols = <span class="built_in">array</span>[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">int</span> i=rows<span class="number">-1</span>,j=<span class="number">0</span>;<span class="comment">//左下角元素坐标</span></span><br><span class="line">        <span class="keyword">while</span>(i&gt;=<span class="number">0</span> &amp;&amp; j&lt;cols)&#123;<span class="comment">//使其不超出数组范围</span></span><br><span class="line">            <span class="keyword">if</span>(target&lt;<span class="built_in">array</span>[i][j])</span><br><span class="line">                i--;<span class="comment">//查找的元素较少，往上找</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target&gt;<span class="built_in">array</span>[i][j])</span><br><span class="line">                j++;<span class="comment">//查找元素较大，往右找</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//找到</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/practice/abc3fe2ce8e146608e868a70efebf62e?tpId=13&amp;amp;tqId=11154&amp;amp;tPage=1&amp;amp;rp=1&amp;amp;ru=/ta/coding-interviews&amp;amp;qru=/ta/coding-interviews/question-ranking&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;二维数组中的查找&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="剑指Offer" scheme="https://www.windsings.com/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="查找" scheme="https://www.windsings.com/tags/%E6%9F%A5%E6%89%BE/"/>
    
      <category term="剑指Offer" scheme="https://www.windsings.com/tags/%E5%89%91%E6%8C%87Offer/"/>
    
      <category term="数组" scheme="https://www.windsings.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>红黑树-C++语言实现</title>
    <link href="https://www.windsings.com//posts/ef3f5fdd/"/>
    <id>https://www.windsings.com//posts/ef3f5fdd/</id>
    <published>2018-10-13T15:09:16.000Z</published>
    <updated>2018-10-13T15:42:42.929Z</updated>
    
    <content type="html"><![CDATA[<p>算法课上老师讲了红黑树。根据网上大神的文章，自己又敲了一遍。<br><a id="more"></a><br>根据 <a href="https://bbs.pediy.com/thread-225432.htm" target="_blank" rel="noopener">码图并茂红黑树</a>自己又敲了一遍。</p><h1 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h1><p>RBTree.h<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">红黑树是一种自平衡的二叉查找树，典型的用途是实现关联数组。</span></span><br><span class="line"><span class="comment">红黑树由以下5个约束条件限制：</span></span><br><span class="line"><span class="comment">1. 每个节点或者是黑色，或者是红色。</span></span><br><span class="line"><span class="comment">2. 根节点是黑色。</span></span><br><span class="line"><span class="comment">3. 每个叶子节点（NIL）是黑色。这里叶子节点，是指为空(NIL或NULL)的叶子节点</span></span><br><span class="line"><span class="comment">4. 如果一个节点是红色的，则它的子节点必须是黑色的。</span></span><br><span class="line"><span class="comment">5. 从一个节点到该节点的子孙节点的所有路径上包含相同数目的黑节点。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">由约束条件5，可得：从根到所有椰子的最长的路径不多于最短的路径的2倍长，因此这棵树大致上是平衡的。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这个class里，对于两个变量的比较的语句，我把常量值全都放在了左边，防止少写一个等号的情况。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RBTree</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">enum</span></span><br><span class="line">    &#123;</span><br><span class="line">        RBT_COLOR_RED,</span><br><span class="line">        RBT_COLOR_BLACK,</span><br><span class="line">    &#125;RBTColor;</span><br><span class="line">    <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> __<span class="title">RBTreeNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        __RBTreeNode* pParent;</span><br><span class="line">        __RBTreeNode* pLeft;</span><br><span class="line">        __RBTreeNode* pRight;</span><br><span class="line">        RBTColor Color;</span><br><span class="line">        <span class="keyword">int</span> Value;</span><br><span class="line">    &#125;RBTreeNode, *pRBTreeNode;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InsertFixUP</span><span class="params">(pRBTreeNode pInsertNode)</span></span>;<span class="comment">//插入InsertNode之后，调整红黑树</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DeleteFixUp</span><span class="params">(pRBTreeNode pFixNode)</span></span>;<span class="comment">//删除DeleteNode之后，调整红黑树</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SingleLeft</span><span class="params">(pRBTreeNode &amp;pNode, pRBTreeNode &amp;newTop)</span></span>;<span class="comment">//左旋转，返回新的顶点</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SingleRight</span><span class="params">(pRBTreeNode &amp;pNode, pRBTreeNode &amp;newTop)</span></span>;<span class="comment">//右旋转，返回新的顶点</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ReplaceParent</span><span class="params">(pRBTreeNode pBeReplacedNode, pRBTreeNode pReplaceNode)</span></span>;<span class="comment">//把pReplaceNode的父节点修改为pBeReplacedNode的</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">GetMinNode</span><span class="params">(pRBTreeNode pNode, pRBTreeNode &amp;pMinNode)</span></span>;<span class="comment">//获取最小的节点</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    RBTree();</span><br><span class="line">    ~RBTree();</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">FindElement</span><span class="params">(<span class="keyword">int</span> Value)</span></span>;<span class="comment">//查找数据，找到返回true，否则返回false</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">()</span></span>;<span class="comment">//广度遍历</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">()</span></span>;<span class="comment">//判空</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">GetMax</span><span class="params">(pRBTreeNode pNode, <span class="keyword">int</span> &amp;MaxValue)</span></span>;<span class="comment">//获取最大值</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">GetMin</span><span class="params">(pRBTreeNode pNode, <span class="keyword">int</span> &amp;MinValue)</span></span>;<span class="comment">//获取最小值</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DeleteElement</span><span class="params">(<span class="keyword">int</span> DeleteValue)</span></span>;<span class="comment">//删除制定的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InsertData</span><span class="params">(<span class="keyword">int</span> InsertValue)</span></span>;<span class="comment">//插入</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    pRBTreeNode pRoot;<span class="comment">//根节点指针</span></span><br><span class="line">    pRBTreeNode pNil;<span class="comment">//空节点</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::InsertFixUP(pRBTreeNode pInsertNode)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">插入节点后，对红黑树的调整操作：</span></span><br><span class="line"><span class="comment">根据被插入节点的父节点的情况，可以将情况分三类来讨论</span></span><br><span class="line"><span class="comment">1. 被插入的节点的父节点是红色</span></span><br><span class="line"><span class="comment">这个时候会产生冲突，不满足约束条件5。</span></span><br><span class="line"><span class="comment">这种情况下，被插入节点是一定存在非空祖父节点的；进一步的讲，被插入节点也一定存在叔叔节点(即使叔叔节点为空，我们也视之为存在，空节点本身就是黑色节点)。</span></span><br><span class="line"><span class="comment">依据"叔叔节点的情况"，将这种情况进一步划分为3种情况进行讨论。处理的核心思路是：将红色的节点移到根节点，然后将根节点设置为黑色。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**以当前节点的父节点是祖父节点的左孩子为例**</span></span><br><span class="line"><span class="comment">**对应的，若当前节点的父节点是祖父节点的右孩子时，把对应的right和left互换即可**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.1 当前节点的父节点是红色，且当前节点的祖父节点的另一个子节点（叔叔节点）也是红色。</span></span><br><span class="line"><span class="comment">1. 将“父节点”设为黑色。</span></span><br><span class="line"><span class="comment">2. 将“叔叔节点”设为黑色。</span></span><br><span class="line"><span class="comment">3. 将“祖父节点”设为“红色”。</span></span><br><span class="line"><span class="comment">4. 将“祖父节点”设为“当前节点”(红色节点)；即，之后继续对“当前节点”进行操作。</span></span><br><span class="line"><span class="comment">1.2 当前节点的父节点是红色，叔叔节点是黑色，且当前节点是其父节点的右孩子。</span></span><br><span class="line"><span class="comment">1. 将“父节点”作为“新的当前节点”。</span></span><br><span class="line"><span class="comment">2. 以“新的当前节点”为支点进行左旋。</span></span><br><span class="line"><span class="comment">1.3 当前节点的父节点是红色，叔叔节点是黑色，且当前节点是其父节点的左孩子。</span></span><br><span class="line"><span class="comment">1. 将“父节点”设为“黑色”。</span></span><br><span class="line"><span class="comment">2. 将“祖父节点”设为“红色”。</span></span><br><span class="line"><span class="comment">3. 以“祖父节点”为支点进行右旋。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2. 被插入的节点的父节点是黑色</span></span><br><span class="line"><span class="comment">什么也不需要做。节点被插入后，仍然是红黑树。</span></span><br><span class="line"><span class="comment">3. 被插入的节点是根节点：</span></span><br><span class="line"><span class="comment">直接把此节点涂为黑色。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    pRBTreeNode pFixNode = pInsertNode;;</span><br><span class="line">    <span class="comment">//如果父节点是红色。（根节点的父节点是Nil，为黑色。）</span></span><br><span class="line">    <span class="keyword">while</span> (RBT_COLOR_RED == pFixNode-&gt;pParent-&gt;Color)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1. 如果调整节点的父亲为祖父节点的左孩子</span></span><br><span class="line">        <span class="keyword">if</span> (pFixNode-&gt;pParent == pFixNode-&gt;pParent-&gt;pParent-&gt;pLeft)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取叔叔节点(祖父节点的右孩子)</span></span><br><span class="line">            pRBTreeNode pUncle = pFixNode-&gt;pParent-&gt;pParent-&gt;pRight;</span><br><span class="line">            <span class="comment">//1.1 如果叔叔节点为红色，情况1.1.1</span></span><br><span class="line">            <span class="keyword">if</span> (RBT_COLOR_RED == pUncle-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//把父节点和叔叔节点都改为黑色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pUncle-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//把祖父节点改为红色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//重新计算调整节点为祖父节点</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent-&gt;pParent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//1.2 叔叔节点不为红色，且调整节点为父节点的右孩子。这个时候，稍加处理变会转化为情况1.3</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//从调整节点的父节点开始旋转</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//记录下新的顶点</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                SingleLeft(pFixNode-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                <span class="comment">//重新设置调整节点</span></span><br><span class="line">                pFixNode = pNewTop-&gt;pLeft;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//1.3 叔叔节点为黑，且调整节点为父节点的左孩子</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//把父节点变成黑色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//把祖父节点变成红色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//以祖父节点右旋转(注意到为根节点的情况)</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent-&gt;pParent;</span><br><span class="line">                <span class="comment">//记录下新的顶点</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (pRoot == pFixNode)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleRight(pRoot, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleRight(pFixNode-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleRight(pFixNode-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//重新设置调整点</span></span><br><span class="line">                pFixNode = pNewTop-&gt;pLeft;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2. 如果调整节点的父节点为祖父节点的右孩子，相对于1中，把left和right互换即可</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode-&gt;pParent == pFixNode-&gt;pParent-&gt;pParent-&gt;pRight)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取叔叔节点（祖父节点的左孩子）</span></span><br><span class="line">            pRBTreeNode pUncle = pFixNode-&gt;pParent-&gt;pParent-&gt;pLeft;</span><br><span class="line">            <span class="comment">//2.1 如果叔叔节点为红色</span></span><br><span class="line">            <span class="keyword">if</span> (RBT_COLOR_RED == pUncle-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//把父节点和叔叔节点都改为黑色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pUncle-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//把祖父节点改为红色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//重新计算调整节点为祖父节点</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent-&gt;pParent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//2.2 叔叔节点为黑色，且调整节点为父亲节点的左孩子，对应情况1.2（左右互换）</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//从调整节点的父节点开始旋转</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//记录下新的顶点</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                SingleRight(pFixNode-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                <span class="comment">//重新设置调整节点</span></span><br><span class="line">                pFixNode = pNewTop-&gt;pRight;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//2.3 叔叔节点为黑色，且调整节点为父节点的右孩子，对应情况1.3（左右互换）</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//把父节点变为黑色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//把祖父节点变为红色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//对祖父节点进行左旋转（注意到为根节点的情况）</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent-&gt;pParent;</span><br><span class="line">                <span class="comment">//记录下新节点</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (pRoot == pFixNode)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleLeft(pRoot, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleLeft(pFixNode-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleLeft(pFixNode-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//重新设置调整节点</span></span><br><span class="line">                pFixNode = pNewTop-&gt;pRight;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//最后把根节点设置为黑色</span></span><br><span class="line">    pRoot-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::DeleteFixUp(pRBTreeNode pFixNode)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">恢复红黑树的约束条件。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="keyword">while</span> (pFixNode != pRoot&amp;&amp;RBT_COLOR_BLACK == pFixNode-&gt;Color)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1. 如果调整节点是父节点的左孩子</span></span><br><span class="line">        <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">        &#123;</span><br><span class="line">            pRBTreeNode pBrotherNode = pFixNode-&gt;pParent-&gt;pRight;<span class="comment">//兄弟节点</span></span><br><span class="line">            <span class="comment">//1.1 如果兄弟节点为红色，则只能调整成其他的情况</span></span><br><span class="line">            <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//把兄弟节点的颜色改为黑色</span></span><br><span class="line">                pBrotherNode-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//把父节点的颜色改为红色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//以父节点为根节点左旋</span></span><br><span class="line">                pRBTreeNode pPivot = pFixNode-&gt;pParent;</span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="comment">//备份parent的指针，因为旋转操作会修改parent指针</span></span><br><span class="line">                pRBTreeNode pBackParent = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="keyword">if</span> (pRoot = pPivot)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleLeft(pRoot, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pLeft)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleLeft(pPivot-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pRight)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleLeft(pPivot-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//恢复pFixNode的parent指针</span></span><br><span class="line">                pFixNode-&gt;pParent = pBackParent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//1.2 如果兄弟节点是黑色且兄弟节点的左右孩子均为黑色</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_BLACK == pBrotherNode-&gt;pLeft-&gt;Color&amp;&amp;RBT_COLOR_BLACK == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//把兄弟节点染成红色</span></span><br><span class="line">                pBrotherNode-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//FixUpNode修改为父亲节点</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//1.3 如果兄弟节点是黑色并且兄弟节点左孩子为红色，右孩子为黑色</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;pLeft-&gt;Color&amp;&amp;RBT_COLOR_BLACK == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//交换颜色</span></span><br><span class="line">                RBTColor tempNodeColor = pBrotherNode-&gt;pLeft-&gt;Color;</span><br><span class="line">                pBrotherNode-&gt;pLeft-&gt;Color = pBrotherNode-&gt;Color;</span><br><span class="line">                pBrotherNode-&gt;Color = tempNodeColor;</span><br><span class="line">                <span class="comment">//备份parent的指针，因为旋转操作会修改parent指针</span></span><br><span class="line">                pRBTreeNode pBackParent = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//以pBrotherNode进行右旋</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                SingleRight(pBrotherNode-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                <span class="comment">//恢复pFixNode的parent指针</span></span><br><span class="line">                pFixNode-&gt;pParent = pBackParent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//1.4 如果兄弟节点是黑色，且兄弟节点的右孩子为红色，兄弟节点的左孩子可以是任意颜色</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                pBrotherNode-&gt;Color = pFixNode-&gt;pParent-&gt;Color;</span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pBrotherNode-&gt;pRight-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//以pFixNode-&gt;pParent左旋</span></span><br><span class="line">                pRBTreeNode pPivot = pFixNode-&gt;pParent;</span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (pRoot == pPivot)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleLeft(pPivot, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pLeft)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleLeft(pPivot-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pRight)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleLeft(pPivot-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                pFixNode = pRoot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2. 如果调整节点是父节点的右孩子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pFixNode == pFixNode-&gt;pParent-&gt;pRight)</span><br><span class="line">        &#123;</span><br><span class="line">            pRBTreeNode pBrotherNode = pFixNode-&gt;pParent-&gt;pLeft;</span><br><span class="line">            <span class="comment">//2.1 如果兄弟节点为红色节点，则只能通过选择调整成其他的情况，再来处理</span></span><br><span class="line">            <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//把兄弟节点的颜色改为黑色</span></span><br><span class="line">                pBrotherNode-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                <span class="comment">//把父节点的颜色改为红色</span></span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//以父节点为根，进行右旋</span></span><br><span class="line">                pRBTreeNode pPivot = pFixNode-&gt;pParent;</span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="comment">//同样备份父节点指针</span></span><br><span class="line">                pRBTreeNode pBackParent = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                <span class="keyword">if</span> (pRoot == pPivot)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleRight(pRoot, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pLeft)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleRight(pPivot-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pRight)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleRight(pPivot-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//恢复pFixNode的Parent指针</span></span><br><span class="line">                pFixNode-&gt;pParent = pBackParent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//2.2 如果兄弟节点是黑色且兄弟节点的左右孩子均为黑色</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_BLACK == pBrotherNode-&gt;pLeft-&gt;Color&amp;&amp;RBT_COLOR_BLACK == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//兄弟节点的颜色改为红色</span></span><br><span class="line">                pBrotherNode-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">                <span class="comment">//FixUpNode 修改为父节点</span></span><br><span class="line">                pFixNode = pFixNode-&gt;pParent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//2.3 如果兄弟节点是黑色，并且兄弟节点右孩子为红色，左孩子为黑色</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_BLACK == pBrotherNode-&gt;pLeft-&gt;Color&amp;&amp;RBT_COLOR_RED == pBrotherNode-&gt;pRight-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//交换颜色</span></span><br><span class="line">                RBTColor tempNodeColor = pBrotherNode-&gt;pRight-&gt;Color;</span><br><span class="line">                pBrotherNode-&gt;pRight-&gt;Color = pBrotherNode-&gt;Color;</span><br><span class="line">                pBrotherNode-&gt;Color = tempNodeColor;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//备份parent指针</span></span><br><span class="line">                pRBTreeNode pBackParent = pFixNode-&gt;pParent;</span><br><span class="line">                <span class="comment">//以pBrotherNode进行右旋</span></span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                SingleLeft(pBrotherNode-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                <span class="comment">//恢复pFixNode的parent指针</span></span><br><span class="line">                pFixNode-&gt;pParent = pBrotherNode;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//2.4. 如果兄弟节点是黑色,且兄弟节点左孩子是红色,右孩子颜色不限</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (RBT_COLOR_RED == pBrotherNode-&gt;pLeft-&gt;Color)</span><br><span class="line">            &#123;</span><br><span class="line">                pBrotherNode-&gt;Color = pFixNode-&gt;pParent-&gt;Color;</span><br><span class="line">                pFixNode-&gt;pParent-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pBrotherNode-&gt;pLeft-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">                pRBTreeNode pPivot = pFixNode-&gt;pParent;</span><br><span class="line">                pRBTreeNode pNewTop = <span class="literal">nullptr</span>;</span><br><span class="line">                <span class="keyword">if</span> (pRoot == pPivot)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleRight(pPivot, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pLeft)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleRight(pPivot-&gt;pParent-&gt;pLeft, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pPivot == pPivot-&gt;pParent-&gt;pRight)</span><br><span class="line">                &#123;</span><br><span class="line">                    SingleRight(pPivot-&gt;pParent-&gt;pRight, pNewTop);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//在执行完这一步后，一定会调整好，直接设置为根节点下次退出</span></span><br><span class="line">                pFixNode = pRoot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pFixNode-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::SingleLeft(pRBTreeNode &amp; pNode, pRBTreeNode &amp; newTop)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">k2k1</span></span><br><span class="line"><span class="comment">\ /     \</span></span><br><span class="line"><span class="comment">k1      k2  N</span></span><br><span class="line"><span class="comment">\</span></span><br><span class="line"><span class="comment">N</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    pRBTreeNode k2 = pNode;</span><br><span class="line">    pRBTreeNode k1 = pNode-&gt;pRight;</span><br><span class="line">    k2-&gt;pRight = k1-&gt;pLeft;</span><br><span class="line">    <span class="comment">//修改k1左孩子的父节点</span></span><br><span class="line">    <span class="keyword">if</span> (k1-&gt;pLeft)</span><br><span class="line">    &#123;</span><br><span class="line">        k1-&gt;pLeft-&gt;pParent = k2;</span><br><span class="line">    &#125;</span><br><span class="line">    k1-&gt;pLeft = k2;</span><br><span class="line">    <span class="comment">//修改k1的父节点</span></span><br><span class="line">    k1-&gt;pParent = pNode-&gt;pParent;</span><br><span class="line">    <span class="comment">//修改k2的父节点</span></span><br><span class="line">    k2-&gt;pParent = k1;</span><br><span class="line">    <span class="comment">//返回结果</span></span><br><span class="line">    pNode = k1;</span><br><span class="line">    newTop = k1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::SingleRight(pRBTreeNode &amp; pNode, pRBTreeNode &amp; newTop)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">k2 k1</span></span><br><span class="line"><span class="comment">/   /     \</span></span><br><span class="line"><span class="comment">k1 N         k2</span></span><br><span class="line"><span class="comment">/</span></span><br><span class="line"><span class="comment">N</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    pRBTreeNode k2 = pNode;</span><br><span class="line">    pRBTreeNode k1 = pNode-&gt;pLeft;</span><br><span class="line">    k2-&gt;pLeft = k1-&gt;pRight;</span><br><span class="line">    <span class="comment">//修改k1右孩子的父节点</span></span><br><span class="line">    <span class="keyword">if</span> (k1-&gt;pRight)</span><br><span class="line">    &#123;</span><br><span class="line">        k1-&gt;pRight-&gt;pParent = k2;</span><br><span class="line">    &#125;</span><br><span class="line">    k1-&gt;pRight = k2;</span><br><span class="line">    <span class="comment">//修改k1的父节点</span></span><br><span class="line">    k1-&gt;pParent = pNode-&gt;pParent;</span><br><span class="line">    <span class="comment">//修改k2的父节点</span></span><br><span class="line">    k2-&gt;pParent = k1;</span><br><span class="line">    <span class="comment">//返回结果</span></span><br><span class="line">    pNode = k1;</span><br><span class="line">    newTop = k1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::ReplaceParent(pRBTreeNode pBeReplacedNode, pRBTreeNode pReplaceNode)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//替换节点并修改父节点的操作</span></span><br><span class="line">    <span class="comment">//1. 如果pBeReplacedNode是根节点</span></span><br><span class="line">    <span class="keyword">if</span> (pBeReplacedNode == pRoot)</span><br><span class="line">    &#123;</span><br><span class="line">        pRoot = pReplaceNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2. 如果pBeReplacedNode是父节点的左孩子</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pBeReplacedNode == pBeReplacedNode-&gt;pParent-&gt;pLeft)</span><br><span class="line">    &#123;</span><br><span class="line">        pBeReplacedNode-&gt;pParent-&gt;pLeft = pReplaceNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3. 如果pBeReplacedNode是父节点的右孩子</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pBeReplacedNode == pBeReplacedNode-&gt;pParent-&gt;pRight)</span><br><span class="line">    &#123;</span><br><span class="line">        pBeReplacedNode-&gt;pParent-&gt;pRight = pReplaceNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//4. 修改pReplaceNode的父亲节点</span></span><br><span class="line">    pReplaceNode-&gt;pParent = pBeReplacedNode-&gt;pParent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::GetMinNode(pRBTreeNode pNode, pRBTreeNode &amp; pMinNode)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == pNode || pNode == pNil)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    pRBTreeNode pPreNode = pNode-&gt;pParent;</span><br><span class="line">    <span class="keyword">while</span> (pNil != pNode)</span><br><span class="line">    &#123;</span><br><span class="line">        pPreNode = pNode;</span><br><span class="line">        pNode = pNode-&gt;pLeft;</span><br><span class="line">    &#125;</span><br><span class="line">    pMinNode = pPreNode;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RBTree::RBTree()</span><br><span class="line">&#123;</span><br><span class="line">    pRoot = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">    pNil = <span class="keyword">new</span> RBTreeNode();</span><br><span class="line">    pNil-&gt;pLeft = <span class="literal">nullptr</span>;</span><br><span class="line">    pNil-&gt;pRight = <span class="literal">nullptr</span>;</span><br><span class="line">    pNil-&gt;pParent = <span class="literal">nullptr</span>;</span><br><span class="line">    pNil-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">    pNil-&gt;Value = <span class="number">0xFFFFFFFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RBTree::~RBTree()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!isEmpty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">queue</span>&lt;pRBTreeNode&gt;nodeQue;</span><br><span class="line">        nodeQue.push(pRoot);<span class="comment">//根节点入队</span></span><br><span class="line">        <span class="keyword">while</span> (!nodeQue.empty())<span class="comment">//队列非空</span></span><br><span class="line">        &#123;</span><br><span class="line">            pRBTreeNode pNode = nodeQue.front();</span><br><span class="line">            pRBTreeNode pLeft = pNode-&gt;pLeft;</span><br><span class="line">            pRBTreeNode pRight = pNode-&gt;pRight;</span><br><span class="line">            <span class="comment">//出队释放资源</span></span><br><span class="line">            nodeQue.pop();</span><br><span class="line">            <span class="keyword">if</span> (pLeft != pNil)nodeQue.push(pLeft);</span><br><span class="line">            <span class="keyword">if</span> (pRight != pNil)nodeQue.push(pRight);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pNil)<span class="comment">//如果是空节点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> pNil;</span><br><span class="line">        pNil = <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::FindElement(<span class="keyword">int</span> Value)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (isEmpty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pRBTreeNode pCurrent = pRoot;</span><br><span class="line">    <span class="keyword">while</span> (pNil != pCurrent)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Value&lt;pCurrent-&gt;Value)</span><br><span class="line">        &#123;</span><br><span class="line">            pCurrent = pCurrent-&gt;pLeft;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Value&gt;pCurrent-&gt;Value)</span><br><span class="line">        &#123;</span><br><span class="line">            pCurrent = pCurrent-&gt;pRight;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::BFS()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (isEmpty())<span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">queue</span>&lt;pRBTreeNode&gt;nodeQue;</span><br><span class="line">    nodeQue.push(pRoot);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//BFS</span></span><br><span class="line">    <span class="keyword">int</span> TreeHeight = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!nodeQue.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> nCurrentLevelSize = nodeQue.size();<span class="comment">//记录当前层元素的个数</span></span><br><span class="line">        <span class="keyword">int</span> nCnt = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"第"</span> &lt;&lt; TreeHeight + <span class="number">1</span> &lt;&lt; <span class="string">"层"</span>;</span><br><span class="line">        <span class="keyword">while</span> (nCnt &lt; nCurrentLevelSize)</span><br><span class="line">        &#123;</span><br><span class="line">            pRBTreeNode acessNode = nodeQue.front();</span><br><span class="line">            nodeQue.pop();</span><br><span class="line">            <span class="keyword">if</span> (acessNode == pRoot)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; acessNode-&gt;Value &lt;&lt; <span class="string">"根节点，颜色"</span> &lt;&lt; acessNode-&gt;Color &lt;&lt; <span class="string">")"</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (acessNode-&gt;pParent-&gt;pLeft == acessNode)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"[("</span> &lt;&lt; acessNode-&gt;Value &lt;&lt; <span class="string">"颜色"</span> &lt;&lt; acessNode-&gt;Color &lt;&lt; <span class="string">')'</span> &lt;&lt; <span class="string">'('</span> &lt;&lt; acessNode-&gt;pParent-&gt;Value &lt;&lt; <span class="string">"的左孩子)]"</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (acessNode-&gt;pParent-&gt;pRight == acessNode)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"[("</span> &lt;&lt; acessNode-&gt;Value &lt;&lt; <span class="string">"颜色"</span> &lt;&lt; acessNode-&gt;Color &lt;&lt; <span class="string">')'</span> &lt;&lt; <span class="string">'('</span> &lt;&lt; acessNode-&gt;pParent-&gt;Value &lt;&lt; <span class="string">"的右孩子)]"</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//下一层的元素</span></span><br><span class="line">            pRBTreeNode pLeft = acessNode-&gt;pLeft;</span><br><span class="line">            pRBTreeNode pRight = acessNode-&gt;pRight;</span><br><span class="line">            <span class="keyword">if</span> (pNil != pLeft)</span><br><span class="line">            &#123;</span><br><span class="line">                nodeQue.push(pLeft);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (pNil != pRight)</span><br><span class="line">            &#123;</span><br><span class="line">                nodeQue.push(pRight);</span><br><span class="line">            &#125;</span><br><span class="line">            ++nCnt;</span><br><span class="line">        &#125;</span><br><span class="line">        TreeHeight++;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::isEmpty()<span class="comment">//判空</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> pRoot == <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::GetMax(pRBTreeNode pNode, <span class="keyword">int</span> &amp; MaxValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == pNode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (pNode)</span><br><span class="line">    &#123;</span><br><span class="line">        MaxValue = pNode-&gt;Value;</span><br><span class="line">        pNode = pNode-&gt;pRight;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> RBTree::GetMin(pRBTreeNode pNode, <span class="keyword">int</span> &amp; MinValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == pNode)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (pNode)</span><br><span class="line">    &#123;</span><br><span class="line">        MinValue = pNode-&gt;Value;</span><br><span class="line">        pNode = pNode-&gt;pLeft;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::DeleteElement(<span class="keyword">int</span> DeleteValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">删除操作</span></span><br><span class="line"><span class="comment">基本思路如下：</span></span><br><span class="line"><span class="comment">1. 将红黑树当做一棵二叉查找树，将节点删除。</span></span><br><span class="line"><span class="comment">分三种情况：</span></span><br><span class="line"><span class="comment">1. 被删除节点没有儿子，即为叶节点，此时直接删除即可。用空节点顶替它的位置。</span></span><br><span class="line"><span class="comment">2. 被删除节点只有一个子节点，此时，直接删除该节点，然后用该节点的唯一子节点顶替他。</span></span><br><span class="line"><span class="comment">3. 被删除节点有两个子节点，则要先找到它的直接后继节点，把值复制到它的位置，然后删除它的后继节点，因为它的后继节点不可能有两个非空子节点，所以这个过程最多只进行一次。</span></span><br><span class="line"><span class="comment">2. 修正这棵树</span></span><br><span class="line"><span class="comment">在删除节点后，有可能违反2,4,5三个约束条件，第二步即是调整整棵树，使之满足约束条件。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isEmpty())</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//先找到要删除的节点</span></span><br><span class="line">    pRBTreeNode pCurrent = pRoot;</span><br><span class="line">    pRBTreeNode pDeletedNode = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">while</span> (pNil != pCurrent)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (DeleteValue&lt;pCurrent-&gt;Value)</span><br><span class="line">        &#123;</span><br><span class="line">            pCurrent = pCurrent-&gt;pLeft;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (DeleteValue&gt;pCurrent-&gt;Value)</span><br><span class="line">        &#123;</span><br><span class="line">            pCurrent = pCurrent-&gt;pRight;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            pDeletedNode = pCurrent;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2. 如果未找到，则直接退出</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == pDeletedNode)<span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//3. 执行删除操作，计算出pDeletedNode,pRealDeleteNode,pFixUpNode.</span></span><br><span class="line"></span><br><span class="line">    pRBTreeNode pRealDeleteNode = <span class="literal">nullptr</span>;</span><br><span class="line">    pRBTreeNode pFixUpNode = <span class="literal">nullptr</span>;</span><br><span class="line">    RBTColor RealDeleteColor;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.1如果左子树为空</span></span><br><span class="line">    <span class="keyword">if</span> (pNil == pDeletedNode-&gt;pLeft)</span><br><span class="line">    &#123;</span><br><span class="line">        pRealDeleteNode = pDeletedNode;</span><br><span class="line">        RealDeleteColor = pRealDeleteNode-&gt;Color;</span><br><span class="line">        pFixUpNode = pRealDeleteNode-&gt;pRight;</span><br><span class="line">        <span class="comment">//替换</span></span><br><span class="line">        ReplaceParent(pRealDeleteNode, pRealDeleteNode-&gt;pRight);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3.2 如果右子树为空</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pNil == pDeletedNode-&gt;pRight)</span><br><span class="line">    &#123;</span><br><span class="line">        pRealDeleteNode = pDeletedNode;</span><br><span class="line">        RealDeleteColor = pRealDeleteNode-&gt;Color;</span><br><span class="line">        pFixUpNode = pRealDeleteNode-&gt;pLeft;</span><br><span class="line">        <span class="comment">//替换</span></span><br><span class="line">        ReplaceParent(pRealDeleteNode, pRealDeleteNode-&gt;pLeft);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3.3 如果左右子树都不为空</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">可以用右子树的最小的节点或者左子树的最大的节点来替换，这里选择右子树的最小的节点。这样可以保证二叉搜索树的性质不变</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        <span class="comment">//获取准备删除节点的右子树的最小节点，pRealDeleteNode一定不是pNil</span></span><br><span class="line">        <span class="keyword">bool</span> GetMinRet = GetMinNode(pDeletedNode-&gt;pRight, pRealDeleteNode);</span><br><span class="line">        assert(GetMinRet);</span><br><span class="line">        assert(pRealDeleteNode != pNil);</span><br><span class="line">        RealDeleteColor = pRealDeleteNode-&gt;Color;</span><br><span class="line">        <span class="comment">//最小的点的左子树已定位pNil,所以pRight就是它的后继节点。</span></span><br><span class="line">        pFixUpNode = pRealDeleteNode-&gt;pRight;</span><br><span class="line">        <span class="comment">//思路是用最小点（pRealDeleteNode）来替换需要删除的点（pDeletedNode）的位置，分两种情况</span></span><br><span class="line">        <span class="keyword">if</span> (pRealDeleteNode-&gt;pParent == pDeletedNode)</span><br><span class="line">        &#123;</span><br><span class="line">            pFixUpNode-&gt;pParent = pRealDeleteNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//让pRealDeleteNode父节点指向 pRealDeleteNode-&gt;pRight</span></span><br><span class="line">            ReplaceParent(pRealDeleteNode, pRealDeleteNode-&gt;pRight);</span><br><span class="line">            <span class="comment">//让pRealDeleteNode的右节点接管原来pDeletedNode的右节点</span></span><br><span class="line">            pRealDeleteNode-&gt;pRight = pDeletedNode-&gt;pRight;</span><br><span class="line">            <span class="comment">//让pRealDeleteNode的右节点的父节点指向pRealDeleteNode(右子树一定不为pNil)</span></span><br><span class="line">            pRealDeleteNode-&gt;pRight-&gt;pParent = pRealDeleteNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//让pDeleteNode父节点指向pRealDeleteNode</span></span><br><span class="line">        ReplaceParent(pDeletedNode, pRealDeleteNode);</span><br><span class="line">        <span class="comment">//让pRealDeleteNode的左节点接管原来pDeleteNode的右节点</span></span><br><span class="line">        pRealDeleteNode-&gt;pLeft = pDeletedNode-&gt;pLeft;</span><br><span class="line">        <span class="comment">//让pRealDeleteNode的左孩子的父节点指向pRealDeleteNode(左子树一定不为pNil)</span></span><br><span class="line">        pRealDeleteNode-&gt;pLeft-&gt;pParent = pRealDeleteNode;</span><br><span class="line">        <span class="comment">// 使用pDeleteNode的颜色</span></span><br><span class="line">        pRealDeleteNode-&gt;Color = pDeletedNode-&gt;Color;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//4. 在pFixUpNode点执行调整</span></span><br><span class="line">    <span class="keyword">if</span> (RBT_COLOR_BLACK == RealDeleteColor)</span><br><span class="line">    &#123;</span><br><span class="line">        DeleteFixUp(pFixUpNode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//5. 处理根节点问题</span></span><br><span class="line">    <span class="keyword">if</span> (pRoot == pNil)</span><br><span class="line">        pRoot = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">delete</span> pDeletedNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> RBTree::InsertData(<span class="keyword">int</span> InsertValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">插入节点：</span></span><br><span class="line"><span class="comment">以二叉查找树的方法增加一个节点。</span></span><br><span class="line"><span class="comment">一开始要把节点的颜色标记为红色。如果设为黑色，会导致根到叶子的路径上，会有一条路多一个额外的黑色节点。这个是很难调整的。</span></span><br><span class="line"><span class="comment">另一个理解是，把插入的节点着色为红色，不会违背约束条件1235，只违背一个约束条件，需要处理的情况会很少。</span></span><br><span class="line"><span class="comment">插入后，通过一系列的旋转、着色等操作，使之重新成为一颗红黑树。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="comment">//插入的特殊情况：要插入的节点是第一个节点</span></span><br><span class="line">    <span class="keyword">if</span> (isEmpty())</span><br><span class="line">    &#123;</span><br><span class="line">        pRoot = <span class="keyword">new</span> RBTreeNode();</span><br><span class="line">        pRoot-&gt;Color = RBT_COLOR_BLACK;</span><br><span class="line">        pRoot-&gt;Value = InsertValue;</span><br><span class="line">        pRoot-&gt;pLeft = pNil;</span><br><span class="line">        pRoot-&gt;pRight = pNil;</span><br><span class="line">        pRoot-&gt;pParent = pNil;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2. 找到需要插入的位置</span></span><br><span class="line">    pRBTreeNode pPreNode = pRoot-&gt;pParent;</span><br><span class="line">    pRBTreeNode pCurrent = pRoot;</span><br><span class="line">    <span class="keyword">while</span> (pNil != pCurrent)</span><br><span class="line">    &#123;</span><br><span class="line">        pPreNode = pCurrent;</span><br><span class="line">        <span class="keyword">if</span> (InsertValue &lt;= pCurrent-&gt;Value)</span><br><span class="line">        &#123;</span><br><span class="line">            pCurrent = pCurrent-&gt;pLeft;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            pCurrent = pCurrent-&gt;pRight;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3. 把数据插入到正确的位置</span></span><br><span class="line">    pRBTreeNode pInsertNode = <span class="keyword">new</span> RBTreeNode();</span><br><span class="line">    pInsertNode-&gt;Color = RBT_COLOR_RED;</span><br><span class="line">    pInsertNode-&gt;Value = InsertValue;</span><br><span class="line">    pInsertNode-&gt;pLeft = pNil;</span><br><span class="line">    pInsertNode-&gt;pRight = pNil;</span><br><span class="line">    pInsertNode-&gt;pParent = pPreNode;</span><br><span class="line">    <span class="keyword">if</span> (InsertValue &lt;= pPreNode-&gt;Value)</span><br><span class="line">    &#123;</span><br><span class="line">        pPreNode-&gt;pLeft = pInsertNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        pPreNode-&gt;pRight = pInsertNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//4. 调整</span></span><br><span class="line">    InsertFixUP(pInsertNode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h1><p>main.cpp<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"RBTree.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    RBTree rbTree;</span><br><span class="line">    <span class="comment">//插入</span></span><br><span class="line">    <span class="keyword">int</span> n[]= &#123; <span class="number">12</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">19</span>, <span class="number">4</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">16</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">17</span> &#125;;</span><br><span class="line">    <span class="comment">//int n[] = &#123;1,2,3 &#125;;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        rbTree.InsertData(n[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rbTree.BFS();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"------------------------------"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"删除"</span> &lt;&lt; n[i] &lt;&lt; <span class="string">"后"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        rbTree.DeleteElement(n[i]);</span><br><span class="line">        rbTree.BFS();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//插入任意序列</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"插入任意序列"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        rbTree.InsertData(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查找3</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"查找3"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"结果:"</span> &lt;&lt; rbTree.FindElement(<span class="number">3</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    rbTree.BFS();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"------------------------------"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//删除任意序列,只留三个</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">99</span>; i &gt;= <span class="number">3</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        rbTree.DeleteElement(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//广度遍历</span></span><br><span class="line">    rbTree.BFS();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"------------------------------"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h1><h2 id="左旋"><a href="#左旋" class="headerlink" title="左旋"></a>左旋</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法课上老师讲了红黑树。根据网上大神的文章，自己又敲了一遍。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://www.windsings.com/categories/algorithm/"/>
    
    
      <category term="红黑树" scheme="https://www.windsings.com/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    
      <category term="算法导论" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/"/>
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Win10+Anaconda+1060安装TensorFlowow-GPU版</title>
    <link href="https://www.windsings.com//posts/2e45cbc8/"/>
    <id>https://www.windsings.com//posts/2e45cbc8/</id>
    <published>2018-10-05T18:46:44.000Z</published>
    <updated>2018-10-06T18:36:29.095Z</updated>
    
    <content type="html"><![CDATA[<p>1060真香。<br><a id="more"></a></p><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>TensorFlow是一个用于机器学习&amp;&amp;深度学习的框架，使用GPU在大多数情况下，可以大幅提高其运算速度。</p><p>本文记录了我安装TensorFlow-GPU版本的过程。</p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ol><li>操作系统：Win10，Windows SDK：10.0.17134.0</li><li>GPU型号：GTX1060，移动版</li><li>IDE：VS2017企业版，版本15.8.5</li><li>Anaconda版本1.9.2</li><li>目标TensorFlow版本：1.10</li></ol><h1 id="安装NVIDIA显卡驱动"><a href="#安装NVIDIA显卡驱动" class="headerlink" title="安装NVIDIA显卡驱动"></a>安装NVIDIA显卡驱动</h1><p>一般的都是GTX系列的显卡，可由NVIDIA官网下载或者从电脑厂商给出的驱动里安装。<br>我的笔记本是联想拯救者Y7000P，我这里直接安装的联想给的驱动。</p><h1 id="安装CUDA和cudnn"><a href="#安装CUDA和cudnn" class="headerlink" title="安装CUDA和cudnn"></a>安装CUDA和cudnn</h1><p>在TensorFlow的安装介绍里的显示，TensorFlow支持CUDA9.0。</p><p>下载CUDA的时候发现，CUDA9.0竟然不支持1060。曾考虑在Docker环境下安装TensorFlow，但是发现NVIDIA给的GPU支持的Docker环境是Linux下的，不支持Windows。</p><p>如果要在CUDA9.2下安装TensorFlow，则要通过源码编译。不过好在有大神已经编译好了。</p><p>安装CUDA9.2，及其补丁程序。</p><p>在cudnn里找到支持CUDA9.2的版本。解压后将bin,include,lib文件夹的文件（一共就三个）复制到CUDA9.2的目录（C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.2）里。</p><p>至此，CUDA9.2已安装完毕。</p><p>我的VS是VS2017企业版，版本15.8.5。为了能正常的运行CUDA9.2给出的示例代码，需要将C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.2\include\crt里的host_config.h 第131行，改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#if _MSC_VER &lt; 1600 || _MSC_VER &gt; 1920</span><br></pre></td></tr></table></figure></p><p>然后就可以打开对应的VS2017的.sln文件，运行示例代码了。</p><h1 id="在Anaconda环境中安装TensorFlow1-10"><a href="#在Anaconda环境中安装TensorFlow1-10" class="headerlink" title="在Anaconda环境中安装TensorFlow1.10"></a>在Anaconda环境中安装TensorFlow1.10</h1><p>以管理员身份运行anaconda prompt。</p><p>首先在anaconda里建一个目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n tensorflow pip python=3.6</span><br></pre></td></tr></table></figure></p><p>激活<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate tensorflow</span><br></pre></td></tr></table></figure></p><p>更新pip<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure></p><p>在<a href="https://github.com/fo40225/tensorflow-windows-wheel/tree/master/1.10.0/py36/GPU/cuda92cudnn72sse2" target="_blank" rel="noopener">这里</a>下载由大神编译好的TensorFlow1.10GPU版本。</p><p>转到下载目录，通过pip install命令安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install tensorflow_gpu-1.10.0-cp36-cp36m-win_amd64.whl</span><br></pre></td></tr></table></figure></p><p>结果如图<br><img src="/posts/2e45cbc8/安装TF1.png" alt="安装TF1"></p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="安装测试代码"><a href="#安装测试代码" class="headerlink" title="安装测试代码"></a>安装测试代码</h2><p>检测是否安装成功的代码：</p><ol><li><p>调用Python</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python</span><br></pre></td></tr></table></figure></li><li><p>在 Python 交互式 shell 中输入以下几行程序代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import tensorflow as tf</span><br><span class="line">&gt;&gt;&gt; hello = tf.constant(&apos;Hello, TensorFlow!&apos;)</span><br><span class="line">&gt;&gt;&gt; sess = tf.Session()</span><br><span class="line">&gt;&gt;&gt; print(sess.run(hello))</span><br></pre></td></tr></table></figure></li></ol><p>运行结果如图<br><img src="/posts/2e45cbc8/安装TF2.png" alt="安装TF2"><br>表示安装成功。</p><h2 id="测试GPU速度代码"><a href="#测试GPU速度代码" class="headerlink" title="测试GPU速度代码"></a>测试GPU速度代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">device_name=<span class="string">"/cpu:0"</span></span><br><span class="line"></span><br><span class="line">shape=(int(<span class="number">10000</span>),int(<span class="number">10000</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.device(device_name):</span><br><span class="line"><span class="comment">#形状为shap,元素服从minval和maxval之间的均匀分布</span></span><br><span class="line">    random_matrix = tf.random_uniform(shape=shape, minval=<span class="number">0</span>, maxval=<span class="number">1</span>)</span><br><span class="line">    dot_operation = tf.matmul(random_matrix, tf.transpose(random_matrix))</span><br><span class="line">    sum_operation = tf.reduce_sum(dot_operation)</span><br><span class="line"></span><br><span class="line">startTime = datetime.now()</span><br><span class="line"><span class="keyword">with</span> tf.Session(config=tf.ConfigProto(log_device_placement=<span class="keyword">True</span>)) <span class="keyword">as</span> session:</span><br><span class="line">    result = session.run(sum_operation)</span><br><span class="line">    print(result)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n"</span> * <span class="number">2</span>)</span><br><span class="line">print(<span class="string">"Shape:"</span>, shape, <span class="string">"Device:"</span>, device_name)</span><br><span class="line">print(<span class="string">"Time taken:"</span>, datetime.now() - startTime)</span><br></pre></td></tr></table></figure><p>在我的电脑上，运行结果如下：</p><p>使用GPU：<br><img src="/posts/2e45cbc8/gpu.png" alt="gpu"><br>使用CPU：<br><img src="/posts/2e45cbc8/cpu.png" alt="cpu"></p><p>可见，就上述代码而言，使用GPU是比使用CPU快好几倍的。</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1060真香。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.windsings.com/categories/Technology/"/>
    
    
      <category term="TensorFlow" scheme="https://www.windsings.com/tags/TensorFlow/"/>
    
      <category term="GPU" scheme="https://www.windsings.com/tags/GPU/"/>
    
      <category term="Anaconda" scheme="https://www.windsings.com/tags/Anaconda/"/>
    
      <category term="GTX1060" scheme="https://www.windsings.com/tags/GTX1060/"/>
    
      <category term="安装教程" scheme="https://www.windsings.com/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    
      <category term="机器学习" scheme="https://www.windsings.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="深度学习" scheme="https://www.windsings.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>01背包笔记</title>
    <link href="https://www.windsings.com//posts/829adb17/"/>
    <id>https://www.windsings.com//posts/829adb17/</id>
    <published>2018-09-20T09:42:08.000Z</published>
    <updated>2018-09-27T18:29:43.430Z</updated>
    
    <content type="html"><![CDATA[<h1 id="01背包问题描述"><a href="#01背包问题描述" class="headerlink" title="01背包问题描述"></a>01背包问题描述</h1><p>已知:有一个容量为V的背包和N件物品，第i件物品的重量是weight[i]，收益是cost[i]。</p><p>限制:每种物品只有一件，可以选择放或者不放</p><p>问题:在不超过背包容量的情况下，最多能获得多少价值或收益</p><p>相似问题:在恰好装满背包的情况下，最多能获得多少价值或收益</p><p>这里，我们先讨论在不超过背包容量的情况下，最多能获得多少价值或收益。<br><a id="more"></a></p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><h2 id="问题特点"><a href="#问题特点" class="headerlink" title="问题特点"></a>问题特点</h2><p>每种物品只有一件，可以选择放或者不放。</p><h2 id="子问题"><a href="#子问题" class="headerlink" title="子问题"></a>子问题</h2><p>定义f[i][v]:前i件物品放到一个容量为v的背包中可以获得的最大价值。</p><h2 id="状态转移方程"><a href="#状态转移方程" class="headerlink" title="状态转移方程"></a>状态转移方程</h2><p>f[i][v]=max(f[i - 1][v],f[i - 1][v - weight[i]] + cost[i])</p><p>代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= W; j++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">if</span>(j &lt; w[i])    dp[i][j]  = dp[i<span class="number">-1</span>][j];  </span><br><span class="line">            <span class="keyword">else</span> dp[i][j] =  max(dp[i<span class="number">-1</span>][j], dp[i<span class="number">-1</span>][j - w[i]] + v[i]);  </span><br><span class="line">        &#125;  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>即对于第i件物品，放入背包或者不放入背包。</p><h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><p>考虑我们的子问题，将前i件物品放到容量为v的背包中，若我们只考虑第i件物品时，它有两种选择，放或者不放。</p><ol><li>如果第i件物品不放入背包中，那么问题就转换为：将前i - 1件物品放到容量为v的背包中，带来的收益f[i - 1][v]</li><li>如果第i件物品能放入背包中，那么问题就转换为：将前i - 1件物品放到容量为v - weight[i]的背包中，带来的收益f[i - 1][v - weight[i]] + cost[i]。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3</span>;<span class="comment">//物品个数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> V = <span class="number">5</span>;<span class="comment">//背包最大容量</span></span><br><span class="line"><span class="keyword">int</span> weight[N + <span class="number">1</span>] = &#123;<span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>&#125;;<span class="comment">//物品重量</span></span><br><span class="line"><span class="keyword">int</span> value[N + <span class="number">1</span>] = &#123;<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">20</span>&#125;;<span class="comment">//物品价值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[N + <span class="number">1</span>][V + <span class="number">1</span>] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">目标：在不超过背包容量的情况下，最多能获得多少价值</span></span><br><span class="line"><span class="comment">子问题状态:f[i][j]:表示前i件物品放入容量为j的背包得到的最大价值</span></span><br><span class="line"><span class="comment">状态转移方程:f[i][j] = max&#123;f[i - 1][j],f[i - 1][j - weight[i]] + value[i]&#125;</span></span><br><span class="line"><span class="comment">初始化:f数组全设置为0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Knapsack</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="comment">//递推</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++) <span class="comment">//枚举物品</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt;= V;j++) <span class="comment">//枚举背包容量</span></span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = f[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= weight[i])</span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j] = Max(f[i - <span class="number">1</span>][j],f[i - <span class="number">1</span>][j - weight[i]] + value[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[N][V];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;Knapsack()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="效率分析"><a href="#效率分析" class="headerlink" title="效率分析"></a>效率分析</h2><p>以上算法的时间复杂度为O（N*V），空间复杂度也是O（N*V）。其中N代表物品的个数，V是背包的容量。</p><p>时间复杂度不可以再优化了，但是空间复杂度是可以继续优化到O(V)。</p><h3 id="优化分析"><a href="#优化分析" class="headerlink" title="优化分析"></a>优化分析</h3><p>可以只用f[V]表示中间状态。根据状态转移方程：</p><p>f[i][v]=max(f[i - 1][v],f[i - 1][v - weight[i]] + cost[i])</p><p>要想得到f[i][v]只需要知道 f[i - 1][v] 和 f[i - 1][v - weight[i]]。</p><p>我的理解：由于只有一位数组，所以在求得f[i][v]之后，就要把f[i - 1][v]覆盖掉了。</p><p>因此求f数组的方法如下：</p><ol><li>初始状态：计算前1件物品放到容量为V的背包中带来的收益。</li><li>递推关系：在i&gt;=2时，根据前i-1个物品放到容量为v中的背包中带来的收益，即用二维数组的时候的f[i-1][v]。根据前i-1个物品放到容量为v-weight[i]的背包中带来的收益，即用二维数组的时候的f[i-1][v-weight[i]]。计算f[i-1][v-weight[i]]+cost[i]。</li><li>在执行第i次循环之前，f[0~v]中保存的是第i-1次循环的结果，即是前i-1个物体分别放到容量0~V时的最大值，即f[i-1][0~V]。</li><li>由递推公式：f[i][v]=max(f[i - 1][v],f[i - 1][v - weight[i]] + cost[i])可以看出：在更新f[v]的时候，要用到f[v]和f[v-weight[i]]则两个值，因此需要<strong>逆序</strong>更新。即从V…0更新。</li></ol><p>逆序更新数组的原因：</p><p>我们是由第 i-1 次循环的两个状态推出第i个状态的，而且v&gt;v-weight[i]，则对于第i次循环，背包容量只有当V..0循环时，才会先处理背包容量为v的状况，后处理背包容量为 v-weight[i] 的情况。</p><p>具体来说，由于，在执行v时，还没执行到v - weight[i]的，因此，f[v-weight[i]]保存的还是第i - 1次循环的结果。即在执行第i次循环 且 背包容量为v时，此时的f[v]存储的是 f[i-1][v] ，此时f[v-weight[i]]存储的是f[i-1][v-weight[i]]。</p><p>相反，如果在执行第 i 次循环时，背包容量按照0..V的顺序遍历一遍，来检测第 i 件物品是否能放。此时在执行第i次循环 且 背包容量为v时，此时的f[v]存储的是 f[i - 1][v] ，但是，此时f[v-weight[i]]存储的是f[i][v-weight[i]]。</p><p>举例子就是，假设更新f[8]要用到f[8]和f[6]，更新f[6]要用到f[6]和f[4]，如果先更新了f[4]，那么就无法更新后面的f[6]和f[8]。</p><p>因此伪代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1.</span>.N <span class="comment">//枚举物品</span></span><br><span class="line">    <span class="keyword">for</span> v=V.<span class="number">.0</span> <span class="comment">//枚举容量，从大到小</span></span><br><span class="line">        f[v]=max&#123;f[v],f[v-weight[i]] + cost[i]&#125;;</span><br></pre></td></tr></table></figure></p><p>多说一点，顺序更新数组（顺序枚举容量）是<strong>完全背包问题</strong>的最佳解决方案。</p><h3 id="常数阶优化1"><a href="#常数阶优化1" class="headerlink" title="常数阶优化1"></a>常数阶优化1</h3><p>根据前文说的，使用一维数组描述状态更新的伪代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1.</span>.N <span class="comment">//枚举物品</span></span><br><span class="line">    <span class="keyword">for</span> v=V.<span class="number">.0</span> <span class="comment">//枚举容量，从大到小</span></span><br><span class="line">        f[v]=max&#123;f[v],f[v-weight[i]] + cost[i]&#125;;</span><br></pre></td></tr></table></figure></p><p>对于第i个物品，枚举容量到weight[i]就可以停止了。一是可以防止越界，二是容量为负的背包无意义。</p><p>因此伪代码可以更新为<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1.</span>.N <span class="comment">//枚举物品</span></span><br><span class="line">    <span class="keyword">for</span> v=V..weight[i] <span class="comment">//枚举容量，从大到小</span></span><br><span class="line">        f[v]=max&#123;f[v],f[v-weight[i]] + cost[i]&#125;;</span><br></pre></td></tr></table></figure></p><p>还有一个小优化就是，先处理花费较大的物品，这样可以使后续物品的循环次数更少。因此可以先把物品按照花费从大到小排序。</p><h3 id="常数阶优化2"><a href="#常数阶优化2" class="headerlink" title="常数阶优化2"></a>常数阶优化2</h3><p>在常数阶优化1中，我们把下界定为了weight[i]，意思是，至少需要weight[i]才可以放下第i个物品。</p><p>继续想如下情况，加入这个背包的容量非常非常大，大到能把i及之后的所有的物品全放进去。这时，就没有必要再去计算之后的情况了。即对于物品i，计算小于V-sum{weight[i..n]}的v的值，无意义，反正所有东西都能放进去。</p><p>也就是说，我们可以把下界调整到bound=max{V-sum{weight[i..n]},weight[i]}。</p><p>代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1.</span>.N <span class="comment">//枚举物品</span></span><br><span class="line">    bound=max&#123;V-sum&#123;weight[i..n]&#125;,weight[i]&#125;<span class="comment">//确定需要枚举容量的下界</span></span><br><span class="line">    <span class="keyword">for</span> v=V..bound</span><br><span class="line">        f[v]=max&#123;f[v],f[v-weight[i]] + cost[i]&#125;;</span><br></pre></td></tr></table></figure></p><p>这个优化对于V很大的情况下，效果很好。</p><h2 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h2><p>这个例子没有对weight进行排序。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3</span>;<span class="comment">//物品个数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> V = <span class="number">5</span>;<span class="comment">//背包最大容量</span></span><br><span class="line"><span class="keyword">int</span> weight[N + <span class="number">1</span>] = &#123;<span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>&#125;;<span class="comment">//物品重量</span></span><br><span class="line"><span class="keyword">int</span> value[N + <span class="number">1</span>] = &#123;<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">20</span>&#125;;<span class="comment">//物品价值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[V + <span class="number">1</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">目标：在不超过背包容量的情况下，最多能获得多少价值</span></span><br><span class="line"><span class="comment">子问题状态:f[j]:表示前i件物品放入容量为j的背包得到的最大价值</span></span><br><span class="line"><span class="comment">状态转移方程:f[j] = max&#123;f[j],f[j - weight[i]] + value[i]&#125;</span></span><br><span class="line"><span class="comment">初始化:f数组全设置为0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Knapsack</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;<span class="comment">//存储还未处理物品的总容量</span></span><br><span class="line">    <span class="keyword">int</span> bound = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += weight[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//递推</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i++) <span class="comment">//枚举物品</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//设置下界</span></span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            sum -= weight[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        bound = Max(V - sum,weight[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = V;j &gt;= bound;j--) <span class="comment">//枚举背包容量</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (f[j] &lt; f[j - weight[i]] + value[i])</span><br><span class="line">            &#123;</span><br><span class="line">                f[j] = f[j - weight[i]] + value[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[V];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;Knapsack()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;01背包问题描述&quot;&gt;&lt;a href=&quot;#01背包问题描述&quot; class=&quot;headerlink&quot; title=&quot;01背包问题描述&quot;&gt;&lt;/a&gt;01背包问题描述&lt;/h1&gt;&lt;p&gt;已知:有一个容量为V的背包和N件物品，第i件物品的重量是weight[i]，收益是cost[i]。&lt;/p&gt;
&lt;p&gt;限制:每种物品只有一件，可以选择放或者不放&lt;/p&gt;
&lt;p&gt;问题:在不超过背包容量的情况下，最多能获得多少价值或收益&lt;/p&gt;
&lt;p&gt;相似问题:在恰好装满背包的情况下，最多能获得多少价值或收益&lt;/p&gt;
&lt;p&gt;这里，我们先讨论在不超过背包容量的情况下，最多能获得多少价值或收益。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://www.windsings.com/categories/algorithm/"/>
    
    
      <category term="动态规划" scheme="https://www.windsings.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="01背包" scheme="https://www.windsings.com/tags/01%E8%83%8C%E5%8C%85/"/>
    
      <category term="NP-Hard" scheme="https://www.windsings.com/tags/NP-Hard/"/>
    
  </entry>
  
  <entry>
    <title>读研日记</title>
    <link href="https://www.windsings.com//posts/52379290/"/>
    <id>https://www.windsings.com//posts/52379290/</id>
    <published>2018-09-11T14:16:14.000Z</published>
    <updated>2018-10-15T11:58:38.626Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">输入密码访问</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      我的读研日记。谨以此文记录我的研究生生涯。
    
    </summary>
    
      <category term="日记" scheme="https://www.windsings.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="https://www.windsings.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="研究生" scheme="https://www.windsings.com/tags/%E7%A0%94%E7%A9%B6%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>POJ-2996 Help Me with the Game</title>
    <link href="https://www.windsings.com//posts/a5731d96/"/>
    <id>https://www.windsings.com//posts/a5731d96/</id>
    <published>2018-09-04T06:28:16.000Z</published>
    <updated>2018-09-04T07:34:35.828Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=2996" target="_blank" rel="noopener">题目链接</a><br>帮我完成游戏<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Your task is to read a picture of a chessboard position and print it in the chess notation.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>The input consists of an ASCII-art picture of a chessboard with chess pieces on positions described by the input. The pieces of the white player are shown in upper-case letters, while the black player’s pieces are lower-case letters. The letters are one of “K” (King), “Q” (Queen), “R” (Rook), “B” (Bishop), “N” (Knight), or “P” (Pawn). The chessboard outline is made of plus (“+”), minus (“-“), and pipe (“|”) characters. The black fields are filled with colons (“:”), white fields with dots (“.”).</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>The output consists of two lines. The first line consists of the string “White: “, followed by the description of positions of the pieces of the white player. The second line consists of the string “Black: “, followed by the description of positions of the pieces of the black player.</p><p>The description of the position of the pieces is a comma-separated list of terms describing the pieces of the appropriate player. The description of a piece consists of a single upper-case letter that denotes the type of the piece (except for pawns, for that this identifier is omitted). This letter is immediatelly followed by the position of the piece in the standard chess notation – a lower-case letter between “a” and “h” that determines the column (“a” is the leftmost column in the input) and a single digit between 1 and 8 that determines the row (8 is the first row in the input).</p><p>The pieces in the description must appear in the following order: King(“K”), Queens (“Q”), Rooks (“R”), Bishops (“B”), Knights (“N”), and pawns. Note that the numbers of pieces may differ from the initial position because of capturing the pieces and the promotions of pawns. In case two pieces of the same type appear in the input, the piece with the smaller row number must be described before the other one if the pieces are white, and the one with the larger row number must be described first if the pieces are black. If two pieces of the same type appear in the same row, the one with the smaller column letter must appear first.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>根据棋盘打印国际象棋的棋子。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>白色玩家的棋子用大写字母显示，黑色玩家的棋子用小写字母显示。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出由两行组成，第一行是字符串“White:”，后面跟白色棋子的描述，第二行是“Black”后面跟黑色棋子的描述。</p><p>每个棋子的描述由一个大写字母组成（如果不是Pawns的话）。然后紧跟的是棋子的位置，a~h用于确定列，1~8用于确定行（8是输入中的第一行）。</p><p>描述部分必须按照以下顺序出现：K,Q,R,B,N和Pawns。输出的排序规则如下：类型不同，按照前述顺序，如果 类型相同，白色棋子具有较小行号的优先，黑色棋子则是行号大的优先。如果仍然相同，则列较小的优先。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>模拟</p><h2 id="代码-C"><a href="#代码-C" class="headerlink" title="代码 C++"></a>代码 C++</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> lieshu[<span class="number">9</span>] = &#123;<span class="string">'z'</span>, <span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span> &#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">bool</span> xiaobing;</span><br><span class="line">    <span class="keyword">char</span> qizi;</span><br><span class="line">    <span class="keyword">char</span> lie;</span><br><span class="line">    <span class="keyword">int</span> hang;</span><br><span class="line">&#125;node;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;yingshe;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; Black;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; White;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    yingshe[<span class="string">'K'</span>] = <span class="number">6</span>;</span><br><span class="line">    yingshe[<span class="string">'Q'</span>] = <span class="number">5</span>;</span><br><span class="line">    yingshe[<span class="string">'R'</span>] = <span class="number">4</span>;</span><br><span class="line">    yingshe[<span class="string">'B'</span>] = <span class="number">3</span>;</span><br><span class="line">    yingshe[<span class="string">'N'</span>] = <span class="number">2</span>;</span><br><span class="line">    yingshe[<span class="string">'P'</span>] = <span class="number">1</span>;</span><br><span class="line">    yingshe[<span class="string">'k'</span>] = <span class="number">6</span>;</span><br><span class="line">    yingshe[<span class="string">'q'</span>] = <span class="number">5</span>;</span><br><span class="line">    yingshe[<span class="string">'r'</span>] = <span class="number">4</span>;</span><br><span class="line">    yingshe[<span class="string">'b'</span>] = <span class="number">3</span>;</span><br><span class="line">    yingshe[<span class="string">'n'</span>] = <span class="number">2</span>;</span><br><span class="line">    yingshe[<span class="string">'p'</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(node a, node b)</span><span class="comment">//白色的，行较小优先</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.xiaobing != b.xiaobing)</span><br><span class="line">        <span class="keyword">return</span>(a.xiaobing &lt; b.xiaobing);</span><br><span class="line">    <span class="keyword">if</span> (yingshe[a.qizi] != yingshe[b.qizi])</span><br><span class="line">        <span class="keyword">return</span> yingshe[a.qizi] &gt; yingshe[b.qizi];</span><br><span class="line">    <span class="keyword">if</span> (a.hang != b.hang)</span><br><span class="line">        <span class="keyword">return</span> a.hang &lt; b.hang;</span><br><span class="line">    <span class="keyword">if</span> (a.lie != b.lie)</span><br><span class="line">        <span class="keyword">return</span> a.lie &lt; b.lie;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(node a, node b)</span><span class="comment">//黑色的，行较大优先</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.xiaobing != b.xiaobing)</span><br><span class="line">        <span class="keyword">return</span>(a.xiaobing &lt; b.xiaobing);</span><br><span class="line">    <span class="keyword">if</span> (yingshe[a.qizi] != yingshe[b.qizi])</span><br><span class="line">        <span class="keyword">return</span> yingshe[a.qizi] &gt; yingshe[b.qizi];</span><br><span class="line">    <span class="keyword">if</span> (a.hang != b.hang)</span><br><span class="line">        <span class="keyword">return</span> a.hang &gt; b.hang;</span><br><span class="line">    <span class="keyword">if</span> (a.lie != b.lie)</span><br><span class="line">        <span class="keyword">return</span> a.lie &lt; b.lie;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> cntb = <span class="number">0</span>, cntw = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">17</span>;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">int</span> z = <span class="number">1</span>;</span><br><span class="line">    node temp;</span><br><span class="line">    <span class="keyword">while</span> (z++!=t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>] == <span class="string">'+'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">'.'</span>||str[i]==<span class="string">':'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (str[i + <span class="number">1</span>] != <span class="string">'.'</span>&amp;&amp;str[i + <span class="number">1</span>] != <span class="string">':'</span>&amp;&amp;str[i + <span class="number">1</span>] != <span class="string">'|'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (str[i+<span class="number">1</span>]&lt;=<span class="string">'Z'</span>&amp;&amp;str[i+<span class="number">1</span>]&gt;=<span class="string">'A'</span>)<span class="comment">//大写字母，白色</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (str[i + <span class="number">1</span>] == <span class="string">'P'</span>)</span><br><span class="line">                            temp.xiaobing = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            temp.xiaobing = <span class="literal">false</span>;</span><br><span class="line">                        temp.qizi = str[i + <span class="number">1</span>];</span><br><span class="line">                        temp.hang = (t - z + <span class="number">2</span>) / <span class="number">2</span>;</span><br><span class="line">                        temp.lie = (i + <span class="number">3</span>) / <span class="number">4</span>;</span><br><span class="line">                        White.push_back(temp);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (str[i + <span class="number">1</span>] == <span class="string">'p'</span>)</span><br><span class="line">                            temp.xiaobing = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            temp.xiaobing = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                        temp.qizi = str[i + <span class="number">1</span>];</span><br><span class="line">                        temp.hang = (t - z + <span class="number">2</span>) / <span class="number">2</span>;</span><br><span class="line">                        temp.lie = (i + <span class="number">3</span>) / <span class="number">4</span>;</span><br><span class="line">                        Black.push_back(temp);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(White.begin(), White.end(), cmp1);</span><br><span class="line">    sort(Black.begin(), Black.end(), cmp2);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"White: "</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; White.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (White[i].qizi != <span class="string">'P'</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; White[i].qizi;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; lieshu[White[i].lie] &lt;&lt; White[i].hang;</span><br><span class="line">        <span class="keyword">if</span> (i != White.size() - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">','</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Black: "</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Black.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Black[i].qizi != <span class="string">'p'</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, Black[i].qizi - <span class="string">'a'</span> + <span class="string">'A'</span>);<span class="comment">//小写换大写</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; lieshu[Black[i].lie] &lt;&lt; Black[i].hang;</span><br><span class="line">        <span class="keyword">if</span> (i != Black.size() - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">','</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|...|:::|.n.|:::|...|:::|...|:p:|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|:::|...|:::|...|:::|...|:::|...|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|...|:::|...|:::|.P.|:::|...|:::|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|:P:|...|:::|...|:::|...|:::|...|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|</span><br><span class="line">+---+---+---+---+---+---+---+---+</span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line">White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4</span><br><span class="line">Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2996&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;帮我完成游戏&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="模拟" scheme="https://www.windsings.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
  </entry>
  
  <entry>
    <title>POJ-1573 Robot Motion</title>
    <link href="https://www.windsings.com//posts/5035921d/"/>
    <id>https://www.windsings.com//posts/5035921d/</id>
    <published>2018-09-04T06:28:04.000Z</published>
    <updated>2018-09-04T07:27:42.908Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=1573" target="_blank" rel="noopener">题目链接</a><br>机器人移动<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>A robot has been programmed to follow the instructions in its path. Instructions for the next direction the robot is to move are laid down in a grid. The possible instructions are</p><ul><li>N north (up the page)</li><li>S south (down the page)</li><li>E east (to the right on the page)</li><li>W west (to the left on the page)</li></ul><p>For example, suppose the robot starts on the north (top) side of Grid 1 and starts south (down). The path the robot follows is shown. The robot goes through 10 instructions in the grid before leaving the grid.</p><p>Compare what happens in Grid 2: the robot goes through 3 instructions only once, and then starts a loop through 8 instructions, and never exits.</p><p>You are to write a program that determines how long it takes a robot to get out of the grid or how the robot loops around.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>There will be one or more grids for robots to navigate. The data for each is in the following form. On the first line are three integers separated by blanks: the number of rows in the grid, the number of columns in the grid, and the number of the column in which the robot enters from the north. The possible entry columns are numbered starting with one at the left. Then come the rows of the direction instructions. Each grid will have at least one and at most 10 rows and columns of instructions. The lines of instructions contain only the characters N, S, E, or W with no blanks. The end of input is indicated by a row containing 0 0 0.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>For each grid in the input there is one line of output. Either the robot follows a certain number of instructions and exits the grid on any one the four sides or else the robot follows the instructions on a certain number of locations once, and then the instructions on some number of locations repeatedly. The sample input below corresponds to the two grids above and illustrates the two forms of output. The word “step” is always immediately followed by “(s)” whether or not the number before it is 1.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>机器人按照指令移动，问最后是走出了矩阵还是进入了一个循环当中。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行是三个整数，矩阵的行，矩阵的列，以及机器人最初所在的位置。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>如果机器人走出矩阵，输出t step(s) to exit  反之输出x step(s) before a loop of y step(s)</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>模拟</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h2 id="代码-C"><a href="#代码-C" class="headerlink" title="代码 C++"></a>代码 C++</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> m, n, Start;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt;G;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;visit;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; Start;</span><br><span class="line">        <span class="keyword">if</span> (!n &amp;&amp; !m &amp;&amp; !Start)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        G.clear(); visit.clear();</span><br><span class="line">        G.resize(n); visit.resize(n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            G[i].resize(m); visit[i].resize(m);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; G[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>, loop = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = Start<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span> (visit[i][j] == <span class="number">1</span>)</span><br><span class="line">                loop++;</span><br><span class="line">            visit[i][j]++;</span><br><span class="line">            <span class="keyword">switch</span> (G[i][j])</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'N'</span>:</span><br><span class="line">                i--; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'E'</span>:</span><br><span class="line">                j++; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'W'</span>:</span><br><span class="line">                j--; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'S'</span>:</span><br><span class="line">                i++; <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j &lt; <span class="number">0</span> || i &lt; <span class="number">0</span> || j &gt;= m || i &gt;= n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="string">" step(s) to exit"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (visit[i][j] == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; cnt - loop - loop &lt;&lt; <span class="string">" step(s) before a loop of "</span> &lt;&lt; loop &lt;&lt; <span class="string">" step(s)"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">6</span> <span class="number">5</span></span><br><span class="line">NEESWE</span><br><span class="line">WWWESS</span><br><span class="line">SNWWWW</span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">1</span></span><br><span class="line">SESWE</span><br><span class="line">EESNW</span><br><span class="line">NWEEN</span><br><span class="line">EWSEN</span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">10</span> step(s) to <span class="built_in">exit</span></span><br><span class="line"><span class="number">3</span> step(s) before a loop of <span class="number">8</span> step(s)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=1573&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;机器人移动&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="模拟" scheme="https://www.windsings.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
  </entry>
  
  <entry>
    <title>POJ-1860 Currency Exchange</title>
    <link href="https://www.windsings.com//posts/d8ff61b5/"/>
    <id>https://www.windsings.com//posts/d8ff61b5/</id>
    <published>2018-09-04T04:18:12.000Z</published>
    <updated>2018-09-04T07:22:02.292Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=1860" target="_blank" rel="noopener">题目链接</a><br>交换货币<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Several currency exchange points are working in our city. Let us suppose that each point specializes in two particular currencies and performs exchange operations only with these currencies. There can be several points specializing in the same pair of currencies. Each point has its own exchange rates, exchange rate of A to B is the quantity of B you get for 1A. Also each exchange point has some commission, the sum you have to pay for your exchange operation. Commission is always collected in source currency.<br>For example, if you want to exchange 100 US Dollars into Russian Rubles at the exchange point, where the exchange rate is 29.75, and the commission is 0.39 you will get (100 - 0.39) * 29.75 = 2963.3975RUR.<br>You surely know that there are N different currencies you can deal with in our city. Let us assign unique integer number from 1 to N to each currency. Then each exchange point can be described with 6 numbers: integer A and B - numbers of currencies it exchanges, and real R<sub>AB</sub>, C<sub>AB</sub>, R<sub>BA</sub> and C<sub>BA</sub> - exchange rates and commissions when exchanging A to B and B to A respectively.<br>Nick has some money in currency S and wonders if he can somehow, after some exchange operations, increase his capital. Of course, he wants to have his money in currency S in the end. Help him to answer this difficult question. Nick must always have non-negative sum of money while making his operations.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>The first line of the input contains four numbers: N - the number of currencies, M - the number of exchange points, S - the number of currency Nick has and V - the quantity of currency units he has. The following M lines contain 6 numbers each - the description of the corresponding exchange point - in specified above order. Numbers are separated by one or more spaces. 1&lt;=S&lt;=N&lt;=100, 1&lt;=M&lt;=100, V is real number, 0&lt;=V&lt;=10<sup>3</sup>.<br>For each point exchange rates and commissions are real, given with at most two digits after the decimal point, 10<sup>-2</sup>&lt;=rate&lt;=10<sup>2</sup>, 0&lt;=commission&lt;=10<sup>2</sup>.<br>Let us call some sequence of the exchange operations simple if no exchange point is used more than once in this sequence. You may assume that ratio of the numeric values of the sums at the end and at the beginning of any simple sequence of the exchange operations will be less than 10<sup>4</sup>.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>If Nick can increase his wealth, output YES, in other case output NO to the output file.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>有多种汇币，汇币之间可以交换，这需要手续费，当你用100A币交换B币时，A到B的汇率是29.75，手续费是0.39，那么你可以得到(100 - 0.39) * 29.75 = 2963.3975 B币。问s币的金额经过交换最终得到的s币金额数能否增加</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行是4个数字，N-货币的种类，M-交易所的数量。S-Nick一开始Nick所持有的货币种类。V-Nick一开始持有的货币的额数量。</p><p>接着是M行，每行包括6个数字，整数A和B-这个交易所交换的货币的种类，R<sub>AB</sub>, C<sub>AB</sub>, R<sub>BA</sub> 和 C<sub>BA</sub>两种货币间的汇率和手续费。</p><p>汇率和手续费保留小数点后2位，10<sup>-2</sup>&lt;=汇率&lt;=10<sup>2</sup>, 0&lt;=手续费&lt;=10<sup>2</sup></p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>如果钱能越换越多，输出YES，反之输出NO。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>这个题非常好，以前做最短路径的题，都真的是字面上的找最短路径。但是这个题是用BF算法找一个正权回路。</p><p>找出一条正权回路即可。</p><p>一种货币就是一个节点。</p><p>一个“兑换点”就是图上两种货币之间的一个兑换方式，是双边，但A到B的汇率和手续费可能与B到A的汇率和手续费不同。</p><p>唯一值得注意的是权值，当拥有货币A的数量为V时，A到A的权值为V，即没有兑换,而A到B的权值为(V-Cab)*Rab。</p><p>本题是“求最大路径”，之所以被归类为“求最小路径”是因为本题题恰恰与bellman-Ford算法的松弛条件相反，求的是能无限松弛的最大正权路径，但是依然能够利用bellman-Ford的思想去解题。</p><p>因此初始化dis(S)=V   而源点到其他点的距离（权值）初始化为无穷小（0），当s到其他某点的距离能不断变大时，说明存在最大路径；如果可以一直变大，说明存在正环。判断是否存在环路，用Bellman-Ford和spfa都可以。</p><h2 id="代码-C"><a href="#代码-C" class="headerlink" title="代码 C++"></a>代码 C++</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, s, cnt;<span class="comment">//n货币数量，m交易所数量，S初试货币的种类，V初始货币的数量，C为计数变量。</span></span><br><span class="line"><span class="keyword">double</span> v, dis[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">double</span> rate, cost;</span><br><span class="line">&#125;node;</span><br><span class="line">node p[<span class="number">220</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Bellman_Ford</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dis, <span class="number">0</span>, <span class="keyword">sizeof</span>(dis));  <span class="comment">//此处与Bellman-Ford的处理相反，初始化为源点到各点距离0，到自身的值为原值</span></span><br><span class="line">    dis[s] = v;<span class="comment">//一开始自己到自己的数量是V</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>; i++)<span class="comment">//限定最大循环次数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; j++)<span class="comment">//遍历每个交易所中，求得能换最多钱的</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a = p[j].a, b = p[j].b;</span><br><span class="line">            <span class="keyword">double</span> r = p[j].rate, c = p[j].cost;</span><br><span class="line">            <span class="keyword">if</span> (dis[b] &lt; (dis[a] - c) * r)</span><br><span class="line">            &#123;</span><br><span class="line">                dis[b] = (dis[a] - c) * r;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!flag)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">        <span class="keyword">if</span> (dis[p[i].b] &lt; (dis[p[i].a] - p[i].cost) * p[i].rate)    <span class="comment">//dis[p[i].b]是换了一圈之后，能拿到的钱，现在在这个交易所能拿到更多，表示能松弛路径。</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, a, b;</span><br><span class="line">    <span class="keyword">double</span> rab, rba, cab, cba;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d%d%d%lf"</span>, &amp;n, &amp;m, &amp;s, &amp;v))</span><br><span class="line">    &#123;</span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; rab &gt;&gt; cab &gt;&gt; rba &gt;&gt; cba;<span class="comment">//输入交易所信息</span></span><br><span class="line">            p[cnt].a = a;</span><br><span class="line">            p[cnt].b = b;</span><br><span class="line">            p[cnt].rate = rab;</span><br><span class="line">            p[cnt++].cost = cab;</span><br><span class="line">            p[cnt].a = b;</span><br><span class="line">            p[cnt].b = a;</span><br><span class="line">            p[cnt].rate = rba;</span><br><span class="line">            p[cnt++].cost = cba;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Bellman_Ford())</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">20.0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1.00</span> <span class="number">1.00</span> <span class="number">1.00</span> <span class="number">1.00</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">1.10</span> <span class="number">1.00</span> <span class="number">1.10</span> <span class="number">1.00</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line">YES</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=1860&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;交换货币&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="最短路径" scheme="https://www.windsings.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
      <category term="Bellman_Ford" scheme="https://www.windsings.com/tags/Bellman-Ford/"/>
    
      <category term="正权回路" scheme="https://www.windsings.com/tags/%E6%AD%A3%E6%9D%83%E5%9B%9E%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>POJ-2632 Crashing Robots</title>
    <link href="https://www.windsings.com//posts/53ad7638/"/>
    <id>https://www.windsings.com//posts/53ad7638/</id>
    <published>2018-08-22T05:37:50.000Z</published>
    <updated>2018-09-04T07:22:15.278Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=2632" target="_blank" rel="noopener">题目链接</a><br>崩溃的机器人<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>In a modernized warehouse, robots are used to fetch the goods. Careful planning is needed to ensure that the robots reach their destinations without crashing into each other. Of course, all warehouses are rectangular, and all robots occupy a circular floor space with a diameter of 1 meter. Assume there are N robots, numbered from 1 through N. You will get to know the position and orientation of each robot, and all the instructions, which are carefully (and mindlessly) followed by the robots. Instructions are processed in the order they come. No two robots move simultaneously; a robot always completes its move before the next one starts moving.<br>A robot crashes with a wall if it attempts to move outside the area of the warehouse, and two robots crash with each other if they ever try to occupy the same spot.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>The first line of input is K, the number of test cases. Each test case starts with one line consisting of two integers, 1 &lt;= A, B &lt;= 100, giving the size of the warehouse in meters. A is the length in the EW-direction, and B in the NS-direction.<br>The second line contains two integers, 1 &lt;= N, M &lt;= 100, denoting the numbers of robots and instructions respectively.<br>Then follow N lines with two integers, 1 &lt;= Xi &lt;= A, 1 &lt;= Yi &lt;= B and one letter (N, S, E or W), giving the starting position and direction of each robot, in order from 1 through N. No two robots start at the same position.<br><img src="/posts/53ad7638/2632_1.jpg" alt="2632"><br>Finally there are M lines, giving the instructions in sequential order.<br>An instruction has the following format:<br>&lt; robot #&gt; &lt; action&gt; &lt; repeat&gt;<br>Where is one of<br>L: turn left 90 degrees,<br>R: turn right 90 degrees, or<br>F: move forward one meter,</p><p>and 1 &lt;= &lt; repeat&gt; &lt;= 100 is the number of times the robot should perform this single move.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>Output one line for each test case:<br>Robot i crashes into the wall, if robot i crashes into a wall. (A robot crashes into a wall if Xi = 0, Xi = A + 1, Yi = 0 or Yi = B + 1.)<br>Robot i crashes into robot j, if robots i and j crash, and i is the moving robot.<br>OK, if no crashing occurs.</p><p>Only the first crash is to be reported.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>机器人在仓库中取货，仓库是矩形的，所有的机器人都占直径1M的圆形地板空间，假设有N个机器人，从1~N编号。现在知道每个机器人的位置和方向。机器人会无意识的遵从所有的指令，按照顺序进行。保证没有两个机器人同时移动，机器人总是在下一个指令之前处理当前之灵。</p><p>如果机器人试图移动到仓库区域之外，机器人会撞墙。如果机器人试图占据一个已经有机器人的点，则这两个机器人会互相撞击。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行输入K，表示测试用例的数量。</p><p>每个测试用例以包含两个整数的行开始，1 &lt;= A，B &lt;= 100，以米为单位给出仓库的大小。A是EW方向的长度，B是NS方向的长度。<br>第二行包含两个整数，1 &lt;= N，M &lt;= 100，分别表示机器人和指令的数量。<br>然后跟随N行，用两个整数，1 &lt;= Xi &lt;= A，1 &lt;= Yi &lt;= B和一个字母（N，S，E或W），给出每个机器人的起始位置和方向，保证没有两个机器人从同一个位置开始。</p><p>最后有M行，按顺序给出说明。<br>指令具有以下格式：</p><ul><li>&lt;robot＃&gt; <action> <repeat></repeat></action></li></ul><p>其中，<action> 是以下的其中之一</action></p><ul><li>L：向左转90度。</li><li>R：向右转90度</li><li>F：前进一米。</li></ul><p>1 &lt;= <repeat> &lt;= 100是机器人执行此单次操作的次数。</repeat></p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>每个测试用例有一行输出：</p><ul><li>Robot i crashes into the wall     如果机器人撞墙了</li><li>Robot i crashes into robot j    如果i是正在移动的机器人，撞到了j。</li><li>OK, if no crashing occurs.</li></ul><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>模拟</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> Directions[<span class="number">4</span>] = &#123; <span class="string">'N'</span>,<span class="string">'E'</span>,<span class="string">'S'</span>,<span class="string">'W'</span> &#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> Direction;<span class="comment">//方向</span></span><br><span class="line">    <span class="keyword">int</span> x;<span class="comment">//坐标</span></span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">&#125;robot;</span><br><span class="line"><span class="built_in">vector</span>&lt;robot&gt;R;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">int</span> times;</span><br><span class="line">&#125;command;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;G;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="keyword">int</span> K, A, B, N, M;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(command comm,<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flag)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (comm.c == <span class="string">'L'</span>)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            R[comm.num].Direction = (R[comm.num].Direction + <span class="number">3</span>) % <span class="number">4</span>;<span class="comment">//向左</span></span><br><span class="line">    <span class="keyword">if</span> (comm.c == <span class="string">'R'</span>)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            R[comm.num].Direction = (R[comm.num].Direction + <span class="number">1</span>) % <span class="number">4</span>;<span class="comment">//向右</span></span><br><span class="line">    <span class="keyword">if</span> (comm.c == <span class="string">'F'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (R[comm.num].Direction)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//向北走</span></span><br><span class="line">            G[R[comm.num].y][R[comm.num].x] = <span class="number">0</span>;<span class="comment">//起步</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                R[comm.num].y += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (R[comm.num].y &gt; B)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Robot %d crashes into the wall\n"</span>, comm.num);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (G[R[comm.num].y][R[comm.num].x] != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Robot %d crashes into robot %d\n"</span>, comm.num, G[R[comm.num].y][R[comm.num].x]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                G[R[comm.num].y][R[comm.num].x] = comm.num;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//向东走</span></span><br><span class="line">            G[R[comm.num].y][R[comm.num].x] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                R[comm.num].x += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (R[comm.num].x &gt; A)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Robot %d crashes into the wall\n"</span>, comm.num);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (G[R[comm.num].y][R[comm.num].x] != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Robot %d crashes into robot %d\n"</span>, comm.num, G[R[comm.num].y][R[comm.num].x]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">                G[R[comm.num].y][R[comm.num].x] = comm.num;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//向南走</span></span><br><span class="line">            G[R[comm.num].y][R[comm.num].x] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                R[comm.num].y -= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (R[comm.num].y == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Robot %d crashes into the wall\n"</span>, comm.num);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (G[R[comm.num].y][R[comm.num].x] != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Robot %d crashes into robot %d\n"</span>, comm.num, G[R[comm.num].y][R[comm.num].x]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                G[R[comm.num].y][R[comm.num].x] = comm.num;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//向西走</span></span><br><span class="line">            G[R[comm.num].y][R[comm.num].x] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comm.times; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                R[comm.num].x -= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (R[comm.num].x == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Robot %d crashes into the wall\n"</span>, comm.num);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (G[R[comm.num].y][R[comm.num].x] != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Robot %d crashes into robot %d\n"</span>, comm.num, G[R[comm.num].y][R[comm.num].x]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                G[R[comm.num].y][R[comm.num].x] = comm.num;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cnt == M&amp;&amp;flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"OK"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> Dir;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; K;</span><br><span class="line">    <span class="keyword">while</span> (K--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; B;</span><br><span class="line">        G.clear();</span><br><span class="line">        G.resize(B+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= B; i++)</span><br><span class="line">            G[i].resize(A+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">        R.resize(N + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; R[i].x &gt;&gt; R[i].y &gt;&gt; Dir;</span><br><span class="line">            G[R[i].y][R[i].x] = i;</span><br><span class="line">            <span class="keyword">switch</span> (Dir)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'N'</span>: R[i].Direction = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'E'</span>: R[i].Direction = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'S'</span>: R[i].Direction = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'W'</span>: R[i].Direction = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        command comm;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; comm.num &gt;&gt; comm.c &gt;&gt; comm.times;</span><br><span class="line">            move(comm, cnt);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><pre><code class="cpp"></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2632&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;崩溃的机器人&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="模拟" scheme="https://www.windsings.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
  </entry>
  
  <entry>
    <title>POJ-1068 Parencodings</title>
    <link href="https://www.windsings.com//posts/d837b83f/"/>
    <id>https://www.windsings.com//posts/d837b83f/</id>
    <published>2018-08-20T09:32:11.000Z</published>
    <updated>2018-09-04T06:33:46.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=1068" target="_blank" rel="noopener">题目链接</a><br>Parencodings<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Let S = s1 s2…s2n be a well-formed string of parentheses. S can be encoded in two different ways:<br>q    By an integer sequence P = p1 p2…pn where pi is the number of left parentheses before the ith right parenthesis in S (P-sequence).<br>q    By an integer sequence W = w1 w2…wn where for each right parenthesis, say a in S, we associate an integer which is the number of right parentheses counting from the matched left parenthesis of a up to a. (W-sequence).</p><p>Following is an example of the above encodings:</p><ul><li><p>S        (((()()())))</p></li><li><p>P-sequence        4 5 6666</p></li><li><p>W-sequence        1 1 1456</p></li></ul><p>Write a program to convert P-sequence of a well-formed string to the W-sequence of the same string.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>The first line of the input contains a single integer t (1 &lt;= t &lt;= 10), the number of test cases, followed by the input data for each test case. The first line of each test case is an integer n (1 &lt;= n &lt;= 20), and the second line is the P-sequence of a well-formed string. It contains n positive integers, separated with blanks, representing the P-sequence.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>The output file consists of exactly t lines corresponding to test cases. For each test case, the output line should contain n integers describing the W-sequence of the string corresponding to its given P-sequence.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>S是一个用括号组成的字符串。S可以有两种不同的编码：</p><ul><li>P序列，P = p1 p2…pn，pi是S序列中第i个右括号之前的左括号的数量。</li><li>W序列，W = w1 w2…wn，Wi是对于每个右括号，与之匹配的响应的左括号之间的，右括号的数量。</li></ul><p>现在给定一个P序列，求出与之对应的W序列。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>输入包括多个测试样例，第一行是一个整数t，表示测试样例的数量，然后是每个测试用例的数据，测试用例的第一行是一个整数n，第二行是P序列，有N个整数，由空格隔开。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个P序列，输出与之对应的W序列。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>模拟</p><h2 id="代码-C"><a href="#代码-C" class="headerlink" title="代码 C++"></a>代码 C++</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t, n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;P(n);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; W;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; S;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; P[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = cnt; j &lt; P[i]; j++)</span><br><span class="line">                S.push_back(<span class="string">'('</span>);</span><br><span class="line">            cnt = P[i];</span><br><span class="line">            S.push_back(<span class="string">')'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;<span class="comment">//括号里待匹配的右括号的个数</span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">1</span>;<span class="comment">//右括号的个数</span></span><br><span class="line">        <span class="keyword">while</span> (cnt &lt; S.size())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (S[cnt] != <span class="string">')'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            num = <span class="number">0</span>;</span><br><span class="line">            res = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = cnt<span class="number">-1</span>; i &gt;=<span class="number">0</span>; i--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (S[i] == <span class="string">'('</span>)</span><br><span class="line">                    <span class="keyword">if</span> (num == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        W.push_back(res);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        num--;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    num++;</span><br><span class="line">                    res++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; W.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; W[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">4</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">1</span> <span class="number">3</span> <span class="number">9</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=1068&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;Parencodings&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="模拟" scheme="https://www.windsings.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
  </entry>
  
  <entry>
    <title>POJ-3295 Tautology</title>
    <link href="https://www.windsings.com//posts/8893c4a8/"/>
    <id>https://www.windsings.com//posts/8893c4a8/</id>
    <published>2018-08-19T10:19:43.000Z</published>
    <updated>2018-09-04T07:22:27.228Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=3295" target="_blank" rel="noopener">题目链接</a><br>永真式<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>WFF ‘N PROOF is a logic game played with dice. Each die has six faces representing some subset of the possible symbols K, A, N, C, E, p, q, r, s, t. A Well-formed formula (WFF) is any string of these symbols obeying the following rules:</p><ul><li>p, q, r, s, and t are WFFs</li><li>if w is a WFF, Nw is a WFF</li><li>if w and x are WFFs, Kwx, Awx, Cwx, and Ewx are WFFs.</li></ul><p>The meaning of a WFF is defined as follows:</p><ul><li>p, q, r, s, and t are logical variables that may take on the value 0 (false) or 1 (true).</li><li><p>K, A, N, C, E mean and, or, not, implies, and equals as defined in the truth table below.</p><p>Definitions of K, A, N, C, and E</p></li></ul><table><thead><tr><th>w  x</th><th>Kwx</th><th>Awx</th><th>Nw</th><th>Cwx</th><th>Ewx</th></tr></thead><tbody><tr><td>1  1</td><td>1</td><td>1</td><td>0</td><td>1</td><td>1</td></tr><tr><td>0  0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>0  1</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><td>0  0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>A tautology is a WFF that has value 1 (true) regardless of the values of its variables. For example, ApNp is a tautology because it is true regardless of the value of p. On the other hand, ApNq is not, because it has the value 0 for p=0, q=1.</p><p>You must determine whether or not a WFF is a tautology.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>Input consists of several test cases. Each test case is a single line containing a WFF with no more than 100 symbols. A line containing 0 follows the last case.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>For each test case, output a line containing tautology or not as appropriate.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定5个变量和5个操作符，求给出的一个表达式，是否恒为真。</p><p>5个变量全都是布尔变量，取值只有0和1两种。操作符的真值表如下：</p><table><thead><tr><th>w  x</th><th>Kwx</th><th>Awx</th><th>Nw</th><th>Cwx</th><th>Ewx</th></tr></thead><tbody><tr><td>1  1</td><td>1</td><td>1</td><td>0</td><td>1</td><td>1</td></tr><tr><td>0  0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>0  1</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><td>0  0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>举例说明：</p><ol><li>ApNp恒为真，不论p取值是0还是1，ApNp都是真。</li><li>ApNq就不是恒为真的，当p=0, q=1时，表达式的值为假。</li></ol><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>输入包括多个测试，每行一个测试，每个测试是一个不超过100个字符的字符串，表示一个表达式。用一个独占一行的0表示测试结束。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于没个测试，如果恒为真，在一行中输出tautology。反之输出not。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><ul><li>枚举所有的情况，一共有2^5=32种可能。</li><li>或者利用栈，模拟操作。</li></ul><h2 id="代码-枚举"><a href="#代码-枚举" class="headerlink" title="代码-枚举"></a>代码-枚举</h2><p><strong>编译环境：只在G++中AC，在C++中会WA，我也不知道为啥</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, p, q, r, s, t;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">res</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n++;</span><br><span class="line">    <span class="keyword">int</span> t1, t2;</span><br><span class="line">    <span class="keyword">switch</span> (str[n])</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'K'</span>:t1 = res(); t2 = res(); <span class="keyword">return</span> t1 &amp;&amp; t2;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'A'</span>:t1 = res(); t2 = res(); <span class="keyword">return</span> t1 || t2;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'N'</span>:t1 = res(); <span class="keyword">return</span> !t1;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'C'</span>:t1 = res(); t2 = res(); <span class="keyword">return</span> (!t1) || t2;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'E'</span>:t1 = res(); t2 = res(); <span class="keyword">return</span> t1== t2;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'p'</span>:<span class="keyword">return</span> p;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'q'</span>:<span class="keyword">return</span> q;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'r'</span>:<span class="keyword">return</span> r;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'s'</span>:<span class="keyword">return</span> s;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'t'</span>:<span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; str)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str == <span class="string">"0"</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>; p &lt; <span class="number">2</span> &amp;&amp; flag; p++)</span><br><span class="line">            <span class="keyword">for</span> (q = <span class="number">0</span>; q &lt; <span class="number">2</span> &amp;&amp; flag; q++)</span><br><span class="line">                <span class="keyword">for</span> (r = <span class="number">0</span>; r &lt; <span class="number">2</span> &amp;&amp; flag; r++)</span><br><span class="line">                    <span class="keyword">for</span> (s = <span class="number">0</span>; s &lt; <span class="number">2</span> &amp;&amp; flag; s++)</span><br><span class="line">                        <span class="keyword">for</span> (t = <span class="number">0</span>; t &lt; <span class="number">2</span> &amp;&amp; flag; t++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            n = <span class="number">-1</span>;</span><br><span class="line">                            <span class="keyword">if</span> (!res())</span><br><span class="line">                                flag = <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"tautology"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"not"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="代码-枚举-栈"><a href="#代码-枚举-栈" class="headerlink" title="代码-枚举-栈"></a>代码-枚举-栈</h2><p><strong>这个代码可以在G++和C++中AC</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p, q, r, s, t;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">    <span class="keyword">int</span> t1, t2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = str.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (str[i])</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'p'</span>:</span><br><span class="line">            res.push(p);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'q'</span>:</span><br><span class="line">            res.push(q);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'r'</span>:</span><br><span class="line">            res.push(r);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">            res.push(s);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'t'</span>:</span><br><span class="line">            res.push(t);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'K'</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            t2 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (t1&amp;&amp;t2)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'A'</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            t2 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (t1 || t2)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'N'</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (!t1)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'C'</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            t2 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (!t1 || t2)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'E'</span>:</span><br><span class="line">            t1 = res.top(); res.pop();</span><br><span class="line">            t2 = res.top(); res.pop();</span><br><span class="line">            <span class="keyword">if</span> (t1 == t2)</span><br><span class="line">                res.push(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res.push(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    t1 = res.top(); res.pop();</span><br><span class="line">    <span class="keyword">return</span> t1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;str)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str == <span class="string">"0"</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>; p &lt; <span class="number">2</span> &amp;&amp; flag; p++)</span><br><span class="line">            <span class="keyword">for</span> (q = <span class="number">0</span>; q &lt; <span class="number">2</span> &amp;&amp; flag; q++)</span><br><span class="line">                <span class="keyword">for</span> (r = <span class="number">0</span>; r &lt; <span class="number">2</span> &amp;&amp; flag; r++)</span><br><span class="line">                    <span class="keyword">for</span> (s = <span class="number">0</span>; s &lt; <span class="number">2</span> &amp;&amp; flag; s++)</span><br><span class="line">                        <span class="keyword">for</span> (t = <span class="number">0</span>; t &lt; <span class="number">2</span> &amp;&amp; flag; t++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (!judge())</span><br><span class="line">                                flag = <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"tautology"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"not"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">    solution();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line">ApNp</span><br><span class="line">ApNq</span><br><span class="line"><span class="number">0</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line">tautology</span><br><span class="line"><span class="keyword">not</span></span><br></pre></td></tr></table></figure><p><strong>良心大测试用例，来自Waterloo Local Contest, 2006.9.30</strong><br>输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">p</span><br><span class="line">q</span><br><span class="line">r</span><br><span class="line">s</span><br><span class="line">t</span><br><span class="line">Cpp</span><br><span class="line">App</span><br><span class="line">Kpp</span><br><span class="line">Epp</span><br><span class="line">NNNNNNNNNNNNNNNNNNNAKKKEEKEEKppppppppppp</span><br><span class="line">NNNNNNNNNNNNNCAKKEEEAACKKKKKCEEEACKKEKCCEKAppqqqppppqqpqppppqqppppqqqppppp</span><br><span class="line">NNNNNNNNNNNACKCAKEAAEKCAKECEKKKACAAEAKAKCKKrqqqprpppprpqprqprrppqrqqrqrqppqp</span><br><span class="line">NNNNNNNNCAEACACKEEEKKAEEEEAKKEECACKACECCCEKAECEECCCACrrrrprrqssrprrqpsssrrpsqssqprrqpprrpqrppqqsqqs</span><br><span class="line">NNNNNNNNNNNKAEEACEKKCCCKKAAECACAECAEKKECKAAAECCCKEAACArqpsrstpqsspsppssrpsprstsqspsspptrqrprptstps</span><br><span class="line">NNNNNNNNNNNNEAAECEAEAECKCEAAAEEACAACCKEAKtqptstpttssrptqrtsstpptqtssppp</span><br><span class="line">NNNNNNNNNNNNNNNNNNNCAAAKEEAEACCCACECCCCCCEKCKCAKCpqpssqsppprttrqprspsssttsrprtqq</span><br><span class="line">NNNNNNNNNNNNEEKKCCCACACECEACCKCCAEKKKKCEKCEKEppsrrpqtqrrspqrqrpprtpqpqqrqqqtprp</span><br><span class="line">NNNNCAAEAECKKEKKEAACEAECAEEECCCCEKAKCKKAAEKrrtssrrppprrpstsrqqrrqprqrsprsspsrpsspsq</span><br><span class="line">NNNNNNNNNECCKAAACAKAAECCKAECKEAEKEACCKErstrqpqrtrtrqstqpptprttprtrrqtq</span><br><span class="line">NNAKAKEAKEAEAKACCEECCKKAACECAACACrrtrqtsttstspqrstqrpspqttrpspqsp</span><br><span class="line">NNNEECEACEECKAAKKKCEKECKAKKAAAAAKsrtpprtrqqtpsssrrprtsqtsrpssspt</span><br><span class="line">NNNNNNCEECAKAACEKECAKCCAEECCCAEAEKKKrpqqqsqprqqsqtqstsrpqsqsqsrqsqs</span><br><span class="line">NNNAEAEKEACEECECKCAEAKCEEEKEKEKKCECEqtpssqrptpsqppqpprsqpttqrsqqrqqtrq</span><br><span class="line">CNNNEECEEEKECAAEACAsppsrqpptpspppqqNNNEECEEEKECAAEACAsppsrqpptpspppqq</span><br><span class="line">ANNNEECEEEKECAAEACAsppsrqpptpspppqqNNNEECEEEKECAAEACAsppsrqpptpspppqq</span><br><span class="line">KNNNEECEEEKECAAEACAsppsrqpptpspppqqNNNEECEEEKECAAEACAsppsrqpptpspppqq</span><br><span class="line">ENNNEECEEEKECAAEACAsppsrqpptpspppqqNNNEECEEEKECAAEACAsppsrqpptpspppqq</span><br><span class="line">CNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">ANNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">KNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">ENNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NCNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NANNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NKNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NENNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqssNNNEAKCEKCEAKACECKACCEKCqppppptrqqttptttqtpqss</span><br><span class="line">NNNNEEEEEAAACKEKAAEEAqpptpsqsrqpprssptt</span><br><span class="line">NNNKAKCEECACCEECACEKrtrrsstpqptpstsrsq</span><br><span class="line">NNNNNNNNNCACCCEKEACEACpqrqpsststtpps</span><br><span class="line">NNNNKKCACEACECCssqptqptrrtr</span><br><span class="line">NNNAAAACKECCAKAKACprspqspspsttpttr</span><br><span class="line">NNNECCCECCAAEpqstpspppss</span><br><span class="line">NNNNNCEAECACCEKAEEEppsptpsppprpqrq</span><br><span class="line">AEAAKKEEEKAEAKpqqtpppsssqrqsp</span><br><span class="line">NNAKEKAAKprqrpqpt</span><br><span class="line">NNNAKACAKEKCECKtqppqtpqsqspr</span><br><span class="line">NCEKEEACCCppsstppprp</span><br><span class="line">NNNAEKCEKAEEECEEKEtrqpppqqpppqstpp</span><br><span class="line">NNNNCKEAACAKEKACECCEKstppprrptqqpqqpppp</span><br><span class="line">NNEAKCECKACEEECKprrpqqsppppttqr</span><br><span class="line">NNNNNCKAAAKKEKKKECKECppqrppttpsttrtqtq</span><br><span class="line">NNEKKACCKKACEKErpprsptppppptq</span><br><span class="line">NNNCKECCAEAECAEspqpqpprsptpr</span><br><span class="line">NNNCKECKCEEECstrtppsrtrp</span><br><span class="line">NNKCCKACKAACKprtttttpttpp</span><br><span class="line">NNNNEACCKKEArqpptrppt</span><br><span class="line">NKECKACAptrrrttt</span><br><span class="line">NNAEEEKECAAptpspptqpp</span><br><span class="line">NNNACKEEAAKAKKpsrttqtssrrt</span><br><span class="line">NNKKAKAKEEECACEEtstqqrsptttrprp</span><br><span class="line">CKAKECKKKtttppptptq</span><br><span class="line">NNNCEEEKCECCtsptqqqptp</span><br><span class="line">NAECCAKKCCttttpptpsr</span><br><span class="line">NCEEKCCAErpptpsppt</span><br><span class="line">NKKEEKtppttt</span><br><span class="line">NCKCAECEpttqqttp</span><br><span class="line">NNNNNEEKAAECqqpqpppt</span><br><span class="line">NECAACAECCAACKtrpptpptqtpppp</span><br><span class="line">NNKECKKACrttttrtp</span><br><span class="line">AECAECrrtsptt</span><br><span class="line">0</span><br></pre></td></tr></table></figure></p><p>输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">tautology</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br><span class="line">not</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=3295&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;永真式&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
      <category term="枚举" scheme="https://www.windsings.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="栈" scheme="https://www.windsings.com/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>POJ-2586 Y2K Accounting Bug</title>
    <link href="https://www.windsings.com//posts/b572d5b3/"/>
    <id>https://www.windsings.com//posts/b572d5b3/</id>
    <published>2018-08-17T11:14:07.000Z</published>
    <updated>2018-09-04T07:20:06.153Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=2586" target="_blank" rel="noopener">题目链接</a><br>千年虫错误<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Accounting for Computer Machinists (ACM) has sufferred from the Y2K bug and lost some vital data for preparing annual report for MS Inc.<br>All what they remember is that MS Inc. posted a surplus or a deficit each month of 1999 and each month when MS Inc. posted surplus, the amount of surplus was s and each month when MS Inc. posted deficit, the deficit was d. They do not remember which or how many months posted surplus or deficit. MS Inc., unlike other companies, posts their earnings for each consecutive 5 months during a year. ACM knows that each of these 8 postings reported a deficit but they do not know how much. The chief accountant is almost sure that MS Inc. was about to post surplus for the entire year of 1999. Almost but not quite.</p><p>Write a program, which decides whether MS Inc. suffered a deficit during 1999, or if a surplus for 1999 was possible, what is the maximum amount of surplus that they can post.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>Input is a sequence of lines, each containing two positive integers s and d.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>For each line of input, output one line containing either a single integer giving the amount of surplus for the entire year, or output Deficit if it is impossible.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>题目看的我吐血….</p><p>大意：某公司每个月的盈余或者赤字只有两种情况：要么是赚了s，要么是亏了d，只有可能是这两种情况，而且金额固定，就是s或者d，不会是其他的数。</p><p>但是坑爹的是，他们不记得这一年中，哪几个月赚了，哪几个月赔了。他们只知道：他们每次统计当年的财务报表时，都是一连计算5个月的，因此一年共公布8次财务报表（1~5,2~6,3~7,4~8,5~9,6~10,7~11,8~12）。这8个月的财务报表全都是亏损的。</p><p>坑爹成这个样子，他们还抱有一丝侥幸心理，认为他们今年有可能赚钱，问，他们今年最多可能能赚多少钱，如果金额&lt;0，则输出”Deficit”。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>有多个输入，每个输入只有一行，每行有两个正整数，s和d。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出可能的最大的营利，如果亏损，输出”Deficit”。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>&lt;贪心&gt;因为每5个月统计一次都亏空，那么有5种情况：</p><ol><li>若SSSSD亏空，那么全年可能最大盈利情况为: SSSSDSSSSDSS</li><li>若SSSDD亏空，那么全年可能最大盈利情况为：SSSDDSSSDDSS</li><li>若SSDDD亏空，那么全年可能最大盈利情况为: SSDDDSSDDDSS</li><li>若SDDDD亏空，那么全年可能最大盈利情况为: SDDDDSDDDDSD</li><li>若DDDDD亏空，那么全年可能最大盈利情况为: DDDDDDDDDDDD</li></ol><p><dfs>枚举和遍历</dfs></p><ol><li>对于每个月的情况，只有赚了s和亏了d，因此分别假设，进行深度搜索，要用到2<sup>12</sup>个可能。</li></ol><h2 id="代码（贪心）"><a href="#代码（贪心）" class="headerlink" title="代码（贪心）"></a>代码（贪心）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s, d;</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; s &amp;&amp; <span class="built_in">cin</span> &gt;&gt; d)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (d&gt;<span class="number">4</span> * s)ans = <span class="number">10</span> * s - <span class="number">2</span> * d;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> * d&gt;<span class="number">3</span> * s)ans = <span class="number">8</span> * s - <span class="number">4</span> * d;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">3</span> * d&gt;<span class="number">2</span> * s)ans = <span class="number">6</span> * (s - d);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">4</span> * d&gt;s)ans = <span class="number">3</span> * (s - <span class="number">3</span> * d);</span><br><span class="line">        <span class="keyword">else</span> ans = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ans&lt;<span class="number">0</span>)<span class="built_in">cout</span> &lt;&lt; <span class="string">"Deficit"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码（DFS）"><a href="#代码（DFS）" class="headerlink" title="代码（DFS）"></a>代码（DFS）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s, d;</span><br><span class="line"><span class="keyword">int</span> month[<span class="number">12</span>];</span><br><span class="line"><span class="keyword">int</span> res;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 从5月开始，每个月发布一个报表，所以要检查</span></span><br><span class="line">    <span class="comment">// 检查这个报表的结果是否为亏损</span></span><br><span class="line">    <span class="keyword">if</span> (m &gt; <span class="number">4</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = m - <span class="number">5</span>; j &lt; m; j++) &#123;</span><br><span class="line">            tmp += month[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (tmp &gt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 年底查看可能的利润，保留最大利润</span></span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">12</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">12</span>; j++) sum += month[j];</span><br><span class="line">        <span class="keyword">if</span> (sum &gt; res) res = sum;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 营利或亏损都试一试</span></span><br><span class="line">    month[m] = s;</span><br><span class="line">    dfs(m + <span class="number">1</span>);</span><br><span class="line">    month[m] = -d;</span><br><span class="line">    dfs(m + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;s&gt;&gt;d)</span><br><span class="line">    &#123;</span><br><span class="line">        res = <span class="number">-1e9</span>;</span><br><span class="line">        dfs(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (res &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Deficit"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">59</span> <span class="number">237</span></span><br><span class="line"><span class="number">375</span> <span class="number">743</span></span><br><span class="line"><span class="number">200000</span> <span class="number">849694</span></span><br><span class="line"><span class="number">2500000</span> <span class="number">8000000</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">116</span></span><br><span class="line"><span class="number">28</span></span><br><span class="line"><span class="number">300612</span></span><br><span class="line">Deficit</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2586&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;千年虫错误&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="贪心" scheme="https://www.windsings.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="DFS" scheme="https://www.windsings.com/tags/DFS/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
  </entry>
  
  <entry>
    <title>POJ-2109 Power of Cryptography</title>
    <link href="https://www.windsings.com//posts/ea1deaf6/"/>
    <id>https://www.windsings.com//posts/ea1deaf6/</id>
    <published>2018-08-15T11:02:12.000Z</published>
    <updated>2018-09-04T07:19:46.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=2109" target="_blank" rel="noopener">题目链接</a><br>密码学的力量<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Current work in cryptography involves (among other things) large prime numbers and computing powers of numbers among these primes. Work in this area has resulted in the practical use of results from number theory and other branches of mathematics once considered to be only of theoretical interest.<br>This problem involves the efficient computation of integer roots of numbers.<br>Given an integer n&gt;=1 and an integer p&gt;= 1 you have to write a program that determines the n th positive root of p. In this problem, given such integers n and p, p will always be of the form k to the nth. power, for an integer k (this integer is what your program must find).</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>The input consists of a sequence of integer pairs n and p with each integer on a line by itself. For all such pairs 1&lt;=n&lt;= 200, 1&lt;=p&lt;10<sup>101</sup> and there exists an integer k, 1&lt;=k&lt;=10<sup>9</sup> such that k<sup>n</sup> = p.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>For each integer pair n and p the value k should be printed, i.e., the number k such that k n =p.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定两个数，N和P，求一个数K，使得K<sup>N</sup>=P。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>一行两个数，第一个数是N（1&lt;=n&lt;= 200），第二个数是P(1&lt;=p&lt;10<sup>101</sup>),存在一个整数K，1&lt;=k&lt;=10<sup>9</sup>，满足 k<sup>n</sup> = p。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出K。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>其实这个题就是用pow函数来求的。</p><p>在double精度内，一个大数，开N次方和开N+1次方，是能感知到的。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> n, p;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%lf %lf"</span>,&amp;n,&amp;p)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.0lf\n"</span>, <span class="built_in">pow</span>(p, <span class="number">1.0</span> / n));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> <span class="number">16</span></span><br><span class="line"><span class="number">3</span> <span class="number">27</span></span><br><span class="line"><span class="number">7</span> <span class="number">4357186184021382204544</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line">Source</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2109&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;密码学的力量&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数学问题" scheme="https://www.windsings.com/tags/%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
      <category term="幂运算" scheme="https://www.windsings.com/tags/%E5%B9%82%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>POJ-1328 Radar Installation</title>
    <link href="https://www.windsings.com//posts/be1dc362/"/>
    <id>https://www.windsings.com//posts/be1dc362/</id>
    <published>2018-08-10T08:45:09.000Z</published>
    <updated>2018-09-04T07:19:07.005Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=1328" target="_blank" rel="noopener">题目链接</a><br>安装雷达<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Assume the coasting is an infinite straight line. Land is in one side of coasting, sea in the other. Each small island is a point locating in the sea side. And any radar installation, locating on the coasting, can only cover d distance, so an island in the sea can be covered by a radius installation, if the distance between them is at most d.</p><p>We use Cartesian coordinate system, defining the coasting is the x-axis. The sea side is above x-axis, and the land side below. Given the position of each island in the sea, and given the distance of the coverage of the radar installation, your task is to write a program to find the minimal number of radar installations to cover all the islands. Note that the position of an island is represented by its x-y coordinates.<br><img src="/posts/be1dc362/1328_1.jpg" alt="1328"></p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>The input consists of several test cases. The first line of each case contains two integers n (1&lt;=n&lt;=1000) and d, where n is the number of islands in the sea and d is the distance of coverage of the radar installation. This is followed by n lines each containing two integers representing the coordinate of the position of each island. Then a blank line follows to separate the cases.</p><p>The input is terminated by a line containing pair of zeros</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>For each test case output one line consisting of the test case number followed by the minimal number of radar installations needed. “-1” installation means no solution for that case.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>平面直角坐标系上有n个点，求在x轴上找尽量少的点，以这些点为圆心画一个半径为d的圆，使得给定的点都在画出来的圆里。如果不能输出-1。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>一个输入包括多个测试用例。每个测试用例第一行包含两个整数n（1 &lt;= n &lt;= 1000）和d，其中n是海中岛屿的数量，d是雷达装置的覆盖距离。接下来是n行，每行包含两个整数，表示每个岛的位置坐标。然后是一个空白行来分隔测试用例。</p><p>输入由包含两个0的行表示终止。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每个测试用例的输出，第一行包含测试用例编号，然后是所需的安装数量最少的雷达的个数。“-1”表示没有解决方案。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><ol><li>考虑在什么情况下没有解：当且仅当以（a,b）为圆心，D为半径画一个圆，这个圆与x轴没有交点时，这个海岛是无法被雷达覆盖的。如图：<img src="/posts/be1dc362/1328-2.png" alt="1328"></li><li>我们知道圆心和半径，可以求出圆的方程：(x-a)<sup>2</sup>+(y-b)<sup>2</sup>=d<sup>2</sup>，与y=0联立。可得：x<sup>2</sup>-2ax+a<sup>2</sup>+b<sup>2</sup>-d<sup>2</sup>=0。</li><li>判别式△=4a<sup>2</sup>-4(a<sup>2</sup>+b<sup>2</sup>-d<sup>2</sup>)=d<sup>2</sup>-b<sup>2</sup>。</li><li>如果无解，则△&lt;0，即d<sup>2</sup>&lt;b<sup>2</sup>。</li><li>如果有解，根据求根公式：x<sub>1</sub>=a-(d<sup>2</sup>-b<sup>2</sup>)，x<sub>2</sub>=a+(d<sup>2</sup>-b<sup>2</sup>)。</li></ol><p>那么回到图中，两个点在坐标轴的位置如下所示：<br><img src="/posts/be1dc362/1328-3.png" alt="1328"></p><p>继续想：</p><ol><li>如果要在x轴上选点画圆覆盖(a,b),那么这个点的横坐标就一定在[a-d²+b²,a+d²-b²]区间内。</li><li>因此这道题变成了在数轴上选最少的点，覆盖给定线段。这就类似于整数区间了。</li><li>假设数轴上有很多段区间，我们把它们从数轴上分离出来。 <img src="/posts/be1dc362/1328-4.png" alt="1328"></li><li>取点的过程可以理解为画一条铅垂线来割这些线段。<img src="/posts/be1dc362/1328-5.png" alt="1328"></li><li>把所有线段按照右端点的位置，从小到大排序。</li><li>如上图所示，就第一部分而言，选择第一条线段的右端点，记位置为P，如果接下来的几条线段的左端点都在P的左边，因为是按照右端点从小到大排序的，因此其右端点的位置一定大于P，也就是说，P在这条线段内。即选在P点，可以尽肯能多的覆盖到海岛。</li><li>当遇到某个点的左端点位置大于P时。P就无法覆盖到这个海岛了，选择这个线段的右端点，记为P，重复6~7流程。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, D;<span class="comment">//N是海岛的数量，D是距离.</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">&#125;node;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> left;</span><br><span class="line">    <span class="keyword">double</span> right;</span><br><span class="line">&#125;Radar;</span><br><span class="line">node temp;</span><br><span class="line">Radar r;</span><br><span class="line"><span class="built_in">vector</span>&lt;Radar&gt;p;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Radar a, Radar b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.right &lt; b.right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p.clear();</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; D;</span><br><span class="line">        <span class="keyword">if</span> (!N &amp;&amp; !D)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>, ++cnt);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; temp.x &gt;&gt; temp.y;</span><br><span class="line">            <span class="keyword">double</span> delta = <span class="number">1.0</span>*D*D - <span class="number">1.0</span>*temp.y*temp.y;</span><br><span class="line">            <span class="keyword">if</span> (D &gt;= temp.y&amp;&amp;flag)</span><br><span class="line">            &#123;</span><br><span class="line">                r.left = <span class="number">1.0</span>*temp.x - <span class="built_in">sqrt</span>(delta);</span><br><span class="line">                r.right = <span class="number">1.0</span>*temp.x + <span class="built_in">sqrt</span>(delta);</span><br><span class="line">                p.push_back(r);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(p.begin(), p.end(), cmp);</span><br><span class="line">        <span class="keyword">double</span> now = p[<span class="number">0</span>].right;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; p.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p[i].left &gt; now)<span class="comment">//下一个点的最左边已经大于现在的点的位置了，无法覆盖，只能再安置一个雷达</span></span><br><span class="line">            &#123;</span><br><span class="line">                res++;</span><br><span class="line">                now = p[i].right;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">-3</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line">Case <span class="number">1</span>: <span class="number">2</span></span><br><span class="line">Case <span class="number">2</span>: <span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://blog.csdn.net/c20182030/article/details/75107606" target="_blank" rel="noopener">https://blog.csdn.net/c20182030/article/details/75107606</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=1328&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;安装雷达&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="贪心" scheme="https://www.windsings.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="数学问题" scheme="https://www.windsings.com/tags/%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
      <category term="区间覆盖" scheme="https://www.windsings.com/tags/%E5%8C%BA%E9%97%B4%E8%A6%86%E7%9B%96/"/>
    
      <category term="圆" scheme="https://www.windsings.com/tags/%E5%9C%86/"/>
    
      <category term="二次方程" scheme="https://www.windsings.com/tags/%E4%BA%8C%E6%AC%A1%E6%96%B9%E7%A8%8B/"/>
    
      <category term="解析几何" scheme="https://www.windsings.com/tags/%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>POJ-2965 The Pilots Brothers&#39; refrigerator</title>
    <link href="https://www.windsings.com//posts/9424e4c0/"/>
    <id>https://www.windsings.com//posts/9424e4c0/</id>
    <published>2018-08-06T14:35:43.000Z</published>
    <updated>2018-08-10T08:43:28.397Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=2965" target="_blank" rel="noopener">题目链接</a><br>飞行员兄弟的冰箱<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>The game “The Pilots Brothers: following the stripy elephant” has a quest where a player needs to open a refrigerator.</p><p>There are 16 handles on the refrigerator door. Every handle can be in one of two states: open or closed. The refrigerator is open only when all handles are open. The handles are represented as a matrix 4х4. You can change the state of a handle in any location [i, j] (1 ≤ i, j ≤ 4). However, this also changes states of all handles in row i and all handles in column j.</p><p>The task is to determine the minimum number of handle switching necessary to open the refrigerator.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>The input contains four lines. Each of the four lines contains four characters describing the initial state of appropriate handles. A symbol “+” means that the handle is in closed state, whereas the symbol “−” means “open”. At least one of the handles is initially closed.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>The first line of the input contains N – the minimum number of switching. The rest N lines describe switching sequence. Each of the lines contains a row number and a column number of the matrix separated by one or more spaces. If there are several solutions, you may give any one of them.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>冰箱门上有16个把手。每个把手可以是关闭或者是打开的。当所有的把手都打开时，冰箱才会打开。把手的矩阵是4*4，可以改变任意一个把手的状态，但是，和它同行同列的把手的状态也会随之改变。求打开冰箱所需要的最少的次数。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>输入包括4行，每行有4个字符表示把手的状态，”+”表示把手处于闭合状态，”-“表示把手处于打开状态。保证最初状态至少有一个把手是关闭的。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>第一行是一个整数N，表示最小切换次数。接下来的N行里描述切换顺序，每行一个矩阵的行号和列号，由空格隔开。如果有多种解都符合要求，任意输出其中之一。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>枚举+DFS+保存路径。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>类似题目：POJ-1753。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">bool</span> handle[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> minn = <span class="number">16</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res, temp;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> h;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; h;</span><br><span class="line">            <span class="keyword">if</span> (h == <span class="string">'+'</span>)</span><br><span class="line">                handle[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                handle[i][j] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">finish</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            res += handle[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res == <span class="number">16</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = cnt / <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> y = cnt % <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        handle[x][i] = !handle[x][i];</span><br><span class="line">        handle[i][y] = !handle[i][y];</span><br><span class="line">    &#125;</span><br><span class="line">    handle[x][y] = !handle[x][y];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (finish())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.size() &lt; temp.size())</span><br><span class="line">            res = temp;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    DFS(i + <span class="number">1</span>);</span><br><span class="line">    change(i);</span><br><span class="line">    temp.push_back(i);</span><br><span class="line">    DFS(i + <span class="number">1</span>);</span><br><span class="line">    change(i);</span><br><span class="line">    temp.pop_back();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    build();</span><br><span class="line">    DFS(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res[i] / <span class="number">4</span> + <span class="number">1</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; res[i] % <span class="number">4</span> + <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line">-+--</span><br><span class="line">----</span><br><span class="line">----</span><br><span class="line">-+--</span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2965&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;飞行员兄弟的冰箱&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="DFS" scheme="https://www.windsings.com/tags/DFS/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
      <category term="枚举" scheme="https://www.windsings.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>POJ-1753 Flip Game</title>
    <link href="https://www.windsings.com//posts/a4273118/"/>
    <id>https://www.windsings.com//posts/a4273118/</id>
    <published>2018-08-06T14:22:16.000Z</published>
    <updated>2018-08-10T08:43:28.356Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="http://poj.org/problem?id=1753" target="_blank" rel="noopener">题目链接</a><br>反转游戏<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Flip game is played on a rectangular 4x4 field with two-sided pieces placed on each of its 16 squares. One side of each piece is white and the other one is black and each piece is lying either it’s black or white side up. Each round you flip 3 to 5 pieces, thus changing the color of their upper side from black to white and vice versa. The pieces to be flipped are chosen every round according to the following rules:</p><ol><li>Choose any one of the 16 pieces.</li><li>Flip the chosen piece and also all adjacent pieces to the left, to the right, to the top, and to the bottom of the chosen piece (if there are any).</li></ol><p>Consider the following position as an example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bwbw</span><br><span class="line">wwww</span><br><span class="line">bbwb</span><br><span class="line">bwwb</span><br></pre></td></tr></table></figure></p><p>Here “b” denotes pieces lying their black side up and “w” denotes pieces lying their white side up. If we choose to flip the 1st piece from the 3rd row (this choice is shown at the picture), then the field will become:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bwbw</span><br><span class="line">bwww</span><br><span class="line">wwwb</span><br><span class="line">wwwb</span><br></pre></td></tr></table></figure></p><p><img src="/posts/a4273118/1753_1.jpg" alt="1753"></p><p>The goal of the game is to flip either all pieces white side up or all pieces black side up. You are to write a program that will search for the minimum number of rounds needed to achieve this goal.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>The input consists of 4 lines with 4 characters “w” or “b” each that denote game field position.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>Write to the output file a single integer number - the minimum number of rounds needed to achieve the goal of the game from the given position. If the goal is initially achieved, then write 0. If it’s impossible to achieve the goal, then write the word “Impossible” (without quotes).</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>反转游戏，棋盘大小为4*4，共16个棋子。每个棋子有黑白两面。反转一个棋子的时候，要把这个棋子和其上下左右相连的棋子也一并翻转。求把这16个棋子翻转到统一颜色所需的最小次数。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>4行输入，每行4个字符，“w”表示白色，“b”表示黑色。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出可以把这16个棋子全部翻转到同一颜色所需要的最少的次数，如果无法翻转成同一颜色，则输出”Impossible”（没有引号）</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>枚举出所有可能的状态。使用DFS深搜。记得翻过去之后，再翻过来。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>由题意，每个棋子翻转过去再翻转过来，结果不变。因此最多翻转的次数为15次。（翻转16次和不翻转棋面一样）</p><p>类似题目POJ-2965。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> chess[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> maxn = <span class="number">16</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">'w'</span>)</span><br><span class="line">                chess[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                chess[i][j] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">turn</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">4</span> &amp;&amp; x &gt;= <span class="number">0</span> &amp;&amp; y &lt; <span class="number">4</span> &amp;&amp; y &gt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> chess[x][y] = !chess[x][y];<span class="comment">//取非</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flip</span><span class="params">(<span class="keyword">int</span> cnt)</span><span class="comment">//cnt表示反转的次数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = cnt / <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> y = cnt % <span class="number">4</span>;</span><br><span class="line">    turn(x - <span class="number">1</span>, y);</span><br><span class="line">    turn(x + <span class="number">1</span>, y);</span><br><span class="line">    turn(x, y + <span class="number">1</span>);</span><br><span class="line">    turn(x, y - <span class="number">1</span>);</span><br><span class="line">    turn(x, y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">finish</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            res += chess[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !(res % <span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> cnt)</span><span class="comment">//i表示迭代的次数，cnt表示反转的个数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (finish())</span><br><span class="line">    &#123;</span><br><span class="line">        maxn = min(maxn, cnt);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    DFS(i + <span class="number">1</span>,cnt);<span class="comment">//先到最后一个</span></span><br><span class="line">    flip(i);</span><br><span class="line">    DFS(i + <span class="number">1</span>, cnt + <span class="number">1</span>);<span class="comment">//假设他翻过去的，遍历结果</span></span><br><span class="line">    flip(i);<span class="comment">//再翻过来</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    build();</span><br><span class="line">    DFS(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (maxn != <span class="number">16</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; maxn &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Impossible"</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"></span><br><span class="line">bwwb</span><br><span class="line">bbwb</span><br><span class="line">bwwb</span><br><span class="line">bwww</span><br><span class="line">Sample Output</span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=1753&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;反转游戏&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="POJ" scheme="https://www.windsings.com/categories/POJ/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="DFS" scheme="https://www.windsings.com/tags/DFS/"/>
    
      <category term="POJ" scheme="https://www.windsings.com/tags/POJ/"/>
    
      <category term="枚举" scheme="https://www.windsings.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1115</title>
    <link href="https://www.windsings.com//posts/ecf4bd94/"/>
    <id>https://www.windsings.com//posts/ecf4bd94/</id>
    <published>2018-08-05T13:15:36.000Z</published>
    <updated>2018-09-04T14:24:07.703Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="DFS" scheme="https://www.windsings.com/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1114 Family Property（25）</title>
    <link href="https://www.windsings.com//posts/9bf38d02/"/>
    <id>https://www.windsings.com//posts/9bf38d02/</id>
    <published>2018-08-05T13:15:16.000Z</published>
    <updated>2018-09-04T14:23:48.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805356599820288" target="_blank" rel="noopener">题目链接</a><br>家庭财产<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>This time, you are supposed to help us collect the data for family-owned property. Given each person’s family members, and the estate（房产）info under his/her own name, we need to know the size of each family, and the average area and number of sets of their real estate.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>Each input file contains one test case. For each case, the first line gives a positive integer N (&lt;=1000). Then N lines follow, each gives the infomation of a person who owns estate in the format:</p><p>ID Father Mother k Child1 … Childk M_estate Area</p><p>where ID is a unique 4-digit identification number for each person; Father and Mother are the ID’s of this person’s parents (if a parent has passed away, -1 will be given instead); k (0&lt;=k&lt;=5) is the number of children of this person; Childi’s are the ID’s of his/her children; M_estate is the total number of sets of the real estate under his/her name; and Area is the total area of his/her estate.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>For each case, first print in a line the number of families (all the people that are related directly or indirectly are considered in the same family). Then output the family info in the format:</p><p>ID M AVG_sets AVG_area</p><p>where ID is the smallest ID in the family; M is the total number of family members; AVG_sets is the average number of sets of their real estate; and AVG_area is the average area. The average numbers must be accurate up to 3 decimal places. The families must be given in descending order of their average areas, and in ascending order of the ID’s if there is a tie.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">## 测试数据</span><br><span class="line">``` cpp</span><br><span class="line">Sample Input:</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">6666</span> <span class="number">5551</span> <span class="number">5552</span> <span class="number">1</span> <span class="number">7777</span> <span class="number">1</span> <span class="number">100</span></span><br><span class="line"><span class="number">1234</span> <span class="number">5678</span> <span class="number">9012</span> <span class="number">1</span> <span class="number">0002</span> <span class="number">2</span> <span class="number">300</span></span><br><span class="line"><span class="number">8888</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1000</span></span><br><span class="line"><span class="number">2468</span> <span class="number">0001</span> <span class="number">0004</span> <span class="number">1</span> <span class="number">2222</span> <span class="number">1</span> <span class="number">500</span></span><br><span class="line"><span class="number">7777</span> <span class="number">6666</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">300</span></span><br><span class="line"><span class="number">3721</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">2333</span> <span class="number">2</span> <span class="number">150</span></span><br><span class="line"><span class="number">9012</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">3</span> <span class="number">1236</span> <span class="number">1235</span> <span class="number">1234</span> <span class="number">1</span> <span class="number">100</span></span><br><span class="line"><span class="number">1235</span> <span class="number">5678</span> <span class="number">9012</span> <span class="number">0</span> <span class="number">1</span> <span class="number">50</span></span><br><span class="line"><span class="number">2222</span> <span class="number">1236</span> <span class="number">2468</span> <span class="number">2</span> <span class="number">6661</span> <span class="number">6662</span> <span class="number">1</span> <span class="number">300</span></span><br><span class="line"><span class="number">2333</span> <span class="number">-1</span> <span class="number">3721</span> <span class="number">3</span> <span class="number">6661</span> <span class="number">6662</span> <span class="number">6663</span> <span class="number">1</span> <span class="number">100</span></span><br><span class="line">Sample Output:</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">8888</span> <span class="number">1</span> <span class="number">1.000</span> <span class="number">1000.000</span></span><br><span class="line"><span class="number">0001</span> <span class="number">15</span> <span class="number">0.600</span> <span class="number">100.000</span></span><br><span class="line"><span class="number">5551</span> <span class="number">4</span> <span class="number">0.750</span> <span class="number">100.000</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805356599820288&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;家庭财产&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="并查集" scheme="https://www.windsings.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>PAT-A-1113 Integer Set Partition（25）</title>
    <link href="https://www.windsings.com//posts/59718a1/"/>
    <id>https://www.windsings.com//posts/59718a1/</id>
    <published>2018-08-05T13:14:45.000Z</published>
    <updated>2018-09-04T11:39:03.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805357258326016" target="_blank" rel="noopener">题目链接</a><br>划分整数集<br><a id="more"></a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a set of N (&gt;1) positive integers, you are supposed to partition them into two disjoint sets A<sub>1</sub> and A<sub>2</sub> of n<sub>1</sub> and n<sub>2</sub> numbers, respectively. Let S<sub>1</sub>and S<sub>2</sub> denote the sums of all the numbers in A<sub>1</sub> and A<sub>2</sub>, respectively. You are supposed to make the partition so that ∣n<sub>1</sub>−n<sub>2</sub>∣ is minimized first, and then ∣S<sub>1</sub>−S<sub>2</sub>∣ is maximized.</p><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>Each input file contains one test case. For each case, the first line gives an integer N (2≤N≤10<sup><br>​5</sup>), and then N positive integers follow in the next line, separated by spaces. It is guaranteed that all the integers and their sum are less than 2<sup>31</sup>.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>For each case, print in a line two numbers: ∣n<sub>1</sub>−n<sub>2</sub>∣ and ∣S<sub>1</sub>−S<sub>2</sub>∣, separated by exactly one space.</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>要求把一个集合分成两个不相交的集合，使得这两个集合的元素个数相差最小的前提下，两个集合的总和之差最大。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行给出一个正整数N(2≤N≤10<sup>，然后在下一行给出N个正整数，数中间由空格分隔。保证所有的整数及其总和小于2<sup>31</sup>。</sup></p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>在一行中打印两个数字，∣n<sub>1</sub>−n<sub>2</sub>∣ 和 ∣S<sub>1</sub>−S<sub>2</sub>∣ 由空格隔开。</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><ol><li>将所有数排序。</li><li>计算前n/2个元素的总和，∣S<sub>1</sub>−S<sub>2</sub>∣的值等于sum-2*前n/2元素的和。</li><li>∣n<sub>1</sub>−n<sub>2</sub>∣为n%2，奇数为1，偶数为0。</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N, sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N; v.resize(N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; v[i];</span><br><span class="line">    sort(v.begin(), v.end());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N/<span class="number">2</span>; i++)</span><br><span class="line">        sum1 += v[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = N/<span class="number">2</span>; i &lt; N; i++)</span><br><span class="line">        sum2 += v[i];</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; N % <span class="number">2</span> &lt;&lt; <span class="string">' '</span> &lt;&lt;  sum2 - sum1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">"2.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Sample Input <span class="number">1</span>:</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">23</span> <span class="number">8</span> <span class="number">10</span> <span class="number">99</span> <span class="number">46</span> <span class="number">2333</span> <span class="number">46</span> <span class="number">1</span> <span class="number">666</span> <span class="number">555</span></span><br><span class="line">Sample Output <span class="number">1</span>:</span><br><span class="line"><span class="number">0</span> <span class="number">3611</span></span><br><span class="line">Sample Input <span class="number">2</span>:</span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">110</span> <span class="number">79</span> <span class="number">218</span> <span class="number">69</span> <span class="number">3721</span> <span class="number">100</span> <span class="number">29</span> <span class="number">135</span> <span class="number">2</span> <span class="number">6</span> <span class="number">13</span> <span class="number">5188</span> <span class="number">85</span></span><br><span class="line">Sample Output <span class="number">2</span>:</span><br><span class="line"><span class="number">1</span> <span class="number">9359</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805357258326016&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;划分整数集&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="https://www.windsings.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
</feed>
