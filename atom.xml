<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>且听风吟</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.windsings.com/"/>
  <updated>2019-05-15T18:03:26.805Z</updated>
  <id>https://www.windsings.com/</id>
  
  <author>
    <name>Wind</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>视觉SLAM脑图</title>
    <link href="https://www.windsings.com//posts/28186654/"/>
    <id>https://www.windsings.com//posts/28186654/</id>
    <published>2019-05-15T17:57:39.000Z</published>
    <updated>2019-05-15T18:03:26.805Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6CA1;&#x5199;&#x5B8C;&#xFF0C;v0.2&#x7248;&#x3002;</p><p><img src="/posts/28186654/&#x89C6;&#x89C9;SLAM-v0.2.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x6CA1;&amp;#x5199;&amp;#x5B8C;&amp;#xFF0C;v0.2&amp;#x7248;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/posts/28186654/&amp;#x89C6;&amp;#x89C9;SLAM-v0.2.jpg&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="SLAM" scheme="https://www.windsings.com/categories/SLAM/"/>
    
    
      <category term="笔记" scheme="https://www.windsings.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="智能机器人" scheme="https://www.windsings.com/tags/%E6%99%BA%E8%83%BD%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
      <category term="SLAM" scheme="https://www.windsings.com/tags/SLAM/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
  </entry>
  
  <entry>
    <title>找实习的经验教训总结</title>
    <link href="https://www.windsings.com//posts/e8bcf6f0/"/>
    <id>https://www.windsings.com//posts/e8bcf6f0/</id>
    <published>2019-05-14T16:49:37.000Z</published>
    <updated>2019-05-16T16:08:25.728Z</updated>
    
    <content type="html"><![CDATA[<p>&#x4ECE;5.4&#x6B63;&#x5F0F;&#x5F00;&#x59CB;&#x627E;&#x5B9E;&#x4E60;&#x5230;&#x73B0;&#x5728;&#x5DF2;&#x7ECF;&#x8FC7;&#x4E86;10&#x5929;&#x4E86;&#xFF0C;&#x628A;&#x5FC3;&#x5F97;&#x4F53;&#x4F1A;&#xFF0C;&#x7ECF;&#x9A8C;&#x6559;&#x8BAD;&#xFF0C;&#x6240;&#x601D;&#x6240;&#x611F;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x3002; <a id="more"></a></p><h1 id="&#x7ECF;&#x9A8C;&#x603B;&#x7ED3;">&#x7ECF;&#x9A8C;&#x603B;&#x7ED3;</h1><h2 id="&#x5927;&#x516C;&#x53F8;or&#x5C0F;&#x516C;&#x53F8;">&#x5927;&#x516C;&#x53F8;or&#x5C0F;&#x516C;&#x53F8;</h2><p>&#x8FD9;&#x4E00;&#x6B21;&#x627E;&#x5B9E;&#x4E60;&#xFF0C;&#x6211;&#x53EA;&#x9762;&#x4E86;&#x516C;&#x53F8;&#xFF0C;&#x6CA1;&#x6709;&#x9762;&#x79D1;&#x7814;&#x9662;&#x6240;&#xFF08;&#x4E2D;&#x79D1;&#x9662;**&#x6240;or**&#x5B9E;&#x9A8C;&#x5BA4;&#xFF09;&#x3002;&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x79D1;&#x7814;&#x9662;&#x6240;&#x7684;&#x9762;&#x8BD5;&#x6211;&#x6CA1;&#x6709;&#x592A;&#x591A;&#x7684;&#x4F53;&#x4F1A;&#x3002;</p><p>&#x6211;&#x9762;&#x4E86;&#x5927;&#x6982;&#x6709;10+&#x516C;&#x53F8;&#xFF0C;&#x540E;&#x9762;&#x6536;&#x5230;&#x4E00;&#x4E9B;offer&#x4E4B;&#x540E;&#xFF0C;&#x4E0D;&#x60F3;&#x9762;&#x7684;&#x3001;&#x4E0D;&#x60F3;&#x53BB;&#x7684;&#x516C;&#x53F8;&#xFF0C;&#x6211;&#x5C31;&#x6CA1;&#x518D;&#x53C2;&#x52A0;&#x4ED6;&#x4EEC;&#x7684;&#x7B14;&#x8BD5;/&#x4E8C;&#x9762;&#x3002;&#x603B;&#x4F53;&#x4E0A;&#x800C;&#x8A00;&#xFF0C;&#x5927;&#x516C;&#x53F8;&#x7684;&#x9762;&#x8BD5;&#x66F4;&#x770B;&#x91CD;<strong>&#x201C;&#x4F60;&#x73B0;&#x5728;&#x7684;&#x57FA;&#x7840;&#x600E;&#x4E48;&#x6837;&#xFF0C;&#x7ECF;&#x8FC7;&#x6211;&#x4EEC;&#x7684;&#x57F9;&#x8BAD;&#xFF0C;&#x4F60;&#x5B66;&#x5F97;&#x80FD;&#x6709;&#x591A;&#x5FEB;&#xFF0C;&#x57F9;&#x8BAD;&#x7ED3;&#x675F;&#x540E;&#x4F60;&#x80FD;&#x5E72;&#x4EC0;&#x4E48;&#x201D;&#x3002;</strong>&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x5C0F;&#x516C;&#x53F8;&#xFF0C;&#x4ED6;&#x4EEC;&#x66F4;&#x770B;&#x91CD;&#x201C;&#x4F60;&#x73B0;&#x5728;&#x7684;&#x4E13;&#x4E1A;&#x6280;&#x80FD;&#x548C;&#x5C97;&#x4F4D;&#x5339;&#x914D;&#x7A0B;&#x5EA6;&#x5982;&#x4F55;&#xFF0C;&#x76F4;&#x767D;&#x4E00;&#x70B9;&#x7684;&#x8BF4;&#xFF0C;<strong>&#x4F60;&#x80FD;&#x9876;&#x5F97;&#x4E0A;&#x51E0;&#x4E2A;&#x6B63;&#x5F0F;&#x5458;&#x5DE5;</strong>&#x201D;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x6211;&#xFF0C;&#x5B9E;&#x4E60;&#x7684;&#x6700;&#x5927;&#x610F;&#x4E49;&#x662F;&#x7ED9;&#x6211;&#x4E00;&#x4E2A;&#x673A;&#x4F1A;&#x53BB;&#x6DF1;&#x5165;&#x4F53;&#x9A8C;&#xFF0C;&#x601D;&#x8003;&#xFF0C;&#x8BD5;&#x9519;&#x3002;&#x800C;&#x4E14;&#x6211;&#x6295;&#x7684;&#x5C97;&#x4F4D;&#x5927;&#x591A;&#x6570;&#x662F;&#x505A;&#x4E00;&#x4E9B;&#x975E;&#x5E38;&#x65B0;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x90A3;&#x4E48;&#x4E5F;&#x5C31;&#x4E0D;&#x592A;&#x53EF;&#x80FD;&#x8BA9;&#x6211;&#x53BB;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x8001;&#x65E7;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x505A;&#x4E00;&#x4E9B;&#x5F88;&#x65E0;&#x804A;&#x7684;&#x4E8B;&#x4E86;&#x3002;</p><p>&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x4E5F;&#x53EA;&#x6709;&#x5927;&#x516C;&#x53F8;&#x4F1A;&#x6709;&#x8F83;&#x5145;&#x8DB3;&#x7684;&#x4EBA;&#x529B;&#x7269;&#x529B;&#x53BB;&#x57F9;&#x8BAD;&#x4E00;&#x4E2A;&#x5B9E;&#x4E60;&#x751F;&#xFF0C;&#x8BA9;&#x4ED6;&#x5B66;&#x4E60;&#x4F01;&#x4E1A;&#x6587;&#x5316;&#xFF0C;&#x9879;&#x76EE;&#x6D41;&#x7A0B;&#xFF0C;&#x6307;&#x6D3E;&#x4E00;&#x4E2A;mentor&#x6765;&#x5E26;&#x3002;&#x521D;&#x521B;&#x56E2;&#x961F;&#x66F4;&#x591A;&#x7684;&#x8FD8;&#x662F;&#x5173;&#x6CE8;&#x8FD9;&#x4E2A;&#x5B9E;&#x4E60;&#x751F;&#x80FD;&#x4EA7;&#x51FA;&#x591A;&#x5C11;&#xFF0C;&#x662F;&#x5426;&#x503C;&#x7ED9;&#x4ED6;&#x5F00;&#x51FA;&#x7684;&#x85AA;&#x6C34;&#x3002;</p><p>PS&#xFF1A;&#x771F;&#x60F3;&#x5E72;&#x6D3B;&#x8D5A;&#x94B1;&#x7684;&#x8BDD;&#xFF0C;&#x53BB;&#x63A5;&#x5355;&#x505A;&#x79C1;&#x6D3B;&#x66F4;&#x8D5A;&#xFF0C;&#x6211;&#x6709;&#x4E2A;&#x540C;&#x5B66;&#x5728;&#x7814;&#x7A76;&#x751F;&#x5165;&#x5B66;&#x4E4B;&#x524D;&#x63A5;&#x79C1;&#x6D3B;&#xFF0C;&#x6708;&#x5165;1.5W&#x3002;</p><p>&#x6CE8;&#xFF1A;&#x8FD9;&#x91CC;&#x7684;&#x5927;&#x516C;&#x53F8;&#x662F;&#x6307;&#x5177;&#x6709;&#x4E00;&#x5B9A;&#x884C;&#x4E1A;&#x5F71;&#x54CD;&#x529B;&#x7684;&#x516C;&#x53F8;&#xFF0C;<strong>&#x89C4;&#x6A21;&#x5728;&#x72EC;&#x89D2;&#x517D;&#x53CA;&#x4EE5;&#x4E0A;</strong>&#x3002;&#x5F88;&#x591A;&#x72EC;&#x89D2;&#x517D;&#x516C;&#x53F8;&#x5BF9;&#x4E8E;&#x65B0;&#x4EBA;&#x7684;&#x57F9;&#x517B;&#x505A;&#x5F97;&#x975E;&#x5E38;&#x975E;&#x5E38;&#x5389;&#x5BB3;&#x3002;&#x5C11;&#x90E8;&#x5206;&#x5C0F;&#x516C;&#x53F8;&#x4E5F;&#x5F88;&#x770B;&#x91CD;&#x5BF9;&#x65B0;&#x4EBA;&#x7684;&#x57F9;&#x517B;&#x3002;</p><h2 id="&#x591A;&#x53BB;&#x6295;&#x591A;&#x53BB;&#x9762;">&#x591A;&#x53BB;&#x6295;&#xFF0C;&#x591A;&#x53BB;&#x9762;</h2><p>&#x5982;&#x540E;&#x6587;&#x6240;&#x8FF0;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6211;&#x662F;&#x6CA1;&#x60F3;&#x597D;&#x81EA;&#x5DF1;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#x7684;&#xFF0C;&#x5728;&#x548C;&#x4E00;&#x4E9B;&#x9762;&#x8BD5;&#x5B98;&#x8FDB;&#x884C;&#x6C9F;&#x901A;&#x4EA4;&#x6D41;&#x4E4B;&#x540E;&#xFF0C;&#x624D;&#x6E10;&#x6E10;&#x660E;&#x767D;&#x81EA;&#x5DF1;&#x60F3;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5EFA;&#x8BAE;&#x591A;&#x53BB;&#x6295;&#x7B80;&#x5386;&#xFF0C;&#x591A;&#x53BB;&#x9762;&#x3002;&#x8138;&#x76AE;&#x8981;&#x539A;&#xFF0C;&#x5FC3;&#x6001;&#x8981;&#x597D;&#xFF0C;&#x62FF;&#x4E86;offer&#x56FA;&#x7136;&#x9AD8;&#x5174;&#xFF0C;&#x88AB;&#x62D2;&#x4E5F;&#x4E0D;&#x8981;&#x6C14;&#x9981;&#xFF0C;&#x6BD5;&#x7ADF;&#x4E5F;&#x957F;&#x4E86;&#x89C1;&#x8BC6;&#xFF0C;&#x600E;&#x4E48;&#x7B97;&#x90FD;&#x662F;&#x4E0D;&#x4E8F;&#x7684;&#x3002;</p><p>&#x8BF4;&#x4E00;&#x4E2A;&#x6211;&#x88AB;&#x62D2;&#x7684;&#x4E8B;&#xFF0C;&#x5F88;&#x591A;&#x4EBA;&#x90FD;&#x8BF4;&#x5E73;&#x5B89;&#x79D1;&#x6280;&#x597D;&#x6295;&#xFF0C;&#x90FD;&#x5237;&#x4E00;&#x4E2A;&#x5E73;&#x5B89;&#x4FDD;&#x5E95;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x6211;&#x6295;&#x5E73;&#x5B89;&#x79D1;&#x6280;&#xFF0C;&#x5728;&#x7B80;&#x5386;&#x7B5B;&#x9009;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x88AB;&#x62D2;&#x4E86;&#xFF0C;&#x5F53;&#x65F6;&#x6211;&#x4E5F;&#x7279;&#x522B;&#x90C1;&#x95F7;&#xFF0C;&#x6211;&#x5FC3;&#x60F3;&#xFF0C;&#x6211;TM&#x518D;&#x600E;&#x4E48;&#x83DC;&#xFF0C;&#x4E5F;&#x4E0D;&#x81F3;&#x4E8E;&#x5728;&#x7B80;&#x5386;&#x4E0A;&#x5C31;&#x88AB;&#x6302;&#x4E86;&#x5427;&#xFF1F;&#x540E;&#x6765;&#x4E5F;&#x6162;&#x6162;&#x60F3;&#x5F00;&#x4E86;&#xFF0C;&#x5509;&#xFF0C;&#x88AB;&#x62D2;&#x5C31;&#x88AB;&#x62D2;&#x5427;&#xFF0C;&#x968F;&#x4ED6;&#x53BB;&#x5427;&#xFF0C;&#x5FC3;&#x6001;&#x653E;&#x5E73;&#x3002;</p><h2 id="&#x8138;&#x76AE;&#x8981;&#x539A;&#x4E3B;&#x52A8;&#x4E89;&#x53D6;&#x673A;&#x4F1A;">&#x8138;&#x76AE;&#x8981;&#x539A;&#xFF0C;&#x4E3B;&#x52A8;&#x4E89;&#x53D6;&#x673A;&#x4F1A;</h2><p>&#x9762;&#x534E;&#x4E3A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x5206;&#x4E24;&#x5929;&#x8FDB;&#x884C;&#xFF0C;&#x6211;&#x662F;&#x7B2C;&#x4E00;&#x5929;&#xFF0C;&#x9762;&#x6211;&#x7684;&#x9762;&#x8BD5;&#x5B98;&#x662F;WLAN&#x7EC4;&#x7684;&#xFF0C;&#x4E5F;&#x628A;&#x6211;&#x5206;&#x5230;&#x4E86;WLAN&#x7EC4;&#xFF0C;&#x6211;&#x4E0D;&#x592A;&#x60F3;&#x505A;&#x3002;&#x7B2C;&#x4E8C;&#x5929;&#x6709;&#x4E2D;&#x592E;&#x7814;&#x7A76;&#x9662;&#x7684;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x7EC4;&#x6765;&#x9762;&#xFF0C;&#x6211;&#x542C;&#x8BF4;&#x4E86;&#x6D88;&#x606F;&#xFF0C;&#x6211;&#x5C31;&#x53BB;&#x7533;&#x8BF7;&#x9738;&#x9762;&#x4E86;&#xFF0C;HR&#x770B;&#x4E86;&#x770B;&#x6211;&#x7684;&#x9762;&#x8BD5;&#x8BB0;&#x5F55;&#xFF0C;&#x4E5F;&#x4E0E;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x5173;&#x7CFB;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x5C31;&#x540C;&#x610F;&#x4E86;&#x3002;&#x540E;&#x6765;&#x4E5F;&#x662F;&#x9762;&#x5F97;&#x633A;&#x597D;&#x7684;&#x3002;</p><p>Intel&#x4E00;&#x5F00;&#x59CB;&#x53D1;&#x7ED9;&#x6211;&#x7684;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x7EC4;&#x7684;offer&#xFF0C;&#x6211;&#x4E5F;&#x4E0D;&#x592A;&#x60F3;&#x53BB;&#xFF0C;&#x591A;&#x65B9;&#x6253;&#x542C;&#xFF0C;&#x8054;&#x7CFB;&#x5230;&#x4E86;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x7EC4;&#x7684;&#x8D1F;&#x8D23;&#x4EBA;&#xFF0C;&#x53C8;&#x5411;&#x4ED6;&#x6BDB;&#x9042;&#x81EA;&#x8350;&#xFF0C;&#x6700;&#x540E;&#x4E5F;&#x8F6C;&#x5C97;&#x6210;&#x529F;&#x3002;</p><p>&#x8FD8;&#x662F;&#x90A3;&#x53E5;&#x8001;&#x8BDD;&#xFF0C;&#x673A;&#x4F1A;&#x662F;&#x81EA;&#x5DF1;&#x4E89;&#x53D6;&#x6765;&#x7684;&#xFF0C;&#x627E;&#x5DE5;&#x4F5C;&#x5C31;&#x662F;&#x628A;&#x81EA;&#x5DF1;&#x5F80;&#x5916;&#x63A8;&#x9500;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x8138;&#x76AE;&#x8981;&#x539A;&#x3002;</p><h2 id="&#x535A;&#x5BA2;&#x5E2E;&#x52A9;&#x5F88;&#x5927;">&#x535A;&#x5BA2;&#x5E2E;&#x52A9;&#x5F88;&#x5927;</h2><p>&#x6709;&#x5F88;&#x591A;&#x4F53;&#x9A8C;&#x4E0D;&#x9519;&#x7684;&#x9762;&#x8BD5;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x90FD;&#x7531;&#x8BE6;&#x7EC6;&#x7684;&#x6D4F;&#x89C8;&#x6211;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x76F8;&#x5BF9;&#x4E8E;&#x6211;&#x5199;&#x7684;&#x5F88;&#x632B;&#x7684;&#x7B80;&#x5386;&#xFF0C;&#x535A;&#x5BA2;&#x6551;&#x4E86;&#x6211;&#x4E00;&#x547D;&#x3002;</p><p>&#x6240;&#x4EE5;&#xFF0C;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x7684;&#x8BDD;&#xFF0C;&#x5199;&#x4E00;&#x4E2A;&#x535A;&#x5BA2;&#xFF0C;&#x4F5C;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x79EF;&#x7D2F;&#x548C;&#x6C89;&#x6DC0;&#x5427;&#x3002;</p><h2 id="&#x5B89;&#x6392;&#x597D;&#x9762;&#x8BD5;&#x65F6;&#x95F4;">&#x5B89;&#x6392;&#x597D;&#x9762;&#x8BD5;&#x65F6;&#x95F4;</h2><p>&#x8FD9;&#x4E00;&#x5468;&#x6211;&#x9762;&#x4E86;&#x5F88;&#x591A;&#x5BB6;&#x516C;&#x53F8;&#xFF0C;&#x5E38;&#x5E38;&#x662F;&#x4E00;&#x5929;&#x8981;&#x51C6;&#x5907;&#x597D;&#x51E0;&#x573A;&#x9762;&#x8BD5;&#xFF0C;&#x6211;&#x90FD;&#x628A;&#x9762;&#x8BD5;&#x5B89;&#x6392;&#x8BB0;&#x5230;&#x4E00;&#x4E2A;&#x5C0F;&#x672C;&#x5B50;&#x4E0A;&#xFF0C;&#x6211;&#x4F1A;&#x5728;&#x9762;&#x8BD5;&#x524D;&#x534A;&#x5C0F;&#x65F6;&#x5C31;&#x51C6;&#x5907;&#x597D;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x5E0C;&#x671B;&#x5BF9;&#x65B9;&#x80FD;&#x9075;&#x5B88;&#x65F6;&#x95F4;&#x3002;</p><p>&#x8FD9;&#x4E00;&#x5468;&#x6211;&#x88AB;&#x4E00;&#x5BB6;&#x4E91;&#x8BA1;&#x7B97;&#x516C;&#x53F8;&#x62D6;&#x8FC7;&#x9762;&#x8BD5;&#x65F6;&#x95F4;&#xFF08;&#x7EA6;&#x5B9A;&#x4E0B;&#x5348;2&#x70B9;&#x5F00;&#x59CB;&#xFF0C;5&#x70B9;&#x90FD;&#x6CA1;&#x9762;&#x5B8C;&#xFF09;&#xFF0C;&#x4E5F;&#x8FDF;&#x5230;&#x8FC7;&#x4E24;&#x573A;&#x9762;&#x8BD5;&#xFF08;&#x6709;&#x4E00;&#x5929;&#x7279;&#x522B;&#x60F3;&#x5BB6;&#xFF0C;&#x5FC3;&#x60C5;&#x7279;&#x522B;&#x4F4E;&#x843D;&#xFF09;&#xFF0C;&#x5F15;&#x4EE5;&#x4E3A;&#x6212;&#xFF0C;&#x6DF1;&#x611F;&#x6B49;&#x610F;&#x3002;</p><hr><h1 id="&#x6559;&#x8BAD;&#x603B;&#x7ED3;">&#x6559;&#x8BAD;&#x603B;&#x7ED3;</h1><h2 id="&#x65B9;&#x5411;&#x5B9A;&#x7684;&#x665A;">&#x65B9;&#x5411;&#x5B9A;&#x7684;&#x665A;</h2><p>&#x6211;&#x4E00;&#x5F00;&#x59CB;&#x6839;&#x672C;&#x6CA1;&#x60F3;&#x597D;&#x6211;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x6211;&#x60F3;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x751A;&#x81F3;&#x8FDE;&#x6211;&#x80FD;&#x505A;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x77E5;&#x9053;&#x3002;&#x6240;&#x4EE5;&#x6295;&#x7B80;&#x5386;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x90FD;&#x662F;&#x778E;&#x6295;&#x7684;&#xFF0C;&#x51E1;&#x662F;&#x5C97;&#x4F4D;&#x63CF;&#x8FF0;&#x4E0E;&#x6211;&#x7B80;&#x5386;&#x6CBE;&#x70B9;&#x8FB9;&#x7684;&#x6211;&#x90FD;&#x6295;&#x4E86;&#xFF0C;&#x90A3;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x7684;&#x7B80;&#x5386;&#x6CA1;&#x6709;&#x91CD;&#x70B9;&#xFF0C;&#x5B8C;&#x5168;&#x770B;&#x4E0D;&#x51FA;&#x6211;&#x7684;&#x5DE5;&#x4F5C;&#x610F;&#x5411;&#x3002;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x662F;&#x6211;&#x7684;&#x8BD5;&#x9519;&#x8FC7;&#x7A0B;&#x3002;<del>&#x7ADF;&#x7136;&#x8FD8;&#x6536;&#x5230;&#x4E86;&#x51E0;&#x4E2A;offer&#x3002;</del></p><p>&#x540E;&#x6765;&#x6211;&#x60F3;&#x6E05;&#x695A;&#x4E86;&#x6211;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x624D;&#x5F00;&#x59CB;&#x66F4;&#x6709;&#x9488;&#x5BF9;&#x6027;&#x7684;&#x6295;&#x3002;</p><h2 id="&#x7B80;&#x5386;&#x6295;&#x5F97;&#x665A;">&#x7B80;&#x5386;&#x6295;&#x5F97;&#x665A;</h2><p>&#x57FA;&#x672C;&#x4E0A;&#x8FC7;&#x5B8C;&#x5E74;&#xFF0C;&#x6625;&#x62DB;&#x5C31;&#x5F00;&#x59CB;&#x4E86;&#x3002;&#x8D8A;&#x65E9;&#x6295;&#x7B80;&#x5386;&#xFF0C;&#x673A;&#x4F1A;&#x8D8A;&#x5927;&#x3002;&#x6211;&#x5C31;&#x662F;&#x6295;&#x7684;&#x592A;&#x665A;&#x4E86;&#xFF0C; &#x50CF;&#x4E00;&#x4E9B;&#x5916;&#x4F01;&#xFF08;&#x601D;&#x79D1;&#x7B49;&#xFF09;&#x548C;&#x817E;&#x8BAF;&#x548C;&#x963F;&#x91CC;&#x57FA;&#x672C;&#x4E0A;&#x5DF2;&#x7ECF;&#x7ED3;&#x675F;&#x4E86;&#x6625;&#x62DB;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x7684;&#x7B80;&#x5386;&#x8FDE;&#x88AB;&#x635E;&#x7684;&#x673A;&#x4F1A;&#x90FD;&#x6CA1;&#x4E86;&#xFF0C;&#x53EA;&#x80FD;&#x7B49;&#x79CB;&#x62DB;&#x3002;</p><p>&#x8BB0;&#x4F4F;&#x51E0;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#xFF0C;&#x6625;&#x62DB;&#xFF1A;&#x91D1;&#x4E09;&#x94F6;&#x56DB;&#xFF0C;3&#x6708;&#x5C31;&#x5F00;&#x59CB;&#x4E86;&#x3002;&#x79CB;&#x62DB;&#xFF1A;7&#x6708;&#x4E2D;&#x63D0;&#x524D;&#x6279;&#x5F00;&#x59CB;&#xFF0C;&#x91D1;&#x4E5D;&#x94F6;&#x5341;&#x3002;</p><h2 id="&#x51C6;&#x5907;&#x4E0D;&#x5145;&#x5206;">&#x51C6;&#x5907;&#x4E0D;&#x5145;&#x5206;</h2><p>&#x9762;&#x8BD5;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x53CD;&#x6620;&#x51FA;&#x6765;&#x4E86;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x66FE;&#x7ECF;&#x5B66;&#x8FC7;&#x7684;&#x4E1C;&#x897F;&#x90FD;&#x5FD8;&#x4E86;&#xFF0C;&#x590D;&#x4E60;&#x5F97;&#x4E0D;&#x591F;&#x3002;&#x671F;&#x4E2D;&#x8003;&#x5B8C;&#x7ACB;&#x9A6C;&#x5C31;&#x8981;&#x627E;&#x5B9E;&#x4E60;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x4E94;&#x4E00;&#x671F;&#x95F4;&#x5237;&#x4E86;&#x4E00;&#x4E9B;&#x7B97;&#x6CD5;&#x9898;&#xFF0C;&#x627E;&#x4E86;&#x627E;&#x624B;&#x611F;&#xFF0C;&#x6211;&#x7684;&#x9762;&#x8BD5;&#x57FA;&#x672C;&#x4E0A;&#x7C7B;&#x4F3C;&#x4E8E;&#x88F8;&#x9762;&#x3002;&#x5982;&#x679C;&#x518D;&#x7ED9;&#x6211;&#x4E00;&#x4E2A;&#x6708;&#x7684;&#x65F6;&#x95F4;&#x53BB;&#x51C6;&#x5907;&#x590D;&#x4E60;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x5E94;&#x8BE5;&#x80FD;&#x8868;&#x73B0;&#x5F97;&#x66F4;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x4F30;&#x8BA1;&#x5230;&#x65F6;&#x5019;&#x9EC4;&#x82B1;&#x83DC;&#x90FD;&#x51C9;&#x4E86;&#x3002;</p><p><strong>&#x8BF4;&#x767D;&#x4E86;&#x5C31;&#x662F;&#x83DC;&#xFF0C;&#x6CA1;&#x6709;&#x522B;&#x7684;&#x7406;&#x7531;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x539F;&#x56E0;&#x5C31;&#x662F;&#x6211;&#x592A;&#x83DC;&#x3002;</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x4ECE;5.4&amp;#x6B63;&amp;#x5F0F;&amp;#x5F00;&amp;#x59CB;&amp;#x627E;&amp;#x5B9E;&amp;#x4E60;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8FC7;&amp;#x4E86;10&amp;#x5929;&amp;#x4E86;&amp;#xFF0C;&amp;#x628A;&amp;#x5FC3;&amp;#x5F97;&amp;#x4F53;&amp;#x4F1A;&amp;#xFF0C;&amp;#x7ECF;&amp;#x9A8C;&amp;#x6559;&amp;#x8BAD;&amp;#xFF0C;&amp;#x6240;&amp;#x601D;&amp;#x6240;&amp;#x611F;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E0B;&amp;#x6765;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="经验教训" scheme="https://www.windsings.com/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD/"/>
    
    
      <category term="经验教训" scheme="https://www.windsings.com/tags/%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD/"/>
    
      <category term="总结" scheme="https://www.windsings.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="找实习" scheme="https://www.windsings.com/tags/%E6%89%BE%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="实习周" scheme="https://www.windsings.com/tags/%E5%AE%9E%E4%B9%A0%E5%91%A8/"/>
    
  </entry>
  
  <entry>
    <title>PAT-Advanced-Level题解</title>
    <link href="https://www.windsings.com//posts/79c0eafd/"/>
    <id>https://www.windsings.com//posts/79c0eafd/</id>
    <published>2019-05-07T18:26:08.000Z</published>
    <updated>2019-05-07T18:31:47.943Z</updated>
    
    <content type="html"><![CDATA[<p>&#x4EE3;&#x7801;<a href="https://github.com/littlesevenmo/PAT-Advanced-Level" target="_blank" rel="noopener">&#x8BF7;&#x70B9;&#x8FD9;&#x91CC;</a></p><p>&#x9898;&#x89E3;&#x4F1A;&#x5728;<strong>&#x4E0D;&#x5FD9;</strong>&#x7684;&#x65F6;&#x5019;&#x66F4;&#x65B0;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x4EE3;&amp;#x7801;&lt;a href=&quot;https://github.com/littlesevenmo/PAT-Advanced-Level&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x8BF7;&amp;#x70B9;&amp;#x8FD9;&amp;#x9
      
    
    </summary>
    
      <category term="PAT-A" scheme="https://www.windsings.com/categories/PAT-A/"/>
    
    
      <category term="PAT" scheme="https://www.windsings.com/tags/PAT/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>乱七八糟的算法题</title>
    <link href="https://www.windsings.com//posts/3bb23225/"/>
    <id>https://www.windsings.com//posts/3bb23225/</id>
    <published>2019-04-25T08:28:36.000Z</published>
    <updated>2019-05-08T13:25:31.027Z</updated>
    
    <content type="html"><![CDATA[<p>&#x672A;&#x5F52;&#x6863;&#x7684;&#x7B97;&#x6CD5;&#x9898;</p><a id="more"></a><h1 id="&#x534E;&#x4E3A;-&#x5C0F;&#x738B;&#x7684;&#x5BC6;&#x7801;">2019&#x534E;&#x4E3A;-&#x5C0F;&#x738B;&#x7684;&#x5BC6;&#x7801;</h1><h2 id="&#x9898;&#x76EE;&#x63CF;&#x8FF0;">&#x9898;&#x76EE;&#x63CF;&#x8FF0;</h2><p>&#x5C0F;&#x738B;&#x7684;&#x4FDD;&#x9669;&#x7BB1;&#x5BC6;&#x7801;&#x662F;&#x4E00;&#x4E2A;&#x5347;&#x5E8F;&#x6392;&#x5217;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x4F46;&#x662F;&#x5C0F;&#x738B;&#x603B;&#x662F;&#x8BB0;&#x4E0D;&#x4F4F;&#x4ED6;&#x7684;&#x5BC6;&#x7801;&#xFF0C;&#x4E8E;&#x662F;&#x5C0F;&#x738B;&#x5C06;&#x4ED6;&#x7684;&#x5BC6;&#x7801;&#x52A0;&#x5BC6;&#x540E;&#x4FDD;&#x5B58;&#x5728;&#x4E86;&#x4E00;&#x4E2A;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x91CC;&#xFF0C;&#x52A0;&#x5BC6;&#x7684;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p><ol type="1"><li>&#x7528;&#x6570;&#x5B57;&#x7684;&#x82F1;&#x6587;&#x5355;&#x8BCD;&#x6765;&#x4EE3;&#x66FF;&#x6570;&#x5B57;&#x672C;&#x8EAB;&#x3002;&#x6BD4;&#x5982;1234699&#x53D8;&#x6210;onethreefoursixninenine</li><li>&#x5C06;&#x4E0A;&#x8FF0;&#x5B57;&#x7B26;&#x4E32;&#x4F7F;&#x7528;&#x201C;&#x5C0F;&#x738B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x201D;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;&#x8BE5;&#x7B97;&#x6CD5;&#x4F1A;&#x6309;&#x7167;&#x67D0;&#x79CD;&#x89C4;&#x5219;&#x6765;&#x6539;&#x53D8;&#x539F;&#x5B57;&#x7B26;&#x4E32;&#x5B57;&#x7B26;&#x7684;&#x6392;&#x5217;&#x987A;&#x5E8F;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x4F1A;&#x6539;&#x53D8;&#x67D0;&#x4E9B;&#x5B57;&#x6BCD;&#x7684;&#x5927;&#x5C0F;&#x5199;&#x3002;&#x6BD4;&#x5982;onethreefoursixninenine&#x7ECF;&#x8FC7;&#x52A0;&#x5BC6;&#x540E;&#x5C31;&#x53D8;&#x6210;&#x4E86;NeNohuiroNNiNeteefersix&#x3002;</li></ol><p>&#x7531;&#x4E8E;&#x201C;&#x5C0F;&#x738B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x201D;&#x662F;&#x5C0F;&#x738B;&#x81EA;&#x5DF1;&#x8BBE;&#x8BA1;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5C0F;&#x738B;&#x8BA4;&#x4E3A;&#x53EA;&#x6709;&#x4ED6;&#x81EA;&#x5DF1;&#x80FD;&#x5C06;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8FD8;&#x539F;&#x3002;</p><p>&#x5B9E;&#x9645;&#x4E0A;&#x5C0F;&#x738B;&#x7684;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x5B58;&#x5728;&#x6F0F;&#x6D1E;&#x3002;&#x5373;&#x4F7F;&#x4E0D;&#x77E5;&#x9053;&#x201C;&#x5C0F;&#x738B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x201D;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#xFF0C;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x8FD8;&#x539F;&#x51FA;&#x539F;&#x59CB;&#x7684;&#x5BC6;&#x7801;&#x7684;&#x3002;&#x8BF7;&#x4F60;&#x5199;&#x4E00;&#x6BB5;&#x7A0B;&#x5E8F;&#x6765;&#x7834;&#x89E3;&#x5C0F;&#x738B;&#x7684;&#x5BC6;&#x7801;&#x3002;</p><hr><p>2019&#x534E;&#x4E3A;&#x6625;&#x62DB;&#x673A;&#x8BD5;&#x9898;</p><h2 id="&#x793A;&#x4F8B;1">&#x793A;&#x4F8B;1</h2><p>&#x8F93;&#x5165;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oNEthrEEfoursixNiNENiEN</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x51FA;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">134699</span><br></pre></td></tr></table></figure><h2 id="&#x6211;&#x7684;&#x7B54;&#x6848;">&#x6211;&#x7684;&#x7B54;&#x6848;</h2><h3 id="&#x601D;&#x8DEF;&#x5206;&#x6790;">&#x601D;&#x8DEF;&#x5206;&#x6790;</h3><ol type="1"><li>&#x5C0F;&#x738B;&#x7684;&#x4FDD;&#x9669;&#x7BB1;&#x5BC6;&#x7801;&#x662F;<strong>&#x5347;&#x5E8F;</strong>&#x6392;&#x5217;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;</li><li>&#x6570;&#x5B57;&#x7528;&#x5B57;&#x6BCD;&#x6765;&#x4EE3;&#x66FF;&#x3002;</li><li>&#x53EA;&#x6539;&#x53D8;&#x5B57;&#x6BCD;&#x7684;&#x6392;&#x5217;&#x987A;&#x5E8F;&#xFF0C;&#x4E0D;&#x505A;&#x66FF;&#x6362;&#xFF08;&#x5373;&#x7528;&#x522B;&#x7684;&#x5B57;&#x6BCD;&#x4EE3;&#x66FF;&#xFF09;&#x3002;</li></ol><p>&#x5C06;&#x6240;&#x6709;&#x7684;&#x6570;&#x5B57;&#x4E0E;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x6BCD;&#x5217;&#x51FA;</p><table><thead><tr class="header"><th style="text-align: center;">&#x6570;&#x5B57;</th><th style="text-align: center;">&#x5B57;&#x6BCD;</th><th style="text-align: center;">&#x72EC;&#x6709;&#x7684;&#x5B57;&#x7B26;</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">0</td><td style="text-align: center;">zero</td><td style="text-align: center;">z</td></tr><tr class="even"><td style="text-align: center;">1</td><td style="text-align: center;">one</td><td style="text-align: center;">o-0-2-4</td></tr><tr class="odd"><td style="text-align: center;">2</td><td style="text-align: center;">two</td><td style="text-align: center;">w</td></tr><tr class="even"><td style="text-align: center;">3</td><td style="text-align: center;">three</td><td style="text-align: center;">h-8</td></tr><tr class="odd"><td style="text-align: center;">4</td><td style="text-align: center;">four</td><td style="text-align: center;">u</td></tr><tr class="even"><td style="text-align: center;">5</td><td style="text-align: center;">five</td><td style="text-align: center;">f-4</td></tr><tr class="odd"><td style="text-align: center;">6</td><td style="text-align: center;">six</td><td style="text-align: center;">x</td></tr><tr class="even"><td style="text-align: center;">7</td><td style="text-align: center;">seven</td><td style="text-align: center;">s-6</td></tr><tr class="odd"><td style="text-align: center;">8</td><td style="text-align: center;">eight</td><td style="text-align: center;">g</td></tr><tr class="even"><td style="text-align: center;">9</td><td style="text-align: center;">nine</td><td style="text-align: center;">i-5-6-8</td></tr></tbody></table><p>&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#xFF1A;&#x5728;&#x8FD9;10&#x4E2A;&#x6570;&#x5B57;&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x5B57;&#x6BCD;&#x201D;z&#x201C;&#xFF0C;&#x53EA;&#x5728;zero&#x4E2D;&#x51FA;&#x73B0;&#x3002;&#x5176;&#x4ED6;&#x7684;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x5B57;&#x6BCD;&#x201C;h&#x201D;&#xFF0C;&#x53EA;&#x5728;3&#x548C;8&#x7684;&#x82F1;&#x6587;&#x4E2D;&#x51FA;&#x73B0;&#xFF0C;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x3002;</p><p>&#x56E0;&#x6B64;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x5B57;&#x6BCD;&#x8FDB;&#x884C;&#x7EDF;&#x8BA1;&#x51FA;&#x73B0;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5047;&#x5982;z&#x51FA;&#x73B0;3&#x6B21;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x6570;&#x5B57;0&#x51FA;&#x73B0;&#x4E86;3&#x6B21;&#xFF0C;&#x540C;&#x65F6;&#x5C06;&#x201C;zero&#x201D;&#x56DB;&#x4E2A;&#x5B57;&#x6BCD;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x540C;&#x65F6;&#x51CF;3&#x3002;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;</p><h3 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0----zzero</span></span><br><span class="line"><span class="comment">2----wtwo</span></span><br><span class="line"><span class="comment">4----ufour</span></span><br><span class="line"><span class="comment">6----xsix</span></span><br><span class="line"><span class="comment">8----geight</span></span><br><span class="line"><span class="comment">3----h-8three</span></span><br><span class="line"><span class="comment">5----f-4five</span></span><br><span class="line"><span class="comment">7----s-6seven</span></span><br><span class="line"><span class="comment">9----i-5-6-8nine</span></span><br><span class="line"><span class="comment">1----o-0-2-4one</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">string</span> input;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; input;</span><br><span class="line">    transform(input.begin(), input.end(), input.begin(), ::<span class="built_in">tolower</span>);</span><br><span class="line">    <span class="comment">//cout &lt;&lt; input &lt;&lt; endl;//&#x53D8;&#x5C0F;&#x5199;</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; input.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (!m.count(input[i]))</span><br><span class="line">            m[input[i]] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            m[input[i]] = m[input[i]] + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x5148;&#x5904;&#x7406;0</span></span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">11</span>] = { <span class="number">0</span> };</span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;z&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;0</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">0</span>] = m[<span class="string">&apos;z&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;z&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">        m[<span class="string">&apos;r&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;w&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;2</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">2</span>] = m[<span class="string">&apos;w&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;t&apos;</span>] -= num[<span class="number">2</span>];</span><br><span class="line">        m[<span class="string">&apos;w&apos;</span>] -= num[<span class="number">2</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">2</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;u&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;4</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">4</span>] = m[<span class="string">&apos;u&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;f&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">        m[<span class="string">&apos;u&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">        m[<span class="string">&apos;r&apos;</span>] -= num[<span class="number">4</span>];</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;x&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;6</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">6</span>] = m[<span class="string">&apos;x&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;s&apos;</span>] -= num[<span class="number">6</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">6</span>];</span><br><span class="line">        m[<span class="string">&apos;x&apos;</span>] -= num[<span class="number">6</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;g&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;8</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">8</span>] = m[<span class="string">&apos;g&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;g&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;h&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">        m[<span class="string">&apos;t&apos;</span>] -= num[<span class="number">8</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;h&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;3</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">3</span>] = m[<span class="string">&apos;h&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;t&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;h&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;r&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">3</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;f&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;5</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">5</span>] = m[<span class="string">&apos;f&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;f&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">        m[<span class="string">&apos;v&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">5</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;s&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;7</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">7</span>] = m[<span class="string">&apos;s&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;s&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;v&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">7</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;i&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;9</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">9</span>] = m[<span class="string">&apos;i&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">        m[<span class="string">&apos;i&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">9</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m.count(<span class="string">&apos;o&apos;</span>))<span class="comment">//&#x8868;&#x793A;&#x6709;16</span></span><br><span class="line">    {</span><br><span class="line">        num[<span class="number">1</span>] = m[<span class="string">&apos;o&apos;</span>];</span><br><span class="line">        m[<span class="string">&apos;o&apos;</span>] -= num[<span class="number">1</span>];</span><br><span class="line">        m[<span class="string">&apos;n&apos;</span>] -= num[<span class="number">1</span>];</span><br><span class="line">        m[<span class="string">&apos;e&apos;</span>] -= num[<span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; num[i]; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x534E;&#x4E3A;-&#x65CB;&#x8F6C;&#x77E9;&#x9635;">2019&#x534E;&#x4E3A;-&#x65CB;&#x8F6C;&#x77E9;&#x9635;</h1><h2 id="&#x9898;&#x76EE;&#x5927;&#x610F;">&#x9898;&#x76EE;&#x5927;&#x610F;</h2><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;N*N&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x6C42;&#x5176;&#x5411;&#x53F3;&#x65CB;&#x8F6C;m&#x6B21;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6BCF;&#x6B21;&#x65CB;&#x8F6C;90&#xB0;&#x3002;</p><h2 id="&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;">&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;</h2><p>&#x8003;&#x5BDF;&#x5FAA;&#x73AF;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;v(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        v[i].resize(n);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; v[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">    m = m % <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[j][i];</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">2</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = n<span class="number">-1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[i][j];</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">3</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n ; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[j][i]&lt;&lt;<span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; v[i][j];</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x534E;&#x4E3A;-&#x5C0F;&#x670B;&#x53CB;&#x7684;&#x793C;&#x7269;">2019&#x534E;&#x4E3A;-&#x5C0F;&#x670B;&#x53CB;&#x7684;&#x793C;&#x7269;</h1><h2 id="&#x9898;&#x76EE;&#x5927;&#x610F;-1">&#x9898;&#x76EE;&#x5927;&#x610F;</h2><p>&#x6709;N&#x4E2A;&#x793C;&#x7269;&#x548C;k&#x4E2A;&#x5C0F;&#x670B;&#x53CB;&#xFF0C;&#x8BF7;&#x95EE;&#x6709;&#x591A;&#x5C11;&#x79CD;&#x5206;&#x793C;&#x7269;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5E76;&#x628A;&#x5B83;&#x4EEC;&#x5168;&#x90FD;&#x663E;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x7528;*&#x8868;&#x793A;&#x793C;&#x7269;&#xFF0C;&#x7528;|&#x6765;&#x5206;&#x5272;&#x5C0F;&#x670B;&#x53CB;&#x3002;</p><h2 id="&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;-1">&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;</h2><p>&#x8003;&#x5BDF;DFS</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp :res)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//cout &lt;&lt; res.size() &lt;&lt; endl;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp[<span class="number">0</span>]; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;*&apos;</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; k; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;|&apos;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; temp[i]; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&apos;*&apos;</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> gift, <span class="keyword">int</span> curChild,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (curChild == k - <span class="number">1</span>)<span class="comment">//&#x662F;&#x6700;&#x540E;&#x4E00;&#x4E2A;</span></span><br><span class="line">    {</span><br><span class="line">        temp[curChild] = gift;</span><br><span class="line">        res.push_back(temp);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (gift == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        res.push_back(temp);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = gift; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        temp[curChild] = i;</span><br><span class="line">        dfs(gift - i, curChild + <span class="number">1</span>, temp);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp(k, <span class="number">0</span>);</span><br><span class="line">    dfs(n, <span class="number">0</span>, temp);</span><br><span class="line">    display();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x534E;&#x4E3A;-&#x6C42;&#x7F16;&#x8F91;&#x8DDD;&#x79BB;">2019&#x534E;&#x4E3A;-&#x6C42;&#x7F16;&#x8F91;&#x8DDD;&#x79BB;</h1><h2 id="&#x9898;&#x76EE;&#x5927;&#x610F;-2">&#x9898;&#x76EE;&#x5927;&#x610F;</h2><p>&#x7ED9;&#x5B9A;&#x4E00;&#x7247;&#x6587;&#x7AE0;&#xFF0C;&#x6709;n&#x884C;&#xFF0C;&#x5BF9;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x6309;&#x884C;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x7ED9;&#x5B9A;&#x4E00;&#x7247;&#x4FEE;&#x6539;&#x597D;&#x7684;&#x6587;&#x7AE0;&#x3002;</p><p>&#x6C42;&#x9700;&#x8981;&#x591A;&#x5C11;&#x6B21;&#x64CD;&#x4F5C;&#xFF08;&#x5220;&#x9664;&#x3001;&#x4FEE;&#x6539;&#x3001;&#x6DFB;&#x52A0;&#xFF09;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x8FD9;&#x7BC7;&#x4FEE;&#x6539;&#x597D;&#x7684;&#x6587;&#x7AE0;&#x3002;</p><h2 id="&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;-2">&#x601D;&#x8DEF;&#x53CA;&#x4EE3;&#x7801;</h2><p>&#x7F16;&#x8F91;&#x8DDD;&#x79BB;&#xFF0C;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x53BB;&#x505A;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">10010</span>][<span class="number">10010</span>] = { <span class="number">0</span> };</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="built_in">string</span> a, <span class="built_in">string</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= a.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        dp[i][<span class="number">0</span>] = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= b.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        dp[<span class="number">0</span>][i] = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a.length(); i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b.length(); j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (a[i - <span class="number">1</span>] == b[j - <span class="number">1</span>])</span><br><span class="line">            {</span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> edIns = dp[i][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> edDel = dp[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> edRep = dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                dp[i][j] = min(edIns, min(edDel, edRep));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> dp[a.length()][b.length()];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> input;</span><br><span class="line">    <span class="keyword">int</span> n, res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;yuanlai(n), xinde(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; yuanlai[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; xinde[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//cout &lt;&lt; yuanlai[i] &lt;&lt; endl;</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; xinde[i] &lt;&lt; endl;</span></span><br><span class="line">        res += check(yuanlai[i], xinde[i]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//cout &lt;&lt; res;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672A;&amp;#x5F52;&amp;#x6863;&amp;#x7684;&amp;#x7B97;&amp;#x6CD5;&amp;#x9898;&lt;/p&gt;
    
    </summary>
    
      <category term="算法题" scheme="https://www.windsings.com/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM" scheme="https://www.windsings.com/tags/ACM/"/>
    
      <category term="未归档的" scheme="https://www.windsings.com/tags/%E6%9C%AA%E5%BD%92%E6%A1%A3%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer题解</title>
    <link href="https://www.windsings.com//posts/c812c7f8/"/>
    <id>https://www.windsings.com//posts/c812c7f8/</id>
    <published>2019-04-19T18:37:10.000Z</published>
    <updated>2019-05-07T19:37:26.395Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/ta/coding-interviews" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><p>&#x8D85;&#x8D8A;&#x4FDD;&#x4F51;&#xFF0C;offer++ <a id="more"></a></p><h1 id="&#x66FF;&#x6362;&#x7A7A;&#x683C;">&#x66FF;&#x6362;&#x7A7A;&#x683C;</h1><p>&#x6211;&#x81EA;&#x5DF1;&#x4E00;&#x5F00;&#x59CB;&#x5199;&#x7684;&#xFF0C;&#x975E;&#x5E38;&#x7B28;&#x7684;&#x65B9;&#x6CD5;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">replaceSpace</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i]==<span class="string">&apos; &apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = length+<span class="number">1</span>; j &gt; i+<span class="number">2</span>; j--)</span><br><span class="line">                {</span><br><span class="line">                    str[j] = str[j - <span class="number">2</span>];</span><br><span class="line">                }</span><br><span class="line">                length += <span class="number">2</span>;</span><br><span class="line">                str[i++] = <span class="string">&apos;%&apos;</span>;</span><br><span class="line">                str[i++] = <span class="string">&apos;2&apos;</span>;</span><br><span class="line">                str[i] = <span class="string">&apos;0&apos;</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x70B9;&#x5F00;&#x8BA8;&#x8BBA;&#x533A;&#xFF0C;&#x5927;&#x4F6C;&#x4EEC;&#x5F00;&#x59CB;&#x79C0;&#x81EA;&#x5DF1;&#x7684;&#x725B;&#x903C;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x83DC;&#x9E21;&#x745F;&#x745F;&#x53D1;&#x6296;&#x3002;</p><p>&#x5927;&#x6982;&#x601D;&#x8DEF;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5148;&#x904D;&#x5386;&#x4E00;&#x904D;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x627E;&#x51FA;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x7A7A;&#x683C;&#x3002; 2. &#x8BA1;&#x7B97;&#x66FF;&#x6362;&#x540E;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002; 3. &#x4ECE;&#x540E;&#x5F80;&#x524D;&#xFF0C;&#x653E;&#x5165;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&#x679C;&#x9047;&#x5230;&#x4E86;&#x7A7A;&#x683C;&#xFF0C;&#x5219;&#x7528;&quot;%20&quot;&#x6765;&#x66FF;&#x4EE3;&#x3002;</p><p>&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">replaceSpace</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="comment">//&#x904D;&#x5386;&#x4E00;&#x8FB9;&#x5B57;&#x7B26;&#x4E32;&#x627E;&#x51FA;&#x7A7A;&#x683C;&#x7684;&#x6570;&#x91CF;</span></span><br><span class="line">        <span class="keyword">if</span> (str == <span class="literal">NULL</span> || length &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> oldnumber = <span class="number">0</span>;<span class="comment">//&#x8BB0;&#x5F55;&#x4EE5;&#x524D;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line">        <span class="keyword">int</span> replacenumber = <span class="number">0</span>;<span class="comment">//&#x8BB0;&#x5F55;&#x7A7A;&#x683C;&#x7684;&#x6570;&#x91CF;</span></span><br><span class="line">        <span class="keyword">while</span> (str[i] != <span class="string">&apos;\0&apos;</span>)</span><br><span class="line">        {</span><br><span class="line">            oldnumber++;</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">&apos; &apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                replacenumber++;</span><br><span class="line">            }</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> newlength = oldnumber + replacenumber * <span class="number">2</span>;<span class="comment">//&#x63D2;&#x5165;&#x540E;&#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line">        <span class="keyword">if</span> (newlength &gt; length)<span class="comment">//&#x5982;&#x679C;&#x8BA1;&#x7B97;&#x540E;&#x7684;&#x957F;&#x5EA6;&#x5927;&#x4E8E;&#x603B;&#x957F;&#x5EA6;&#x5C31;&#x65E0;&#x6CD5;&#x63D2;&#x5165;</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> pOldlength = oldnumber; <span class="comment">//&#x6CE8;&#x610F;&#x4E0D;&#x8981;&#x51CF;&#x4E00;&#x56E0;&#x4E3A;&#x9690;&#x85CF;&#x4E2A;&#x2018;\0&#x2019;&#x4E5F;&#x8981;&#x7B97;&#x91CC;</span></span><br><span class="line">        <span class="keyword">int</span> pNewlength = newlength;</span><br><span class="line">        <span class="keyword">while</span> (pOldlength &gt;= <span class="number">0</span> &amp;&amp; pNewlength &gt; pOldlength)<span class="comment">//&#x653E;&#x5B57;&#x7B26;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[pOldlength] == <span class="string">&apos; &apos;</span>) <span class="comment">//&#x78B0;&#x5230;&#x7A7A;&#x683C;&#x5C31;&#x66FF;&#x6362;</span></span><br><span class="line">            {</span><br><span class="line">                str[pNewlength--] = <span class="string">&apos;0&apos;</span>;</span><br><span class="line">                str[pNewlength--] = <span class="string">&apos;2&apos;</span>;</span><br><span class="line">                str[pNewlength--] = <span class="string">&apos;%&apos;</span>;</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="comment">//&#x4E0D;&#x662F;&#x7A7A;&#x683C;&#x5C31;&#x628A;pOldlength&#x6307;&#x5411;&#x7684;&#x5B57;&#x7B26;&#x88C5;&#x5165;pNewlength&#x6307;&#x5411;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">            {</span><br><span class="line">                str[pNewlength--] = str[pOldlength];</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            pOldlength--; <span class="comment">//&#x4E0D;&#x7BA1;&#x662F;if&#x8FD8;&#x662F;elsr&#x90FD;&#x8981;&#x628A;pOldlength&#x524D;&#x79FB;</span></span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p><h1 id="&#x4ECE;&#x5C3E;&#x5230;&#x5934;&#x6253;&#x5370;&#x94FE;&#x8868;">&#x4ECE;&#x5C3E;&#x5230;&#x5934;&#x6253;&#x5370;&#x94FE;&#x8868;</h1><p>&#x4F7F;&#x7528;&#x5934;&#x63D2;&#x6CD5;&#xFF0C;&#x5C06;&#x94FE;&#x8868;&#x9006;&#x7F6E;&#x4E4B;&#x540E;&#xFF0C;&#x538B;&#x5165;vector&#x4E2D;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">      <span class="keyword">int</span> val;</span><br><span class="line">      <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">next</span>;</span></span><br><span class="line">      ListNode(<span class="keyword">int</span> x) :</span><br><span class="line">            val(x), next(<span class="literal">NULL</span>) {</span><br><span class="line">      }</span><br><span class="line">};</span><br><span class="line"><span class="function">ListNode <span class="title">L</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n, temp;</span><br><span class="line">    ListNode *ptr = &amp;L;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    L.val = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line"></span><br><span class="line">        ptr-&gt;next = (ListNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ListNode));</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; ptr-&gt;next-&gt;val;</span><br><span class="line">        ptr-&gt;next-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        ptr = ptr-&gt;next;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; printListFromTailToHead(ListNode* head)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; V;</span><br><span class="line">        <span class="keyword">if</span> (head==<span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> V;</span><br><span class="line">        ListNode* pre=head;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        pre-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* p = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (head!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            p = head;</span><br><span class="line">            head = head-&gt;next;</span><br><span class="line">            p-&gt;next = pre;</span><br><span class="line">            pre = p;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (pre != <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            V.push_back(pre-&gt;val);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; pre-&gt;val &lt;&lt; <span class="string">&apos; &apos;</span>;</span><br><span class="line">            pre = pre-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> V;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    freopen(<span class="string">&quot;3.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    init();</span><br><span class="line">    Solution a;</span><br><span class="line">    a.printListFromTailToHead(L.next);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><strong>&#x6D4B;&#x8BD5;&#x6570;&#x636E;</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Test1&#xFF1A;</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">6</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">Test2&#xFF1A;</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">67</span> <span class="number">0</span> <span class="number">24</span> <span class="number">58</span></span><br><span class="line"></span><br><span class="line">Test3&#xFF1A;</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x67E5;&#x627E;">&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x67E5;&#x627E;</h1><ol type="1"><li>&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x66B4;&#x529B;&#x641C;&#x7D22;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x6CE8;&#x610F;&#x526A;&#x679D;&#x3002;</li><li>&#x7559;&#x610F;&#x5230;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x884C;&#xFF0C;&#x90FD;&#x662F;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x9012;&#x589E;&#x6392;&#x5E8F;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x5217;&#xFF0C;&#x4E5F;&#x662F;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x9012;&#x589E;&#x3002;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4ECE;&#x6700;&#x5DE6;&#x4E0B;&#x8FDB;&#x884C;&#x641C;&#x7D22;&#xFF1A;&#x82E5;&#x5F53;&#x524D;&#x6570;&gt;target&#xFF0C;&#x5411;&#x4E0A;&#x3002;&#x53CD;&#x4E4B;&#xFF0C;&#x82E5;&#x5F53;&#x524D;&#x6570;&lt;target&#xFF0C;&#x5411;&#x53F3;&#x3002;</li></ol><p>&#x66B4;&#x529B;&#x641C;&#x7D22;+&#x526A;&#x679D;</p><p>&#x8FD9;&#x91CC;&#x6CA1;&#x7528;&#x5230;&#x6BCF;&#x5217;&#x90FD;&#x662F;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x7684;&#x6761;&#x4EF6;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x5F00;&#x59CB;&#x5199;&#x7684;&#xFF0C;&#x5199;&#x7684;&#x4E0D;&#x597D;&#x3002; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">array</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> hang = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="keyword">int</span> lie = <span class="built_in">array</span>[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hang; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lie; j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i][j] == target)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">array</span>[i][j] &gt; target)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p><p>&#x66F4;&#x597D;&#x7684;&#x4EE3;&#x7801;&#xFF1A;&#x4ECE;&#x5DE6;&#x4E0B;&#x5F00;&#x59CB;&#x641C;&#x7D22;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; <span class="built_in">array</span>)</span> </span>{</span><br><span class="line">        <span class="comment">// array&#x662F;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#xFF0C;&#x8FD9;&#x91CC;&#x6CA1;&#x505A;&#x5224;&#x7A7A;&#x64CD;&#x4F5C;</span></span><br><span class="line">        <span class="keyword">int</span> rows = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="keyword">int</span> cols = <span class="built_in">array</span>[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">int</span> i=rows<span class="number">-1</span>,j=<span class="number">0</span>;<span class="comment">//&#x5DE6;&#x4E0B;&#x89D2;&#x5143;&#x7D20;&#x5750;&#x6807;</span></span><br><span class="line">        <span class="keyword">while</span>(i&gt;=<span class="number">0</span> &amp;&amp; j&lt;cols){<span class="comment">//&#x4F7F;&#x5176;&#x4E0D;&#x8D85;&#x51FA;&#x6570;&#x7EC4;&#x8303;&#x56F4;</span></span><br><span class="line">            <span class="keyword">if</span>(target&lt;<span class="built_in">array</span>[i][j])</span><br><span class="line">                i--;<span class="comment">//&#x67E5;&#x627E;&#x7684;&#x5143;&#x7D20;&#x8F83;&#x5C11;&#xFF0C;&#x5F80;&#x4E0A;&#x627E;</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target&gt;<span class="built_in">array</span>[i][j])</span><br><span class="line">                j++;<span class="comment">//&#x67E5;&#x627E;&#x5143;&#x7D20;&#x8F83;&#x5927;&#xFF0C;&#x5F80;&#x53F3;&#x627E;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//&#x627E;&#x5230;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x7528;&#x4E24;&#x4E2A;&#x6808;&#x5B9E;&#x73B0;&#x961F;&#x5217;">&#x7528;&#x4E24;&#x4E2A;&#x6808;&#x5B9E;&#x73B0;&#x961F;&#x5217;</h1><p>&#x57FA;&#x7840;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x4E24;&#x4E2A;&#x6808;&#x7684;&#x7A7A;&#x95F4;&#x90FD;&#x4E0D;&#x4F1A;&#x7206;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        stack1.push(node);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (!stack2.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> temp = stack2.top();</span><br><span class="line">            stack2.pop();</span><br><span class="line">            <span class="keyword">return</span> temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (!stack1.empty())</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> temp = stack1.top();</span><br><span class="line">                stack1.pop();</span><br><span class="line">                stack2.push(temp);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">true</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> temp = stack2.top();</span><br><span class="line">                stack2.pop();</span><br><span class="line">                <span class="keyword">return</span> temp;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack1;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack2;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x65CB;&#x8F6C;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x5B57;">&#x65CB;&#x8F6C;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x5B57;</h1><p>&#x627E;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x524D;&#x4E00;&#x4E2A;&#x3010;&gt;&#x3011;&#x540E;&#x4E00;&#x4E2A;&#x7684;&#x6570;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minNumberInRotateArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; rotateArray)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (rotateArray.size()==<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rotateArray.size()<span class="number">-1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (rotateArray[i] &gt; rotateArray[i + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> rotateArray[i + <span class="number">1</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;">&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;</h1><p>&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;&#xFF1A;0 1 1 2 3....</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> res_pre = <span class="number">0</span>, res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            res = res + res_pre;</span><br><span class="line">            res_pre = res - res_pre;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x8DF3;&#x53F0;&#x9636;">&#x8DF3;&#x53F0;&#x9636;</h1><h2 id="&#x7EC4;&#x5408;">&#x7EC4;&#x5408;</h2><p>&#x5229;&#x7528;&#x7EC4;&#x5408;&#x53BB;&#x505A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">zuhe</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        {</span><br><span class="line">            res *= (a - i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= b; i++)</span><br><span class="line">        {</span><br><span class="line">            res /= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jumpFloor</span><span class="params">(<span class="keyword">int</span> number)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> min = number / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (number % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">            min++;<span class="comment">//&#x6700;&#x5C11;&#x7684;&#x6B65;&#x6570;</span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = min; i &lt; number; i++)</span><br><span class="line">        {</span><br><span class="line">            res += zuhe(i, number-i);</span><br><span class="line">        }</span><br><span class="line">        res ++;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="fib&#x5E8F;&#x5217;">Fib&#x5E8F;&#x5217;</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">JumpFloor</span><span class="params">(<span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">int</span> pre2 = <span class="number">1</span>, pre1 = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        result = pre2 + pre1;</span><br><span class="line">        pre2 = pre1;</span><br><span class="line">        pre1 = result;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x53D8;&#x6001;&#x8DF3;&#x53F0;&#x9636;">&#x53D8;&#x6001;&#x8DF3;&#x53F0;&#x9636;</h1><h2 id="&#x7EC4;&#x5408;-1">&#x7EC4;&#x5408;</h2><p>&#x7EC4;&#x5408;&#xFF0C;&#x6839;&#x636E;1~number-1&#x53F0;&#x9636;&#x4E2D;&#xFF0C;&#x843D;&#x811A;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x6765;&#x9009;&#x62E9;&#x7EC4;&#x5408;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">zuhe</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">1</span>;<span class="comment">//&#x5FC5;&#x987B;&#x7528; long long&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x6EA2;&#x51FA;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        {</span><br><span class="line">            res *= (a - i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= b; i++)</span><br><span class="line">        {</span><br><span class="line">            res /= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jumpFloorII</span><span class="params">(<span class="keyword">int</span> number)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number<span class="number">-1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            res += zuhe(number<span class="number">-1</span>, i);</span><br><span class="line">        }</span><br><span class="line">        res++;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x52A8;&#x6001;&#x89C4;&#x5212;">&#x52A8;&#x6001;&#x89C4;&#x5212;</h2><h2 id="&#x6570;&#x5B66;&#x63A8;&#x5BFC;">&#x6570;&#x5B66;&#x63A8;&#x5BFC;</h2><p>&#x8DF3;&#x4E0A; n-1 &#x7EA7;&#x53F0;&#x9636;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE; n-2 &#x7EA7;&#x8DF3; 1 &#x7EA7;&#x4E0A;&#x53BB;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE; n-3 &#x7EA7;&#x8DF3; 2 &#x7EA7;&#x4E0A;&#x53BB;...&#xFF0C;&#x90A3;&#x4E48;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n-1) = f(n-2) + f(n-3) + ... + f(0)</span><br></pre></td></tr></table></figure><p>&#x540C;&#x6837;&#xFF0C;&#x8DF3;&#x4E0A; n &#x7EA7;&#x53F0;&#x9636;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE; n-1 &#x7EA7;&#x8DF3; 1 &#x7EA7;&#x4E0A;&#x53BB;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE; n-2 &#x7EA7;&#x8DF3; 2 &#x7EA7;&#x4E0A;&#x53BB;... &#xFF0C;&#x90A3;&#x4E48;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n) = f(n-1) + f(n-2) + ... + f(0)</span><br></pre></td></tr></table></figure><p>&#x7EFC;&#x4E0A;&#x53EF;&#x5F97;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n) - f(n-1) = f(n-1)</span><br></pre></td></tr></table></figure><p>&#x5373;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(n) = 2*f(n-1)</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5; f(n) &#x662F;&#x4E00;&#x4E2A;&#x7B49;&#x6BD4;&#x6570;&#x5217;&#x3002;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">JumpFloorII</span><span class="params">(<span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>) Math.<span class="built_in">pow</span>(<span class="number">2</span>, target - <span class="number">1</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x77E9;&#x5F62;&#x8986;&#x76D6;">&#x77E9;&#x5F62;&#x8986;&#x76D6;</h1><h2 id="&#x7EC4;&#x5408;-2">&#x7EC4;&#x5408;</h2><p>&#x548C;&#x8DF3;&#x683C;&#x5B50;&#x7C7B;&#x4F3C;&#xFF0C;&#x6839;&#x636E;&#x6A2A;&#x7740;&#x7684;&#x7EC4;&#x5408;&#x6765;&#x6C42;&#x3002;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">zuhe</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        {</span><br><span class="line">            res *= (a - i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= b; i++)</span><br><span class="line">        {</span><br><span class="line">            res /= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">rectCover</span><span class="params">(<span class="keyword">int</span> number)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (number == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//&#x548C;&#x8DF3;&#x53F0;&#x9636;&#x7C7B;&#x4F3C;&#xFF1F;</span></span><br><span class="line">        <span class="keyword">int</span> temp = number / <span class="number">2</span>;<span class="comment">//&#x6700;&#x591A;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x6A2A;&#x7740;&#x7684;&#x3002;</span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= temp; i++)</span><br><span class="line">        {</span><br><span class="line">            res += zuhe(number-i, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="fib&#x5E8F;&#x5217;-1">Fib&#x5E8F;&#x5217;</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">RectCover</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">int</span> pre2 = <span class="number">1</span>, pre1 = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= n; i++) {</span><br><span class="line">        result = pre2 + pre1;</span><br><span class="line">        pre2 = pre1;</span><br><span class="line">        pre1 = result;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x8FDB;&#x5236;&#x4E2D;1&#x7684;&#x4E2A;&#x6570;">&#x4E8C;&#x8FDB;&#x5236;&#x4E2D;1&#x7684;&#x4E2A;&#x6570;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span>  <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (n&lt;<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            n = n &amp; <span class="number">0x7FFFFFFF</span>;               <span class="comment">//&#x90E8;&#x5206;&#x7F16;&#x8BD1;&#x5668;&#xFF0C;&#x5BF9;&#x4E8E;&#x590D;&#x6570;&#x7684;&#x53F3;&#x79FB;&#xFF0C;&#x662F;&#x8865;1&#x7684;&#x3002;</span></span><br><span class="line">            res++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (n!=<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            res += (n &amp; <span class="number">1</span>);</span><br><span class="line">            n = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x503C;&#x7684;&#x6574;&#x6570;&#x6B21;&#x65B9;">&#x6570;&#x503C;&#x7684;&#x6574;&#x6570;&#x6B21;&#x65B9;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">Power</span><span class="params">(<span class="keyword">double</span> base, <span class="keyword">int</span> exponent)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">double</span> res=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (exponent&gt;=<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; exponent; i++)</span><br><span class="line">            {</span><br><span class="line">                res *= base;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (exponent &lt; <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            exponent = -exponent;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; exponent; i++)</span><br><span class="line">            {</span><br><span class="line">                res /= base;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x8C03;&#x6574;&#x6570;&#x7EC4;&#x987A;&#x5E8F;&#x4F7F;&#x5947;&#x6570;&#x4F4D;&#x4E8E;&#x5076;&#x6570;&#x524D;&#x9762;">&#x8C03;&#x6574;&#x6570;&#x7EC4;&#x987A;&#x5E8F;&#x4F7F;&#x5947;&#x6570;&#x4F4D;&#x4E8E;&#x5076;&#x6570;&#x524D;&#x9762;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;&#x7C7B;&#x4F3C;&#x4E8E;&#x5192;&#x6CE1;&#x6392;&#x5E8F;">&#x89E3;&#x6CD5;&#x4E00;&#xFF1A;&#x7C7B;&#x4F3C;&#x4E8E;&#x5192;&#x6CE1;&#x6392;&#x5E8F;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">reOrderArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;<span class="built_in">array</span>)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">array</span>.size(); i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="built_in">array</span>.size()<span class="number">-1</span>; j &gt; i; j--)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">array</span>[j<span class="number">-1</span>] % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; <span class="built_in">array</span>[j] % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">                        swap(<span class="built_in">array</span>[j<span class="number">-1</span>], <span class="built_in">array</span>[j]);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;&#x5148;&#x4FDD;&#x5B58;&#x5947;&#x6570;&#x518D;&#x4FDD;&#x5B58;&#x5076;&#x6570;">&#x89E3;&#x6CD5;&#x4E8C;&#xFF1A;&#x5148;&#x4FDD;&#x5B58;&#x5947;&#x6570;&#xFF0C;&#x518D;&#x4FDD;&#x5B58;&#x5076;&#x6570;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">reOrderArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;<span class="built_in">array</span>)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">array</span>.size(); i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i] % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">                    temp.push_back(<span class="built_in">array</span>[i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">array</span>.size(); i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">array</span>[i] % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                    temp.push_back(<span class="built_in">array</span>[i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">array</span> = temp;</span><br><span class="line">        }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x94FE;&#x8868;&#x4E2D;&#x5012;&#x6570;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;">&#x94FE;&#x8868;&#x4E2D;&#x5012;&#x6570;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;</h1><p>&#x5FEB;&#x6162;&#x6307;&#x9488;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class Solution {</span><br><span class="line">public:</span><br><span class="line">    ListNode* FindKthToTail(ListNode* pListHead, unsigned int k) </span><br><span class="line">    {</span><br><span class="line">        //&#x4E24;&#x4E2A;&#x6307;&#x9488;</span><br><span class="line">        ListNode* p1 = pListHead, *p2 = NULL;</span><br><span class="line">        for (int i = 0; i &lt; k; i++)</span><br><span class="line">            if (p1 != NULL)</span><br><span class="line">                p1 = p1-&gt;next;</span><br><span class="line">            else</span><br><span class="line">                return NULL;</span><br><span class="line">        p2 = pListHead;</span><br><span class="line">        while (p1!=NULL)</span><br><span class="line">        {</span><br><span class="line">            p1 = p1-&gt;next;</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        return p2;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x53CD;&#x8F6C;&#x94FE;&#x8868;">&#x53CD;&#x8F6C;&#x94FE;&#x8868;</h1><p>&#x8FD9;&#x91CC;&#xFF0C;pre&#x76F8;&#x5F53;&#x4E8E;&#x8F85;&#x52A9;&#x7528;&#x7684;&#x5934;&#x7ED3;&#x70B9;&#x3002;</p><p>&#x4F7F;&#x7528;&#x5934;&#x63D2;&#x6CD5;&#x53CD;&#x8F6C;&#x94FE;&#x8868;&#x3002;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Solution {</span><br><span class="line">    //&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A;&#x9898;&#x662F;&#x6CA1;&#x6709;&#x94FE;&#x8868;&#x7684;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x3002;&#x5373;&#x662F;&#x6574;&#x4E2A;&#x94FE;&#x8868;&#x90FD;&#x8981;&#x9006;&#x7F6E;&#x3002;</span><br><span class="line">    //&#x5E26;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x94FE;&#x8868;&#xFF0C;&#x5934;&#x7ED3;&#x70B9;&#x5F80;&#x5F80;&#x5B58;&#x50A8;&#x94FE;&#x8868;&#x7684;&#x957F;&#x5EA6;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x4FE1;&#x606F;&#x3002;&#x5E26;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x94FE;&#x8868;&#x9006;&#x7F6E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5934;&#x7ED3;&#x70B9;&#x4E0D;&#x52A8;&#x3002;</span><br><span class="line">public:</span><br><span class="line">    ListNode* ReverseList(ListNode* pHead) </span><br><span class="line">    {</span><br><span class="line">        ListNode *pre = NULL, *next = NULL;</span><br><span class="line">        while (pHead!=NULL)//&#x5934;&#x63D2;&#x6CD5;</span><br><span class="line">        {</span><br><span class="line">            next = pHead-&gt;next;</span><br><span class="line">            pHead-&gt;next = pre;</span><br><span class="line">            pre = pHead;</span><br><span class="line">            pHead = next;</span><br><span class="line">        }</span><br><span class="line">        return pre;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x94FE;&#x8868;">&#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x94FE;&#x8868;</h1><h2 id="&#x975E;&#x9012;&#x5F52;&#x5FAA;&#x73AF;&#x7248;&#x672C;">&#x975E;&#x9012;&#x5F52;&#xFF0C;&#x5FAA;&#x73AF;&#x7248;&#x672C;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        ListNode *res = <span class="literal">NULL</span>, *p = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (pHead1 != <span class="literal">NULL</span> &amp;&amp; pHead2 != <span class="literal">NULL</span>)<span class="comment">//&#x786E;&#x5B9A;&#x5934;</span></span><br><span class="line">            <span class="keyword">if</span> (pHead1-&gt;val &lt; pHead2-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                res = pHead1;</span><br><span class="line">                pHead1 = pHead1-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                res = pHead2;</span><br><span class="line">                pHead2 = pHead2-&gt;next;</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pHead1 != <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = pHead1;</span><br><span class="line">            pHead1 = pHead1-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pHead2 != <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = pHead2;</span><br><span class="line">            pHead2 = pHead2-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        p = res;</span><br><span class="line">        <span class="keyword">while</span> (pHead1!=<span class="literal">NULL</span>&amp;&amp;pHead2!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (pHead1-&gt;val &gt; pHead2-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead2;</span><br><span class="line">                pHead2 = pHead2-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead1;</span><br><span class="line">                pHead1 = pHead1-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (pHead1 != <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next = pHead1;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pHead2 != <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next = pHead2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x9012;&#x5F52;&#x65B9;&#x6CD5;">&#x9012;&#x5F52;&#x65B9;&#x6CD5;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ListNode* <span class="title">Merge2</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (pHead1==<span class="literal">NULL</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> pHead2;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (pHead2==<span class="literal">NULL</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> pHead1;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (pHead1-&gt;val &lt; pHead2-&gt;val)</span><br><span class="line">    {</span><br><span class="line">        pHead1-&gt;next = Merge2(pHead1-&gt;next, pHead2);</span><br><span class="line">        <span class="keyword">return</span> pHead1;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        pHead2-&gt;next = Merge2(pHead1, pHead2-&gt;next);</span><br><span class="line">        <span class="keyword">return</span> pHead2;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x65B9;&#x6CD5;">&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x65B9;&#x6CD5;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="function">ListNode <span class="title">L</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="comment">//&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x7684;&#x5934;&#x7ED3;&#x70B9;</span></span><br><span class="line">        ListNode *p = &amp;L;</span><br><span class="line">        <span class="keyword">if</span> (pHead1 == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> pHead2;</span><br><span class="line">        <span class="keyword">if</span> (pHead2 == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> pHead1;</span><br><span class="line">        <span class="keyword">while</span> (pHead1!=<span class="literal">NULL</span>&amp;&amp;pHead2!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (pHead1-&gt;val &lt;= pHead2-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead1;</span><br><span class="line">                pHead1 = pHead1-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                p-&gt;next = pHead2;</span><br><span class="line">                pHead2 = pHead2-&gt;next;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (pHead1 == <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next=pHead2;</span><br><span class="line">        <span class="keyword">if</span> (pHead2 == <span class="literal">NULL</span>)</span><br><span class="line">            p-&gt;next = pHead1;</span><br><span class="line">        <span class="keyword">return</span> L.next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6811;&#x7684;&#x5B50;&#x7ED3;&#x6784;">&#x6811;&#x7684;&#x5B50;&#x7ED3;&#x6784;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">HasSubtree</span><span class="params">(TreeNode* pRoot1, TreeNode* pRoot2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="keyword">bool</span> res = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (pRoot1 == <span class="literal">NULL</span> || pRoot2 == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (pRoot1-&gt;val == pRoot2-&gt;val)</span><br><span class="line">                res = judge(pRoot1, pRoot2);</span><br><span class="line">            <span class="keyword">if</span> (!res)</span><br><span class="line">                res = HasSubtree(pRoot1-&gt;left, pRoot2);<span class="comment">//&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x641C;&#x5DE6;&#x5B50;&#x6811;</span></span><br><span class="line">            <span class="keyword">if</span> (!res)</span><br><span class="line">                res = HasSubtree(pRoot1-&gt;right, pRoot2);<span class="comment">//&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x641C;&#x53F3;&#x5B50;&#x6811;</span></span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">    </span><br><span class="line">        }</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(TreeNode* p1, TreeNode* p2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">            <span class="keyword">if</span> (p2 == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//T2&#x5DF2;&#x7ECF;&#x904D;&#x5386;&#x5B8C;&#x5E76;&#x4E14;&#x90FD;&#x80FD;&#x5BF9;&#x7684;&#x4E0A;&#xFF0C;&#x8FD4;&#x56DE;true</span></span><br><span class="line">            <span class="keyword">if</span> (p1 == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//T2&#x8FD8;&#x6CA1;&#x6709;&#x904D;&#x5386;&#x5B8C;&#xFF0C;&#x4F46;&#x662F;T1&#x5DF2;&#x7ECF;&#x6CA1;&#x4E86;&#xFF0C;&#x8FD4;&#x56DE;false</span></span><br><span class="line">            <span class="keyword">if</span> (p1-&gt;val != p2-&gt;val)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//&#x503C;&#x5BF9;&#x4E0D;&#x4E0A;&#xFF0C;&#x8FD4;&#x56DE;false&#x3002;</span></span><br><span class="line">            <span class="keyword">return</span> judge(p1-&gt;left, p2-&gt;left) &amp;&amp; judge(p1-&gt;right, p2-&gt;right);</span><br><span class="line">        }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x6D4B;&#x8BD5;&#xFF0C;&#x6211;&#x7684;&#x6784;&#x5EFA;&#x6811;&#x7684;&#x4EE3;&#x7801;&#x4E3A;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">    struct TreeNode {</span><br><span class="line">        int val;</span><br><span class="line">        struct TreeNode *left;</span><br><span class="line">        struct TreeNode *right;</span><br><span class="line">        TreeNode(int x) :</span><br><span class="line">                val(x), left(NULL), right(NULL) {</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">    </span><br><span class="line">    TreeNode* T;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    queue&lt;TreeNode **&gt;q;</span><br><span class="line">    void init(TreeNode*&amp; T)</span><br><span class="line">    {</span><br><span class="line">        int n;</span><br><span class="line">        string temp;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        if (n == 0)</span><br><span class="line">            T = NULL;</span><br><span class="line">        TreeNode **ptr;</span><br><span class="line">        q.push(&amp;T);</span><br><span class="line">        for (int i = 0; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            ptr = q.front();</span><br><span class="line">            q.pop();</span><br><span class="line">            cin &gt;&gt; temp;</span><br><span class="line">            if (temp != &quot;null&quot;)</span><br><span class="line">            {</span><br><span class="line">                TreeNode *node = (TreeNode*)malloc(sizeof(TreeNode));</span><br><span class="line">                node-&gt;val = stoi(temp);</span><br><span class="line">                node-&gt;left = NULL;</span><br><span class="line">                node-&gt;right = NULL;</span><br><span class="line">                *ptr = node;</span><br><span class="line">            }</span><br><span class="line">            q.push(&amp;(*ptr)-&gt;left);</span><br><span class="line">            q.push(&amp;(*ptr)-&gt;right);</span><br><span class="line">        }</span><br><span class="line">        while (!q.empty())</span><br><span class="line">        {</span><br><span class="line">            q.pop();</span><br><span class="line">        }</span><br><span class="line">        return;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x5165;&#x7684;&#x65F6;&#x5019;&#x6309;&#x5C42;&#x8F93;&#x5165;&#xFF0C;&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x662F;&#x6709;bug&#x7684;&#xFF0C;&#x4E0D;&#x80FD;&#x751F;&#x6210;&#x4EFB;&#x610F;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF01;&#x60F3;&#x8981;&#x5B8C;&#x5168;&#x5E8F;&#x5217;&#x5316;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x8BF7;&#x770B;&#x540E;&#x9762;&#x7684;&#x5E8F;&#x5217;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x955C;&#x50CF;">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x955C;&#x50CF;</h1><p>&#x6811;&#x7684;&#x904D;&#x5386;&#xFF0C;&#x9012;&#x5F52;&#x5373;&#x53EF;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Mirror</span><span class="params">(TreeNode *pRoot)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        Mirror(pRoot-&gt;left);</span><br><span class="line">        Mirror(pRoot-&gt;right);</span><br><span class="line">        swap(pRoot-&gt;left, pRoot-&gt;right);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5305;&#x542B;min&#x51FD;&#x6570;&#x7684;&#x6808;">&#x5305;&#x542B;min&#x51FD;&#x6570;&#x7684;&#x6808;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;&#x5F88;&#x632B;&#x7684;&#x89E3;&#x6CD5;">&#x89E3;&#x6CD5;&#x4E00;&#xFF08;&#x5F88;&#x632B;&#x7684;&#x89E3;&#x6CD5;&#xFF09;</h2><p>&#x601D;&#x8DEF;&#xFF1A;&#x5229;&#x7528;Map&#x7684;&#x81EA;&#x52A8;&#x6392;&#x5E8F;&#x7279;&#x6027;&#xFF0C;&#x5F88;&#x632B;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class Solution {</span><br><span class="line">public:</span><br><span class="line">    stack&lt;int&gt; s;</span><br><span class="line">    map&lt;int, int&gt;m;</span><br><span class="line">    //int minn=0x7FFFFFFF;</span><br><span class="line">    void push(int value) </span><br><span class="line">    {</span><br><span class="line">        s.push(value);</span><br><span class="line">        if (!m.count(value))</span><br><span class="line">            m[value] = 1;</span><br><span class="line">        else</span><br><span class="line">            m[value]++;</span><br><span class="line">    }</span><br><span class="line">    void pop()</span><br><span class="line">    {</span><br><span class="line">        int k = s.top();</span><br><span class="line">        s.pop();</span><br><span class="line">        if (--m[k] == 0)</span><br><span class="line">            m.erase(k);</span><br><span class="line">    }</span><br><span class="line">    int top() </span><br><span class="line">    {</span><br><span class="line">        return s.top();</span><br><span class="line">    }</span><br><span class="line">    int min() </span><br><span class="line">    {</span><br><span class="line">        return m.begin()-&gt;first;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x5229;&#x7528;&#x6700;&#x5C0F;&#x5143;&#x7D20;&#x6808;">&#x5229;&#x7528;&#x6700;&#x5C0F;&#x5143;&#x7D20;&#x6808;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">//&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#x3002;&#x5229;&#x7528;&#x8F85;&#x52A9;&#x6808;</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x538B;&#x6808;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;A&#x6808;&#x7684;&#x538B;&#x5165;&#x6BD4;B&#x6808;&#x7684;&#x5927;&#xFF0C; &#x5219;B&#x6808;&#x4E0D;&#x538B;&#xFF0C;&#x5982;&#x679C;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#xFF0C;&#x5219;AB&#x6808;&#x540C;&#x65F6;&#x538B;&#x5165;/</span></span><br><span class="line"><span class="comment">&#x5728;&#x51FA;&#x6808;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;AB&#x6808;&#x9876;&#x5143;&#x7D20;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x5219;A&#x51FA;B&#x4E0D;&#x51FA;&#x3002;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s1, s2;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        s1.push(value);</span><br><span class="line">        <span class="keyword">if</span> (s2.empty())</span><br><span class="line">            s2.push(value);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            t = s2.top();</span><br><span class="line">            <span class="keyword">if</span> (value &lt;= t)</span><br><span class="line">                s2.push(value);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> t1 = s1.top(), t2 = s2.top();</span><br><span class="line">        <span class="keyword">if</span> (t1 == t2)</span><br><span class="line">        {</span><br><span class="line">            s1.pop(); s2.pop();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            s1.pop();</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">return</span> s1.top();</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">return</span> s2.top();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x987A;&#x65F6;&#x9488;&#x6253;&#x5370;&#x77E9;&#x9635;">&#x987A;&#x65F6;&#x9488;&#x6253;&#x5370;&#x77E9;&#x9635;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x4E0D;&#x662F;&#x7279;&#x522B;&#x597D;&#xFF0C;&#x5229;&#x7528;&#x6A21;&#x62DF;&#x6765;&#x505A;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; printMatrix(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; matrix) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, a = <span class="number">0</span>, cnt = <span class="number">0</span>, total = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        total *= matrix.size();</span><br><span class="line">        <span class="keyword">if</span> (total != <span class="number">0</span>)</span><br><span class="line">            total *= matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">while</span> (cnt&lt;total)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (;  j&lt; matrix[i].size()-a; j++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">            j--, i++;</span><br><span class="line">            <span class="keyword">for</span> (; i &lt; matrix.size()-a; i++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">            i--; j--;</span><br><span class="line">            <span class="keyword">for</span> (; j &gt;=a; j--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">            j++; i--; a++;</span><br><span class="line">            <span class="keyword">for</span> ( ; i &gt;a ; i--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt;= total)</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;">&#x89E3;&#x6CD5;&#x4E8C;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">/*&#x89E3;&#x9898;&#x601D;&#x8DEF;&#xFF1A;&#x987A;&#x65F6;&#x9488;&#x6253;&#x5370;&#x5C31;&#x662F;&#x6309;&#x5708;&#x6570;&#x5FAA;&#x73AF;&#x6253;&#x5370;&#xFF0C;&#x4E00;&#x5708;&#x5305;&#x542B;&#x4E24;&#x884C;&#x6216;&#x8005;&#x4E24;&#x5217;&#xFF0C;</span></span><br><span class="line"><span class="comment">&#x5728;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x51FA;&#x73B0;&#x67D0;&#x4E00;&#x5708;&#x4E2D;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x884C;&#xFF0C;</span></span><br><span class="line"><span class="comment">&#x8981;&#x5224;&#x65AD;&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x6253;&#x5370;&#x548C;&#x4ECE;&#x53F3;&#x5411;&#x5DE6;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x4F1A;&#x51FA;&#x73B0;&#x91CD;&#x590D;&#x6253;&#x5370;&#xFF0C;</span></span><br><span class="line"><span class="comment">&#x540C;&#x6837;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x5217;&#x65F6;&#xFF0C;&#x8981;&#x5224;&#x65AD;&#x4ECE;&#x4E0A;&#x5411;&#x4E0B;&#x6253;&#x5370;&#x548C;&#x4ECE;&#x4E0B;&#x5411;&#x4E0A;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x4F1A;&#x51FA;&#x73B0;&#x91CD;&#x590D;&#x6253;&#x5370;&#x7684;&#x60C5;&#x51B5;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; printMatrix(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; matrix) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">int</span> row = matrix.size();</span><br><span class="line">        <span class="keyword">if</span> (row == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">int</span> collor = matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">int</span> circle = ((row &lt; collor ? row : collor) - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;<span class="comment">//&#x5708;&#x6570;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; circle; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x6253;&#x5370;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; collor-i; j++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[i][j]);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//&#x4ECE;&#x4E0A;&#x5F80;&#x4E0B;&#x7684;&#x6570;&#x636E;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = i+<span class="number">1</span>; k &lt; row- i; k++)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[k][collor - <span class="number">1</span> - i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x4F1A;&#x91CD;&#x590D;&#x6253;&#x5370;(&#x4ECE;&#x53F3;&#x5411;&#x5DE6;&#x6253;&#x5370;&#xFF09;</span></span><br><span class="line">            <span class="comment">//row-i-1!=i&#x662F;&#x9632;&#x6B62;&#x67D0;&#x4E00;&#x884C;&#x66FE;&#x7ECF;&#x4ECE;&#x5DE6;</span></span><br><span class="line">            <span class="comment">//&#x5230;&#x53F3;&#x88AB;&#x8F93;&#x51FA;&#xFF0C;&#x53C8;&#x5728;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x65F6;&#x88AB;&#x8F93;&#x51FA;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> m = collor-i<span class="number">-2</span>; (m&gt;=i)&amp;&amp;(row-i<span class="number">-1</span>!=i); m--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[row - i - <span class="number">1</span>][m]);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> n = row-i<span class="number">-2</span>; (n&gt;i)&amp;&amp;(collor-i<span class="number">-1</span>!=i); n--)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(matrix[n][i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6808;&#x7684;&#x538B;&#x5165;&#x5F39;&#x51FA;&#x5E8F;&#x5217;">&#x6808;&#x7684;&#x538B;&#x5165;&#x3001;&#x5F39;&#x51FA;&#x5E8F;&#x5217;</h1><p>&#x6DFB;&#x52A0;&#x8F85;&#x52A9;&#x6808;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsPopOrder</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pushV, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; popV)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pushV.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;s; </span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pushV.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            s.push(pushV[i]);</span><br><span class="line">            <span class="keyword">while</span> (!s.empty()&amp;&amp;s.top() == popV[j])</span><br><span class="line">            {</span><br><span class="line">                s.pop();</span><br><span class="line">                j++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> s.empty();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4ECE;&#x4E0A;&#x5F80;&#x4E0B;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;">&#x4ECE;&#x4E0A;&#x5F80;&#x4E0B;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x5C42;&#x6B21;&#x904D;&#x5386;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; PrintFromTopToBottom(TreeNode* root) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">queue</span>&lt;TreeNode*&gt; q;</span><br><span class="line">        TreeNode* p;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> v;</span><br><span class="line">        q.push(root);</span><br><span class="line">        <span class="keyword">while</span> (!q.empty())</span><br><span class="line">        {</span><br><span class="line">            p = q.front(); q.pop();</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                q.push(p-&gt;left);</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                q.push(p-&gt;right);</span><br><span class="line">            v.push_back(p-&gt;val);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x4E2D;&#x548C;&#x4E3A;&#x67D0;&#x4E00;&#x503C;&#x7684;&#x8DEF;&#x5F84;">&#x4E8C;&#x53C9;&#x6811;&#x4E2D;&#x548C;&#x4E3A;&#x67D0;&#x4E00;&#x503C;&#x7684;&#x8DEF;&#x5F84;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; temp;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode *root,<span class="keyword">int</span> expectNumber)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        temp.push_back(root-&gt;val);</span><br><span class="line">        <span class="keyword">if</span> ((expectNumber == root-&gt;val)&amp;&amp;root-&gt;left == <span class="literal">NULL</span> &amp;&amp; root-&gt;right == <span class="literal">NULL</span>)</span><br><span class="line">            res.push_back(temp);</span><br><span class="line">        <span class="keyword">if</span> (root-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">            dfs(root-&gt;left, (expectNumber - root-&gt;val));</span><br><span class="line">        <span class="keyword">if</span> (root-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">            dfs(root-&gt;right, expectNumber - root-&gt;val);</span><br><span class="line">        temp.pop_back();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; FindPath(TreeNode* root, <span class="keyword">int</span> expectNumber) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;<span class="comment">//&#x8FB9;&#x754C;&#x6761;&#x4EF6;</span></span><br><span class="line">        dfs(root, expectNumber);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x590D;&#x6742;&#x94FE;&#x8868;&#x7684;&#x590D;&#x5236;">&#x590D;&#x6742;&#x94FE;&#x8868;&#x7684;&#x590D;&#x5236;</h1><p>&#x505A;&#x6CD5;&#xFF1A;</p><ol type="1"><li>&#x590D;&#x5236;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5982;&#xFF1A;&#x590D;&#x5236;&#x8282;&#x70B9;A&#x5F97;&#x5230;A1&#xFF0C;&#x5C06;A1&#x63D2;&#x5165;&#x8282;&#x70B9;A&#x540E;&#x9762;</li><li>&#x904D;&#x5386;&#x94FE;&#x8868;&#xFF0C;<code>A1-&gt;random = A-&gt;random-&gt;next;</code>&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x662F;&#x7ED9;&#x590D;&#x5236;&#x8282;&#x70B9;&#x7684;random&#x8D4B;&#x503C;&#xFF0C;&#x6574;&#x4E2A;&#x590D;&#x5236;&#x94FE;&#x8868;&#x91CC;&#xFF0C;&#x4E0D;&#x80FD;&#x51FA;&#x73B0;&#x539F;&#x6765;&#x94FE;&#x8868;&#x7684;&#x8282;&#x70B9;&#x3002;</li><li>&#x5C06;&#x94FE;&#x8868;&#x62C6;&#x5206;&#x6210;&#x539F;&#x94FE;&#x8868;&#x548C;&#x590D;&#x5236;&#x540E;&#x7684;&#x94FE;&#x8868;&#x3002;</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">RandomListNode* <span class="title">Clone</span><span class="params">(RandomListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (!pHead)<span class="comment">//&#x82E5;&#x4E3A;&#x7A7A;,&#x8FD4;&#x56DE;NULL</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        RandomListNode* currNode=pHead,* newNode;<span class="comment">//&#x8868;&#x793A;&#x5F53;&#x524D;&#x7684;&#x8282;&#x70B9;</span></span><br><span class="line">        <span class="keyword">while</span> (currNode!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            newNode= (RandomListNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(RandomListNode));</span><br><span class="line">            <span class="comment">//&#x590D;&#x5236;&#x8282;&#x70B9;&#x4FE1;&#x606F;</span></span><br><span class="line">            newNode-&gt;label = currNode-&gt;label;</span><br><span class="line">            newNode-&gt;next = currNode-&gt;next;</span><br><span class="line">            newNode-&gt;random = currNode-&gt;random;</span><br><span class="line">            <span class="comment">//&#x63D2;&#x5230;&#x540E;&#x9762;</span></span><br><span class="line">            currNode-&gt;next = newNode;</span><br><span class="line">            currNode = newNode-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        currNode = pHead;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//&#x7B2C;&#x4E8C;&#x6B21;&#x904D;&#x5386;</span></span><br><span class="line">        <span class="keyword">while</span> (currNode!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            newNode = currNode-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(currNode-&gt;random!=<span class="literal">NULL</span>)</span><br><span class="line">                newNode-&gt;random = currNode-&gt;random-&gt;next;</span><br><span class="line">            currNode = currNode-&gt;next-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x62C6;&#x5206;</span></span><br><span class="line">        RandomListNode* pCloneHead = pHead-&gt;next,* temp;</span><br><span class="line">        currNode = pHead;</span><br><span class="line">        <span class="keyword">while</span> (currNode-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            temp = currNode-&gt;next;</span><br><span class="line">            currNode-&gt;next = temp-&gt;next;</span><br><span class="line">            currNode = temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pCloneHead;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E0E;&#x53CC;&#x5411;&#x94FE;&#x8868;">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E0E;&#x53CC;&#x5411;&#x94FE;&#x8868;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x5C06;&#x8BE5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x53CC;&#x5411;&#x94FE;&#x8868;&#x3002;&#x8981;&#x6C42;&#x4E0D;&#x80FD;&#x521B;&#x5EFA;&#x4EFB;&#x4F55;&#x65B0;&#x7684;&#x7ED3;&#x70B9;&#xFF0C;&#x53EA;&#x80FD;&#x8C03;&#x6574;&#x6811;&#x4E2D;&#x7ED3;&#x70B9;&#x6307;&#x9488;&#x7684;&#x6307;&#x5411;&#x3002;</p><p>&#x611F;&#x89C9;&#x50CF;&#x662F;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x7EBF;&#x7D22;&#x5316;&#x3002;</p><p>&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E0E;&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;&#x610F;&#x601D;&#x76F8;&#x540C;&#xFF0C;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;/&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#xFF08;Binary Search Tree&#xFF09;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x4E00;&#x68F5;&#x7A7A;&#x6811;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x5177;&#x6709;&#x4E0B;&#x5217;&#x6027;&#x8D28;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#xFF1A;</p><p>&#x82E5;&#x5B83;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x4E0D;&#x7A7A;&#xFF0C;&#x5219;&#x5DE6;&#x5B50;&#x6811;&#x4E0A;&#x6240;&#x6709;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#x5747;&#x5C0F;&#x4E8E;&#x5B83;&#x7684;&#x6839;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#xFF1B;</p><p>&#x82E5;&#x5B83;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x4E0D;&#x7A7A;&#xFF0C;&#x5219;&#x53F3;&#x5B50;&#x6811;&#x4E0A;&#x6240;&#x6709;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#x5747;&#x5927;&#x4E8E;&#x5B83;&#x7684;&#x6839;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#xFF1B;</p><p>&#x5B83;&#x7684;&#x5DE6;&#x3001;&#x53F3;&#x5B50;&#x6811;&#x4E5F;&#x5206;&#x522B;&#x4E3A;&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-1">&#x89E3;&#x6CD5;&#x4E00;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>//&#x5FAA;&#x73AF;&#x5199;&#x6CD5;</span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Convert</span><span class="params">(TreeNode* pRootOfTree)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRootOfTree == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;<span class="comment">//&#x82E5;&#x4E3A;&#x7A7A;&#xFF0C;&#x8FD4;&#x56DE;&#x7A7A;</span></span><br><span class="line">        <span class="built_in">stack</span>&lt;TreeNode*&gt; s;</span><br><span class="line">        TreeNode* p = pRootOfTree, *pre = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">bool</span> isFirst = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (p!=<span class="literal">NULL</span>||!s.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (p!=<span class="literal">NULL</span>)</span><br><span class="line">            {</span><br><span class="line">                s.push(p);</span><br><span class="line">                p = p-&gt;left;</span><br><span class="line">            }</span><br><span class="line">            p = s.top(); s.pop();</span><br><span class="line">            <span class="keyword">if</span> (isFirst)</span><br><span class="line">            {</span><br><span class="line">                pRootOfTree = p;<span class="comment">//&#x5C06;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x8BB0;&#x4E3A;root</span></span><br><span class="line">                pre = pRootOfTree;</span><br><span class="line">                isFirst = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {<span class="comment">//&#x8FDE;&#x63A5;&#x524D;&#x540E;&#x5173;&#x7CFB;</span></span><br><span class="line">                pre-&gt;right = p;</span><br><span class="line">                p-&gt;left = pre;</span><br><span class="line">                pre = p;</span><br><span class="line">            }</span><br><span class="line">            p = p-&gt;right;<span class="comment">//&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#xFF0C;&#x5DE6;&#x4E2D;&#x53F3;&#xFF0C;&#x8FD9;&#x4E2A;&#x5730;&#x65B9;&#x662F;&#x5904;&#x7406;&#x53F3;&#x8FB9;&#x7684;&#x90E8;&#x5206;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pRootOfTree;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-1">&#x89E3;&#x6CD5;&#x4E8C;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Convert</span><span class="params">(TreeNode* pRootOfTree)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRootOfTree == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        TreeNode * pre = <span class="literal">NULL</span>;</span><br><span class="line">        trans(pRootOfTree, pre);</span><br><span class="line">        TreeNode* res = pRootOfTree;</span><br><span class="line">        <span class="keyword">while</span> (res-&gt;left!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = res-&gt;left;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">trans</span><span class="params">(TreeNode * cur, TreeNode *&amp;pre)</span><span class="comment">//&#x7C7B;&#x4F3C;&#x4E8E;&#x6811;&#x7684;&#x5DE6;&#x4E2D;&#x53F3;&#x904D;&#x5386;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (cur == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        trans(cur-&gt;left, pre);</span><br><span class="line">        cur-&gt;left = pre;</span><br><span class="line">        <span class="keyword">if</span> (pre != <span class="literal">NULL</span>)</span><br><span class="line">            pre-&gt;right = cur;</span><br><span class="line">        pre = cur;</span><br><span class="line">        trans(cur-&gt;right, pre);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6392;&#x5217;">&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6392;&#x5217;</h1><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;,&#x6309;&#x5B57;&#x5178;&#x5E8F;&#x6253;&#x5370;&#x51FA;&#x8BE5;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5B57;&#x7B26;&#x7684;&#x6240;&#x6709;&#x6392;&#x5217;&#x3002;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x5B57;&#x7B26;&#x4E32;abc,&#x5219;&#x6253;&#x5370;&#x51FA;&#x7531;&#x5B57;&#x7B26;a,b,c&#x6240;&#x80FD;&#x6392;&#x5217;&#x51FA;&#x6765;&#x7684;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x4E32;abc,acb,bac,bca,cab&#x548C;cba&#x3002;</p><p>&#x8F93;&#x5165;&#x63CF;&#x8FF0;:</p><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;,&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;9(&#x53EF;&#x80FD;&#x6709;&#x5B57;&#x7B26;&#x91CD;&#x590D;),&#x5B57;&#x7B26;&#x53EA;&#x5305;&#x62EC;&#x5927;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; res;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; Permutation(<span class="built_in">string</span> str) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (str != <span class="string">&quot;&quot;</span>)</span><br><span class="line">            dfs(str, <span class="number">0</span>);<span class="comment">//&#x4ECE;0&#x5F00;&#x59CB;DFS</span></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> size = str.size();</span><br><span class="line">        <span class="keyword">if</span> (start == size)<span class="comment">//&#x8FBE;&#x5230;&#x4E86;&#x538B;&#x5165;vector&#x7684;&#x6761;&#x4EF6;</span></span><br><span class="line">        {</span><br><span class="line">            res.push_back(str);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt; size; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (i != start &amp;&amp; str[i] == str[start])</span><br><span class="line">                <span class="keyword">continue</span>;<span class="comment">//&#x9632;&#x6B62;abb&#x8FD9;&#x79CD;&#x4E24;&#x4E2A;&#x4E00;&#x6837;&#x7684;</span></span><br><span class="line">            swap(str[i], str[start]);</span><br><span class="line">            dfs(str, start + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#x7684;&#x6570;&#x5B57;">&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#x7684;&#x6570;&#x5B57;</h1><p>&#x6570;&#x7EC4;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x3002;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;9&#x7684;&#x6570;&#x7EC4;{1,2,3,2,2,2,5,4,2}&#x3002;&#x7531;&#x4E8E;&#x6570;&#x5B57;2&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x4E86;5&#x6B21;&#xFF0C;&#x8D85;&#x8FC7;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x56E0;&#x6B64;&#x8F93;&#x51FA;2&#x3002;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x8F93;&#x51FA;0&#x3002;</p><p>&#x4E0D;&#x80FD;&#x7B80;&#x5355;&#x7684;&#x7528;&#x6392;&#x5E8F;&#xFF0C;&#x56E0;&#x4E3A;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x4E0D;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#xFF0C;&#x8981;&#x8F93;&#x51FA;0.</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O&#xFF08;n&#xFF09;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">MoreThanHalfNum_Solution</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> n = numbers.size();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num = numbers[<span class="number">0</span>], cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == num)</span><br><span class="line">                cnt++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cnt--;</span><br><span class="line">            <span class="keyword">if</span> (cnt == <span class="number">0</span>)<span class="comment">//&#x5982;&#x679C;cnt&#x4E3A;0&#x4E86;&#xFF0C;&#x91CD;&#x65B0;&#x9009;&#x62E9;&#x4E3A;&#x5F53;&#x524D;&#x6570;&#x5B57;&#xFF0C;&#x91CD;&#x65B0;&#x8FDB;&#x884C;&#x8BA1;&#x6570;</span></span><br><span class="line">            {</span><br><span class="line">                num = numbers[i];</span><br><span class="line">                cnt = <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == num)</span><br><span class="line">                cnt++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (cnt * <span class="number">2</span> &gt; n)</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6700;&#x5C0F;&#x7684;k&#x4E2A;&#x6570;">&#x6700;&#x5C0F;&#x7684;K&#x4E2A;&#x6570;</h1><h2 id="&#x89E3;&#x6CD5;&#x4E00;-2">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x5077;&#x61D2;&#x7684;&#x5199;&#x6CD5;&#xFF08;&#x8FD9;&#x6837;&#x4E5F;&#x80FD;&#x8FC7;&#xFF09;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;O&#xFF08;n*lg n&#xFF09;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; GetLeastNumbers_Solution(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; input, <span class="keyword">int</span> k)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; input.size())</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        res.resize(k);</span><br><span class="line">        sort(input.begin(), input.end());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        {</span><br><span class="line">            res[i] = input[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-2">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x8003;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x7684;&#x601D;&#x60F3;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x8003;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x7684;&#x601D;&#x60F3;</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; GetLeastNumbers_Solution(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; input, <span class="keyword">int</span> k)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; input.size() || k &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        res.resize(k);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>, high = input.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (low &lt; high)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> temp = partition(input, low, high);</span><br><span class="line">            <span class="keyword">if</span> (temp == k)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (high &gt; k)<span class="comment">//&#x5F53;&#x524D;&#x533A;&#x95F4;&#x5927;&#x4E8E;k</span></span><br><span class="line">                high = temp - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                low = temp + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        {</span><br><span class="line">            res[i] = input[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;input, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> cur = input[low], i = low, j = high;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;j)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (j &gt;i &amp;&amp; input[j] &gt;= cur)</span><br><span class="line">                j--;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; j&amp;&amp;input[i] &lt;= cur)</span><br><span class="line">                i++;</span><br><span class="line">            swap(input[i], input[j]);</span><br><span class="line">        }</span><br><span class="line">        swap(input[low], input[i]);</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x8FDE;&#x7EED;&#x5B50;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5927;&#x548C;">&#x8FDE;&#x7EED;&#x5B50;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5927;&#x548C;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>HZ&#x5076;&#x5C14;&#x4F1A;&#x62FF;&#x4E9B;&#x4E13;&#x4E1A;&#x95EE;&#x9898;&#x6765;&#x5FFD;&#x60A0;&#x90A3;&#x4E9B;&#x975E;&#x8BA1;&#x7B97;&#x673A;&#x4E13;&#x4E1A;&#x7684;&#x540C;&#x5B66;&#x3002;&#x4ECA;&#x5929;&#x6D4B;&#x8BD5;&#x7EC4;&#x5F00;&#x5B8C;&#x4F1A;&#x540E;,&#x4ED6;&#x53C8;&#x53D1;&#x8BDD;&#x4E86;:&#x5728;&#x53E4;&#x8001;&#x7684;&#x4E00;&#x7EF4;&#x6A21;&#x5F0F;&#x8BC6;&#x522B;&#x4E2D;,&#x5E38;&#x5E38;&#x9700;&#x8981;&#x8BA1;&#x7B97;&#x8FDE;&#x7EED;&#x5B50;&#x5411;&#x91CF;&#x7684;&#x6700;&#x5927;&#x548C;,&#x5F53;&#x5411;&#x91CF;&#x5168;&#x4E3A;&#x6B63;&#x6570;&#x7684;&#x65F6;&#x5019;,&#x95EE;&#x9898;&#x5F88;&#x597D;&#x89E3;&#x51B3;&#x3002;&#x4F46;&#x662F;,&#x5982;&#x679C;&#x5411;&#x91CF;&#x4E2D;&#x5305;&#x542B;&#x8D1F;&#x6570;,&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x5305;&#x542B;&#x67D0;&#x4E2A;&#x8D1F;&#x6570;,&#x5E76;&#x671F;&#x671B;&#x65C1;&#x8FB9;&#x7684;&#x6B63;&#x6570;&#x4F1A;&#x5F25;&#x8865;&#x5B83;&#x5462;&#xFF1F;&#x4F8B;&#x5982;:{6,-3,-2,7,-15,1,2,2},&#x8FDE;&#x7EED;&#x5B50;&#x5411;&#x91CF;&#x7684;&#x6700;&#x5927;&#x548C;&#x4E3A;8(&#x4ECE;&#x7B2C;0&#x4E2A;&#x5F00;&#x59CB;,&#x5230;&#x7B2C;3&#x4E2A;&#x4E3A;&#x6B62;)&#x3002;&#x7ED9;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x8FD4;&#x56DE;&#x5B83;&#x7684;&#x6700;&#x5927;&#x8FDE;&#x7EED;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x548C;&#xFF0C;&#x4F60;&#x4F1A;&#x4E0D;&#x4F1A;&#x88AB;&#x4ED6;&#x5FFD;&#x60A0;&#x4F4F;&#xFF1F;(&#x5B50;&#x5411;&#x91CF;&#x7684;&#x957F;&#x5EA6;&#x81F3;&#x5C11;&#x662F;1)</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;O&#xFF08;n&#xFF09;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class Solution </span><br><span class="line">{</span><br><span class="line">public:</span><br><span class="line">    int FindGreatestSumOfSubArray(vector&lt;int&gt; array) </span><br><span class="line">    {</span><br><span class="line">        int start, end, maxsum = 0xFFFFFFFF, tempsum = 0xFFFFFFFF, n = array.size(), tempstart;</span><br><span class="line">        if (n==0)</span><br><span class="line">            return 0;</span><br><span class="line">        </span><br><span class="line">        for (int i = 0; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            if (tempsum &lt; 0)</span><br><span class="line">            {</span><br><span class="line">                tempsum = array[i];</span><br><span class="line">                tempstart = i;</span><br><span class="line">            }</span><br><span class="line">            else</span><br><span class="line">                tempsum+= array[i];</span><br><span class="line">            if (tempsum &gt; maxsum)</span><br><span class="line">            {</span><br><span class="line">                maxsum = tempsum;</span><br><span class="line">                start = tempstart;</span><br><span class="line">                end = i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        return maxsum;</span><br><span class="line">    </span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x4ECE;1&#x5230;n&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;">&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF08;&#x4ECE;1&#x5230;n&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF09;</h1><p>&#x6C42;&#x51FA;1~13&#x7684;&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;,&#x5E76;&#x7B97;&#x51FA;100~1300&#x7684;&#x6574;&#x6570;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF1F;&#x4E3A;&#x6B64;&#x4ED6;&#x7279;&#x522B;&#x6570;&#x4E86;&#x4E00;&#x4E0B;1~13&#x4E2D;&#x5305;&#x542B;1&#x7684;&#x6570;&#x5B57;&#x6709;1&#x3001;10&#x3001;11&#x3001;12&#x3001;13&#x56E0;&#x6B64;&#x5171;&#x51FA;&#x73B0;6&#x6B21;,&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x540E;&#x9762;&#x95EE;&#x9898;&#x4ED6;&#x5C31;&#x6CA1;&#x8F99;&#x4E86;&#x3002;ACMer&#x5E0C;&#x671B;&#x4F60;&#x4EEC;&#x5E2E;&#x5E2E;&#x4ED6;,&#x5E76;&#x628A;&#x95EE;&#x9898;&#x66F4;&#x52A0;&#x666E;&#x904D;&#x5316;,&#x53EF;&#x4EE5;&#x5F88;&#x5FEB;&#x7684;&#x6C42;&#x51FA;&#x4EFB;&#x610F;&#x975E;&#x8D1F;&#x6574;&#x6570;&#x533A;&#x95F4;&#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF08;&#x4ECE;1 &#x5230; n &#x4E2D;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF09;&#x3002;</p><p>&#x601D;&#x8DEF;&#x5206;&#x6790;&#xFF1A;</p><p>&#x8BBE;N = abcde ,&#x5176;&#x4E2D;abcde&#x5206;&#x522B;&#x4E3A;&#x5341;&#x8FDB;&#x5236;&#x4E2D;&#x5404;&#x4F4D;&#x4E0A;&#x7684;&#x6570;&#x5B57;&#x3002; &#x5982;&#x679C;&#x8981;&#x8BA1;&#x7B97;&#x767E;&#x4F4D;&#x4E0A;1&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x5B83;&#x8981;&#x53D7;&#x5230;3&#x65B9;&#x9762;&#x7684;&#x5F71;&#x54CD;&#xFF1A;&#x767E;&#x4F4D;&#x4E0A;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x767E;&#x4F4D;&#x4EE5;&#x4E0B;&#xFF08;&#x4F4E;&#x4F4D;&#xFF09;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x767E;&#x4F4D;&#x4EE5;&#x4E0A;&#xFF08;&#x9AD8;&#x4F4D;&#xFF09;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x2460; &#x5982;&#x679C;&#x767E;&#x4F4D;&#x4E0A;&#x6570;&#x5B57;&#x4E3A;0&#xFF0C;&#x767E;&#x4F4D;&#x4E0A;&#x53EF;&#x80FD;&#x51FA;&#x73B0;1&#x7684;&#x6B21;&#x6570;&#x7531;&#x66F4;&#x9AD8;&#x4F4D;&#x51B3;&#x5B9A;&#x3002;&#x6BD4;&#x5982;&#xFF1A;12013&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x53EF;&#x80FD;&#x662F;&#xFF1A;100~199&#xFF0C;1100~1199,2100~2199&#xFF0C;&#xFF0C;...&#xFF0C;11100~11199&#xFF0C;&#x4E00;&#x5171;1200&#x4E2A;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x662F;&#x7531;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;&#xFF08;12&#xFF09;&#x51B3;&#x5B9A;&#xFF0C;&#x5E76;&#x4E14;&#x7B49;&#x4E8E;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;&#xFF08;12&#xFF09;&#x4E58;&#x4EE5; &#x5F53;&#x524D;&#x4F4D;&#x6570;&#xFF08;100&#xFF09;&#x3002;</p><p>&#x2461; &#x5982;&#x679C;&#x767E;&#x4F4D;&#x4E0A;&#x6570;&#x5B57;&#x4E3A;1&#xFF0C;&#x767E;&#x4F4D;&#x4E0A;&#x53EF;&#x80FD;&#x51FA;&#x73B0;1&#x7684;&#x6B21;&#x6570;&#x4E0D;&#x4EC5;&#x53D7;&#x66F4;&#x9AD8;&#x4F4D;&#x5F71;&#x54CD;&#x8FD8;&#x53D7;&#x4F4E;&#x4F4D;&#x5F71;&#x54CD;&#x3002;&#x6BD4;&#x5982;&#xFF1A;12113&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x767E;&#x4F4D;&#x53D7;&#x9AD8;&#x4F4D;&#x5F71;&#x54CD;&#x51FA;&#x73B0;&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;100~199&#xFF0C;1100~1199,2100~2199&#xFF0C;&#xFF0C;....&#xFF0C;11100~11199&#xFF0C;&#x4E00;&#x5171;1200&#x4E2A;&#x3002;&#x548C;&#x4E0A;&#x9762;&#x60C5;&#x51B5;&#x4E00;&#x6837;&#xFF0C;&#x5E76;&#x4E14;&#x7B49;&#x4E8E;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;&#xFF08;12&#xFF09;&#x4E58;&#x4EE5; &#x5F53;&#x524D;&#x4F4D;&#x6570;&#xFF08;100&#xFF09;&#x3002;&#x4F46;&#x540C;&#x65F6;&#x5B83;&#x8FD8;&#x53D7;&#x4F4E;&#x4F4D;&#x5F71;&#x54CD;&#xFF0C;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;12100~12113,&#x4E00;&#x5171;114&#x4E2A;&#xFF0C;&#x7B49;&#x4E8E;&#x4F4E;&#x4F4D;&#x6570;&#x5B57;&#xFF08;113&#xFF09;+1&#x3002;</p><p>&#x2462; &#x5982;&#x679C;&#x767E;&#x4F4D;&#x4E0A;&#x6570;&#x5B57;&#x5927;&#x4E8E;1&#xFF08;2~9&#xFF09;&#xFF0C;&#x5219;&#x767E;&#x4F4D;&#x4E0A;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x4EC5;&#x7531;&#x66F4;&#x9AD8;&#x4F4D;&#x51B3;&#x5B9A;&#xFF0C;&#x6BD4;&#x5982;12213&#xFF0C;&#x5219;&#x767E;&#x4F4D;&#x51FA;&#x73B0;1&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;100~199,1100~1199&#xFF0C;2100~2199&#xFF0C;...&#xFF0C;11100~11199,12100~12199,&#x4E00;&#x5171;&#x6709;1300&#x4E2A;&#xFF0C;&#x5E76;&#x4E14;&#x7B49;&#x4E8E;&#x66F4;&#x9AD8;&#x4F4D;&#x6570;&#x5B57;+1&#xFF08;12+1&#xFF09;&#x4E58;&#x4EE5;&#x5F53;&#x524D;&#x4F4D;&#x6570;&#xFF08;100&#xFF09;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">NumberOf1Between1AndN_Solution</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i*=<span class="number">10</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> a = n / i;</span><br><span class="line">            <span class="keyword">int</span> b = n % i;</span><br><span class="line">            cnt += (a + <span class="number">8</span>) / <span class="number">10</span> * i;</span><br><span class="line">            <span class="keyword">if</span> (a % <span class="number">10</span> == <span class="number">1</span>)</span><br><span class="line">                cnt += (b + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x628A;&#x6570;&#x7EC4;&#x6392;&#x6210;&#x6700;&#x5C0F;&#x7684;&#x6570;">&#x628A;&#x6570;&#x7EC4;&#x6392;&#x6210;&#x6700;&#x5C0F;&#x7684;&#x6570;</h1><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x6570;&#x7EC4;&#xFF0C;&#x628A;&#x6570;&#x7EC4;&#x91CC;&#x6240;&#x6709;&#x6570;&#x5B57;&#x62FC;&#x63A5;&#x8D77;&#x6765;&#x6392;&#x6210;&#x4E00;&#x4E2A;&#x6570;&#xFF0C;&#x6253;&#x5370;&#x80FD;&#x62FC;&#x63A5;&#x51FA;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x4E2D;&#x6700;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;&#x3002;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x6570;&#x7EC4;{3&#xFF0C;32&#xFF0C;321}&#xFF0C;&#x5219;&#x6253;&#x5370;&#x51FA;&#x8FD9;&#x4E09;&#x4E2A;&#x6570;&#x5B57;&#x80FD;&#x6392;&#x6210;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x5B57;&#x4E3A;321323&#x3002;</p><p>&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x6BD4;&#x8F83;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32; S1 &#x548C; S2 &#x7684;&#x5927;&#x5C0F;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x6BD4;&#x8F83;&#x7684;&#x662F; S1+S2 &#x548C; S2+S1 &#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5982;&#x679C; S1+S2 &lt; S2+S1&#xFF0C;&#x90A3;&#x4E48;&#x5E94;&#x8BE5;&#x628A; S1 &#x6392;&#x5728;&#x524D;&#x9762;&#xFF0C;&#x5426;&#x5219;&#x5E94;&#x8BE5;&#x628A; S2 &#x6392;&#x5728;&#x524D;&#x9762;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">string</span> s1 = to_string(a), s2 = to_string(b);</span><br><span class="line">        <span class="built_in">string</span> s3 = s1 + s2, s4 = s2 + s1;</span><br><span class="line">        <span class="keyword">if</span> (s3 &lt; s4)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">PrintMinNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (numbers.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        sort(numbers.begin(), numbers.end(),cmp);</span><br><span class="line">        <span class="built_in">string</span> res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i = numbers.begin(); i != numbers.end(); i++)</span><br><span class="line">        {</span><br><span class="line">            res += to_string(*i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E11;&#x6570;">&#x4E11;&#x6570;</h1><p>&#x628A;&#x53EA;&#x5305;&#x542B;&#x8D28;&#x56E0;&#x5B50;2&#x3001;3&#x548C;5&#x7684;&#x6570;&#x79F0;&#x4F5C;&#x4E11;&#x6570;&#xFF08;Ugly Number&#xFF09;&#x3002;&#x4F8B;&#x5982;6&#x3001;8&#x90FD;&#x662F;&#x4E11;&#x6570;&#xFF0C;&#x4F46;14&#x4E0D;&#x662F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5305;&#x542B;&#x8D28;&#x56E0;&#x5B50;7&#x3002; &#x4E60;&#x60EF;&#x4E0A;&#x6211;&#x4EEC;&#x628A;1&#x5F53;&#x505A;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x4E11;&#x6570;&#x3002;&#x6C42;&#x6309;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x987A;&#x5E8F;&#x7684;&#x7B2C;N&#x4E2A;&#x4E11;&#x6570;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetUglyNumber_Solution</span><span class="params">(<span class="keyword">int</span> index)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">7</span>)</span><br><span class="line">            <span class="keyword">return</span> index;</span><br><span class="line">        <span class="keyword">int</span> p2 = <span class="number">0</span>, p3 = <span class="number">0</span>, p5 = <span class="number">0</span>, num = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">        res.push_back(num);</span><br><span class="line">        <span class="keyword">while</span> (res.size()&lt;index)</span><br><span class="line">        {</span><br><span class="line">            num = min(res[p2] * <span class="number">2</span>, min(res[p3] * <span class="number">3</span>, res[p5] * <span class="number">5</span>));</span><br><span class="line">            <span class="keyword">if</span> (res[p2] * <span class="number">2</span> == num)</span><br><span class="line">                p2++;</span><br><span class="line">            <span class="keyword">if</span> (res[p3] * <span class="number">3</span> == num)</span><br><span class="line">                p3++;</span><br><span class="line">            <span class="keyword">if</span> (res[p5] * <span class="number">5</span> == num)<span class="comment">//&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x91CD;&#x590D;&#xFF0C;&#x8FD9;&#x91CC;&#x5FC5;&#x987B;&#x662F;&#x4E09;&#x4E2A;if</span></span><br><span class="line">                p5++;</span><br><span class="line">            res.push_back(num);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;">&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5728;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;(0&lt;=&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&lt;=10000&#xFF0C;&#x5168;&#x90E8;&#x7531;&#x5B57;&#x6BCD;&#x7EC4;&#x6210;)&#x4E2D;&#x627E;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;,&#x5E76;&#x8FD4;&#x56DE;&#x5B83;&#x7684;&#x4F4D;&#x7F6E;, &#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x8FD4;&#x56DE; -1&#xFF08;&#x9700;&#x8981;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#xFF09;.</p><p>&#x4E24;&#x6B21;&#x904D;&#x5386;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">FirstNotRepeatingChar</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">256</span>] = { <span class="number">0</span> };</span><br><span class="line">        <span class="keyword">int</span> n = str.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            s[str[i]]++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (s[str[i]] == <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7ED3;&#x70B9;">&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E24;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;&#x627E;&#x51FA;&#x5B83;&#x4EEC;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7ED3;&#x70B9;&#x3002;</p><p>&#x4E24;&#x6B21;&#x904D;&#x5386;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">FindFirstCommonNode</span><span class="params">(ListNode* pHead1, ListNode* pHead2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        ListNode* p1 = pHead1;</span><br><span class="line">        ListNode* p2 = pHead2;</span><br><span class="line">        <span class="keyword">if</span> (p1 == <span class="literal">NULL</span> || p2 == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (p1!=p2)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (p1 == <span class="literal">NULL</span>)</span><br><span class="line">                p1 = pHead2;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p1 = p1-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (p2 == <span class="literal">NULL</span>)</span><br><span class="line">                p2 = pHead1;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p2 = p2-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> p2;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x5B57;&#x5728;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;">&#x6570;&#x5B57;&#x5728;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7EDF;&#x8BA1;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5728;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x3002;</p><p>&#x4E8C;&#x5206;&#x6CD5;&#x67E5;&#x627E;&#xFF0C;&#x56E0;&#x4E3A;&#x6570;&#x7EC4;&#x4E2D;&#x90FD;&#x662F;&#x6574;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x641C;&#x7D22;num-0.5&#x548C;num+0.5&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetNumberOfK</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data, <span class="keyword">int</span> k)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">double</span> temp1 = k - <span class="number">0.5</span>, temp2 = k + <span class="number">0.5</span>;</span><br><span class="line">        <span class="keyword">int</span> res = binSearch(data, temp2) - binSearch(data, temp1);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">binSearch</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data, <span class="keyword">double</span> num)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>, end = data.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mid;</span><br><span class="line">        <span class="keyword">while</span> (start&lt;=end)</span><br><span class="line">        {</span><br><span class="line">            mid = (end - start) / <span class="number">2</span> + start;</span><br><span class="line">            <span class="keyword">if</span> (data[mid] &lt; num)</span><br><span class="line">                start = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (data[mid] &gt; num)</span><br><span class="line">                end = mid - <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> start;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x6C42;&#x8BE5;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x3002;&#x4ECE;&#x6839;&#x7ED3;&#x70B9;&#x5230;&#x53F6;&#x7ED3;&#x70B9;&#x4F9D;&#x6B21;&#x7ECF;&#x8FC7;&#x7684;&#x7ED3;&#x70B9;&#xFF08;&#x542B;&#x6839;&#x3001;&#x53F6;&#x7ED3;&#x70B9;&#xFF09;&#x5F62;&#x6210;&#x6811;&#x7684;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#xFF0C;&#x6700;&#x957F;&#x8DEF;&#x5F84;&#x7684;&#x957F;&#x5EA6;&#x4E3A;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x3002;</p><p>&#x7ECF;&#x5178;&#x7684;&#x9012;&#x5F52;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max(TreeDepth(pRoot-&gt;left) + <span class="number">1</span>, TreeDepth(pRoot-&gt;right) + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;">&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5224;&#x65AD;&#x8BE5;&#x4E8C;&#x53C9;&#x6811;&#x662F;&#x5426;&#x662F;&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><p>&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF08;Self-balancing binary search tree&#xFF09;&#x53C8;&#x88AB;&#x79F0;&#x4E3A;AVL&#x6811;&#xFF08;&#x6709;&#x522B;&#x4E8E;AVL&#x7B97;&#x6CD5;&#xFF09;&#xFF0C;&#x4E14;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x6027;&#x8D28;&#xFF1A;&#x5B83;&#x662F;&#x4E00;&#x68F5;&#x7A7A;&#x6811;&#x6216;&#x5B83;&#x7684;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x5B50;&#x6811;&#x7684;&#x9AD8;&#x5EA6;&#x5DEE;&#x7684;&#x7EDD;&#x5BF9;&#x503C;&#x4E0D;&#x8D85;&#x8FC7;1&#xFF0C;&#x5E76;&#x4E14;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x5B50;&#x6811;&#x90FD;&#x662F;&#x4E00;&#x68F5;&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x7248;&#x4EE3;&#x7801;&#xFF08;&#x80FD;AC&#xFF0C;&#x6CA1;&#x6709;&#x526A;&#x679D;&#xFF0C;&#x501F;&#x7528;&#x4E0A;&#x4E00;&#x9898;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsBalanced_Solution</span><span class="params">(TreeNode* pRoot)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (IsBalanced_Solution(pRoot-&gt;left) == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (IsBalanced_Solution(pRoot-&gt;right) == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> leftDepth = TreeDepth(pRoot-&gt;left);</span><br><span class="line">        <span class="keyword">int</span> rightDepth = TreeDepth(pRoot-&gt;right);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(leftDepth - rightDepth) &gt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max(TreeDepth(pRoot-&gt;left) + <span class="number">1</span>, TreeDepth(pRoot-&gt;right) + <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x7B2C;&#x4E8C;&#x7248;&#x4EE3;&#x7801;&#xFF0C;&#x6709;&#x526A;&#x679D;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsBalanced_Solution</span><span class="params">(TreeNode* pRoot)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (TreeDepth(pRoot) == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> leftDepth = TreeDepth(pRoot-&gt;left);</span><br><span class="line">        <span class="keyword">if</span> (leftDepth == <span class="number">-1</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> rightDepth = TreeDepth(pRoot-&gt;right);</span><br><span class="line">        <span class="keyword">if</span> (rightDepth == <span class="number">-1</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(rightDepth - leftDepth) &gt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max(rightDepth, leftDepth) + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x7EC4;&#x4E2D;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;">&#x6570;&#x7EC4;&#x4E2D;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x4E00;&#x4E2A;&#x6574;&#x578B;&#x6570;&#x7EC4;&#x91CC;&#x9664;&#x4E86;&#x4E24;&#x4E2A;&#x6570;&#x5B57;&#x4E4B;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#x3002;&#x8BF7;&#x5199;&#x7A0B;&#x5E8F;&#x627E;&#x51FA;&#x8FD9;&#x4E24;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x9898;&#x6539;&#x6210;&#xFF0C;&#x4E00;&#x4E2A;&#x6574;&#x5F62;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x6B21;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5F02;&#x6216;&#x6765;&#x505A;&#xFF0C;&#x628A;&#x8FD9;&#x4E2A;&#x6570;&#x7EC4;&#x91CC;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x5F02;&#x6216;&#x3002;</p><p>&#x539F;&#x56E0;&#x662F;&#xFF0C;&#x76F8;&#x540C;&#x7684;&#x6570;&#x5F02;&#x6216;&#x7ED3;&#x679C;&#x4E3A;0&#x3002;</p><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x8003;&#x8651;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7248;&#x672C;&#xFF1A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x91CC;&#x9664;&#x4E86;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x4E4B;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#x3002;&#x8BF7;&#x5199;&#x7A0B;&#x5E8F;&#x627E;&#x51FA;&#x8FD9;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x7684;&#x7A81;&#x7834;&#x53E3;&#x5728;&#x54EA;&#x91CC;&#xFF1F;&#x9898;&#x76EE;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5F3A;&#x8C03;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x51FA;&#x73B0;&#x4E24;&#x6B21;&#xFF1F;&#x6211;&#x4EEC;&#x60F3;&#x5230;&#x4E86;&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#x7684;&#x6027;&#x8D28;&#xFF1A;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5F02;&#x6216;&#x5B83;&#x81EA;&#x5DF1;&#x90FD;&#x7B49;&#x4E8E;0 &#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4ECE;&#x5934;&#x5230;&#x5C3E;&#x4F9D;&#x6B21;&#x5F02;&#x6216;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x90A3;&#x4E48;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#x521A;&#x597D;&#x662F;&#x90A3;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x56E0;&#x4E3A;&#x90A3;&#x4E9B;&#x51FA;&#x73B0;&#x4E24;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x5168;&#x90E8;&#x5728;&#x5F02;&#x6216;&#x4E2D;&#x62B5;&#x6D88;&#x6389;&#x4E86;&#x3002;</p><p>&#x6709;&#x4E86;&#x4E0A;&#x9762;&#x7B80;&#x5355;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x56DE;&#x5230;&#x539F;&#x59CB;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5982;&#x679C;&#x80FD;&#x591F;&#x628A;&#x539F;&#x6570;&#x7EC4;&#x5206;&#x4E3A;&#x4E24;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x3002;&#x5728;&#x6BCF;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x800C;&#x5176;&#x5B83;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E24;&#x6B21;&#x3002;&#x5982;&#x679C;&#x80FD;&#x591F;&#x8FD9;&#x6837;&#x62C6;&#x5206;&#x539F;&#x6570;&#x7EC4;&#xFF0C;&#x6309;&#x7167;&#x524D;&#x9762;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x5206;&#x522B;&#x6C42;&#x51FA;&#x8FD9;&#x4E24;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x4E86;&#x3002;</p><p>&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x4ECE;&#x5934;&#x5230;&#x5C3E;&#x4F9D;&#x6B21;&#x5F02;&#x6216;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x90A3;&#x4E48;&#x6700;&#x7EC8;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x4E24;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#x7684;&#x5F02;&#x6216;&#x7ED3;&#x679C;&#x3002;&#x56E0;&#x4E3A;&#x5176;&#x5B83;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#xFF0C;&#x5728;&#x5F02;&#x6216;&#x4E2D;&#x5168;&#x90E8;&#x62B5;&#x6D88;&#x6389;&#x4E86;&#x3002;&#x7531;&#x4E8E;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x5B57;&#x80AF;&#x5B9A;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x5F02;&#x6216;&#x7ED3;&#x679C;&#x80AF;&#x5B9A;&#x4E0D;&#x4E3A;0 &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5728;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x6570;&#x5B57;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x4E2D;&#x81F3;&#x5C11;&#x5C31;&#x6709;&#x4E00;&#x4F4D;&#x4E3A;1 &#x3002;&#x6211;&#x4EEC;&#x5728;&#x7ED3;&#x679C;&#x6570;&#x5B57;&#x4E2D;&#x627E;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x4E3A;1 &#x7684;&#x4F4D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x8BB0;&#x4E3A;&#x7B2C;N &#x4F4D;&#x3002;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x4EE5;&#x7B2C;N &#x4F4D;&#x662F;&#x4E0D;&#x662F;1 &#x4E3A;&#x6807;&#x51C6;&#x628A;&#x539F;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6570;&#x5B57;&#x5206;&#x6210;&#x4E24;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x4E2D;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x7B2C;N &#x4F4D;&#x90FD;&#x4E3A;1 &#xFF0C;&#x800C;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x7B2C;N &#x4F4D;&#x90FD;&#x4E3A;0 &#x3002;</p><p>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x628A;&#x539F;&#x6570;&#x7EC4;&#x5206;&#x6210;&#x4E86;&#x4E24;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x90FD;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x800C;&#x5176;&#x5B83;&#x6570;&#x5B57;&#x90FD;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x6B21;&#x3002;&#x56E0;&#x6B64;&#x5230;&#x6B64;&#x4E3A;&#x6B62;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x95EE;&#x9898;&#x6211;&#x4EEC;&#x90FD;&#x5DF2;&#x7ECF;&#x89E3;&#x51B3;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">FindNumsAppearOnce</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data, <span class="keyword">int</span>* num1, <span class="keyword">int</span> *num2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (data.size() &lt; <span class="number">2</span>)<span class="comment">//&#x5F02;&#x5E38;&#x60C5;&#x51B5;</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>,n=data.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="comment">//&#x6240;&#x6709;&#x7684;&#x6570;&#xFF0C;&#x5168;&#x90E8;&#x76F8;&#x4E92;&#x5F02;&#x6216;</span></span><br><span class="line">        {</span><br><span class="line">            temp = temp ^ data[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//&#x5F02;&#x5E38;&#x60C5;&#x51B5;&#x3002;</span></span><br><span class="line">        <span class="keyword">int</span> first = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((temp&amp;<span class="number">1</span>)==<span class="number">0</span>)<span class="comment">//&#x627E;&#x51FA;&#x7B2C;&#x4E00;&#x4F4D;&#xFF0C;&#x6570;&#x503C;&#x4E0D;&#x4E3A;0&#x7684;</span></span><br><span class="line">        {</span><br><span class="line">            temp = temp &gt;&gt; <span class="number">1</span>;<span class="comment">//&#x53F3;&#x79FB;&#x4E00;&#x4F4D;</span></span><br><span class="line">            first++;</span><br><span class="line">        }</span><br><span class="line">        *num1 = <span class="number">0</span>; *num2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (isBit(data[i], first))</span><br><span class="line">                *num1 = *num1^data[i];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                *num2 = *num2^data[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5224;&#x65AD;&#x67D0;&#x4E00;&#x4F4D;&#x662F;&#x4E0D;&#x662F;1&#x7684;&#x51FD;&#x6570;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isBit</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        num = num &gt;&gt; index;</span><br><span class="line">        <span class="keyword">return</span> (num &amp; <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x548C;&#x4E3A;s&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;">&#x548C;&#x4E3A;S&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5C0F;&#x660E;&#x5F88;&#x559C;&#x6B22;&#x6570;&#x5B66;,&#x6709;&#x4E00;&#x5929;&#x4ED6;&#x5728;&#x505A;&#x6570;&#x5B66;&#x4F5C;&#x4E1A;&#x65F6;,&#x8981;&#x6C42;&#x8BA1;&#x7B97;&#x51FA;9~16&#x7684;&#x548C;,&#x4ED6;&#x9A6C;&#x4E0A;&#x5C31;&#x5199;&#x51FA;&#x4E86;&#x6B63;&#x786E;&#x7B54;&#x6848;&#x662F;100&#x3002;&#x4F46;&#x662F;&#x4ED6;&#x5E76;&#x4E0D;&#x6EE1;&#x8DB3;&#x4E8E;&#x6B64;,&#x4ED6;&#x5728;&#x60F3;&#x7A76;&#x7ADF;&#x6709;&#x591A;&#x5C11;&#x79CD;&#x8FDE;&#x7EED;&#x7684;&#x6B63;&#x6570;&#x5E8F;&#x5217;&#x7684;&#x548C;&#x4E3A;100(&#x81F3;&#x5C11;&#x5305;&#x62EC;&#x4E24;&#x4E2A;&#x6570;)&#x3002;&#x6CA1;&#x591A;&#x4E45;,&#x4ED6;&#x5C31;&#x5F97;&#x5230;&#x53E6;&#x4E00;&#x7EC4;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x548C;&#x4E3A;100&#x7684;&#x5E8F;&#x5217;:18,19,20,21,22&#x3002;&#x73B0;&#x5728;&#x628A;&#x95EE;&#x9898;&#x4EA4;&#x7ED9;&#x4F60;,&#x4F60;&#x80FD;&#x4E0D;&#x80FD;&#x4E5F;&#x5F88;&#x5FEB;&#x7684;&#x627E;&#x51FA;&#x6240;&#x6709;&#x548C;&#x4E3A;S&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;? Good Luck!</p><p>&#x8F93;&#x51FA;&#x63CF;&#x8FF0;:</p><p>&#x8F93;&#x51FA;&#x6240;&#x6709;&#x548C;&#x4E3A;S&#x7684;&#x8FDE;&#x7EED;&#x6B63;&#x6570;&#x5E8F;&#x5217;&#x3002;&#x5E8F;&#x5217;&#x5185;&#x6309;&#x7167;&#x4ECE;&#x5C0F;&#x81F3;&#x5927;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x5E8F;&#x5217;&#x95F4;&#x6309;&#x7167;&#x5F00;&#x59CB;&#x6570;&#x5B57;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x987A;&#x5E8F;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9898;&#x4E0E; &#x548C;&#x4E3A;S&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x5B57; &#x7C7B;&#x4F3C;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;</p><p>&#x65B9;&#x6CD5;&#x662F;&#x7528;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x53BB;&#x505A;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; FindContinuousSequence(<span class="keyword">int</span> sum)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">1</span>, end = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> cur;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="keyword">while</span> (start &lt; end)</span><br><span class="line">        {</span><br><span class="line">            cur = (start + end)*(end - start + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (cur &gt; sum)</span><br><span class="line">                start++;</span><br><span class="line">            <span class="keyword">if</span> (cur &lt; sum)</span><br><span class="line">                end++;</span><br><span class="line">            <span class="keyword">if</span> (cur == sum)</span><br><span class="line">            {</span><br><span class="line">                temp.clear();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= end; i++)</span><br><span class="line">                {</span><br><span class="line">                    temp.push_back(i);</span><br><span class="line">                }</span><br><span class="line">                start++;</span><br><span class="line">                res.push_back(temp);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x548C;&#x4E3A;s&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x5B57;">&#x548C;&#x4E3A;S&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x5B57;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x9012;&#x589E;&#x6392;&#x5E8F;&#x7684;&#x6570;&#x7EC4;&#x548C;&#x4E00;&#x4E2A;&#x6570;&#x5B57;S&#xFF0C;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x67E5;&#x627E;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x4F7F;&#x5F97;&#x4ED6;&#x4EEC;&#x7684;&#x548C;&#x6B63;&#x597D;&#x662F;S&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x5BF9;&#x6570;&#x5B57;&#x7684;&#x548C;&#x7B49;&#x4E8E;S&#xFF0C;&#x8F93;&#x51FA;&#x4E24;&#x4E2A;&#x6570;&#x7684;&#x4E58;&#x79EF;&#x6700;&#x5C0F;&#x7684;&#x3002;</p><p>&#x8F93;&#x51FA;&#x63CF;&#x8FF0;:</p><p>&#x5BF9;&#x5E94;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#xFF0C;&#x8F93;&#x51FA;&#x4E24;&#x4E2A;&#x6570;&#xFF0C;&#x5C0F;&#x7684;&#x5148;&#x8F93;&#x51FA;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; FindNumbersWithSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">array</span>, <span class="keyword">int</span> sum) </span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">array</span>.size();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">int</span> num1, num2 = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (num1=<span class="number">0</span>; num1 &lt; n; )</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[num1] + <span class="built_in">array</span>[num2] &gt; sum)</span><br><span class="line">                num2--;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[num1] + <span class="built_in">array</span>[num2] &lt; sum)</span><br><span class="line">                num1++;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[num1] + <span class="built_in">array</span>[num2] == sum)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(<span class="built_in">array</span>[num1]);</span><br><span class="line">                res.push_back(<span class="built_in">array</span>[num2]);</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5DE6;&#x65CB;&#x8F6C;&#x5B57;&#x7B26;&#x4E32;">&#x5DE6;&#x65CB;&#x8F6C;&#x5B57;&#x7B26;&#x4E32;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x6C47;&#x7F16;&#x8BED;&#x8A00;&#x4E2D;&#x6709;&#x4E00;&#x79CD;&#x79FB;&#x4F4D;&#x6307;&#x4EE4;&#x53EB;&#x505A;&#x5FAA;&#x73AF;&#x5DE6;&#x79FB;&#xFF08;ROL&#xFF09;&#xFF0C;&#x73B0;&#x5728;&#x6709;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x5B57;&#x7B26;&#x4E32;&#x6A21;&#x62DF;&#x8FD9;&#x4E2A;&#x6307;&#x4EE4;&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x3002;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x7ED9;&#x5B9A;&#x7684;&#x5B57;&#x7B26;&#x5E8F;&#x5217;S&#xFF0C;&#x8BF7;&#x4F60;&#x628A;&#x5176;&#x5FAA;&#x73AF;&#x5DE6;&#x79FB;K&#x4F4D;&#x540E;&#x7684;&#x5E8F;&#x5217;&#x8F93;&#x51FA;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5B57;&#x7B26;&#x5E8F;&#x5217;S=&#x201D;abcXYZdef&#x201D;,&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x5FAA;&#x73AF;&#x5DE6;&#x79FB;3&#x4F4D;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5373;&#x201C;XYZdefabc&#x201D;&#x3002;&#x662F;&#x4E0D;&#x662F;&#x5F88;&#x7B80;&#x5355;&#xFF1F;OK&#xFF0C;&#x641E;&#x5B9A;&#x5B83;&#xFF01;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">LeftRotateString</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> size = str.size();</span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        n = n % size;</span><br><span class="line">        <span class="built_in">string</span> res;</span><br><span class="line">        res += str.substr(n, size);</span><br><span class="line">        res += str.substr(<span class="number">0</span>, n);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x7FFB;&#x8F6C;&#x5355;&#x8BCD;&#x987A;&#x5E8F;&#x5217;">&#x7FFB;&#x8F6C;&#x5355;&#x8BCD;&#x987A;&#x5E8F;&#x5217;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x725B;&#x5BA2;&#x6700;&#x8FD1;&#x6765;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x5458;&#x5DE5;Fish&#xFF0C;&#x6BCF;&#x5929;&#x65E9;&#x6668;&#x603B;&#x662F;&#x4F1A;&#x62FF;&#x7740;&#x4E00;&#x672C;&#x82F1;&#x6587;&#x6742;&#x5FD7;&#xFF0C;&#x5199;&#x4E9B;&#x53E5;&#x5B50;&#x5728;&#x672C;&#x5B50;&#x4E0A;&#x3002;&#x540C;&#x4E8B;Cat&#x5BF9;Fish&#x5199;&#x7684;&#x5185;&#x5BB9;&#x9887;&#x611F;&#x5174;&#x8DA3;&#xFF0C;&#x6709;&#x4E00;&#x5929;&#x4ED6;&#x5411;Fish&#x501F;&#x6765;&#x7FFB;&#x770B;&#xFF0C;&#x4F46;&#x5374;&#x8BFB;&#x4E0D;&#x61C2;&#x5B83;&#x7684;&#x610F;&#x601D;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x201C;student. a am I&#x201D;&#x3002;&#x540E;&#x6765;&#x624D;&#x610F;&#x8BC6;&#x5230;&#xFF0C;&#x8FD9;&#x5BB6;&#x4F19;&#x539F;&#x6765;&#x628A;&#x53E5;&#x5B50;&#x5355;&#x8BCD;&#x7684;&#x987A;&#x5E8F;&#x7FFB;&#x8F6C;&#x4E86;&#xFF0C;&#x6B63;&#x786E;&#x7684;&#x53E5;&#x5B50;&#x5E94;&#x8BE5;&#x662F;&#x201C;I am a student.&#x201D;&#x3002;Cat&#x5BF9;&#x4E00;&#x4E00;&#x7684;&#x7FFB;&#x8F6C;&#x8FD9;&#x4E9B;&#x5355;&#x8BCD;&#x987A;&#x5E8F;&#x53EF;&#x4E0D;&#x5728;&#x884C;&#xFF0C;&#x4F60;&#x80FD;&#x5E2E;&#x52A9;&#x4ED6;&#x4E48;&#xFF1F;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">ReverseSentence</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (str.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        <span class="built_in">string</span> temp, res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; v;</span><br><span class="line">        <span class="keyword">int</span> end = str.size();</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = str.size()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">&apos; &apos;</span>)</span><br><span class="line">            {</span><br><span class="line">                temp.clear();</span><br><span class="line">                temp = str.substr(i + <span class="number">1</span>, end - i - <span class="number">1</span>);</span><br><span class="line">                temp += <span class="string">&quot; &quot;</span>;</span><br><span class="line">                v.push_back(temp);</span><br><span class="line">                end = i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        temp = str.substr(<span class="number">0</span>, end);</span><br><span class="line">        v.push_back(temp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; v.size(); j++)</span><br><span class="line">        {</span><br><span class="line">            res += v[j];</span><br><span class="line">            <span class="comment">//cout &lt;&lt; v[j];</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6251;&#x514B;&#x724C;&#x987A;&#x5B50;">&#x6251;&#x514B;&#x724C;&#x987A;&#x5B50;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>LL&#x4ECA;&#x5929;&#x5FC3;&#x60C5;&#x7279;&#x522B;&#x597D;,&#x56E0;&#x4E3A;&#x4ED6;&#x53BB;&#x4E70;&#x4E86;&#x4E00;&#x526F;&#x6251;&#x514B;&#x724C;,&#x53D1;&#x73B0;&#x91CC;&#x9762;&#x5C45;&#x7136;&#x6709;2&#x4E2A;&#x5927;&#x738B;,2&#x4E2A;&#x5C0F;&#x738B;(&#x4E00;&#x526F;&#x724C;&#x539F;&#x672C;&#x662F;54&#x5F20;^_^)...&#x4ED6;&#x968F;&#x673A;&#x4ECE;&#x4E2D;&#x62BD;&#x51FA;&#x4E86;5&#x5F20;&#x724C;,&#x60F3;&#x6D4B;&#x6D4B;&#x81EA;&#x5DF1;&#x7684;&#x624B;&#x6C14;,&#x770B;&#x770B;&#x80FD;&#x4E0D;&#x80FD;&#x62BD;&#x5230;&#x987A;&#x5B50;,&#x5982;&#x679C;&#x62BD;&#x5230;&#x7684;&#x8BDD;,&#x4ED6;&#x51B3;&#x5B9A;&#x53BB;&#x4E70;&#x4F53;&#x80B2;&#x5F69;&#x7968;,&#x563F;&#x563F;&#xFF01;&#xFF01;&#x201C;&#x7EA2;&#x5FC3;A,&#x9ED1;&#x6843;3,&#x5C0F;&#x738B;,&#x5927;&#x738B;,&#x65B9;&#x7247;5&#x201D;,&#x201C;Oh My God!&#x201D;&#x4E0D;&#x662F;&#x987A;&#x5B50;.....LL&#x4E0D;&#x9AD8;&#x5174;&#x4E86;,&#x4ED6;&#x60F3;&#x4E86;&#x60F3;,&#x51B3;&#x5B9A;&#x5927;&#x738B;&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x4EFB;&#x4F55;&#x6570;&#x5B57;,&#x5E76;&#x4E14;A&#x770B;&#x4F5C;1,J&#x4E3A;11,Q&#x4E3A;12,K&#x4E3A;13&#x3002;&#x4E0A;&#x9762;&#x7684;5&#x5F20;&#x724C;&#x5C31;&#x53EF;&#x4EE5;&#x53D8;&#x6210;&#x201C;1,2,3,4,5&#x201D;(&#x5927;&#x5C0F;&#x738B;&#x5206;&#x522B;&#x770B;&#x4F5C;2&#x548C;4),&#x201C;So Lucky!&#x201D;&#x3002;LL&#x51B3;&#x5B9A;&#x53BB;&#x4E70;&#x4F53;&#x80B2;&#x5F69;&#x7968;&#x5566;&#x3002; &#x73B0;&#x5728;,&#x8981;&#x6C42;&#x4F60;&#x4F7F;&#x7528;&#x8FD9;&#x5E45;&#x724C;&#x6A21;&#x62DF;&#x4E0A;&#x9762;&#x7684;&#x8FC7;&#x7A0B;,&#x7136;&#x540E;&#x544A;&#x8BC9;&#x6211;&#x4EEC;LL&#x7684;&#x8FD0;&#x6C14;&#x5982;&#x4F55;&#xFF0C; &#x5982;&#x679C;&#x724C;&#x80FD;&#x7EC4;&#x6210;&#x987A;&#x5B50;&#x5C31;&#x8F93;&#x51FA;true&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x8F93;&#x51FA;false&#x3002;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x8D77;&#x89C1;,&#x4F60;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x5927;&#x5C0F;&#x738B;&#x662F;0&#x3002;</p><p>&#x4E09;&#x4E2A;&#x6761;&#x4EF6;</p><ol type="1"><li><p>&#x6700;&#x5927;-&#x6700;&#x5C0F;(&#x4E0D;&#x8BA1;0)&lt;5;</p></li><li><p>&#x6CA1;&#x6709;&#x91CD;&#x590D;</p></li><li><p>&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x4E3A;5</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/*&#x4E09;&#x4E2A;&#x6761;&#x4EF6;&#xFF1A;</span></span><br><span class="line"><span class="comment">1. &#x6700;&#x5927;-&#x6700;&#x5C0F;(&#x4E0D;&#x8BA1;0)&lt;5;</span></span><br><span class="line"><span class="comment">2. &#x6CA1;&#x6709;&#x91CD;&#x590D;</span></span><br><span class="line"><span class="comment">3. &#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x4E3A;5</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsContinuous</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (numbers.size() != <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> maxn, minn;</span><br><span class="line">        sort(numbers.begin(), numbers.end());</span><br><span class="line">        maxn = numbers[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                minn = numbers[i];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == numbers[i + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> ((maxn - minn) &gt;= <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6C42;123...n">&#x6C42;1+2+3+...+n</h1><p>&#x6C42;1+2+3+...+n&#xFF0C;&#x8981;&#x6C42;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x4E58;&#x9664;&#x6CD5;&#x3001;for&#x3001;while&#x3001;if&#x3001;else&#x3001;switch&#x3001;case&#x7B49;&#x5173;&#x952E;&#x5B57;&#x53CA;&#x6761;&#x4EF6;&#x5224;&#x65AD;&#x8BED;&#x53E5;&#xFF08;A?B:C&#xFF09;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-3">&#x89E3;&#x6CD5;&#x4E00;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Sum_Solution</span><span class="params">(<span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> ans = n;</span><br><span class="line">        ans &amp;&amp; (ans += Sum_Solution(n - <span class="number">1</span>));<span class="comment">//&#x5F53;ans=0&#x65F6;&#x53D1;&#x751F;&#x77ED;&#x8DEF;</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-3">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x5229;&#x7528;pow</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Sum_Solution</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> a = <span class="built_in">pow</span>(n,<span class="number">2</span>);</span><br><span class="line">        a += n;</span><br><span class="line">        a=a &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x628A;&#x4E8C;&#x53C9;&#x6811;&#x6253;&#x5370;&#x6210;&#x591A;&#x884C;">&#x628A;&#x4E8C;&#x53C9;&#x6811;&#x6253;&#x5370;&#x6210;&#x591A;&#x884C;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x4ECE;&#x4E0A;&#x5230;&#x4E0B;&#x6309;&#x5C42;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x540C;&#x4E00;&#x5C42;&#x7ED3;&#x70B9;&#x4ECE;&#x5DE6;&#x81F3;&#x53F3;&#x8F93;&#x51FA;&#x3002;&#x6BCF;&#x4E00;&#x5C42;&#x8F93;&#x51FA;&#x4E00;&#x884C;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;temp;</span><br><span class="line">        TreeNode* p;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="built_in">queue</span>&lt;TreeNode*&gt;q1, q2;</span><br><span class="line">        q1.push(pRoot);</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span> ((!q1.empty()) || (!q2.empty()))</span><br><span class="line">        {</span><br><span class="line">            temp.clear();</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (!q1.empty())</span><br><span class="line">            {</span><br><span class="line">                p = q1.front(); q1.pop();</span><br><span class="line">                temp.push_back(p-&gt;val);</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(p-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(p-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">                res.push_back(temp);</span><br><span class="line">            temp.clear();</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (!q2.empty())</span><br><span class="line">            {</span><br><span class="line">                p = q2.front(); q2.pop();</span><br><span class="line">                temp.push_back(p-&gt;val);</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(p-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(p-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                res.push_back(temp);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5220;&#x9664;&#x94FE;&#x8868;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;">&#x5220;&#x9664;&#x94FE;&#x8868;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5728;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x7684;&#x94FE;&#x8868;&#x4E2D;&#xFF0C;&#x5B58;&#x5728;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;&#xFF0C;&#x8BF7;&#x5220;&#x9664;&#x8BE5;&#x94FE;&#x8868;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;&#xFF0C;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x70B9;&#x4E0D;&#x4FDD;&#x7559;&#xFF0C;&#x8FD4;&#x56DE;&#x94FE;&#x8868;&#x5934;&#x6307;&#x9488;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x94FE;&#x8868;1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5 &#x5904;&#x7406;&#x540E;&#x4E3A; 1-&gt;2-&gt;5</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">deleteDuplication</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* T = <span class="keyword">new</span> ListNode(<span class="number">-1</span>);</span><br><span class="line">        T-&gt;next = pHead;</span><br><span class="line">        ListNode* pre = T, *cur=pHead, *next;</span><br><span class="line">        <span class="keyword">while</span> (cur!=<span class="literal">NULL</span>&amp;&amp;cur-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            next = cur-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (cur-&gt;val==next-&gt;val)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">while</span> (next != <span class="literal">NULL</span> &amp;&amp; cur-&gt;val == next-&gt;val)<span class="comment">//&#x4E00;&#x76F4;&#x5F80;&#x4E0B;&#x627E;</span></span><br><span class="line">                    next = next-&gt;next;</span><br><span class="line">                pre-&gt;next = next;</span><br><span class="line">                cur = next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                pre = cur;</span><br><span class="line">                cur = next;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> T-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4E8C;&#x53C9;&#x6811;&#x548C;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x987A;&#x5E8F;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x5E76;&#x4E14;&#x8FD4;&#x56DE;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x6811;&#x4E2D;&#x7684;&#x7ED3;&#x70B9;&#x4E0D;&#x4EC5;&#x5305;&#x542B;&#x5DE6;&#x53F3;&#x5B50;&#x7ED3;&#x70B9;&#xFF0C;&#x540C;&#x65F6;&#x5305;&#x542B;&#x6307;&#x5411;&#x7236;&#x7ED3;&#x70B9;&#x7684;&#x6307;&#x9488;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeLinkNode* <span class="title">GetNext</span><span class="params">(TreeLinkNode* pNode)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pNode == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        TreeLinkNode *res = pNode;</span><br><span class="line">        <span class="keyword">if</span> (pNode-&gt;right!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            res = pNode-&gt;right;</span><br><span class="line">            <span class="keyword">while</span> (res-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                res = res-&gt;left;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (res-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (res == res-&gt;next-&gt;left)<span class="comment">//&#x5982;&#x679C;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5176;&#x7236;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B69;&#x5B50;</span></span><br><span class="line">                <span class="keyword">return</span> res-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (res == res-&gt;next-&gt;right)</span><br><span class="line">                res = res-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x7B2C;k&#x4E2A;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x5176;&#x4E2D;&#x7684;&#x7B2C;k&#x5C0F;&#x7684;&#x7ED3;&#x70B9;&#x3002;&#x4F8B;&#x5982;&#xFF0C; &#xFF08;5&#xFF0C;3&#xFF0C;7&#xFF0C;2&#xFF0C;4&#xFF0C;6&#xFF0C;8&#xFF09; &#x4E2D;&#xFF0C;&#x6309;&#x7ED3;&#x70B9;&#x6570;&#x503C;&#x5927;&#x5C0F;&#x987A;&#x5E8F;&#x7B2C;&#x4E09;&#x5C0F;&#x7ED3;&#x70B9;&#x7684;&#x503C;&#x4E3A;4&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">KthNode</span><span class="params">(TreeNode* pRoot, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        TreeNode*res = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        res = KthNode(pRoot-&gt;left, k);</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;cnt == k)</span><br><span class="line">            <span class="keyword">return</span> pRoot;</span><br><span class="line">        res = KthNode(pRoot-&gt;right, k);</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x7684;&#x4E2D;&#x4F4D;&#x6570;">&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x7684;&#x4E2D;&#x4F4D;&#x6570;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5982;&#x4F55;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x7684;&#x4E2D;&#x4F4D;&#x6570;&#xFF1F;&#x5982;&#x679C;&#x4ECE;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x8BFB;&#x51FA;&#x5947;&#x6570;&#x4E2A;&#x6570;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x4E2D;&#x4F4D;&#x6570;&#x5C31;&#x662F;&#x6240;&#x6709;&#x6570;&#x503C;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#x4F4D;&#x4E8E;&#x4E2D;&#x95F4;&#x7684;&#x6570;&#x503C;&#x3002;&#x5982;&#x679C;&#x4ECE;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x8BFB;&#x51FA;&#x5076;&#x6570;&#x4E2A;&#x6570;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x4E2D;&#x4F4D;&#x6570;&#x5C31;&#x662F;&#x6240;&#x6709;&#x6570;&#x503C;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#x4E2D;&#x95F4;&#x4E24;&#x4E2A;&#x6570;&#x7684;&#x5E73;&#x5747;&#x503C;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528;Insert()&#x65B9;&#x6CD5;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x4F7F;&#x7528;GetMedian()&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x4E2D;&#x4F4D;&#x6570;&#x3002;</p><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;PAT-A-1057</p><p>&#x4F7F;&#x7528;multiset&#x7EF4;&#x62A4;&#x4E24;&#x4E2A;multiset upper&#x548C;lower&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (num &gt; mid)</span><br><span class="line">            upper.insert(num);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            lower.insert(num);</span><br><span class="line">        adjust();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">GetMedian</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (upper.size() == lower.size())</span><br><span class="line">            <span class="keyword">return</span>(((*upper.begin()) + (*lower.begin())) / <span class="number">2.0</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> *lower.begin();</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (upper.size() &gt; lower.size())</span><br><span class="line">        {</span><br><span class="line">            lower.insert(*upper.begin());</span><br><span class="line">            upper.erase(upper.begin());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (lower.size()&gt;upper.size()+<span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            upper.insert(*lower.begin());</span><br><span class="line">            lower.erase(*lower.begin());</span><br><span class="line">        }</span><br><span class="line">        mid = *lower.begin();</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt; upper;</span><br><span class="line">    <span class="built_in">multiset</span>&lt;<span class="keyword">int</span>, greater&lt;<span class="keyword">int</span>&gt;&gt;lower;</span><br><span class="line">    <span class="keyword">int</span> mid = <span class="number">0</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x6700;&#x5927;&#x503C;">&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x6700;&#x5927;&#x503C;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x548C;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x627E;&#x51FA;&#x6240;&#x6709;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x91CC;&#x6570;&#x503C;&#x7684;&#x6700;&#x5927;&#x503C;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x8F93;&#x5165;&#x6570;&#x7EC4;{2,3,4,2,6,2,5,1}&#x53CA;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x5927;&#x5C0F;3&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x5171;&#x5B58;&#x5728;6&#x4E2A;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x6700;&#x5927;&#x503C;&#x5206;&#x522B;&#x4E3A;{4,4,6,6,6,5}&#xFF1B; &#x9488;&#x5BF9;&#x6570;&#x7EC4;{2,3,4,2,6,2,5,1}&#x7684;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x6709;&#x4EE5;&#x4E0B;6&#x4E2A;&#xFF1A; {[2,3,4],2,6,2,5,1}&#xFF0C; {2,[3,4,2],6,2,5,1}&#xFF0C; {2,3,[4,2,6],2,5,1}&#xFF0C; {2,3,4,[2,6,2],5,1}&#xFF0C; {2,3,4,2,[6,2,5],1}&#xFF0C; {2,3,4,2,6,[2,5,1]}&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-4">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x503C;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF1A;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;max</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; maxInWindows(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; num, <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> maxID = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span> || size &gt; num.size())</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            <span class="keyword">if</span> (num[maxID] &lt; num[i])</span><br><span class="line">                maxID = i;</span><br><span class="line">        res.push_back(num[maxID]);<span class="comment">//&#x7B2C;&#x4E00;&#x4E2A;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; num.size()-size+<span class="number">1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num[i + size - <span class="number">1</span>] &gt; num[maxID])</span><br><span class="line">                maxID = i + size - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; maxID)<span class="comment">//&#x8D85;&#x8FC7;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x8303;&#x56F4;&#x4E86;</span></span><br><span class="line">            {</span><br><span class="line">                maxID = i;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; size; j++)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span> (num[j + i] &gt; num[maxID])</span><br><span class="line">                        maxID = j + i;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            res.push_back(num[maxID]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-4">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x4F7F;&#x7528;&#x53CC;&#x8FB9;&#x961F;&#x5217;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; maxInWindows(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; num, <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;q;<span class="comment">//&#x53CC;&#x8FB9;&#x961F;&#x5217;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (q.size() != <span class="number">0</span> &amp;&amp; num[q.back()] &lt;= num[i])</span><br><span class="line">                q.pop_back();</span><br><span class="line">            <span class="keyword">if</span> (q.size() != <span class="number">0</span> &amp;&amp; i - q.front() + <span class="number">1</span> &gt; size)</span><br><span class="line">                q.pop_front();</span><br><span class="line">            q.push_back(i);</span><br><span class="line">            <span class="keyword">if</span> (size != <span class="number">0</span> &amp;&amp; i + <span class="number">1</span> &gt;= size)</span><br><span class="line">                res.push_back(num[q.front()]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6570;&#x7EC4;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;">&#x6570;&#x7EC4;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x5728;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;&#x91CC;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x90FD;&#x5728;0&#x5230;n-1&#x7684;&#x8303;&#x56F4;&#x5185;&#x3002; &#x6570;&#x7EC4;&#x4E2D;&#x67D0;&#x4E9B;&#x6570;&#x5B57;&#x662F;&#x91CD;&#x590D;&#x7684;&#xFF0C;&#x4F46;&#x4E0D;&#x77E5;&#x9053;&#x6709;&#x51E0;&#x4E2A;&#x6570;&#x5B57;&#x662F;&#x91CD;&#x590D;&#x7684;&#x3002;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x91CD;&#x590D;&#x51E0;&#x6B21;&#x3002;&#x8BF7;&#x627E;&#x51FA;&#x6570;&#x7EC4;&#x4E2D;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x8F93;&#x5165;&#x957F;&#x5EA6;&#x4E3A;7&#x7684;&#x6570;&#x7EC4;{2,3,1,0,2,5,3}&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x91CD;&#x590D;&#x7684;&#x6570;&#x5B57;2&#x3002;</p><p>&#x5F00;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// Parameters:</span></span><br><span class="line">    <span class="comment">//        numbers:     an array of integers</span></span><br><span class="line">    <span class="comment">//        length:      the length of array numbers</span></span><br><span class="line">    <span class="comment">//        duplication: (Output) the duplicated number in the array number</span></span><br><span class="line">    <span class="comment">// Return value:       true if the input is valid, and there are some duplications in the array number</span></span><br><span class="line">    <span class="comment">//                     otherwise false</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">duplicate</span><span class="params">(<span class="keyword">int</span> numbers[], <span class="keyword">int</span> length, <span class="keyword">int</span>* duplication)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v(length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (v[numbers[i]]++ != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                *duplication = numbers[i];</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6784;&#x5EFA;&#x4E58;&#x79EF;&#x6570;&#x7EC4;">&#x6784;&#x5EFA;&#x4E58;&#x79EF;&#x6570;&#x7EC4;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;A[0,1,...,n-1],&#x8BF7;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;B[0,1,...,n-1],&#x5176;&#x4E2D;B&#x4E2D;&#x7684;&#x5143;&#x7D20;B[i]=A[0]<em>A[1]</em>...<em>A[i-1]</em>A[i+1]<em>...</em>A[n-1]&#x3002;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x9664;&#x6CD5;&#x3002;</p><p>&#x601D;&#x8DEF;&#x5206;&#x6790;&#xFF1A;</p><p><分析>&#xFF1A;</分析></p><p>&#x89E3;&#x91CA;&#x4E0B;&#x4EE3;&#x7801;&#xFF0C;&#x8BBE;&#x6709;&#x6570;&#x7EC4;&#x5927;&#x5C0F;&#x4E3A;5&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;for&#x5FAA;&#x73AF;</p><p>&#x7B2C;&#x4E00;&#x6B65;&#xFF1A;b[0] = 1;</p><p>&#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;b[1] = b[0] * a[0] = a[0]</p><p>&#x7B2C;&#x4E09;&#x6B65;&#xFF1A;b[2] = b[1] * a[1] = a[0] * a[1];</p><p>&#x7B2C;&#x56DB;&#x6B65;&#xFF1A;b[3] = b[2] * a[2] = a[0] * a[1] * a[2];</p><p>&#x7B2C;&#x4E94;&#x6B65;&#xFF1A;b[4] = b[3] * a[3] = a[0] * a[1] * a[2] * a[3];</p><p>&#x7136;&#x540E;&#x5BF9;&#x4E8E;&#x7B2C;&#x4E8C;&#x4E2A;for&#x5FAA;&#x73AF;</p><p>&#x7B2C;&#x4E00;&#x6B65;</p><p>temp *= a[4] = a[4];</p><p>b[3] = b[3] * temp = a[0] * a[1] * a[2] * a[4];</p><p>&#x7B2C;&#x4E8C;&#x6B65;</p><p>temp <em>= a[3] = a[4] </em> a[3];</p><p>b[2] = b[2] * temp = a[0] * a[1] * a[4] * a[3];</p><p>&#x7B2C;&#x4E09;&#x6B65;</p><p>temp <em>= a[2] = a[4] </em> a[3] * a[2];</p><p>b[1] = b[1] * temp = a[0] * a[4] * a[3] * a[2];</p><p>&#x7B2C;&#x56DB;&#x6B65;</p><p>temp <em>= a[1] = a[4] </em> a[3] * a[2] * a[1];</p><p>b[0] = b[0] * temp = a[4] * a[3] * a[2] * a[1];</p><p>&#x7531;&#x6B64;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x4ECE;b[4]&#x5230;b[0]&#x5747;&#x5DF2;&#x7ECF;&#x5F97;&#x5230;&#x6B63;&#x786E;&#x8BA1;&#x7B97;&#x3002;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class Solution </span><br><span class="line">{</span><br><span class="line">public:</span><br><span class="line">    vector&lt;int&gt; multiply(const vector&lt;int&gt;&amp; A) </span><br><span class="line">    {</span><br><span class="line">        vector&lt;int&gt;b(A.size());</span><br><span class="line">        if (A.size() == 0)</span><br><span class="line">            return b;</span><br><span class="line">        b[0] = 1;</span><br><span class="line">        for (int i = 0; i &lt; A.size()-1; i++)</span><br><span class="line">            b[i + 1] = b[i]*A[i];</span><br><span class="line">        int temp = 1;</span><br><span class="line">        for (int i = A.size()-1; i &gt;= 0; i--)</span><br><span class="line">        {</span><br><span class="line">            b[i] = b[i] * temp;</span><br><span class="line">            temp *= A[i];</span><br><span class="line">        }</span><br><span class="line">        returnb;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x5B57;&#x7B26;">&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x5B57;&#x7B26;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x7528;&#x6765;&#x627E;&#x51FA;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x4ECE;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x53EA;&#x8BFB;&#x51FA;&#x524D;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&quot;go&quot;&#x65F6;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#x662F;&quot;g&quot;&#x3002;&#x5F53;&#x4ECE;&#x8BE5;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x8BFB;&#x51FA;&#x524D;&#x516D;&#x4E2A;&#x5B57;&#x7B26;&#x201C;google&quot;&#x65F6;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#x662F;&quot;l&quot;&#x3002;</p><p>&#x8F93;&#x51FA;&#x63CF;&#x8FF0;:</p><p>&#x5982;&#x679C;&#x5F53;&#x524D;&#x5B57;&#x7B26;&#x6D41;&#x6CA1;&#x6709;&#x5B58;&#x5728;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x8FD4;&#x56DE;#&#x5B57;&#x7B26;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-5">&#x89E3;&#x6CD5;&#x4E00;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(n)&#x7684;&#x89E3;&#x6CD5;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//Insert one char from stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        s += ch;</span><br><span class="line">        cnt[ch]++;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//return the first appearence once char in current stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">FirstAppearingOnce</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.size(); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (cnt[s[i]] == <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> s[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos;#&apos;</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span> cnt[<span class="number">260</span>] = { <span class="number">0</span> };</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-5">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#x73B0;&#x8BF4;&#x660E;&#x4E3A;&#x4EC0;&#x4E48;&#x662F;O(1)&#xFF0C;&#x5176;&#x5B9E;&#x5224;&#x65AD;&#x90E8;&#x5206;&#x5728;Insert&#x90E8;&#x5206;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x3002;</p><p>&#x7531;&#x4E8E;&#x6700;&#x591A;&#x662F;&#x6709;128&#x4E2A;ascii&#x7801;&#xFF0C;&#x6240;&#x4EE5;&#x961F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x6700;&#x5927;&#x4E3A;128.&#x6545;&#x9650;&#x5B9A;&#x5728;&#x4E86;O(1)&#x7684;&#x65F6;&#x95F4;&#x8303;&#x56F4;&#x5185;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(1)&#x7684;&#x89E3;&#x6CD5;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//Insert one char from stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        cnt[ch]++;</span><br><span class="line">        <span class="keyword">if</span> (cnt[ch] == <span class="number">1</span>)</span><br><span class="line">            q.push(ch);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//return the first appearence once char in current stringstream</span></span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">FirstAppearingOnce</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">while</span> (!q.empty() &amp;&amp; cnt[q.front()] != <span class="number">1</span>)</span><br><span class="line">            q.pop();</span><br><span class="line">        <span class="keyword">if</span> (!q.empty())</span><br><span class="line">            <span class="keyword">return</span> q.front();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos;#&apos;</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span> cnt[<span class="number">260</span>] = { <span class="number">0</span> };</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">char</span>&gt; q;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x94FE;&#x8868;&#x4E2D;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x7ED3;&#x70B9;">&#x94FE;&#x8868;&#x4E2D;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x7ED3;&#x70B9;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x7ED9;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;&#x82E5;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x73AF;&#xFF0C;&#x8BF7;&#x627E;&#x51FA;&#x8BE5;&#x94FE;&#x8868;&#x7684;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x7ED3;&#x70B9;&#xFF0C;&#x5426;&#x5219;&#xFF0C;&#x8F93;&#x51FA;null&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x9898;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x8981;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x73AF;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x73AF;&#xFF0C;&#x627E;&#x51FA;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x70B9;&#x3002;</p><p>&#x5224;&#x65AD;&#x6709;&#x6CA1;&#x6709;&#x73AF;&#x53EF;&#x4EE5;&#x7528;&#x5FEB;&#x6162;&#x6307;&#x9488;&#x3002;</p><p>&#x5206;&#x6790;&#xFF1A;</p><figure><img src="/posts/c812c7f8/1557257019018.png" alt="1557257019018"><figcaption>1557257019018</figcaption></figure><p>&#x5047;&#x8BBE;x&#x4E3A;&#x73AF;&#x524D;&#x9762;&#x7684;&#x8DEF;&#x7A0B;&#xFF08;&#x9ED1;&#x8272;&#x8DEF;&#x7A0B;&#xFF09;&#xFF0C;a&#x4E3A;&#x73AF;&#x5165;&#x53E3;&#x5230;&#x76F8;&#x9047;&#x70B9;&#x7684;&#x8DEF;&#x7A0B;&#xFF08;&#x84DD;&#x8272;&#x8DEF;&#x7A0B;&#xFF0C;&#x5047;&#x8BBE;&#x987A;&#x65F6;&#x9488;&#x8D70;&#xFF09;&#xFF0C; c&#x4E3A;&#x73AF;&#x7684;&#x957F;&#x5EA6;&#xFF08;&#x84DD;&#x8272;+&#x6A59;&#x8272;&#x8DEF;&#x7A0B;&#xFF09;</p><p>&#x5F53;&#x5FEB;&#x6162;&#x6307;&#x9488;&#x76F8;&#x9047;&#x7684;&#x65F6;&#x5019;&#xFF1A;</p><p>&#x6B64;&#x65F6;&#x6162;&#x6307;&#x9488;&#x8D70;&#x7684;&#x8DEF;&#x7A0B;&#x4E3A;Sslow = x + m * c + a</p><p>&#x5FEB;&#x6307;&#x9488;&#x8D70;&#x7684;&#x8DEF;&#x7A0B;&#x4E3A;Sfast = x + n * c + a</p><p>2 *slow = fast</p><p>2 * ( x + m*c + a ) = (x + n *c + a)</p><p>&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#x51FA;&#xFF1A;</p><p>x = (n - 2 * m )*c - a</p><p>= (n - 2 *m -1 )*c + c - a</p><p>&#x5373;&#x73AF;&#x524D;&#x9762;&#x7684;&#x8DEF;&#x7A0B; = &#x6570;&#x4E2A;&#x73AF;&#x7684;&#x957F;&#x5EA6;&#xFF08;&#x4E3A;&#x53EF;&#x80FD;&#x4E3A;0&#xFF09; + c - a</p><p>&#x4EC0;&#x4E48;&#x662F;c - a&#xFF1F;&#x8FD9;&#x662F;&#x76F8;&#x9047;&#x70B9;&#x540E;&#xFF0C;&#x73AF;&#x540E;&#x9762;&#x90E8;&#x5206;&#x7684;&#x8DEF;&#x7A0B;&#x3002;&#xFF08;&#x6A59;&#x8272;&#x8DEF;&#x7A0B;&#xFF09;</p><p>&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BA9;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x4ECE;&#x8D77;&#x70B9;A&#x5F00;&#x59CB;&#x8D70;&#xFF0C;&#x8BA9;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x4ECE;&#x76F8;&#x9047;&#x70B9;B&#x5F00;&#x59CB;&#x7EE7;&#x7EED;&#x5F80;&#x540E;&#x8D70;&#xFF0C;</p><p>2&#x4E2A;&#x6307;&#x9488;&#x901F;&#x5EA6;&#x4E00;&#x6837;&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x5F53;&#x4ECE;&#x539F;&#x70B9;&#x7684;&#x6307;&#x9488;&#x8D70;&#x5230;&#x73AF;&#x5165;&#x53E3;&#x70B9;&#x7684;&#x65F6;&#x5019;&#xFF08;&#x6B64;&#x65F6;&#x521A;&#x597D;&#x8D70;&#x4E86;x&#xFF09;</p><p>&#x4ECE;&#x76F8;&#x9047;&#x70B9;&#x5F00;&#x59CB;&#x8D70;&#x7684;&#x90A3;&#x4E2A;&#x6307;&#x9488;&#x4E5F;&#x4E00;&#x5B9A;&#x521A;&#x597D;&#x5230;&#x8FBE;&#x73AF;&#x5165;&#x53E3;&#x70B9;&#x3002;</p><p>&#x6240;&#x4EE5;2&#x8005;&#x4F1A;&#x76F8;&#x9047;&#xFF0C;&#x4E14;&#x6070;&#x597D;&#x76F8;&#x9047;&#x5728;&#x73AF;&#x7684;&#x5165;&#x53E3;&#x70B9;&#x3002;</p><p>&#x6700;&#x540E;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x627E;&#x73AF;&#x7684;&#x7B97;&#x6CD5;&#x590D;&#x6742;&#x5EA6;&#x4E3A;&#xFF1A;</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF1A;O(n)</p><p>&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF1A;O(1)</p><p>&#x4E00;&#x5171;&#x4E09;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x524D;&#x6587;&#x6240;&#x8FF0;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x65AD;&#x94FE;&#x6CD5;&#xFF0C;&#x53EA;&#x6709;&#x5728;&#x6709;&#x73AF;&#x7684;&#x65F6;&#x5019;&#x624D;&#x6210;&#x7ACB;&#xFF0C;&#x6CA1;&#x6709;&#x73AF;&#x5219;&#x6709;&#x9519;&#x8BEF;&#x3002;</p><p>&#x7B2C;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x662F;&#x5B58;&#x50A8;&#x5730;&#x5740;&#x6CD5;&#xFF0C;&#x4F7F;&#x7528;set&#x5B58;&#x50A8;&#x5730;&#x5740;&#x3002;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x8868;&#x793A;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x662F;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">EntryNodeOfLoop</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span> || pHead-&gt;next == <span class="literal">NULL</span> || pHead-&gt;next-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//&#x5148;&#x5224;&#x65AD;&#x6709;&#x6CA1;&#x6709;&#x73AF;</span></span><br><span class="line">        ListNode* fast = pHead-&gt;next-&gt;next, *slow = pHead-&gt;next;</span><br><span class="line">        <span class="keyword">while</span> (fast!=slow)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (fast-&gt;next != <span class="literal">NULL</span> &amp;&amp; fast-&gt;next-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">            {</span><br><span class="line">                fast = fast-&gt;next-&gt;next;</span><br><span class="line">                slow = slow-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">NULL</span>;<span class="comment">//&#x8868;&#x793A;&#x6CA1;&#x6709;&#x73AF;&#xFF0C;&#x8FD4;&#x56DE;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x5FAA;&#x73AF;&#x8DF3;&#x51FA;&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x6B64;&#x65F6;&#xFF0C;fast=slow</span></span><br><span class="line">        fast = pHead;</span><br><span class="line">        <span class="keyword">while</span> (fast != slow)</span><br><span class="line">        {</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x5FAA;&#x73AF;&#x8DF3;&#x51FA;&#x8868;&#x793A;&#x5728;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x4E86;&#xFF0C;&#x4E14;&#x6B64;&#x65F6;fast=slow</span></span><br><span class="line">        <span class="keyword">return</span> fast;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x65AD;&#x94FE;&#x6CD5;&#x3002;&#x9002;&#x7528;&#x4E8E;&#x4E00;&#x5B9A;&#x6709;&#x73AF;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x73AF;&#xFF0C;&#x5219;&#x4F1A;&#x6709;&#x9519;&#x8BEF;&#x3002;&#x725B;&#x5BA2;&#x7684;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x4E0D;&#x4E25;&#x8C28;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x80FD;AC&#x7684;</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">EntryNodeOfLoop2</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span> || pHead-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* fast = pHead-&gt;next, *slow = pHead;</span><br><span class="line">        <span class="keyword">while</span> (fast!=<span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            slow-&gt;next = <span class="literal">NULL</span>;<span class="comment">//&#x65AD;&#x5F00;</span></span><br><span class="line">            slow = fast;</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5B58;&#x5730;&#x5740;&#x6CD5;&#xFF0C;&#x628A;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x5730;&#x5740;&#x7528;set&#x5B58;&#x50A8;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x8868;&#x793A;&#x6709;&#x73AF;&#xFF0C;&#x4E14;&#x662F;&#x73AF;&#x7684;&#x8D77;&#x59CB;&#x70B9;</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">EntryNodeOfLoop3</span><span class="params">(ListNode* pHead)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="built_in">set</span>&lt;ListNode*&gt; s;</span><br><span class="line">        <span class="keyword">while</span> (pHead != <span class="literal">NULL</span> &amp;&amp; (!s.count(pHead)))<span class="comment">//&#x5224;&#x65AD;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5426;&#x66FE;&#x51FA;&#x73B0;&#x8FC7;</span></span><br><span class="line">        {</span><br><span class="line">            s.insert(pHead);</span><br><span class="line">            pHead = pHead-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (pHead == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> pHead;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x6309;&#x4E4B;&#x5B57;&#x5F62;&#x987A;&#x5E8F;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;">&#x6309;&#x4E4B;&#x5B57;&#x5F62;&#x987A;&#x5E8F;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6309;&#x7167;&#x4E4B;&#x5B57;&#x5F62;&#x6253;&#x5370;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5373;&#x7B2C;&#x4E00;&#x884C;&#x6309;&#x7167;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x7B2C;&#x4E8C;&#x5C42;&#x6309;&#x7167;&#x4ECE;&#x53F3;&#x81F3;&#x5DE6;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x7B2C;&#x4E09;&#x884C;&#x6309;&#x7167;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x5176;&#x4ED6;&#x884C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;</p><h2 id="&#x89E3;&#x6CD5;&#x4E00;-6">&#x89E3;&#x6CD5;&#x4E00;</h2><p>&#x7528;&#x4E24;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x662F;&#x5C42;&#x6B21;&#x904D;&#x5386;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x5728;&#x5076;&#x6570;&#x5C42;&#x90E8;&#x5206;&#xFF0C;reverse&#x4E4B;&#x540E;&#x518D;&#x5B58;&#x5165;&#x3002;&#x8FD9;&#x4E2A;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x597D;&#x7406;&#x89E3;&#x7684;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        TreeNode* cur=pRoot;</span><br><span class="line">        q1.push(cur);</span><br><span class="line">        <span class="keyword">while</span> (!q1.empty()||!q2.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (!q1.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = q1.front(); q1.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q2.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            res.push_back(v);</span><br><span class="line">            v.clear();</span><br><span class="line">            <span class="keyword">while</span> (!q2.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = q2.front(); q2.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q1.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (v.size() != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                reverse(v.begin(), v.end());</span><br><span class="line">                res.push_back(v);</span><br><span class="line">                v.clear();</span><br><span class="line">            }</span><br><span class="line">            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">//q1&#x4ECE;&#x5DE6;&#x5F80;&#x53F3;&#xFF0C;q2&#x4ECE;&#x53F3;&#x5411;&#x5DE6;</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;TreeNode*&gt; q1, q2;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E8C;-6">&#x89E3;&#x6CD5;&#x4E8C;</h2><p>&#xFF08;&#x6211;&#x611F;&#x89C9;&#x6BD4;&#x8F83;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x6211;&#x9762;&#x963F;&#x91CC;&#x7684;&#x65F6;&#x5019;&#x505A;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x5F88;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x7528;&#x4E00;&#x4E2A;stack&#x548C;&#x4E00;&#x4E2A;queue&#xFF0C;stack&#x7528;&#x4E8E;&#x7FFB;&#x8F6C;&#xFF09;</p><p>&#x597D;&#x5904;&#x662F;&#x7701;&#x53BB;&#x4E86;reverse&#x73AF;&#x8282;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E00;&#x4E2A;reverse&#x4E5F;&#x6CA1;&#x591A;&#x5C11;&#x65F6;&#x95F4;&#xFF0C;&#x5199;&#x7684;&#x662F;&#x771F;TM&#x96BE;&#x61C2;&#xFF0C;&#x6211;&#x81EA;&#x5DF1;&#x56DE;&#x8FC7;&#x5934;&#x6765;&#x770B;&#x81EA;&#x5DF1;&#x90FD;&#x770B;&#x4E0D;&#x660E;&#x767D;&#x4E86;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        que.push(pRoot);</span><br><span class="line">    L1:</span><br><span class="line">        <span class="keyword">while</span> (!que.empty())</span><br><span class="line">        {</span><br><span class="line">            p = que.front(); que.pop();</span><br><span class="line">            sta.push(p);</span><br><span class="line">            v.push_back(p-&gt;val);</span><br><span class="line">            <span class="comment">//cout &lt;&lt; p-&gt;val;//&#x8BBF;&#x95EE;&#x4E86;</span></span><br><span class="line">        }</span><br><span class="line">        res.push_back(v);</span><br><span class="line">        v.clear();</span><br><span class="line">        flag = !flag;</span><br><span class="line">        <span class="keyword">while</span> (!sta.empty())</span><br><span class="line">        {</span><br><span class="line">            p = sta.top(); sta.pop();</span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;right);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;left);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (p-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    que.push(p-&gt;right);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (sta.empty() &amp;&amp; que.empty())</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">goto</span> L1;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">1</span>;<span class="comment">//1&#x8868;&#x793A;&#x4ECE;&#x5DE6;&#x5F80;&#x53F3;</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;TreeNode*&gt;que;</span><br><span class="line">    <span class="built_in">stack</span>&lt;TreeNode*&gt;sta;</span><br><span class="line">    TreeNode* p;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x4E09;">&#x89E3;&#x6CD5;&#x4E09;</h2><p>&#x4F7F;&#x7528;&#x6808;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;reverse</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution3</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        TreeNode* cur = pRoot;</span><br><span class="line">        s1.push(cur);</span><br><span class="line">        <span class="keyword">while</span> (!s1.empty()||!s2.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span> (!s1.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = s1.top(); s1.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    s2.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    s2.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            res.push_back(v);</span><br><span class="line">            v.clear();</span><br><span class="line">            <span class="keyword">while</span> (!s2.empty())</span><br><span class="line">            {</span><br><span class="line">                cur = s2.top(); s2.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    s1.push(cur-&gt;right);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    s1.push(cur-&gt;left);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (v.size() != <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                res.push_back(v);</span><br><span class="line">                v.clear();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;TreeNode*&gt;s1, s2;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h2 id="&#x89E3;&#x6CD5;&#x56DB;">&#x89E3;&#x6CD5;&#x56DB;</h2><p>&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x4F7F;&#x7528;reverse</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4F7F;&#x7528;reverse</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution4</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; Print(TreeNode* pRoot) </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;res;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        TreeNode* cur = pRoot;</span><br><span class="line">        q.push(cur);</span><br><span class="line">        <span class="keyword">int</span> size;</span><br><span class="line">        <span class="keyword">while</span> (!q.empty())</span><br><span class="line">        {</span><br><span class="line">            v.clear();</span><br><span class="line">            size = q.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            {</span><br><span class="line">                cur = q.front(); q.pop();</span><br><span class="line">                v.push_back(cur-&gt;val);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;left != <span class="literal">NULL</span>)</span><br><span class="line">                    q.push(cur-&gt;left);</span><br><span class="line">                <span class="keyword">if</span> (cur-&gt;right != <span class="literal">NULL</span>)</span><br><span class="line">                    q.push(cur-&gt;right);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">                reverse(v.begin(), v.end());</span><br><span class="line">            res.push_back(v);</span><br><span class="line">            flag = !flag;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">queue</span>&lt;TreeNode*&gt; q;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5BF9;&#x79F0;&#x7684;&#x4E8C;&#x53C9;&#x6811;">&#x5BF9;&#x79F0;&#x7684;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x5224;&#x65AD;&#x4E00;&#x9897;&#x4E8C;&#x53C9;&#x6811;&#x662F;&#x4E0D;&#x662F;&#x5BF9;&#x79F0;&#x7684;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x4E8C;&#x53C9;&#x6811;&#x540C;&#x6B64;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x955C;&#x50CF;&#x662F;&#x540C;&#x6837;&#x7684;&#xFF0C;&#x5B9A;&#x4E49;&#x5176;&#x4E3A;&#x5BF9;&#x79F0;&#x7684;&#x3002;</p><p>&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#xFF1A;</p><p>&#x5DE6;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x503C;&#x76F8;&#x7B49;&#x3002;&#x4E14;&#x5DE6;&#x53F3;&#x5B50;&#x6811;&#x5FC5;&#x987B;&#x540C;&#x65F6;&#x4E3A;&#x7A7A;&#x3002;</p><p>&#x7531;&#x4E8E;&#x53EA;&#x662F;&#x8FD9;&#x68F5;&#x6811;&#x7684;&#x5BF9;&#x79F0;&#xFF0C;&#x6240;&#x4EE5;&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x540C;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x6210;&#x955C;&#x50CF;&#x3002;</p><p>&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x540C;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x6210;&#x955C;&#x50CF;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isSymmetrical</span><span class="params">(TreeNode* pRoot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> check(pRoot-&gt;left, pRoot-&gt;right);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(TreeNode* left, TreeNode* right)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (left == <span class="literal">NULL</span>)<span class="comment">//&#x5DE6;&#x5B69;&#x5B50;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x53F3;&#x5B69;&#x5B50;&#x4E5F;&#x8981;&#x4E3A;&#x7A7A;</span></span><br><span class="line">            <span class="keyword">return</span> right == <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (right == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (left-&gt;val != right-&gt;val)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> check(left-&gt;right, right-&gt;left) &amp;&amp; check(left-&gt;left, right-&gt;right);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;">&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;</h1><p>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</p><p>&#x8BF7;&#x5B9E;&#x73B0;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x7528;&#x6765;&#x5E8F;&#x5217;&#x5316;&#x548C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;</p><p>&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;&#x5C31;&#x662F;&#x628A;&#x4E8C;&#x53C9;&#x6811;&#x4EE5;&#x67D0;&#x79CD;&#x987A;&#x5E8F;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x524D;&#x5E8F;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x4E2D;&#x5E8F;&#xFF0C;&#x540E;&#x7EED;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x5C42;&#x6B21;&#x904D;&#x5386;&#x3002;</p><p>&#x9898;&#x76EE;&#x4E2D;&#x7ED9;&#x7684;&#x8FD4;&#x56DE;&#x7C7B;&#x578B;&#x662F;char*&#x7C7B;&#x578B;&#xFF0C;&#x4E0D;&#x6EE1;&#x8DB3;&#x6211;&#x4EEC;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x5F3A;&#x5236;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x4E00;&#x4E0B;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;buf;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">encode</span><span class="params">(TreeNode* cur)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (cur == <span class="literal">NULL</span>)</span><br><span class="line">            buf.push_back(<span class="number">0xFFFFF</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            buf.push_back(cur-&gt;val);</span><br><span class="line">            encode(cur-&gt;left);</span><br><span class="line">            encode(cur-&gt;right);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function">TreeNode* <span class="title">decode</span><span class="params">(<span class="keyword">int</span>* &amp;p)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">if</span> (*p==<span class="number">0xFFFFF</span>)</span><br><span class="line">        {</span><br><span class="line">            ++p;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        }</span><br><span class="line">        TreeNode* res = <span class="keyword">new</span> TreeNode(*p);</span><br><span class="line">        p++;</span><br><span class="line">        res-&gt;left = decode(p);</span><br><span class="line">        res-&gt;right = decode(p);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">char</span>* <span class="title">Serialize</span><span class="params">(TreeNode *root)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        buf.clear();</span><br><span class="line">        encode(root);</span><br><span class="line">        <span class="keyword">int</span> *res = <span class="keyword">new</span> <span class="keyword">int</span>[buf.size()];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; buf.size(); i++)</span><br><span class="line">            res[i] = buf[i];</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">char</span>*)res;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Deserialize</span><span class="params">(<span class="keyword">char</span> *str)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">int</span> *p = (<span class="keyword">int</span>*)str;</span><br><span class="line">        <span class="keyword">return</span> decode(p);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x77E5;&#x9053;&#x524D;&#x5E8F;/&#x540E;&#x7EED;+&#x4E2D;&#x5E8F;&#xFF0C;&#x53EA;&#x77E5;&#x9053;&#x524D;&#x5E8F;+&#x540E;&#x5E8F;&#x662F;&#x4E0D;&#x53EF;&#x4EE5;&#x7684;&#x3002;</p><p>&#x4F46;&#x662F;&#x5728;&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7ED9;&#x51FA;&#x4E86;&#x7A7A;&#x8282;&#x70B9;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x524D;&#x5E8F;&#x6765;&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;&#x3002;</p><p>&#x5F69;&#x86CB;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> TreeNode* pnode;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    pnode hehe;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">char</span>* <span class="title">Serialize</span><span class="params">(TreeNode *root)</span> </span>{    </span><br><span class="line">        hehe = root;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(*^_^*)&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">TreeNode* <span class="title">Deserialize</span><span class="params">(<span class="keyword">char</span> *str)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> hehe;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><h1 id="&#x4E0D;&#x7528;&#x52A0;&#x51CF;&#x4E58;&#x9664;&#x505A;&#x52A0;&#x6CD5;">&#x4E0D;&#x7528;&#x52A0;&#x51CF;&#x4E58;&#x9664;&#x505A;&#x52A0;&#x6CD5;</h1><ol type="1"><li>&#x4E24;&#x4E2A;&#x6570;&#x5F02;&#x6216;&#xFF1A;&#x76F8;&#x5F53;&#x4E8E;&#x6BCF;&#x4E00;&#x4F4D;&#x76F8;&#x52A0;&#xFF0C;&#x800C;&#x4E0D;&#x8003;&#x8651;&#x8FDB;&#x4F4D;&#xFF1B;</li><li>&#x4E24;&#x4E2A;&#x6570;&#x76F8;&#x4E0E;&#xFF0C;&#x5E76;&#x5DE6;&#x79FB;&#x4E00;&#x4F4D;&#xFF1A;&#x76F8;&#x5F53;&#x4E8E;&#x6C42;&#x5F97;&#x8FDB;&#x4F4D;&#xFF1B;</li><li>&#x5C06;&#x4E0A;&#x8FF0;&#x4E24;&#x6B65;&#x7684;&#x7ED3;&#x679C;&#x76F8;&#x52A0;</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        <span class="keyword">while</span> (num2 != <span class="number">0</span>) </span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> sum = num1 ^ num2;</span><br><span class="line">            <span class="keyword">int</span> carray = (num1 &amp; num2) &lt;&lt; <span class="number">1</span>;</span><br><span class="line">            num1 = sum;</span><br><span class="line">            num2 = carray;</span><br><span class="line">        }</span><br><span class="line">    <span class="keyword">return</span> num1;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x5F69;&#x86CB;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">        _asm</span><br><span class="line">        {</span><br><span class="line">            MOV EAX, a</span><br><span class="line">            MOV ECX, b</span><br><span class="line">            ADD EAX, ECX</span><br><span class="line">            MOV a, EAX</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>![&#x8BA1;&#x7B97;&#x673A;&#x751F;&#x6210;&#x4E86;&#x53EF;&#x9009;&#x6587;&#x5B57;: &#x4E0D;&#x52A0;&#x51CF;&#x4E56;&#x9664;&#x505A;&#x529B;Lli&#x53BB; MOVECX&#xFF0C; ADDEAX (&#x5251;&#x6307;offer&#x9898;&#x89E3;/clip_image001.png) 21 24 30 36 37 39 40 41 46 EclassSolution public: intadd(inta, asm MOV EAX intb) b ECX D:]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/ta/coding-interviews&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x9898;&amp;#x76EE;&amp;#x94FE;&amp;#x63A5;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8D85;&amp;#x8D8A;&amp;#x4FDD;&amp;#x4F51;&amp;#xFF0C;offer++&lt;/p&gt;
    
    </summary>
    
      <category term="剑指Offer" scheme="https://www.windsings.com/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="剑指Offer" scheme="https://www.windsings.com/tags/%E5%89%91%E6%8C%87Offer/"/>
    
  </entry>
  
  <entry>
    <title>分布式与云计算复习笔记</title>
    <link href="https://www.windsings.com//posts/64e8389b/"/>
    <id>https://www.windsings.com//posts/64e8389b/</id>
    <published>2019-04-17T14:24:25.000Z</published>
    <updated>2019-04-21T07:23:42.037Z</updated>
    
    <content type="html"><![CDATA[<p>&#x8FD9;&#x4E2A;&#x592A;&#x96BE;&#x4E86;&#x6211;&#x4EEC;&#x4E0D;&#x8BB2;&#xFF1B;&#x8FD9;&#x4E2A;&#x592A;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x4E0D;&#x8BB2;&#xFF1B;&#x8FD9;&#x4E2A;.....&#xFF08;&#x559D;&#x53E3;&#x6C34;&#xFF0C;&#x70B9;&#x51FB;&#x9875;PPT&#xFF09;&#x4E5F;&#x4E0D;&#x8BB2;&#x3002; <a id="more"></a></p><h1 id="&#x7B2C;&#x4E00;&#x7AE0;-&#x7EEA;&#x8BBA;">&#x7B2C;&#x4E00;&#x7AE0; &#x7EEA;&#x8BBA;</h1><p><img src="/posts/64e8389b/&#x5206;&#x5E03;&#x5F0F;&#x7B2C;&#x4E00;&#x7AE0;.png"></p><h1 id="&#x7B2C;&#x4E03;&#x7AE0;-&#x4E00;&#x81F4;&#x6027;&#x548C;&#x590D;&#x5236;">&#x7B2C;&#x4E03;&#x7AE0; &#x4E00;&#x81F4;&#x6027;&#x548C;&#x590D;&#x5236;</h1><p><img src="/posts/64e8389b/&#x5206;&#x5E03;&#x5F0F;&#x7B2C;&#x4E03;&#x7AE0;.png"></p><h1 id="&#x7B2C;&#x516B;&#x7AE0;-&#x5BB9;&#x9519;">&#x7B2C;&#x516B;&#x7AE0; &#x5BB9;&#x9519;</h1><p><img src="/posts/64e8389b/&#x5206;&#x5E03;&#x5F0F;&#x7B2C;&#x516B;&#x7AE0;.png"></p><h1 id="&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E00;&#x7AE0;">&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E00;&#x7AE0;</h1><p><img src="/posts/64e8389b/&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E00;&#x7AE0;.png"></p><h1 id="&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E8C;&#x7AE0;">&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E8C;&#x7AE0;</h1><p><img src="/posts/64e8389b/&#x4E91;&#x8BA1;&#x7B97;&#x7B2C;&#x4E8C;&#x7AE0;.png"></p><h1 id="&#x590D;&#x4E60;&#x8D44;&#x6599;&#x8865;&#x5145;">&#x590D;&#x4E60;&#x8D44;&#x6599;&#x8865;&#x5145;</h1><p><a href="https://dev.tencent.com/s/0a92a2e2-3f72-44f6-972a-3615129f8acd" target="_blank" rel="noopener">&#x5206;&#x5E03;&#x5F0F;&#x590D;&#x4E60;&#x8D44;&#x6599;&#x8865;&#x5145;</a></p><h1 id="&#x81F4;&#x8C22;">&#x81F4;&#x8C22;</h1><p>&#x611F;&#x8C22;<a href="http://www.keyanjie.net/" target="_blank" rel="noopener">Alan Ke</a>&#x3001;&#x82CF;&#x7490;&#x5CA9;&#x3001;<a href="https://github.com/wangyu-/" target="_blank" rel="noopener">&#x6C6A;&#x5B87;</a>&#x3001;&#x738B;&#x8BD7;&#x8BD7;&#x3001;<a href="http://cjcongjia.cn/" target="_blank" rel="noopener">&#x4ECE;&#x5609;</a>&#x7B49;&#x540C;&#x5B66;&#x7684;&#x652F;&#x6301;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x592A;&amp;#x96BE;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x8BB2;&amp;#xFF1B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x592A;&amp;#x7B80;&amp;#x5355;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E5F;&amp;#x4E0D;&amp;#x8BB2;&amp;#xFF1B;&amp;#x8FD9;&amp;#x4E2A;.....&amp;#xFF08;&amp;#x559D;&amp;#x53E3;&amp;#x6C34;&amp;#xFF0C;&amp;#x70B9;&amp;#x51FB;&amp;#x9875;PPT&amp;#xFF09;&amp;#x4E5F;&amp;#x4E0D;&amp;#x8BB2;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://www.windsings.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="分布式" scheme="https://www.windsings.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="云计算" scheme="https://www.windsings.com/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
      <category term="复习笔记" scheme="https://www.windsings.com/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="丁菁" scheme="https://www.windsings.com/tags/%E4%B8%81%E8%8F%81/"/>
    
      <category term="随机授课" scheme="https://www.windsings.com/tags/%E9%9A%8F%E6%9C%BA%E6%8E%88%E8%AF%BE/"/>
    
      <category term="多喝水" scheme="https://www.windsings.com/tags/%E5%A4%9A%E5%96%9D%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>2018校招真题编程练习题解</title>
    <link href="https://www.windsings.com//posts/7da4f75a/"/>
    <id>https://www.windsings.com//posts/7da4f75a/</id>
    <published>2019-04-09T18:37:10.000Z</published>
    <updated>2019-04-10T19:17:59.040Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/ta/2018test" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a></p><a id="more"></a><h1 id="&#x6700;&#x5927;&#x4E58;&#x79EF;"><a href="#&#x6700;&#x5927;&#x4E58;&#x79EF;" class="headerlink" title="&#x6700;&#x5927;&#x4E58;&#x79EF;"></a>&#x6700;&#x5927;&#x4E58;&#x79EF;</h1><p>&#x6CE8;&#x610F;&#x8FD9;&#x9053;&#x9898;&#x7684;&#x6D4B;&#x8BD5;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x662F;&#x5148;&#x7ED9;&#x51FA;&#x6570;&#x5B57;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x518D;&#x7ED9;&#x51FA;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x3002;</p><p>&#x6700;&#x5927;&#x503C;&#x53EA;&#x53EF;&#x80FD;&#x5728;(max1*max2*max3, max1*min1*min2)&#x4E2D;&#x5F97;&#x51FA;&#xFF0C;&#x8BA1;&#x7B97;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x5373;&#x53EF;&#x3002;</p><p>&#x6CE8;&#x610F;&#x4F7F;&#x7528;long long &#x9632;&#x6B62;&#x6EA2;&#x51FA;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp, max1 = INT32_MIN, max2 = INT32_MIN, max3 = INT32_MIN, min1 = INT32_MAX, min2 = INT32_MAX;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        max3 = max(temp, max3);</span><br><span class="line">        <span class="keyword">if</span> (max3 &gt; max2)</span><br><span class="line">            swap(max2, max3);</span><br><span class="line">        <span class="keyword">if</span> (max2 &gt; max1)</span><br><span class="line">            swap(max2, max1);</span><br><span class="line">        min2 = min(min2, temp);</span><br><span class="line">        <span class="keyword">if</span> (min1 &gt; min2)</span><br><span class="line">            swap(min1, min2);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; max(max1*max2*max3, max1*min1*min2);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5927;&#x6574;&#x6570;&#x76F8;&#x4E58;"><a href="#&#x5927;&#x6574;&#x6570;&#x76F8;&#x4E58;" class="headerlink" title="&#x5927;&#x6574;&#x6570;&#x76F8;&#x4E58;"></a>&#x5927;&#x6574;&#x6570;&#x76F8;&#x4E58;</h1><p>&#x7C7B;&#x4F3C;&#x9898;&#x76EE;&#xFF1A;POJ 1001</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/ta/2018test&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x9898;&amp;#x76EE;&amp;#x94FE;&amp;#x63A5;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="校招真题" scheme="https://www.windsings.com/categories/%E6%A0%A1%E6%8B%9B%E7%9C%9F%E9%A2%98/"/>
    
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="校招真题" scheme="https://www.windsings.com/tags/%E6%A0%A1%E6%8B%9B%E7%9C%9F%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>华为2019软件挑战赛经验教训总结</title>
    <link href="https://www.windsings.com//posts/a1353cd8/"/>
    <id>https://www.windsings.com//posts/a1353cd8/</id>
    <published>2019-03-31T08:17:11.000Z</published>
    <updated>2019-04-10T19:17:59.041Z</updated>
    
    <content type="html"><![CDATA[<p>&#x4E0E;&#x4EBA;&#x5171;&#x4E8B;&#xFF0C;&#x4EBA;&#x662F;&#x5173;&#x952E;&#x3002;<br><a id="more"></a></p><h1 id="&#x7B80;&#x8FF0;"><a href="#&#x7B80;&#x8FF0;" class="headerlink" title="&#x7B80;&#x8FF0;"></a>&#x7B80;&#x8FF0;</h1><p>&#x8FD9;&#x6B21;&#x6BD4;&#x8D5B;&#xFF0C;&#x6211;&#x4EEC;&#x961F;&#x662F;&#x7531;&#x4E09;&#x4EBA;&#x7EC4;&#x6210;&#xFF0C;&#x6211;&#xFF0C;&#x5F90;&#x540C;&#x5B66;&#xFF0C;&#x738B;&#x540C;&#x5B66;&#x3002;&#x5F90;&#x540C;&#x5B66;&#x62C5;&#x4EFB;&#x961F;&#x957F;&#xFF0C;&#x738B;&#x540C;&#x5B66;&#x5199;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><p>&#x4E3A;&#x65B9;&#x4FBF;&#x63CF;&#x8FF0;&#xFF0C;&#x540E;&#x6587;&#x7528;&#x201C;&#x961F;&#x957F;&#x201D;&#x6765;&#x6307;&#x4EE3;&#x5F90;&#x540C;&#x5B66;&#xFF0C;&#x7528;&#x201C;&#x4E3B;&#x7A0B;&#x201D;&#x6765;&#x4EE3;&#x6307;&#x738B;&#x540C;&#x5B66;&#x3002;</p><p>&#x5728;3.10&#x5DE6;&#x53F3;&#xFF0C;&#x961F;&#x957F;&#x6765;&#x8054;&#x7CFB;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x65F6;&#xFF0C;&#x961F;&#x957F;&#x8BF4;&#x4ED6;&#x4E0D;&#x4F1A;&#x7F16;&#x7A0B;&#xFF0C;&#x4ED6;&#x6765;&#x63D0;&#x4F9B;&#x7B97;&#x6CD5;&#xFF0C;&#x8BA9;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x6765;&#x5B9E;&#x73B0;&#x3002;&#x5F53;&#x65F6;&#x8003;&#x8651;&#x5230;&#x961F;&#x957F;&#x7684;&#x5C65;&#x5386;&#x8FD8;&#x4E0D;&#x9519;&#xFF08;&#x672C;&#x79D1;&#x53A6;&#x95E8;&#x5927;&#x5B66;&#x6570;&#x5B66;&#x7CFB;&#xFF09;&#xFF0C;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x5C31;&#x7B54;&#x5E94;&#x4E86;&#x3002;</p><p>&#x6240;&#x4EE5;&#x6700;&#x5F00;&#x59CB;&#x7684;&#x5DE5;&#x4F5C;&#x5206;&#x914D;&#x662F;&#xFF0C;&#x961F;&#x957F;&#x8D1F;&#x8D23;&#x7B97;&#x6CD5;&#xFF0C;&#x4E3B;&#x7A0B;&#x8D1F;&#x8D23;&#x4E3B;&#x8981;&#x7684;&#x7A0B;&#x5E8F;&#x7F16;&#x5199;&#xFF0C;&#x6211;&#x8D1F;&#x8D23;&#x5C11;&#x90E8;&#x5199;&#x5206;&#x4EE3;&#x7801;&#x3001;&#x7248;&#x672C;&#x63A7;&#x5236;&#x3001;&#x7F16;&#x8BD1;+&#x6D4B;&#x8BD5;&#x3001;&#x628A;&#x4E3B;&#x7A0B;&#x7684;&#x4EE3;&#x7801;&#x4FEE;&#x6539;&#x6210;&#x7B26;&#x5408;&#x9898;&#x76EE;&#x8981;&#x6C42;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><p>&#x6700;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x505A;&#x51FA;&#x6765;&#x4E00;&#x4E2A;&#x6709;&#x6210;&#x7EE9;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x7136;&#x800C;&#x7531;&#x4E8E;&#x961F;&#x957F;&#x6CA1;&#x6709;&#x505A;&#x7248;&#x672C;&#x63A7;&#x5236;&#xFF0C;&#x628A;&#x8FD9;&#x4E00;&#x7248;&#x672C;&#x8986;&#x76D6;&#x6389;&#x4E86;&#xFF0C;&#x5BFC;&#x81F4;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x8FDE;&#x4EFB;&#x4F55;&#x6210;&#x7EE9;&#x90FD;&#x6CA1;&#x6709;&#x3002;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x5FC3;&#x6001;&#x5D29;&#x76D8;&#x3002;</p><h1 id="&#x6559;&#x8BAD;&#x4E00;&#xFF1A;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;"><a href="#&#x6559;&#x8BAD;&#x4E00;&#xFF1A;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;" class="headerlink" title="&#x6559;&#x8BAD;&#x4E00;&#xFF1A;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;"></a>&#x6559;&#x8BAD;&#x4E00;&#xFF1A;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;</h1><p>&#x5982;&#x524D;&#x6587;&#x6240;&#x8FF0;&#xFF0C;&#x521A;&#x5F00;&#x59CB;&#x8BA8;&#x8BBA;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x505A;&#x65F6;&#xFF0C;&#x961F;&#x957F;&#x5C31;&#x8981;&#x6C42;&#x6211;&#x4EEC;&#x5148;&#x628A;&#x57FA;&#x7840;&#x7684;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#xFF0C;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x6162;&#x6162;&#x8C03;&#x4F18;&#x3002;&#x800C;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x7684;&#x8BA4;&#x4E3A;&#xFF0C;&#x8981;&#x5148;&#x6709;&#x5927;&#x6982;&#x7B97;&#x6CD5;&#xFF0C;&#x518D;&#x8003;&#x8651;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x3002;</p><p>&#x4E0D;&#x8FC7;&#x7531;&#x4E8E;&#x961F;&#x957F;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x62FF;&#x51FA;&#x6765;&#x9AD8;&#x6548;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x6211;&#x548C;&#x4E3B;&#x7A0B;&#x5148;&#x5199;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x76F4;&#x5230;&#x6700;&#x540E;&#x6BD4;&#x8D5B;&#x7ED3;&#x675F;&#xFF0C;&#x961F;&#x957F;&#x4ECD;&#x7136;&#x6CA1;&#x6709;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5207;&#x5B9E;&#x53EF;&#x884C;&#x7684;&#x7B97;&#x6CD5;&#x3002;</p><p>&#x6240;&#x4EE5;&#x4EE5;&#x540E;&#x518D;&#x505A;&#x9879;&#x76EE;&#x65F6;&#xFF0C;&#x6211;&#x5B66;&#x5230;&#x7684;&#x6559;&#x8BAD;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x7ED3;&#x679C;&#x4E3A;&#x5BFC;&#x5411;&#xFF0C;&#x6301;&#x6709;&#x4E00;&#x79CD;&#x6210;&#x738B;&#x8D25;&#x5BC7;&#x89C2;&#x70B9;&#x7684;&#x8BDD;&#xFF0C;&#x7B97;&#x6CD5;&#x8981;&#x4F18;&#x5148;&#x4E8E;&#x4EE3;&#x7801;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x597D;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x5EFA;&#x8BAE;&#x4ECE;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x653E;&#x5F03;&#x3002;</p><h1 id="&#x6559;&#x8BAD;&#x4E8C;&#xFF1A;&#x4EBA;&#x5458;&#x9009;&#x62E9;&#x5F88;&#x5173;&#x952E;"><a href="#&#x6559;&#x8BAD;&#x4E8C;&#xFF1A;&#x4EBA;&#x5458;&#x9009;&#x62E9;&#x5F88;&#x5173;&#x952E;" class="headerlink" title="&#x6559;&#x8BAD;&#x4E8C;&#xFF1A;&#x4EBA;&#x5458;&#x9009;&#x62E9;&#x5F88;&#x5173;&#x952E;"></a>&#x6559;&#x8BAD;&#x4E8C;&#xFF1A;&#x4EBA;&#x5458;&#x9009;&#x62E9;&#x5F88;&#x5173;&#x952E;</h1><h1 id="&#x6559;&#x8BAD;&#x4E09;&#xFF1A;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x662F;&#x5B66;&#x95EE;"><a href="#&#x6559;&#x8BAD;&#x4E09;&#xFF1A;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x662F;&#x5B66;&#x95EE;" class="headerlink" title="&#x6559;&#x8BAD;&#x4E09;&#xFF1A;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x662F;&#x5B66;&#x95EE;"></a>&#x6559;&#x8BAD;&#x4E09;&#xFF1A;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x662F;&#x5B66;&#x95EE;</h1><h1 id="&#x6559;&#x8BAD;&#x56DB;&#xFF1A;&#x63D0;&#x524D;&#x60F3;&#x597D;&#x4EE3;&#x7801;&#x67B6;&#x6784;"><a href="#&#x6559;&#x8BAD;&#x56DB;&#xFF1A;&#x63D0;&#x524D;&#x60F3;&#x597D;&#x4EE3;&#x7801;&#x67B6;&#x6784;" class="headerlink" title="&#x6559;&#x8BAD;&#x56DB;&#xFF1A;&#x63D0;&#x524D;&#x60F3;&#x597D;&#x4EE3;&#x7801;&#x67B6;&#x6784;"></a>&#x6559;&#x8BAD;&#x56DB;&#xFF1A;&#x63D0;&#x524D;&#x60F3;&#x597D;&#x4EE3;&#x7801;&#x67B6;&#x6784;</h1><p>&#x8FD9;&#x90E8;&#x5206;&#x6211;&#x6765;&#x80CC;&#x9505;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6CA1;&#x6709;&#x7406;&#x89E3;&#x6BD4;&#x8D5B;</p><h1 id="&#x6559;&#x8BAD;&#x4E94;&#xFF1A;&#x6D4B;&#x8BD5;&#x5F88;&#x91CD;&#x8981;"><a href="#&#x6559;&#x8BAD;&#x4E94;&#xFF1A;&#x6D4B;&#x8BD5;&#x5F88;&#x91CD;&#x8981;" class="headerlink" title="&#x6559;&#x8BAD;&#x4E94;&#xFF1A;&#x6D4B;&#x8BD5;&#x5F88;&#x91CD;&#x8981;"></a>&#x6559;&#x8BAD;&#x4E94;&#xFF1A;&#x6D4B;&#x8BD5;&#x5F88;&#x91CD;&#x8981;</h1><h1 id="&#x6559;&#x8BAD;&#x516D;&#xFF1A;&#x6CE8;&#x610F;&#x7248;&#x672C;&#x63A7;&#x5236;"><a href="#&#x6559;&#x8BAD;&#x516D;&#xFF1A;&#x6CE8;&#x610F;&#x7248;&#x672C;&#x63A7;&#x5236;" class="headerlink" title="&#x6559;&#x8BAD;&#x516D;&#xFF1A;&#x6CE8;&#x610F;&#x7248;&#x672C;&#x63A7;&#x5236;"></a>&#x6559;&#x8BAD;&#x516D;&#xFF1A;&#x6CE8;&#x610F;&#x7248;&#x672C;&#x63A7;&#x5236;</h1><h1 id="&#x6559;&#x8BAD;&#x4E03;&#xFF1A;&#x5FC3;&#x6001;&#x8981;&#x653E;&#x5E73;"><a href="#&#x6559;&#x8BAD;&#x4E03;&#xFF1A;&#x5FC3;&#x6001;&#x8981;&#x653E;&#x5E73;" class="headerlink" title="&#x6559;&#x8BAD;&#x4E03;&#xFF1A;&#x5FC3;&#x6001;&#x8981;&#x653E;&#x5E73;"></a>&#x6559;&#x8BAD;&#x4E03;&#xFF1A;&#x5FC3;&#x6001;&#x8981;&#x653E;&#x5E73;</h1><h1 id="&#x6559;&#x8BAD;&#x516B;&#xFF1A;&#x8C03;&#x53C2;&#x4E0D;&#x9760;&#x8C31;"><a href="#&#x6559;&#x8BAD;&#x516B;&#xFF1A;&#x8C03;&#x53C2;&#x4E0D;&#x9760;&#x8C31;" class="headerlink" title="&#x6559;&#x8BAD;&#x516B;&#xFF1A;&#x8C03;&#x53C2;&#x4E0D;&#x9760;&#x8C31;"></a>&#x6559;&#x8BAD;&#x516B;&#xFF1A;&#x8C03;&#x53C2;&#x4E0D;&#x9760;&#x8C31;</h1><h1 id="&#x6559;&#x8BAD;&#x4E5D;&#xFF1A;"><a href="#&#x6559;&#x8BAD;&#x4E5D;&#xFF1A;" class="headerlink" title="&#x6559;&#x8BAD;&#x4E5D;&#xFF1A;"></a>&#x6559;&#x8BAD;&#x4E5D;&#xFF1A;</h1><h1 id="&#x540E;&#x8BB0;"><a href="#&#x540E;&#x8BB0;" class="headerlink" title="&#x540E;&#x8BB0;"></a>&#x540E;&#x8BB0;</h1><p>&#x6211;&#x6587;&#x7B14;&#x4E0D;&#x597D;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E5F;&#x662F;&#x53CD;&#x590D;&#x6539;&#x4E86;&#x5F88;&#x591A;&#x6B21;&#x624D;&#x6700;&#x7EC8;&#x53D1;&#x5E03;&#x51FA;&#x53BB;&#x3002;&#x4E00;&#x5F00;&#x59CB;&#x5728;&#x5199;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6709;&#x5F88;&#x591A;&#x5E26;&#x6709;&#x60C5;&#x7EEA;&#x7684;&#x8BDD;&#xFF0C;&#x540E;&#x6765;&#x81EA;&#x5DF1;&#x4E0D;&#x65AD;&#x53CD;&#x601D;&#xFF0C;&#x6709;&#x6210;&#x7EE9;&#x56FA;&#x7136;&#x9AD8;&#x5174;&#xFF0C;&#x4F46;&#x662F;&#x5931;&#x8D25;&#x4E86;&#x4E5F;&#x8981;&#x5FC3;&#x6001;&#x653E;&#x5E73;&#x3002;&#x4E0D;&#x8981;&#x7528;&#x8FC7;&#x53BB;&#x7684;&#x4E8B;&#x6765;&#x5F71;&#x54CD;&#x5C06;&#x6765;&#x7684;&#x5FC3;&#x60C5;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x9009;&#x62E9;&#x5F7B;&#x5E95;&#x51B7;&#x9759;&#x4E0B;&#x6765;&#x4E4B;&#x540E;&#x518D;&#x53D1;&#x5E03;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x4E0E;&amp;#x4EBA;&amp;#x5171;&amp;#x4E8B;&amp;#xFF0C;&amp;#x4EBA;&amp;#x662F;&amp;#x5173;&amp;#x952E;&amp;#x3002;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="经验教训" scheme="https://www.windsings.com/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD/"/>
    
    
      <category term="经验教训" scheme="https://www.windsings.com/tags/%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD/"/>
    
      <category term="总结" scheme="https://www.windsings.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="竞赛" scheme="https://www.windsings.com/tags/%E7%AB%9E%E8%B5%9B/"/>
    
      <category term="猪队友坑死人" scheme="https://www.windsings.com/tags/%E7%8C%AA%E9%98%9F%E5%8F%8B%E5%9D%91%E6%AD%BB%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab8图像金字塔</title>
    <link href="https://www.windsings.com//posts/4898d2ed/"/>
    <id>https://www.windsings.com//posts/4898d2ed/</id>
    <published>2019-03-29T16:46:47.000Z</published>
    <updated>2019-03-29T16:53:34.796Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#xFF1A;&#x53C2;&#x8003;&#x300A;01_&#x79D1;&#x8F6F;&#x9AD8;&#x56FE;&#x5B9E;&#x9A8C;_&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53CA;OpenCV&#x7A0B;&#x5E8F;&#x300B;&#x6587;&#x6863;&#xFF0C;&#x5B8C;&#x6210;3&#x4E2A;&#x6269;&#x5C55;&#x5B9E;&#x9A8C;&#x3002; <a href="https://dev.tencent.com/s/acf5afe0-9080-4659-a3e7-033e1e24da58" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;">&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&amp;#xFF1A;&amp;#x53C2;&amp;#x8003;&amp;#x300A;01_&amp;#x79D1;&amp;#x8F6F;&amp;#x9AD8;&amp;#x56FE;&amp;#x5B9E;&amp;#x9A8C;_&amp;#x56FE;&amp;#x50CF;&amp;#x5904;&amp;#x7406;&amp;#x7ECF;&amp;#x5178;&amp;#x7B97;&amp;#x6CD5;&amp;#x53CA;OpenCV&amp;#x7A0B;&amp;#x5E8F;&amp;#x300B;&amp;#x6587;&amp;#x6863;&amp;#xFF0C;&amp;#x5B8C;&amp;#x6210;3&amp;#x4E2A;&amp;#x6269;&amp;#x5C55;&amp;#x5B9E;&amp;#x9A8C;&amp;#x3002; &lt;a href=&quot;https://dev.tencent.com/s/acf5afe0-9080-4659-a3e7-033e1e24da58&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab7皮肤检测</title>
    <link href="https://www.windsings.com//posts/b148748/"/>
    <id>https://www.windsings.com//posts/b148748/</id>
    <published>2019-03-29T16:46:42.000Z</published>
    <updated>2019-03-29T16:53:34.796Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#xFF1A;&#x53C2;&#x8003;&#x300A;01_&#x79D1;&#x8F6F;&#x9AD8;&#x56FE;&#x5B9E;&#x9A8C;_&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53CA;OpenCV&#x7A0B;&#x5E8F;&#x300B;&#x6587;&#x6863;&#xFF0C;&#x5B8C;&#x6210;3&#x4E2A;&#x6269;&#x5C55;&#x5B9E;&#x9A8C;&#x3002; <a href="https://dev.tencent.com/s/71e6dab8-872b-4451-af0c-e4cd56232ec2" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x76AE;&#x80A4;&#x68C0;&#x6D4B;">&#x76AE;&#x80A4;&#x68C0;&#x6D4B;</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&amp;#xFF1A;&amp;#x53C2;&amp;#x8003;&amp;#x300A;01_&amp;#x79D1;&amp;#x8F6F;&amp;#x9AD8;&amp;#x56FE;&amp;#x5B9E;&amp;#x9A8C;_&amp;#x56FE;&amp;#x50CF;&amp;#x5904;&amp;#x7406;&amp;#x7ECF;&amp;#x5178;&amp;#x7B97;&amp;#x6CD5;&amp;#x53CA;OpenCV&amp;#x7A0B;&amp;#x5E8F;&amp;#x300B;&amp;#x6587;&amp;#x6863;&amp;#xFF0C;&amp;#x5B8C;&amp;#x6210;3&amp;#x4E2A;&amp;#x6269;&amp;#x5C55;&amp;#x5B9E;&amp;#x9A8C;&amp;#x3002; &lt;a href=&quot;https://dev.tencent.com/s/71e6dab8-872b-4451-af0c-e4cd56232ec2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab6图形学变换</title>
    <link href="https://www.windsings.com//posts/5c4cf636/"/>
    <id>https://www.windsings.com//posts/5c4cf636/</id>
    <published>2019-03-29T16:46:37.000Z</published>
    <updated>2019-03-29T16:53:34.796Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#xFF1A;&#x53C2;&#x8003;&#x300A;01_&#x79D1;&#x8F6F;&#x9AD8;&#x56FE;&#x5B9E;&#x9A8C;_&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53CA;OpenCV&#x7A0B;&#x5E8F;&#x300B;&#x6587;&#x6863;&#xFF0C;&#x5B8C;&#x6210;3&#x4E2A;&#x6269;&#x5C55;&#x5B9E;&#x9A8C;&#x3002; <a href="https://dev.tencent.com/s/252d3c16-730a-4db8-b8ca-4ca69485e5f9" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x81A8;&#x80C0;">&#x81A8;&#x80C0;</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&amp;#xFF1A;&amp;#x53C2;&amp;#x8003;&amp;#x300A;01_&amp;#x79D1;&amp;#x8F6F;&amp;#x9AD8;&amp;#x56FE;&amp;#x5B9E;&amp;#x9A8C;_&amp;#x56FE;&amp;#x50CF;&amp;#x5904;&amp;#x7406;&amp;#x7ECF;&amp;#x5178;&amp;#x7B97;&amp;#x6CD5;&amp;#x53CA;OpenCV&amp;#x7A0B;&amp;#x5E8F;&amp;#x300B;&amp;#x6587;&amp;#x6863;&amp;#xFF0C;&amp;#x5B8C;&amp;#x6210;3&amp;#x4E2A;&amp;#x6269;&amp;#x5C55;&amp;#x5B9E;&amp;#x9A8C;&amp;#x3002; &lt;a href=&quot;https://dev.tencent.com/s/252d3c16-730a-4db8-b8ca-4ca69485e5f9&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab5频域滤波</title>
    <link href="https://www.windsings.com//posts/6e84f7a7/"/>
    <id>https://www.windsings.com//posts/6e84f7a7/</id>
    <published>2019-03-24T18:23:26.000Z</published>
    <updated>2019-03-24T18:32:47.317Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/5167be5b-f5ed-4e9c-a25d-21a0676eb26d" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/08f3d6e9-4e8a-4034-ab84-eeeac896585f" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;-dft-&#x548C;-idft">&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684; DFT &#x548C; IDFT</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/5167be5b-f5ed-4e9c-a25d-21a0676eb26d&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/08f3d6e9-4e8a-4034-ab84-eeeac896585f&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab4图像去噪</title>
    <link href="https://www.windsings.com//posts/1983c731/"/>
    <id>https://www.windsings.com//posts/1983c731/</id>
    <published>2019-03-24T18:23:23.000Z</published>
    <updated>2019-03-24T18:27:36.301Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/735198c6-c797-41df-aedb-f6f504769917" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/58e3d1da-2ad6-466a-b8ef-e6314949c91e" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x5747;&#x503C;&#x6EE4;&#x6CE2;">&#x5747;&#x503C;&#x6EE4;&#x6CE2;</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/735198c6-c797-41df-aedb-f6f504769917&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/58e3d1da-2ad6-466a-b8ef-e6314949c91e&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab3空域滤波</title>
    <link href="https://www.windsings.com//posts/87e75292/"/>
    <id>https://www.windsings.com//posts/87e75292/</id>
    <published>2019-03-24T18:23:19.000Z</published>
    <updated>2019-03-24T19:04:46.831Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/36e36407-fb10-42c8-b308-a7e36c9df96f" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/0687d410-1b36-4cf5-a19c-0bff78962fa0" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x5229;&#x7528;&#x5747;&#x503C;&#x6A21;&#x677F;&#x5E73;&#x6ED1;&#x7070;&#x5EA6;&#x56FE;&#x50CF;">&#x5229;&#x7528;&#x5747;&#x503C;&#x6A21;&#x677F;&#x5E73;&#x6ED1;&#x7070;&#x5EA6;&#x56FE;&#x50CF;</h1><p>&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF1A; &#x5229;&#x7528; OpenCV &#x5BF9;&#x56FE;&#x50CF;&#x50CF;&#x7D20;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF0C; &#x5206;&#x522B;&#x5229;&#x7528; 3*3&#x3001; 5*5 &#x548C; 9*9 &#x5C3A;&#x5BF8;&#x7684;&#x5747;&#x503C;&#x6A21;&#x677F;&#x5E73;&#x6ED1;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/36e36407-fb10-42c8-b308-a7e36c9df96f&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/0687d410-1b36-4cf5-a19c-0bff78962fa0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab2直方图均衡</title>
    <link href="https://www.windsings.com//posts/f0e06204/"/>
    <id>https://www.windsings.com//posts/f0e06204/</id>
    <published>2019-03-24T18:19:19.000Z</published>
    <updated>2019-03-24T19:06:42.458Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p><a href="https://dev.tencent.com/s/28cb7094-afd7-40d4-bed0-7f32c8a62a8d" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/819824a3-995a-46eb-a040-957e52154096" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x8BA1;&#x7B97;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x76F4;&#x65B9;&#x56FE;">&#x8BA1;&#x7B97;&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x76F4;&#x65B9;&#x56FE;</h1><p>&#x53CD;&#x6B63;&#x4E5F;&#x6CA1;&#x4EBA;&#x770B;&#xFF0C;&#x90FD;&#x60F3;&#x76F4;&#x63A5;&#x8981;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x5077;&#x61D2;&#x4EE5;&#x540E;&#x518D;&#x5199;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x7684;OpenCV&amp;#x7248;&amp;#x672C;&amp;#x662F;4.0.1&amp;#x3002;IDE&amp;#x662F;VS2017&amp;#x3002;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x662F;Win10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/28cb7094-afd7-40d4-bed0-7f32c8a62a8d&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/819824a3-995a-46eb-a040-957e52154096&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>高级图像处理-Lab1图像灰度变换</title>
    <link href="https://www.windsings.com//posts/3b2efaf5/"/>
    <id>https://www.windsings.com//posts/3b2efaf5/</id>
    <published>2019-03-22T13:38:52.000Z</published>
    <updated>2019-03-24T18:20:04.202Z</updated>
    
    <content type="html"><![CDATA[<p>&#x9AD8;&#x7EA7;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7B2C;&#x4E00;&#x6B21;&#x8BD5;&#x9A8C;&#xFF0C;&#x73AF;&#x5883;&#x914D;&#x7F6E;&#x53CA;&#x4EE3;&#x7801;&#x3002;</p><p><a href="https://dev.tencent.com/s/611b9e92-62bc-40a5-b958-2fb4d297ed8e" target="_blank" rel="noopener">&#x5B9E;&#x9A8C;&#x8981;&#x6C42;</a> <a href="https://dev.tencent.com/s/1c465c3e-8049-4a6a-91e1-5ca8ba250f66" target="_blank" rel="noopener">&#x6211;&#x7684;&#x4EE3;&#x7801;</a> <a id="more"></a></p><h1 id="&#x73AF;&#x5883;&#x914D;&#x7F6E;">&#x73AF;&#x5883;&#x914D;&#x7F6E;</h1><p>&#x6211;&#x7684;OpenCV&#x7248;&#x672C;&#x662F;4.0.1&#x3002;IDE&#x662F;VS2017&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;Win10&#x3002;</p><p>OpenCV&#x666E;&#x901A;&#x7248;&#xFF08;&#x6CA1;&#x6709;contrib&#x7684;&#xFF09;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x597D;&#x914D;&#x7F6E;&#x7684;&#xFF0C;&#x5177;&#x4F53;&#x5982;&#x4F55;&#x914D;&#x7F6E;&#x4E0D;&#x518D;&#x5570;&#x55E6;&#x4E86;&#x3002;&#x4E0D;&#x8FC7;&#x5728;&#x6211;&#x5199;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF08;2019.3.22&#xFF09;&#x65F6;&#xFF0C;OpenCV4&#x7684;&#x8D44;&#x6599;&#x8FD8;&#x662F;&#x5F88;&#x5C11;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x592A;&#x5EFA;&#x8BAE;&#x8FD9;&#x4E48;&#x65E9;&#x7684;&#x7528;&#x6700;&#x65B0;&#x7248;&#x3002;</p><p>&#x5728;OpenCV4&#x4E2D;&#xFF0C;&#x79FB;&#x9664;&#x4E86;&#x597D;&#x591A;&#x8001;&#x65E7;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5176;&#x548C;OpenCV2&#x517C;&#x5BB9;&#x6027;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x597D;&#x3002;</p><h1 id="&#x5229;&#x7528;-opencv-&#x8BFB;&#x53D6;&#x56FE;&#x50CF;">&#x5229;&#x7528; OpenCV &#x8BFB;&#x53D6;&#x56FE;&#x50CF;</h1><p>&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF1A;&#x7528;OpenCV&#x6253;&#x5F00;&#x56FE;&#x50CF;&#xFF0C;&#x5E76;&#x5728;&#x7A97;&#x53E3;&#x663E;&#x793A;&#x3002;</p><p>&#x5728;OpenCV4&#x4E2D;&#xFF0C;&#x6211;&#x6CA1;&#x6709;&#x627E;&#x5230;<strong>cvLoadImage</strong>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;imread&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x8BFB;&#x53D6;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5728;VS2017&#x4E0B;&#xFF0C;waitKey&#x4E4B;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x52A0;destroyAllWindows()&#xFF0C;&#x4F1A;&#x62A5;&#x9519;&#x3002;</p><p>&#x6240;&#x4EE5;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">loadimage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Mat image;</span><br><span class="line">    image = imread(<span class="string">&quot;lena.jpg&quot;</span>, IMREAD_COLOR); <span class="comment">// Read the file</span></span><br><span class="line">    namedWindow(<span class="string">&quot;Display window&quot;</span>, WINDOW_AUTOSIZE); <span class="comment">// Create a window for display.</span></span><br><span class="line">    imshow(<span class="string">&quot;Display window&quot;</span>, image);                <span class="comment">// Show our image inside it.</span></span><br><span class="line">    waitKey(<span class="number">0</span>); <span class="comment">// Wait for a keystroke in the window</span></span><br><span class="line">    destroyAllWindows();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;">&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;</h1><p>&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF1A;&#x8BBE;&#x7F6E;&#x5E76;&#x8C03;&#x6574;&#x9608;&#x503C;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;&#x3002;</p><p>&#x8001;&#x5E08;&#x8981;&#x6C42;&#x4E0D;&#x80FD;&#x8C03;&#x5E93;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x662F;&#x7A7A;&#x57DF;&#x4E0A;&#x7684;&#x53D8;&#x6362;&#xFF0C;&#x904D;&#x5386;&#x771F;&#x4E2A;&#x56FE;&#x50CF;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x7070;&#x5EA6;&#x503C;&#x4F4E;&#x4E8E;&#x9608;&#x503C;&#x7684;&#x7F6E;&#x4E3A;0&#xFF0C;&#x628A;&#x9AD8;&#x4E8E;&#x9608;&#x503C;&#x7684;&#x7F6E;&#x4E3A;255&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = image.clone();</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x884C;&#x4EE3;&#x7801;&#x8868;&#x793A;&#x5BF9;image&#x8FDB;&#x884C;&#x6DF1;&#x62F7;&#x8D1D;&#xFF0C;&#x503C;&#x590D;&#x5236;&#x3002;</p><p>&#x5728;&#x540E;&#x9762;&#x7684;&#x5B9E;&#x9A8C;&#x4E2D;&#xFF0C;&#x6211;&#x6709;&#x65F6;&#x5019;&#x4E0D;&#x52A0;namedWindow&#xFF0C;&#x5176;&#x5B9E;&#x4E5F;&#x80FD;&#x6B63;&#x5E38;&#x7684;&#x663E;&#x793A;&#x56FE;&#x50CF;&#xFF0C;&#x4E5F;&#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#x3002;</p><p>&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x4EE3;&#x7801;&#x662F;&#xFF1A; <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Binarization</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Mat image,res;</span><br><span class="line">    image = imread(<span class="string">&quot;lena.jpg&quot;</span>, <span class="number">0</span>); <span class="comment">// &#x7070;&#x5EA6;&#x8BFB;&#x5165;</span></span><br><span class="line">    namedWindow(<span class="string">&quot;&#x539F;&#x56FE;&quot;</span>, WINDOW_AUTOSIZE); <span class="comment">// Create a window for display.</span></span><br><span class="line">    imshow(<span class="string">&quot;&#x539F;&#x56FE;&quot;</span>, image);                <span class="comment">// Show our image inside it.</span></span><br><span class="line">    </span><br><span class="line">    res = image.clone();</span><br><span class="line">    <span class="keyword">int</span> gray;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.rows; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; res.cols; j++)</span><br><span class="line">        {</span><br><span class="line">            gray = res.at&lt;uchar&gt;(i, j);</span><br><span class="line">            <span class="keyword">if</span> (gray &gt; <span class="number">80</span>)</span><br><span class="line">                gray = <span class="number">255</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                gray = <span class="number">0</span>;</span><br><span class="line">            res.at&lt;uchar&gt;(i, j) = saturate_cast&lt;uchar&gt;(gray);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//threshold(image, res, 80, 255, 0);</span></span><br><span class="line">    namedWindow(<span class="string">&quot;&#x4E8C;&#x503C;&#x5316;&#x7684;&#x56FE;&quot;</span>, WINDOW_AUTOSIZE); <span class="comment">// Create a window for display.</span></span><br><span class="line">    imshow(<span class="string">&quot;&#x4E8C;&#x503C;&#x5316;&#x7684;&#x56FE;&quot;</span>, res);                <span class="comment">// Show our image inside it.</span></span><br><span class="line">    waitKey(<span class="number">0</span>); <span class="comment">// Wait for a keystroke in the window</span></span><br><span class="line">    destroyAllWindows();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h1 id="&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;&#x5BF9;&#x6570;&#x53D8;&#x6362;">&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x7684;&#x5BF9;&#x6570;&#x53D8;&#x6362;</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x9AD8;&amp;#x7EA7;&amp;#x56FE;&amp;#x50CF;&amp;#x5904;&amp;#x7406;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x8BD5;&amp;#x9A8C;&amp;#xFF0C;&amp;#x73AF;&amp;#x5883;&amp;#x914D;&amp;#x7F6E;&amp;#x53CA;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.tencent.com/s/611b9e92-62bc-40a5-b958-2fb4d297ed8e&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x8981;&amp;#x6C42;&lt;/a&gt; &lt;a href=&quot;https://dev.tencent.com/s/1c465c3e-8049-4a6a-91e1-5ca8ba250f66&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6211;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/categories/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="高级图像处理" scheme="https://www.windsings.com/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="中科大" scheme="https://www.windsings.com/tags/%E4%B8%AD%E7%A7%91%E5%A4%A7/"/>
    
      <category term="实验笔记" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="赵振刚" scheme="https://www.windsings.com/tags/%E8%B5%B5%E6%8C%AF%E5%88%9A/"/>
    
  </entry>
  
  <entry>
    <title>寒假算法基础集训营1题解</title>
    <link href="https://www.windsings.com//posts/4714a7e1/"/>
    <id>https://www.windsings.com//posts/4714a7e1/</id>
    <published>2019-02-26T17:00:25.000Z</published>
    <updated>2019-02-28T11:35:10.162Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5BD2;&#x5047;&#x91CC;&#x505A;&#x7684;&#x6BD4;&#x8D5B;&#xFF0C;&#x88AB;&#x5927;&#x4F6C;&#x6309;&#x5728;&#x5730;&#x4E0A;&#x6469;&#x64E6;&#xFF0C;&#x5B66;&#x5230;&#x4E86;&#x4E0D;&#x5C11;&#x4E1C;&#x897F;&#x3002;&#x6545;&#x8BB0;&#x5F55;&#x4E4B;&#x3002;</p><p><a href="https://ac.nowcoder.com/acm/contest/317#question" target="_blank" rel="noopener">&#x9898;&#x76EE;&#x94FE;&#x63A5;</a><br><a href="https://static.nowcoder.com/pdf/ncwc/%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E8%AE%AD%E7%BB%83%E8%90%A51%E9%A2%98%E8%A7%A3.pdf" target="_blank" rel="noopener">&#x5B98;&#x65B9;&#x9898;&#x89E3;</a><br><a id="more"></a></p><h1 id="&#x5C0F;a&#x7684;&#x8BA1;&#x7B97;&#x5668;"><a href="#&#x5C0F;a&#x7684;&#x8BA1;&#x7B97;&#x5668;" class="headerlink" title="&#x5C0F;a&#x7684;&#x8BA1;&#x7B97;&#x5668;"></a>&#x5C0F;a&#x7684;&#x8BA1;&#x7B97;&#x5668;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;"><a href="#&#x601D;&#x8DEF;&#x5206;&#x6790;" class="headerlink" title="&#x601D;&#x8DEF;&#x5206;&#x6790;"></a>&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x7B7E;&#x5230;&#x9898;&#xFF0C;&#x6CA1;&#x5565;&#x597D;&#x8BF4;&#x7684;&#x3002;&#x76F4;&#x63A5;&#x6A21;&#x62DF;&#x53EF;&#x4EE5;&#x505A;&#x3002;</p><h2 id="&#x4EE3;&#x7801;"><a href="#&#x4EE3;&#x7801;" class="headerlink" title="&#x4EE3;&#x7801;"></a>&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> o;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> temp;</span><br><span class="line">}op;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> num;</span><br><span class="line"><span class="built_in">vector</span>&lt;op&gt; V;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; num;</span><br><span class="line">    V.resize(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; V[i].o&gt;&gt;V[i].temp;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (V[i].o==<span class="number">1</span>)<span class="comment">//+</span></span><br><span class="line">        {</span><br><span class="line">            num -= V[i].temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (V[i].o == <span class="number">2</span>)<span class="comment">//-</span></span><br><span class="line">        {</span><br><span class="line">            num += V[i].temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (V[i].o == <span class="number">3</span>)<span class="comment">//*</span></span><br><span class="line">        {</span><br><span class="line">            num /= V[i].temp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (V[i].o == <span class="number">4</span>)<span class="comment">//&#xF7;</span></span><br><span class="line">        {</span><br><span class="line">            num *= V[i].temp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;2.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5C0F;a&#x4E0E;&#x201D;204&#x201D;"><a href="#&#x5C0F;a&#x4E0E;&#x201D;204&#x201D;" class="headerlink" title="&#x5C0F;a&#x4E0E;&#x201D;204&#x201D;"></a>&#x5C0F;a&#x4E0E;&#x201D;204&#x201D;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;-1"><a href="#&#x601D;&#x8DEF;&#x5206;&#x6790;-1" class="headerlink" title="&#x601D;&#x8DEF;&#x5206;&#x6790;"></a>&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x7528;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x505A;&#xFF0C;&#x5C3D;&#x91CF;&#x8BA9;&#x524D;&#x540E;&#x4E24;&#x4E2A;&#x6570;&#x7684;&#x5DEE;&#x503C;&#x6700;&#x5927;&#x3002;</p><ol><li>&#x5F53;&#x524D;&#x9762;&#x7684;&#x6570;&#x4E3A;0&#x65F6;&#xFF0C;&#x5C3D;&#x91CF;&#x9009;&#x62E9;4&#x3002;</li><li>&#x5F53;&#x524D;&#x9762;&#x7684;&#x6570;&#x4E3A;2&#x65F6;&#xFF0C;&#x9009;&#x62E9;0&#x548C;4&#x4E2D;&#xFF0C;&#x5269;&#x4F59;&#x8F83;&#x591A;&#x7684;&#x90A3;&#x4E2A;&#x3002;</li><li>&#x5F53;&#x524D;&#x9762;&#x7684;&#x6570;&#x4E3A;4&#x65F6;&#xFF0C;&#x5C3D;&#x91CF;&#x9009;&#x62E9;0&#x3002;</li></ol><h2 id="&#x4EE3;&#x7801;-1"><a href="#&#x4EE3;&#x7801;-1" class="headerlink" title="&#x4EE3;&#x7801;"></a>&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma warning(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">0</span>, num4 = <span class="number">0</span>, num0 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n,temp;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">2</span>)</span><br><span class="line">            num2++;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">0</span>)</span><br><span class="line">            num0++;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">4</span>)</span><br><span class="line">            num4++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> cur = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (cur==<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num4 &gt; <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                num4--;</span><br><span class="line">                res += <span class="number">16</span>;</span><br><span class="line">                cur = <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (num2&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                num2--;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                cur = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (cur==<span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num4&gt;num0)</span><br><span class="line">            {</span><br><span class="line">                num4--;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                cur = <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (num0 &gt; num4)</span><br><span class="line">            {</span><br><span class="line">                num0--;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                cur = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (cur==<span class="number">4</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (num0&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                cur = <span class="number">0</span>;</span><br><span class="line">                res += <span class="number">16</span>;</span><br><span class="line">                num0--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (num2&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                cur = <span class="number">2</span>;</span><br><span class="line">                res += <span class="number">4</span>;</span><br><span class="line">                num2--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//freopen(&quot;3.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    solution();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="&#x5C0F;a&#x4E0E;&#x661F;&#x9645;&#x63A2;&#x7D22;"><a href="#&#x5C0F;a&#x4E0E;&#x661F;&#x9645;&#x63A2;&#x7D22;" class="headerlink" title="&#x5C0F;a&#x4E0E;&#x661F;&#x9645;&#x63A2;&#x7D22;"></a>&#x5C0F;a&#x4E0E;&#x661F;&#x9645;&#x63A2;&#x7D22;</h1><h2 id="&#x601D;&#x8DEF;&#x5206;&#x6790;-2"><a href="#&#x601D;&#x8DEF;&#x5206;&#x6790;-2" class="headerlink" title="&#x601D;&#x8DEF;&#x5206;&#x6790;"></a>&#x601D;&#x8DEF;&#x5206;&#x6790;</h2><p>&#x5F88;&#x6709;&#x610F;&#x601D;&#x7684;&#x4E00;&#x4E2A;&#x9898;&#xFF0C;&#x8FD9;&#x4E2A;&#x9898;&#x8003;&#x5230;&#x4E86;&#x5F02;&#x6216;&#x7684;&#x6027;&#x8D28;&#x548C;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x3002;&#x662F;&#x80CC;&#x5305;&#x95EE;&#x9898;&#x7684;&#x53D8;&#x79CD;&#xFF0C;&#x975E;&#x5E38;&#x5DE7;&#x5999;&#x3002;</p><p>&#x5B98;&#x65B9;&#x9898;&#x89E3;&#x4E2D;&#x63D0;&#x5230;&#xFF0C;DP&#x7684;&#x6570;&#x7EC4;&#x4E0D;&#x80FD;&#x53EA;&#x5F00;&#x5230;3000&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#xFF0C;pi&#x5728;[1,3000]&#xFF0C;3000&#x901A;&#x8FC7;&#x5F02;&#x6216;&#xFF0C;&#x6700;&#x5927;&#x53EF;&#x5230;&#x8FBE;&#x7684;&#x6570;&#x662F;4095&#x3002;&#x6240;&#x4EE5;dp&#x6570;&#x7EC4;&#x6700;&#x5C11;&#x4E5F;&#x8981;4096&#x3002;&#x4EE3;&#x7801;&#x4E2D;&#x5F00;&#x5230;&#x4E86;4100&#x3002;</p><p>&#x5173;&#x952E;&#x70B9;&#xFF1A;</p><ol><li>dp&#x6570;&#x7EC4;&#x4E0D;&#x80FD;&#x53EA;&#x5F00;3000&#xFF0C;&#x56E0;&#x4E3A;3000&#x901A;&#x8FC7;&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#xFF0C;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x5230;4095&#x3002;</li><li>dp&#x6570;&#x7EC4;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x7EF4;&#x7684;&#x3002;</li><li>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#xFF1A;<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x56E0;&#x4E3A;&#x6700;&#x5927;&#x662F;3000&#xFF0C;&#x6839;&#x636E;&#x5F02;&#x6216;&#xFF0C;&#x6700;&#x5927;&#x503C;&#x662F;4095</span></span><br><span class="line">dp[V[<span class="number">0</span>] ^ V[n - <span class="number">1</span>]] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">4095</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (V[i]&lt;V[<span class="number">0</span>]&amp;&amp;V[i]&gt;V[n<span class="number">-1</span>])<span class="comment">//&#x6EE1;&#x8DB3;&#x4E2D;&#x8F6C;&#x6761;&#x4EF6;</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (dp[j^V[i]])</span><br><span class="line">            {</span><br><span class="line">                dp[j] = dp[j^V[i]];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li></ol><p>&#x9010;&#x6B65;&#x5206;&#x6790;&#xFF0C;&#x5728;&#x6700;&#x5F00;&#x59CB; &#xFF0C;&#x628A;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[V[<span class="number">0</span>] ^ V[n - <span class="number">1</span>]] = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure></p><p>&#x8868;&#x793A;&#x53EA;&#x8003;&#x7B2C;&#x4E00;&#x4E2A;&#x548C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#xFF0C;&#x53EF;&#x4EE5;&#x5230;&#x8FBE;&#x7684;&#x503C;&#x3002;<br>&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x6027;&#x8D28;&#xFF1A;<br>&#x5982;&#x679C;A&#x2295;B=D&#x2295;E=C&#x3002;&#x5219;E=A&#x2295;B&#x2295;D.  </p><p>&#x6240;&#x4EE5;&#x5728;&#x7B2C;&#x4E8C;&#x6B21;&#x5FAA;&#x73AF;&#xFF0C;&#x5728;0~4095&#x4E2D;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x8BB0;&#x4E3A;t&#xFF0C;&#x4F7F;&#x5F97;t&#x2295;V[1]=C&#x3002;<br>&#x8FD9;&#x6837;&#xFF0C;&#x8FD9;&#x4E2A;t&#x5C31;&#x662F;V[0]&#x2295;V[1]&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x7684;&#x503C;&#x3002;  </p><p>&#x7136;&#x540E;&#x4F9D;&#x6B21;&#x7C7B;&#x63A8;&#xFF0C;&#x4E0D;&#x65AD;&#x4EE5;&#x4E4B;&#x524D;&#x5F02;&#x6216;&#x7684;&#x7ED3;&#x679C;&#x4F5C;&#x4E3A;C&#xFF0C;&#x4EE5;&#x4E0D;&#x540C;&#x7684;V[i]&#xFF0C;&#x6765;&#x627E;&#x4E0D;&#x540C;&#x7684;t&#x3002;<br>&#x6700;&#x540E;&#x5728;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x53D6;&#x5F97;&#x7684;&#x5F02;&#x6216;&#x503C;&#x4E2D;&#xFF0C;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x7684;&#x3002;</p><p>&#x56E0;&#x4E3A;&#x521D;&#x59CB;&#x503C;&#x662F;V[0]&#x2295;V[n-1]&#xFF0C;&#x6240;&#x4EE5;&#x4E0A;&#x8FF0;&#x5BFB;&#x627E;&#x7684;t&#x90FD;&#x662F;&#x98DE;&#x8239;&#x5230;&#x8FBE;&#x7684;&#x4E2D;&#x95F4;&#x661F;&#x7403;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x56E0;&#x4E3A;&#x521D;&#x503C;&#x662F;V[0]&#x2295;V[n-1]&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x540E;&#x4FDD;&#x8BC1;&#x4E00;&#x5B9A;&#x80FD;&#x5230;&#x8FBE;n&#x53F7;&#x661F;&#x7403;&#x3002;</p><h2 id="&#x4EE3;&#x7801;-2"><a href="#&#x4EE3;&#x7801;-2" class="headerlink" title="&#x4EE3;&#x7801;"></a>&#x4EE3;&#x7801;</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Wind</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n;<span class="comment">//&#x661F;&#x7403;&#x6570;</span></span><br><span class="line">    <span class="keyword">int</span> t;<span class="comment">//&#x8010;&#x4E45;&#x5EA6;</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;V(n),mid(n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; dp(<span class="number">4100</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; V[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (V[n - <span class="number">1</span>] &gt;= V[<span class="number">0</span>])<span class="comment">//&#x4E0D;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (V[<span class="number">0</span>] ? V[<span class="number">0</span>] : <span class="number">-1</span>) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//&#x5982;&#x679C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x661F;&#x7403;&#xFF0C;&#x5219;&#x770B;V[0]&#x662F;&#x5426;&#x4E3A;0&#xFF0C;&#x5982;&#x679C;&#x4E3A;0&#xFF0C;&#x8F93;&#x51FA;-1</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x5C06;&#x6240;&#x6709;&#x80FD;&#x4F5C;&#x4E3A;&#x4E2D;&#x8F6C;&#x7AD9;&#x7684;&#x661F;&#x7403;&#x52A0;&#x5165;&#x8FDB;&#x6765;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x56E0;&#x4E3A;&#x6700;&#x5927;&#x662F;3000&#xFF0C;&#x6839;&#x636E;&#x5F02;&#x6216;&#xFF0C;&#x6700;&#x5927;&#x503C;&#x662F;4095</span></span><br><span class="line">    dp[V[<span class="number">0</span>] ^ V[n - <span class="number">1</span>]] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">4095</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (V[i]&lt;V[<span class="number">0</span>]&amp;&amp;V[i]&gt;V[n<span class="number">-1</span>])<span class="comment">//&#x6EE1;&#x8DB3;&#x4E2D;&#x8F6C;&#x6761;&#x4EF6;</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (dp[j^V[i]])</span><br><span class="line">                {</span><br><span class="line">                    dp[j] = dp[j^V[i]];</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4095</span>; i &gt;<span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (dp[i])</span><br><span class="line">        { </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Wind</span></span><br><span class="line">    freopen(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    solution();</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5BD2;&amp;#x5047;&amp;#x91CC;&amp;#x505A;&amp;#x7684;&amp;#x6BD4;&amp;#x8D5B;&amp;#xFF0C;&amp;#x88AB;&amp;#x5927;&amp;#x4F6C;&amp;#x6309;&amp;#x5728;&amp;#x5730;&amp;#x4E0A;&amp;#x6469;&amp;#x64E6;&amp;#xFF0C;&amp;#x5B66;&amp;#x5230;&amp;#x4E86;&amp;#x4E0D;&amp;#x5C11;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&amp;#x6545;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E4B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/317#question&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x9898;&amp;#x76EE;&amp;#x94FE;&amp;#x63A5;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://static.nowcoder.com/pdf/ncwc/%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E8%AE%AD%E7%BB%83%E8%90%A51%E9%A2%98%E8%A7%A3.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x5B98;&amp;#x65B9;&amp;#x9898;&amp;#x89E3;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="https://www.windsings.com/categories/ACM/"/>
    
    
      <category term="寒假比赛" scheme="https://www.windsings.com/tags/%E5%AF%92%E5%81%87%E6%AF%94%E8%B5%9B/"/>
    
      <category term="非官方题解" scheme="https://www.windsings.com/tags/%E9%9D%9E%E5%AE%98%E6%96%B9%E9%A2%98%E8%A7%A3/"/>
    
      <category term="给大佬递茶" scheme="https://www.windsings.com/tags/%E7%BB%99%E5%A4%A7%E4%BD%AC%E9%80%92%E8%8C%B6/"/>
    
      <category term="被按在地上摩擦" scheme="https://www.windsings.com/tags/%E8%A2%AB%E6%8C%89%E5%9C%A8%E5%9C%B0%E4%B8%8A%E6%91%A9%E6%93%A6/"/>
    
  </entry>
  
  <entry>
    <title>算法导论复习笔记</title>
    <link href="https://www.windsings.com//posts/db76c882/"/>
    <id>https://www.windsings.com//posts/db76c882/</id>
    <published>2018-12-31T11:23:08.000Z</published>
    <updated>2019-01-20T08:40:06.431Z</updated>
    
    <content type="html"><![CDATA[<p>&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x590D;&#x4E60;&#x7B14;&#x8BB0;&#x3002;<br><a id="more"></a><br>&#x5982;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x8FD8;&#x8BF7;&#x591A;&#x591A;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#x3002;</p><h1 id="&#x7EA2;&#x9ED1;&#x6811;"><a href="#&#x7EA2;&#x9ED1;&#x6811;" class="headerlink" title="&#x7EA2;&#x9ED1;&#x6811;"></a>&#x7EA2;&#x9ED1;&#x6811;</h1><h2 id="&#x6027;&#x8D28;"><a href="#&#x6027;&#x8D28;" class="headerlink" title="&#x6027;&#x8D28;"></a>&#x6027;&#x8D28;</h2><p>&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x5982;&#x679C;&#x6EE1;&#x8DB3;&#x4E0B;&#x9762;&#x7684;&#x7EA2;&#x9ED1;&#x6027;&#x8D28;&#xFF0C;&#x5219;&#x4E3A;&#x4E00;&#x68F5;&#x7EA2;&#x9ED1;&#x6811;&#xFF1A; </p><ol><li>&#x6BCF;&#x4E2A;&#x7ED3;&#x70B9;&#x6216;&#x662F;&#x7EA2;&#x7684;&#xFF0C;&#x6216;&#x662F;&#x9ED1;&#x7684;&#x3002;</li><li>&#x6839;&#x7ED3;&#x70B9;&#x662F;&#x9ED1;&#x7684;&#x3002;</li><li>&#x6BCF;&#x4E2A;&#x53F6;&#x7ED3;&#x70B9;(NIL)&#x662F;&#x9ED1;&#x7684;</li><li>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x662F;&#x7EA2;&#x7684;&#xFF0C;&#x5219;&#x5B83;&#x7684;&#x4E24;&#x4E2A;&#x513F;&#x5B50;&#x90FD;&#x662F;&#x9ED1;&#x7684;&#x3002;</li><li>&#x5BF9;&#x6BCF;&#x4E2A;&#x7ED3;&#x70B9;&#xFF0C;&#x4ECE;&#x8BE5;&#x7ED3;&#x70B9;&#x5230;&#x5176;&#x5B50;&#x5B59;&#x7ED3;&#x70B9;&#x7684;&#x6240;&#x6709;&#x8DEF;&#x5F84;&#x4E0A;&#x5305;&#x542B;&#x76F8;&#x540C;&#x6570;&#x76EE;&#x7684;&#x9ED1;&#x7ED3;&#x70B9;&#x3002;</li></ol><h2 id="&#x5F15;&#x7406;"><a href="#&#x5F15;&#x7406;" class="headerlink" title="&#x5F15;&#x7406;"></a>&#x5F15;&#x7406;</h2><p><img src="/posts/db76c882/&#x7EA2;&#x9ED1;&#x6811;&#x5F15;&#x7406;.png" alt=""></p><h2 id="&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x6027;&#x8D28;"><a href="#&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x6027;&#x8D28;" class="headerlink" title="&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x6027;&#x8D28;"></a>&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x6027;&#x8D28;</h2><p><img src="/posts/db76c882/&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x6027;&#x8D28;.png" alt=""></p><h2 id="&#x64CD;&#x4F5C;"><a href="#&#x64CD;&#x4F5C;" class="headerlink" title="&#x64CD;&#x4F5C;"></a>&#x64CD;&#x4F5C;</h2><p>&#x8981;&#x6C42;&#x662F;&#x77E5;&#x9053;&#x5177;&#x4F53;&#x7684;&#x64CD;&#x4F5C;&#x548C;&#x65F6;&#x95F4;&#xFF0C;&#x6392;&#x9664;&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053;&#x4ED6;&#x4FE9;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><h3 id="&#x65CB;&#x8F6C;"><a href="#&#x65CB;&#x8F6C;" class="headerlink" title="&#x65CB;&#x8F6C;"></a>&#x65CB;&#x8F6C;</h3><p><img src="/posts/db76c882/&#x7EA2;&#x9ED1;&#x6811;&#x65CB;&#x8F6C;1.png" alt=""></p><h1 id="&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;"><a href="#&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;" class="headerlink" title="&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;"></a>&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;</h1><p>OneNote&#x751F;&#x6210;&#x7684;&#x56FE;&#x7247;~<br><img src="/posts/db76c882/&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;.jpg" alt="&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x590D;&#x4E60;&#x7B14;&#x8BB0;"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x7B97;&amp;#x6CD5;&amp;#x5BFC;&amp;#x8BBA;&amp;#x590D;&amp;#x4E60;&amp;#x7B14;&amp;#x8BB0;&amp;#x3002;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://www.windsings.com/categories/algorithm/"/>
    
    
      <category term="笔记" scheme="https://www.windsings.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="算法" scheme="https://www.windsings.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="复习" scheme="https://www.windsings.com/tags/%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="数据结构" scheme="https://www.windsings.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>智能机器人  LAB2</title>
    <link href="https://www.windsings.com//posts/8837a525/"/>
    <id>https://www.windsings.com//posts/8837a525/</id>
    <published>2018-12-20T06:53:05.000Z</published>
    <updated>2018-12-24T18:25:50.140Z</updated>
    
    <content type="html"><![CDATA[<p>&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;-LAB2     &#x5B9E;&#x9A8C;&#x62A5;&#x544A;<br><a id="more"></a><br>&#x5982;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x8BF7;&#x591A;&#x591A;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#xFF0C;&#x4E0D;&#x80DC;&#x611F;&#x6FC0;&#x3002;</p><p><a href="https://qcloud.coding.net/s/2a8270df-e0b8-4cba-8339-a93839a42a8d" target="_blank" rel="noopener">&#x4EE3;&#x7801;</a></p><h1 id="&#x4EE3;&#x7801;&#x5206;&#x6790;"><a href="#&#x4EE3;&#x7801;&#x5206;&#x6790;" class="headerlink" title="&#x4EE3;&#x7801;&#x5206;&#x6790;"></a>&#x4EE3;&#x7801;&#x5206;&#x6790;</h1><p><strong>&#x58F0;&#x660E;&#x5F69;&#x8272;&#x56FE;&#x548C;&#x6DF1;&#x5EA6;&#x56FE;&#x53D8;&#x91CF;</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;cv::Mat&gt; colorImgs, depthImgs;    <span class="comment">// &#x5F69;&#x8272;&#x56FE;&#x548C;&#x6DF1;&#x5EA6;&#x56FE;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;Eigen::Isometry3d, Eigen::aligned_allocator&lt;Eigen::Isometry3d&gt;&gt; </span><br><span class="line">                                            poses;         <span class="comment">// &#x76F8;&#x673A;&#x4F4D;&#x59FF;</span></span><br></pre></td></tr></table></figure></p><p><strong>&#x8BFB;&#x53D6;&#x5F69;&#x8272;&#x56FE;-&#x6DF1;&#x5EA6;&#x56FE;&#x5BF9;</strong><br>&#x7531;&#x4E8E;&#x8FD9;&#x91CC;&#x8BBE;&#x5B9A;&#x4E86;&#x5F69;&#x8272;&#x56FE;-&#x6DF1;&#x5EA6;&#x56FE;&#x5BF9;&#x4E00;&#x5171;&#x6709;5&#x4E2A;&#xFF0C;&#x6240;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x5FAA;&#x73AF;&#x91CC;&#x5199;&#x660E;5&#x4E2A;&#xFF0C;&#x4F9D;&#x6B21;&#x8BFB;&#x53D6;&#x5F69;&#x8272;&#x56FE;-&#x6DF1;&#x8272;&#x56FE;&#x5BF9;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++ )</span><br><span class="line">{</span><br><span class="line">    boost::<span class="function">format <span class="title">fmt</span><span class="params">( <span class="string">&quot;./%s/%d.%s&quot;</span> )</span></span>; <span class="comment">//&#x56FE;&#x50CF;&#x6587;&#x4EF6;&#x683C;&#x5F0F;</span></span><br><span class="line">    colorImgs.push_back( cv::imread( (fmt%<span class="string">&quot;color&quot;</span>%(i+<span class="number">1</span>)%<span class="string">&quot;png&quot;</span>).str() ));</span><br><span class="line">    depthImgs.push_back( cv::imread( (fmt%<span class="string">&quot;depth&quot;</span>%(i+<span class="number">1</span>)%<span class="string">&quot;pgm&quot;</span>).str(), <span class="number">-1</span> )); </span><br><span class="line">    <span class="comment">// &#x4F7F;&#x7528;-1&#x8BFB;&#x53D6;&#x539F;&#x59CB;&#x56FE;&#x50CF;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p><p><strong>&#x8BBE;&#x5B9A;&#x76F8;&#x673A;&#x5916;&#x53C2;</strong><br>&#x7531;&#x4E8E;&#x76F8;&#x673A;&#x5728;&#x8FD0;&#x52A8;&#xFF0C;&#x6240;&#x4EE5; $P$ &#x7684;&#x76F8;&#x673A;&#x5750;&#x6807;&#x5E94;&#x8BE5;&#x662F;&#x5B83;&#x7684;&#x4E16;&#x754C;&#x5750;&#x6807;&#xFF08;&#x8BB0;&#x4E3A; $P_w$&#xFF09;&#xFF0C;&#x6839;&#x636E;&#x76F8;&#x673A;&#x7684;&#x5F53;&#x524D;&#x4F4D;&#x59FF;&#xFF0C;&#x53D8;&#x6362;&#x5230;&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x76F8;&#x673A;&#x7684;&#x4F4D;&#x59FF;&#x7531;&#x5B83;&#x7684;&#x65CB;&#x8F6C;&#x77E9;&#x9635;$ R$ &#x548C;&#x5E73;&#x79FB;&#x5411;&#x91CF;$ t$ &#x6765;&#x63CF;&#x8FF0;&#x3002;</p><p>&#x8BFB;&#x53D6;&#x76F8;&#x673A;&#x4F4D;&#x59FF;&#x4FE1;&#x606F;&#xFF0C;&#x662F;&#x6839;&#x636E;post.txt&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x800C;&#x6765;&#x7684;&#xFF0C;&#x5177;&#x4F53;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x5148;&#x8BFB;&#x53D6;&#x8868;&#x793A;&#x65CB;&#x8F6C;&#x7684;&#x56DB;&#x5143;&#x6570;&#x4FE1;&#x606F;&#xFF0C;&#x8F6C;&#x5230;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x4E2D;&#xFF0C;&#x518D;&#x8BFB;&#x53D6;&#x8868;&#x793A;&#x5E73;&#x79FB;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x8F6C;&#x6362;&#x5230;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x4E2D;&#x3002;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> data[<span class="number">7</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">auto</span>&amp; d:data )</span><br><span class="line">    fin&gt;&gt;d;</span><br><span class="line">Eigen::<span class="function">Quaterniond <span class="title">q</span><span class="params">( data[<span class="number">6</span>], data[<span class="number">3</span>], data[<span class="number">4</span>], data[<span class="number">5</span>] )</span></span>;<span class="comment">//&#x8868;&#x793A;&#x65CB;&#x8F6C;&#x7684;&#x56DB;&#x5143;&#x6570;</span></span><br><span class="line">Eigen::<span class="function">Isometry3d <span class="title">T</span><span class="params">(q)</span></span>;                 <span class="comment">//&#x8F6C;&#x5230;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x4E2D;</span></span><br><span class="line">T.pretranslate( Eigen::Vector3d( data[<span class="number">0</span>], data[<span class="number">1</span>], data[<span class="number">2</span>] ));          <span class="comment">//&#x8BBE;&#x5B9A;&#x5E73;&#x79FB;&#x5411;&#x91CF;</span></span><br><span class="line">poses.push_back( T );                          <span class="comment">//&#x628A;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x8F6C;&#x79FB;&#x5230;&#x76F8;&#x673A;&#x4F4D;&#x59FF;&#x4E2D;</span></span><br></pre></td></tr></table></figure></p><p><strong>&#x516C;&#x5F0F;</strong>&#xFF1A;<br>&#x8BBE;&#x56DB;&#x5143;&#x6570;&#x4E3A;$ q = q_0 + q_1i + q_2j + q_3k$&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x65CB;&#x8F6C;&#x77E9;&#x9635;R&#x4E3A;&#xFF1A;<br><img src="/posts/8837a525/&#x56DB;&#x5143;&#x6570;-&#x65CB;&#x8F6C;&#x77E9;&#x9635;.jpg" alt=""><br><strong>&#x8BBE;&#x5B9A;&#x76F8;&#x673A;&#x5185;&#x53C2;</strong><br>&#x76F8;&#x673A;&#x5185;&#x53C2;&#x4E00;&#x5171;&#x6709;cx,cy,fx,fy&#x56DB;&#x4E2A;&#x503C;&#xFF0C;&#x5355;&#x4F4D;&#x90FD;&#x662F;&#x50CF;&#x7D20;&#x3002;</p><p>&#x539F;&#x7406;&#x662F;&#xFF0C;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#x4E0E;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E4B;&#x95F4;&#xFF0C;&#x76F8;&#x5DEE;&#x4E86;&#x4E00;&#x4E2A;&#x7F29;&#x653E;&#x548C;&#x4E00;&#x4E2A;&#x539F;&#x70B9;&#x7684;&#x5E73;&#x79FB;&#x3002;<br>&#x5176;&#x4E2D;&#xFF0C;cx&#xFF0C;cy&#x8868;&#x793A;&#x7684;&#x662F;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x76F8;&#x5BF9;&#x4E8E;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x5E73;&#x79FB;&#x3002;</p><p>&#x8BBE;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x5728; $u$ &#x8F74;&#x4E0A;&#x7F29;&#x653E;&#x4E86; $&#x3B1;$ &#x500D;&#xFF0C;&#x5728; $v$ &#x4E0A;&#x7F29;&#x653E;&#x4E86; $&#x3B2;$ &#x500D;&#x3002;<br>&#x5219;$P&#x2019;$&#x7684;&#x5750;&#x6807;&#x4E0E;&#x50CF;&#x7D20;&#x5750;&#x6807;$[u,v]^T$&#x7684;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A;<br><img src="/posts/8837a525/&#x53D8;&#x6362;1.jpg" alt=""><br>&#x53C8;&#x7531;&#x5C0F;&#x5B54;&#x6210;&#x50CF;&#x7684;&#x516C;&#x5F0F;<br><img src="/posts/8837a525/&#x5C0F;&#x5B54;&#x6210;&#x50CF;.jpg" alt=""><br>&#x628A; $&#x3B1;f$ &#x5408;&#x5E76;&#x6210; $f_x$&#xFF0C;&#x628A; $&#x3B2;f$ &#x5408;&#x5E76;&#x6210; $f_y$ &#xFF0C;&#x53EF;&#x5F97;&#xFF1A;<br><img src="/posts/8837a525/&#x53D8;&#x6362;2.jpg" alt=""><br>&#x7531;&#x4E8E;$f$ &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x7C73;&#xFF0C; $&#x3B1;, &#x3B2;$ &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x50CF;&#x7D20;&#x6BCF;&#x7C73;&#xFF0C;&#x6240;&#x4EE5; $f_x, f_y$ &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x50CF;&#x7D20;&#x3002;</p><p><strong>&#x65B0;&#x5EFA;&#x70B9;&#x4E91;&#x56FE;</strong><br>&#x5148;&#x5B9A;&#x4E49;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x540D;&#x79F0;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5B9A;&#x4E49;&#x70B9;&#x4E91;&#x4F7F;&#x7528;&#x7684;&#x683C;&#x5F0F;&#xFF1A;&#x8FD9;&#x91CC;&#x7528;&#x7684;&#x662F;XYZRGB</span></span><br><span class="line"><span class="keyword">typedef</span> pcl::PointXYZRGB PointT; </span><br><span class="line"><span class="keyword">typedef</span> pcl::PointCloud&lt;PointT&gt; PointCloud;</span><br></pre></td></tr></table></figure></p><p>Ptr&#x662F;&#x4E00;&#x4E2A;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;PointCloud<pointt> &#x5176;&#x4E2D;PointT&#x662F;pcl::PointXYZRGB&#x7C7B;&#x578B;&#x3002;&#x5B83;&#x91CD;&#x8F7D;&#x4E86;-&gt;  &#x8FD4;&#x56DE;&#x4E86;&#x6307;&#x5411;PointCloud<pointt>&#x7684;&#x6307;&#x9488;<br>*Ptr&#x662F;&#x4E0B;&#x9762;&#x7C7B;&#x578B; boost::shared_ptr&lt;PointCloud<pointt>&gt; </pointt></pointt></pointt></p><p>pcl&#x70B9;&#x4E91;&#x5E93;&#x63D0;&#x4F9B;&#x4E86;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x7684;&#x8C03;&#x7528;&#x63A5;&#x53E3;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4F20;&#x5165;&#x6BCF;&#x4E2A;&#x70B9;&#x7684;&#x4E09;&#x7EF4;&#x5750;&#x6807;&#x548C;&#x989C;&#x8272;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x628A;&#x591A;&#x5F20;&#x56FE;&#x7247;&#x81EA;&#x52A8;&#x62FC;&#x63A5;&#x5230;&#x4E00;&#x8D77;&#x3002;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">PointCloud::<span class="function">Ptr <span class="title">pointCloud</span><span class="params">( <span class="keyword">new</span> PointCloud )</span></span>; </span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++ )</span><br><span class="line">{</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;&#x8F6C;&#x6362;&#x56FE;&#x50CF;&#x4E2D;: &quot;</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">    <span class="comment">//&#x6BCF;&#x4E2A;&#x56FE;&#x50CF;&#x5BF9;&#xFF0C;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x4F4D;&#x59FF;&#x4FE1;&#x606F;</span></span><br><span class="line">    cv::Mat color = colorImgs[i];   <span class="comment">//&#x5F69;&#x8272;&#x56FE;&#x50CF;</span></span><br><span class="line">    cv::Mat depth = depthImgs[i];   <span class="comment">//&#x6DF1;&#x5EA6;&#x56FE;&#x50CF;</span></span><br><span class="line">    Eigen::Isometry3d T = poses[i];</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> v=<span class="number">0</span>; v&lt;color.rows; v++ )</span><br><span class="line">        <span class="keyword">for</span> ( <span class="keyword">int</span> u=<span class="number">0</span>; u&lt;color.cols; u++ )</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">unsigned</span> <span class="keyword">int</span> d = depth.ptr&lt;<span class="keyword">unsigned</span> <span class="keyword">short</span>&gt; ( v )[u]; <span class="comment">// &#x6DF1;&#x5EA6;&#x503C;</span></span><br><span class="line">            <span class="keyword">if</span> ( d==<span class="number">0</span> ) <span class="keyword">continue</span>; <span class="comment">// &#x4E3A;0&#x8868;&#x793A;&#x6CA1;&#x6709;&#x6D4B;&#x91CF;&#x5230;</span></span><br><span class="line">            Eigen::Vector3d point;          <span class="comment">//&#x50CF;&#x7D20;&#x5750;&#x6807;</span></span><br><span class="line">            point[<span class="number">2</span>] = <span class="keyword">double</span>(d)/depthScale;        <span class="comment">//Z &#x6DF1;&#x5EA6;</span></span><br><span class="line">            point[<span class="number">0</span>] = (u-cx)*point[<span class="number">2</span>]/fx;          <span class="comment">//&#x7531;&#x9488;&#x5B54;&#x76F8;&#x673A;&#x6A21;&#x578B;&#x8BA1;&#x7B97;&#x5750;&#x6807;</span></span><br><span class="line">            point[<span class="number">1</span>] = (v-cy)*point[<span class="number">2</span>]/fy; </span><br><span class="line">            Eigen::Vector3d pointWorld = T*point;   </span><br><span class="line">            <span class="comment">//&#x5C06;&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x5750;&#x6807;&#x53D8;&#x6362;&#x5230;&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;</span></span><br><span class="line">                </span><br><span class="line">            PointT p ;      <span class="comment">//&#x70B9;&#x4E91; XYZRGB</span></span><br><span class="line">            p.x = pointWorld[<span class="number">0</span>];    <span class="comment">//&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x7684;&#x5750;&#x6807;</span></span><br><span class="line">            p.y = pointWorld[<span class="number">1</span>];</span><br><span class="line">            p.z = pointWorld[<span class="number">2</span>];</span><br><span class="line">            p.b = color.data[ v*color.step+u*color.channels() ];   </span><br><span class="line">            <span class="comment">//&#x6CE8;&#x610F;opencv&#x5F69;&#x8272;&#x56FE;&#x50CF;&#x901A;&#x9053;&#x7684;&#x987A;&#x5E8F;&#x4E3A; bgr</span></span><br><span class="line">            p.g = color.data[ v*color.step+u*color.channels()+<span class="number">1</span> ];</span><br><span class="line">            p.r = color.data[ v*color.step+u*color.channels()+<span class="number">2</span> ];</span><br><span class="line">            pointCloud-&gt;points.push_back( p );      <span class="comment">//&#x70B9;&#x4E91;&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x70B9;</span></span><br><span class="line">        }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x516C;&#x5F0F;&#xFF1A;<br><img src="/posts/8837a525/&#x53D8;&#x6362;2.jpg" alt=""></p><p><strong>&#x8FD0;&#x884C;&#x622A;&#x56FE;</strong><br><img src="/posts/8837a525/&#x8FD0;&#x884C;&#x622A;&#x56FE;.jpg" alt=""></p><h1 id="&#x5355;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;&#x662F;&#x6307;&#x54EA;&#x4E9B;&#x53C2;&#x6570;&#xFF1F;-&#x5916;&#x53C2;&#x5982;&#x4F55;&#x7528;&#x77E9;&#x9635;&#x8868;&#x793A;&#xFF1F;"><a href="#&#x5355;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;&#x662F;&#x6307;&#x54EA;&#x4E9B;&#x53C2;&#x6570;&#xFF1F;-&#x5916;&#x53C2;&#x5982;&#x4F55;&#x7528;&#x77E9;&#x9635;&#x8868;&#x793A;&#xFF1F;" class="headerlink" title="&#x5355;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;&#x662F;&#x6307;&#x54EA;&#x4E9B;&#x53C2;&#x6570;&#xFF1F; &#x5916;&#x53C2;&#x5982;&#x4F55;&#x7528;&#x77E9;&#x9635;&#x8868;&#x793A;&#xFF1F;"></a>&#x5355;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;&#x662F;&#x6307;&#x54EA;&#x4E9B;&#x53C2;&#x6570;&#xFF1F; &#x5916;&#x53C2;&#x5982;&#x4F55;&#x7528;&#x77E9;&#x9635;&#x8868;&#x793A;&#xFF1F;</h1><p>&#x5185;&#x53C2;&#xFF1A;$c_x,c_y,f_x,f_y$<br>&#x5916;&#x53C2;&#x4F7F;&#x7528;&#x9F50;&#x6B21;&#x5750;&#x6807;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x8868;&#x793A;&#x3002;&#x5DE6;&#x4E0A;3*3&#x662F;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#xFF0C;&#x53F3;&#x8FB9;&#x662F;&#x5E73;&#x79FB;&#x53D8;&#x6362;&#x3002;</p><h1 id="&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;"><a href="#&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;" class="headerlink" title="&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;"></a>&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;</h1><h2 id="&#x5185;&#x53C2;"><a href="#&#x5185;&#x53C2;" class="headerlink" title="&#x5185;&#x53C2;"></a>&#x5185;&#x53C2;</h2><p>&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;&#x6709;4&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x662F;$c_x,c_y,f_x,f_y$&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x8981;&#x6709;&#x89E3;&#x51B3;&#x7578;&#x53D8;&#x7684;&#x4E94;&#x4E2A;&#x53C2;&#x6570;&#x3002;</p><p>&#x8BFB;&#x53D6;&#x76F8;&#x673A;&#x53C2;&#x6570;&#x7684;&#x4EE3;&#x7801;&#x5728;rectify.h&#x4E2D;&#xFF0C;&#x5177;&#x4F53;&#x53C2;&#x6570;&#x5728;intrinsics.xml&#x4E2D;&#x3002;&#x5982;&#x4E0B;&#xFF1A;<br>&#x5DE6;&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;&#x548C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x53C2;&#x6570;<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">opencv_storage</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">M1</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.1316289419152909e+003 0. 6.7002980347009304e+002 0.</span><br><span class="line">    1.1316289419152909e+003 3.9950109175499784e+002 0. 0. 1.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">M1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">D1</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>1<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>5<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.4986336340613862e-001 -1.1555661146153864e+000</span><br><span class="line">    3.3866741697495639e-003 1.1952943179603111e-002</span><br><span class="line">    1.7747259071867683e+000<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">D1</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x53F3;&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;&#x548C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x53C2;&#x6570;<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">M2</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.1316289419152909e+003 0. 6.7645167888745175e+002 0.</span><br><span class="line">    1.1316289419152909e+003 3.9314009439860592e+002 0. 0. 1.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">M2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">D2</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>1<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>5<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.3553831241923531e-001 -8.6303773993984356e-001</span><br><span class="line">    7.1136544177058808e-003 9.2765351119315394e-003</span><br><span class="line">    1.3940332911325242e+000<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">D2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">opencv_storage</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x516C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/posts/8837a525/&#x5185;&#x53C2;&#x63A8;&#x5BFC;.jpg" alt=""></p><h2 id="&#x900F;&#x955C;&#x7578;&#x53D8;"><a href="#&#x900F;&#x955C;&#x7578;&#x53D8;" class="headerlink" title="&#x900F;&#x955C;&#x7578;&#x53D8;"></a>&#x900F;&#x955C;&#x7578;&#x53D8;</h2><p>&#x7531;&#x4E8E;&#x9488;&#x5B54;&#x53EF;&#x4EE5;&#x900F;&#x8FC7;&#x7684;&#x5149;&#x7EBF;&#x592A;&#x5C11;&#xFF0C;&#x6210;&#x50CF;&#x4F1A;&#x4E0D;&#x6E05;&#x695A;&#xFF0C;&#x6240;&#x4EE5;&#x5F80;&#x5F80;&#x90FD;&#x4F1A;&#x52A0;&#x4E0A;&#x51F8;&#x900F;&#x955C;&#x6C47;&#x805A;&#x66F4;&#x591A;&#x7684;&#x5149;&#x7EBF;&#x3002;&#x4F46;&#x662F;&#x52A0;&#x4E0A;&#x51F8;&#x900F;&#x955C;&#x4EE5;&#x540E;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x6210;&#x50CF;&#x7578;&#x53D8;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x9700;&#x8981;&#x6821;&#x6B63;&#x900F;&#x955C;&#x7578;&#x53D8;&#x3002;&#x900F;&#x955C;&#x7684;&#x7578;&#x53D8;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x4E24;&#x7C7B;&#xFF0C;&#x4E00;&#x7C7B;&#x662F;&#x5F84;&#x5411;&#x7578;&#x53D8;&#xFF0C;&#x4E00;&#x7C7B;&#x662F;&#x5207;&#x5411;&#x7578;&#x53D8;&#x3002;</p><h3 id="&#x5F84;&#x5411;&#x7578;&#x53D8;"><a href="#&#x5F84;&#x5411;&#x7578;&#x53D8;" class="headerlink" title="&#x5F84;&#x5411;&#x7578;&#x53D8;"></a>&#x5F84;&#x5411;&#x7578;&#x53D8;</h3><p>&#x5F84;&#x5411;&#x7578;&#x53D8;&#x4F1A;&#x4EA7;&#x751F;&#x201C;&#x9C7C;&#x773C;&#x201D;&#x73B0;&#x8C61;&#x3002;&#x6210;&#x50CF;&#x4E2D;&#x5FC3;&#x5904;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x4E3A;0&#xFF0C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x968F;&#x7740;&#x4E0E;&#x6210;&#x50CF;&#x4E2D;&#x5FC3;&#x8DDD;&#x79BB;&#x589E;&#x5927;&#x800C;&#x589E;&#x5927;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x5904;&#x8FBE;&#x5230;&#x6700;&#x5927;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x3002;&#x5E38;&#x5E38;&#x7528;&#x5076;&#x6B21;&#x5E42;&#x7684;&#x6CF0;&#x52D2;&#x516C;&#x5F0F;&#x63CF;&#x8FF0;&#x5F84;&#x5411;&#x7578;&#x53D8;<br>$$<br>\left{\begin{aligned}x_{cerrected}=x(1+k_1r^2+k_2r^4+k_3r^6)\y_{cerrected}=y(1+k_1r^2+k_2r^4+k_3r^6)\end{aligned}\right.<br>$$</p><h3 id="&#x5207;&#x5411;&#x7578;&#x53D8;"><a href="#&#x5207;&#x5411;&#x7578;&#x53D8;" class="headerlink" title="&#x5207;&#x5411;&#x7578;&#x53D8;"></a>&#x5207;&#x5411;&#x7578;&#x53D8;</h3><p>&#x5207;&#x5411;&#x7578;&#x53D8;&#x7531;&#x900F;&#x955C;&#x548C;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E0D;&#x5E73;&#x884C;&#x5F15;&#x8D77;&#x3002;&#x5E38;&#x7528;&#x5982;&#x4E0B;&#x516C;&#x5F0F;&#x63CF;&#x8FF0;</p><p>$$<br>\left{<br>\begin{aligned}x_{cerrected}&amp;=x+2p_1xy+p_2(r^2+2x^2)\<br>y_{cerrected}&amp;=y+p_1(r^2+2y^2)+2p_2xy<br>\end{aligned}<br>\right.<br>$$</p><h3 id="&#x5C0F;&#x7ED3;"><a href="#&#x5C0F;&#x7ED3;" class="headerlink" title="&#x5C0F;&#x7ED3;"></a>&#x5C0F;&#x7ED3;</h3><p>&#x5355;&#x76EE;&#x6444;&#x50CF;&#x673A;&#x900F;&#x955C;&#x7578;&#x53D8;&#x6821;&#x6B63;&#x9700;&#x8981;&#x786E;&#x5B9A;&#x7684;&#x5C31;&#x662F;$k_1,k_2,k_3,p_1,p_2$&#x8FD9;5&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x201C;&#x9C7C;&#x773C;&#x201D;&#x73B0;&#x8C61;&#x4E0D;&#x660E;&#x663E;&#x7684;&#x8BDD;&#xFF0C;&#x5E38;&#x5E38;&#x4F7F;&#x7528;$k_1,k_2$&#x6765;&#x6821;&#x6B63;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x3002;</p><h2 id="&#x5916;&#x53C2;"><a href="#&#x5916;&#x53C2;" class="headerlink" title="&#x5916;&#x53C2;"></a>&#x5916;&#x53C2;</h2><p>&#x6B64;&#x5904;&#x7528;R&#x548C;T&#x6765;&#x63CF;&#x8FF0;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x6444;&#x50CF;&#x673A;{camera}&#x5750;&#x6807;&#x7CFB;&#x7684;&#x76F8;&#x5BF9;&#x5173;&#x7CFB;&#xFF0C;&#x5177;&#x4F53;&#x4E3A;&#x5C06;&#x5DE6;&#x6444;&#x50CF;&#x673A;{camera}&#x4E0B;&#x7684;&#x5750;&#x6807;&#x8F6C;&#x6362;&#x5230;&#x53F3;&#x6444;&#x50CF;&#x673A;{camera}&#x4E0B;&#x7684;&#x5750;&#x6807;&#x3002;<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">opencv_storage</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">R</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    9.9909318070240760e-001 3.5020847379939768e-002</span><br><span class="line">    -2.4214799663375593e-002 -3.4760970744630318e-002</span><br><span class="line">    9.9933433045958386e-001 1.1071173279572044e-002</span><br><span class="line">    2.4586402478553149e-002 -1.0219403783309490e-002</span><br><span class="line">    9.9964547345520272e-001<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">R</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">T</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>1<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    -6.0209269661173187e+002 1.5326928276045152e+001</span><br><span class="line">    -2.2150904288412747e+001<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">T</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">opencv_storage</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x6BCF;&#x4E2A;&#x76F8;&#x673A;&#x7684;&#x65CB;&#x8F6C;&#x77E9;&#x9635;<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">R1</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    9.9988245414945298e-001 9.1965294752025303e-003</span><br><span class="line">    1.2267914642630471e-002 -9.2637135176302024e-003</span><br><span class="line">    9.9994234300203466e-001 5.4308639703710120e-003</span><br><span class="line">    -1.2217262210921568e-002 -5.5438720415545229e-003</span><br><span class="line">    9.9990999794324309e-001<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">R1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">R2</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>3<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    9.9900074660452376e-001 -2.5430656902316658e-002</span><br><span class="line">    3.6753094742089557e-002 2.5632007896526286e-002</span><br><span class="line">    9.9965885355277262e-001 -5.0176373672242616e-003</span><br><span class="line">    -3.6612954740047575e-002 5.9546790906987689e-003</span><br><span class="line">    9.9931177984757591e-001<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">R2</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x672C;&#x5F81;&#x77E9;&#x9635;"><a href="#&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x672C;&#x5F81;&#x77E9;&#x9635;" class="headerlink" title="&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x672C;&#x5F81;&#x77E9;&#x9635;"></a>&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x672C;&#x5F81;&#x77E9;&#x9635;</h1><p>&#x672C;&#x5F81;&#x77E9;&#x9635;&#x5E38;&#x7528;&#x5B57;&#x6BCD;$E$&#x6765;&#x8868;&#x793A;&#xFF0C;&#x5176;&#x7269;&#x7406;&#x610F;&#x4E49;&#x662F;&#x5DE6;&#x53F3;{picture}&#x5750;&#x6807;&#x7CFB;&#x76F8;&#x4E92;&#x8F6C;&#x6362;&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x53EF;&#x4EE5;&#x63CF;&#x8FF0;&#x5DE6;&#x53F3;&#x6444;&#x50CF;&#x673A;&#x56FE;&#x50CF;&#x5E73;&#x9762;&#x4E0A;&#x5BF9;&#x5E94;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x3002;</p><h2 id="&#x8BA1;&#x7B97;&#x672C;&#x5F81;&#x77E9;&#x9635;"><a href="#&#x8BA1;&#x7B97;&#x672C;&#x5F81;&#x77E9;&#x9635;" class="headerlink" title="&#x8BA1;&#x7B97;&#x672C;&#x5F81;&#x77E9;&#x9635;"></a>&#x8BA1;&#x7B97;&#x672C;&#x5F81;&#x77E9;&#x9635;</h2><p>&#x7531;&#x4E8E;&#x672C;&#x5F81;&#x77E9;&#x9635;&#x662F;&#x7B97;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5DE6;&#x53F3;&#x76F8;&#x673A;&#x7684;&#x5916;&#x53C2;&#x6765;&#x7B97;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6839;&#x636E;&#x6807;&#x5B9A;&#xFF0C;&#x6C42;&#x5F97;&#x524D;&#x6587;&#x6240;&#x8BF4;&#x7684;$R$&#x548C;$T$&#x6765;&#x7B97;&#x3002;&#x8FD9;&#x91CC;&#x662F;&#x76F4;&#x63A5;&#x6839;&#x636E;&#x6807;&#x5B9A;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6C42;&#x5F97;$R$&#x548C;$T$&#x6765;&#x7B97;&#x672C;&#x5F81;&#x77E9;&#x9635;&#x7684;&#x3002;</p><p>&#x5BF9;&#x7EA7;&#x51E0;&#x4F55;&#x5728;&#x53CC;&#x76EE;&#x95EE;&#x9898;&#x4E2D;&#x975E;&#x5E38;&#x7684;&#x91CD;&#x8981;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5316;&#x7ACB;&#x4F53;&#x5339;&#x914D;&#x7B49;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x8981;&#x5E94;&#x7528;&#x5BF9;&#x7EA7;&#x51E0;&#x4F55;&#x53BB;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x6C42;&#x7EA7;&#x7EBF;&#xFF0C;&#x9700;&#x8981;&#x77E5;&#x9053;&#x672C;&#x5F81;&#x77E9;&#x9635;&#x6216;&#x8005;&#x57FA;&#x7840;&#x77E9;&#x9635;&#xFF0C;&#x56E0;&#x6B64;&#x53CC;&#x76EE;&#x6807;&#x5B9A;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E5F;&#x4F1A;&#x628A;&#x672C;&#x5F81;&#x77E9;&#x9635;&#x548C;&#x57FA;&#x7840;&#x77E9;&#x9635;&#x7B97;&#x51FA;&#x6765;&#x3002;&#x4E4B;&#x6240;&#x4EE5;&#x8BF4;&#x662F;&#x7B97;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E24;&#x4E2A;&#x77E9;&#x9635;&#x4E0E;$R$&#x548C;$T$&#x5E76;&#x4E0D;&#x72EC;&#x7ACB;&#x3002;</p><p>&#x5047;&#x8BBE;&#x7A7A;&#x95F4;&#x4E2D;&#x6709;&#x4E00;&#x70B9;$P$&#xFF0C;&#x5176;&#x5728;{world}&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x5750;&#x6807;&#x4E3A;$P_W$&#xFF0C;&#x5176;&#x5728;&#x5DE6;&#x53F3;&#x6444;&#x50CF;&#x673A;{camera}&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x5750;&#x6807;&#x53EF;&#x4EE5;&#x4E3A;$P_l$&#x548C;$P_r$&#xFF0C;&#x53F3;{camera}&#x5750;&#x6807;&#x7CFB;&#x539F;&#x70B9;&#x5728;&#x5DE6;{camera}&#x5750;&#x6807;&#x7CFB;&#x7684;&#x5750;&#x6807;&#x4E3A;$T=[T_x,T_y,T_z]^T$&#xFF0C;&#x5219;&#x6709;&#xFF1A;<br>$$<br>P_r=R(P_l-T)<br>$$<br>&#x5219;&#x901A;&#x8FC7;&#x70B9;$T$&#x7684;&#x6240;&#x6709;&#x70B9;&#x7684;$P_l$&#x6240;&#x7EC4;&#x6210;&#x7684;&#x5E73;&#x9762;&#xFF08;&#x5373;&#x6781;&#x9762;&#xFF09;&#x53EF;&#x4EE5;&#x7528;&#x4E0B;&#x5F0F;&#x8868;&#x793A;&#xFF1A;<br>$$<br>(P_l-T)^T(P_l\times T)=0\tag{1}<br>$$<br>&#x5C06;$P_l&#xD7;T$&#x5199;&#x6210;&#x77E9;&#x9635;&#x76F8;&#x4E58;&#x7684;&#x5F62;&#x5F0F;&#xFF1A;<br>$$<br>P_l\times T=SP_l\tag{2}<br>$$<br>&#x5176;&#x4E2D;$S$&#x4E3A;&#xFF1A;<br>$$<br>S=\begin{bmatrix}<br>0 &amp; -T_x &amp; T_y \<br>T_z &amp; 0 &amp; -T_x \<br>-T_y &amp; T_x &amp; 0<br>\end{bmatrix}<br>$$<br>&#x7EFC;&#x5408;&#xFF08;1&#xFF09;&#xFF08;2&#xFF09;&#x5F0F;&#x53EF;&#x5F97;&#xFF1A;<br>$$<br>P_r^TRSP_l=0\tag{3}<br>$$<br>&#x4E58;&#x79EF;$RS$&#x5373;&#x4E3A;&#x672C;&#x5F81;&#x77E9;&#x9635;$E$&#xFF0C;&#x5229;&#x7528;&#x6295;&#x5F71;&#x65B9;&#x7A0B;&#x5C06;&#xFF08;3&#xFF09;&#x5F0F;&#x7B80;&#x5316;&#xFF1A;<br>$$<br>P_{pr}^TEP_{pl}=0\tag{4}<br>$$<br>&#xFF08;4&#xFF09;&#x5F0F;&#x63CF;&#x8FF0;&#x4E86;&#x540C;&#x4E00;&#x7269;&#x7406;&#x70B9;&#x5728;&#x5DE6;&#x53F3;&#x6444;&#x50CF;&#x673A;&#x56FE;&#x50CF;&#x5E73;&#x9762;&#x4E0A;&#x6295;&#x5F71;&#x5728;{picture}&#x4E0B;&#x7684;&#x5173;&#x7CFB;&#x3002;</p><h2 id="&#x6295;&#x5F71;&#x77E9;&#x9635;"><a href="#&#x6295;&#x5F71;&#x77E9;&#x9635;" class="headerlink" title="&#x6295;&#x5F71;&#x77E9;&#x9635;"></a>&#x6295;&#x5F71;&#x77E9;&#x9635;</h2><p>&#x5982;&#x56FE;&#xFF0C;&#x8003;&#x8651;&#x4E09;&#x7EF4;&#x4E16;&#x754C;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x70B9;&#xFF0C;&#x548C;&#x5176;&#x5728;&#x56FE;&#x50CF;&#xFF08;&#x4E8C;&#x7EF4;&#xFF09;&#x4E2D;&#x7684;&#x5750;&#x6807;&#x5173;&#x7CFB;&#x3002;<br><img src="/posts/8837a525/&#x6295;&#x5F71;&#x77E9;&#x9635;1.png" alt=""></p><p>$(X&#xFF0C;Y&#xFF0C;Z)$&#x4E3A;&#x70B9;&#x7684;&#x4E09;&#x7EF4;&#x5750;&#x6807;&#xFF0C;$(x&#xFF0C;y)$&#x4E3A;&#x5176;&#x901A;&#x8FC7;&#x76F8;&#x673A;&#x6210;&#x50CF;&#x540E;&#x5728;&#x56FE;&#x50CF;&#xFF08;&#x4E8C;&#x7EF4;&#xFF09;&#x4E0A;&#x7684;&#x5750;&#x6807;&#x3002;$u_0$&#x548C;$v_0$&#x662F;&#x76F8;&#x673A;&#x7684;&#x4E2D;&#x5FC3;&#x70B9;&#xFF08;&#x4E3B;&#x70B9;)&#xFF0C;&#x8BE5;&#x70B9;&#x4F4D;&#x4E8E;&#x56FE;&#x50CF;&#x5E73;&#x9762;&#x4E2D;&#x5FC3;&#xFF08;&#x7406;&#x8BBA;&#x4E0A;&#x662F;&#x8FD9;&#x6837;&#x3002;&#x4F46;&#x5B9E;&#x9645;&#x7684;&#x76F8;&#x673A;&#x4F1A;&#x6709;&#x51E0;&#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x504F;&#x5DEE;&#xFF09;</p><p>&#x73B0;&#x5728;&#x53EA;&#x8003;&#x8651;$y$&#x65B9;&#x5411;&#x4E0A;&#xFF0C;&#x7531;&#x4E8E;&#x9700;&#x8981;&#x5C06;&#x4E09;&#x7EF4;&#x4E16;&#x754C;&#x4E2D;&#x7684;&#x5750;&#x6807;&#xFF0C;&#x8F6C;&#x6362;&#x4E3A;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x50CF;&#x7D20;&#xFF08;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x5750;&#x6807;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x50CF;&#x7D20;&#x7684;&#x4F4D;&#x7F6E;&#xFF09;&#xFF0C;&#x9700;&#x8981;&#x6C42;$y$&#x65B9;&#x5411;&#x4E0A;&#x7126;&#x8DDD;&#x7B49;&#x4E8E;&#x591A;&#x5C11;&#x4E2A;&#x50CF;&#x7D20;&#xFF08;&#x7528;&#x50CF;&#x7D20;&#x503C;&#x8868;&#x793A;&#x7126;&#x8DDD;&#xFF09;&#xFF0C;$P_y$&#x8868;&#x793A;&#x50CF;&#x7D20;&#x7684;&#x9AD8;&#xFF0C;&#x7126;&#x8DDD;$f$&#xFF08;&#x7C73;&#x6216;&#x6BEB;&#x7C73;&#xFF09;&#x3002;&#x5782;&#x76F4;&#x50CF;&#x7D20;&#x8868;&#x793A;&#x7684;&#x7126;&#x8DDD;&#x4E3A;<br>$$<br>f_y=\frac f {p_y}<br>$$</p><p>&#x5982;&#x679C;&#x53EA;&#x8003;&#x8651;y&#x65B9;&#x5411;&#x3002;&#x6211;&#x4EEC;&#x4E09;&#x7EF4;&#x4E16;&#x754C;&#x4E2D;&#x5F97;&#x70B9;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#xFF08;&#x4E8C;&#x7EF4;&#xFF09;&#x4E2D;y&#x7684;&#x5750;&#x6807;&#x3002;<br>$$<br>y=\frac{f_yY}{Z}+v_0<br>$$<br>&#x540C;&#x7406;&#xFF0C;&#x5F97;&#x5230;x&#x7684;&#x5750;&#x6807;&#xFF1A;<br>$$<br>x=\frac{f_xX}{Z}+u_0<br>$$<br>&#x73B0;&#x5728;&#xFF0C;&#x5C06;&#x4E0A;&#x56FE;&#x4E2D;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;$O$&#xFF0C;&#x79FB;&#x52A8;&#x5230;&#x56FE;&#x50CF;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x3002;&#x7531;&#x4E8E;$(x&#xFF0C;y)$&#x662F;&#x5173;&#x4E8E;$(u0&#xFF0C;v0)$&#x7684;&#x504F;&#x79FB;&#xFF0C;&#x4E0A;&#x9762;&#x8868;&#x793A;&#x56FE;&#x50CF;&#xFF08;&#x4E8C;&#x7EF4;&#xFF09;&#x4E2D;&#x70B9;&#x7684;&#x5750;&#x6807;&#x7684;&#x5F0F;&#x5B50;&#x4E0D;&#x53D8;&#x3002;&#x5C06;&#x5F0F;&#x5B50;&#x4EE5;&#x77E9;&#x9635;&#x7684;&#x5F62;&#x5F0F;&#x91CD;&#x5199;&#xFF0C;&#x5F97;&#x3002;<br><img src="/posts/8837a525/&#x6295;&#x5F71;&#x77E9;&#x9635;2.png" alt=""></p><p>&#x5176;&#x4E2D;&#xFF0C;&#x7B49;&#x5F0F;&#x5DE6;&#x8FB9;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#xFF0C;&#x53EB;&#x505A;&#x201C;&#x76F8;&#x673A;&#x5185;&#x53C2;&#x6570;&#x77E9;&#x9635;&#x201D;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x77E9;&#x9635;&#x53EB;&#xFF08;&#x6295;&#x5F71;&#x77E9;&#x9635;&#xFF09;&#x3002;</p><p>&#x66F4;&#x4E3A;&#x4E00;&#x822C;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5F00;&#x59CB;&#x65F6;&#x7684;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x4F4D;&#x4E8E;&#x4E3B;&#x70B9;&#xFF08;&#x4E2D;&#x5FC3;&#x70B9;&#xFF09;&#xFF0C;&#x9700;&#x8981;&#x989D;&#x5916;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x201C;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x201D;&#x548C;&#x201C;&#x5E73;&#x79FB;&#x5411;&#x91CF;&#x201D;&#x6765;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x5F0F;&#x5B50;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5728;&#x4E0D;&#x540C;&#x89C6;&#x89D2;&#x4E2D;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x3002;&#x6574;&#x5408;&#x540E;&#xFF0C;&#x4E0A;&#x8FF0;&#x5F0F;&#x5B50;&#x91CD;&#x5199;&#x4E3A;:<br><img src="/posts/8837a525/&#x6295;&#x5F71;&#x77E9;&#x9635;3.png" alt=""></p><p>&#x5DE6;&#x53F3;&#x76F8;&#x673A;&#x7684;&#x6295;&#x5F71;&#x77E9;&#x9635;&#x4FDD;&#x5B58;&#x5728;rectifyData.xml&#x4E2D;&#xFF0C;&#x4E3A;&#xFF1A;<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">P1</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>4<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.1316289419152909e+003 0. 6.4512952423095703e+002 0. 0.</span><br><span class="line">    1.1316289419152909e+003 3.9881204986572266e+002 0. 0. 0. 1. 0.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">P1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">P2</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>3<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>4<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1.1316289419152909e+003 0. 6.4512952423095703e+002</span><br><span class="line">    -6.8202703903622192e+005 0. 1.1316289419152909e+003</span><br><span class="line">    3.9881204986572266e+002 0. 0. 0. 1. 0.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">P2</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;"><a href="#&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;" class="headerlink" title="&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;"></a>&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;</h2><p>Q&#x77E9;&#x9635;&#x4E3A;&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;&#xFF0C;&#x5373;&#x77E9;&#x9635;Q&#x53EF;&#x4EE5;&#x628A;2&#x7EF4;&#x5E73;&#x9762;(&#x56FE;&#x50CF;&#x5E73;&#x9762;)&#x4E0A;&#x7684;&#x70B9;&#x6295;&#x5F71;&#x5230;3&#x7EF4;&#x7A7A;&#x95F4;&#x7684;&#x70B9;&#x3002;</p><p>$$<br>Q=\begin{bmatrix}1&amp;\,0&amp;\,0&amp;\,-c_x\<br>0&amp;\,1&amp;\,0&amp;\,-c_y\<br>0&amp;\,0&amp;\,0&amp;\,f\<br>0&amp;\,0&amp;\,-1/T_x&amp;\,(c_x-c_x&#x2019;)/T_x\<br>\end{bmatrix}<br>$$<br>&#x5219;<br>$$<br>Q\begin{bmatrix}x\y\d\1\end{bmatrix}=\begin{bmatrix}X\Y\Z\W\end{bmatrix}\tag{5}<br>$$</p><p>&#x5176;&#x4E2D;d&#x8868;&#x793A;&#x89C6;&#x5DEE;&#xFF0C;&#x4E09;&#x7EF4;&#x5750;&#x6807;&#x4E3A;$(X/W,Y/W,Z/W)$&#xFF0C;$c_x&#x2019;$&#x8868;&#x793A;&#x53F3;&#x56FE;&#x50CF;&#x7684;&#x4E3B;&#x70B9;&#xFF0C;&#x5F53;&#x6821;&#x6B63;&#x6B63;&#x786E;&#x65F6;&#xFF0C;$c_x=c_x&#x2019;$&#xFF0C;&#x5728;&#x7ACB;&#x4F53;&#x6821;&#x6B63;&#x6B63;&#x786E;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#x5C55;&#x5F00;&#xFF08;5&#xFF09;&#x5F0F;&#xFF0C;&#x53EF;&#x5F97;<br>$$<br>(X/W,Y/W,Z/W)=(-\frac{x-c_x}{d}T_x, -\frac{y-c_y}{d}T_x, -\frac{f}{d}T_x)\tag{6}<br>$$<br>&#x4E4B;&#x6240;&#x4EE5;&#x6709;&#x8D1F;&#x53F7;&#x662F;&#x56E0;&#x4E3A;$T_xT$ &#x662F;&#x8D1F;&#x7684;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x8981;&#x51CF;&#x53BB;$c_x$&#x6216;$c_y$&#x662F;&#x56E0;&#x4E3A;{pixel}&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;&#x5728;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x800C;{camera}&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;&#x5728;&#x5149;&#x8F74;&#x4E0A;&#x3002;</p><p>&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x91CD;&#x6295;&#x5F71;&#x77E9;&#x9635;&#x662F;<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Q</span> <span class="attr">type_id</span>=<span class="string">&quot;opencv-matrix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rows</span>&gt;</span>4<span class="tag">&lt;/<span class="name">rows</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span>4<span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>d<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    1. 0. 0. -6.4512952423095703e+002 0. 1. 0. -3.9881204986572266e+002</span><br><span class="line">    0. 0. 0. 1.1316289419152909e+003 0. 0. 1.6592141911476194e-003 0.<span class="tag">&lt;/<span class="name">data</span>&gt;</span><span class="tag">&lt;/<span class="name">Q</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">opencv_storage</span>&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h1 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h1><ol><li><a href="https://blog.csdn.net/xuelabizp/article/category/5998315" target="_blank" rel="noopener">&#x673A;&#x5668;&#x89C6;&#x89C9;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;</a></li><li>SLAM&#x5341;&#x56DB;&#x8BB2;</li><li>&#x8D75;&#x632F;&#x521A;&#x8001;&#x5E08;&#x7684;PPT</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x667A;&amp;#x80FD;&amp;#x673A;&amp;#x5668;&amp;#x4EBA;-LAB2     &amp;#x5B9E;&amp;#x9A8C;&amp;#x62A5;&amp;#x544A;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="智能机器人" scheme="https://www.windsings.com/categories/%E6%99%BA%E8%83%BD%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
    
      <category term="实验报告" scheme="https://www.windsings.com/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
      <category term="C++" scheme="https://www.windsings.com/tags/C/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="双目相机" scheme="https://www.windsings.com/tags/%E5%8F%8C%E7%9B%AE%E7%9B%B8%E6%9C%BA/"/>
    
      <category term="单目相机" scheme="https://www.windsings.com/tags/%E5%8D%95%E7%9B%AE%E7%9B%B8%E6%9C%BA/"/>
    
      <category term="深度测量" scheme="https://www.windsings.com/tags/%E6%B7%B1%E5%BA%A6%E6%B5%8B%E9%87%8F/"/>
    
      <category term="点云图" scheme="https://www.windsings.com/tags/%E7%82%B9%E4%BA%91%E5%9B%BE/"/>
    
      <category term="相机参数" scheme="https://www.windsings.com/tags/%E7%9B%B8%E6%9C%BA%E5%8F%82%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>智能机器人复习笔记</title>
    <link href="https://www.windsings.com//posts/1d9c933b/"/>
    <id>https://www.windsings.com//posts/1d9c933b/</id>
    <published>2018-12-17T06:53:05.000Z</published>
    <updated>2019-01-19T13:18:37.410Z</updated>
    
    <content type="html"><![CDATA[<p>&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;&#x590D;&#x4E60;&#x7B14;&#x8BB0;&#xFF0C;&#x4EB2;&#x5A18;&#x561E;&#xFF0C;&#x8981;&#x4EBA;&#x547D;&#x4E86;&#x3002;T_T<br><a id="more"></a><br>&#x5982;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x8FD8;&#x8BF7;&#x591A;&#x591A;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#x3002;</p><h1 id="&#x7EEA;&#x8BBA;"><a href="#&#x7EEA;&#x8BBA;" class="headerlink" title="&#x7EEA;&#x8BBA;"></a>&#x7EEA;&#x8BBA;</h1><h2 id="&#x4EC0;&#x4E48;&#x662F;&#x673A;&#x5668;&#x4EBA;"><a href="#&#x4EC0;&#x4E48;&#x662F;&#x673A;&#x5668;&#x4EBA;" class="headerlink" title="&#x4EC0;&#x4E48;&#x662F;&#x673A;&#x5668;&#x4EBA;"></a>&#x4EC0;&#x4E48;&#x662F;&#x673A;&#x5668;&#x4EBA;</h2><p>&#x6765;&#x81EA;&#x56FD;&#x9645;&#x6807;&#x51C6;&#x7EC4;&#x7EC7;&#xFF08;ISO&#xFF09;&#x7684;&#x5B9A;&#x4E49;&#xFF1A;<br>&#x673A;&#x5668;&#x4EBA;&#x662F;&#x4E00;&#x79CD;&#x81EA;&#x52A8;&#x7684;&#x3001;&#x4F4D;&#x7F6E;&#x53EF;&#x63A7;&#x7684;&#x3001;&#x5177;&#x6709;&#x7F16;&#x7A0B;&#x80FD;&#x529B;&#x7684;&#x591A;&#x529F;&#x80FD;&#x673A;&#x68B0;&#x624B;&#xFF0C;&#x8FD9;&#x79CD;&#x673A;&#x68B0;&#x624B;&#x5177;&#x6709;&#x51E0;&#x4E2A;&#x8F74;&#xFF0C;&#x80FD;&#x591F;&#x501F;&#x52A9;&#x4E8E;&#x53EF;&#x7F16;&#x7A0B;&#x5E8F;&#x64CD;&#x4F5C;&#x6765;&#x5904;&#x7406;&#x5404;&#x79CD;&#x6750;&#x6599;&#x3001;&#x96F6;&#x4EF6;&#x3001;&#x5DE5;&#x5177;&#x548C;&#x4E13;&#x7528;&#x88C5;&#x7F6E;&#xFF0C;&#x4EE5;&#x6267;&#x884C;&#x79CD;&#x79CD;&#x4EFB;&#x52A1;&#x3002;</p><p>&#x5B9A;&#x4E49;&#x5927;&#x591A;&#x6765;&#x6E90;&#x4E8E;&#x5DE5;&#x4E1A;&#x81EA;&#x52A8;&#x5316;&#x573A;&#x666F;&#xFF0C;&#x8FD8;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x7EDF;&#x4E00;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5E76;&#x4E14;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8303;&#x7574;&#x8FD8;&#x5728;&#x4E0D;&#x65AD;&#x53D8;&#x5316;&#x6F14;&#x8FDB;&#x4E2D;&#x3002;<br>&#x5171;&#x540C;&#x5C5E;&#x6027;&#xFF1A;</p><ul><li>&#x50CF;&#x4EBA;&#x6216;&#x4EBA;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x5E76;&#x6A21;&#x4EFF;&#x4EBA;&#x7684;&#x52A8;&#x4F5C;</li><li>&#x5177;&#x6709;&#x667A;&#x80FD;&#x6216;&#x611F;&#x89C9;&#x4E0E;&#x8BC6;&#x522B;&#x80FD;&#x529B;</li><li>&#x662F;&#x4EBA;&#x5236;&#x9020;&#x7684;&#x673A;&#x5668;&#x6216;&#x673A;&#x68B0;&#x7535;&#x5B50;&#x88C5;&#x7F6E;</li></ul><h2 id="&#x4EC0;&#x4E48;&#x662F;&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;"><a href="#&#x4EC0;&#x4E48;&#x662F;&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;" class="headerlink" title="&#x4EC0;&#x4E48;&#x662F;&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;"></a>&#x4EC0;&#x4E48;&#x662F;&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;</h2><p>&#x4E00;&#x79CD;&#x5E7F;&#x4E49;&#x7684;&#x5B9A;&#x4E49;&#xFF1A;&#x5177;&#x6709;&#x611F;&#x89C9;&#xFF0C;&#x8BC6;&#x522B;&#xFF0C;&#x63A8;&#x7406;&#x5224;&#x65AD;&#x548C;&#x4E0E;&#x4EBA;&#x4EA4;&#x4E92;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5916;&#x754C;&#x6761;&#x4EF6;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x5728;&#x4E00;&#x5B9A;&#x8303;&#x56F4;&#x5185;&#x81EA;&#x884C;&#x4FEE;&#x6539;&#x7A0B;&#x5E8F;&#x4EE5;&#x8FBE;&#x6210;&#x76EE;&#x6807;&#x7684;&#x7CFB;&#x7EDF;&#x3002;</p><h2 id="&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x4E0E;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8054;&#x7CFB;"><a href="#&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x4E0E;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8054;&#x7CFB;" class="headerlink" title="&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x4E0E;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8054;&#x7CFB;"></a>&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x4E0E;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8054;&#x7CFB;</h2><p>&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;&#x7528;&#x5230;&#x4E86;&#x4EBA;&#x5DE5;&#x667A;&#x80FD;&#x7684;&#x591A;&#x4E2A;&#x9886;&#x57DF;&#x3002;&#x5305;&#x62EC;&#x4F46;&#x4E0D;&#x4EC5;&#x9650;&#x4E8E;</p><ul><li>&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;</li><li>&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x7406;&#x89E3;&#x4E0E;&#x4EA4;&#x6D41;</li><li>&#x8BA4;&#x77E5;&#x4E0E;&#x63A8;&#x7406;</li><li>&#x673A;&#x5668;&#x4EBA;&#x5B66;</li><li>&#x535A;&#x5F08;&#x4E0E;&#x4F26;&#x7406;</li><li>&#x673A;&#x5668;&#x5B66;&#x4E60;</li></ul><h2 id="&#x673A;&#x5668;&#x4EBA;&#x4E09;&#x5B88;&#x5219;"><a href="#&#x673A;&#x5668;&#x4EBA;&#x4E09;&#x5B88;&#x5219;" class="headerlink" title="&#x673A;&#x5668;&#x4EBA;&#x4E09;&#x5B88;&#x5219;"></a>&#x673A;&#x5668;&#x4EBA;&#x4E09;&#x5B88;&#x5219;</h2><ol><li>&#x673A;&#x5668;&#x4EBA;&#x5FC5;&#x987B;&#x4E0D;&#x5371;&#x5BB3;&#x4EBA;&#x7C7B;&#xFF0C;&#x4E5F;&#x4E0D;&#x5141;&#x8BB8;&#x5B83;&#x773C;&#x770B;&#x4EBA;&#x5C06;&#x53D7;&#x5BB3;&#x800C;&#x8896;&#x624B;&#x65C1;&#x89C2;&#x3002;</li><li>&#x673A;&#x5668;&#x4EBA;&#x5FC5;&#x987B;&#x7EDD;&#x5BF9;&#x670D;&#x4ECE;&#x4E8E;&#x4EBA;&#x7C7B;&#xFF0C;&#x9664;&#x975E;&#x8FD9;&#x79CD;&#x670D;&#x4ECE;&#x6709;&#x5BB3;&#x4E8E;&#x4EBA;&#x7C7B;&#x3002;</li><li>&#x673A;&#x5668;&#x4EBA;&#x5FC5;&#x987B;&#x4FDD;&#x62A4;&#x81EA;&#x8EAB;&#x4E0D;&#x53D7;&#x4F24;&#x5BB3;&#xFF0C;&#x9664;&#x975E;&#x4E3A;&#x4E86;&#x4FDD;&#x62A4;&#x4EBA;&#x7C7B;&#x6216;&#x8005;&#x662F;&#x4EBA;&#x7C7B;&#x547D;&#x4EE4;&#x5B83;&#x4F5C;&#x51FA;&#x727A;&#x7272;&#x3002;</li></ol><h1 id="&#x4E09;&#x7EF4;&#x53D8;&#x6362;"><a href="#&#x4E09;&#x7EF4;&#x53D8;&#x6362;" class="headerlink" title="&#x4E09;&#x7EF4;&#x53D8;&#x6362;"></a>&#x4E09;&#x7EF4;&#x53D8;&#x6362;</h1><h2 id="&#x7A7A;&#x95F4;&#x5750;&#x6807;&#x7CFB;"><a href="#&#x7A7A;&#x95F4;&#x5750;&#x6807;&#x7CFB;" class="headerlink" title="&#x7A7A;&#x95F4;&#x5750;&#x6807;&#x7CFB;"></a>&#x7A7A;&#x95F4;&#x5750;&#x6807;&#x7CFB;</h2><h3 id="&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;"><a href="#&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;" class="headerlink" title="&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;"></a>&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x4EFB;&#x4F55;&#x8FDE;&#x4E2A;&#x4E8C;&#x7EF4;&#x7684;&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5E73;&#x79FB;&#x548C;&#x65CB;&#x8F6C;&#x4F7F;&#x4E24;&#x4E2A;&#x5750;&#x6807;&#x7CFB;&#x91CD;&#x5408;&#x3002;</p><p>&#x4E09;&#x7EF4;&#x7684;&#x7B1B;&#x5361;&#x5C14;&#x5750;&#x6807;&#x7CFB;&#x5206;&#x4E24;&#x79CD;&#xFF0C;&#x5DE6;&#x624B;&#x7CFB;&#x548C;&#x53F3;&#x624B;&#x7CFB;&#x3002;&#x6A21;&#x578B;&#x90FD;&#x662F;&#x5DE6;&#x624B;/&#x53F3;&#x624B;&#x7684;&#xFF1A;</p><ul><li><strong>&#x5927;&#x62C7;&#x6307;</strong>&#x6307;&#x5411;$X$&#x8F74;&#x7684;&#x6B63;&#x65B9;&#x5411;</li><li><strong>&#x98DF;&#x6307;</strong>&#x6307;&#x5411;$Y$&#x8F74;&#x7684;&#x6B63;&#x65B9;&#x5411;</li><li><strong>&#x4E2D;&#x6307;</strong>&#x6307;&#x5411;$Z$&#x8F74;&#x7684;<strong>&#x8D1F;</strong>&#x65B9;&#x5411;</li></ul><h3 id="&#x6A21;&#x578B;&#x5750;&#x6807;&#x7CFB;&#xFF08;&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;&#xFF09;"><a href="#&#x6A21;&#x578B;&#x5750;&#x6807;&#x7CFB;&#xFF08;&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;&#xFF09;" class="headerlink" title="&#x6A21;&#x578B;&#x5750;&#x6807;&#x7CFB;&#xFF08;&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;&#xFF09;"></a>&#x6A21;&#x578B;&#x5750;&#x6807;&#x7CFB;&#xFF08;&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;&#xFF09;</h3><p>&#x662F;&#x548C;&#x7279;&#x5B9A;&#x7269;&#x4F53;&#x76F8;&#x5173;&#x8054;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x3002;</p><p>&#x6BCF;&#x4E2A;&#x7269;&#x4F53;&#x90FD;&#x6709;&#x5B83;&#x4EEC;&#x72EC;&#x7ACB;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x3002;&#x5F53;&#x7269;&#x4F53;&#x79FB;&#x52A8;&#x6216;&#x8005;&#x6539;&#x53D8;&#x65B9;&#x5411;&#x65F6;&#xFF0C;&#x548C;&#x8BE5;&#x7269;&#x4F53;&#x76F8;&#x5173;&#x8054;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x5C31;&#x968F;&#x4E4B;&#x79FB;&#x52A8;&#x6216;&#x8005;&#x6539;&#x53D8;&#x65B9;&#x5411;&#x3002;</p><p>&#x201C;&#x524D;&#x201D;&#x201C;&#x540E;&#x201D;&#x201C;&#x5DE6;&#x201D;&#x201C;&#x53F3;&#x201D;&#x53EA;&#x6709;&#x5728;&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x624D;&#x6709;&#x610F;&#x4E49;&#x3002;</p><p>&#x7269;&#x4F53;&#x5750;&#x6807;&#x7CFB;&#x4E5F;&#x80FD;&#x50CF;&#x6307;&#x5B9A;&#x65B9;&#x5411;&#x4E00;&#x6837;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x3002;</p><h3 id="&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;"><a href="#&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;" class="headerlink" title="&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;"></a>&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x53C8;&#x53EB;&#x505A;&#x5168;&#x5C40;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x5B87;&#x5B99;&#x5750;&#x6807;&#x7CFB;&#x3002;<br>&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x662F;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x4ED6;&#x5EFA;&#x7ACB;&#x4E86;&#x63CF;&#x8FF0;&#x5176;&#x5B83;&#x5750;&#x6807;&#x7CFB;&#x6240;&#x9700;&#x8981;&#x7684;&#x53C2;&#x8003;&#x6846;&#x67B6;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x80FD;&#x591F;&#x7528;&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x63CF;&#x8FF0;&#x5176;&#x5B83;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><p>&#x4F5C;&#x7528;&#xFF1A;&#x5EFA;&#x7ACB;&#x4E86;&#x63CF;&#x8FF0;&#x5176;&#x4ED6;&#x5750;&#x6807;&#x7CFB;&#x6240;&#x9700;&#x8981;&#x7684;&#x53C2;&#x8003;&#x6846;&#x67B6;&#x3002;<br>&#x4ECE;&#x975E;&#x6280;&#x672F;&#x610F;&#x4E49;&#x4E0A;&#x8BB2;&#xFF0C;&#x5B83;&#x662F;&#x6211;&#x4EEC;&#x5173;&#x5FC3;&#x7684;&#x7684;&#x6700;&#x5927;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x6240;&#x4EE5;&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5FC5;&#x662F;&#x6574;&#x4E2A;&#x4E16;&#x754C;&#x3002;</p><p>&#x4E16;&#x754C;&#x5750;&#x6807;&#x7684;&#x5178;&#x578B;&#x95EE;&#x9898;&#xFF1A;  </p><ul><li>&#x6BCF;&#x4E2A;&#x7269;&#x4F53;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x65B9;&#x5411;</li><li>&#x6444;&#x50CF;&#x673A;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x65B9;&#x5411;</li><li>&#x4E16;&#x754C;&#x4E2D;&#x6BCF;&#x4E00;&#x70B9;&#x7684;&#x5730;&#x5F62;&#x662F;&#x4EC0;&#x4E48;</li><li>&#x7269;&#x4F53;&#x4ECE;&#x90A3;&#x91CC;&#x6765;&#x5230;&#x90A3;&#x91CC;&#x53BB;</li></ul><h3 id="&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;"><a href="#&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;" class="headerlink" title="&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;"></a>&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x6444;&#x50CF;&#x5750;&#x6807;&#x7CFB;&#x662F;&#x548C;&#x89C2;&#x5BDF;&#x8005;&#x5BC6;&#x5207;&#x76F8;&#x5173;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x3002;&#x8BE5;&#x5750;&#x6807;&#x7CFB;&#x5B9A;&#x4E49;&#x5728;&#x6444;&#x50CF;&#x673A;&#x7684;&#x5C4F;&#x5E55;&#x53EF;&#x89C6;&#x533A;&#x57DF;&#x3002;</p><h3 id="&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;"><a href="#&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;" class="headerlink" title="&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;"></a>&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;&#xFF08;DC&#xFF09;&#x6216;&#x5C4F;&#x5E55;&#x5750;&#x6807;&#x7CFB;&#xFF1A;&#x663E;&#x793A;&#x8BBE;&#x5907;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x79F0;&#x4E3A;&#x8BBE;&#x5907;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x8BE5;&#x5750;&#x6807;&#x7CFB;&#x4F9D;&#x8D56;&#x4E8E;&#x5177;&#x4F53;&#x7684;&#x663E;&#x793A;&#x8BBE;&#x5907;&#x3002;</p><h3 id="&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x7CFB;"><a href="#&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x7CFB;" class="headerlink" title="&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x7CFB;"></a>&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x7CFB;</h3><p>&#x6307;&#x72EC;&#x7ACB;&#x4E8E;&#x5177;&#x4F53;&#x7269;&#x7406;&#x8BBE;&#x5907;&#x7684;&#x4E00;&#x79CD;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x5B83;&#x7684;&#x5750;&#x6807;&#x8303;&#x56F4;&#x5728;x&#x548C;y&#x4E0A;&#x7684;&#x8303;&#x56F4;&#x90FD;&#x662F;<strong>0&#x5230;1</strong>&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x5185;&#x90E8;&#x5904;&#x7406;&#x56FE;&#x5F62;&#xFF0C;&#x5BF9;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7269;&#x7406;&#x8BBE;&#x5907;&#xFF0C;&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x548C;&#x8BBE;&#x5907;&#x5750;&#x6807;&#x4EC5;&#x4EC5;&#x76F8;&#x5DEE;&#x4E00;&#x4E2A;&#x6BD4;&#x4F8B;&#x56E0;&#x5B50;&#xFF0C;&#x89C4;&#x8303;&#x5316;&#x5750;&#x6807;&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7684;&#x56FE;&#x5F62;&#x8BBE;&#x5907;&#x3002;</p><h2 id="&#x5185;&#x79EF;&#x4E0E;&#x5916;&#x79EF;"><a href="#&#x5185;&#x79EF;&#x4E0E;&#x5916;&#x79EF;" class="headerlink" title="&#x5185;&#x79EF;&#x4E0E;&#x5916;&#x79EF;"></a>&#x5185;&#x79EF;&#x4E0E;&#x5916;&#x79EF;</h2><p>&#x5185;&#x79EF;&#x53EF;&#x4EE5;&#x63CF;&#x8FF0;&#x5411;&#x91CF;&#x95F4;&#x7684;&#x6295;&#x5F71;&#x5173;&#x7CFB;&#x3002;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;<br><img src="/posts/1d9c933b/&#x5185;&#x79EF;&#x516C;&#x5F0F;.jpg" alt=""></p><p>&#x5916;&#x79EF;&#x7684;&#x65B9;&#x5411;&#x5782;&#x76F4;&#x4E8E;&#x8FD9;&#x4E24;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x5927;&#x5C0F;&#x4E3A;$\lvert a \rvert\lvert b\rvert sin\langle a,b \rangle$&#x3002;&#x662F;&#x4E24;&#x4E2A;&#x5411;&#x91CF;&#x5F20;&#x6210;&#x7684;&#x56DB;&#x8FB9;&#x5F62;&#x7684;&#x6709;&#x5411;&#x9762;&#x79EF;&#x3002;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;<br><img src="/posts/1d9c933b/&#x5916;&#x79EF;&#x516C;&#x5F0F;.jpg" alt=""></p><p>&#x5916;&#x79EF;&#x53EA;&#x5BF9;&#x4E09;&#x7EF4;&#x5411;&#x91CF;&#x5B58;&#x5728;&#x5B9A;&#x4E49;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x80FD;&#x7528;&#x5916;&#x79EF;&#x8868;&#x793A;&#x5411;&#x91CF;&#x7684;&#x65CB;&#x8F6C;&#x3002;</p><h2 id="&#x4F4D;&#x7F6E;&#x63CF;&#x8FF0;"><a href="#&#x4F4D;&#x7F6E;&#x63CF;&#x8FF0;" class="headerlink" title="&#x4F4D;&#x7F6E;&#x63CF;&#x8FF0;"></a>&#x4F4D;&#x7F6E;&#x63CF;&#x8FF0;</h2><h3 id="&#x5750;&#x6807;&#x7CFB;&#x7684;&#x8868;&#x793A;"><a href="#&#x5750;&#x6807;&#x7CFB;&#x7684;&#x8868;&#x793A;" class="headerlink" title="&#x5750;&#x6807;&#x7CFB;&#x7684;&#x8868;&#x793A;"></a>&#x5750;&#x6807;&#x7CFB;&#x7684;&#x8868;&#x793A;</h3><p><strong>&#x5750;&#x6807;&#x7CFB;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x8FDC;&#x70B9;&#x7684;&#x8868;&#x793A;</strong>&#xFF1A;&#x7528;&#x4E09;&#x4E2A;&#x76F8;&#x4E92;&#x5782;&#x76F4;&#x7684;&#x5355;&#x4F4D;&#x5411;&#x91CF;&#x6765;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x4E2D;&#x5FC3;&#x4F4D;&#x4E8E;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x539F;&#x70B9;&#x7684;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x5206;&#x522B;&#x4E3A;n,o,a&#xFF0C;&#x8FD9;&#x6837;&#xFF0C;&#x5750;&#x6807;&#x7CFB;&#x5C31;&#x53EF;&#x4EE5;&#x7531;&#x4E09;&#x4E2A;&#x5411;&#x91CF;&#x4EE5;&#x77E9;&#x9635;&#x7684;&#x5F62;&#x5F0F;&#x8868;&#x793A;&#x4E3A;<br><img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x8FDC;&#x70B9;&#x7684;&#x8868;&#x793A;1.jpg" alt=""><br><img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x8FDC;&#x70B9;&#x7684;&#x8868;&#x793A;2.jpg" alt=""></p><h2 id="&#x65CB;&#x8F6C;&#x77E9;&#x9635;"><a href="#&#x65CB;&#x8F6C;&#x77E9;&#x9635;" class="headerlink" title="&#x65CB;&#x8F6C;&#x77E9;&#x9635;"></a>&#x65CB;&#x8F6C;&#x77E9;&#x9635;</h2><p>&#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x82E5;&#x5728;&#x57FA;&#x4E3A;$(e_1,e_2,e_3)$&#x7684;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x7684;&#x5750;&#x6807;&#x4E3A;$[a_1,a_2,a_3]$&#xFF0C;&#x5728;&#x57FA;&#x4E3A;$(e&#x2019;_1,e&#x2019;_2,e&#x2019;_3)$&#x7684;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x7684;&#x5750;&#x6807;&#x4E3A;$[a&#x2019;_1,a&#x2019;_2,a&#x2019;_3]$&#x3002;&#x5219;&#x6709;&#xFF1A;<br><img src="/posts/1d9c933b/&#x65CB;&#x8F6C;&#x77E9;&#x9635;.jpg" alt=""><br>&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x7684;&#x6027;&#x8D28;&#xFF1A;</p><ul><li>&#x662F;&#x4E00;&#x4E2A;&#x884C;&#x5217;&#x5F0F;&#x4E3A;1&#x7684;&#x6B63;&#x4EA4;&#x77E9;&#x9635;&#x3002;</li><li>&#x5355;&#x4F4D;&#x5411;&#x91CF;&#x4E4B;&#x95F4;&#x4E92;&#x76F8;&#x5782;&#x76F4;&#xFF0C;&#x6B63;&#x4EA4;&#x3002;</li></ul><h2 id="&#x9F50;&#x6B21;&#x5750;&#x6807;"><a href="#&#x9F50;&#x6B21;&#x5750;&#x6807;" class="headerlink" title="&#x9F50;&#x6B21;&#x5750;&#x6807;"></a>&#x9F50;&#x6B21;&#x5750;&#x6807;</h2><h3 id="&#x70B9;"><a href="#&#x70B9;" class="headerlink" title="&#x70B9;"></a>&#x70B9;</h3><p>&#x5728;&#x4E00;&#x4E2A;&#x4E09;&#x7EF4;&#x5411;&#x91CF;&#x7684;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;1&#xFF0C;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x56DB;&#x7EF4;&#x5411;&#x91CF;&#xFF0C;&#x79F0;&#x4E4B;&#x4E3A;&#x9F50;&#x6B21;&#x5750;&#x6807;&#x3002;</p><p>&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x7EF4;&#xFF0C;&#x5373;&#x591A;&#x4E86;&#x4E00;&#x4E2A;&#x81EA;&#x7531;&#x5EA6;&#xFF0C;&#x4F46;&#x662F;&#x5141;&#x8BB8;&#x628A;&#x53D8;&#x6362;&#x5199;&#x6210;&#x7EBF;&#x6027;&#x7684;&#x5F62;&#x5F0F;&#x3002;&#x5728;&#x9F50;&#x6B21;&#x5750;&#x6807;&#x4E2D;&#xFF0C;&#x67D0;&#x4E2A;&#x70B9; $x$ &#x7684;&#x6BCF;&#x4E2A;&#x5206;&#x91CF;&#x540C;&#x4E58;&#x4E00;&#x4E2A;&#x975E;&#x96F6;&#x5E38;&#x6570; $k$ &#x540E;&#xFF0C; &#x4ECD;&#x7136;&#x8868;&#x793A;&#x7684;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x70B9;&#x3002;</p><h3 id="&#x5750;&#x6807;&#x8F74;"><a href="#&#x5750;&#x6807;&#x8F74;" class="headerlink" title="&#x5750;&#x6807;&#x8F74;"></a>&#x5750;&#x6807;&#x8F74;</h3><p>&#x5047;&#x8BBE;i\j\k&#x662F;&#x76F4;&#x89D2;&#x5750;&#x6807;&#x7CFB;&#x4E2D;X\Y\Z&#x5750;&#x6807;&#x8F74;&#x7684;&#x5355;&#x4F4D;&#x5411;&#x91CF;&#xFF0C;&#x5219;X\Y\Z&#x8F74;&#x53EF;&#x8868;&#x793A;&#x4E3A;<br><img src="/posts/1d9c933b/&#x9F50;&#x6B21;&#x5750;&#x6807;&#x8F74;.jpg" alt=""></p><h3 id="&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;"><a href="#&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;" class="headerlink" title="&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;"></a>&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;</h3><p>&#x5BF9;&#x4E8E;&#x9F50;&#x6B21;&#x5750;&#x6807;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x65CB;&#x8F6C;&#x548C;&#x5E73;&#x79FB;&#x5199;&#x5728;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#x91CC;&#x9762;&#xFF0C;&#x4F7F;&#x5F97;&#x6574;&#x4E2A;&#x5173;&#x7CFB;&#x53D8;&#x6210;&#x4E86;&#x7EBF;&#x6027;&#x5173;&#x7CFB;&#x3002;<br>&#x8FD9;&#x4E2A;&#x63CF;&#x8FF0;&#x53D8;&#x6362;&#x5173;&#x7CFB;&#x7684;&#x77E9;&#x9635;&#x5C31;&#x662F;&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;&#x3002;</p><p>&#x5173;&#x4E8E;&#x53D8;&#x6362;&#x77E9;&#x9635; T&#xFF0C;&#x5B83;&#x5177;&#x6709;&#x6BD4;&#x8F83;&#x7279;&#x522B;&#x7684;&#x7ED3;&#x6784;&#xFF1A;&#x5DE6;&#x4E0A;&#x89D2;&#x4E3A;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#xFF0C;&#x53F3;&#x4FA7;&#x4E3A;&#x5E73;&#x79FB;&#x5411;&#x91CF;&#xFF0C;&#x5DE6;&#x4E0B;&#x89D2;&#x4E3A; 0 &#x5411;&#x91CF;&#xFF0C;&#x53F3;&#x4E0B;&#x89D2;&#x4E3A; 1&#x3002;&#x8FD9;&#x79CD;&#x77E9;&#x9635;&#x53C8;&#x79F0;&#x4E3A;&#x7279;&#x6B8A;&#x6B27;&#x6C0F;&#x7FA4;&#x3002;<br><img src="/posts/1d9c933b/&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;.jpg" alt=""></p><p>&#x8BE5;&#x77E9;&#x9635;&#x7684;&#x9006;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x53CD;&#x5411;&#x7684;&#x53D8;&#x6362;&#xFF1A;<br><img src="/posts/1d9c933b/&#x9F50;&#x6B21;&#x53D8;&#x6362;&#x77E9;&#x9635;_&#x9006;.jpg" alt=""></p><h3 id="&#x9F50;&#x6B21;&#x5750;&#x6807;&#x63CF;&#x8FF0;&#x5750;&#x6807;&#x7CFB;"><a href="#&#x9F50;&#x6B21;&#x5750;&#x6807;&#x63CF;&#x8FF0;&#x5750;&#x6807;&#x7CFB;" class="headerlink" title="&#x9F50;&#x6B21;&#x5750;&#x6807;&#x63CF;&#x8FF0;&#x5750;&#x6807;&#x7CFB;"></a>&#x9F50;&#x6B21;&#x5750;&#x6807;&#x63CF;&#x8FF0;&#x5750;&#x6807;&#x7CFB;</h3><p><strong>&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;</strong>&#xFF1A;&#x53EF;&#x4EE5;&#x5728;&#x8BE5;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;&#x4E0E;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x539F;&#x70B9;&#x4E4B;&#x95F4;&#x505A;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x5411;&#x91CF;&#x7531;&#x4E0A;&#x8282;&#x4E2D;&#x63D0;&#x5230;&#x7684;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x4E09;&#x4E2A;&#x5750;&#x6807;&#x5411;&#x91CF;&#x8868;&#x793A;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x8FD9;&#x4E2A;&#x5750;&#x6807;&#x7CFB;&#x5C31;&#x53EF;&#x4EE5;&#x7531;&#x4E09;&#x4E2A;&#x8868;&#x793A;&#x65B9;&#x5411;&#x7684;&#x5355;&#x4F4D;&#x5411;&#x91CF;&#x4EE5;&#x53CA;&#x7B2C;&#x56DB;&#x4E2A;&#x4F4D;&#x7F6E;&#x5411;&#x91CF;&#x6765;&#x8868;&#x793A;&#x3002;<br><img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;1.jpg" alt=""><br><img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;2.jpg" alt=""></p><p><strong>&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;</strong>&#xFF1A;&#x5750;&#x6807;&#x7CFB;&#x4F4D;&#x4E8E;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;3&#xFF0C;5&#xFF0C;7&#x7684;&#x4F4D;&#x7F6E;&#x3002;n&#x8F74;&#x4E0E;x&#x8F74;&#x5E73;&#x884C;&#xFF0C;o&#x8F74;&#x76F8;&#x5BF9;&#x4E8E;y&#x8F74;&#x89D2;&#x5EA6;45&#xB0;&#xFF0C;a&#x8F74;&#x76F8;&#x5BF9;&#x4E8E;z&#x8F74;&#x89D2;&#x5EA6;45 &#xB0;&#xFF09;<br><img src="/posts/1d9c933b/&#x5750;&#x6807;&#x7CFB;&#x4E0D;&#x5728;&#x56FA;&#x5B9A;&#x53C2;&#x8003;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x539F;&#x70B9;&#x4E3E;&#x4F8B;.jpg" alt=""></p><h2 id="&#x65CB;&#x8F6C;&#x5411;&#x91CF;"><a href="#&#x65CB;&#x8F6C;&#x5411;&#x91CF;" class="headerlink" title="&#x65CB;&#x8F6C;&#x5411;&#x91CF;"></a>&#x65CB;&#x8F6C;&#x5411;&#x91CF;</h2><p>&#x65B9;&#x5411;&#x4E3A;&#x65CB;&#x8F6C;&#x8F74;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;&#x65CB;&#x8F6C;&#x7684;&#x89D2;&#x5EA6;&#x3002;</p><p>&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x4E0E;&#x77E9;&#x9635;&#x7684;&#x4E0D;&#x540C;</p><ul><li>&#x4EC5;&#x6709;&#x4E09;&#x4E2A;&#x91CF;</li><li>&#x65E0;&#x7EA6;&#x675F;</li><li>&#x66F4;&#x76F4;&#x89C2;</li></ul><p>&#x662F;&#x4E00;&#x4E2A;&#x4E1C;&#x897F;&#x7684;&#x4E0D;&#x540C;&#x8868;&#x8FBE;&#x65B9;&#x5F0F;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x65CB;&#x8F6C;&#x8F74;&#x4E3A;$n$&#xFF0C;&#x89D2;&#x5EA6;&#x4E3A;$\theta$&#x7684;&#x65CB;&#x8F6C;&#xFF0C;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x4E3A;$\theta n$&#x3002;&#x7531;&#x65CB;&#x8F6C;&#x5411;&#x91CF;&#x5230;&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x7684;&#x8FC7;&#x7A0B;&#x7531;<strong>&#x7F57;&#x5FB7;&#x91CC;&#x683C;&#x65AF;&#x516C;&#x5F0F;</strong>&#x8868;&#x660E;&#x3002;&#x5177;&#x4F53;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/posts/1d9c933b/&#x7F57;&#x5FB7;&#x91CC;&#x683C;&#x65AF;&#x516C;&#x5F0F;.jpg" alt=""><br>&#x7B26;&#x53F7;  $\hat{}$  &#x662F;&#x5411;&#x91CF;&#x5230;&#x53CD;&#x5BF9;&#x79F0;&#x7684;&#x8F6C;&#x6362;&#x7B26;&#x3002;&#x5B9A;&#x4E49;&#x89C1;&#x5916;&#x79EF;&#x8FD0;&#x7B97;&#x516C;&#x5F0F;&#x3002;&#x5373;&#x4E3A;&#xFF1A;<br><img src="/posts/1d9c933b/&#x7F57;&#x5FB7;&#x91CC;&#x683C;&#x65AF;&#x516C;&#x5F0F;2.png" alt=""></p><p>&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x8F6C;&#x5411;&#x91CF;&#xFF0C;&#x89D2;&#x5EA6;&#x4E3A;&#xFF1A;<br><img src="/posts/1d9c933b/&#x65CB;&#x8F6C;&#x77E9;&#x9635;&#x8F6C;&#x5411;&#x91CF;_&#x89D2;.jpg" alt=""><br>&#x8F74;&#x4E3A;&#xFF1A;<br>$$<br>Rn=n<br>$$</p><h2 id="&#x6B27;&#x62C9;&#x89D2;"><a href="#&#x6B27;&#x62C9;&#x89D2;" class="headerlink" title="&#x6B27;&#x62C9;&#x89D2;"></a>&#x6B27;&#x62C9;&#x89D2;</h2><p>&#x5C06;&#x65CB;&#x8F6C;&#x5206;&#x89E3;&#x4E3A;&#x4E09;&#x4E2A;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x8F6C;&#x52A8;&#x3002;</p><p>&#x8F74;&#x53EF;&#x4EE5;&#x662F;&#x5B9A;&#x8F74;&#x6216;&#x8005;&#x52A8;&#x8F74;&#xFF0C;&#x987A;&#x5E8F;&#x4EA6;&#x53EF;&#x4EE5;&#x4E0D;&#x540C;&#x3002;</p><p>&#x5E38;&#x89C1;&#x7684;&#x6709;yaw-pitch-roll&#xFF0C;&#x504F;&#x822A;-&#x4FEF;&#x4EF0;-&#x6EDA;&#x8F6C;&#xFF0C;&#x4E1C;&#x5317;&#x5929;&#x3002;</p><h3 id="&#x4E07;&#x5411;&#x9501;"><a href="#&#x4E07;&#x5411;&#x9501;" class="headerlink" title="&#x4E07;&#x5411;&#x9501;"></a>&#x4E07;&#x5411;&#x9501;</h3><p>&#x6B27;&#x62C9;&#x89D2;&#x7684;&#x5947;&#x5F02;&#x6027;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x7279;&#x5B9A;&#x503C;&#x65F6;&#xFF0C;&#x65CB;&#x8F6C;&#x81EA;&#x7531;&#x5EA6;&#x51CF;1&#x3002;</p><p>&#x4E07;&#x5411;&#x9501;&#x7684;&#x60C5;&#x51B5;&#xFF1A;&#x5728;&#x65CB;&#x8F6C;&#x662F;&#x52A8;&#x6001;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5373;&#x7ED5;&#x65CB;&#x8F6C;&#x4E4B;&#x540E;&#x7684;&#x65CB;&#x8F6C;&#x8F74;&#x65CB;&#x8F6C;&#x7684;&#x3002;&#x5728;&#x4E09;&#x4E2A;&#x65CB;&#x8F6C;&#x6B21;&#x5E8F;&#x95F4;&#xFF0C;&#x53EA;&#x6709;&#x4E2D;&#x95F4;&#x7684;&#x90A3;&#x4E2A;&#x65CB;&#x8F6C;&#x6B21;&#x5E8F;&#xFF0C;&#x65CB;&#x8F6C;&#x89D2;&#x662F;$&#xB1;90&#xB0;$&#x65F6;&#xFF0C;&#x624D;&#x4F1A;&#x53D1;&#x751F;&#x4E07;&#x5411;&#x9501;&#x3002;&#x6B64;&#x65F6;&#x7B2C;&#x4E00;&#x4E2A;&#x65CB;&#x8F6C;&#x8F74;&#x548C;&#x7B2C;&#x4E09;&#x4E2A;&#x65CB;&#x8F6C;&#x8F74;&#x5904;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x5E73;&#x9762;&#xFF0C;&#x4E22;&#x5931;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#x3002;</p><p>&#x7531;&#x4E8E;&#x4E07;&#x5411;&#x9501;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x6B27;&#x62C9;&#x89D2;&#x4E0D;&#x9002;&#x5408;&#x63D2;&#x503C;&#x6216;&#x8FED;&#x4EE3; &#x2022; &#x591A;&#x7528;&#x4E8E;&#x4EBA;&#x673A;&#x4EA4;&#x4E92;&#x4E2D;</p><p>&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#xFF1A;&#x4EC5;&#x7528;&#x4E09;&#x4E2A;&#x5B9E;&#x6570;&#x8868;&#x8FBE;&#x65CB;&#x8F6C;&#x65F6;&#xFF0C;&#x4E0D;&#x53EF;&#x907F;&#x514D;&#x5730;&#x5B58;&#x5728;&#x5947;&#x5F02;&#x6027;&#x95EE;&#x9898;&#x3002;</p><p>&#x5982;&#x679C;&#x8FD8;&#x4E0D;&#x7406;&#x89E3;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;<a href="https://www.youtube.com/watch?v=rsKy-4dbA04" target="_blank" rel="noopener">&#x8FD9;&#x4E2A;&#x89C6;&#x9891;</a>&#x3002;</p><h2 id="&#x56DB;&#x5143;&#x6570;"><a href="#&#x56DB;&#x5143;&#x6570;" class="headerlink" title="&#x56DB;&#x5143;&#x6570;"></a>&#x56DB;&#x5143;&#x6570;</h2><p>&#x56DB;&#x5143;&#x6570;&#x65E2;&#x662F;&#x7D27;&#x51D1;&#x7684;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x5947;&#x5F02;&#x6027;&#x3002;</p><p>&#x4E00;&#x4E2A;&#x56DB;&#x5143;&#x6570; q &#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x5B9E;&#x90E8;&#x548C;&#x4E09;&#x4E2A;&#x865A;&#x90E8;&#x3002;&#x50CF;&#x8FD9;&#x6837;$q = q_0 + q_1i + q_2j + q_3k$<br>&#x5176;&#x4E2D;$ i, j, k$ &#x4E3A;&#x56DB;&#x5143;&#x6570;&#x7684;&#x4E09;&#x4E2A;&#x865A;&#x90E8;&#x3002;&#x8FD9;&#x4E09;&#x4E2A;&#x865A;&#x90E8;&#x6EE1;&#x8DB3;&#x5173;&#x7CFB;&#x5F0F;&#xFF1A;<br><img src="/posts/1d9c933b/&#x56DB;&#x5143;&#x6570;&#x7684;&#x5173;&#x7CFB;&#x5F0F;.jpg" alt=""></p><p>&#x80FD;&#x7528;&#x5355;&#x4F4D;&#x56DB;&#x5143;&#x6570;&#x8868;&#x793A;&#x4E09;&#x7EF4;&#x7A7A;&#x95F4;&#x4E2D;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x65CB;&#x8F6C;&#x3002;</p><p>&#x5047;&#x8BBE;&#x67D0;&#x4E2A;&#x65CB;&#x8F6C;&#x662F;&#x7ED5;&#x5355;&#x4F4D;&#x5411;&#x91CF;$ n = [n_x, n_y, n_z]^T$&#x8FDB;&#x884C;&#x4E86;&#x89D2;&#x5EA6;&#x4E3A; $\theta$ &#x7684;&#x65CB;&#x8F6C;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x65CB;&#x8F6C;&#x7684;&#x56DB;&#x5143;&#x6570;&#x5F62;&#x5F0F;&#x4E3A;<br>$$q=[cos \frac\theta 2,n_xsin\frac \theta 2,n_y\frac \theta 2,n_z \frac \theta 2]^T$$</p><p>&#x4ECE;&#x56DB;&#x5143;&#x6570;&#x8BA1;&#x7B97;&#x5BF9;&#x5E94;&#x7684;&#x65CB;&#x8F6C;&#x8F74;&#x4E0E;&#x5939;&#x89D2;&#xFF1A;<br><img src="/posts/1d9c933b/&#x56DB;&#x5143;&#x6570;&#x7B97;&#x65CB;&#x8F6C;&#x8F74;&#x4E0E;&#x5939;&#x89D2;.jpg" alt="&#x4ECE;&#x56DB;&#x5143;&#x6570;&#x8BA1;&#x7B97;&#x5BF9;&#x5E94;&#x7684;&#x65CB;&#x8F6C;&#x8F74;&#x4E0E;&#x5939;&#x89D2;"></p><p>&#x5728;&#x56DB;&#x5143;&#x6570;&#x4E2D;&#xFF0C; &#x4EFB;&#x610F;&#x7684;&#x65CB;&#x8F6C;&#x90FD;&#x53EF;&#x4EE5;&#x7531;&#x4E24;&#x4E2A;&#x4E92;&#x4E3A;&#x76F8;&#x53CD;&#x6570;&#x7684;&#x56DB;&#x5143;&#x6570;&#x8868;&#x793A;&#x3002;</p><h3 id="&#x56DB;&#x5143;&#x6570;&#x7684;&#x8FD0;&#x7B97;"><a href="#&#x56DB;&#x5143;&#x6570;&#x7684;&#x8FD0;&#x7B97;" class="headerlink" title="&#x56DB;&#x5143;&#x6570;&#x7684;&#x8FD0;&#x7B97;"></a>&#x56DB;&#x5143;&#x6570;&#x7684;&#x8FD0;&#x7B97;</h3><p>&#x73B0;&#x6709;&#x4E24;&#x4E2A;&#x56DB;&#x5143;&#x6570;$q_a&#xFF0C;q_b$&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x5411;&#x91CF;&#x8868;&#x793A;&#x4E3A;$[s_a,v_a],[s_b,v_b]$&#xFF0C;&#x6216;&#x8005;&#x539F;&#x59CB;&#x56DB;&#x5143;&#x6570;&#x8868;&#x793A;&#x4E3A;<br>$$q_a = s_a + x_ai + y_aj + z_ak, q_b = s_b + x_bi + y_bj + z_bk$$</p><p>&#x52A0;&#x51CF;&#x6CD5;&#x8BA1;&#x7B97;&#xFF1A;<br>$$q_a \pm q_b=[s_a \pm s_b,\boldsymbol{v_a \pm v_b]}$$<br>&#x5176;&#x4ED6;&#x8BA1;&#x7B97;&#xFF1A;<br><img src="/posts/1d9c933b/&#x56DB;&#x5143;&#x6570;&#x8BA1;&#x7B97;.jpg" alt=""></p><h3 id="&#x8BA1;&#x7B97;&#x65CB;&#x8F6C;"><a href="#&#x8BA1;&#x7B97;&#x65CB;&#x8F6C;" class="headerlink" title="&#x8BA1;&#x7B97;&#x65CB;&#x8F6C;"></a>&#x8BA1;&#x7B97;&#x65CB;&#x8F6C;</h3><p>&#x7528;&#x56DB;&#x5143;&#x6570;&#x8BA1;&#x7B97;&#x65CB;&#x8F6C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E3A;&#x4E86;&#x5C06;&#x6700;&#x540E;&#x7684;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x7684;&#x5B9E;&#x90E8;&#x7F6E;&#x4E3A;0&#xFF0C;&#x9700;&#x8981;&#x4E58;&#x56DB;&#x5143;&#x6570;&#x7684;&#x9006;&#xFF0C;&#x5982;&#x679C;&#x56DB;&#x5143;&#x6570;&#x7684;&#x6A21;&#x503C;&#x4E3A;1&#xFF0C;&#x5219;&#x53EA;&#x9700;&#x8981;&#x4E58;&#x5171;&#x8F6D;&#x5373;&#x53EF;&#x3002;<br>&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x4F1A;&#x5BFC;&#x81F4;&#x65CB;&#x8F6C;&#x4E86;&#x4E24;&#x6B21;&#xFF0C;&#x4E8E;&#x662F;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x5148;&#x65CB;&#x8F6C;&#x4E00;&#x534A;&#xFF0C;&#x7B2C;&#x4E8C;&#x6B21;&#x518D;&#x65CB;&#x8F6C;&#x4E00;&#x534A;&#x3002;<br>$$<br>\boldsymbol{p}=[0,x,y,z] \<br>\boldsymbol{q}=[cos\frac \theta 2,\boldsymbol{n}\,sin \frac \theta 2] \<br>\boldsymbol{p&#x2019;=qpq}^{-1}<br>$$<br>&#x7B2C;&#x4E00;&#x6B21;&#x662F;&#x4EE5;&#x5411;&#x91CF;&#x4E3A;&#x8F74;&#xFF0C;&#x65CB;&#x8F6C;$\theta /2$&#xFF0C;&#x7B2C;&#x4E8C;&#x6B21;&#x662F;&#x4EE5;&#x5411;&#x91CF;&#x7684;&#x8D1F;&#x65B9;&#x5411;&#x4E3A;&#x8F74;&#xFF0C;&#x518D;&#x65CB;&#x8F6C;$\theta /2$</p><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#x4E3A;&#x5565;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;</p><h1 id="&#x56FE;&#x50CF;"><a href="#&#x56FE;&#x50CF;" class="headerlink" title="&#x56FE;&#x50CF;"></a>&#x56FE;&#x50CF;</h1><h2 id="&#x989C;&#x8272;&#x7A7A;&#x95F4;"><a href="#&#x989C;&#x8272;&#x7A7A;&#x95F4;" class="headerlink" title="&#x989C;&#x8272;&#x7A7A;&#x95F4;"></a>&#x989C;&#x8272;&#x7A7A;&#x95F4;</h2><h3 id="RGB"><a href="#RGB" class="headerlink" title="RGB"></a>RGB</h3><p>&#x7EA2;&#x7EFF;&#x84DD;&#x989C;&#x8272;&#x7A7A;&#x95F4;&#x3002;</p><h3 id="YUV"><a href="#YUV" class="headerlink" title="YUV"></a>YUV</h3><p>&#x590D;&#x5408;&#x989C;&#x8272;&#x89C6;&#x9891;&#x6807;&#x51C6;&#xFF0C;Y&#x4E3A;&#x4EAE;&#x5EA6;&#xFF0C;UV&#x662F;&#x8272;&#x5EA6;&#x3002;</p><h3 id="HSB"><a href="#HSB" class="headerlink" title="HSB"></a>HSB</h3><p>&#x4E3A;&#x8272;&#x5EA6;&#xFF0C;&#x9971;&#x548C;&#x5EA6;&#xFF0C;&#x4EAE;&#x5EA6;&#x7A7A;&#x95F4;&#x3002;</p><h2 id="&#x56FE;&#x50CF;&#x7684;&#x5B58;&#x50A8;"><a href="#&#x56FE;&#x50CF;&#x7684;&#x5B58;&#x50A8;" class="headerlink" title="&#x56FE;&#x50CF;&#x7684;&#x5B58;&#x50A8;"></a>&#x56FE;&#x50CF;&#x7684;&#x5B58;&#x50A8;</h2><ul><li>&#x77E2;&#x91CF;&#x683C;&#x5F0F;&#xFF1A;&#x7528;&#x7EBF;&#x6BB5;&#x6216;&#x8005;&#x7EBF;&#x6BB5;&#x7684;&#x7EC4;&#x5408;&#x8868;&#x793A;&#x56FE;&#x50CF;&#xFF08;WMF&#xFF09;</li><li>&#x5149;&#x6805;&#x683C;&#x5F0F;&#xFF1A;&#x7528;&#x8BB8;&#x591A;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x96C6;&#x5408;&#x8868;&#x793A;&#x56FE;&#x50CF;&#xFF08;BMP&#xFF0C;GIF&#xFF0C;JPEG&#xFF09;</li></ul><h2 id="&#x56FE;&#x50CF;&#x7684;&#x8FB9;&#x7F18;"><a href="#&#x56FE;&#x50CF;&#x7684;&#x8FB9;&#x7F18;" class="headerlink" title="&#x56FE;&#x50CF;&#x7684;&#x8FB9;&#x7F18;"></a>&#x56FE;&#x50CF;&#x7684;&#x8FB9;&#x7F18;</h2><p>&#x6982;&#x5FF5;&#xFF1A;</p><ul><li>&#x7A7A;&#x95F4;&#x66F2;&#x9762;&#x7684;&#x4E0D;&#x8FDE;&#x7EED;&#x70B9;</li><li>&#x4E0D;&#x540C;&#x6750;&#x6599;&#x6216;&#x4E0D;&#x540C;&#x989C;&#x8272;</li><li>&#x7269;&#x4F53;&#x4E0E;&#x80CC;&#x666F;&#x7684;&#x5206;&#x754C;&#x7EBF;</li><li>&#x9634;&#x5F71;&#x5F15;&#x8D77;&#x7684;&#x8FB9;&#x7F18;</li></ul><p>&#x8FB9;&#x7F18;&#x70B9;&#xFF1A;&#x4EAE;&#x5EA6;&#x663E;&#x8457;&#x53D8;&#x5316;&#x7684;&#x70B9;<br>&#x8FB9;&#x7F18;&#x6BB5;&#xFF1A;&#x8FB9;&#x7F18;&#x70B9;&#x5750;&#x6807;&#x548C;&#x65B9;&#x5411;&#x7684;&#x603B;&#x548C;<br>&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x5668;&#xFF1A;&#x62BD;&#x53D6;&#x8FB9;&#x7F18;&#x96C6;&#x5408;&#x7684;&#x7B97;&#x6CD5;<br>&#x8FB9;&#x7F18;&#x8DDF;&#x8E2A;&#xFF1A;&#x786E;&#x5B9A;&#x8F6E;&#x5ED3;&#x7684;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;</p><p>&#x5728;&#x7070;&#x5EA6;&#x56FE;&#x4E0B;&#xFF1A;&#x662F;&#x4E00;&#x9636;&#x5DEE;&#x5206;&#x7684;&#x6781;&#x5927;&#x503C;&#x7684;&#x70B9;&#xFF0C;&#x4E8C;&#x9636;&#x5DEE;&#x5206;&#x8FC7;&#x96F6;&#x70B9;&#x7684;&#x70B9;&#x3002;</p><h2 id="&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x57FA;&#x672C;&#x6B65;&#x9AA4;"><a href="#&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x57FA;&#x672C;&#x6B65;&#x9AA4;" class="headerlink" title="&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x57FA;&#x672C;&#x6B65;&#x9AA4;"></a>&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x57FA;&#x672C;&#x6B65;&#x9AA4;</h2><ol><li>&#x56FE;&#x50CF;&#x91C7;&#x96C6;</li><li>&#x56FE;&#x50CF;&#x589E;&#x5F3A;</li><li>&#x56FE;&#x50CF;&#x590D;&#x539F;</li><li>&#x5F62;&#x6001;&#x5B66;&#x5904;&#x7406;</li><li>&#x5206;&#x5272;</li><li>&#x8868;&#x793A;&amp;&#x63CF;&#x8FF0;</li><li>&#x5BF9;&#x8C61;&#x8BC6;&#x522B;</li></ol><p>&#x53EF;&#x80FD;&#x6709;&#x7684;&#xFF1A;</p><ol><li>&#x5F69;&#x8272;&#x56FE;&#x50CF;&#x5904;&#x7406;</li><li>&#x56FE;&#x50CF;&#x538B;&#x7F29;</li></ol><h2 id="&#x6982;&#x8FF0;"><a href="#&#x6982;&#x8FF0;" class="headerlink" title="&#x6982;&#x8FF0;"></a>&#x6982;&#x8FF0;</h2><h3 id="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;"><a href="#&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;" class="headerlink" title="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;</h3><ol><li>&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x83B7;&#x53D6;&#x56FE;&#x50CF;&#x662F;&#x901A;&#x8FC7;&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#xFF08;&#x5149;&#x5B66;&#x955C;&#x5934;+CCD&#xFF09;&#x5F97;&#x5230;&#xFF1B;</li><li>&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x672C;&#x8EAB;&#x7535;&#x5B50;&#x5E72;&#x6270;&#x548C;&#x5916;&#x754C;&#x73AF;&#x5883;&#x4EA7;&#x751F;&#x7684;&#x968F;&#x673A;&#x5E72;&#x6270;&#xFF0C;&#x4F7F;&#x5F97;&#x56FE;&#x50CF;&#x542B;&#x6709;&#x566A;&#x58F0;&#xFF1B;</li><li>&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x6240;&#x5904;&#x7684;&#x7167;&#x660E;&#x6216;&#x5176;&#x4ED6;&#x73AF;&#x5883;&#xFF0C;&#x4F7F;&#x5F97;&#x56FE;&#x50CF;&#x7684;&#x7070;&#x5EA6;&#x5206;&#x8FA8;&#x7387;&#x4E0D;&#x9AD8;&#xFF0C;&#x751A;&#x81F3;&#x5F88;&#x96BE;&#x533A;&#x5206;&#x56FE;&#x50CF;&#x4E2D;&#x7684;&#x7269;&#x4F53;&#x3002;</li><li>&#x5FC5;&#x987B;&#x5728;&#x89C6;&#x89C9;&#x7684;&#x521D;&#x7EA7;&#x9636;&#x6BB5;&#x5BF9;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x7070;&#x5EA6;&#x4FEE;&#x6B63;&#x3001;&#x566A;&#x58F0;&#x8FC7;&#x6EE4;&#x7B49;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x3002;</li></ol><h3 id="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;"><a href="#&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;" class="headerlink" title="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;"></a>&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h3><ul><li>&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x4E2D;&#x7684;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x5E76;&#x4E0D;&#x8003;&#x8651;&#x56FE;&#x50CF;&#x964D;&#x8D28;&#x539F;&#x56E0;&#xFF0C;&#x53EA;&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x7279;&#x5F81;&#x6709;&#x9009;&#x62E9;&#x7684;&#x7A81;&#x51FA;&#xFF0C;&#x8870;&#x51CF;&#x5176;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x7279;&#x5F81;&#x3002;</li><li>&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x540E;&#x7684;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x53BB;&#x903C;&#x8FD1;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#xFF0C;&#x8FD9;&#x79CD;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x65B9;&#x6CD5;&#x79F0;&#x4E3A;&#x56FE;&#x50CF;&#x589E;&#x5F3A;&#x3002;</li></ul><h3 id="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;"><a href="#&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;" class="headerlink" title="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;"></a>&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;</h3><ul><li>&#x7A7A;&#x95F4;&#x57DF;&#x6CD5;&#x548C;&#x9891;&#x7387;&#x57DF;&#x6CD5;<ul><li>&#x7A7A;&#x95F4;&#x57DF;&#x6CD5;&#x662F;&#x76F4;&#x63A5;&#x5728;&#x7A7A;&#x95F4;&#x57DF;&#x5BF9;&#x56FE;&#x50CF;&#x50CF;&#x7D20;&#x8FD0;&#x7B97;&#x5904;&#x7406;&#xFF1B;</li><li>&#x9891;&#x7387;&#x57DF;&#x6CD5;&#x662F;&#x5148;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x67D0;&#x79CD;&#x53D8;&#x6362;&#xFF08;DFT&#x3001;DCT&#x3001;DWT&#x3001;K-L&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x53D8;&#x6362;&#x57DF;&#x5BF9;&#x56FE;&#x50CF;&#x7684;&#x53D8;&#x6362;&#x503C;&#x8FDB;&#x884C;&#x8FD0;&#x7B97;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x8BA1;&#x7B97;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x9006;&#x53D8;&#x6362;&#x5230;&#x7A7A;&#x95F4;&#x57DF;&#x3002;</li></ul></li><li>&#x5168;&#x5C40;&#x8FD0;&#x7B97;&#x548C;&#x5C40;&#x90E8;&#x8FD0;&#x7B97;</li><li>&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x548C;&#x5F69;&#x8272;&#x56FE;&#x50CF;</li></ul><h2 id="&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;"><a href="#&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;" class="headerlink" title="&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;"></a>&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;</h2><h3 id="&#x76F4;&#x65B9;&#x56FE;&#x7684;&#x6982;&#x5FF5;"><a href="#&#x76F4;&#x65B9;&#x56FE;&#x7684;&#x6982;&#x5FF5;" class="headerlink" title="&#x76F4;&#x65B9;&#x56FE;&#x7684;&#x6982;&#x5FF5;"></a>&#x76F4;&#x65B9;&#x56FE;&#x7684;&#x6982;&#x5FF5;</h3><p>&#x5982;&#x679C;&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x50CF;&#x7D20;&#x4EAE;&#x5EA6;&#xFF08;&#x7070;&#x5EA6;&#x7EA7;&#x522B;&#xFF09;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x53D8;&#x91CF;&#xFF0C; &#x5219;&#x5176;&#x5206;&#x5E03;&#x60C5;&#x51B5;&#x5C31;&#x53CD;&#x6620;&#x4E86;&#x56FE;&#x50CF;&#x7684;&#x7EDF;&#x8BA1;&#x7279;&#x6027;&#xFF0C;&#x8FD9;&#x53EF;&#x7528;Probability Density Function (PDF)&#x6765;&#x523B;&#x753B;&#x548C;&#x63CF;&#x8FF0;&#xFF0C;&#x8868;&#x73B0;&#x4E3A;&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;&#xFF08;Histogram&#xFF09;&#x3002;</p><p>&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;&#x662F;<strong>&#x7070;&#x5EA6;&#x7EA7;</strong>&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x56FE;&#x50CF;&#x4E2D;&#x5177;&#x6709;&#x67D0;&#x79CD;&#x7070;&#x5EA6;&#x7EA7;&#x7684;&#x50CF;&#x7D20;&#x7684;<strong>&#x4E2A;&#x6570;</strong>&#xFF0C;&#x53CD;&#x6620;&#x4E86;&#x56FE;&#x50CF;&#x4E2D;&#x6BCF;&#x79CD;&#x7070;&#x5EA6;&#x51FA;&#x73B0;&#x7684;<strong>&#x9891;&#x7387;</strong>&#xFF0C;&#x5B83;&#x662F;&#x56FE;&#x50CF;&#x6700;&#x57FA;&#x672C;&#x7684;&#x7EDF;&#x8BA1;&#x7279;&#x5F81;&#x3002;<br><img src="/posts/1d9c933b/&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;.jpg" alt=""></p><h3 id="&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;-1"><a href="#&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;-1" class="headerlink" title="&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;"></a>&#x76F4;&#x65B9;&#x56FE;&#x4FEE;&#x6B63;</h3><p><strong>&#x95EE;&#x9898;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x975E;&#x5747;&#x5300;&#x5206;&#x5E03;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x5F88;&#x591A;&#x56FE;&#x50CF;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x96C6;&#x4E2D;&#x5728;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;&#x533A;&#x95F4;&#x5185;&#xFF0C;&#x5BFC;&#x81F4;&#x56FE;&#x50CF;&#x7684;&#x5BF9;&#x6BD4;&#x5EA6;&#x964D;&#x4F4E;&#x3002;</p><p><strong>&#x89E3;&#x51B3;</strong>&#xFF1A;&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x91CD;&#x65B0;&#x5747;&#x5300;&#x5206;&#x5E03;&#x5404;&#x4E2A;&#x7070;&#x5EA6;&#x503C;&#x6765;&#x589E;&#x5F3A;&#x56FE;&#x50CF;&#x7684;&#x5BF9;&#x6BD4;&#x5EA6;&#x3002;&#x7ECF;&#x8FC7;&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x5BF9;&#x505A;&#x4E8C;&#x503C;&#x5316;&#x5904;&#x7406;&#x4E2D;&#x7684;&#x9608;&#x503C;&#x9009;&#x62E9;&#x5F88;&#x6709;&#x5E2E;&#x52A9;&#x3002;</p><p><strong>&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x5C3A;&#x5EA6;&#x53D8;&#x6362;</strong>:  </p><ul><li>&#x628A;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x533A;&#x95F4;&#x5728;$[a,b]$&#x5185;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x503C;&#x6620;&#x5C04;&#x5230;$[z_1,z_k]$&#x7684;&#x533A;&#x95F4;&#x5185;&#x3002;</li><li>&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7531;&#x4E8E;&#x5149;&#x7167;&#x539F;&#x56E0;&#xFF0C;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x533A;&#x95F4;$[a,b]$&#x5E38;&#x5E38;&#x662F;$[z_1,z_k]$&#x7684;&#x5B50;&#x7A7A;&#x95F4;&#x3002;&#x5982;&#x679C;&#x56FE;&#x50CF;&#x7684;&#x5927;&#x591A;&#x6570;&#x50CF;&#x7D20;&#x7070;&#x5EA6;&#x503C;&#x5206;&#x5E03;&#x5728;&#x533A;&#x95F4;[a,b],&#x4E00;&#x5C0F;&#x90E8;&#x5206;&#x5206;&#x5E03;&#x5728;&#x6B64;&#x533A;&#x95F4;&#x5916;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x6620;&#x5C04;&#x51FD;&#x6570;&#xFF1A;</li></ul><p>$$<br>z&#x2019;=\left{\begin{aligned}<br>&amp; \frac {z_k-z_1}{b-a}(z-a)+z_1 \quad &amp; a \le z \le b\<br>&amp; z_1 \quad &amp;z &lt; a \<br>&amp; z_k \quad &amp;z&gt;b<br>\end{aligned}<br>\right.<br>$$</p><ul><li>&#x4F7F;&#x66DD;&#x5149;&#x4E0D;&#x5145;&#x5206;&#x7684;&#x56FE;&#x50CF;&#x9ED1;&#x7684;&#x66F4;&#x9ED1;&#x767D;&#x7684;&#x66F4;&#x767D;&#x3002;<br><img src="/posts/1d9c933b/&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x5C3A;&#x5BF8;&#x53D8;&#x6362;.jpg" alt=""></li></ul><h3 id="&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x7B97;&#x6CD5;"><a href="#&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x7B97;&#x6CD5;" class="headerlink" title="&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x7B97;&#x6CD5;"></a>&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x7B97;&#x6CD5;</h3><p><img src="/posts/1d9c933b/&#x76F4;&#x65B9;&#x56FE;&#x5747;&#x8861;&#x5316;&#x7B97;&#x6CD5;.jpg" alt=""></p><h2 id="&#x56FE;&#x50CF;&#x7EBF;&#x6027;&#x8FD0;&#x7B97;"><a href="#&#x56FE;&#x50CF;&#x7EBF;&#x6027;&#x8FD0;&#x7B97;" class="headerlink" title="&#x56FE;&#x50CF;&#x7EBF;&#x6027;&#x8FD0;&#x7B97;"></a>&#x56FE;&#x50CF;&#x7EBF;&#x6027;&#x8FD0;&#x7B97;</h2><h3 id="LSI&#x7CFB;&#x7EDF;"><a href="#LSI&#x7CFB;&#x7EDF;" class="headerlink" title="LSI&#x7CFB;&#x7EDF;"></a>LSI&#x7CFB;&#x7EDF;</h3><p>LSI&#xFF1A;&#x7EBF;&#x6027;&#x79FB;&#x4E0D;&#x53D8;&#x7CFB;&#x7EDF;&#x3002;&#x4E0E;LTI&#xFF08;&#x7EBF;&#x6027;&#x65F6;&#x4E0D;&#x53D8;&#x7CFB;&#x7EDF;&#xFF09;&#x7C7B;&#x4F3C;&#x3002;</p><p>&#x6027;&#x8D28;&#xFF1A;</p><ol><li>&#x7EBF;&#x6027;&#xFF1A;&#x6EE1;&#x8DB3;&#x53E0;&#x52A0;&#x539F;&#x7406;&#xFF0C;&#x5373;&#x6709;&#xFF08;1&#xFF09;&#x53EF;&#x52A0;&#x6027;&#xFF0C;&#xFF08;2&#xFF09;&#x6BD4;&#x4F8B;&#x6027;&#x3002;</li><li>&#x79FB;&#x4E0D;&#x53D8;&#xFF1A;&#x82E5;&#x7CFB;&#x7EDF;&#x54CD;&#x5E94;&#x4E0E;&#x6FC0;&#x52B1;&#x52A0;&#x4E8E;&#x7CFB;&#x7EDF;&#x7684;&#x65F6;&#x523B;&#x65E0;&#x5173;&#xFF0C;&#x5219;&#x4E3A;&#x79FB;&#x4E0D;&#x53D8;&#x7CFB;&#x7EDF;&#x3002;&#x5373;&#x82E5;&#x8F93;&#x5165;$x(n)$&#x4EA7;&#x751F;&#x8F93;&#x51FA;$y(n)$&#xFF0C;&#x5219;&#x8F93;&#x5165;$x(n-m)$&#x4EA7;&#x751F;&#x8F93;&#x51FA;$y(n-m)$&#x3002;&#x8F93;&#x5165;&#x79FB;&#x52A8;&#x591A;&#x5C11;&#x4F4D;&#xFF0C;&#x8F93;&#x51FA;&#x4E5F;&#x79FB;&#x52A8;&#x76F8;&#x540C;&#x7684;&#x4F4D;&#x6570;&#x3002;</li></ol><h3 id="&#x4E8C;&#x7EF4;&#x8FDE;&#x7EED;&#x5377;&#x79EF;"><a href="#&#x4E8C;&#x7EF4;&#x8FDE;&#x7EED;&#x5377;&#x79EF;" class="headerlink" title="&#x4E8C;&#x7EF4;&#x8FDE;&#x7EED;&#x5377;&#x79EF;"></a>&#x4E8C;&#x7EF4;&#x8FDE;&#x7EED;&#x5377;&#x79EF;</h3><p><img src="/posts/1d9c933b/&#x4E8C;&#x7EF4;&#x8FDE;&#x7EED;&#x5377;&#x79EF;.jpg" alt=""></p><h3 id="&#x56FE;&#x50CF;&#x79BB;&#x6563;&#x7CFB;&#x7EDF;&#x7684;&#x5377;&#x79EF;"><a href="#&#x56FE;&#x50CF;&#x79BB;&#x6563;&#x7CFB;&#x7EDF;&#x7684;&#x5377;&#x79EF;" class="headerlink" title="&#x56FE;&#x50CF;&#x79BB;&#x6563;&#x7CFB;&#x7EDF;&#x7684;&#x5377;&#x79EF;"></a>&#x56FE;&#x50CF;&#x79BB;&#x6563;&#x7CFB;&#x7EDF;&#x7684;&#x5377;&#x79EF;</h3><p><img src="/posts/1d9c933b/&#x56FE;&#x50CF;&#x79BB;&#x6563;&#x7CFB;&#x7EDF;&#x7684;&#x5377;&#x79EF;.jpg" alt=""></p><p><strong>Mask Format</strong><br><img src="/posts/1d9c933b/MaskFormat.jpg" alt=""></p><h2 id="&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;"><a href="#&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;" class="headerlink" title="&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;"></a>&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;</h2><h3 id="&#x566A;&#x58F0;"><a href="#&#x566A;&#x58F0;" class="headerlink" title="&#x566A;&#x58F0;"></a>&#x566A;&#x58F0;</h3><ul><li>&#x6912;&#x76D0;&#x566A;&#x58F0;&#xFF1A;&#x542B;&#x6709;&#x968F;&#x673A;&#x51FA;&#x73B0;&#x7684;&#x9ED1;&#x767D;&#x4EAE;&#x5EA6;&#x503C;&#x3002;</li><li>&#x9AD8;&#x65AF;&#x566A;&#x58F0;&#xFF1A;&#x542B;&#x6709;&#x4EAE;&#x5EA6;&#x670D;&#x4ECE;&#x9AD8;&#x65AF;&#x6216;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x7684;&#x566A;&#x58F0;&#x3002;&#x9AD8;&#x65AF;&#x566A;&#x58F0;&#x662F;&#x5F88;&#x591A;&#x4F20;&#x611F;&#x5668;&#x566A;&#x58F0;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x5982;&#x6444;&#x50CF;&#x673A;&#x7684;&#x7535;&#x5B50;&#x5E72;&#x6270;&#x566A;&#x58F0;&#x3002;</li></ul><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#x9AD8;&#x65AF;&#x566A;&#x58F0;&#xFF0C;&#x767D;&#x566A;&#x58F0;&#xFF0C;&#x9AD8;&#x65AF;&#x767D;&#x566A;&#x58F0;&#x7684;&#x533A;&#x522B;&#x662F;&#x5565;&#xFF1F;</p><h3 id="&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;"><a href="#&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;" class="headerlink" title="&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;"></a>&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;</h3><ol><li>&#x6700;&#x7B80;&#x5355;&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;&#x662F;&#x5C40;&#x90E8;&#x5747;&#x503C;&#x8FD0;&#x7B97;&#xFF0C;&#x5373;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x53EA;&#x7528;&#x5176;&#x5C40;&#x90E8;&#x90BB;&#x57DF;&#x5185;&#x6240;&#x6709;&#x503C;&#x7684;&#x5E73;&#x5747;&#x503C;&#x6765;&#x7F6E;&#x6362;&#xFF1A;$$h[i,j]=\frac 1 M \sum_{(k,l)\in N}f[k,l] $$</li><li>&#x4E5F;&#x53EF;&#x4EE5;&#x52A0;&#x6743;&#xFF0C;&#x4E00;&#x79CD;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5CF0;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x6C34;&#x5E73;&#x548C;&#x5782;&#x76F4;&#x65B9;&#x5411;&#x4E0A;&#x5BF9;&#x79F0;&#x7684;&#x5178;&#x578B;&#x6743;&#x503C;&#x6A21;&#x677F;&#xFF1A;<br><img src="/posts/1d9c933b/&#x52A0;&#x6743;&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;.jpg" alt=""></li></ol><h3 id="&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;"><a href="#&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;" class="headerlink" title="&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;"></a>&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;</h3><h4 id="&#x6982;&#x8FF0;-1"><a href="#&#x6982;&#x8FF0;-1" class="headerlink" title="&#x6982;&#x8FF0;"></a>&#x6982;&#x8FF0;</h4><p>&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x662F;&#x4E00;&#x7C7B;&#x6839;&#x636E;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x72B6;&#x6765;&#x9009;&#x62E9;&#x6743;&#x503C;&#x7684;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;&#x3002;<br>&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x5BF9;&#x53BB;&#x9664;&#x670D;&#x4ECE;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x7684;&#x566A;&#x58F0;&#x662F;&#x5F88;&#x6709;&#x6548;&#x7684;&#x3002;</p><h4 id="&#x8BA1;&#x7B97;"><a href="#&#x8BA1;&#x7B97;" class="headerlink" title="&#x8BA1;&#x7B97;"></a>&#x8BA1;&#x7B97;</h4><p>&#x4E8C;&#x7EF4;&#x96F6;&#x5747;&#x503C;&#x79BB;&#x6563;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x4E3A;&#xFF1A;<br><img src="/posts/1d9c933b/&#x4E8C;&#x7EF4;&#x96F6;&#x5747;&#x503C;&#x79BB;&#x6563;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;.jpg" alt=""><br>&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x601D;&#x60F3;&#xFF1A;&#x968F;&#x7740;&#x8DDD;&#x79BB;&#x7684;&#x589E;&#x5927;&#xFF0C;&#x5BF9;&#x4E2D;&#x5FC3;&#x50CF;&#x7D20;&#x7684;&#x5F71;&#x54CD;&#x51CF;&#x5C0F;&#x3002;</p><h4 id="&#x6027;&#x8D28;"><a href="#&#x6027;&#x8D28;" class="headerlink" title="&#x6027;&#x8D28;"></a>&#x6027;&#x8D28;</h4><p>&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x6709;5&#x4E2A;&#x91CD;&#x8981;&#x6027;&#x8D28;&#xFF0C;&#x5176;&#x6027;&#x8D28;&#x51B3;&#x5B9A;&#x4E86;&#x5B83;&#x5728;&#x7A7A;&#x95F4;&#x57DF;&#x548C;&#x9891;&#x7387;&#x57DF;&#x90FD;&#x662F;&#x5F88;&#x597D;&#x7684;&#x4F4E;&#x901A;&#x6EE4;&#x6CE2;&#x5668;&#x3002;</p><ul><li><strong>&#x4E8C;&#x7EF4;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x5177;&#x6709;&#x65CB;&#x8F6C;&#x5BF9;&#x79F0;&#x6027;</strong>&#xFF1A;&#x6EE4;&#x6CE2;&#x5668;&#x5728;&#x5404;&#x4E2A;&#x65B9;&#x5411;&#x5E73;&#x6ED1;&#x7A0B;&#x5EA6;&#x4E00;&#x81F4;&#x3002;&#x65CB;&#x8F6C;&#x5BF9;&#x79F0;&#x6027;&#x610F;&#x5473;&#x7740;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x5728;&#x540E;&#x7EED;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x4E2D;&#x4E0D;&#x4F1A;&#x504F;&#x5411;&#x4EFB;&#x4E00;&#x65B9;&#x5411;&#x3002;</li><li><strong>&#x9AD8;&#x65AF;&#x662F;&#x5355;&#x503C;&#x51FD;&#x6570;</strong>&#xFF1A;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x5668;&#x7528;&#x50CF;&#x7D20;&#x90BB;&#x57DF;&#x7684;&#x52A0;&#x6743;&#x503C;&#x6765;&#x4EE3;&#x66FF;&#x8BE5;&#x70B9;&#x7684;&#x50CF;&#x7D20;&#x503C;&#xFF0C;&#x6BCF;&#x4E00;&#x90BB;&#x57DF;&#x50CF;&#x7D20;&#x70B9;&#x6743;&#x503C;&#x662F;&#x968F;&#x8BE5;&#x70B9;&#x4E0E;&#x4E2D;&#x5FC3;&#x70B9;&#x7684;&#x8DDD;&#x79BB;&#x5355;&#x8C03;&#x589E;&#x51CF;&#x7684;&#x3002;&#x5E73;&#x6ED1;&#x8FD0;&#x7B97;&#x5BF9;&#x79BB;&#x7B97;&#x5B50;&#x4E2D;&#x5FC3;&#x8D8A;&#x8FDC;&#x7684;&#x70B9;&#xFF0C;&#x4F5C;&#x7528;&#x8D8A;&#x5C0F;&#x3002;</li><li><strong>&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x7684;&#x5085;&#x7ACB;&#x53F6;&#x53D8;&#x6362;&#x9891;&#x8C31;&#x662F;&#x5355;&#x74E3;&#x7684;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x5E38;&#x88AB;&#x4E0D;&#x5E0C;&#x671B;&#x7684;&#x9AD8;&#x9891;&#x4FE1;&#x53F7;&#x6240;&#x6C61;&#x67D3;&#xFF0C;&#x5E73;&#x6ED1;&#x56FE;&#x50CF;&#x4E0D;&#x4F1A;&#x88AB;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x9AD8;&#x9891;&#x566A;&#x58F0;&#x6C61;&#x67D3;&#xFF0C;&#x53EF;&#x4EE5;&#x4FDD;&#x7559;&#x5927;&#x90E8;&#x5206;&#x4FE1;&#x53F7;&#x3002;</li><li><strong>&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x5668;&#x5BBD;&#x5EA6;&#x662F;&#x7531;&#x53C2;&#x6570;$\sigma$&#x8868;&#x793A;&#x7684;</strong>&#xFF1A;$\sigma$&#x8D8A;&#x5927;&#xFF0C;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x65F6;&#x57DF;&#x8D8A;&#x5BBD;&#xFF0C;&#x9891;&#x5E26;&#x8D8A;&#x7A84;&#xFF0C;&#x5E73;&#x6ED1;&#x7A0B;&#x5EA6;&#x8D8A;&#x597D;&#x3002;&#x53EF;&#x4EE5;&#x8C03;&#x8282;$\sigma$ &#xFF0C;&#x4F7F;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#x5728;&#x8FC7;&#x5206;&#x6A21;&#x7CCA;&#xFF08;&#x8FC7;&#x5E73;&#x6ED1;&#xFF09;&#x4E0E;&#x5E73;&#x6ED1;&#x56FE;&#x50CF;&#x4E2D;&#x7531;&#x4E8E;&#x566A;&#x58F0;&#x548C;&#x7EC6;&#x7EB9;&#x7406;&#x6240;&#x5F15;&#x8D77;&#x7684;&#x8FC7;&#x591A;&#x4E0D;&#x5E0C;&#x671B;&#x7A81;&#x53D8;&#x91CF;&#xFF08;&#x6B20;&#x5E73;&#x6ED1;&#xFF09;&#x4E4B;&#x95F4;&#x53D6;&#x6298;&#x4E2D;&#x3002;</li><li><strong>&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x6709;&#x53EF;&#x5206;&#x79BB;&#x6027;</strong>&#xFF1A;&#x5B9E;&#x73B0;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x65F6;&#x53EF;&#x5206;&#x6B65;&#x8FDB;&#x884C;&#x3002;</li></ul><h2 id="&#x975E;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;"><a href="#&#x975E;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;" class="headerlink" title="&#x975E;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;"></a>&#x975E;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;</h2><h3 id="&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;"><a href="#&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;" class="headerlink" title="&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;"></a>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;</h3><h4 id="&#x6982;&#x8FF0;-2"><a href="#&#x6982;&#x8FF0;-2" class="headerlink" title="&#x6982;&#x8FF0;"></a>&#x6982;&#x8FF0;</h4><p>&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x548C;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x8FD0;&#x7B97;&#x4E3B;&#x8981;&#x95EE;&#x9898;&#x662F;&#x6709;&#x53EF;&#x80FD;&#x6A21;&#x7CCA;&#x56FE;&#x50CF;&#x4E2D;&#x5C16;&#x9510;&#x4E0D;&#x8FDE;&#x7EED;&#x7684;&#x90E8;&#x5206;&#x3002;</p><p>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x4F7F;&#x7528;&#x50CF;&#x7D20;&#x70B9;&#x90BB;&#x57DF;&#x7070;&#x5EA6;&#x503C;&#x7684;&#x4E2D;&#x503C;&#x6765;&#x4EE3;&#x66FF;&#x8BE5;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x7070;&#x5EA6;&#x503C;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x53BB;&#x9664;&#x8109;&#x51B2;&#x566A;&#x58F0;&#x3001;&#x6912;&#x76D0;&#x566A;&#x58F0;&#x540C;&#x65F6;&#x4FDD;&#x7559;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x7EC6;&#x8282;&#x3002;</p><p>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x4E0D;&#x4F9D;&#x8D56;&#x4E8E;&#x90BB;&#x57DF;&#x5185;&#x4E0E;&#x5178;&#x578B;&#x503C;&#x5DEE;&#x522B;&#x5F88;&#x5927;&#x7684;&#x503C;&#xFF0C;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x4E0D;&#x8FDB;&#x884C;&#x52A0;&#x6743;&#x8FD0;&#x7B97;&#x3002;</p><h4 id="&#x8BA1;&#x7B97;-1"><a href="#&#x8BA1;&#x7B97;-1" class="headerlink" title="&#x8BA1;&#x7B97;"></a>&#x8BA1;&#x7B97;</h4><ol><li>&#x6309;&#x4EAE;&#x5EA6;&#x503C;&#x5927;&#x5C0F;&#x6392;&#x5217;&#x50CF;&#x7D20;&#x70B9;</li><li>&#x9009;&#x62E9;&#x6392;&#x5E8F;&#x50CF;&#x7D20;&#x96C6;&#x7684;&#x4E2D;&#x95F4;&#x503C;&#x4F5C;&#x4E3A;&#x70B9;[i&#xFF0C;j]&#x7684;&#x65B0;&#x503C;</li><li>&#x4E00;&#x822C;&#x91C7;&#x7528;&#x5947;&#x6570;&#x70B9;&#x7684;&#x90BB;&#x57DF;&#x8BA1;&#x7B97;&#x4E2D;&#x503C;&#xFF0C;&#x5982;&#x679C;&#x50CF;&#x7D20;&#x70B9;&#x6570;&#x4E3A;&#x5076;&#x6570;&#xFF0C;&#x5219;&#x4E2D;&#x503C;&#x5C31;&#x53D6;&#x6392;&#x5E8F;&#x50CF;&#x7D20;&#x4E2D;&#x95F4;&#x4E24;&#x70B9;&#x7684;&#x5E73;&#x5747;&#x503C;&#x3002;</li></ol><p>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5728;&#x4E00;&#x5B9A;&#x6761;&#x4EF6;&#x4E0B;&#x53EF;&#x4EE5;&#x514B;&#x670D;&#x7EBF;&#x6027;&#x6EE4;&#x6CE2;&#x5668;&#x6240;&#x9020;&#x6210;&#x7684;&#x56FE;&#x50CF;&#x7EC6;&#x8282;&#x6A21;&#x7CCA;&#xFF0C;&#x800C;&#x5BF9;&#x6EE4;&#x9664;&#x8109;&#x51B2;&#x5E72;&#x6270;&#x5F88;&#x6709;&#x6548;&#x3002;</p><h3 id="&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;"><a href="#&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;" class="headerlink" title="&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;"></a>&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;</h3><h4 id="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4F7F;&#x7528;&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;"><a href="#&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4F7F;&#x7528;&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;" class="headerlink" title="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4F7F;&#x7528;&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4F7F;&#x7528;&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;</h4><ul><li>&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#xFF1A;&#x5E73;&#x6ED1;&#x56FE;&#x50CF;&#x5916;&#x8FD8;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x6A21;&#x7CCA;&#xFF1B;  </li><li>&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#xFF1A;&#x53BB;&#x9664;&#x8109;&#x51B2;&#x566A;&#x58F0;&#x7684;&#x540C;&#x65F6;&#x53EF;&#x80FD;&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x7684;&#x7EBF;&#x6761;&#x7EC6;&#x8282;&#x6EE4;&#x9664;&#x3002;</li></ul><p>&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;&#x662F;&#x5728;&#x7EFC;&#x5408;&#x8003;&#x8651;&#x4E86;&#x5747;&#x503C;&#x6EE4;&#x6CE2;&#x5668;&#x548C;&#x4E2D;&#x503C;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x4F18;&#x7F3A;&#x70B9;&#x540E;&#x53D1;&#x5C55;&#x8D77;&#x6765;&#x7684;&#xFF0C;&#x5B83;&#x7684;&#x7279;&#x70B9;&#x662F;&#xFF1A;&#x6EE4;&#x6CE2;&#x5668;&#x5728;&#x9664;&#x566A;&#x58F0;&#x8109;&#x51B2;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x53C8;&#x4E0D;&#x81F3;&#x4E8E;&#x4F7F;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x5341;&#x5206;&#x6A21;&#x7CCA;&#x3002;</p><h4 id="&#x8BA1;&#x7B97;-2"><a href="#&#x8BA1;&#x7B97;-2" class="headerlink" title="&#x8BA1;&#x7B97;"></a>&#x8BA1;&#x7B97;</h4><ol><li>&#x5BF9;&#x7070;&#x5EA6;&#x56FE;&#x8C61;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;[i&#xFF0C;j]&#x53D6;&#x9002;&#x5F53;&#x5927;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;&#x90BB;&#x57DF;&#xFF08;3&#xD7;3&#x90BB;&#x57DF;&#xFF09;</li><li>&#x5206;&#x522B;&#x8BA1;&#x7B97;[i&#xFF0C;j]&#x7684;<strong>&#x5DE6;&#x4E0A;&#x89D2;</strong>&#x5B50;&#x90BB;&#x57DF;&#x3001;<strong>&#x5DE6;&#x4E0B;&#x89D2;</strong>&#x5B50;&#x90BB;&#x57DF;&#x3001;<strong>&#x53F3;&#x4E0A;&#x89D2;</strong>&#x5B50;&#x90BB;&#x57DF;&#x3001;<strong>&#x53F3;&#x4E0B;&#x89D2;</strong>&#x5B50;&#x90BB;&#x57DF;&#x7684;&#x7070;&#x5EA6;&#x5206;&#x5E03;&#x5747;&#x5300;&#x5EA6;V</li><li>&#x7136;&#x540E;&#x53D6;&#x6700;&#x5C0F;&#x5747;&#x5300;&#x5EA6;&#x5BF9;&#x5E94;&#x533A;&#x57DF;&#x7684;&#x5747;&#x503C;&#x4F5C;&#x4E3A;&#x8BE5;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x65B0;&#x7070;&#x5EA6;&#x503C;&#x3002;$$V=\sum f^2[i,j]-(\sum f[i,j])^2/N$$&#x6216;&#x8005;$$V=\sum (f[i,j]-\bar f[i,j])^2$$</li></ol><h4 id="&#x4E3E;&#x4F8B;"><a href="#&#x4E3E;&#x4F8B;" class="headerlink" title="&#x4E3E;&#x4F8B;"></a>&#x4E3E;&#x4F8B;</h4><p>&#x4F8B;&#xFF1A;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x90BB;&#x57DF;&#x7684;&#x5747;&#x5300;&#x5EA6;&#x5206;&#x5E03;<br><img src="/posts/1d9c933b/&#x8FB9;&#x7F18;&#x4FDD;&#x6301;&#x6EE4;&#x6CE2;&#x5668;&#x8BA1;&#x7B97;.jpg" alt=""><br>&#x7531;&#x8BA1;&#x7B97;&#x53EF;&#x77E5;&#xFF0C;&#x5206;&#x5E03;&#x8D8A;&#x5747;&#x5300;&#xFF0C;V&#x503C;&#x8D8A;&#x5C0F;&#x3002;</p><h2 id="&#x8FB9;&#x7F18;&#x4E0E;&#x8F6E;&#x5ED3;"><a href="#&#x8FB9;&#x7F18;&#x4E0E;&#x8F6E;&#x5ED3;" class="headerlink" title="&#x8FB9;&#x7F18;&#x4E0E;&#x8F6E;&#x5ED3;"></a>&#x8FB9;&#x7F18;&#x4E0E;&#x8F6E;&#x5ED3;</h2><h3 id="&#x5B9A;&#x4E49;"><a href="#&#x5B9A;&#x4E49;" class="headerlink" title="&#x5B9A;&#x4E49;"></a>&#x5B9A;&#x4E49;</h3><ul><li>&#x8FB9;&#x7F18;&#x662F;&#x6307;&#x56FE;&#x50CF;&#x5C40;&#x90E8;&#x4EAE;&#x5EA6;&#x53D8;&#x5316;&#x6700;&#x663E;&#x8457;&#x7684;&#x90E8;&#x5206;</li><li>&#x8FB9;&#x7F18;&#x7684;&#x8FDE;&#x63A5;&#x6784;&#x6210;&#x8F6E;&#x5ED3;&#x3002;</li><li>&#x8F6E;&#x5ED3;&#x662F;&#x7269;&#x4F53;&#x5728;&#x573A;&#x666F;&#x4E2D;&#x7684;&#x5B8C;&#x6574;&#x8FB9;&#x754C;&#x3002;</li></ul><h3 id="&#x56FE;&#x50CF;&#x7684;&#x4EAE;&#x5EA6;&#x53D8;&#x5316;"><a href="#&#x56FE;&#x50CF;&#x7684;&#x4EAE;&#x5EA6;&#x53D8;&#x5316;" class="headerlink" title="&#x56FE;&#x50CF;&#x7684;&#x4EAE;&#x5EA6;&#x53D8;&#x5316;"></a>&#x56FE;&#x50CF;&#x7684;&#x4EAE;&#x5EA6;&#x53D8;&#x5316;</h3><ul><li><strong>&#x9636;&#x8DC3;&#x4E0D;&#x8FDE;&#x7EED;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x4EAE;&#x5EA6;&#x5728;&#x4E0D;&#x8FDE;&#x7EED;&#x5904;&#x4E24;&#x8FB9;&#x7684;&#x50CF;&#x7D20;&#x7070;&#x5EA6;&#x503C;&#x6709;&#x7740;&#x663E;&#x8457;&#x7684;&#x5DEE;&#x5F02;&#x3002;</li><li><strong>&#x7EBF;&#x6761;&#x4E0D;&#x8FDE;&#x7EED;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x4EAE;&#x5EA6;&#x7A81;&#x7136;&#x4ECE;&#x4E00;&#x4E2A;&#x503C;&#x53D8;&#x5316;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;<strong>&#x4FDD;&#x6301;&#x4E00;&#x4E2A;&#x8F83;&#x5C0F;&#x7684;&#x884C;&#x7A0B;</strong>&#x540E;&#x53C8;&#x8FD4;&#x56DE;&#x5230;&#x539F;&#x6765;&#x7684;&#x503C;&#x3002;</li></ul><p>&#x4EE5;&#x4E0A;&#x662F;&#x7406;&#x60F3;&#x72B6;&#x6001;&#xFF0C;&#x5B9E;&#x9645;&#x4E2D;&#x7531;&#x4E8E;&#x5927;&#x591A;&#x6570;&#x4F20;&#x611F;&#x5668;&#x5143;&#x4EF6;&#x5177;&#x6709;&#x4F4E;&#x9891;&#x7279;&#x6027;&#xFF0C;&#x4F7F;&#x5F97;&#x9636;&#x8DC3;&#x8FB9;&#x7F18;&#x53D8;&#x6210;&#x659C;&#x5761;&#x5F62;&#x8FB9;&#x7F18;&#xFF0C;&#x7EBF;&#x6761;&#x8FB9;&#x7F18;&#x53D8;&#x6210;&#x5C4B;&#x9876;&#x5F62;&#x8FB9;&#x7F18;&#x3002;</p><h3 id="&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x8FB9;&#x754C;"><a href="#&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x8FB9;&#x754C;" class="headerlink" title="&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x8FB9;&#x754C;"></a>&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x8FB9;&#x754C;</h3><p><img src="/posts/1d9c933b/&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x8FB9;&#x754C;.jpg" alt=""></p><h3 id="&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;"><a href="#&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;" class="headerlink" title="&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;"></a>&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;</h3><h4 id="&#x4E00;&#x4E9B;&#x672F;&#x8BED;"><a href="#&#x4E00;&#x4E9B;&#x672F;&#x8BED;" class="headerlink" title="&#x4E00;&#x4E9B;&#x672F;&#x8BED;"></a>&#x4E00;&#x4E9B;&#x672F;&#x8BED;</h4><ul><li><strong>&#x8FB9;&#x7F18;&#x70B9;</strong>&#xFF1A;&#x56FE;&#x50CF;&#x4E2D;&#x4EAE;&#x5EA6;&#x663E;&#x8457;&#x53D8;&#x5316;&#x7684;&#x70B9;&#x3002;</li><li><strong>&#x8FB9;&#x7F18;&#x6BB5;</strong>&#xFF1A;&#x8FB9;&#x7F18;&#x70B9;&#x5750;&#x6807;[i,j]&#x53CA;&#x5176;&#x65B9;&#x5411;&#x3B8;&#x7684;&#x603B;&#x548C;&#xFF0C;&#x8FB9;&#x7F18;&#x7684;&#x65B9;&#x5411;&#x53EF;&#x4EE5;&#x662F;&#x68AF;&#x5EA6;&#x503C;&#x3002;</li><li><strong>&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x5668;</strong>&#xFF1A;&#x4ECE;&#x56FE;&#x50CF;&#x4E2D;&#x62BD;&#x53D6;&#x8FB9;&#x7F18;&#xFF08;&#x8FB9;&#x7F18;&#x70B9;&#x6216;&#x8FB9;&#x7F18;&#x7EBF;&#x6BB5;&#xFF09;&#x96C6;&#x5408;&#x7684;&#x7B97;&#x6CD5;&#x3002;</li><li><strong>&#x8F6E;&#x5ED3;</strong>&#xFF1A;&#x8FB9;&#x7F18;&#x5217;&#x8868;&#xFF0C;&#x6216;&#x662F;&#x4E00;&#x6761;&#x8FB9;&#x7F18;&#x5217;&#x8868;&#x7684;&#x66F2;&#x7EBF;&#x6A21;&#x578B;&#x3002;</li><li><strong>&#x8FB9;&#x7F18;&#x8FDE;&#x63A5;</strong>&#xFF1A;&#x4ECE;&#x65E0;&#x5E8F;&#x8FB9;&#x7F18;&#x8868;&#x5F62;&#x6210;&#x6709;&#x5E8F;&#x8FB9;&#x7F18;&#x8868;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E60;&#x60EF;&#x4E0A;&#x8FB9;&#x7F18;&#x7684;&#x8868;&#x793A;&#x7528;&#x987A;&#x65F6;&#x9488;&#x65B9;&#x5411;&#x6765;&#x6392;&#x5E8F;&#x3002;</li><li><strong>&#x8FB9;&#x7F18;&#x8DDF;&#x8E2A;</strong>&#xFF1A;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x786E;&#x5B9A;&#x8F6E;&#x5ED3;&#x56FE;&#x50CF;&#x7684;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;&#x3002;</li></ul><h3 id="&#x68AF;&#x5EA6;"><a href="#&#x68AF;&#x5EA6;" class="headerlink" title="&#x68AF;&#x5EA6;"></a>&#x68AF;&#x5EA6;</h3><p>&#x4E00;&#x7EF4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9636;&#x8DC3;&#x8FB9;&#x7F18;&#xFF08;&#x5C31;&#x662F;&#x524D;&#x9762;&#x7684;&#x7531;&#x9ED1;&#x7A81;&#x7136;&#x53D8;&#x767D;&#xFF09;&#x540C;&#x56FE;&#x50CF;&#x7684;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#x5C40;&#x90E8;&#x5CF0;&#x503C;&#xFF08;&#x77AC;&#x95F4;&#x53D8;&#x767D;&#xFF09;&#x6709;&#x5173;&#x3002;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x503C;&#x7684;&#x663E;&#x8457;&#x53D8;&#x5316;&#x53EF;&#x7528;&#x68AF;&#x5EA6;&#x7684;&#x79BB;&#x6563;&#x903C;&#x8FD1;&#x51FD;&#x6570;&#x6765;&#x68C0;&#x6D4B;&#xFF0C;&#x68AF;&#x5EA6;&#x662F;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#x7684;&#x4E8C;&#x7EF4;&#x7B49;&#x6548;&#x5F0F;&#xFF1A;<br>$$G(x,y)=[G_x,G_y]=[\frac {\partial f}{\partial x},\frac {\partial f}{\partial y}]$$<br>&#x68AF;&#x5EA6;&#x7684;&#x5E45;&#x5EA6;&#x503C;<br>$$<br>|G(x,y)|=\sqrt{G_x^2+G_y^2}<br>$$<br>&#x6216;&#x8005;<br>$$<br>|G(x,y)|=|G_x|+|G_y|<br>$$<br>&#x68AF;&#x5EA6;&#x7684;&#x5E45;&#x5EA6;&#x503C;&#x662F;&#x4E0E;&#x65B9;&#x5411;&#x65E0;&#x5173;&#x7684;&#xFF0C;&#x7B97;&#x5B50;&#x662F;<strong>&#x5404;&#x5411;&#x540C;&#x6027;</strong>&#x7B97;&#x5B50;&#x3002;</p><p>&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x4E2D;&#xFF0C;&#x5BFC;&#x6570;&#x7528;&#x5DEE;&#x5206;&#x8868;&#x793A;&#xFF1A;<br>$$<br>G_x=f[i,j+1]-f[i,j]  \<br>G_y=f[i,j]-f[i+1,j]<br>$$</p><h3 id="&#x4E00;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;"><a href="#&#x4E00;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;" class="headerlink" title="&#x4E00;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;"></a>&#x4E00;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;</h3><h4 id="Roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;"><a href="#Roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;" class="headerlink" title="Roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;"></a>Roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;</h4><p>Roberts&#x7B97;&#x5B50;&#x4E3A;&#x68AF;&#x5EA6;&#x5E45;&#x5EA6;&#x503C;&#x8BA1;&#x7B97;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x7684;&#x8FD1;&#x4F3C;&#xFF1A;<br>$$<br>|G[i,j]|=|f[i,j]-f[i+1,j+1]|+|f[i+1&#xFF0C;j]-f[i,j+1]|<br>$$<br>&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;$|G[i,j]|=|G_x|+|G_y|$</p><p>&#x6A21;&#x677F;&#x5377;&#x79EF;&#xFF1A;<br><img src="/posts/1d9c933b/Roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;gx.jpg" alt=""><br><img src="/posts/1d9c933b/Roberts&#x4EA4;&#x53C9;&#x7B97;&#x5B50;gy.jpg" alt=""></p><h4 id="Sobel&#x7B97;&#x5B50;"><a href="#Sobel&#x7B97;&#x5B50;" class="headerlink" title="Sobel&#x7B97;&#x5B50;"></a>Sobel&#x7B97;&#x5B50;</h4><p>Sobel&#x7B97;&#x5B50;&#x4E3A;&#x68AF;&#x5EA6;&#x5E45;&#x5EA6;&#x503C;&#x8BA1;&#x7B97;&#xFF1A;<br>$$M=\sqrt{s_x^2+s_y^2}$$<br>&#x5176;&#x4E2D;<br>$$<br>s_x = (a_2+ca_3+a_4)-(a_0+ca_7+a6)  \<br>s_y =(a_0+ca_1+a_2)-(a_6+ca_5+a4)  \<br>c = 2<br>$$</p><p>&#x5BF9;&#x5E94;&#x7684;&#x56FE;&#x662F;<br><img src="/posts/1d9c933b/Sobel&#x7B97;&#x5B50;&#x56FE;1.jpg" alt=""><br>Gx&#x548C;Gy&#x6A21;&#x677F;&#x662F;&#xFF1A;<br><img src="/posts/1d9c933b/Sobel&#x7B97;&#x5B50;gxgy.jpg" alt=""></p><h4 id="Prewitt&#x7B97;&#x5B50;"><a href="#Prewitt&#x7B97;&#x5B50;" class="headerlink" title="Prewitt&#x7B97;&#x5B50;"></a>Prewitt&#x7B97;&#x5B50;</h4><p>Prewitt&#x7B97;&#x5B50;&#x548C;Sobel&#x7B97;&#x5B50;&#x65B9;&#x7A0B;&#x4E00;&#x6837;&#xFF1A;<br>$$M=\sqrt{s_x^2+s_y^2}$$<br>&#x5176;&#x4E2D;<br>$$<br>s_x = (a_2+ca_3+a_4)-(a_0+ca_7+a6)  \<br>s_y =(a_0+ca_1+a_2)-(a_6+ca_5+a4)  \<br>c = 1<br>$$<br>&#x5BF9;&#x5E94;&#x7684;&#x56FE;&#x662F;<br><img src="/posts/1d9c933b/Sobel&#x7B97;&#x5B50;&#x56FE;1.jpg" alt=""><br>Gx&#x548C;Gy&#x6A21;&#x677F;&#x662F;&#xFF1A;<br><img src="/posts/1d9c933b/Prewitt&#x7B97;&#x5B50;gxgy.jpg" alt=""></p><h3 id="&#x4E8C;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;"><a href="#&#x4E8C;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;" class="headerlink" title="&#x4E8C;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;"></a>&#x4E8C;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;</h3><p><strong>&#x63D0;&#x51FA;&#x7684;&#x539F;&#x56E0;</strong>&#xFF1A;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#x7684;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x5668;&#x4F1A;&#x5BFC;&#x81F4;&#x8FB9;&#x7F18;&#x70B9;&#x68C0;&#x6D4B;&#x592A;&#x591A;&#x3002;</p><p><strong>&#x89E3;&#x51B3;&#x601D;&#x8DEF;</strong>&#xFF1A;&#x4F7F;&#x7528;&#x68AF;&#x5EA6;&#x503C;&#x7684;&#x6781;&#x5927;&#x503C;&#x5BF9;&#x5E94;&#x70B9;&#x4F5C;&#x4E3A;&#x8FB9;&#x7F18;&#x70B9;&#xFF0C;&#x5BF9;&#x5E94;&#x7740;&#x4E8C;&#x9636;&#x5BFC;&#x6570;&#x96F6;&#x4EA4;&#x53C9;&#x70B9;&#x3002;<br><img src="/posts/1d9c933b/&#x4E8C;&#x9636;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x539F;&#x7406;.jpg" alt=""></p><h4 id="&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;"><a href="#&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;" class="headerlink" title="&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;"></a>&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;</h4><p>&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;&#x662F;&#x4E8C;&#x9636;&#x5BFC;&#x6570;&#x7684;&#x4E8C;&#x7EF4;&#x7B49;&#x6548;&#x5F0F;&#xFF1A;</p><p>&#x5DEE;&#x5206;&#x8868;&#x793A;&#x4E3A;&#xFF1A;<br><img src="/posts/1d9c933b/&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;&#x5DEE;&#x5206;&#x8868;&#x793A;.jpg" alt=""><br>&#x5377;&#x53CA;&#x6A21;&#x677F;&#x4E3A;&#xFF1A;<br><img src="/posts/1d9c933b/&#x62C9;&#x666E;&#x62C9;&#x65AF;&#x7B97;&#x5B50;&#x5377;&#x79EF;&#x6838;.jpg" alt=""></p><h4 id="Canny&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;"><a href="#Canny&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;" class="headerlink" title="Canny&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;"></a>Canny&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;</h4><ol><li>&#x7528;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x5E73;&#x6ED1;&#x56FE;&#x50CF;</li><li>&#x7528;&#x4E00;&#x9636;&#x504F;&#x5BFC;&#x6570;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6765;&#x8BA1;&#x7B97;&#x56FE;&#x50CF;&#x7684;&#x68AF;&#x5EA6;&#x7684;&#x5E45;&#x5EA6;&#x548C;&#x65B9;&#x5411;</li><li>&#x5BF9;&#x68AF;&#x5EA6;&#x5E45;&#x5EA6;&#x503C;&#x8FDB;&#x884C;&#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236;&#xFF08;NMS&#xFF09;</li><li>&#x7528;&#x53CC;&#x9608;&#x503C;&#x7B97;&#x6CD5;&#x68C0;&#x6D4B;&#x548C;&#x8FDE;&#x63A5;&#x8FB9;&#x7F18;</li></ol><p>&#x8BE6;&#x7EC6;&#x8BF4;&#x660E;&#x5982;&#x4E0B;&#xFF1A;<br>I[i,j]&#x8868;&#x793A;&#x56FE;&#x50CF;&#xFF0C;&#x4F7F;&#x7528;&#x53EF;&#x5206;&#x79BB;&#x6EE4;&#x6CE2;&#x65B9;&#x6CD5;&#x6C42;&#x53D6;&#x56FE;&#x50CF;&#x4E0E;&#x9AD8;&#x65AF;&#x5E73;&#x6ED1;&#x6EE4;&#x6CE2;&#x5668;&#x7684;&#x5377;&#x79EF;&#xFF0C;&#x5F97;&#x5230;&#x5E73;&#x6ED1;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF1A;<br>$$S[i,j]=G[i,j;\sigma]*I[i,j]$$<br>&#x5E73;&#x6ED1;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x9635;&#x5217;S[i,j]&#x7684;&#x68AF;&#x5EA6;&#x53EF;&#x4EE5;&#x7528;2&#xD7;2&#x7684;&#x4E00;&#x9636;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x8FD1;&#x4F3C;&#x8BA1;&#x7B97;&#xFF0C;x&#x548C;y&#x65B9;&#x5411;&#x7684;&#x504F;&#x5BFC;&#x6570;P[i,j]&#x4E0E;Q[i,j]:<br>$$<br>P[i,j]\approx(S[i,j+1]-S[i,j]+S[i+1,j+1]-S[i+1,j])/2  \<br>Q[i,j]\approx(S[i,j]-S[i+1,j]+S[i,j+1]-S[i+1,j+1])/2<br>$$<br>$P[i,j]$&#x4E0E;$Q[i,j]$&#x662F;2&#xD7;2&#x6B63;&#x65B9;&#x5F62;&#x5185;&#x6C42;&#x5F97;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x7684;&#x5747;&#x503C;</p><p>&#x68AF;&#x5EA6;&#x5E45;&#x5EA6;&#x503C;&#x548C;&#x65B9;&#x5411;&#x89D2;&#x5206;&#x522B;&#x662F;&#xFF1A;<br>$$<br>M[i,j]=\sqrt{P^2[i,j]+Q^2[i,j]} \<br>\theta[i,j]=arctan(P[i,j]/Q[i,j])<br>$$<br>&#x8001;&#x5E08;&#x7684;PPT&#x91CC;$arctan()$&#x91CC;&#x6709;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5E94;&#x8BE5;&#x8868;&#x793A;&#x7684;&#x662F;&#x9664;&#x6CD5;&#x5173;&#x7CFB;&#x3002;</p><p><strong>&#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236;</strong>&#xFF1A;</p><ol><li>&#x7B97;&#x6CD5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;3&#xD7;3&#x90BB;&#x57DF;&#x4F5C;&#x7528;&#x5728;&#x5E45;&#x503C;&#x9635;&#x5217;M[i,j]&#x7684;&#x6240;&#x6709;&#x70B9;&#x4E0A;&#xFF1B;</li><li>&#x6BCF;&#x4E00;&#x4E2A;&#x70B9;&#x4E0A;&#xFF0C;&#x90BB;&#x57DF;&#x7684;&#x4E2D;&#x5FC3;&#x50CF;&#x7D20;M[i,j]&#x4E0E;&#x6CBF;&#x7740;&#x68AF;&#x5EA6;&#x7EBF;&#x7684;&#x4E24;&#x4E2A;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;&#x5176;&#x4E2D;&#x68AF;&#x5EA6;&#x7EBF;&#x662F;&#x7531;&#x90BB;&#x57DF;&#x7684;&#x4E2D;&#x5FC3;&#x70B9;&#x5904;&#x7684;&#x6247;&#x533A;&#x503C;$&#x3B6;[i,j]$&#x7ED9;&#x51FA;&#x3002;</li><li>&#x5982;&#x679C;&#x5728;&#x90BB;&#x57DF;&#x4E2D;&#x5FC3;&#x70B9;&#x5904;&#x7684;&#x5E45;&#x503C;M[i,j]&#x4E0D;&#x6BD4;&#x68AF;&#x5EA6;&#x7EBF;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x4E24;&#x4E2A;&#x76F8;&#x90BB;&#x70B9;&#x5E45;&#x503C;&#x5927;&#xFF0C;&#x5219;M[i,j]&#x8D4B;&#x503C;&#x4E3A;&#x96F6;&#xFF0C;&#x5426;&#x5219;&#x7EF4;&#x6301;&#x539F;&#x503C;&#xFF1B;</li><li>&#x6B64;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x628A;M[i,j]&#x5BBD;&#x5C4B;&#x810A;&#x5E26;&#x7EC6;&#x5316;&#x6210;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x5BBD;&#xFF0C;&#x5373;&#x4FDD;&#x7559;&#x5C4B;&#x810A;&#x7684;&#x9AD8;&#x5EA6;&#x503C;&#x3002;</li></ol><h2 id="&#x94FE;&#x7801;&#x8F6E;&#x5ED3;&#x8868;&#x793A;"><a href="#&#x94FE;&#x7801;&#x8F6E;&#x5ED3;&#x8868;&#x793A;" class="headerlink" title="&#x94FE;&#x7801;&#x8F6E;&#x5ED3;&#x8868;&#x793A;"></a>&#x94FE;&#x7801;&#x8F6E;&#x5ED3;&#x8868;&#x793A;</h2><p>&#x94FE;&#x7801;&#xFF1A;&#x6CBF;&#x7740;&#x8F6E;&#x5ED3;&#x8BB0;&#x5F55;&#x8FB9;&#x7F18;&#x8868;&#x7684;&#x4E00;&#x79CD;&#x8868;&#x793A;&#x65B9;&#x6CD5;&#x3002;&#x89C4;&#x5B9A;&#x4E86;&#x8FB9;&#x7F18;&#x8868;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x8FB9;&#x7F18;&#x70B9;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x8F6E;&#x5ED3;&#x65B9;&#x5411;&#xFF0C;&#x8F6E;&#x5ED3;&#x65B9;&#x5411;&#x88AB;&#x91CF;&#x5316;&#x4E3A;4&#x90BB;&#x70B9;&#x94FE;&#x7801;&#x6216;8&#x90BB;&#x70B9;&#x94FE;&#x7801;&#x3002;<br><img src="/posts/1d9c933b/&#x94FE;&#x7801;&#x8F6E;&#x5ED3;&#x8868;&#x793A;.jpg" alt=""></p><p>&#x4E3E;&#x4F8B;&#xFF1A;<br><img src="/posts/1d9c933b/&#x94FE;&#x7801;&#x4F8B;&#x5B50;1.jpg" alt=""><br><img src="/posts/1d9c933b/&#x94FE;&#x7801;&#x4F8B;&#x5B50;2.jpg" alt=""></p><p>&#x94FE;&#x7801;&#x7684;&#x5FAE;&#x5206;&#xFF08;&#x5DEE;&#x5206;&#x94FE;&#x7801;&#xFF09;&#x53EF;&#x7531;&#x539F;&#x94FE;&#x7801;&#x7684;&#x4E00;&#x9636;&#x5DEE;&#x5206;&#x6C42;&#x5F97;&#x3002;&#x5DEE;&#x5206;&#x94FE;&#x7801;&#x5177;&#x6709;&#x65CB;&#x8F6C;&#x4E0D;&#x53D8;&#x6027;&#xFF0C;&#x53EF;&#x7528;&#x4E8E;&#x624B;&#x5199;&#x4F53;&#x8BC6;&#x522B;&#x3002;<br><img src="/posts/1d9c933b/&#x5DEE;&#x5206;&#x94FE;&#x7801;1.jpg" alt=""><br><img src="/posts/1d9c933b/&#x5DEE;&#x5206;&#x94FE;&#x7801;2.jpg" alt=""><br>&#x8BA1;&#x7B97;&#x65B9;&#x6CD5;&#xFF1A;&#x540E;&#x9762;&#x7684;&#x51CF;&#x524D;&#x9762;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5C0F;&#x4E8E;&#x96F6;&#xFF0C;&#x5219;&#x52A0;&#x4E0A;8&#x3002;</p><h2 id="Hough&#x53D8;&#x6362;"><a href="#Hough&#x53D8;&#x6362;" class="headerlink" title="Hough&#x53D8;&#x6362;"></a>Hough&#x53D8;&#x6362;</h2><h3 id="&#x6982;&#x8FF0;-3"><a href="#&#x6982;&#x8FF0;-3" class="headerlink" title="&#x6982;&#x8FF0;"></a>&#x6982;&#x8FF0;</h3><ul><li>Hough&#x53D8;&#x6362;&#x662F;&#x5229;&#x7528;&#x56FE;&#x50CF;&#x5168;&#x5C40;&#x7279;&#x6027;&#x800C;&#x5C06;&#x8FB9;&#x7F18;&#x50CF;&#x7D20;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x7EC4;&#x6210;&#x533A;&#x57DF;&#x5C01;&#x95ED;&#x8FB9;&#x754C;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x3002;</li><li>&#x5728;&#x9884;&#x5148;&#x77E5;&#x9053;&#x533A;&#x57DF;&#x5F62;&#x72B6;&#x7684;&#x6761;&#x4EF6;&#x4E0B;&#xFF0C;&#x5229;&#x7528;Hough&#x53D8;&#x6362;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x5F97;&#x5230;&#x8FB9;&#x754C;&#x66F2;&#x7EBF;&#x800C;&#x5C06;&#x4E0D;&#x8FDE;&#x7EED;&#x7684;&#x8FB9;&#x7F18;&#x50CF;&#x7D20;&#x70B9;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;</li><li>&#x4E3B;&#x8981;&#x4F18;&#x70B9;&#x662F;&#x53D7;&#x566A;&#x58F0;&#x548C;&#x66F2;&#x7EBF;&#x95F4;&#x65AD;&#x7684;&#x5F71;&#x54CD;&#x8F83;&#x5C0F;&#x3002;</li><li>Hough&#x53D8;&#x6362;&#x7684;&#x4E3B;&#x8981;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x5728;&#x5DF2;&#x77E5;&#x5F62;&#x72B6;&#x7684;&#x6761;&#x4EF6;&#x4E0B;&#xFF0C;&#x5C06;<strong>&#x66F2;&#x7EBF;&#x4ECE;&#x56FE;&#x50CF;&#x5750;&#x6807;&#x7CFB;&#x53D8;&#x6362;&#x5230;&#x53C2;&#x6570;&#x5750;&#x6807;&#x7CFB;</strong>&#xFF0C;&#x901A;&#x8FC7;&#x7814;&#x7A76;&#x53C2;&#x6570;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x4E00;&#x4E9B;&#x7279;&#x5F81;&#xFF0C;&#x5F97;&#x5230;&#x56FE;&#x50CF;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;&#x8868;&#x793A;&#x3002;</li></ul><h3 id="&#x76F4;&#x7EBF;Hough&#x53D8;&#x6362;"><a href="#&#x76F4;&#x7EBF;Hough&#x53D8;&#x6362;" class="headerlink" title="&#x76F4;&#x7EBF;Hough&#x53D8;&#x6362;"></a>&#x76F4;&#x7EBF;Hough&#x53D8;&#x6362;</h3><p>&#x76F4;&#x7EBF;Hough&#x53D8;&#x6362;&#x7528;&#x5230;&#x4E86;<strong>&#x70B9;-&#x7EBF;&#x7684;&#x5BF9;&#x5076;&#x6027;</strong></p><ul><li>&#x5728;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x5171;&#x7EBF;&#x7684;&#x70B9;&#x662F;&#x5728;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x4E2D;&#x91CC;&#x76F8;&#x4EA4;&#x7684;&#x7EBF;&#x3002;&#x53CD;&#x8FC7;&#x6765;&#xFF0C;&#x5728;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x4E2D;&#x76F8;&#x4EA4;&#x4E8E;&#x4E00;&#x4E2A;&#x70B9;&#x7684;&#x6240;&#x6709;&#x76F4;&#x7EBF;&#xFF0C;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x5728;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x90FD;&#x662F;&#x5171;&#x7EBF;&#x7684;&#x70B9;&#x3002;</li><li>Hough&#x53D8;&#x6362;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x5BF9;&#x5076;&#x6027;&#x628A;&#x5728;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x68C0;&#x6D4B;&#x95EE;&#x9898;&#x8F6C;&#x6362;&#x5230;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x91CC;&#x8FDB;&#x884C;&#xFF0C;&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x91CC;&#x7684;&#x7B80;&#x5355;&#x7D2F;&#x52A0;&#x7EDF;&#x8BA1;&#x5B8C;&#x6210;&#x68C0;&#x6D4B;&#x3002;</li><li>&#x76F4;&#x7EBF;Hough&#x53D8;&#x6362;&#x5177;&#x4F53;&#x7D2F;&#x52A0;&#x7EDF;&#x8BA1;&#x8FC7;&#x7A0B;&#x662F;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;2D&#x7D2F;&#x52A0;&#x6570;&#x7EC4;&#x8FDB;&#x884C;&#x3002;</li></ul><p><strong>&#x7D2F;&#x52A0;&#x7EDF;&#x8BA1;</strong>&#xFF1A;</p><ol><li>&#x5728;&#x53C2;&#x6570;&#x7A7A;&#x95F4;PQ&#x4E2D;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;2D&#x7684;&#x7D2F;&#x52A0;&#x6570;&#x7EC4;A(p,q)&#xFF0C;&#x5176;&#x4E2D;p,q&#x7684;&#x53D8;&#x5316;&#x8303;&#x56F4;&#x662F;$[p_min,p_max]$&#xFF0C;$[q_min,q_max]$&#xFF0C;&#x5206;&#x522B;&#x662F;&#x659C;&#x7387;&#x548C;&#x622A;&#x8DDD;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x3002;</li><li>&#x5F00;&#x59CB;&#x65F6;&#x7F6E;&#x6570;&#x7EC4;A&#x4E3A;&#x96F6;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x7ED9;&#x5B9A;&#x70B9;&#xFF0C;&#x8BA9;p&#x53D6;&#x904D;P&#x8F74;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x503C;&#xFF0C;&#x6839;&#x636E;&#x516C;&#x5F0F;$q=-px_i+y_i$&#x8BA1;&#x7B97;&#x5BF9;&#x5E94;&#x7684;q&#x3002;</li><li>&#x518D;&#x6839;&#x636E;p&#x548C;q&#x7684;&#x503C;&#x5BF9;A&#x7D2F;&#x52A0;$A(p,q)=A(p,q)+1$</li><li>&#x7D2F;&#x52A0;&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x6839;&#x636E;A(p,q)&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x6709;&#x591A;&#x5C11;&#x70B9;&#x5171;&#x7EBF;&#xFF0C;&#x5373;A(p,q)&#x7684;&#x503C;&#x5C31;&#x662F;&#x5728;(p,q)&#x5904;&#x5171;&#x7EBF;&#x70B9;&#x7684;&#x4E2A;&#x6570;&#x3002;</li></ol><p>&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x51C6;&#x786E;&#x6027;&#x53D6;&#x51B3;&#x4E8E;&#x7D2F;&#x52A0;&#x6570;&#x7EC4;&#x7684;&#x5C3A;&#x5BF8;&#x3002;<br>&#x5982;&#x679C;&#x628A;P&#x8F74;&#x5212;&#x5206;&#x6210;K&#x4EFD;&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x70B9;(xk,yk)&#x8BA1;&#x7B97;&#x53EF;&#x5F97;q&#x7684;K&#x4E2A;&#x503C;&#x3002;&#x5982;&#x679C;&#x56FE;&#x50CF;&#x4E2D;&#x6709;n&#x4E2A;&#x70B9;&#xFF0C;&#x5219;&#x9700;&#x8981;nK&#x6B21;&#x8FD0;&#x7B97;&#xFF0C;&#x5C0F;&#x4E8E;n2&#x6B21;&#x3002;<br>&#x5982;&#x679C;&#x76F4;&#x7EBF;&#x63A5;&#x8FD1;&#x4E8E;&#x5782;&#x76F4;&#x65B9;&#x5411;&#xFF0C;&#x5219;&#x7531;&#x4E8E;p&#x548C;q&#x7684;&#x503C;&#x90FD;&#x63A5;&#x8FD1;&#x65E0;&#x7A77;&#x800C;&#x4F7F;&#x8BA1;&#x7B97;&#x91CF;&#x9661;&#x589E;&#xFF0C;&#x6240;&#x4EE5;&#x4F7F;&#x7528;&#x76F4;&#x7EBF;&#x7684;&#x6781;&#x5750;&#x6807;&#x65B9;&#x7A0B;&#x8868;&#x793A;$r=x_icos \theta + y_i sin \theta$<br>&#x5219;&#x539F;&#x56FE;&#x50CF;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x70B9;&#x5BF9;&#x5E94;&#x7740;&#x65B0;&#x53C2;&#x6570;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x66F2;&#x7EBF;&#xFF0C;&#x90A3;&#x4E48;&#x539F;&#x6765;&#x7684;&#x70B9;&#x2014;&#x76F4;&#x7EBF;&#x5BF9;&#x5076;&#x53D8;&#x6210;&#x4E86;&#x70B9;&#x2014;&#x66F2;&#x7EBF;&#x5BF9;&#x5076;&#x3002;<br>&#x7D2F;&#x52A0;&#x5668;&#x6570;&#x7EC4;&#x662F;$A(&#x3B8;,&#x3BB;)$</p><h2 id="&#x4E8C;&#x503C;&#x56FE;&#x50CF;"><a href="#&#x4E8C;&#x503C;&#x56FE;&#x50CF;" class="headerlink" title="&#x4E8C;&#x503C;&#x56FE;&#x50CF;"></a>&#x4E8C;&#x503C;&#x56FE;&#x50CF;</h2><h3 id="&#x6982;&#x5FF5;"><a href="#&#x6982;&#x5FF5;" class="headerlink" title="&#x6982;&#x5FF5;"></a>&#x6982;&#x5FF5;</h3><h4 id="&#x8FD1;&#x90BB;"><a href="#&#x8FD1;&#x90BB;" class="headerlink" title="&#x8FD1;&#x90BB;"></a>&#x8FD1;&#x90BB;</h4><ul><li>&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x50CF;&#x7D20;&#x53EA;&#x6709;&#x516C;&#x5171;&#x8FB9;&#x754C;&#xFF0C;&#x5219;&#x79F0;&#x5B83;&#x4EEC;&#x4E92;&#x4E3A;4&#x90BB;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x88AB;&#x8BA4;&#x4E3A;&#x4E0E;&#x5B83;&#x7684;4&#x90BB;&#x70B9;&#x662F;4&#x8FDE;&#x901A;&#x5173;&#x7CFB;</li><li>&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x50CF;&#x7D20;&#x81F3;&#x5C11;&#x5171;&#x4EAB;&#x4E00;&#x4E2A;&#x9876;&#x89D2;&#xFF0C;&#x5219;&#x79F0;&#x5B83;&#x4EEC;&#x4E92;&#x4E3A;8&#x90BB;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x88AB;&#x8BA4;&#x4E3A;&#x4E0E;&#x5B83;&#x7684;8&#x90BB;&#x70B9;&#x662F;8&#x8FDE;&#x901A;&#x5173;&#x7CFB;<br><img src="/posts/1d9c933b/&#x4E34;&#x70B9;&#x4E0E;&#x8FDE;&#x901A;.jpg" alt=""></li></ul><h4 id="&#x8DEF;&#x5F84;"><a href="#&#x8DEF;&#x5F84;" class="headerlink" title="&#x8DEF;&#x5F84;"></a>&#x8DEF;&#x5F84;</h4><p>&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x8DEF;&#x5F84;&#x6307;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x5E8F;&#x5217;&#xFF0C;&#x6B64;&#x5E8F;&#x5217;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x4E92;&#x4E3A;&#x90BB;&#x70B9;&#x3002;<br>&#x5982;&#x679C;&#x90BB;&#x70B9;&#x5173;&#x7CFB;&#x662F;4&#x8FDE;&#x901A;&#x7684;&#xFF0C;&#x5219;&#x8DEF;&#x5F84;&#x662F;4&#x8DEF;&#x5F84;<br>&#x5982;&#x679C;&#x90BB;&#x70B9;&#x5173;&#x7CFB;&#x662F;8&#x8FDE;&#x901A;&#x7684;&#xFF0C;&#x5219;&#x8DEF;&#x5F84;&#x662F;8&#x8DEF;&#x5F84;<br><img src="/posts/1d9c933b/&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8DEF;&#x5F84;.jpg" alt=""></p><h4 id="&#x524D;&#x666F;"><a href="#&#x524D;&#x666F;" class="headerlink" title="&#x524D;&#x666F;"></a>&#x524D;&#x666F;</h4><p>&#x56FE;&#x50CF;&#x4E2D;&#x503C;&#x4E3A;1&#x7684;&#x5168;&#x90E8;&#x50CF;&#x7D20;&#x7684;&#x96C6;&#x5408;&#x79F0;&#x4E3A;&#x524D;&#x666F;&#xFF0C;&#x524D;&#x666F;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4E2D;&#x7684;&#x524D;&#x666F;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x76EE;&#x6807;&#x3002;<br><img src="/posts/1d9c933b/&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x524D;&#x666F;.jpg" alt=""></p><h4 id="&#x8FB9;&#x754C;"><a href="#&#x8FB9;&#x754C;" class="headerlink" title="&#x8FB9;&#x754C;"></a>&#x8FB9;&#x754C;</h4><p>$S$&#x7684;&#x8FB9;&#x754C;&#x662F;$S_{&#x524D;&#x666F;}$&#x4E2D;&#x4E0E;$S_{&#x80CC;&#x666F;}$&#x6709;4&#x8FDE;&#x901A;&#x5173;&#x7CFB;&#x7684;&#x50CF;&#x7D20;&#x96C6;&#x5408;&#xFF0C;&#x7528;$s&#x2019;$&#x8868;&#x793A;&#x3002;</p><h4 id="&#x5185;&#x90E8;"><a href="#&#x5185;&#x90E8;" class="headerlink" title="&#x5185;&#x90E8;"></a>&#x5185;&#x90E8;</h4><p>$s$&#x4E2D;&#x4E0D;&#x5C5E;&#x4E8E;&#x5B83;&#x7684;&#x8FB9;&#x754C;&#x7684;&#x50CF;&#x7D20;&#x96C6;&#x5408;&#xFF0C;&#x7528;$s-s&#x2019;$&#x8868;&#x793A;</p><h4 id="&#x5305;&#x56F4;"><a href="#&#x5305;&#x56F4;" class="headerlink" title="&#x5305;&#x56F4;"></a>&#x5305;&#x56F4;</h4><p>&#x5982;&#x679C;&#x4ECE;s&#x4E2D;&#x4EFB;&#x610F;&#x4E00;&#x70B9;&#x5230;<strong>&#x56FE;&#x50CF;&#x8FB9;&#x754C;</strong>&#xFF08;&#x4E0D;&#x662F;S&#x7684;&#x8FB9;&#x754C;&#xFF0C;&#x662F;&#x6574;&#x4E2A;&#x56FE;&#x7684;&#x8FB9;&#x754C;&#xFF09;&#x7684;4&#x8DEF;&#x5F84;&#x5FC5;&#x987B;&#x4E0E;&#x533A;&#x57DF;T&#x76F8;&#x4EA4;&#xFF0C;&#x5219;&#x533A;&#x57DF;T&#x5305;&#x56F4;&#x533A;&#x57DF;s&#xFF08;s&#x5728;T&#x5185;&#xFF09;&#x3002;<br><img src="/posts/1d9c933b/&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x5305;&#x56F4;.jpg" alt=""></p><h3 id="&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x4E8C;&#x503C;&#x56FE;&#x50CF;"><a href="#&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x4E8C;&#x503C;&#x56FE;&#x50CF;" class="headerlink" title="&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x4E8C;&#x503C;&#x56FE;&#x50CF;"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x4E8C;&#x503C;&#x56FE;&#x50CF;</h3><ul><li>&#x4EBA;&#x7C7B;&#x5728;&#x7406;&#x89E3;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x7070;&#x5EA6;&#x7EC4;&#x6210;&#x7684;&#x7EBF;&#x6761;&#x3001;&#x8F6E;&#x5ED3;&#x5F71;&#x50CF;&#x6216;&#x5176;&#x5B83;&#x56FE;&#x50CF;&#x65F6;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x56F0;&#x96BE;&#x3002;</li><li>&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8BA1;&#x7B97;&#x7B97;&#x6CD5;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x548C;&#x5B9E;&#x73B0;&#xFF0C;&#x8BA1;&#x7B97;&#x901F;&#x5EA6;&#x5FEB;&#x3002;</li><li>&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x6240;&#x9700;&#x5185;&#x5B58;&#x5C0F;&#xFF0C;&#x5BF9;&#x8BA1;&#x7B97;&#x673A;&#x8BBE;&#x5907;&#x8981;&#x6C42;&#x4F4E;</li><li>&#x8BB8;&#x591A;&#x4E8C;&#x503C;&#x89C6;&#x89C9;&#x7CFB;&#x7EDF;&#x7684;&#x6280;&#x672F;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x7070;&#x5EA6;&#x89C6;&#x89C9;&#x7CFB;&#x7EDF;</li></ul><h3 id="&#x5982;&#x4F55;&#x5F97;&#x5230;&#x4E8C;&#x503C;&#x56FE;&#x50CF;"><a href="#&#x5982;&#x4F55;&#x5F97;&#x5230;&#x4E8C;&#x503C;&#x56FE;&#x50CF;" class="headerlink" title="&#x5982;&#x4F55;&#x5F97;&#x5230;&#x4E8C;&#x503C;&#x56FE;&#x50CF;"></a>&#x5982;&#x4F55;&#x5F97;&#x5230;&#x4E8C;&#x503C;&#x56FE;&#x50CF;</h3><p>&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x901A;&#x8FC7;<strong>&#x9608;&#x503C;&#x5206;&#x5272;</strong>&#x7684;&#x65B9;&#x6CD5;&#x5F97;&#x5230;&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#xFF0C;&#x9608;&#x503C;&#x53D6;&#x51B3;&#x4E8E;&#x7167;&#x660E;&#x6761;&#x4EF6;&#x548C;&#x7269;&#x4F53;&#x7684;&#x53CD;&#x5C04;&#x7279;&#x6027;&#x3002;</p><p><strong>&#x7B97;&#x6CD5;&#x8FC7;&#x7A0B;</strong>&#xFF1A;&#x6BD4;&#x8F83;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x4E0E;&#x67D0;&#x4E00;&#x7070;&#x5EA6;&#x503C;&#x7684;&#x5173;&#x7CFB;&#x53EF;&#x4EE5;&#x5206;&#x6210;&#x4E24;&#x90E8;&#x5206;&#xFF0C;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x5C0F;&#x4E8E;&#x9608;&#x503C;&#xFF0C;&#x5C06;&#x6B64;&#x90E8;&#x5206;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x8BBE;&#x5B9A;&#x4E3A;0&#xFF1B;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x5927;&#x4E8E;&#x9608;&#x503C;&#xFF0C;&#x5C06;&#x6B64;&#x90E8;&#x5206;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x8BBE;&#x5B9A;&#x4E3A;1&#x3002;</p><p>&#x7531;&#x6B64;&#x5F97;&#x5230;&#x7684;&#x7ECF;&#x8FC7;&#x9608;&#x503C;&#x5904;&#x7406;&#x56FE;&#x50CF;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x7070;&#x5EA6;&#x503C;&#x6545;&#x79F0;&#x4E3A;&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x3002;</p><p>&#x9608;&#x503C;&#x5206;&#x5272;&#x7B97;&#x6CD5;&#x7684;&#x8FC7;&#x7A0B;&#xFF1A;<br>&#x8BBE;(x,y)&#x662F;&#x4E8C;&#x7EF4;&#x56FE;&#x50CF;&#x7684;&#x5E73;&#x9762;&#x5750;&#x6807;&#xFF0C;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x7EA7;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x662F;$G={0,1,2,3,4&#x2026;..L-1}$&#xFF08;&#x4E60;&#x60EF;&#x4E0A;0&#x8868;&#x793A;&#x6700;&#x6697;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#xFF0C;L-1&#x4EE3;&#x8868;&#x6700;&#x4EAE;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#xFF09;&#xFF0C;&#x4F4D;&#x4E8E;&#x5750;&#x6807;&#x70B9;(x,y)&#x4E0A;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x7070;&#x5EA6;&#x7EA7;&#x8868;&#x793A;f(x,y)&#x3002;<br>&#x8BBE;t&#x4E3A;&#x5206;&#x5272;&#x9608;&#x503C;&#xFF0C;&#x4E8E;&#x662F;&#x56FE;&#x50CF;&#x51FD;&#x6570;&#x5728;&#x9608;&#x503C;t&#x4E0A;&#x7684;&#x5206;&#x5272;&#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x6709;&#x5982;&#x4E0B;&#x8868;&#x793A;&#xFF1A;<br><img src="/posts/1d9c933b/&#x9608;&#x503C;&#x5206;&#x5272;&#x7B97;&#x6CD5;.jpg" alt=""><br>&#x9608;&#x503C;&#x5206;&#x5272;&#x7B97;&#x6CD5;&#x5B9E;&#x9645;&#x5C31;&#x662F;&#x6309;&#x67D0;&#x4E2A;&#x51C6;&#x5219;&#x51FD;&#x6570;&#x6C42;&#x6700;&#x4F18;&#x9608;&#x503C;&#x7684;&#x8FC7;&#x7A0B;&#x3002;</p><h3 id="&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;"><a href="#&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;" class="headerlink" title="&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;"></a>&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;</h3><h4 id="&#x76F4;&#x65B9;&#x56FE;&#x6CD5;"><a href="#&#x76F4;&#x65B9;&#x56FE;&#x6CD5;" class="headerlink" title="&#x76F4;&#x65B9;&#x56FE;&#x6CD5;"></a>&#x76F4;&#x65B9;&#x56FE;&#x6CD5;</h4><p>&#x56FE;&#x50CF;&#x76F4;&#x65B9;&#x56FE;&#x4F1A;&#x51FA;&#x73B0;&#x4E24;&#x4E2A;&#x5206;&#x79BB;&#x5CF0;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x76F4;&#x65B9;&#x56FE;&#x4E2D;&#x5206;&#x5272;&#x9608;&#x503C;&#x7684;&#x9009;&#x62E9;&#x5728;&#x4E24;&#x4E2A;&#x6CE2;&#x5CF0;&#x4E4B;&#x95F4;&#x7684;&#x6CE2;&#x8C37;&#x3002;<br><img src="/posts/1d9c933b/&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;1.jpg" alt=""><br>&#x53CC;&#x5CF0;&#x76F4;&#x65B9;&#x56FE;&#x53EF;&#x4EE5;&#x63A8;&#x5E7F;&#x5230;&#x5177;&#x6709;&#x4E0D;&#x540C;&#x7070;&#x5EA6;&#x503C;&#x7684;&#x591A;&#x4E2A;&#x7269;&#x4F53;&#x56FE;&#x50CF;&#x4E2D;&#x3002;&#x56FE;&#x50CF;&#x4E2D;&#x6709;&#x591A;&#x4E2A;&#x7269;&#x4F53;&#x4E14;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x7070;&#x5EA6;&#x5206;&#x5E03;&#xFF0C;&#x5982;&#x56FE;&#xFF1A;<br><img src="/posts/1d9c933b/&#x81EA;&#x52A8;&#x9608;&#x503C;&#x5206;&#x5272;2.jpg" alt=""></p><h4 id="&#x76F4;&#x65B9;&#x56FE;&#x53D8;&#x6362;&#x6CD5;"><a href="#&#x76F4;&#x65B9;&#x56FE;&#x53D8;&#x6362;&#x6CD5;" class="headerlink" title="&#x76F4;&#x65B9;&#x56FE;&#x53D8;&#x6362;&#x6CD5;"></a>&#x76F4;&#x65B9;&#x56FE;&#x53D8;&#x6362;&#x6CD5;</h4><p>&#x5982;&#x679C;&#x76EE;&#x6807;&#x533A;&#x57DF;&#x548C;&#x80CC;&#x666F;&#x533A;&#x57DF;&#x4E4B;&#x95F4;&#x7684;&#x8C37;&#x4E0D;&#x591F;&#x6DF1;&#xFF0C;&#x4EE5;&#x81F3;&#x4E8E;&#x65E0;&#x6CD5;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;&#x9608;&#x503C;&#xFF0C;&#x5219;&#x5C31;&#x8981;&#x5BF9;&#x76F4;&#x65B9;&#x56FE;&#x8FDB;&#x884C;&#x53D8;&#x6362;&#x3002;</p><h4 id="&#x5C40;&#x9650;&#x6027;"><a href="#&#x5C40;&#x9650;&#x6027;" class="headerlink" title="&#x5C40;&#x9650;&#x6027;"></a>&#x5C40;&#x9650;&#x6027;</h4><ul><li>&#x5982;&#x679C;&#x573A;&#x666F;&#x4E2D;&#x4E0D;&#x540C;&#x90E8;&#x5206;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x7167;&#x660E;&#xFF0C;&#x90A3;&#x4E48;&#x5373;&#x4F7F;&#x56FE;&#x50CF;&#x4E2D;&#x4EC5;&#x5305;&#x542B;&#x6709;&#x4E00;&#x4E2A;&#x7269;&#x4F53;&#x4E5F;&#x65E0;&#x6CD5;&#x7528;&#x4E00;&#x4E2A;&#x9608;&#x503C;&#x6765;&#x5206;&#x5272;&#x56FE;&#x50CF;&#x3002;</li><li>&#x57FA;&#x4E8E;&#x76F4;&#x65B9;&#x56FE;&#x7684;&#x9608;&#x503C;&#x5206;&#x5272;&#x65B9;&#x6CD5;&#x6CA1;&#x6709;&#x5229;&#x7528;&#x56FE;&#x50CF;&#x5F3A;&#x5EA6;&#x7684;&#x7A7A;&#x95F4;&#x4FE1;&#x606F;&#xFF0C;&#x5728;&#x672C;&#x8D28;&#x4E0A;&#x5B58;&#x5728;&#x5C40;&#x9650;&#x6027;&#x3002;</li></ul><h3 id="&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8FD0;&#x7B97;"><a href="#&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8FD0;&#x7B97;" class="headerlink" title="&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8FD0;&#x7B97;"></a>&#x4E8C;&#x503C;&#x56FE;&#x50CF;&#x8FD0;&#x7B97;</h3><h4 id="&#x8FDE;&#x901A;&#x6210;&#x5206;&#x6807;&#x8BB0;"><a href="#&#x8FDE;&#x901A;&#x6210;&#x5206;&#x6807;&#x8BB0;" class="headerlink" title="&#x8FDE;&#x901A;&#x6210;&#x5206;&#x6807;&#x8BB0;"></a>&#x8FDE;&#x901A;&#x6210;&#x5206;&#x6807;&#x8BB0;</h4><hr><h1 id="&#x7ACB;&#x4F53;&#x89C6;&#x89C9;"><a href="#&#x7ACB;&#x4F53;&#x89C6;&#x89C9;" class="headerlink" title="&#x7ACB;&#x4F53;&#x89C6;&#x89C9;"></a>&#x7ACB;&#x4F53;&#x89C6;&#x89C9;</h1><h2 id="&#x89C6;&#x89C9;&#x5750;&#x6807;&#x7CFB;&#x7EDF;"><a href="#&#x89C6;&#x89C9;&#x5750;&#x6807;&#x7CFB;&#x7EDF;" class="headerlink" title="&#x89C6;&#x89C9;&#x5750;&#x6807;&#x7CFB;&#x7EDF;"></a>&#x89C6;&#x89C9;&#x5750;&#x6807;&#x7CFB;&#x7EDF;</h2><ol><li>&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#xFF1A;&#x53C8;&#x53EB;&#x56FE;&#x50CF;&#x5750;&#x6807;&#x7CFB;&#xFF0C;&#x539F;&#x70B9; $o&#x2019;$ &#x4F4D;&#x4E8E;&#x56FE;&#x50CF;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C; $u$ &#x8F74;&#x5411;&#x53F3;&#x4E0E; $x$ &#x8F74;&#x5E73;&#x884C;&#xFF0C; $v$&#x8F74;&#x5411;&#x4E0B;&#x4E0E; $y$ &#x8F74;&#x5E73;&#x884C;&#x3002;</li><li>&#x50CF;&#x5E73;&#x9762;&#x5750;&#x6807;&#x7CFB;&#xFF1A;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#x4E0E;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E4B;&#x95F4;&#xFF0C;&#x76F8;&#x5DEE;&#x4E86;&#x4E00;&#x4E2A;&#x7F29;&#x653E;&#x548C;&#x4E00;&#x4E2A;&#x539F;&#x70B9;&#x7684;&#x5E73;&#x79FB;&#x3002;</li><li>&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;</li><li>&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;</li></ol><h2 id="&#x9488;&#x5B54;&#x76F8;&#x673A;&#x6A21;&#x578B;"><a href="#&#x9488;&#x5B54;&#x76F8;&#x673A;&#x6A21;&#x578B;" class="headerlink" title="&#x9488;&#x5B54;&#x76F8;&#x673A;&#x6A21;&#x578B;"></a>&#x9488;&#x5B54;&#x76F8;&#x673A;&#x6A21;&#x578B;</h2><p>&#x5E38;&#x7528;&#x7684;&#x76F8;&#x673A;&#x6A21;&#x578B;&#x90FD;&#x662F;&#x6839;&#x636E;<strong>&#x5C0F;&#x5B54;&#x6210;&#x50CF;</strong>&#x7684;&#x539F;&#x7406;&#x505A;&#x6210;&#x7684;&#x3002;</p><p>&#x4F46;&#x662F;&#x4E3A;&#x4E86;&#x83B7;&#x5F97;&#x597D;&#x7684;&#x6210;&#x50CF;&#x6548;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x76F8;&#x673A;&#x7684;&#x524D;&#x65B9;&#x52A0;&#x4E86;&#x900F;&#x955C;&#x3002;<br>&#x52A0;&#x4E86;&#x900F;&#x955C;&#x4E4B;&#x540E;&#x4F1A;&#x5F15;&#x8D77;&#x7578;&#x53D8;&#xFF0C;&#x53EB;<strong>&#x5F84;&#x5411;&#x7578;&#x53D8;</strong>&#xFF0C;&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x79CD;&#xFF1A;&#x6876;&#x5F62;&#x7578;&#x53D8;&#x548C;&#x6795;&#x5F62;&#x7578;&#x53D8;&#x3002;</p><h2 id="&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;"><a href="#&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;" class="headerlink" title="&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;"></a>&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;</h2><p>&#x50CF;&#x7D20;&#x5750;&#x6807;&#x7CFB;&#x4E0E;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E4B;&#x95F4;&#xFF0C;&#x76F8;&#x5DEE;&#x4E86;&#x4E00;&#x4E2A;&#x7F29;&#x653E;&#x548C;&#x4E00;&#x4E2A;&#x539F;&#x70B9;&#x7684;&#x5E73;&#x79FB;&#x3002;&#x8BBE;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x5728; $u$ &#x8F74;&#x4E0A;&#x7F29;&#x653E;&#x4E86; $&#x3B1;$ &#x500D;&#xFF0C;&#x5728;$ v$ &#x4E0A;&#x7F29;&#x653E;&#x4E86;$ &#x3B2;$ &#x500D;&#x3002;</p><p>&#x8BB0;$P=[X&#x2019;,Y&#x2019;]$&#x662F;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x7684;&#x5750;&#x6807;&#x3002;&#x5219;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x5750;&#x6807;&#x5BF9;&#x5E94;&#x7684;&#x50CF;&#x7D20;&#x5750;&#x6807;$[u,v]^T$&#x4E3A;<br>$$<br>\left{\begin{aligned}<br>u  &amp;=\alpha X&#x2019; + c_x\<br>v  &amp;=\beta Y&#x2019; + c_y\<br>\end{aligned}<br>\right.<br>$$</p><p>&#x628A;$\alpha f$&#x5408;&#x5E76;&#x6210;$f_x$&#xFF0C;&#x628A;$\beta f$&#x5408;&#x5E76;&#x6210;$f_y$&#xFF0C;&#x53EF;&#x5F97;&#xFF1A;<br>$$<br>\left{\begin{aligned}<br>u  &amp;=f_x \frac X Z + c_x\<br>v  &amp;=f_y \frac Y Z + c_y\<br>\end{aligned}<br>\right.<br>$$<br>&#x5176;&#x4E2D;&#xFF0C;$f$ &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x7C73;&#xFF0C; $\alpha,\beta$ &#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x50CF;&#x7D20;&#x6BCF;&#x7C73;&#xFF0C;&#x6240;&#x4EE5;$ f_x, f_y $&#x7684;&#x5355;&#x4F4D;&#x4E3A;&#x50CF;&#x7D20;&#x3002;</p><p>&#x82E5;&#x5C06;&#x5176;&#x5199;&#x6210;&#x77E9;&#x9635;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x6709;&#xFF1A;<br><img src="/posts/1d9c933b/&#x5185;&#x53C2;&#x77E9;&#x9635;.jpg" alt=""><br>&#x4E2D;&#x95F4;&#x6846;&#x8D77;&#x6765;&#x7684;&#x90E8;&#x5206;&#x5C31;&#x53EB;&#x5185;&#x53C2;&#x77E9;&#x9635;&#xFF0C;&#x4E00;&#x822C;&#x7ED9;&#x51FA;&#x5C31;&#x7ED9;&#x8FD9;&#x79CD;&#x5F62;&#x5F0F;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x89C1;<a href="/posts/8837a525/">&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;-LAB2</a>&#x4E2D;&#x7684;&#x62A5;&#x544A;&#x3002;</p><h3 id="&#x5F84;&#x5411;&#x7578;&#x53D8;"><a href="#&#x5F84;&#x5411;&#x7578;&#x53D8;" class="headerlink" title="&#x5F84;&#x5411;&#x7578;&#x53D8;"></a>&#x5F84;&#x5411;&#x7578;&#x53D8;</h3><p>&#x5F84;&#x5411;&#x7578;&#x53D8;&#x4F1A;&#x4EA7;&#x751F;&#x201C;&#x9C7C;&#x773C;&#x201D;&#x73B0;&#x8C61;&#x3002;&#x6210;&#x50CF;&#x4E2D;&#x5FC3;&#x5904;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x4E3A;0&#xFF0C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x968F;&#x7740;&#x4E0E;&#x6210;&#x50CF;&#x4E2D;&#x5FC3;&#x8DDD;&#x79BB;&#x589E;&#x5927;&#x800C;&#x589E;&#x5927;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x5904;&#x8FBE;&#x5230;&#x6700;&#x5927;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x3002;&#x5E38;&#x5E38;&#x7528;&#x5076;&#x6B21;&#x5E42;&#x7684;&#x6CF0;&#x52D2;&#x516C;&#x5F0F;&#x63CF;&#x8FF0;&#x5F84;&#x5411;&#x7578;&#x53D8;<br>$$<br>\left{\begin{aligned}x_{cerrected}=x(1+k_1r^2+k_2r^4+k_3r^6)\y_{cerrected}=y(1+k_1r^2+k_2r^4+k_3r^6)\end{aligned}\right.<br>$$</p><h3 id="&#x5207;&#x5411;&#x7578;&#x53D8;"><a href="#&#x5207;&#x5411;&#x7578;&#x53D8;" class="headerlink" title="&#x5207;&#x5411;&#x7578;&#x53D8;"></a>&#x5207;&#x5411;&#x7578;&#x53D8;</h3><p>&#x5207;&#x5411;&#x7578;&#x53D8;&#x7531;&#x900F;&#x955C;&#x548C;&#x6210;&#x50CF;&#x5E73;&#x9762;&#x4E0D;&#x5E73;&#x884C;&#x5F15;&#x8D77;&#x3002;&#x5E38;&#x7528;&#x5982;&#x4E0B;&#x516C;&#x5F0F;&#x63CF;&#x8FF0;</p><p>$$<br>\left{<br>\begin{aligned}x_{cerrected}&amp;=x+2p_1xy+p_2(r^2+2x^2)\<br>y_{cerrected}&amp;=y+p_1(r^2+2y^2)+2p_2xy<br>\end{aligned}<br>\right.<br>$$</p><h3 id="&#x4FEE;&#x590D;&#x7578;&#x53D8;"><a href="#&#x4FEE;&#x590D;&#x7578;&#x53D8;" class="headerlink" title="&#x4FEE;&#x590D;&#x7578;&#x53D8;"></a>&#x4FEE;&#x590D;&#x7578;&#x53D8;</h3><p>&#x8054;&#x5408;&#x4E0A;&#x8FF0;&#x4E24;&#x4E2A;&#x516C;&#x5F0F;&#xFF0C;&#x5BF9;&#x4E8E;&#x76F8;&#x673A;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x7684;&#x4E00;&#x70B9; P (X; Y; Z)&#xFF0C;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x4E94;&#x4E2A;&#x7578;&#x53D8;&#x7CFB;&#x6570;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x70B9;&#x5728;&#x50CF;&#x7D20;&#x5E73;&#x9762;&#x4E0A;&#x7684;&#x6B63;&#x786E;&#x4F4D;&#x7F6E;&#xFF1A;</p><ol><li>&#x5C06;&#x4E09;&#x7EF4;&#x7A7A;&#x95F4;&#x70B9;&#x6295;&#x5F71;&#x5230;&#x5F52;&#x4E00;&#x5316;&#x56FE;&#x50CF;&#x5E73;&#x9762;&#x3002;&#x8BBE;&#x5B83;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x5750;&#x6807;&#x4E3A; $[x, y]^T$&#x3002;</li><li>&#x5BF9;&#x5F52;&#x4E00;&#x5316;&#x5E73;&#x9762;&#x4E0A;&#x7684;&#x70B9;&#x8FDB;&#x884C;&#x5F84;&#x5411;&#x7578;&#x53D8;&#x548C;&#x5207;&#x5411;&#x7578;&#x53D8;&#x7EA0;&#x6B63;&#x3002;<br>$$<br>\left{\begin{aligned}<br>x_{cerrected}&amp;=x(1+k_1r^2+k_2r^4+k_3r^6)+2p_1xy+p_2(r^2+2x^2)\y_{cerrected}&amp;=y(1+k_1r^2+k_2r^4+k_3r^6)+p_1(r^2+2y^2)+2p_2xy<br>\end{aligned}\right.<br>$$</li><li>&#x5C06;&#x7EA0;&#x6B63;&#x540E;&#x7684;&#x70B9;&#x901A;&#x8FC7;&#x5185;&#x53C2;&#x6570;&#x77E9;&#x9635;&#x6295;&#x5F71;&#x5230;&#x50CF;&#x7D20;&#x5E73;&#x9762;&#xFF0C;&#x5F97;&#x5230;&#x8BE5;&#x70B9;&#x5728;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x6B63;&#x786E;&#x4F4D;&#x7F6E;&#x3002;<br>$$<br>\left{\begin{aligned}<br>u&amp;=f_xx_{cerrected}+c_x\<br>v&amp;=f_yy_{cerrected}+c_y<br>\end{aligned}\right.<br>$$</li></ol><p>&#x56E0;&#x6B64;&#x5728;&#x7ED9;&#x7578;&#x53D8;&#x53C2;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F80;&#x5F80;&#x662F;&#x7ED9;&#x4E00;&#x4E2A;1*5&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x4E3E;&#x4F8B;&#x89C1;<a href="/posts/8837a525/">&#x667A;&#x80FD;&#x673A;&#x5668;&#x4EBA;-LAB2</a>&#x4E2D;&#x7684;&#x62A5;&#x544A;&#x3002;</p><h3 id="&#x603B;&#x7ED3;&#x5355;&#x76EE;&#x76F8;&#x673A;&#x7684;&#x6210;&#x50CF;&#x8FC7;&#x7A0B;"><a href="#&#x603B;&#x7ED3;&#x5355;&#x76EE;&#x76F8;&#x673A;&#x7684;&#x6210;&#x50CF;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x603B;&#x7ED3;&#x5355;&#x76EE;&#x76F8;&#x673A;&#x7684;&#x6210;&#x50CF;&#x8FC7;&#x7A0B;"></a>&#x603B;&#x7ED3;&#x5355;&#x76EE;&#x76F8;&#x673A;&#x7684;&#x6210;&#x50CF;&#x8FC7;&#x7A0B;</h3><ol><li>&#x9996;&#x5148;&#xFF0C;&#x4E16;&#x754C;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x6709;&#x4E00;&#x4E2A;&#x56FA;&#x5B9A;&#x7684;&#x70B9; P&#xFF0C;&#x4E16;&#x754C;&#x5750;&#x6807;&#x4E3A; $P_w$&#xFF1B;</li><li>&#x7531;&#x4E8E;&#x76F8;&#x673A;&#x5728;&#x8FD0;&#x52A8;&#xFF0C;&#x5B83;&#x7684;&#x8FD0;&#x52A8;&#x7531;$R, t$&#x6216;&#x53D8;&#x6362;&#x77E9;&#x9635;$T$&#x63CF;&#x8FF0;&#x3002;$P$&#x7684;&#x76F8;&#x673A;&#x5750;&#x6807;&#x4E3A;&#xFF1A;$\tilde{P_c}= RP_w + t$&#x3002;</li><li>&#x8FD9;&#x65F6;&#x7684; $\tilde P_c$ &#x4ECD;&#x6709; $X, Y, Z$ &#x4E09;&#x4E2A;&#x91CF;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x6295;&#x5F71;&#x5230;&#x5F52;&#x4E00;&#x5316;&#x5E73;&#x9762; $Z = 1$ &#x4E0A;&#xFF0C;&#x5F97;&#x5230; $P$ &#x7684;&#x5F52;<br>&#x4E00;&#x5316;&#x76F8;&#x673A;&#x5750;&#x6807;&#xFF1A; $P_c = [X/Z, Y /Z, 1]^T$ </li><li>&#x6700;&#x540E;&#xFF0C; $P$ &#x7684;&#x5F52;&#x4E00;&#x5316;&#x5750;&#x6807;&#x7ECF;&#x8FC7;&#x5185;&#x53C2;&#x540E;&#xFF0C;&#x5BF9;&#x5E94;&#x5230;&#x5B83;&#x7684;&#x50CF;&#x7D20;&#x5750;&#x6807;&#xFF1A; $P_{uv} = KP_c$</li></ol><p>&#x4E00;&#x5171;4&#x79CD;&#x5750;&#x6807;&#xFF1A;&#x4E16;&#x754C;&#x3001;&#x76F8;&#x673A;&#x3001;&#x5F52;&#x4E00;&#x5316;&#x76F8;&#x673A;&#x548C;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x3002;</p><h2 id="&#x6DF1;&#x5EA6;&#x83B7;&#x53D6;"><a href="#&#x6DF1;&#x5EA6;&#x83B7;&#x53D6;" class="headerlink" title="&#x6DF1;&#x5EA6;&#x83B7;&#x53D6;"></a>&#x6DF1;&#x5EA6;&#x83B7;&#x53D6;</h2><ul><li>&#x6563;&#x7126;&#x6DF1;&#x5EA6;&#x6CD5;</li><li>&#x53CC;&#x76EE;&#x89C6;&#x89C9;&#x6CD5;</li><li>&#x6DF1;&#x5EA6;&#x76F8;&#x673A;&#x6CD5;</li></ul><h3 id="&#x53CC;&#x76EE;&#x6A21;&#x578B;"><a href="#&#x53CC;&#x76EE;&#x6A21;&#x578B;" class="headerlink" title="&#x53CC;&#x76EE;&#x6A21;&#x578B;"></a>&#x53CC;&#x76EE;&#x6A21;&#x578B;</h3><h4 id="&#x539F;&#x7406;"><a href="#&#x539F;&#x7406;" class="headerlink" title="&#x539F;&#x7406;"></a>&#x539F;&#x7406;</h4><p><img src="/posts/1d9c933b/&#x53CC;&#x76EE;&#x6A21;&#x578B;.jpg" alt=""><br>&#x56FE;&#x4E2D;&#x7684;&#x57FA;&#x7EBF;&#xFF08;baseline&#xFF09;&#x4E0D;&#x662F;&#x4E00;&#x6761;&#x7EBF;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x4E2A;&#x8DDD;&#x79BB;&#x3002;<br>&#x7531;&#x4E8E;&#x53CC;&#x76EE;&#x76F8;&#x673A;&#x4E4B;&#x95F4;&#x5B58;&#x5728;&#x89C6;&#x5DEE;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x7528;&#x5B83;&#x6765;&#x8BA1;&#x7B97;&#x6DF1;&#x5EA6;&#x3002;</p><p>&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#x4E3A;<br>$$<br>z=\frac {fb}{d}<br>$$<br>$z$&#x8868;&#x793A;&#x6DF1;&#x5EA6;&#xFF0C;$f$&#x662F;&#x7126;&#x8DDD;&#xFF0C;$d$&#x4E3A;&#x5DE6;&#x53F3;&#x56FE;&#x7684;&#x6A2A;&#x5750;&#x6807;&#x4E4B;&#x5DEE;&#xFF0C;&#x79F0;&#x4E3A;&#x89C6;&#x5DEE;&#x3002;<br>$$<br>d=u_L-u_R<br>$$<br>&#x89C6;&#x5DEE;&#x4E0E;&#x8DDD;&#x79BB;&#x6210;&#x53CD;&#x6BD4;&#xFF0C;&#x89C6;&#x5DEE;&#x8D8A;&#x5927;&#xFF0C;&#x8DDD;&#x79BB;&#x8D8A;&#x8FD1;&#x3002;&#x89C6;&#x5DEE;&#x7684;&#x6700;&#x5C0F;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x3002;</p><p>&#x7531;&#x4E8E;&#x89C6;&#x5DEE;&#x6700;&#x5C0F;&#x4E3A;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#xFF0C;&#x4E8E;&#x662F;&#x53CC;&#x76EE;&#x7684;&#x6DF1;&#x5EA6;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x7406;&#x8BBA;&#x4E0A;&#x7684;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x7531; fb &#x786E;&#x5B9A;&#x3002;&#x6211;&#x4EEC;&#x770B;&#x5230;&#xFF0C;&#x5F53;&#x57FA;&#x7EBF;&#x8D8A;&#x957F;&#x65F6;&#xFF0C;&#x53CC;&#x76EE;&#x6700;&#x5927;&#x80FD;&#x6D4B;&#x5230;&#x7684;&#x8DDD;&#x79BB;&#x5C31;&#x4F1A;&#x53D8;&#x8FDC;&#xFF1B;&#x53CD;&#x4E4B;&#xFF0C;&#x5C0F;&#x578B;&#x53CC;&#x76EE;&#x5668;&#x4EF6;&#x5219;&#x53EA;&#x80FD;&#x6D4B;&#x91CF;&#x5F88;&#x8FD1;&#x7684;&#x8DDD;&#x79BB;&#x3002;</p><h4 id="&#x6027;&#x8D28;-1"><a href="#&#x6027;&#x8D28;-1" class="headerlink" title="&#x6027;&#x8D28;"></a>&#x6027;&#x8D28;</h4><ol><li>&#x8DDD;&#x79BB;&#x53CD;&#x6BD4;&#x4E8E;&#x5DEE;&#x5F02;&#xFF0C;&#x8D8A;&#x8FD1;&#x7684;&#x76EE;&#x6807;&#x6D4B;&#x91CF;&#x7684;&#x8D8A;&#x51C6;&#x3002;</li><li>&#x5DEE;&#x5F02;&#x6B63;&#x6BD4;&#x4E8E;(&#x5DE6;&#x53F3;&#x76F8;&#x673A;&#x95F4;)&#x57FA;&#x7EBF;&#x5BBD;&#x5EA6;&#x3002;&#x7ED9;&#x5B9A;&#x5DEE;&#x5F02;&#x8BEF;&#x5DEE;&#xFF0C;&#x589E;&#x52A0;&#x57FA;&#x7EBF;&#x5BBD;&#x5EA6;&#x53EF;&#x4EE5;&#x63D0;&#x9AD8;&#x6DF1;&#x5EA6;&#x4F30;&#x8BA1;&#x5F97;&#x7CBE;&#x5EA6;.&#x4F46;&#x589E;&#x52A0;&#x57FA;&#x7EBF;&#x5BBD;&#x5EA6;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x76EE;&#x6807;&#x5728;&#x67D0;&#x4E2A;&#x76F8;&#x673A;&#x4E2D;&#x6D88;&#x5931;&#x7684;&#x60C5;&#x5F62;.</li><li>&#x51FA;&#x73B0;&#x5728;&#x4E24;&#x53F0;&#x76F8;&#x673A;&#x4E2D;&#x7684;&#x540C;&#x4E00;&#x70B9;&#x6784;&#x6210;&#x5171;&#x8F6D;&#x5BF9;.&#x5171;&#x8F6D;&#x5BF9;&#x4F4D;&#x4E8E;&#x6838;&#x7EBF;&#x3002;</li></ol><p><strong>&#x6838;&#x7EBF;&#x662F;&#x5565;</strong></p><h3 id="RGB-D&#x76F8;&#x673A;"><a href="#RGB-D&#x76F8;&#x673A;" class="headerlink" title="RGB-D&#x76F8;&#x673A;"></a>RGB-D&#x76F8;&#x673A;</h3><p>&#x539F;&#x7406;&#xFF1A;&#x7269;&#x7406;&#x624B;&#x6BB5;&#x6D4B;&#x91CF;&#x6DF1;&#x5EA6;</p><p>&#x4E3B;&#x8981;&#x5206;&#x7C7B;&#xFF1A;</p><ul><li>&#x901A;&#x8FC7;&#x7EA2;&#x5916;&#x7ED3;&#x6784;&#x5149;</li><li>&#x98DE;&#x884C;&#x65F6;&#x95F4;&#x6CD5;</li></ul><h2 id="&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;"><a href="#&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;" class="headerlink" title="&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;"></a>&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;</h2><h3 id="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;-1"><a href="#&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;-1" class="headerlink" title="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;&#xFF1F;</h3><ol><li>&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x83B7;&#x53D6;&#x56FE;&#x50CF;&#x662F;&#x901A;&#x8FC7;&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x5F97;&#x5230;&#xFF0C;&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x672C;&#x8EAB;&#x7535;&#x5B50;&#x5E72;&#x6270;&#x548C;&#x5916;&#x754C;&#x73AF;&#x5883;&#x4EA7;&#x751F;&#x7684;&#x968F;&#x673A;&#x5E72;&#x6270;&#xFF0C;&#x4F7F;&#x5F97;&#x56FE;&#x50CF;&#x542B;&#x6709;&#x566A;&#x58F0;&#x3002;</li><li>&#x6210;&#x50CF;&#x7CFB;&#x7EDF;&#x6240;&#x5904;&#x7684;&#x7167;&#x660E;&#x6216;&#x5176;&#x4ED6;&#x73AF;&#x5883;&#xFF0C;&#x4F7F;&#x5F97;&#x56FE;&#x50CF;&#x7684;&#x7070;&#x5EA6;&#x5206;&#x8FA8;&#x7387;&#x4E0D;&#x9AD8;&#xFF0C;&#x751A;&#x81F3;&#x5F88;&#x96BE;&#x533A;&#x5206;&#x56FE;&#x50CF;&#x4E2D;&#x7684;&#x7269;&#x4F53;&#x3002;</li></ol><p>&#x56E0;&#x6B64;&#x5FC5;&#x987B;&#x5728;&#x89C6;&#x89C9;&#x7684;&#x521D;&#x7EA7;&#x9636;&#x6BB5;&#x5BF9;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x7070;&#x5EA6;&#x4FEE;&#x6B63;&#x3001;&#x566A;&#x58F0;&#x8FC7;&#x6EE4;&#x7B49;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x3002;</p><h3 id="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;-1"><a href="#&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;-1" class="headerlink" title="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;"></a>&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x7684;&#x529F;&#x80FD;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h3><p>&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x4E2D;&#x7684;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x5E76;&#x4E0D;&#x8003;&#x8651;&#x56FE;&#x50CF;&#x964D;&#x8D28;&#x539F;&#x56E0;&#xFF0C;&#x53EA;<strong>&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x7279;&#x5F81;&#x6709;&#x9009;&#x62E9;&#x7684;&#x7A81;&#x51FA;</strong>&#xFF0C;&#x8870;&#x51CF;&#x5176;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x7279;&#x5F81;&#x3002;</p><p>&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x540E;&#x7684;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x53BB;&#x903C;&#x8FD1;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#xFF0C;&#x8FD9;&#x79CD;&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x65B9;&#x6CD5;&#x79F0;&#x4E3A;&#x56FE;&#x50CF;&#x589E;&#x5F3A;&#x3002;</p><h3 id="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;-1"><a href="#&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;-1" class="headerlink" title="&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;"></a>&#x56FE;&#x50CF;&#x9884;&#x5904;&#x7406;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#xFF1F;</h3><ol><li>&#x7A7A;&#x95F4;&#x57DF;&#x6CD5;&#x548C;&#x9891;&#x7387;&#x57DF;&#x6CD5;&#xFF1A;  </li></ol><ul><li>&#x7A7A;&#x95F4;&#x57DF;&#x6CD5;&#x662F;&#x76F4;&#x63A5;&#x5728;&#x7A7A;&#x95F4;&#x57DF;&#x5BF9;&#x56FE;&#x50CF;&#x50CF;&#x7D20;&#x8FD0;&#x7B97;&#x5904;&#x7406;&#xFF1B;</li><li>&#x9891;&#x7387;&#x57DF;&#x6CD5;&#x662F;&#x5148;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x67D0;&#x79CD;&#x53D8;&#x6362;&#xFF08;DFT&#x3001;DCT&#x3001;DWT&#x3001;K-L&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x53D8;&#x6362;&#x57DF;&#x5BF9;&#x56FE;&#x50CF;&#x7684;&#x53D8;&#x6362;&#x503C;&#x8FDB;&#x884C;&#x8FD0;&#x7B97;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x8BA1;&#x7B97;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x9006;&#x53D8;&#x6362;&#x5230;&#x7A7A;&#x95F4;&#x57DF;&#x3002;</li></ul><ol><li>&#x5168;&#x5C40;&#x8FD0;&#x7B97;&#x548C;&#x5C40;&#x90E8;&#x8FD0;&#x7B97;</li><li>&#x7070;&#x5EA6;&#x56FE;&#x50CF;&#x548C;&#x5F69;&#x8272;&#x56FE;&#x50CF;</li></ol><h3 id="&#x76F4;&#x65B9;&#x6982;&#x5FF5;"><a href="#&#x76F4;&#x65B9;&#x6982;&#x5FF5;" class="headerlink" title="&#x76F4;&#x65B9;&#x6982;&#x5FF5;"></a>&#x76F4;&#x65B9;&#x6982;&#x5FF5;</h3><p>&#x5982;&#x679C;&#x5C06;&#x56FE;&#x50CF;&#x4E2D;&#x50CF;&#x7D20;&#x4EAE;&#x5EA6;&#xFF08;&#x7070;&#x5EA6;&#x7EA7;&#x522B;&#xFF09;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x53D8;&#x91CF;&#xFF0C; &#x5219;&#x5176;&#x5206;&#x5E03;&#x60C5;&#x51B5;&#x5C31;&#x53CD;&#x6620;&#x4E86;&#x56FE;&#x50CF;&#x7684;&#x7EDF;&#x8BA1;&#x7279;&#x6027;&#xFF0C;&#x8FD9;&#x53EF;&#x7528;Probability Density Function (PDF)&#x6765;&#x523B;&#x753B;&#x548C;&#x63CF;&#x8FF0;&#xFF0C;&#x8868;&#x73B0;&#x4E3A;&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;&#xFF08;Histogram&#xFF09;&#x3002;</p><p>&#x7070;&#x5EA6;&#x76F4;&#x65B9;&#x56FE;&#x662F;&#x7070;&#x5EA6;&#x7EA7;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x56FE;&#x50CF;&#x4E2D;&#x5177;&#x6709;&#x67D0;&#x79CD;<strong>&#x7070;&#x5EA6;&#x7EA7;</strong>&#x7684;&#x50CF;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x53CD;&#x6620;&#x4E86;&#x56FE;&#x50CF;&#x4E2D;&#x6BCF;&#x79CD;&#x7070;&#x5EA6;&#x51FA;&#x73B0;&#x7684;&#x9891;&#x7387;&#xFF0C;&#x5B83;&#x662F;&#x56FE;&#x50CF;&#x6700;&#x57FA;&#x672C;&#x7684;&#x7EDF;&#x8BA1;&#x7279;&#x5F81;&#x3002;</p><h1 id="&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;"><a href="#&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;" class="headerlink" title="&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;"></a>&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;</h1><h2 id="&#x6982;&#x8FF0;-4"><a href="#&#x6982;&#x8FF0;-4" class="headerlink" title="&#x6982;&#x8FF0;"></a>&#x6982;&#x8FF0;</h2><p>&#x91CC;&#x7A0B;&#x8BA1;(Odometry)&#x662F;&#x4E00;&#x79CD;&#x5229;&#x7528;&#x4ECE;&#x79FB;&#x52A8;&#x4F20;&#x611F;&#x5668;&#x83B7;&#x5F97;&#x7684;&#x6570;&#x636E;&#x6765;&#x4F30;&#x8BA1;&#x7269;&#x4F53;&#x4F4D;&#x7F6E;<strong>&#x968F;&#x65F6;&#x95F4;&#x7684;&#x53D8;&#x5316;</strong>&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x88AB;&#x7528;&#x5728;&#x8BB8;&#x591A;&#x79CD;&#x673A;&#x5668;&#x4EBA;&#x7CFB;&#x7EDF;&#xFF08;&#x8F6E;&#x5F0F;&#x6216;&#x8005;&#x817F;&#x5F0F;&#xFF09;&#x4E0A;&#x9762;&#xFF0C;&#x6765;&#x4F30;&#x8BA1;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x786E;&#x5B9A;&#x8FD9;&#x4E9B;&#x673A;&#x5668;&#x4EBA;&#x76F8;&#x5BF9;&#x4E8E;&#x521D;&#x59CB;&#x4F4D;&#x7F6E;&#x79FB;&#x52A8;&#x7684;&#x8DDD;&#x79BB;&#x3002;</p><p>&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x662F;&#x4E00;&#x79CD;&#x5229;&#x7528;&#x8FDE;&#x7EED;&#x7684;&#x56FE;&#x50CF;&#x5E8F;&#x5217;&#x6765;&#x4F30;&#x8BA1;&#x673A;&#x5668;&#x4EBA;&#x79FB;&#x52A8;&#x8DDD;&#x79BB;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6309;&#x7167;&#x539F;&#x7406;&#x4E0D;&#x540C;&#xFF0C;&#x53EF;&#x5206;&#x4E3A;&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#xFF0C;&#x5149;&#x6D41;&#x573A;&#x6CD5;&#x53CA;&#x5176;&#x6539;&#x8FDB;&#x7684;&#x76F4;&#x63A5;&#x6CD5;&#x3002;</p><h2 id="&#x7279;&#x5F81;&#x70B9;"><a href="#&#x7279;&#x5F81;&#x70B9;" class="headerlink" title="&#x7279;&#x5F81;&#x70B9;"></a>&#x7279;&#x5F81;&#x70B9;</h2><p>&#x56FE;&#x50CF;&#x5F53;&#x4E2D;&#x5177;&#x6709;&#x4EE3;&#x8868;&#x6027;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x6709;&#x4EE5;&#x4E0B;&#x7279;&#x70B9;&#xFF1A;</p><ul><li>&#x53EF;&#x91CD;&#x590D;&#x6027;:&#x5728;&#x4E0D;&#x540C;&#x56FE;&#x50CF;&#x4E2D;&#x80FD;&#x91CD;&#x73B0;</li><li>&#x53EF;&#x533A;&#x522B;&#x6027;:&#x4E0D;&#x540C;&#x7684;&#x70B9;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x8868;&#x8FBE;</li><li>&#x9AD8;&#x6548;:&#x7279;&#x5F81;&#x70B9;&#x6570;&#x91CF;&#x5E94;&#x8FDC;&#x5C0F;&#x4E8E;&#x50CF;&#x7D20;&#x7684;&#x6570;&#x91CF;</li><li>&#x672C;&#x5730;:&#x7279;&#x5F81;&#x4EC5;&#x4E0E;&#x4E00;&#x5C0F;&#x7247;&#x56FE;&#x50CF;&#x533A;&#x57DF;&#x76F8;&#x5173;</li></ul><p>&#x7279;&#x5F81;&#x70B9;&#x7684;&#x4FE1;&#x606F;&#xFF1A;</p><ul><li>&#x5173;&#x952E;&#x70B9;(Key point)&#xFF1A;&#x4F4D;&#x7F6E;&#x3001;&#x5927;&#x5C0F;&#x3001;&#x65B9;&#x5411;&#x3001;&#x8BC4;&#x5206;&#x7B49;</li><li>&#x63CF;&#x8FF0;&#x5B50;&#xFF08;Descriptor&#xFF09;&#xFF1A;&#x7279;&#x5F81;&#x70B9;&#x5468;&#x56F4;&#x7684;&#x56FE;&#x50CF;&#x4FE1;&#x606F;</li></ul><p>&#x7279;&#x5F81;&#x63CF;&#x8FF0;&#x5E94;&#x8BE5;&#x5728;&#x5149;&#x7167;&#x3001;&#x89C6;&#x89D2;&#x53D1;&#x751F;&#x5C11;&#x91CF;&#x53D8;&#x5316;&#x65F6;&#x4ECD;&#x80FD;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x3002;</p><h2 id="Harris-Detector"><a href="#Harris-Detector" class="headerlink" title="Harris Detector"></a>Harris Detector</h2><p>&#x8FD9;&#x4E2A;&#x90E8;&#x5206;&#x6211;&#x8BB0;&#x5F97;&#x4E0A;&#x8BFE;&#x8BB2;&#x4E86;<br><img src="/posts/1d9c933b/HarrisDetector.jpg" alt=""><br><img src="/posts/1d9c933b/HarrisDetector1.jpg" alt=""><br>$$R=\lambda_1\lambda_2-k(\lambda_1+\lambda_2)^2$$</p><p>Harris Detector&#x662F;&#x901A;&#x8FC7;&#x6570;&#x5B66;&#x8BA1;&#x7B97;&#x5728;&#x56FE;&#x50CF;&#x4E0A;&#x53D1;&#x73B0;&#x89D2;&#x5EA6;&#x7279;&#x5F81;&#x7684;&#x4E00;&#x79CD;&#x7B97;&#x6CD5;&#x3002;</p><p><strong>&#x7F3A;&#x70B9;</strong>&#xFF1A;Harris&#x7B97;&#x5B50;&#x5BF9;&#x7070;&#x5EA6;&#x7684;&#x5E73;&#x79FB;&#x662F;&#x4E0D;&#x53D8;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x5DEE;&#x5206;&#xFF0C;&#x5BF9;&#x65CB;&#x8F6C;&#x4E5F;&#x6709;&#x4E0D;&#x53D8;&#x6027;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x5C3A;&#x5EA6;&#x5F88;&#x654F;&#x611F;&#xFF0C;&#x5728;&#x4E00;&#x4E2A;&#x5C3A;&#x5EA6;&#x4E0B;&#x662F;&#x89D2;&#x70B9;&#xFF0C;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x5C3A;&#x5EA6;&#x4E0B;&#x53EF;&#x80FD;&#x5C31;&#x4E0D;&#x662F;&#x4E86;&#x3002;<br><img src="/posts/1d9c933b/Harris&#x7F3A;&#x70B9;.jpg" alt=""></p><h2 id="FAST&#x7279;&#x5F81;"><a href="#FAST&#x7279;&#x5F81;" class="headerlink" title="FAST&#x7279;&#x5F81;"></a>FAST&#x7279;&#x5F81;</h2><p>FAST &#x662F;&#x4E00;&#x79CD;&#x89D2;&#x70B9;&#xFF0C;&#x4E3B;&#x8981;&#x68C0;&#x6D4B;&#x5C40;&#x90E8;&#x50CF;&#x7D20;&#x7070;&#x5EA6;&#x53D8;&#x5316;&#x660E;&#x663E;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4EE5;&#x901F;&#x5EA6;&#x5FEB;&#x8457;&#x79F0;&#x3002;&#x5B83;&#x7684;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x4E0E;&#x5B83;&#x90BB;&#x57DF;&#x7684;&#x50CF;&#x7D20;&#x5DEE;&#x522B;&#x8F83;&#x5927;&#xFF08;&#x8FC7;&#x4EAE;&#x6216;&#x8FC7;&#x6697;&#xFF09; , &#x90A3;&#x5B83;&#x66F4;&#x53EF;&#x80FD;&#x662F;&#x89D2;&#x70B9;&#x3002;&#x76F8;&#x6BD4;&#x4E8E;&#x5176;&#x4ED6;&#x89D2;&#x70B9;&#x68C0;&#x6D4B;&#x7B97;&#x6CD5;&#xFF0C; FAST &#x53EA;&#x9700;&#x6BD4;&#x8F83;<strong>&#x50CF;&#x7D20;&#x4EAE;&#x5EA6;</strong>&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5341;&#x5206;&#x5FEB;&#x6377;&#x3002;</p><p>&#x68C0;&#x6D4B;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p><ol><li>&#x5728;&#x56FE;&#x50CF;&#x4E2D;&#x9009;&#x53D6;&#x50CF;&#x7D20; $p$&#xFF0C;&#x5047;&#x8BBE;&#x5B83;&#x7684;&#x4EAE;&#x5EA6;&#x4E3A; $I_p$&#x3002;</li><li>&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x9608;&#x503C; $T$ (&#x6BD4;&#x5982; $I_p$ &#x7684; 20%)&#x3002;</li><li>&#x4EE5;&#x50CF;&#x7D20; $p$ &#x4E3A;&#x4E2D;&#x5FC3;, &#x9009;&#x53D6;&#x534A;&#x5F84;&#x4E3A; 3 &#x7684;&#x5706;&#x4E0A;&#x7684; 16 &#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x3002;</li><li>&#x5047;&#x5982;&#x9009;&#x53D6;&#x7684;&#x5706;&#x4E0A;&#xFF0C;&#x6709;&#x8FDE;&#x7EED;&#x7684; N &#x4E2A;&#x70B9;&#x7684;&#x4EAE;&#x5EA6;&#x5927;&#x4E8E; $I_p + T$ <strong>&#x6216;</strong>&#x5C0F;&#x4E8E; $I_p &#x2212; T$&#xFF0C;&#x90A3;&#x4E48;&#x50CF;&#x7D20; $p$&#x53EF;&#x4EE5;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x7279;&#x5F81;&#x70B9; (N &#x901A;&#x5E38;&#x53D6; 12&#xFF0C;&#x5373;&#x4E3A; FAST-12&#x3002;&#x5176;&#x5B83;&#x5E38;&#x7528;&#x7684; N &#x53D6;&#x503C;&#x4E3A; 9 &#x548C; 11&#xFF0C;&#x4ED6;&#x4EEC;&#x5206;&#x522B;&#x88AB;&#x79F0;&#x4E3A;FAST-9&#xFF0C; FAST-11)&#x3002;</li><li>&#x5FAA;&#x73AF;&#x4EE5;&#x4E0A;&#x56DB;&#x6B65;&#xFF0C;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x6267;&#x884C;&#x76F8;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x3002;</li></ol><p><img src="/posts/1d9c933b/FAST&#x6982;&#x8FF0;.jpg" alt=""></p><p>&#x5728; FAST-12 &#x7B97;&#x6CD5;&#x4E2D;&#xFF0C;&#x4E3A;&#x4E86;&#x66F4;&#x9AD8;&#x6548;&#xFF0C;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x4E00;&#x9879;&#x9884;&#x6D4B;&#x8BD5;&#x64CD;&#x4F5C;&#xFF0C;&#x4EE5;&#x5FEB;&#x901F;&#x5730;&#x6392;&#x9664;&#x7EDD;&#x5927;&#x591A;&#x6570;&#x4E0D;&#x662F;&#x89D2;&#x70B9;&#x7684;&#x50CF;&#x7D20;&#x3002;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x4E3A;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#xFF0C;&#x76F4;&#x63A5;&#x68C0;&#x6D4B;&#x90BB;&#x57DF;&#x5706;&#x4E0A;&#x7684;&#x7B2C; 1&#xFF0C; 5&#xFF0C; 9&#xFF0C; 13 &#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x4EAE;&#x5EA6;&#x3002;&#x53EA;&#x6709;&#x5F53;&#x8FD9;&#x56DB;&#x4E2A;&#x50CF;&#x7D20;&#x4E2D;&#x6709;&#x4E09;&#x4E2A;&#x540C;&#x65F6;&#x5927;&#x4E8E; $I_p + T$ &#x6216;&#x5C0F;&#x4E8E; $I_p &#x2212; T$&#x65F6;&#xFF0C;&#x5F53;&#x524D;&#x50CF;&#x7D20;&#x624D;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x4E2A;&#x89D2;&#x70B9;&#xFF0C;&#x5426;&#x5219;&#x5E94;&#x8BE5;&#x76F4;&#x63A5;&#x6392;&#x9664;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x9884;&#x6D4B;&#x8BD5;&#x64CD;&#x4F5C;&#x5927;&#x5927;&#x52A0;&#x901F;&#x4E86;&#x89D2;&#x70B9;&#x68C0;&#x6D4B;&#x3002;</p><p>FAST&#x89D2;&#x70B9;&#x7ECF;&#x5E38;&#x51FA;&#x73B0;&#x201C;&#x624E;&#x5806;&#x201D;&#x7684;&#x73B0;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x7B2C;&#x4E00;&#x904D;&#x68C0;&#x6D4B;&#x4E4B;&#x540E;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x7528;&#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236;&#xFF0C;&#x5728;&#x4E00;&#x5B9A;&#x533A;&#x57DF;&#x5185;&#x4EC5;&#x4FDD;&#x7559;&#x54CD;&#x5E94;&#x6781;&#x5927;&#x503C;&#x7684;&#x89D2;&#x70B9;&#xFF0C;&#x907F;&#x514D;&#x89D2;&#x70B9;&#x96C6;&#x4E2D;&#x7684;&#x95EE;&#x9898;&#x3002;</p><h2 id="ORB&#x89D2;&#x70B9;&#x68C0;&#x6D4B;"><a href="#ORB&#x89D2;&#x70B9;&#x68C0;&#x6D4B;" class="headerlink" title="ORB&#x89D2;&#x70B9;&#x68C0;&#x6D4B;"></a>ORB&#x89D2;&#x70B9;&#x68C0;&#x6D4B;</h2><h3 id="Oriented-FAST"><a href="#Oriented-FAST" class="headerlink" title="Oriented FAST"></a>Oriented FAST</h3><p>&#x9996;&#x5148;&#xFF0C;FAST&#x89D2;&#x70B9;&#x6570;&#x91CF;&#x8FC7;&#x591A;&#xFF0C;&#x6839;&#x636E;&#x671F;&#x671B;&#x7684;&#x6570;&#x91CF;N&#xFF0C;&#x5BF9;&#x539F;&#x59CB;FAST&#x89D2;&#x70B9;&#x5206;&#x522B;&#x8BA1;&#x7B97;Harris&#x54CD;&#x5E94;&#x503C;&#xFF0C;&#x9009;&#x53D6;&#x524D;N&#x4E2A;&#x5177;&#x6709;&#x6700;&#x5927;&#x54CD;&#x5E94;&#x503C;&#x7684;&#x89D2;&#x70B9;&#x3002;&#x8BA1;&#x7B97;Harris&#x54CD;&#x5E94;&#x503C;&#xFF0C;&#x5C31;&#x662F;&#x524D;&#x9762;Harris Detector&#x91CC;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x90A3;&#x4E2A;$R$&#x3002;</p><p>&#x5176;&#x6B21;&#xFF0C;FAST&#x89D2;&#x70B9;&#x4E0D;&#x5177;&#x6709;&#x65B9;&#x5411;&#x4FE1;&#x606F;&#xFF0C;&#x56FA;&#x5B9A;&#x9009;&#x53D6;&#x534A;&#x5F84;&#x4E3A;3&#x7684;&#x5706;&#xFF0C;&#x5B58;&#x5728;&#x5C3A;&#x5EA6;&#x95EE;&#x9898;&#xFF1A;&#x8FDC;&#x770B;&#x662F;&#x89D2;&#x70B9;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x8FD1;&#x770B;&#x5C31;&#x4E0D;&#x662F;&#x4E86;&#xFF0C;ORB&#x6DFB;&#x52A0;&#x4E86;<strong>&#x5C3A;&#x5EA6;</strong>&#x548C;<strong>&#x65CB;&#x8F6C;</strong>&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x5C3A;&#x5EA6;&#x4E0D;&#x53D8;&#x6027;&#x7531;<strong>&#x6784;&#x5EFA;&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;</strong>(&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x7684;&#x964D;&#x91C7;&#x6837;&#xFF0C;&#x4EE5;&#x83B7;&#x5F97;&#x4E0D;&#x540C;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x56FE;&#x50CF;)&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#xFF0C;&#x65CB;&#x8F6C;&#x7684;&#x63CF;&#x8FF0;&#x5219;&#x7531;&#x7070;&#x5EA6;&#x8D28;&#x5FC3;&#x6CD5;&#x5B9E;&#x73B0;&#x3002;</p><h4 id="&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;"><a href="#&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;" class="headerlink" title="&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;"></a>&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;</h4><p>&#x662F;&#x6307;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x7684;&#x964D;&#x91C7;&#x6837;&#xFF0C;&#x4EE5;&#x83B7;&#x5F97;&#x4E0D;&#x540C;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x56FE;&#x50CF;&#x3002;</p><p>&#x5728;&#x91D1;&#x5B57;&#x5854;&#x7684;&#x591A;&#x4E2A;&#x5C42;&#x4E0A;&#x90FD;&#x662F;&#x89D2;&#x70B9;&#xFF0C;&#x624D;&#x7B97;&#x662F;&#x89D2;&#x70B9;&#x3002;&#x5C31;&#x662F;&#x653E;&#x5927;&#x6216;&#x7F29;&#x5C0F;&#xFF0C;&#x8FDC;&#x770B;&#x6216;&#x8FD1;&#x770B;&#xFF0C;&#x90FD;&#x8FD8;&#x662F;&#x4E2A;&#x89D2;&#x70B9;&#xFF0C;&#x4E00;&#x822C;&#x662F;&#x89D2;&#x5EA6;&#x660E;&#x663E;&#x7684;&#x5C16;&#x89D2;&#x3002;</p><h4 id="&#x7070;&#x5EA6;&#x8D28;&#x5FC3;&#x6CD5;"><a href="#&#x7070;&#x5EA6;&#x8D28;&#x5FC3;&#x6CD5;" class="headerlink" title="&#x7070;&#x5EA6;&#x8D28;&#x5FC3;&#x6CD5;"></a>&#x7070;&#x5EA6;&#x8D28;&#x5FC3;&#x6CD5;</h4><ol><li>&#x5728;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;&#x56FE;&#x50CF;&#x5757; $B$&#x4E2D;&#xFF0C;&#x5B9A;&#x4E49;&#x56FE;&#x50CF;&#x5757;&#x7684;&#x77E9;&#x4E3A;&#xFF1A;<br>$$<br>m_{pq} = \sum_{x,y\in B}x^py^qI(x, y) \quad p, q =\lbrace 0, 1\rbrace<br>$$</li><li>&#x901A;&#x8FC7;&#x77E9;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x56FE;&#x50CF;&#x5757;&#x7684;&#x8D28;&#x5FC3;<br>$$<br>C=\left( \frac {m_{10}}{m_{00}},\frac {m_{01}} {m_{00}} \right)<br>$$</li><li>&#x8FDE;&#x63A5;&#x56FE;&#x50CF;&#x5757;&#x7684;&#x51E0;&#x4F55;&#x4E2D;&#x5FC3;$ O$ &#x4E0E;&#x8D28;&#x5FC3; $C$&#xFF0C;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x5411;&#x91CF; $\overrightarrow {OC}$&#xFF0C;&#x4E8E;&#x662F;&#x7279;&#x5F81;&#x70B9;&#x7684;&#x65B9;&#x5411;&#x53EF;<br>&#x4EE5;&#x5B9A;&#x4E49;&#x4E3A;<br>$$<br>\theta=arctan(m_{01}/m_{10})<br>$$</li></ol><p>&#x901A;&#x8FC7;&#x4EE5;&#x4E0A;&#x65B9;&#x6CD5;&#xFF0C; FAST &#x89D2;&#x70B9;&#x4FBF;&#x5177;&#x6709;&#x4E86;&#x5C3A;&#x5EA6;&#x4E0E;&#x65CB;&#x8F6C;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x5927;&#x5927;&#x63D0;&#x5347;&#x4E86;&#x5B83;&#x4EEC;&#x5728;&#x4E0D;&#x540C;&#x56FE;&#x50CF;&#x4E4B;&#x95F4;&#x8868;&#x8FF0;&#x7684;&#x9C81;&#x68D2;&#x6027;&#x3002;&#x6240;&#x4EE5;&#x5728; ORB &#x4E2D;&#xFF0C;&#x628A;&#x8FD9;&#x79CD;&#x6539;&#x8FDB;&#x540E;&#x7684; FAST &#x79F0;&#x4E3A; Oriented FAST&#x3002;</p><h3 id="BRIEF-&#x63CF;&#x8FF0;&#x5B50;"><a href="#BRIEF-&#x63CF;&#x8FF0;&#x5B50;" class="headerlink" title="BRIEF &#x63CF;&#x8FF0;&#x5B50;"></a>BRIEF &#x63CF;&#x8FF0;&#x5B50;</h3><p>BRIEF &#x662F;&#x4E00;&#x79CD;&#x4E8C;&#x8FDB;&#x5236;&#x63CF;&#x8FF0;&#x5B50;&#xFF0C;&#x5B83;&#x7684;&#x63CF;&#x8FF0;&#x5411;&#x91CF;&#x7531;&#x8BB8;&#x591A;&#x4E2A; 0 &#x548C; 1 &#x7EC4;&#x6210;&#xFF0C;&#x8FD9;&#x91CC;&#x7684; 0 &#x548C; 1 &#x7F16;&#x7801;&#x4E86;&#x5173;&#x952E;&#x70B9;&#x9644;&#x8FD1;&#x4E24;&#x4E2A;&#x50CF;&#x7D20;&#xFF08;&#x6BD4;&#x5982;&#x8BF4; $p$ &#x548C; $q$&#xFF09;&#x7684;&#x5927;&#x5C0F;&#x5173;&#x7CFB;&#xFF1A;&#x5982;&#x679C; $p$ &#x6BD4; $q$ &#x5927;&#xFF0C;&#x5219;&#x53D6; 1&#xFF0C;&#x53CD;&#x4E4B;&#x5C31;&#x53D6; 0&#x3002;</p><p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x53D6;&#x4E86; 128 &#x4E2A;&#x8FD9;&#x6837;&#x7684; $p&#xFF0C; q$&#xFF0C;&#x6700;&#x540E;&#x5C31;&#x5F97;&#x5230; 128 &#x7EF4;&#x7531; 0&#xFF0C; 1 &#x7EC4;&#x6210;&#x7684;&#x5411;&#x91CF;&#x3002;</p><p>BRIEF &#x4F7F;&#x7528;&#x4E86;&#x968F;&#x673A;&#x9009;&#x70B9;&#x7684;&#x6BD4;&#x8F83;&#xFF0C;&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x5FEB;&#xFF0C;&#x800C;&#x4E14;&#x7531;&#x4E8E;&#x4F7F;&#x7528;&#x4E86;&#x4E8C;&#x8FDB;&#x5236;&#x8868;&#x8FBE;&#xFF0C;&#x5B58;&#x50A8;&#x8D77;&#x6765;&#x4E5F;&#x5341;&#x5206;&#x65B9;&#x4FBF;&#xFF0C;&#x9002;&#x7528;&#x4E8E;&#x5B9E;&#x65F6;&#x7684;&#x56FE;&#x50CF;&#x5339;&#x914D;&#x3002;</p><p>ORB &#x5728; FAST &#x7279;&#x5F81;&#x70B9;&#x63D0;&#x53D6;&#x9636;&#x6BB5;&#x8BA1;&#x7B97;&#x4E86;&#x5173;&#x952E;&#x70B9;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x65B9;&#x5411;&#x4FE1;&#x606F;&#xFF0C;&#x8BA1;&#x7B97;&#x4E86;&#x65CB;&#x8F6C;&#x4E4B;&#x540E;&#x7684;&#x201C;Steer BRIEF&#x201D;&#x7279;&#x5F81;&#xFF0C;&#x4F7F; ORB &#x7684;&#x63CF;&#x8FF0;&#x5B50;&#x5177;&#x6709;&#x8F83;&#x597D;&#x7684;&#x65CB;&#x8F6C;&#x4E0D;&#x53D8;&#x6027;&#x3002;</p><p>&#x7531;&#x4E8E;&#x8003;&#x8651;&#x5230;&#x4E86;&#x65CB;&#x8F6C;&#x548C;&#x7F29;&#x653E;&#xFF0C;&#x4F7F;&#x5F97; ORB &#x5728;&#x5E73;&#x79FB;&#x3001;&#x65CB;&#x8F6C;&#x3001;&#x7F29;&#x653E;&#x7684;&#x53D8;&#x6362;&#x4E0B;&#x4ECD;&#x6709;&#x826F;&#x597D;&#x7684;&#x8868;&#x73B0;&#x3002;</p><h2 id="&#x7279;&#x5F81;&#x5339;&#x914D;"><a href="#&#x7279;&#x5F81;&#x5339;&#x914D;" class="headerlink" title="&#x7279;&#x5F81;&#x5339;&#x914D;"></a>&#x7279;&#x5F81;&#x5339;&#x914D;</h2><p>&#x901A;&#x8FC7;&#x63CF;&#x8FF0;&#x5B50;&#x7684;&#x5DEE;&#x5F02;&#x5224;&#x65AD;&#x54EA;&#x4E9B;&#x7279;&#x5F81;&#x4E3A;&#x540C;&#x4E00;&#x4E2A;&#x70B9;&#x3002;</p><p>&#x66B4;&#x529B;&#x5339;&#x914D;&#xFF1A;&#x6BD4;&#x8F83;&#x56FE;1&#x4E2D;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x548C;&#x56FE;2&#x7279;&#x5F81;&#x7684;&#x8DDD;&#x79BB;&#xFF08;Brute-Force Matcher&#xFF09;</p><p>&#x52A0;&#x901F;&#xFF1A;&#x5FEB;&#x901F;&#x8FD1;&#x4F3C;&#x6700;&#x8FD1;&#x90BB;&#xFF08;FLANN&#xFF09;</p><h2 id="&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;-&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;"><a href="#&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;-&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;-&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;"></a>&#x7279;&#x5F81;&#x70B9;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;-&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;</h2><p><strong>Input</strong><br>&#x5DE6;&#x56FE;&#x50CF;&#x3001;&#x53F3;&#x56FE;&#x50CF;&#x5E8F;&#x5217;&#x3001;&#x5DE6;&#x53F3;&#x76F8;&#x673A;&#x7684;&#x5185;&#x53C2;&#x3001;&#x5916;&#x53C2;<br><strong>Output</strong><br>&#x56FE;&#x50CF;&#x5BF9;&#x4E4B;&#x95F4;&#x7684;&#x4F4D;&#x59FF;&#x5173;&#x7CFB;&#x3001;&#x76F8;&#x673A;&#x8F68;&#x8FF9;(&#x4E5F;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x57FA;&#x4E8E;&#x7279;&#x5F81;&#x70B9;&#x7684;&#x7A00;&#x758F;3d&#x5730;&#x56FE;&#xFF0C;optional)  </p><ol><li>&#x83B7;&#x5F97;&#x5DE6;&#x53F3;&#x56FE;&#x50CF;&#x3001;&#x56FE;&#x50CF;&#x6821;&#x6B63;</li><li>&#x63D0;&#x53D6;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#x70B9;</li><li>&#x5DE6;&#x53F3;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#x5339;&#x914D;&#xFF0C;&#x83B7;&#x53D6;&#x7279;&#x5F81;&#x70B9;&#x5750;&#x6807;</li><li>&#x524D;&#x540E;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#x5339;&#x914D;</li><li>&#x589E;&#x91CF;&#x5F0F;&#x7684;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;</li></ol><p>&#x5728;&#x6700;&#x540E;&#x4E00;&#x6B65;&#x201C;&#x589E;&#x91CF;&#x5F0F;&#x7684;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;&#x201D;&#x4E2D;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x6839;&#x636E;&#x5339;&#x914D;&#x540E;&#x7684;&#x7279;&#x5F81;&#x70B9;&#x548C;&#x7279;&#x5F81;&#x70B9;&#x7684;&#x5750;&#x6807;&#xFF0C;&#x6062;&#x590D;&#x4E24;&#x4E2A;&#x65F6;&#x523B;&#x76F8;&#x673A;&#x7684;&#x8FD0;&#x52A8;&#x3002;</p><h3 id="&#x589E;&#x91CF;&#x5F0F;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;"><a href="#&#x589E;&#x91CF;&#x5F0F;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;" class="headerlink" title="&#x589E;&#x91CF;&#x5F0F;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;"></a>&#x589E;&#x91CF;&#x5F0F;&#x8FD0;&#x52A8;&#x4F30;&#x8BA1;</h3><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;/</p><h2 id="PnP"><a href="#PnP" class="headerlink" title="PnP"></a>PnP</h2><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;</p><h2 id="ICP"><a href="#ICP" class="headerlink" title="ICP"></a>ICP</h2><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;</p><h2 id="&#x7279;&#x5F81;&#x70B9;&#x6D41;&#x7A0B;"><a href="#&#x7279;&#x5F81;&#x70B9;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7279;&#x5F81;&#x70B9;&#x6D41;&#x7A0B;"></a>&#x7279;&#x5F81;&#x70B9;&#x6D41;&#x7A0B;</h2><ol><li>&#x5728;&#x56FE;&#x50CF;&#x4E2D;&#x63D0;&#x53D6;&#x7279;&#x5F81;&#x70B9;&#x5E76;&#x8BA1;&#x7B97;&#x7279;&#x5F81;&#x63CF;&#x8FF0;</li><li>&#x5728;&#x4E0D;&#x540C;&#x56FE;&#x50CF;&#x4E2D;&#x5BFB;&#x627E;&#x7279;&#x5F81;&#x5339;&#x914D;</li><li>&#x5229;&#x7528;&#x5339;&#x914D;&#x70B9;&#x4FE1;&#x606F;&#x8BA1;&#x7B97;&#x76F8;&#x673A;&#x4F4D;&#x59FF;</li></ol><h2 id="&#x7279;&#x5F81;&#x70B9;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x7F3A;&#x70B9;"><a href="#&#x7279;&#x5F81;&#x70B9;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x7F3A;&#x70B9;" class="headerlink" title="&#x7279;&#x5F81;&#x70B9;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x7F3A;&#x70B9;"></a>&#x7279;&#x5F81;&#x70B9;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x7F3A;&#x70B9;</h2><ol><li>&#x5173;&#x952E;&#x70B9;&#x7684;&#x63D0;&#x53D6;&#x4E0E;&#x63CF;&#x8FF0;&#x5B50;&#x7684;&#x8BA1;&#x7B97;&#x975E;&#x5E38;&#x8017;&#x65F6;&#x3002;</li><li>&#x4F7F;&#x7528;&#x7279;&#x5F81;&#x70B9;&#x65F6;&#xFF0C;&#x5FFD;&#x7565;&#x4E86;&#x9664;&#x7279;&#x5F81;&#x70B9;&#x4EE5;&#x5916;&#x7684;&#x6240;&#x6709;&#x4FE1;&#x606F;&#x3002;</li><li>&#x76F8;&#x673A;&#x6709;&#x65F6;&#x4F1A;&#x8FD0;&#x52A8;&#x5230;&#x7279;&#x5F81;&#x7F3A;&#x5931;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5F80;&#x5F80;&#x8FD9;&#x4E9B;&#x5730;&#x65B9;&#x6CA1;&#x6709;&#x660E;&#x663E;&#x7684;&#x7EB9;&#x7406;&#x4FE1;&#x606F;&#x3002;</li></ol><p>xxxx</p><h1 id="&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;"><a href="#&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;" class="headerlink" title="&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;"></a>&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;</h1><h2 id="&#x5149;&#x6D41;&#x7684;&#x6982;&#x5FF5;"><a href="#&#x5149;&#x6D41;&#x7684;&#x6982;&#x5FF5;" class="headerlink" title="&#x5149;&#x6D41;&#x7684;&#x6982;&#x5FF5;"></a>&#x5149;&#x6D41;&#x7684;&#x6982;&#x5FF5;</h2><p>&#x5149;&#x6D41;&#x662F;&#x4E00;&#x79CD;&#x63CF;&#x8FF0;&#x50CF;&#x7D20;&#x968F;&#x7740;&#x65F6;&#x95F4;&#xFF0C;&#x5728;&#x56FE;&#x50CF;&#x4E4B;&#x95F4;&#x8FD0;&#x52A8;&#x7684;&#x65B9;&#x6CD5;&#x3002;<br>&#x5149;&#x6D41;&#x8868;&#x8FBE;&#x4E86;&#x56FE;&#x50CF;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x7531;&#x4E8E;&#x5B83;&#x5305;&#x542B;&#x4E86;&#x76EE;&#x6807;&#x8FD0;&#x52A8;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&#x7528;&#x6765;&#x786E;&#x5B9A;&#x76EE;&#x6807;&#x7684;&#x8FD0;&#x52A8;&#x60C5;&#x51B5;&#x3002;</p><p>&#x5149;&#x6D41;&#x9664;&#x4E86;&#x63D0;&#x4F9B;&#x8FDC;&#x8FD1;&#x5916;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x89D2;&#x5EA6;&#x4FE1;&#x606F;&#x3002;</p><p>&#x8BA1;&#x7B97;&#x90E8;&#x5206;&#x50CF;&#x7D20;&#x8FD0;&#x52A8;&#x7684;&#x79F0;&#x4E3A;&#x7A00;&#x758F;&#x5149;&#x6D41;&#xFF0C;&#x8BA1;&#x7B97;&#x6240;&#x6709;&#x50CF;&#x7D20;&#x7684;&#x79F0;&#x4E3A;&#x7A20;&#x5BC6;&#x5149;&#x6D41;&#x3002;</p><p>&#x672C;&#x8D28;&#x4E0A;&#x90FD;&#x662F;&#x4F30;&#x8BA1;&#x50CF;&#x7D20;&#x5728;&#x4E0D;&#x540C;&#x65F6;&#x523B;&#x56FE;&#x50CF;&#x4E2D;&#x7684;&#x8FD0;&#x52A8;&#x3002;</p><h2 id="&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;"><a href="#&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;" class="headerlink" title="&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;"></a>&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;</h2><p>&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x8BC4;&#x4F30;&#x4E24;&#x5E45;&#x56FE;&#x50CF;&#x7684;&#x4E4B;&#x95F4;&#x7684;&#x53D8;&#x5F62;&#xFF0C;&#x5B83;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4F53;&#x7D20;&#xFF08;&#x4F53;&#x79EF;&#x5143;&#x7D20;&#x7684;&#x7B80;&#x79F0;&#xFF09;&#x548C;&#x56FE;&#x50CF;&#x50CF;&#x7D20;&#x5B88;&#x6052;&#x3002;&#x5B83;&#x5047;&#x8BBE;&#x4E00;&#x4E2A;&#x7269;&#x4F53;&#x7684;&#x989C;&#x8272;&#x5728;&#x524D;&#x540E;&#x4E24;&#x5E27;&#x6CA1;&#x6709;&#x5DE8;&#x5927;&#x800C;&#x660E;&#x663E;&#x7684;&#x53D8;&#x5316;&#x3002;&#x57FA;&#x4E8E;&#x8FD9;&#x4E2A;&#x601D;&#x8DEF;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x56FE;&#x50CF;&#x7EA6;&#x675F;&#x65B9;&#x7A0B;&#x3002;&#x4E0D;&#x540C;&#x7684;&#x5149;&#x6D41;&#x7B97;&#x6CD5;&#x89E3;&#x51B3;&#x4E86;&#x5047;&#x5B9A;&#x4E86;&#x4E0D;&#x540C;&#x9644;&#x52A0;&#x6761;&#x4EF6;&#x7684;&#x5149;&#x6D41;&#x95EE;&#x9898;&#x3002;</p><h2 id="&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x8FC7;&#x7A0B;"><a href="#&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x8FC7;&#x7A0B;"></a>&#x5149;&#x6D41;&#x6CD5;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x8FC7;&#x7A0B;</h2><ol><li>&#x56FE;&#x50CF;&#x83B7;&#x53D6;&#xFF1A;&#x5355;&#x76EE;&#x7167;&#x76F8;&#x673A;&#x3001;&#x53CC;&#x76EE;&#x7167;&#x76F8;&#x673A;&#x6216;&#x8005;&#x5168;&#x5411;&#x7167;&#x76F8;&#x673A;&#xFF1B;</li><li>&#x56FE;&#x50CF;&#x6821;&#x6B63;&#xFF1A;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x6280;&#x672F;&#x6765;&#x53BB;&#x9664;&#x900F;&#x955C;&#x7578;&#x53D8;&#xFF1B;</li><li>&#x7279;&#x5F81;&#x68C0;&#x6D4B;&#xFF1A;&#x786E;&#x5B9A;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x5728;&#x5E27;&#x4E0E;&#x5E27;&#x4E4B;&#x95F4;&#x5339;&#x914D;&#x7279;&#x5F81;&#x5E76;&#x6784;&#x5EFA;&#x5149;&#x6D41;&#x573A;&#x3002;<ul><li>&#x4F7F;&#x7528;&#x76F8;&#x5173;&#x6027;&#x6765;&#x5EA6;&#x91CF;&#x4E24;&#x5E45;&#x56FE;&#x50CF;&#x95F4;&#x7684;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x5E76;&#x4E0D;&#x8FDB;&#x884C;&#x957F;&#x65F6;&#x95F4;&#x7684;&#x7279;&#x5F81;&#x8DDF;&#x8E2A;</li><li>&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x3001;&#x5339;&#x914D;&#xFF08;Lucas&#x2013;Kanade method&#xFF09;</li><li>&#x6784;&#x5EFA;&#x5149;&#x6D41;&#x573A;</li></ul></li><li>&#x68C0;&#x67E5;&#x5149;&#x6D41;&#x573A;&#x5411;&#x91CF;&#x662F;&#x5426;&#x5B58;&#x5728;&#x6F5C;&#x5728;&#x7684;&#x8DDF;&#x8E2A;&#x8BEF;&#x5DEE;&#xFF0C;&#x79FB;&#x9664;&#x5916;&#x70B9;</li><li>&#x7531;&#x5149;&#x6D41;&#x573A;&#x4F30;&#x8BA1;&#x7167;&#x76F8;&#x673A;&#x7684;&#x8FD0;&#x52A8;<ul><li>&#x53EF;&#x9009;&#x65B9;&#x6CD5;1&#xFF1A;&#x4F7F;&#x7528;&#x5361;&#x5C14;&#x66FC;&#x6EE4;&#x6CE2;&#x8FDB;&#x884C;&#x72B6;&#x6001;&#x4F30;&#x8BA1;</li><li>&#x53EF;&#x9009;&#x65B9;&#x6CD5;2&#xFF1A;&#x67E5;&#x627E;&#x7279;&#x5F81;&#x7684;&#x51E0;&#x4F55;&#x4E0E;3D&#x5C5E;&#x6027;&#xFF0C;&#x4EE5;&#x6700;&#x5C0F;&#x5316;&#x57FA;&#x4E8E;&#x76F8;&#x90BB;&#x4E24;&#x5E27;&#x4E4B;&#x95F4;&#x7684;&#x91CD;&#x6295;&#x5F71;&#x8BEF;&#x5DEE;&#x7684;&#x7F5A;&#x51FD;&#x6570;&#x503C;&#x3002;&#x8FD9;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6570;&#x5B66;&#x4E0A;&#x7684;&#x6700;&#x5C0F;&#x5316;&#x65B9;&#x6CD5;&#x6216;&#x968F;&#x673A;&#x91C7;&#x6837;&#x65B9;&#x6CD5;&#x6765;&#x5B8C;&#x6210;</li></ul></li><li>&#x5468;&#x671F;&#x6027;&#x7684;&#x91CD;&#x5B9A;&#x4F4D;&#x8DDF;&#x8E2A;&#x70B9;&#x3002;</li></ol><h2 id="&#x5149;&#x6D41;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;"><a href="#&#x5149;&#x6D41;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;" class="headerlink" title="&#x5149;&#x6D41;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;"></a>&#x5149;&#x6D41;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;</h2><ol><li>&#x5149;&#x6D41;&#x4EC5;&#x4F30;&#x8BA1;&#x4E86;&#x50CF;&#x7D20;&#x95F4;&#x7684;&#x5E73;&#x79FB;&#xFF0C;&#x6CA1;&#x6709;&#x7528;&#x5230;&#x76F8;&#x673A;&#x672C;&#x8EAB;&#x7684;&#x51E0;&#x4F55;&#x7ED3;&#x6784;</li><li>&#x6CA1;&#x6709;&#x8003;&#x8651;&#x5230;&#x76F8;&#x673A;&#x7684;&#x65CB;&#x8F6C;&#x548C;&#x56FE;&#x50CF;&#x7684;&#x7F29;&#x653E;</li><li>&#x5BF9;&#x4E8E;&#x8FB9;&#x754C;&#x4E0A;&#x7684;&#x70B9;&#xFF0C;&#x5149;&#x6D41;&#x4E0D;&#x597D;&#x8FFD;&#x8E2A;</li></ol><p>&#x4F46;&#x662F;<a href="./#&#x76F4;&#x63A5;&#x6CD5;">&#x76F4;&#x63A5;&#x6CD5;</a>&#x5219;&#x8003;&#x8651;&#x4E86;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;</p><h2 id="Lucas-Kanade-&#x5149;&#x6D41;"><a href="#Lucas-Kanade-&#x5149;&#x6D41;" class="headerlink" title="Lucas-Kanade &#x5149;&#x6D41;"></a>Lucas-Kanade &#x5149;&#x6D41;</h2><h3 id="&#x6982;&#x8FF0;-5"><a href="#&#x6982;&#x8FF0;-5" class="headerlink" title="&#x6982;&#x8FF0;"></a>&#x6982;&#x8FF0;</h3><p>&#x8BA1;&#x7B97;&#x4E24;&#x5E27;&#x5728;&#x65F6;&#x95F4;$t$ &#x5230;$t + &#x3B4;t$&#x4E4B;&#x95F4;&#x6BCF;&#x4E2A;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x4F4D;&#x7F6E;&#x7684;&#x79FB;&#x52A8;&#x3002;&#x7531;&#x4E8E;&#x5B83;&#x662F;&#x57FA;&#x4E8E;&#x56FE;&#x50CF;&#x4FE1;&#x53F7;&#x7684;&#x6CF0;&#x52D2;&#x7EA7;&#x6570;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x79F0;&#x4E3A;&#x5DEE;&#x5206;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;&#x7A7A;&#x95F4;&#x548C;&#x65F6;&#x95F4;&#x5750;&#x6807;&#x4F7F;&#x7528;&#x504F;&#x5BFC;&#x6570;&#x3002;</p><h3 id="&#x4E09;&#x4E2A;&#x5047;&#x8BBE;&#x6761;&#x4EF6;"><a href="#&#x4E09;&#x4E2A;&#x5047;&#x8BBE;&#x6761;&#x4EF6;" class="headerlink" title="&#x4E09;&#x4E2A;&#x5047;&#x8BBE;&#x6761;&#x4EF6;"></a>&#x4E09;&#x4E2A;&#x5047;&#x8BBE;&#x6761;&#x4EF6;</h3><ol><li>&#x4EAE;&#x5EA6;&#x6052;&#x5B9A;&#xFF0C;&#x5C31;&#x662F;&#x540C;&#x4E00;&#x70B9;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x5176;&#x4EAE;&#x5EA6;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x7528;&#x4E8E;&#x5F97;&#x5230;&#x5149;&#x6D41;&#x6CD5;&#x57FA;&#x672C;&#x65B9;&#x7A0B;&#xFF1B;</li><li>&#x5C0F;&#x8FD0;&#x52A8;&#xFF0C;&#x8FD9;&#x4E2A;&#x5FC5;&#x987B;&#x6EE1;&#x8DB3;&#xFF0C;&#x5C31;&#x662F;&#x65F6;&#x95F4;&#x7684;&#x53D8;&#x5316;&#x4E0D;&#x4F1A;&#x5F15;&#x8D77;&#x4F4D;&#x7F6E;&#x7684;&#x5267;&#x70C8;&#x53D8;&#x5316;&#xFF0C;&#x8FD9;&#x6837;&#x7070;&#x5EA6;&#x624D;&#x80FD;&#x5BF9;&#x4F4D;&#x7F6E;&#x6C42;&#x504F;&#x5BFC;&#xFF08;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5C0F;&#x8FD0;&#x52A8;&#x60C5;&#x51B5;&#x4E0B;&#x6211;&#x4EEC;&#x624D;&#x80FD;&#x7528;&#x524D;&#x540E;&#x5E27;&#x4E4B;&#x95F4;&#x5355;&#x4F4D;&#x4F4D;&#x7F6E;&#x53D8;&#x5316;&#x5F15;&#x8D77;&#x7684;&#x7070;&#x5EA6;&#x53D8;&#x5316;&#x53BB;&#x8FD1;&#x4F3C;&#x7070;&#x5EA6;&#x5BF9;&#x4F4D;&#x7F6E;&#x7684;&#x504F;&#x5BFC;&#x6570;&#xFF09;&#xFF1B;</li><li>&#x7A7A;&#x95F4;&#x4E00;&#x81F4;&#xFF0C;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#x4E0A;&#x90BB;&#x8FD1;&#x7684;&#x70B9;&#x6295;&#x5F71;&#x5230;&#x56FE;&#x50CF;&#x4E0A;&#x4E5F;&#x662F;&#x90BB;&#x8FD1;&#x70B9;&#xFF0C;&#x4E14;&#x90BB;&#x8FD1;&#x70B9;&#x901F;&#x5EA6;&#x4E00;&#x81F4;&#x3002;&#x8FD9;&#x662F;Lucas-Kanade&#x5149;&#x6D41;&#x6CD5;&#x7279;&#x6709;&#x7684;&#x5047;&#x5B9A;&#x3002;</li></ol><p>&#x793A;&#x610F;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/posts/1d9c933b/LK&#x5149;&#x6D41;&#x793A;&#x610F;&#x56FE;.jpg" alt=""></p><h3 id="LK&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;"><a href="#LK&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;" class="headerlink" title="LK&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;"></a>LK&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;</h3><ol><li>&#x8BBE;$t$&#x65F6;&#x523B;&#x4F4D;&#x4E8E;$x,y$&#x5904;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x4E3A;$I(x,y,t)$</li><li>&#x5728;$t+dt$&#x65F6;&#x523B;&#xFF0C;&#x8BE5;&#x50CF;&#x7D20;&#x8FD0;&#x52A8;&#x5230;&#x4E86;$x+dx,y+dy$&#x5904;</li><li>&#x5E0C;&#x671B;&#x8BA1;&#x7B97;&#x8FD0;&#x52A8;$dx,dy$</li><li>&#x7531;&#x7070;&#x5EA6;&#x4E0D;&#x53D8;&#x5047;&#x8BBE; $I(x+dx,y+dy,t+dt)=I(x,y,t)$&#x3002;&#x7070;&#x5EA6;&#x4E0D;&#x53D8;&#x5047;&#x8BBE;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x5F3A;&#x7684;&#x5047;&#x8BBE;&#xFF0C;&#x5B9E;&#x9645;&#x5F53;&#x4E2D;&#x5F88;&#x53EF;&#x80FD;&#x4E0D;&#x6210;&#x7ACB;&#x3002;</li><li>&#x5BF9; $t+dt$ &#x65F6;&#x523B;&#x7684;&#x7070;&#x5EA6;&#x8FDB;&#x884C;Taylor&#x5C55;&#x5F00;&#x5E76;&#x4FDD;&#x7559;&#x4E00;&#x9636;&#x9879;&#xFF1A;<br><img src="/posts/1d9c933b/LK&#x6CF0;&#x52D2;&#x4E00;&#x9636;.jpg" alt=""></li><li>&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x4E86;&#x7070;&#x5EA6;&#x4E0D;&#x53D8;&#xFF0C;&#x4E8E;&#x662F;&#x4E0B;&#x4E00;&#x4E2A;&#x65F6;&#x523B;&#x7684;&#x7070;&#x5EA6;&#x7B49;&#x4E8E;&#x4E4B;&#x524D;&#x7684;&#x7070;&#x5EA6;&#xFF0C;&#x4ECE;&#x800C;<br><img src="/posts/1d9c933b/LK&#x6CF0;&#x52D2;2.jpg" alt=""></li><li>&#x4E24;&#x8FB9;&#x9664;&#x4EE5; $dt$&#xFF0C;&#x5F97;&#xFF1A;<br><img src="/posts/1d9c933b/LK&#x6CF0;&#x52D2;3.jpg" alt=""></li><li>&#x5176;&#x4E2D; $dx/dt$ &#x4E3A;&#x50CF;&#x7D20;&#x5728; $x$ &#x8F74;&#x4E0A;&#x8FD0;&#x52A8;&#x901F;&#x5EA6;&#xFF0C;&#x800C; $dy/dt$ &#x4E3A; $y$ &#x8F74;&#x901F;&#x5EA6;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x8BB0;&#x4E3A; $u,v$&#x3002;&#x540C;&#x65F6; $\partial I/ \partial x$ &#x4E3A;&#x56FE;&#x50CF;&#x5728;&#x8BE5;&#x70B9;&#x5904; $x$ &#x65B9;&#x5411;&#x7684;&#x68AF;&#x5EA6;&#xFF0C;&#x53E6;&#x4E00;&#x9879;&#x5219;&#x662F;&#x5728; $y$ &#x65B9;&#x5411;&#x7684;&#x68AF;&#x5EA6;&#xFF0C;&#x8BB0;&#x4E3A; $Ix, Iy$&#x3002;&#x628A;&#x56FE;&#x50CF;&#x7070;&#x5EA6;&#x5BF9;&#x65F6;&#x95F4;&#x7684;&#x53D8;&#x5316;&#x91CF;&#x8BB0;&#x4E3A; $I_t$&#xFF0C;&#x5199;&#x6210;&#x77E9;&#x9635;&#x5F62;&#x5F0F;&#xFF0C;&#x6709;&#xFF1A;<br><img src="/posts/1d9c933b/LK&#x6CF0;&#x52D2;4.jpg" alt=""></li><li>8&#x4E2D;&#x7684;&#x5F0F;&#x5B50;&#x662F;&#x4E00;&#x4E2A;&#x4E8C;&#x5143;&#x4E00;&#x6B21;&#x7EBF;&#x6027;&#x65B9;&#x7A0B;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#xFF0C;&#x6B20;&#x5B9A;&#x3002;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5F15;&#x5165;&#x989D;&#x5916;&#x7684;&#x7EA6;&#x675F;&#x3002;&#x5047;&#x5B9A;&#x4E00;&#x4E2A;&#x7A97;&#x53E3;$(w*w)$&#x5185;&#x5149;&#x5EA6;&#x4E0D;&#x53D8;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x8BA1;&#x7B97;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x6765;&#x6C42;&#x89E3;$u&#xFF0C;v$&#x3002;<br><img src="/posts/1d9c933b/LK&#x6C42;&#x89E3;.jpg" alt=""></li></ol><h2 id="&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;"><a href="#&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;" class="headerlink" title="&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;"></a>&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;</h2><p>&#x5BF9;&#x4E8E;&#x5F62;&#x5982;$A_{m&#xD7;n}X=b$&#x7684;&#x65B9;&#x7A0B;&#xFF0C;&#x8003;&#x8651;&#x6D4B;&#x91CF;&#x6570;&#x636E;&#x548C;&#x6240;&#x9700;&#x89E3;&#x7684;&#x53C2;&#x6570;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x8BE5;&#x65B9;&#x7A0B;&#x7684;&#x89E3;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;<br><img src="/posts/1d9c933b/&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x60C5;&#x51B5;.jpg" alt=""></p><p>&#x8003;&#x8651;$m&#x2265;n$&#x5E76;&#x4E14;$R(A)=n$&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x679C;&#x89E3;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x4F46;&#x627E;&#x4E00;&#x4E2A;&#x6700;&#x63A5;&#x8FD1;$A_{m&#xD7;n}X=b$&#x7684;&#x89E3;&#x77E2;&#x91CF;&#x4ECD;&#x7136;&#x6709;&#x610F;&#x4E49;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x7A0B;&#x6210;&#x4E3A;&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#xFF08;&#x65B9;&#x7A0B;&#x5927;&#x4E8E;&#x672A;&#x77E5;&#x6570;&#xFF09;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x5BFB;&#x627E;&#x4E00;&#x4E2A;&#x5411;&#x91CF;$x$&#x4F7F;&#x5F97; $&#x2016;Ax&#x2212;b&#x2016;$&#x6700;&#x5C0F;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;$&#x2016;&#x2219;&#x2016;$&#x8868;&#x793A;&#x77E2;&#x91CF;&#x8303;&#x6570;&#x3002;&#x8FD9;&#x6837;&#x7684;xx&#x79F0;&#x4E3A;&#x8BE5;&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x7684;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x3002;</p><h3 id="&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;"><a href="#&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;" class="headerlink" title="&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;"></a>&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;</h3><p>&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;&#x7684;&#x76EE;&#x6807;&#xFF1A;&#x6C42;&#x8BEF;&#x5DEE;&#x7684;&#x6700;&#x5C0F;&#x5E73;&#x65B9;&#x548C;&#x3002;</p><p>&#x5BF9;&#x5E94;&#x6709;&#x4E24;&#x79CD;&#x6A21;&#x578B;&#xFF1A;&#x7EBF;&#x6027;&#x6A21;&#x578B;&#x548C;&#x975E;&#x7EBF;&#x6027;&#x6A21;&#x578B;&#x3002;</p><p>&#x5982;&#x679C;&#x77E9;&#x9635;&#x662F;&#x53EF;&#x9006;&#x7684;&#xFF0C;&#x7EBF;&#x6027;&#x6A21;&#x578B;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x7684;&#x89E3;&#x662F;closed-form&#xFF08;&#x95ED;&#x5F0F;&#x89E3;&#xFF09;&#x5373;<br>$$<br>\theta = (X^TX)^{-1}X^TY<br>$$<br>&#x800C;&#x975E;&#x7EBF;&#x6027;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CA1;&#x6709;closed-form&#xFF08;&#x95ED;&#x5F0F;&#x89E3;&#xFF09;&#xFF0C;&#x901A;&#x5E38;&#x7528;&#x8FED;&#x4EE3;&#x6CD5;&#x6C42;&#x89E3;&#xFF0C;&#x5982;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;(&#x53C8;&#x5206;&#x4E3A;&#x6279;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x3001;&#x968F;&#x673A;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;)&#x3001;&#x725B;&#x987F;&#x6CD5;&#x3001;&#x62DF;&#x725B;&#x987F;&#x6CD5;&#x7B49;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x6761;&#x4EF6;&#x66F4;&#x4E3A;&#x5E7F;&#x6CDB;&#xFF08;&#x65E0;&#x7EA6;&#x675F;&#xFF09;&#xFF0C;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x8FED;&#x4EE3;&#x66F4;&#x65B0;&#x6765;&#x9010;&#x6B65;&#x8FDB;&#x884C;&#x7684;&#x53C2;&#x6570;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#xFF0C;&#x6700;&#x7EC8;&#x7ED3;&#x679C;&#x4E3A;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x3002;</p><p>&#x5982;&#x679C;&#x4F18;&#x5316;&#x7684;&#x51FD;&#x6570;&#x662F;&#x51F8;&#x51FD;&#x6570;&#xFF0C;&#x6781;&#x5C0F;&#x503C;&#x70B9;&#x5373;&#x6700;&#x5C0F;&#x503C;&#x70B9;&#xFF0C;&#x5B58;&#x5728;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#x3002;</p><h3 id="&#x6027;&#x8D28;-2"><a href="#&#x6027;&#x8D28;-2" class="headerlink" title="&#x6027;&#x8D28;"></a>&#x6027;&#x8D28;</h3><p>&#x4E00;&#x822C;&#x8BF4;&#x6765;&#xFF0C;&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x65E0;&#x89E3;&#xFF08;&#x6B64;&#x65F6;&#x4E3A;&#x77DB;&#x76FE;&#x65B9;&#x7A0B;&#x7EC4;&#xFF09;&#xFF0C;&#x8FD9;&#x65F6;&#x9700;&#x8981;&#x5BFB;&#x627E;&#x65B9;&#x7A0B;&#x7EC4;&#x7684;&#x4E00;&#x4E2A;&#x201C;&#x6700;&#x8FD1;&#x4F3C;&#x201D;&#x7684;&#x89E3;.</p><p><strong>&#x5B9A;&#x4E49;</strong>  &#x8BB0;&#x8BEF;&#x5DEE;&#x5411;&#x91CF; $r=b-Ax$, &#x79F0;&#x4F7F;$||r||^2_2$ &#x6700;&#x5C0F;&#x7684;&#x89E3;$x*$&#x4E3A;&#x65B9;&#x7A0B;&#x7EC4;$Ax=b$&#x7684;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x3002;</p><p><strong>&#x5B9A;&#x7406;</strong>   $x*$&#x662F; $Ax=b$&#x7684;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x7684;&#x5145;&#x8981;&#x6761;&#x4EF6;&#x4E3A;$x*$&#x662F; $A^TAx=A^Tb$ &#x7684;&#x89E3;.</p><h3 id="&#x8303;&#x6570;"><a href="#&#x8303;&#x6570;" class="headerlink" title="&#x8303;&#x6570;"></a>&#x8303;&#x6570;</h3><p>L1-&#x8303;&#x6570;&#xFF1A;$||x||<em>1=\sum</em>{i=1}^n|x_i|$<br>L2-&#x8303;&#x6570;&#xFF1A;$||x||<em>2=\sqrt{\sum</em>{i=1}^nx_i^2}$</p><p>L2&#x8303;&#x6570;&#x662F;&#x6700;&#x5E38;&#x7528;&#x7684;&#x8303;&#x6570;&#xFF0C;&#x6B27;&#x5F0F;&#x7A7A;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x5EA6;&#x91CF;&#x65B9;&#x6CD5;&#x6B27;&#x6C0F;&#x8DDD;&#x79BB;&#x5C31;&#x662F;&#x4E00;&#x79CD;L2&#x8303;&#x6570;</p><p>L2&#x8303;&#x6570;&#x662F;&#x6307;&#x5411;&#x91CF;&#x5404;&#x5143;&#x7D20;&#x7684;&#x5E73;&#x65B9;&#x548C;&#x7136;&#x540E;&#x6C42;&#x5E73;&#x65B9;&#x6839;&#x3002;&#x8BA9;L2&#x8303;&#x6570;&#x7684;&#x89C4;&#x5219;&#x9879;&#x6700;&#x5C0F;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x5F97;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x5F88;&#x5C0F;&#xFF0C;&#x90FD;&#x63A5;&#x8FD1;&#x4E8E;0&#xFF0C;&#x4F46;&#x4E0E;L1&#x8303;&#x6570;&#x4E0D;&#x540C;&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x8BA9;&#x5B83;&#x7B49;&#x4E8E;0&#xFF0C;&#x800C;&#x662F;&#x63A5;&#x8FD1;&#x4E8E;0&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E2D;&#x4E00;&#x822C;&#x7528;&#x6765;&#x9632;&#x6B62;&#x8FC7;&#x62DF;&#x5408;&#x3002;</p><h3 id="&#x8BC1;&#x660E;&#x5B9A;&#x7406;"><a href="#&#x8BC1;&#x660E;&#x5B9A;&#x7406;" class="headerlink" title="&#x8BC1;&#x660E;&#x5B9A;&#x7406;"></a>&#x8BC1;&#x660E;&#x5B9A;&#x7406;</h3><p><strong>&#x5B9A;&#x7406;</strong>   $x*$&#x662F; $Ax=b$&#x7684;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x7684;&#x5145;&#x8981;&#x6761;&#x4EF6;&#x4E3A;$x*$&#x662F; $A^TAx=A^Tb$ &#x7684;&#x89E3;.<br><img src="/posts/1d9c933b/&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x5145;&#x5206;&#x6027;.jpg" alt=""><br><img src="/posts/1d9c933b/&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x89E3;&#x5FC5;&#x8981;&#x6027;.jpg" alt=""></p><h3 id="&#x8BA1;&#x7B97;&#x4F8B;&#x9898;"><a href="#&#x8BA1;&#x7B97;&#x4F8B;&#x9898;" class="headerlink" title="&#x8BA1;&#x7B97;&#x4F8B;&#x9898;"></a>&#x8BA1;&#x7B97;&#x4F8B;&#x9898;</h3><p><img src="/posts/1d9c933b/&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x4F8B;&#x9898;1.jpg" alt=""><br><img src="/posts/1d9c933b/&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x4F8B;&#x9898;2.jpg" alt=""><br><img src="/posts/1d9c933b/&#x8D85;&#x5B9A;&#x65B9;&#x7A0B;&#x7EC4;&#x4F8B;&#x9898;3.jpg" alt=""></p><h2 id="&#x76F4;&#x63A5;&#x6CD5;"><a href="#&#x76F4;&#x63A5;&#x6CD5;" class="headerlink" title="&#x76F4;&#x63A5;&#x6CD5;"></a>&#x76F4;&#x63A5;&#x6CD5;</h2><p>&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;&#xFF1F;</p><h3 id="&#x4F18;&#x70B9;"><a href="#&#x4F18;&#x70B9;" class="headerlink" title="&#x4F18;&#x70B9;"></a>&#x4F18;&#x70B9;</h3><ul><li>&#x7701;&#x7565;&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x7684;&#x65F6;&#x95F4;</li><li>&#x53EA;&#x9700;&#x6709;&#x50CF;&#x7D20;&#x68AF;&#x5EA6;&#x800C;&#x4E0D;&#x5FC5;&#x662F;&#x89D2;&#x70B9;&#xFF08;&#x5BF9;&#x767D;&#x5899;&#x7B49;&#x5730;&#x65B9;&#x6709;&#x8F83;&#x597D;&#x6548;&#x679C;&#xFF09;</li><li>&#x53EF;&#x7A20;&#x5BC6;&#x6216;&#x534A;&#x7A20;&#x5BC6;</li></ul><h3 id="&#x7F3A;&#x70B9;"><a href="#&#x7F3A;&#x70B9;" class="headerlink" title="&#x7F3A;&#x70B9;"></a>&#x7F3A;&#x70B9;</h3><ul><li>&#x7070;&#x5EA6;&#x4E0D;&#x53D8;&#x96BE;&#x4EE5;&#x6EE1;&#x8DB3;&#xFF08;&#x6613;&#x53D7;&#x66DD;&#x5149;&#x548C;&#x6A21;&#x7CCA;&#x5F71;&#x54CD;&#xFF09;</li><li>&#x5355;&#x50CF;&#x7D20;&#x533A;&#x5206;&#x6027;&#x5DEE;</li><li>&#x56FE;&#x50CF;&#x975E;&#x51F8;&#x6027;</li></ul><h1 id="SLAM"><a href="#SLAM" class="headerlink" title="SLAM"></a>SLAM</h1><h2 id="SLAM&#x6982;&#x5FF5;"><a href="#SLAM&#x6982;&#x5FF5;" class="headerlink" title="SLAM&#x6982;&#x5FF5;"></a>SLAM&#x6982;&#x5FF5;</h2><p>&#x673A;&#x5668;&#x4EBA;&#x5728;&#x4E00;&#x4E2A;&#x672A;&#x77E5;&#x73AF;&#x5883;&#x4E2D;&#x4ECE;&#x4E00;&#x4E2A;&#x672A;&#x77E5;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x79FB;&#x52A8;&#xFF0C;&#x5728;&#x79FB;&#x52A8;&#x8FC7;&#x7A0B;&#x4E2D;&#x6839;&#x636E;&#x4F4D;&#x7F6E;&#x4F30;&#x8BA1;&#x548C;&#x5730;&#x56FE;&#x8FDB;&#x884C;&#x81EA;&#x8EAB;&#x5B9A;&#x4F4D;&#xFF0C;&#x540C;&#x65F6;&#x5728;&#x81EA;&#x8EAB;&#x5B9A;&#x4F4D;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5EFA;&#x9020;&#x589E;&#x91CF;&#x5F0F;&#x5730;&#x56FE;&#xFF0C;&#x5B9E;&#x73B0;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x81EA;&#x4E3B;&#x5B9A;&#x4F4D;&#x548C;&#x5BFC;&#x822A;&#x3002;</p><h2 id="SLAM&#x6982;&#x89C8;"><a href="#SLAM&#x6982;&#x89C8;" class="headerlink" title="SLAM&#x6982;&#x89C8;"></a>SLAM&#x6982;&#x89C8;</h2><p><img src="/posts/1d9c933b/SLAM&#x6982;&#x89C8;&#x82F1;&#x6587;.jpg" alt=""><br><img src="/posts/1d9c933b/SLAM&#x6982;&#x89C8;&#x4E2D;&#x6587;.jpg" alt=""></p><h2 id="&#x89C6;&#x89C9;SLAM&#x6D41;&#x7A0B;"><a href="#&#x89C6;&#x89C9;SLAM&#x6D41;&#x7A0B;" class="headerlink" title="&#x89C6;&#x89C9;SLAM&#x6D41;&#x7A0B;"></a>&#x89C6;&#x89C9;SLAM&#x6D41;&#x7A0B;</h2><ol><li>&#x4F20;&#x611F;&#x5668;&#x4FE1;&#x606F;&#x8BFB;&#x53D6;&#x3002;&#x5728;&#x89C6;&#x89C9; SLAM &#x4E2D;&#x4E3B;&#x8981;&#x4E3A;&#x76F8;&#x673A;&#x56FE;&#x50CF;&#x4FE1;&#x606F;&#x7684;&#x8BFB;&#x53D6;&#x548C;&#x9884;&#x5904;&#x7406;&#x3002;&#x5982;&#x679C;&#x5728;&#x673A;&#x5668;&#x4EBA;&#x4E2D;&#xFF0C;&#x8FD8;&#x53EF;&#x80FD;&#x6709;&#x7801;&#x76D8;&#x3001;&#x60EF;&#x6027;&#x4F20;&#x611F;&#x5668;&#x7B49;&#x4FE1;&#x606F;&#x7684;&#x8BFB;&#x53D6;&#x548C;&#x540C;&#x6B65;&#x3002;</li><li>&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1; (Visual Odometry, VO)&#x3002;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x4EFB;&#x52A1;&#x662F;&#x4F30;&#x7B97;&#x76F8;&#x90BB;&#x56FE;&#x50CF;&#x95F4;&#x76F8;&#x673A;&#x7684;&#x8FD0;&#x52A8;&#xFF0C;&#x4EE5;&#x53CA;&#x5C40;&#x90E8;&#x5730;&#x56FE;&#x7684;&#x6837;&#x5B50;&#x3002; VO &#x53C8;&#x79F0;&#x4E3A;&#x524D;&#x7AEF;&#xFF08;Front End&#xFF09;&#x3002;</li><li>&#x540E;&#x7AEF;&#x4F18;&#x5316;&#xFF08;Optimization&#xFF09;&#x3002;&#x540E;&#x7AEF;&#x63A5;&#x53D7;&#x4E0D;&#x540C;&#x65F6;&#x523B;&#x89C6;&#x89C9;&#x91CC;&#x7A0B;&#x8BA1;&#x6D4B;&#x91CF;&#x7684;&#x76F8;&#x673A;&#x4F4D;&#x59FF;&#xFF0C;&#x4EE5;&#x53CA;&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5BF9;&#x5B83;&#x4EEC;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#xFF0C;&#x5F97;&#x5230;&#x5168;&#x5C40;&#x4E00;&#x81F4;&#x7684;&#x8F68;&#x8FF9;&#x548C;&#x5730;&#x56FE;&#x3002;&#x7531;&#x4E8E;&#x63A5;&#x5728; VO &#x4E4B;&#x540E;&#xFF0C;&#x53C8;&#x79F0;&#x4E3A;&#x540E;&#x7AEF;&#xFF08;Back End&#xFF09;&#x3002;</li><li>&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#xFF08;Loop Closing&#xFF09;&#x3002;&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#x5224;&#x65AD;&#x673A;&#x5668;&#x4EBA;&#x662F;&#x5426;&#x66FE;&#x7ECF;&#x5230;&#x8FBE;&#x8FC7;&#x5148;&#x524D;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x5982;&#x679C;&#x68C0;&#x6D4B;&#x5230;&#x56DE;&#x73AF;&#xFF0C;&#x5B83;&#x4F1A;&#x628A;&#x4FE1;&#x606F;&#x63D0;&#x4F9B;&#x7ED9;&#x540E;&#x7AEF;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;</li><li>&#x5EFA;&#x56FE;&#xFF08;Mapping&#xFF09;&#x3002;&#x5B83;&#x6839;&#x636E;&#x4F30;&#x8BA1;&#x7684;&#x8F68;&#x8FF9;&#xFF0C;&#x5EFA;&#x7ACB;&#x4E0E;&#x4EFB;&#x52A1;&#x8981;&#x6C42;&#x5BF9;&#x5E94;&#x7684;&#x5730;&#x56FE;&#x3002;</li></ol><p>&#x4EE5;&#x4E0B;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;</p><h3 id="SLAM&#x5E38;&#x7528;&#x7684;&#x4F20;&#x611F;&#x5668;"><a href="#SLAM&#x5E38;&#x7528;&#x7684;&#x4F20;&#x611F;&#x5668;" class="headerlink" title="SLAM&#x5E38;&#x7528;&#x7684;&#x4F20;&#x611F;&#x5668;"></a>SLAM&#x5E38;&#x7528;&#x7684;&#x4F20;&#x611F;&#x5668;</h3><ul><li>&#x7EA2;&#x5916;&#x4F20;&#x611F;&#x5668;&#xFF1A;&#x8F83;&#x8FD1;&#x8DDD;&#x79BB;&#x611F;&#x5E94;&#xFF0C;&#x5E38;&#x7528;&#x4E8E;&#x626B;&#x5730;&#x673A;&#x5668;&#x4EBA;&#x3002;</li><li>&#x6FC0;&#x5149;&#x96F7;&#x8FBE;&#x3001;&#x6DF1;&#x5EA6;&#x4F20;&#x611F;&#x5668;&#x3002;</li><li>&#x6444;&#x50CF;&#x5934;&#xFF1A;&#x5355;&#x76EE;&#xFF0C;&#x53CC;&#x76EE;&#xFF0C;&#x591A;&#x76EE;&#x3002;</li><li>&#x60EF;&#x6027;&#x4F20;&#x611F;&#x5668;&#xFF1A;&#x82F1;&#x6587;&#x53EB;IMU&#xFF0C;&#x5305;&#x62EC;&#x9640;&#x87BA;&#x4EEA;&#x3001;&#x52A0;&#x901F;&#x5EA6;&#x8BA1;&#xFF0C;&#x662F;&#x667A;&#x80FD;&#x624B;&#x673A;&#x7684;&#x6807;&#x914D;&#x3002;</li></ul><h3 id="SLAM&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;"><a href="#SLAM&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;" class="headerlink" title="SLAM&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;"></a>SLAM&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;</h3><ul><li>&#x8BA1;&#x7B97;&#x81EA;&#x8EAB;&#x4F4D;&#x7F6E;&#xFF08;&#x5728;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x671D;&#x5411;&#xFF09;</li><li>&#x6784;&#x5EFA;&#x73AF;&#x5883;&#x5730;&#x56FE;&#xFF08;&#x7A00;&#x758F;&#x6216;&#x8005;&#x7A20;&#x5BC6;&#x7684;&#x4E09;&#x7EF4;&#x70B9;&#x4E91;&#xFF09;</li></ul><h3 id="&#x5730;&#x56FE;&#x8868;&#x793A;"><a href="#&#x5730;&#x56FE;&#x8868;&#x793A;" class="headerlink" title="&#x5730;&#x56FE;&#x8868;&#x793A;"></a>&#x5730;&#x56FE;&#x8868;&#x793A;</h3><ol><li>&#x6805;&#x683C;&#x5730;&#x56FE;&#xFF1A;&#x6BCF;&#x4E2A;&#x6805;&#x683C;&#x4EE5;&#x6982;&#x7387;&#x7684;&#x5F62;&#x5F0F;&#x8868;&#x793A;&#x3002;3D&#x7684;&#x6805;&#x683C;&#x5730;&#x56FE;&#x91C7;&#x7528;&#x516B;&#x53C9;&#x6811;&#x5B58;&#x50A8;&#x3002;&#x9002;&#x7528;&#x4E8E;&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x4E0E;&#x907F;&#x969C;&#x3002;</li><li>&#x7279;&#x5F81;&#x5730;&#x56FE;&#xFF1A;&#x5730;&#x56FE;&#x6BD4;&#x8F83;&#x7A00;&#x758F;&#x3002;&#x9002;&#x7528;&#x4E8E;&#x5B58;&#x5728;&#x8F83;&#x591A;&#x7279;&#x5F81;&#x7684;&#x573A;&#x666F;&#x3002;</li><li>&#x4F4D;&#x59FF;&#x56FE;&#xFF1A;&#x4EC5;&#x5305;&#x542B;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x4F4D;&#x59FF;&#x4FE1;&#x606F;&#xFF0C;&#x6709;&#x6548;&#x8868;&#x8FBE;&#x4F4D;&#x59FF;&#x4E4B;&#x95F4;&#x7684;&#x7EA6;&#x675F;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0E;&#x6805;&#x683C;&#x5730;&#x56FE;&#x548C;&#x7279;&#x5F81;&#x5730;&#x56FE;&#x7ED3;&#x5408;&#x3002;</li><li>&#x5176;&#x4ED6;&#x5730;&#x56FE;&#xFF1A;&#x7528;&#x4E8E;&#x573A;&#x666F;&#x6784;&#x5EFA;&#xFF0C;TSDF&#x3002;</li></ol><h2 id="&#x89C6;&#x89C9;SLAM&#x6846;&#x67B6;"><a href="#&#x89C6;&#x89C9;SLAM&#x6846;&#x67B6;" class="headerlink" title="&#x89C6;&#x89C9;SLAM&#x6846;&#x67B6;"></a>&#x89C6;&#x89C9;SLAM&#x6846;&#x67B6;</h2><p><img src="/posts/1d9c933b/&#x89C6;&#x89C9;SLAM&#x6846;&#x67B6;.jpg" alt=""></p><h2 id="&#x524D;&#x7AEF;&#x4E0E;&#x540E;&#x7AEF;"><a href="#&#x524D;&#x7AEF;&#x4E0E;&#x540E;&#x7AEF;" class="headerlink" title="&#x524D;&#x7AEF;&#x4E0E;&#x540E;&#x7AEF;"></a>&#x524D;&#x7AEF;&#x4E0E;&#x540E;&#x7AEF;</h2><p>&#x524D;&#x7AEF;</p><ul><li>&#x63D0;&#x53D6;&#x4F20;&#x611F;&#x5668;&#x91C7;&#x96C6;&#x7684;&#x6570;&#x636E;</li><li>&#x8FDB;&#x884C;&#x6570;&#x636E;&#x5173;&#x8054;</li></ul><p>&#x540E;&#x7AEF;</p><ul><li>&#x5BF9;&#x524D;&#x7AEF;&#x4EA7;&#x751F;&#x7684;&#x6A21;&#x578B;&#x8FDB;&#x884C;&#x53C2;&#x6570;&#x4F30;&#x8BA1;</li></ul><p>&#x524D;&#x7AEF;&#x7EBF;&#x7A0B;&#xFF1A;</p><ol><li>&#x8F93;&#x5165;&#x4F20;&#x611F;&#x5668;&#x6570;&#x636E;</li><li>SLAM&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x7279;&#x5F81;&#x8FFD;&#x8E2A;&#x4E0E;&#x4F4D;&#x59FF;&#x5B9E;&#x65F6;&#x6C42;&#x89E3;&#x3002;</li><li>&#x8F93;&#x51FA;&#x8BBE;&#x5907;&#x5B9E;&#x65F6;&#x4F4D;&#x59FF;&#x548C;&#x4E09;&#x7EF4;&#x70B9;&#x4E91;&#x3002;</li></ol><p>&#x540E;&#x7AEF;&#x7EBF;&#x7A0B;&#xFF1A;</p><ol><li>&#x8FDB;&#x884C;&#x5C40;&#x90E8;&#x6216;&#x5168;&#x5C40;&#x4F18;&#x5316;&#xFF0C;&#x51CF;&#x5C11;&#x8BEF;&#x5DEE;&#x79EF;&#x7D2F;&#x3002;</li><li>&#x573A;&#x666F;&#x56DE;&#x8DEF;&#x68C0;&#x6D4B;&#x3002;</li><li>&#x573A;&#x666F;&#x91CD;&#x5B9A;&#x4F4D;&#x3002;</li></ol><h2 id="&#x5730;&#x56FE;&#x8868;&#x793A;-1"><a href="#&#x5730;&#x56FE;&#x8868;&#x793A;-1" class="headerlink" title="&#x5730;&#x56FE;&#x8868;&#x793A;"></a>&#x5730;&#x56FE;&#x8868;&#x793A;</h2><ol><li>&#x6805;&#x683C;&#x5730;&#x56FE;<ul><li>&#x6BCF;&#x4E2A;&#x6805;&#x683C;&#x4EE5;&#x6982;&#x7387;&#x7684;&#x5F62;&#x5F0F;&#x8868;&#x793A;</li><li>3D&#x7684;&#x6805;&#x683C;&#x5730;&#x56FE;&#x91C7;&#x7528;&#x516B;&#x53C9;&#x6811;&#x5B58;&#x50A8;</li><li>&#x9002;&#x7528;&#x4E8E;&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x4E0E;&#x907F;&#x969C;</li></ul></li><li>&#x7279;&#x5F81;&#x5730;&#x56FE;<ul><li>&#x5730;&#x56FE;&#x6BD4;&#x8F83;&#x7A00;&#x758F;</li><li>&#x9002;&#x7528;&#x4E8E;&#x5B58;&#x5728;&#x8F83;&#x591A;&#x7279;&#x5F81;&#x7684;&#x573A;&#x666F;</li></ul></li><li>&#x4F4D;&#x59FF;&#x56FE;<ul><li>&#x4EC5;&#x5305;&#x542B;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x4F4D;&#x59FF;&#x4FE1;&#x606F;</li><li>&#x6709;&#x6548;&#x8868;&#x8FBE;&#x4F4D;&#x59FF;&#x4E4B;&#x95F4;&#x7684;&#x7EA6;&#x675F;</li><li>&#x53EF;&#x4EE5;&#x4E0E;&#x6805;&#x683C;&#x5730;&#x56FE;&#x548C;&#x7279;&#x5F81;&#x5730;&#x56FE;&#x7ED3;&#x5408;</li></ul></li><li>&#x5176;&#x4ED6;&#x5730;&#x56FE;<ul><li>&#x7528;&#x4E8E;&#x573A;&#x666F;&#x6784;&#x5EFA;</li><li>TSDF</li></ul></li></ol><h2 id="SLAM&#x524D;&#x7AEF;"><a href="#SLAM&#x524D;&#x7AEF;" class="headerlink" title="SLAM&#x524D;&#x7AEF;"></a>SLAM&#x524D;&#x7AEF;</h2><h2 id="&#x56DE;&#x73AF;&#x68C0;&#x6D4B;"><a href="#&#x56DE;&#x73AF;&#x68C0;&#x6D4B;" class="headerlink" title="&#x56DE;&#x73AF;&#x68C0;&#x6D4B;"></a>&#x56DE;&#x73AF;&#x68C0;&#x6D4B;</h2><h3 id="&#x65B9;&#x6CD5;"><a href="#&#x65B9;&#x6CD5;" class="headerlink" title="&#x65B9;&#x6CD5;"></a>&#x65B9;&#x6CD5;</h3><ul><li>&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x5BF9;&#x4EFB;&#x610F;&#x4E24;&#x4E2A;&#x5173;&#x952E;&#x5E27;&#x8FDB;&#x884C;&#x7279;&#x5F81;&#x5339;&#x914D;&#x3002;  </li><li>&#x57FA;&#x4E8E;&#x91CC;&#x7A0B;&#x8BA1;&#x7684;&#x65B9;&#x6CD5;&#x3002;</li><li>&#x57FA;&#x4E8E;&#x5916;&#x89C2;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x4E3B;&#x6D41;&#xFF0C;&#x6838;&#x5FC3;&#x5728;&#x4E8E;&#x8861;&#x91CF;&#x56FE;&#x50CF;&#x95F4;&#x7684;&#x76F8;&#x4F3C;&#x6027;&#x3002; </li></ul><h3 id="&#x8BC4;&#x4EF7;&#x6307;&#x6807;"><a href="#&#x8BC4;&#x4EF7;&#x6307;&#x6807;" class="headerlink" title="&#x8BC4;&#x4EF7;&#x6307;&#x6807;"></a>&#x8BC4;&#x4EF7;&#x6307;&#x6807;</h3><p>ROC&#x66F2;&#x7EBF;&#x3002;<br>&#x7CBE;&#x5EA6;&#xFF1A;&#x6B63;&#x786E;&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#x5360;&#x603B;&#x68C0;&#x6D4B;&#x56DE;&#x73AF;&#x6570;&#x76EE;&#x7684;&#x6BD4;&#x7387;<br>&#x53EC;&#x56DE;&#xFF1A;&#x6B63;&#x786E;&#x56DE;&#x73AF;&#x68C0;&#x6D4B;&#x5360;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x603B;&#x56DE;&#x73AF;&#x7684;&#x6BD4;&#x7387; </p><h3 id="&#x8BCD;&#x888B;&#x6A21;&#x578B;"><a href="#&#x8BCD;&#x888B;&#x6A21;&#x578B;" class="headerlink" title="&#x8BCD;&#x888B;&#x6A21;&#x578B;"></a>&#x8BCD;&#x888B;&#x6A21;&#x578B;</h3><p>Apperance-based&#x4E3B;&#x8981;&#x65B9;&#x6CD5;&#xFF1A;&#x8BCD;&#x888B;&#x3002;Bag of Words</p><p>BoW&#x662F;&#x5BF9;&#x7279;&#x5F81;&#x7684;&#x805A;&#x7C7B;&#xFF1A;</p><ul><li>&#x7279;&#x5F81;&#x805A;&#x7C7B;&#x5F62;&#x6210;&#x4E86;Word</li><li>&#x8BB8;&#x591A;Word&#x7EC4;&#x6210;&#x4E86;Dictionary</li><li>&#x56FE;&#x50CF;&#x7684;&#x76F8;&#x4F3C;&#x6027;=Word&#x7684;&#x76F8;&#x4F3C;&#x6027;</li><li>&#x53EA;&#x770B;Word&#x7684;&#x6709;&#x65E0;&#xFF0C;&#x65E0;&#x89C6;Word&#x7684;&#x987A;&#x5E8F;</li></ul><p>&#x64CD;&#x4F5C;&#x65B9;&#x6CD5;&#xFF1A;</p><ol><li>&#x9006;&#x5E8F;&#x7D22;&#x5F15;&#x5355;&#x8BCD;&#x6DB5;&#x76D6;&#x4E86;&#x6240;&#x6709;&#x51FA;&#x73B0;&#x7684;&#x5355;&#x8BCD; </li><li>&#x6BCF;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#x6307;&#x5411;&#x5305;&#x542B;&#x5B83;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x56FE;&#x50CF;</li><li>&#x91C7;&#x7528;&#x6295;&#x7968;&#x673A;&#x5236;&#x9009;&#x53D6;&#x5019;&#x9009;&#x8005;&#xFF0C;&#x52A0;&#x901F;&#x641C;&#x7D22;</li></ol><h3 id="&#x56FE;&#x50CF;-gt-BoW&#x5411;&#x91CF;"><a href="#&#x56FE;&#x50CF;-gt-BoW&#x5411;&#x91CF;" class="headerlink" title="&#x56FE;&#x50CF;-&gt;BoW&#x5411;&#x91CF;"></a>&#x56FE;&#x50CF;-&gt;BoW&#x5411;&#x91CF;</h3><ol><li>&#x8F93;&#x5165;&#x4E00;&#x5F20;&#x56FE;&#x50CF;I&#xFF0C;&#x8FDB;&#x884C;&#x7279;&#x5F81;&#x68C0;&#x6D4B;&#x4E0E;&#x7279;&#x5F81;&#x63CF;&#x8FF0;&#xFF0C;&#x7279;&#x5F81;&#x70B9;&#x6570;&#x91CF;&#x6700;&#x591A;&#x4E0D;&#x8D85;&#x8FC7;&#x7EA6;&#x5B9A;&#x503C;&#x3002;</li><li>&#x5C06;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x901A;&#x8FC7;&#x6811;&#x5F62;&#x7ED3;&#x6784;&#x7684;&#x5B57;&#x5178;&#xFF0C;&#x5F97;&#x5230;BoW&#x5411;&#x91CF;v&#xFF0C;&#x8BE5;&#x5411;&#x91CF;&#x7684;&#x7EF4;&#x5EA6;&#x4E3A;&#x7279;&#x5F81;&#x6570;&#x91CF;</li></ol><h2 id="&#x5E38;&#x7528;&#x5F00;&#x6E90;SLAM&#x7CFB;&#x7EDF;"><a href="#&#x5E38;&#x7528;&#x5F00;&#x6E90;SLAM&#x7CFB;&#x7EDF;" class="headerlink" title="&#x5E38;&#x7528;&#x5F00;&#x6E90;SLAM&#x7CFB;&#x7EDF;"></a>&#x5E38;&#x7528;&#x5F00;&#x6E90;SLAM&#x7CFB;&#x7EDF;</h2><ol><li>PTAM</li><li>ORB-SLAM</li><li>LSD-SLAM</li><li>DSO</li><li>SVO</li><li>RDSLAM</li><li>PKSLAM</li></ol><h2 id="ORB-SLAM&#x5206;&#x6790;"><a href="#ORB-SLAM&#x5206;&#x6790;" class="headerlink" title="ORB-SLAM&#x5206;&#x6790;"></a>ORB-SLAM&#x5206;&#x6790;</h2><p><img src="/posts/1d9c933b/ORB-SLAM&#x57FA;&#x672C;&#x7A0B;&#x5E8F;&#x6846;&#x67B6;.jpg" alt=""><br>&#x4E09;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF1A;Tracking&#x3001;Local Mapping&#x3001;Loop Closing</p><p>&#x7279;&#x70B9;&#xFF1A;&#x57FA;&#x672C;&#x5EF6;&#x7EED;&#x4E86;PTAM&#x7684;&#x7B97;&#x6CD5;&#x6846;&#x67B6;&#xFF0C;&#x4F46;&#x5BF9;&#x6846;&#x67B6;&#x4E2D;&#x7684;&#x5927;&#x90E8;&#x5206;&#x7EC4;&#x4EF6;&#x90FD;&#x505A;&#x4E86;&#x6539;&#x8FDB;&#xFF1A;</p><ul><li>&#x9009;&#x7528;ORB&#x7279;&#x5F81;&#xFF0C;&#x5339;&#x914D;&#x548C;&#x91CD;&#x5B9A;&#x4F4D;&#x6027;&#x80FD;&#x66F4;&#x597D;&#x3002;</li><li>&#x52A0;&#x5165;&#x4E86;&#x5FAA;&#x73AF;&#x8D3F;&#x8D42;&#x7684;&#x68C0;&#x6D4B;&#x548C;&#x95ED;&#x5408;&#x673A;&#x5236;&#xFF0C;&#x4EE5;&#x6D88;&#x9664;&#x8BEF;&#x5DEE;&#x79EF;&#x7D2F;&#x3002;</li><li>&#x901A;&#x8FC7;&#x68C0;&#x6D4B;&#x89C6;&#x5DEE;&#x6765;&#x81EA;&#x52A8;&#x9009;&#x62E9;&#x521D;&#x59CB;&#x5316;&#x7684;&#x4E24;&#x5E27;&#x3002;</li><li>&#x91C7;&#x7528;&#x4E00;&#x79CD;&#x66F4;&#x9C81;&#x68D2;&#x7684;&#x5173;&#x952E;&#x5E27;&#x548C;&#x4E09;&#x7EF4;&#x70B9;&#x7684;&#x9009;&#x62E9;&#x673A;&#x5236;&#x3002;</li></ul><hr><h1 id="&#x8DEF;&#x5F84;&#x89C4;&#x5212;"><a href="#&#x8DEF;&#x5F84;&#x89C4;&#x5212;" class="headerlink" title="&#x8DEF;&#x5F84;&#x89C4;&#x5212;"></a>&#x8DEF;&#x5F84;&#x89C4;&#x5212;</h1><h2 id="&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x6982;&#x5FF5;"><a href="#&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x6982;&#x5FF5;" class="headerlink" title="&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x6982;&#x5FF5;"></a>&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x6982;&#x5FF5;</h2><p>&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x6280;&#x672F;&#x662F;&#x673A;&#x5668;&#x4EBA;&#x7814;&#x7A76;&#x9886;&#x57DF;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x5206;&#x652F;&#x3002;&#x6240;&#x8C13;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x6700;&#x4F18;&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x95EE;&#x9898;,&#x5C31;&#x662F;&#x4F9D;&#x636E;&#x67D0;&#x4E2A;&#x6216;&#x67D0;&#x4E9B;&#x4F18;&#x5316;&#x51C6;&#x5219;(&#x5982;&#x5DE5;&#x4F5C;&#x4EE3;&#x4EF7;&#x6700;&#x5C0F;&#x3001;&#x884C;&#x8D70;&#x8DEF;&#x7EBF;&#x6700;&#x77ED;&#x3001;&#x884C;&#x8D70;&#x65F6;&#x95F4;&#x6700;&#x77ED;&#x7B49;),&#x5728;&#x5176;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x4E2D;&#x627E;&#x5230;&#x4E00;&#x6761;&#x4ECE;&#x8D77;&#x59CB;&#x72B6;&#x6001;&#x5230;&#x76EE;&#x6807;&#x72B6;&#x6001;&#x7684;&#x80FD;&#x907F;&#x5F00;&#x969C;&#x788D;&#x7269;&#x7684;&#x6700;&#x4F18;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x4F9D;&#x636E;&#x67D0;&#x79CD;&#x6700;&#x4F18;&#x51C6;&#x5219;&#xFF0C;&#x5728;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x4E2D;&#x5BFB;&#x627E;&#x4E00;&#x6761;&#x4ECE;&#x8D77;&#x59CB;&#x72B6;&#x6001;&#x5230;&#x76EE;&#x6807;&#x72B6;&#x6001;&#x7684;&#x907F;&#x5F00;&#x969C;&#x788D;&#x7269;&#x7684;&#x6700;&#x4F18;&#x8DEF;&#x5F84;&#xFF0C;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#xFF1A;</p><ol><li>&#x59CB;&#x4E8E;&#x521D;&#x59CB;&#x70B9;&#x6B62;&#x4E8E;&#x76EE;&#x6807;&#x70B9;&#x3002;</li><li>&#x907F;&#x969C;&#x3002;</li><li>&#x5C3D;&#x53EF;&#x80FD;&#x4F18;&#x5316;&#x7684;&#x8DEF;&#x5F84;&#x3002;</li></ol><h2 id="&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x5206;&#x7C7B;"><a href="#&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x5206;&#x7C7B;" class="headerlink" title="&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x5206;&#x7C7B;"></a>&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7684;&#x5206;&#x7C7B;</h2><p>&#x6839;&#x636E;&#x73AF;&#x5883;&#x7279;&#x70B9;&#xFF0C;&#x53EF;&#x5206;&#x4E3A;</p><ol><li>&#x9759;&#x6001;&#x7ED3;&#x6784;&#x5316;&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x8DEF;&#x5F84;&#x89C4;&#x5212;</li><li>&#x52A8;&#x6001;&#x5DF2;&#x77E5;&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x8DEF;&#x5F84;&#x89C4;&#x5212;</li><li>&#x52A8;&#x6001;&#x4E0D;&#x786E;&#x5B9A;(&#x5C40;&#x90E8;)&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x8DEF;&#x5F84;&#x89C4;&#x5212;</li></ol><p><img src="/posts/1d9c933b/&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x5206;&#x7C7B;1.jpg" alt=""><br><img src="/posts/1d9c933b/&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x5206;&#x7C7B;2.jpg" alt=""></p><h2 id="&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7B97;&#x6CD5;"><a href="#&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7B97;&#x6CD5;" class="headerlink" title="&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7B97;&#x6CD5;"></a>&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7B97;&#x6CD5;</h2><ol><li>&#x8FEA;&#x6770;&#x65AF;&#x7279;&#x62C9;&#x7B97;&#x6CD5;</li><li>&#x6700;&#x4F73;&#x4F18;&#x5148;&#x641C;&#x7D22;BFS&#x7B97;&#x6CD5;</li><li>$A^*$&#x7B97;&#x6CD5;&#xFF1A;Dijkstra + BFS &#x7B97;&#x6CD5;</li></ol><h2 id="&#x5404;&#x79CD;&#x8DDD;&#x79BB;"><a href="#&#x5404;&#x79CD;&#x8DDD;&#x79BB;" class="headerlink" title="&#x5404;&#x79CD;&#x8DDD;&#x79BB;"></a>&#x5404;&#x79CD;&#x8DDD;&#x79BB;</h2><h3 id="&#x66FC;&#x54C8;&#x987F;&#x4E3E;&#x4F8B;-&#x51FA;&#x79DF;&#x8F66;&#x8DDD;&#x79BB;"><a href="#&#x66FC;&#x54C8;&#x987F;&#x4E3E;&#x4F8B;-&#x51FA;&#x79DF;&#x8F66;&#x8DDD;&#x79BB;" class="headerlink" title="&#x66FC;&#x54C8;&#x987F;&#x4E3E;&#x4F8B;/&#x51FA;&#x79DF;&#x8F66;&#x8DDD;&#x79BB;"></a>&#x66FC;&#x54C8;&#x987F;&#x4E3E;&#x4F8B;/&#x51FA;&#x79DF;&#x8F66;&#x8DDD;&#x79BB;</h3><p>&#x4E24;&#x70B9;x&#x8F74;&#x5750;&#x6807;&#x5DEE;&#x52A0;&#x4E0A;y&#x8F74;&#x5750;&#x6807;&#x7684;&#x5DEE;&#xFF0C;&#x4E58;&#x4EE5;&#x5355;&#x4F4D;&#x957F;&#x5EA6;&#x3002;&#x5373;&#xFF1A;<br>[abs(node.x - goal.x)+abs(node.y - goal.y)]*D  </p><h3 id="&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;"><a href="#&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;" class="headerlink" title="&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;"></a>&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;</h3><p>&#x5982;&#x679C;&#x5730;&#x56FE;&#x5141;&#x8BB8;&#x5BF9;&#x89D2;&#x8FD0;&#x52A8;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x53E6;&#x4E00;&#x79CD;&#x542F;&#x53D1;&#x51FD;&#x6570;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">heuristic</span><span class="params">(node)</span> </span>=</span><br><span class="line">    dx = <span class="built_in">abs</span>(node.x - goal.x)</span><br><span class="line">    dy = <span class="built_in">abs</span>(node.y - goal.y)</span><br><span class="line"><span class="keyword">return</span> D * (dx + dy) + (D2 - <span class="number">2</span> * D) * min(dx, dy)</span><br></pre></td></tr></table></figure></p><p><img src="/posts/1d9c933b/&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;.jpg" alt=""></p><h3 id="&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x8DDD;&#x79BB;"><a href="#&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x8DDD;&#x79BB;" class="headerlink" title="&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x8DDD;&#x79BB;"></a>&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x8DDD;&#x79BB;</h3><p>&#x76F8;&#x6BD4;&#x4E8E;&#x5BF9;&#x89D2;&#x7EBF;&#x8DDD;&#x79BB;&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x641C;&#x7D22;&#x7A7A;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x6709;&#x591A;&#x6761;&#x8DDD;&#x79BB;&#x76F8;&#x7B49;&#x7684;&#x8DEF;&#x5F84;&#x3002;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">heuristic</span><span class="params">(node)</span> </span>=</span><br><span class="line">    dx = <span class="built_in">abs</span>(node.x - goal.x)</span><br><span class="line">    dy = <span class="built_in">abs</span>(node.y - goal.y)</span><br><span class="line">    <span class="keyword">return</span> D * <span class="built_in">sqrt</span>(dx * dx + dy * dy)</span><br></pre></td></tr></table></figure></p><p><img src="/posts/1d9c933b/&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x8DDD;&#x79BB;.jpg" alt=""></p><h2 id="&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;"><a href="#&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;" class="headerlink" title="&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;"></a>&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;</h2><p>&#x57FA;&#x4E8E;&#x56FE;&#x641C;&#x7D22;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x968F;&#x673A;&#x8DEF;&#x56FE;&#xFF08;Probabilistic Road Maps&#xFF0C;PRM&#xFF09;&#x5C31;&#x662F;&#x5728;&#x89C4;&#x5212;&#x7A7A;&#x95F4;&#x5185;&#x968F;&#x673A;&#x9009;&#x53D6;N&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x4E4B;&#x540E;&#x8FDE;&#x63A5;&#x5404;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x53BB;&#x9664;&#x4E0E;&#x969C;&#x788D;&#x7269;&#x63A5;&#x89E6;&#x7684;&#x8FDE;&#x7EBF;&#xFF0C;&#x7531;&#x6B64;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x3002;</p><p>PRM&#x662F;&#x7531;&#x5728;&#x8282;&#x70B9;&#x5904;&#x76F8;&#x8FDE;&#x7684;&#x7B80;&#x5355;&#x66F2;&#x7EBF;&#x6BB5;&#x6216;&#x8005;&#x5F27;&#x7EBF;&#x6BB5;&#x7EC4;&#x6210;&#x7684;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#x3002;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x4F4D;&#x5F62;&#x3002;&#x4E24;&#x4E2A;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x6BCF;&#x4E2A;&#x5F27;&#x7EBF;&#x6BB5;&#x5BF9;&#x5E94;&#x4E24;&#x4E2A;&#x4F4D;&#x5F62;&#x4E4B;&#x95F4;&#x7684;&#x65E0;&#x78B0;&#x649E;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x57FA;&#x4E8E;&#x56FE;&#x641C;&#x7D22;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x968F;&#x673A;&#x8DEF;&#x56FE;&#xFF08;Probabilistic Road Maps&#xFF0C;PRM&#xFF09;&#x5C31;&#x662F;&#x5728;&#x89C4;&#x5212;&#x7A7A;&#x95F4;&#x5185;&#x968F;&#x673A;&#x9009;&#x53D6;N&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x4E4B;&#x540E;&#x8FDE;&#x63A5;&#x5404;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x53BB;&#x9664;&#x4E0E;&#x969C;&#x788D;&#x7269;&#x63A5;&#x89E6;&#x7684;&#x8FDE;&#x7EBF;&#xFF0C;&#x7531;&#x6B64;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x3002;&#x663E;&#x7136;&#xFF0C;&#x5F53;&#x91C7;&#x6837;&#x70B9;&#x592A;&#x5C11;&#xFF0C;&#x6216;&#x8005;&#x5206;&#x5E03;&#x4E0D;&#x5408;&#x7406;&#x65F6;&#xFF0C;PRM&#x7B97;&#x6CD5;&#x662F;&#x4E0D;&#x5B8C;&#x5907;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x968F;&#x7740;&#x91C7;&#x7528;&#x70B9;&#x7684;&#x589E;&#x52A0;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x5B8C;&#x5907;&#x3002;&#x6240;&#x4EE5;PRM&#x662F;&#x6982;&#x7387;&#x5B8C;&#x5907;&#x4E14;&#x4E0D;&#x6700;&#x4F18;&#x7684;&#x3002;</p><p>&#x6982;&#x7387;&#x89C4;&#x5212;&#x5C5E;&#x4E8E;&#x79BB;&#x7EBF;&#x89C4;&#x5212;&#xFF0C;&#x5B83;&#x4EEC;&#x9700;&#x8981;&#x9884;&#x5148;&#x77E5;&#x9053;&#x5173;&#x4E8E;&#x673A;&#x5668;&#x4EBA;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x4E2D;&#x969C;&#x788D;&#x7269;&#x7684;&#x51E0;&#x4F55;&#x5F62;&#x72B6;&#x548C;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x3002;</p><p>&#x6982;&#x7387;&#x89C4;&#x5212;&#x662F;&#x4E00;&#x7C7B;&#x975E;&#x5E38;&#x9AD8;&#x6548;&#x5730;&#x89C4;&#x5212;&#x65B9;&#x6CD5;,&#x5C5E;&#x4E8E;&#x57FA;&#x4E8E;&#x62BD;&#x6837;&#xFF08;Sampling-based&#xFF09;&#x65B9;&#x6CD5;&#x65CF;&#x3002;</p><p>&#x57FA;&#x672C;&#x601D;&#x60F3;&#xFF1A;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&#x80FD;&#x5145;&#x5206;&#x8868;&#x793A; Qfree &#x8FDE;&#x901A;&#x6027;&#x7684;&#x6709;&#x9650;&#x907F;&#x78B0;&#x4F4D;&#x5F62;&#x96C6;&#x5408;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x8BE5;&#x96C6;&#x5408;&#x5EFA;&#x7ACB;&#x7528;&#x4E8E;&#x89E3;&#x51B3;&#x8FD0;&#x52A8;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x7684;&#x8DEF;&#x5F84;&#x56FE;&#x3002;</p><h3 id="&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;"><a href="#&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;" class="headerlink" title="&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;"></a>&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;</h3><p>&#x673A;&#x5668;&#x4EBA;&#x4E0A;&#x5404;&#x70B9;&#x4F4D;&#x7F6E;&#x7684;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x89C4;&#x8303;&#x88AB;&#x79F0;&#x4E3A;<strong>&#x4F4D;&#x5F62;</strong>&#xFF08;Configuration&#xFF09;&#xFF0C;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x4F4D;&#x5F62;&#x7EC4;&#x5408;&#x7684;&#x96C6;&#x5408;&#x88AB;&#x79F0;&#x4E3A;&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;&#x3002;</p><p>&#x7528; Q &#x6765;&#x8868;&#x793A;&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;&#xFF0C;&#x7528; W &#x8868;&#x793A;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#xFF0C; &#x7528; Oi &#x8868;&#x793A;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x969C;&#x788D;&#x7269;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528; A &#x6765;&#x8868;&#x793A;&#x673A;&#x5668;&#x4EBA;&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x5904;&#x4E8E;&#x4F4D;&#x5F62; q &#x7684;&#x673A;&#x5668;&#x4EBA;&#x6240;&#x5360;&#x636E;&#x7684;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x53EF;&#x88AB;&#x8868;&#x793A;&#x4E3A; A(q) &#x3002;&#x4F1A;&#x4E0E;&#x969C;&#x788D;&#x7269;&#x78B0;&#x649E;&#x7684;&#x6240;&#x6709;&#x4F4D;&#x5F62;&#x6240;&#x7EC4;&#x6210;&#x7684;&#x96C6;&#x5408;&#x6210;&#x4E3A;&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;&#x969C;&#x788D;&#xFF08;Configuration Space Obstacle&#xFF09;&#xFF0C;&#x5176;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;<br>$$<br>QO={q&#x2208;Q|A(q)&#x2229;O&#x2260;&#x2205;}<br>$$<br>&#x5176;&#x4E2D;<br>$$<br>O=&#x222A;O_i<br>$$<br>&#x90A3;&#x4E48;&#xFF0C;&#x65E0;&#x78B0;&#x649E;&#x4F4D;&#x5F62;&#x7684;&#x96C6;&#x5408;&#x53EF;&#x8868;&#x793A;&#x4E3A;&#x4E0B;&#x9762;&#x7684;&#x5DEE;&#x96C6;<br>$$<br>Q_{free}=Q\QO<br>$$<br>&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x662F;&#x5BFB;&#x627E;&#x4E00;&#x6761;&#x4ECE;&#x521D;&#x59CB;&#x4F4D;&#x5F62; qs &#x5230;&#x6700;&#x7EC8;&#x4F4D;&#x5F62; qf &#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x4F7F;&#x5F97;&#x673A;&#x5668;&#x4EBA;&#x5728;&#x901A;&#x8FC7;&#x8DEF;&#x5F84;&#x65F6;&#x4E0D;&#x4E0E;&#x4EFB;&#x4F55;&#x969C;&#x788D;&#x7269;&#x53D1;&#x751F;&#x78B0;&#x649E;.</p><h2 id="&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;-1"><a href="#&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;-1" class="headerlink" title="&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;"></a>&#x968F;&#x673A;&#x8DEF;&#x56FE;&#x6CD5;</h2><ol><li><strong>&#x91C7;&#x6837;</strong>&#xFF1A;&#x751F;&#x6210;&#x4E00;&#x7EC4;&#x968F;&#x673A;&#x4F4D;&#x5F62;&#x4F5C;&#x4E3A;&#x8DEF;&#x7EBF;&#x56FE;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x3002;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x5BF9;&#x4F4D;&#x5F62;&#x7A7A;&#x95F4;&#x91C7;&#x7528;&#x5747;&#x5300;&#x968F;&#x673A;&#x91C7;&#x6837;&#xFF0C;&#x7136;&#x540E;&#x4E22;&#x5F03; QO &#x5185;&#x90E8;&#x70B9;&#x4F4D;&#x5F62;&#x6837;&#x672C;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;&#x662F;&#xFF1A;Qfree &#x4E2D;&#x4EFB;&#x4F55;&#x7279;&#x5B9A;&#x533A;&#x57DF;&#x7684;&#x6837;&#x672C;&#x6570;&#x76EE;&#x4E0E;&#x8BE5;&#x533A;&#x57DF;&#x7684;&#x4F53;&#x79EF;&#x6210;&#x6B63;&#x6BD4;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x592A;&#x53EF;&#x80FD;&#x5728;&#x72ED;&#x7A84;&#x7684;&#x901A;&#x9053;&#x5185;&#x8FDB;&#x884C;&#x3002;&#x8FD9;&#x88AB;&#x79F0;&#x4E3A;&#x72ED;&#x7A84;&#x901A;&#x9053;&#x95EE;&#x9898;&#xFF08;Narrow Passage Problem&#xFF09;&#x3002;</li><li><strong>&#x8FDE;&#x63A5;</strong>&#xFF1A;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x5C40;&#x90E8;&#x8DEF;&#x5F84;&#x89C4;&#x5212;&#x7B97;&#x6CD5;&#xFF0C;&#x6765;&#x751F;&#x6210;&#x8FDE;&#x63A5;&#x4F4D;&#x5F62;&#x5BF9;&#x7684;&#x8DEF;&#x5F84;&#x3002;&#x5178;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x5C1D;&#x8BD5;&#x628A;&#x5404;&#x4E2A;&#x8282;&#x70B9;&#x4E0E;&#x5176; k &#x4E2A;&#x6700;&#x8FD1;&#x90BB;&#x8282;&#x70B9;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;</li><li><strong>&#x589E;&#x5F3A;</strong>&#xFF1A;&#x52A0;&#x5165;&#x65B0;&#x7684;&#x8282;&#x70B9;&#x548C;&#x5F27;&#x7EBF;&#xFF0C;&#x628A;&#x8DEF;&#x7EBF;&#x56FE;&#x4E2D;&#x4E0D;&#x76F8;&#x8FDE;&#x7684;&#x5143;&#x7D20;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;&#x589E;&#x5F3A;&#x7684;&#x76EE;&#x6807;&#x662F;&#x6700;&#x5927;&#x7A0B;&#x5EA6;&#x5730;&#x628A;&#x4E0D;&#x76F8;&#x4EA4;&#x7684;&#x5355;&#x5143;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;&#x4E00;&#x79CD;&#x589E;&#x5F3A;&#x65B9;&#x6CD5;&#x662F;&#xFF1A;&#x5C06;&#x4E24;&#x4E2A;&#x4E0D;&#x76F8;&#x4EA4;&#x5355;&#x5143;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF0C;&#x91C7;&#x7528;&#x8F83;&#x590D;&#x6742;&#x7684;&#x89C4;&#x5212;&#x7B97;&#x6CD5;&#x3002;&#x53E6;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x662F;&#xFF1A;&#x5C06;&#x66F4;&#x591A;&#x968F;&#x673A;&#x8282;&#x70B9;&#x6DFB;&#x52A0;&#x5230;&#x8DEF;&#x7EBF;&#x56FE;&#x4E2D;&#x3002;</li></ol><p><img src="/posts/1d9c933b/&#x6982;&#x7387;&#x89C4;&#x5212;&#x56FE;.jpg" alt=""><br>PRM&#x65B9;&#x6CD5;&#x4E0D;&#x5229;&#x7684;&#x4E00;&#x9762;&#x5728;&#x4E8E;&#x5B83;&#x53EA;&#x662F;&#x6982;&#x7387;&#x5B8C;&#x5168;&#xFF08;Probabilistically Complete&#xFF09;&#x7684;&#xFF0C;&#x5373;&#x5F53;&#x6C42;&#x89E3;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x7684;&#x8BA1;&#x7B97;&#x65F6;&#x95F4;&#x8D8B;&#x4E8E;&#x65E0;&#x7A77;&#x5927;&#x65F6;&#xFF0C;&#x6C42;&#x5F97;&#x4E00;&#x4E2A;&#x89E3;&#xFF08;&#x5982;&#x679C;&#x5B58;&#x5728;&#xFF09;&#x7684;&#x6982;&#x7387;&#x8D8B;&#x4E8E;1&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#xFF1A;&#x5982;&#x679C;&#x95EE;&#x9898;&#x65E0;&#x89E3;&#xFF0C;&#x7B97;&#x6CD5;&#x8FD0;&#x884C;&#x65F6;&#x95F4;&#x4E0D;&#x786E;&#x5B9A;&#xFF0C;&#x9700;&#x8981;&#x52A0;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x8FED;&#x4EE3;&#x6B21;&#x6570;&#x4EE5;&#x4FDD;&#x8BC1;&#x7B97;&#x6CD5;&#x7EC8;&#x6B62;&#x3002;</p><h2 id="&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x968F;&#x673A;&#x6811;&#xFF08;&#xFF08;Rapidly-Exploring-Random-Tree-RRT&#xFF09;&#xFF09;"><a href="#&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x968F;&#x673A;&#x6811;&#xFF08;&#xFF08;Rapidly-Exploring-Random-Tree-RRT&#xFF09;&#xFF09;" class="headerlink" title="&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x968F;&#x673A;&#x6811;&#xFF08;&#xFF08;Rapidly-Exploring Random Tree, RRT&#xFF09;&#xFF09;"></a>&#x5FEB;&#x901F;&#x641C;&#x7D22;&#x968F;&#x673A;&#x6811;&#xFF08;&#xFF08;Rapidly-Exploring Random Tree, RRT&#xFF09;&#xFF09;</h2><ol><li><strong>&#x91C7;&#x6837;</strong>&#xFF1A;&#x4F9D;&#x636E;&#x4E00;&#x4E2A;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x968F;&#x673A;&#x91C7;&#x6837;&#x751F;&#x6210;&#x968F;&#x673A;&#x4F4D;&#x5F62; qrand&#xFF08;&#x4E0E;PRM&#x7C7B;&#x4F3C;&#xFF09;&#x3002;</li><li><strong>&#x8FDE;&#x63A5;</strong>&#xFF1A;&#x5728; T &#x4E0A;&#x627E;&#x5230;&#x6700;&#x9760;&#x8FD1; qrand &#x7684;&#x4F4D;&#x5F62; qnear&#xFF0C;&#x5E76;&#x5728;&#x4ECE; qnear &#x5230; qrand &#x7684;&#x8FDE;&#x7EBF;&#x4E0A;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x5019;&#x9009;&#x70B9; qnew&#xFF0C;&#x4F7F;&#x4E4B;&#x5230; qnear &#x7684;&#x8DDD;&#x79BB;&#x4E3A;&#x9884;&#x5148;&#x7ED9;&#x5B9A;&#x7684;&#x503C; &#x3B4;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8FDB;&#x884C;&#x78B0;&#x649E;&#x68C0;&#x6D4B;&#xFF0C;&#x5982;&#x679C; qnear &#x5230; qnew &#x7684;&#x8FDE;&#x7EBF;&#x6BB5;&#x5C5E;&#x4E8E; Qfree&#xFF0C;&#x5219;&#x5C06;&#x8BE5;&#x8FDE;&#x7EBF;&#x6BB5;&#x548C; qnew &#x6DFB;&#x52A0;&#x5230; T &#x4E2D;&#x3002;<br>&#x6CE8;&#x610F; qrand &#x5E76;&#x672A;&#x88AB;&#x6DFB;&#x52A0;&#x5230; T &#x4E2D;&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x6807;&#x8BC6; T &#x7684;&#x751F;&#x957F;&#x65B9;&#x5411;&#x3002;&#x4E3A;&#x52A0;&#x901F;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;&#xFF0C;&#x53CC;&#x5411;RRT&#x65B9;&#x6CD5;&#x91C7;&#x7528;&#x4E24;&#x4E2A;&#x5206;&#x522B;&#x4EE5; qs &#x548C; qg &#x4E3A;&#x6839;&#x8282;&#x70B9;&#x7684;&#x6811; Ts &#x548C; Tg&#x3002;&#x8FED;&#x4EE3;&#x5230;&#x4E00;&#x5B9A;&#x6B65;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7B97;&#x6CD5;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#xFF1B;</li><li><strong>&#x4E24;&#x68F5;&#x6811;&#x8FDE;&#x63A5;</strong>&#xFF1A;&#x901A;&#x8FC7;&#x4EA7;&#x751F;&#x4E00;&#x4E2A; qnew &#x4F5C;&#x4E3A; $T_s$ &#x7684;&#x751F;&#x957F;&#x70B9;&#x5E76;&#x5C1D;&#x8BD5;&#x5C06; $T_g$ &#x8FDE;&#x63A5;&#x5230;&#x8BE5;&#x70B9;&#x3002;&#x6B64;&#x65F6;&#x7684;&#x8BA1;&#x7B97;&#x6B65;&#x957F;&#x662F;&#x53EF;&#x53D8;&#x7684;&#x800C;&#x975E;&#x5E38;&#x6570; $&#x3B4;$&#x3002;</li></ol><p>&#x4F18;&#x70B9;&#xFF1A;<br>&#x590D;&#x6742;&#x5EA6;&#x4E3B;&#x8981;&#x51B3;&#x5B9A;&#x4E8E;&#x5BFB;&#x627E;&#x8DEF;&#x5F84;&#x7684;&#x96BE;&#x5EA6;&#xFF0C;&#x8DDF;&#x6574;&#x4E2A;&#x89C4;&#x5212;&#x573A;&#x666F;&#x7684;&#x5927;&#x5C0F;&#x548C;&#x6784;&#x578B;&#x7A7A;&#x95F4;&#x7684;&#x7EF4;&#x6570;&#x57FA;&#x672C;&#x65E0;&#x5173;</p><p>&#x7F3A;&#x70B9;&#xFF1A;</p><ol><li>&#x57FA;&#x672C;&#x65E0;bias&#x7684;RRT&#x4F1A;&#x5728;&#x7A7A;&#x95F4;&#x968F;&#x673A;&#x6269;&#x5C55;</li><li>&#x8F93;&#x51FA;&#x8DEF;&#x5F84;&#x975E;&#x6700;&#x4F18;&#x8DEF;&#x5F84;</li></ol><h1 id="&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;"><a href="#&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;" class="headerlink" title="&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;"></a>&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;</h1><p>&#x53F3;&#x952E;&#x4FDD;&#x5B58;~<br><img src="/posts/1d9c933b/&#x671F;&#x672B;&#x590D;&#x4E60;&#x7B14;&#x8BB0;.jpg" alt=""></p><h1 id="&#x7591;&#x95EE;"><a href="#&#x7591;&#x95EE;" class="headerlink" title="&#x7591;&#x95EE;"></a>&#x7591;&#x95EE;</h1><p><strong>&#x68AF;&#x5EA6;</strong>&#x90E8;&#x5206;&#xFF0C;&#x68AF;&#x5EA6;&#x662F;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#x7684;&#x4E8C;&#x7EF4;&#x7B49;&#x6548;&#x5F0F;&#xFF0C;&#x8FD9;&#x53E5;&#x8BDD;&#x548B;&#x7406;&#x89E3;&#xFF1F;&#x662F;&#x8BF4;&#x5BF9;G(x,y)&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x90FD;&#x6C42;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#xFF0C;&#x7EC4;&#x6210;&#x7684;&#x5411;&#x91CF;&#x5417;&#xFF1F;</p><p>&#x68AF;&#x5EA6;&#x7684;&#x5E45;&#x5EA6;&#x503C;&#x662F;&#x4E0E;&#x65B9;&#x5411;&#x65E0;&#x5173;&#x7684;&#xFF0C;&#x7B97;&#x5B50;&#x662F;&#x5404;&#x5411;&#x540C;&#x6027;&#x7B97;&#x5B50;&#x3002;&#x600E;&#x4E48;&#x7406;&#x89E3;&#x5404;&#x5411;&#x540C;&#x6027;&#xFF1F;</p><p>PPT ch3 94&#x9875; 95&#x9875; 101&#x9875; 105&#x9875; 134</p><p>Canny&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x7B97;&#x6CD5;&#x8BA1;&#x7B97;&#x65B9;&#x5411;&#x89D2;&#x95EE;&#x9898;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x667A;&amp;#x80FD;&amp;#x673A;&amp;#x5668;&amp;#x4EBA;&amp;#x590D;&amp;#x4E60;&amp;#x7B14;&amp;#x8BB0;&amp;#xFF0C;&amp;#x4EB2;&amp;#x5A18;&amp;#x561E;&amp;#xFF0C;&amp;#x8981;&amp;#x4EBA;&amp;#x547D;&amp;#x4E86;&amp;#x3002;T_T&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="智能机器人" scheme="https://www.windsings.com/categories/%E6%99%BA%E8%83%BD%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
    
      <category term="笔记" scheme="https://www.windsings.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="OpenCV" scheme="https://www.windsings.com/tags/OpenCV/"/>
    
      <category term="智能机器人" scheme="https://www.windsings.com/tags/%E6%99%BA%E8%83%BD%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
      <category term="SLAM" scheme="https://www.windsings.com/tags/SLAM/"/>
    
      <category term="计算机视觉" scheme="https://www.windsings.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="机器人" scheme="https://www.windsings.com/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
</feed>
